# Code generated by font_to_py.py.
# Font: MiSans Latin VF.ttf Char set: 0123456789:
# Cmd: H:\pgs\mpython\g\font\ptm字体文件\font_to_py.py -x -c 1234567890: MiSans Latin VF.ttf 20 MiSans Latin VF.py
version = '0.33'
def height():
    return 19

def baseline():
    return 19

def max_width():
    return 17

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 48

def max_ch():
    return 63

_font =\
b'\x0d\x00\x0f\x80\x1f\xe0\x38\x70\x70\x30\x00\x30\x00\x30\x00\x70'\
b'\x00\xe0\x01\xc0\x03\x80\x03\x00\x03\x00\x03\x00\x00\x00\x00\x00'\
b'\x00\x00\x07\x00\x07\x00\x07\x00\x11\x00\x03\xe0\x00\x0f\xf8\x00'\
b'\x0e\x38\x00\x18\x0c\x00\x18\x0c\x00\x30\x0e\x00\x30\x06\x00\x30'\
b'\x06\x00\x30\x06\x00\x30\x06\x00\x30\x06\x00\x30\x06\x00\x30\x06'\
b'\x00\x30\x0e\x00\x18\x0c\x00\x18\x0c\x00\x0e\x38\x00\x0f\xf8\x00'\
b'\x03\xe0\x00\x0a\x00\x0e\x00\x1e\x00\x7e\x00\x66\x00\x06\x00\x06'\
b'\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06'\
b'\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x0e\x00\x0f\x80\x3f'\
b'\xe0\x38\x60\x70\x30\x20\x30\x00\x30\x00\x30\x00\x70\x00\x60\x00'\
b'\xc0\x01\xc0\x03\x80\x07\x00\x0e\x00\x1c\x00\x18\x00\x30\x00\x7f'\
b'\xf8\x7f\xf8\x0f\x00\x3f\xf8\x3f\xf8\x00\x30\x00\x60\x00\xe0\x01'\
b'\xc0\x03\x80\x07\x00\x07\xf0\x06\xf8\x00\x18\x00\x0c\x00\x0c\x00'\
b'\x0c\x00\x0c\x70\x1c\x3c\x38\x1f\xf0\x07\xe0\x0f\x00\x00\x70\x00'\
b'\xf0\x01\xf0\x01\xb0\x03\xb0\x03\x30\x07\x30\x0e\x30\x0c\x30\x1c'\
b'\x30\x18\x30\x38\x30\x70\x30\x7f\xfe\x7f\xfe\x00\x30\x00\x30\x00'\
b'\x30\x00\x30\x10\x00\x1f\xf8\x1f\xf8\x18\x00\x18\x00\x18\x00\x18'\
b'\x00\x18\x00\x1b\xe0\x1f\xf0\x3c\x38\x08\x1c\x00\x0c\x00\x0c\x00'\
b'\x0c\x10\x0c\x30\x1c\x3c\x38\x1f\xf0\x07\xc0\x0f\x00\x01\xc0\x03'\
b'\x80\x03\x80\x07\x00\x06\x00\x0e\x00\x1c\x00\x1f\xe0\x3f\xf0\x38'\
b'\x38\x70\x1c\x60\x0c\x60\x0c\x60\x0c\x60\x0c\x30\x18\x38\x38\x1f'\
b'\xf0\x07\xc0\x0e\x00\x7f\xf8\x7f\xf8\x00\x38\x00\x30\x00\x70\x00'\
b'\x60\x00\xe0\x00\xc0\x01\xc0\x01\x80\x01\x80\x03\x80\x03\x00\x07'\
b'\x00\x06\x00\x0e\x00\x0c\x00\x1c\x00\x18\x00\x11\x00\x03\xe0\x00'\
b'\x0f\xf8\x00\x0e\x38\x00\x18\x0c\x00\x18\x0c\x00\x18\x0c\x00\x18'\
b'\x0c\x00\x0e\x38\x00\x07\xf0\x00\x07\xf0\x00\x1c\x1c\x00\x18\x0c'\
b'\x00\x30\x06\x00\x30\x06\x00\x30\x06\x00\x38\x0e\x00\x1c\x1c\x00'\
b'\x0f\xf8\x00\x03\xe0\x00\x0f\x00\x07\xc0\x1f\xf0\x38\x38\x30\x18'\
b'\x60\x0c\x60\x0c\x60\x0c\x60\x0c\x70\x1c\x38\x38\x1f\xf8\x0f\xf0'\
b'\x00\x70\x00\xe0\x00\xc0\x01\xc0\x03\x80\x03\x80\x07\x00\x07\x00'\
b'\x00\x00\x00\x00\x00\x38\x38\x38\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x38\x38\x38'

_index =\
b'\x00\x00\x28\x00\x63\x00\x8b\x00\xb3\x00\xdb\x00\x03\x01\x2b\x01'\
b'\x53\x01\x7b\x01\xb6\x01\xde\x01\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\xf3\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)
def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 19
    return _mvfont[doff + 2:next_offs], 19, width
 
