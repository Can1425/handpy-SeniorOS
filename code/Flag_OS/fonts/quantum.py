# Code generated by font_to_py.py.
# Font: quantum.otf Char set: 0123456789:
# Cmd: font_to_py.py -x quantum.otf 25 quantum.py -c 1234567890:
version = '0.33'

def height():
    return 25

def baseline():
    return 25

def max_width():
    return 22

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 48

def max_ch():
    return 63

_font =\
b'\x14\x00\x00\xf0\x00\x03\xfc\x00\x0f\xff\x00\x1f\xff\x80\x1f\xff'\
b'\x80\x3f\x9f\xc0\x3f\x07\xc0\x3e\x07\xc0\x00\x07\xc0\x00\x07\xc0'\
b'\x00\x07\xc0\x00\x0f\xc0\x00\x1f\x80\x00\x3f\x80\x00\x7f\x00\x00'\
b'\x7e\x00\x00\x3c\x00\x00\x18\x00\x00\x08\x00\x00\x88\x00\x00\xc0'\
b'\x00\x00\xe0\x00\x00\xf0\x00\x00\xf8\x00\x00\xf8\x00\x13\x00\x00'\
b'\x00\x00\x00\x00\x00\x01\xf0\x00\x07\xfc\x00\x0f\xfe\x00\x1f\xff'\
b'\x00\x0f\xff\x00\x07\x1f\x80\x22\x0f\x80\x20\x0f\x80\x30\x0f\x80'\
b'\x38\x0f\x80\x3c\x0f\x80\x3c\x0f\x80\x3c\x0f\x80\x3c\x07\x80\x3c'\
b'\x03\x80\x3c\x01\x80\x3e\x00\x80\x3e\x18\x00\x3f\xfc\x00\x1f\xfe'\
b'\x00\x0f\xfe\x00\x07\xfc\x00\x01\xf0\x00\x11\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\xfe\x00\x01\xfe\x00\x03\xfe\x00\x07\xfe\x00\x0f\xfe'\
b'\x00\x1f\xfe\x00\x3f\xbe\x00\x00\x3e\x00\x00\x1e\x00\x00\x1e\x00'\
b'\x00\x0e\x00\x00\x06\x00\x00\x02\x00\x00\x20\x00\x00\x30\x00\x00'\
b'\x38\x00\x00\x3c\x00\x00\x3e\x00\x00\x3e\x00\x00\x3e\x00\x00\x3e'\
b'\x00\x00\x3e\x00\x00\x3e\x00\x16\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x1e\x00\x00\xff\x80\x01\xff\xc0\x03\xff\xe0\x03\xff\xf0\x07\xe3'\
b'\xf0\x07\xc1\xf0\x07\xc0\xf0\x07\xc0\xf0\x07\xc1\xf0\x00\x01\xf0'\
b'\x00\x00\xf0\x00\x08\x60\x00\x1c\x00\x00\x3e\x00\x00\x7f\x00\x00'\
b'\xfe\x00\x01\xfc\x00\x03\xff\xf0\x07\xff\xf0\x0f\xff\xf0\x1f\xff'\
b'\xf0\x3f\xff\xf0\x11\x00\x00\x00\x00\x00\x00\x00\x3f\xe0\x00\x3f'\
b'\xf8\x00\x3f\xfc\x00\x3f\xfe\x00\x3f\xfe\x00\x00\x3e\x00\x00\x3e'\
b'\x00\x00\x3e\x00\x00\xfe\x00\x01\xfc\x00\x03\xfc\x00\x03\xf8\x00'\
b'\x03\xfc\x00\x01\xfc\x00\x00\xfe\x00\x00\x7e\x00\x00\x3e\x00\x00'\
b'\x3e\x00\x3c\x3e\x00\x3e\x1e\x00\x3f\x0c\x00\x3f\x80\x00\x3f\xc0'\
b'\x00\x12\x00\x00\x00\x00\x00\x00\x00\x3e\x1f\x00\x3e\x1f\x00\x3e'\
b'\x1f\x00\x3e\x1f\x00\x3e\x1f\x00\x3e\x1f\x00\x3e\x1f\x00\x3e\x1f'\
b'\x00\x3e\x1f\x00\x3f\xff\x00\x3f\xff\x00\x3f\xff\x00\x3f\xff\x00'\
b'\x3f\xff\x00\x00\x03\x00\x00\x01\x00\x00\x10\x00\x00\x18\x00\x00'\
b'\x1c\x00\x00\x1e\x00\x00\x1f\x00\x00\x1f\x00\x00\x1f\x00\x13\x00'\
b'\x00\x00\x00\x00\x00\x00\x3f\xff\x00\x3f\xff\x00\x3f\xff\x00\x3f'\
b'\xff\x00\x3f\xff\x00\x3e\x00\x00\x3e\x00\x00\x3f\xf8\x00\x3f\xfc'\
b'\x00\x3f\xfe\x00\x3f\xff\x00\x3f\xff\x00\x00\x1f\x80\x00\x0f\x80'\
b'\x00\x0f\x80\x00\x07\x80\x00\x03\x80\x00\x01\x00\x3f\xf0\x00\x3f'\
b'\xf8\x00\x3f\xfc\x00\x3f\xf8\x00\x3f\xf0\x00\x11\x00\x00\x00\x00'\
b'\x00\x00\x00\x03\xf8\x00\x07\xf0\x00\x0f\xe0\x00\x1f\xc0\x00\x3f'\
b'\x80\x00\x3f\x00\x00\x3e\x00\x00\x3e\x00\x00\x3e\x00\x00\x3f\xf0'\
b'\x00\x3f\xf0\x00\x3f\xe0\x00\x3f\xc2\x00\x3f\x86\x00\x3e\x0f\x00'\
b'\x3e\x1f\x00\x3e\x1f\x00\x3e\x3f\x00\x3f\xfe\x00\x1f\xfe\x00\x1f'\
b'\xfc\x00\x0f\xf8\x00\x03\xe0\x00\x11\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x3f\xfe\x00\x3f\xfe\x00\x3f\xfe\x00\x3f\xfc\x00\x00'\
b'\x7c\x00\x00\x7c\x00\x00\xf8\x00\x00\xf8\x00\x00\xf8\x00\x01\xf0'\
b'\x00\x00\xf0\x00\x00\x70\x00\x00\x30\x00\x02\x00\x00\x03\x00\x00'\
b'\x03\x80\x00\x07\xc0\x00\x07\xc0\x00\x07\xc0\x00\x0f\x80\x00\x0f'\
b'\x80\x00\x0f\x80\x00\x11\x00\x00\x00\x00\x00\x00\x00\x03\xe0\x00'\
b'\x07\xf8\x00\x03\xfc\x00\x01\xfe\x00\x30\xfe\x00\x38\x3e\x00\x3c'\
b'\x1f\x00\x3e\x1e\x00\x3e\x3e\x00\x3f\xfe\x00\x1f\xfe\x00\x1f\xfc'\
b'\x00\x1f\xfe\x00\x3f\xfe\x00\x3e\x3e\x00\x3e\x1f\x00\x3e\x1f\x00'\
b'\x3e\x3e\x00\x3f\xfe\x00\x1f\xfe\x00\x1f\xfc\x00\x0f\xf8\x00\x03'\
b'\xe0\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xf0\x00'\
b'\x0f\xf8\x00\x1f\xfc\x00\x3f\xfe\x00\x3f\x7e\x00\x3e\x3f\x00\x3e'\
b'\x1f\x00\x3c\x3f\x00\x38\x7f\x00\x30\xff\x00\x01\xff\x00\x03\xff'\
b'\x00\x07\xff\x00\x00\x1f\x00\x00\x1f\x00\x00\x3f\x00\x00\x7f\x00'\
b'\x00\xfe\x00\x01\xfc\x00\x03\xf8\x00\x07\xf0\x00\x0f\xe0\x00'

_index =\
b'\x00\x00\x4d\x00\x9a\x00\xe7\x00\x34\x01\x81\x01\xce\x01\x1b\x02'\
b'\x68\x02\xb5\x02\x02\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x4f\x03'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 25
    return _mvfont[doff + 2:next_offs], 25, width
 
