Search.setIndex({"docnames": ["about", "bugs", "c-api/abstract", "c-api/allocation", "c-api/apiabiversion", "c-api/arg", "c-api/bool", "c-api/buffer", "c-api/bytearray", "c-api/bytes", "c-api/call", "c-api/capsule", "c-api/cell", "c-api/code", "c-api/codec", "c-api/complex", "c-api/concrete", "c-api/contextvars", "c-api/conversion", "c-api/coro", "c-api/datetime", "c-api/descriptor", "c-api/dict", "c-api/exceptions", "c-api/file", "c-api/float", "c-api/frame", "c-api/function", "c-api/gcsupport", "c-api/gen", "c-api/import", "c-api/index", "c-api/init", "c-api/init_config", "c-api/intro", "c-api/iter", "c-api/iterator", "c-api/list", "c-api/long", "c-api/mapping", "c-api/marshal", "c-api/memory", "c-api/memoryview", "c-api/method", "c-api/module", "c-api/none", "c-api/number", "c-api/objbuffer", "c-api/object", "c-api/objimpl", "c-api/perfmaps", "c-api/refcounting", "c-api/reflection", "c-api/sequence", "c-api/set", "c-api/slice", "c-api/stable", "c-api/structures", "c-api/sys", "c-api/tuple", "c-api/type", "c-api/typehints", "c-api/typeobj", "c-api/unicode", "c-api/utilities", "c-api/veryhigh", "c-api/weakref", "contents", "copyright", "distributing/index", "extending/building", "extending/embedding", "extending/extending", "extending/index", "extending/newtypes", "extending/newtypes_tutorial", "extending/windows", "faq/design", "faq/extending", "faq/general", "faq/gui", "faq/index", "faq/installed", "faq/library", "faq/programming", "faq/windows", "glossary", "howto/annotations", "howto/argparse", "howto/clinic", "howto/cporting", "howto/curses", "howto/descriptor", "howto/enum", "howto/functional", "howto/index", "howto/instrumentation", "howto/ipaddress", "howto/isolating-extensions", "howto/logging", "howto/logging-cookbook", "howto/perf_profiling", "howto/pyporting", "howto/regex", "howto/sockets", "howto/sorting", "howto/unicode", "howto/urllib2", "installing/index", "library/2to3", "library/__future__", "library/__main__", "library/_thread", "library/abc", "library/aifc", "library/allos", "library/archiving", "library/argparse", "library/array", "library/ast", "library/asyncio", "library/asyncio-api-index", "library/asyncio-dev", "library/asyncio-eventloop", "library/asyncio-exceptions", "library/asyncio-extending", "library/asyncio-future", "library/asyncio-llapi-index", "library/asyncio-platforms", "library/asyncio-policy", "library/asyncio-protocol", "library/asyncio-queue", "library/asyncio-runner", "library/asyncio-stream", "library/asyncio-subprocess", "library/asyncio-sync", "library/asyncio-task", "library/atexit", "library/audioop", "library/audit_events", "library/base64", "library/bdb", "library/binary", "library/binascii", "library/bisect", "library/builtins", "library/bz2", "library/calendar", "library/cgi", "library/cgitb", "library/chunk", "library/cmath", "library/cmd", "library/cmdline", "library/code", "library/codecs", "library/codeop", "library/collections", "library/collections.abc", "library/colorsys", "library/compileall", "library/concurrency", "library/concurrent", "library/concurrent.futures", "library/configparser", "library/constants", "library/contextlib", "library/contextvars", "library/copy", "library/copyreg", "library/crypt", "library/crypto", "library/csv", "library/ctypes", "library/curses", "library/curses.ascii", "library/curses.panel", "library/custominterp", "library/dataclasses", "library/datatypes", "library/datetime", "library/dbm", "library/debug", "library/decimal", "library/development", "library/devmode", "library/dialog", "library/difflib", "library/dis", "library/distribution", "library/doctest", "library/email", "library/email.charset", "library/email.compat32-message", "library/email.contentmanager", "library/email.encoders", "library/email.errors", "library/email.examples", "library/email.generator", "library/email.header", "library/email.headerregistry", "library/email.iterators", "library/email.message", "library/email.mime", "library/email.parser", "library/email.policy", "library/email.utils", "library/ensurepip", "library/enum", "library/errno", "library/exceptions", "library/faulthandler", "library/fcntl", "library/filecmp", "library/fileformats", "library/fileinput", "library/filesys", "library/fnmatch", "library/fractions", "library/frameworks", "library/ftplib", "library/functional", "library/functions", "library/functools", "library/gc", "library/getopt", "library/getpass", "library/gettext", "library/glob", "library/graphlib", "library/grp", "library/gzip", "library/hashlib", "library/heapq", "library/hmac", "library/html", "library/html.entities", "library/html.parser", "library/http", "library/http.client", "library/http.cookiejar", "library/http.cookies", "library/http.server", "library/i18n", "library/idle", "library/imaplib", "library/imghdr", "library/importlib", "library/importlib.metadata", "library/importlib.resources", "library/importlib.resources.abc", "library/index", "library/inspect", "library/internet", "library/intro", "library/io", "library/ipaddress", "library/ipc", "library/itertools", "library/json", "library/keyword", "library/language", "library/linecache", "library/locale", "library/logging", "library/logging.config", "library/logging.handlers", "library/lzma", "library/mailbox", "library/mailcap", "library/markup", "library/marshal", "library/math", "library/mimetypes", "library/mm", "library/mmap", "library/modulefinder", "library/modules", "library/msilib", "library/msvcrt", "library/multiprocessing", "library/multiprocessing.shared_memory", "library/netdata", "library/netrc", "library/nis", "library/nntplib", "library/numbers", "library/numeric", "library/operator", "library/optparse", "library/os", "library/os.path", "library/ossaudiodev", "library/pathlib", "library/pdb", "library/persistence", "library/pickle", "library/pickletools", "library/pipes", "library/pkgutil", "library/platform", "library/plistlib", "library/poplib", "library/posix", "library/pprint", "library/profile", "library/pty", "library/pwd", "library/py_compile", "library/pyclbr", "library/pydoc", "library/pyexpat", "library/python", "library/queue", "library/quopri", "library/random", "library/re", "library/readline", "library/reprlib", "library/resource", "library/rlcompleter", "library/runpy", "library/sched", "library/secrets", "library/security_warnings", "library/select", "library/selectors", "library/shelve", "library/shlex", "library/shutil", "library/signal", "library/site", "library/smtplib", "library/sndhdr", "library/socket", "library/socketserver", "library/spwd", "library/sqlite3", "library/ssl", "library/stat", "library/statistics", "library/stdtypes", "library/string", "library/stringprep", "library/struct", "library/subprocess", "library/sunau", "library/superseded", "library/symtable", "library/sys", "library/sys.monitoring", "library/sys_path_init", "library/sysconfig", "library/syslog", "library/tabnanny", "library/tarfile", "library/telnetlib", "library/tempfile", "library/termios", "library/test", "library/text", "library/textwrap", "library/threading", "library/time", "library/timeit", "library/tk", "library/tkinter", "library/tkinter.colorchooser", "library/tkinter.dnd", "library/tkinter.font", "library/tkinter.messagebox", "library/tkinter.scrolledtext", "library/tkinter.tix", "library/tkinter.ttk", "library/token", "library/tokenize", "library/tomllib", "library/trace", "library/traceback", "library/tracemalloc", "library/tty", "library/turtle", "library/types", "library/typing", "library/unicodedata", "library/unittest", "library/unittest.mock", "library/unittest.mock-examples", "library/unix", "library/urllib", "library/urllib.error", "library/urllib.parse", "library/urllib.request", "library/urllib.robotparser", "library/uu", "library/uuid", "library/venv", "library/warnings", "library/wave", "library/weakref", "library/webbrowser", "library/windows", "library/winreg", "library/winsound", "library/wsgiref", "library/xdrlib", "library/xml", "library/xml.dom", "library/xml.dom.minidom", "library/xml.dom.pulldom", "library/xml.etree.elementtree", "library/xml.sax", "library/xml.sax.handler", "library/xml.sax.reader", "library/xml.sax.utils", "library/xmlrpc", "library/xmlrpc.client", "library/xmlrpc.server", "library/zipapp", "library/zipfile", "library/zipimport", "library/zlib", "library/zoneinfo", "license", "reference/compound_stmts", "reference/datamodel", "reference/executionmodel", "reference/expressions", "reference/grammar", "reference/import", "reference/index", "reference/introduction", "reference/lexical_analysis", "reference/simple_stmts", "reference/toplevel_components", "tutorial/appendix", "tutorial/appetite", "tutorial/classes", "tutorial/controlflow", "tutorial/datastructures", "tutorial/errors", "tutorial/floatingpoint", "tutorial/index", "tutorial/inputoutput", "tutorial/interactive", "tutorial/interpreter", "tutorial/introduction", "tutorial/modules", "tutorial/stdlib", "tutorial/stdlib2", "tutorial/venv", "tutorial/whatnow", "using/cmdline", "using/configure", "using/editors", "using/index", "using/mac", "using/unix", "using/windows", "whatsnew/2.0", "whatsnew/2.1", "whatsnew/2.2", "whatsnew/2.3", "whatsnew/2.4", "whatsnew/2.5", "whatsnew/2.6", "whatsnew/2.7", "whatsnew/3.0", "whatsnew/3.1", "whatsnew/3.10", "whatsnew/3.11", "whatsnew/3.12", "whatsnew/3.2", "whatsnew/3.3", "whatsnew/3.4", "whatsnew/3.5", "whatsnew/3.6", "whatsnew/3.7", "whatsnew/3.8", "whatsnew/3.9", "whatsnew/changelog", "whatsnew/index"], "filenames": ["about.rst", "bugs.rst", "c-api/abstract.rst", "c-api/allocation.rst", "c-api/apiabiversion.rst", "c-api/arg.rst", "c-api/bool.rst", "c-api/buffer.rst", "c-api/bytearray.rst", "c-api/bytes.rst", "c-api/call.rst", "c-api/capsule.rst", "c-api/cell.rst", "c-api/code.rst", "c-api/codec.rst", "c-api/complex.rst", "c-api/concrete.rst", "c-api/contextvars.rst", "c-api/conversion.rst", "c-api/coro.rst", "c-api/datetime.rst", "c-api/descriptor.rst", "c-api/dict.rst", "c-api/exceptions.rst", "c-api/file.rst", "c-api/float.rst", "c-api/frame.rst", "c-api/function.rst", "c-api/gcsupport.rst", "c-api/gen.rst", "c-api/import.rst", "c-api/index.rst", "c-api/init.rst", "c-api/init_config.rst", "c-api/intro.rst", "c-api/iter.rst", "c-api/iterator.rst", "c-api/list.rst", "c-api/long.rst", "c-api/mapping.rst", "c-api/marshal.rst", "c-api/memory.rst", "c-api/memoryview.rst", "c-api/method.rst", "c-api/module.rst", "c-api/none.rst", "c-api/number.rst", "c-api/objbuffer.rst", "c-api/object.rst", "c-api/objimpl.rst", "c-api/perfmaps.rst", "c-api/refcounting.rst", "c-api/reflection.rst", "c-api/sequence.rst", "c-api/set.rst", "c-api/slice.rst", "c-api/stable.rst", "c-api/structures.rst", "c-api/sys.rst", "c-api/tuple.rst", "c-api/type.rst", "c-api/typehints.rst", "c-api/typeobj.rst", "c-api/unicode.rst", "c-api/utilities.rst", "c-api/veryhigh.rst", "c-api/weakref.rst", "contents.rst", "copyright.rst", "distributing/index.rst", "extending/building.rst", "extending/embedding.rst", "extending/extending.rst", "extending/index.rst", "extending/newtypes.rst", "extending/newtypes_tutorial.rst", "extending/windows.rst", "faq/design.rst", "faq/extending.rst", "faq/general.rst", "faq/gui.rst", "faq/index.rst", "faq/installed.rst", "faq/library.rst", "faq/programming.rst", "faq/windows.rst", "glossary.rst", "howto/annotations.rst", "howto/argparse.rst", "howto/clinic.rst", "howto/cporting.rst", "howto/curses.rst", "howto/descriptor.rst", "howto/enum.rst", "howto/functional.rst", "howto/index.rst", "howto/instrumentation.rst", "howto/ipaddress.rst", "howto/isolating-extensions.rst", "howto/logging.rst", "howto/logging-cookbook.rst", "howto/perf_profiling.rst", "howto/pyporting.rst", "howto/regex.rst", "howto/sockets.rst", "howto/sorting.rst", "howto/unicode.rst", "howto/urllib2.rst", "installing/index.rst", "library/2to3.rst", "library/__future__.rst", "library/__main__.rst", "library/_thread.rst", "library/abc.rst", "library/aifc.rst", "library/allos.rst", "library/archiving.rst", "library/argparse.rst", "library/array.rst", "library/ast.rst", "library/asyncio.rst", "library/asyncio-api-index.rst", "library/asyncio-dev.rst", "library/asyncio-eventloop.rst", "library/asyncio-exceptions.rst", "library/asyncio-extending.rst", "library/asyncio-future.rst", "library/asyncio-llapi-index.rst", "library/asyncio-platforms.rst", "library/asyncio-policy.rst", "library/asyncio-protocol.rst", "library/asyncio-queue.rst", "library/asyncio-runner.rst", "library/asyncio-stream.rst", "library/asyncio-subprocess.rst", "library/asyncio-sync.rst", "library/asyncio-task.rst", "library/atexit.rst", "library/audioop.rst", "library/audit_events.rst", "library/base64.rst", "library/bdb.rst", "library/binary.rst", "library/binascii.rst", "library/bisect.rst", "library/builtins.rst", "library/bz2.rst", "library/calendar.rst", "library/cgi.rst", "library/cgitb.rst", "library/chunk.rst", "library/cmath.rst", "library/cmd.rst", "library/cmdline.rst", "library/code.rst", "library/codecs.rst", "library/codeop.rst", "library/collections.rst", "library/collections.abc.rst", "library/colorsys.rst", "library/compileall.rst", "library/concurrency.rst", "library/concurrent.rst", "library/concurrent.futures.rst", "library/configparser.rst", "library/constants.rst", "library/contextlib.rst", "library/contextvars.rst", "library/copy.rst", "library/copyreg.rst", "library/crypt.rst", "library/crypto.rst", "library/csv.rst", "library/ctypes.rst", "library/curses.rst", "library/curses.ascii.rst", "library/curses.panel.rst", "library/custominterp.rst", "library/dataclasses.rst", "library/datatypes.rst", "library/datetime.rst", "library/dbm.rst", "library/debug.rst", "library/decimal.rst", "library/development.rst", "library/devmode.rst", "library/dialog.rst", "library/difflib.rst", "library/dis.rst", "library/distribution.rst", "library/doctest.rst", "library/email.rst", "library/email.charset.rst", "library/email.compat32-message.rst", "library/email.contentmanager.rst", "library/email.encoders.rst", "library/email.errors.rst", "library/email.examples.rst", "library/email.generator.rst", "library/email.header.rst", "library/email.headerregistry.rst", "library/email.iterators.rst", "library/email.message.rst", "library/email.mime.rst", "library/email.parser.rst", "library/email.policy.rst", "library/email.utils.rst", "library/ensurepip.rst", "library/enum.rst", "library/errno.rst", "library/exceptions.rst", "library/faulthandler.rst", "library/fcntl.rst", "library/filecmp.rst", "library/fileformats.rst", "library/fileinput.rst", "library/filesys.rst", "library/fnmatch.rst", "library/fractions.rst", "library/frameworks.rst", "library/ftplib.rst", "library/functional.rst", "library/functions.rst", "library/functools.rst", "library/gc.rst", "library/getopt.rst", "library/getpass.rst", "library/gettext.rst", "library/glob.rst", "library/graphlib.rst", "library/grp.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/hmac.rst", "library/html.rst", "library/html.entities.rst", "library/html.parser.rst", "library/http.rst", "library/http.client.rst", "library/http.cookiejar.rst", "library/http.cookies.rst", "library/http.server.rst", "library/i18n.rst", "library/idle.rst", "library/imaplib.rst", "library/imghdr.rst", "library/importlib.rst", "library/importlib.metadata.rst", "library/importlib.resources.rst", "library/importlib.resources.abc.rst", "library/index.rst", "library/inspect.rst", "library/internet.rst", "library/intro.rst", "library/io.rst", "library/ipaddress.rst", "library/ipc.rst", "library/itertools.rst", "library/json.rst", "library/keyword.rst", "library/language.rst", "library/linecache.rst", "library/locale.rst", "library/logging.rst", "library/logging.config.rst", "library/logging.handlers.rst", "library/lzma.rst", "library/mailbox.rst", "library/mailcap.rst", "library/markup.rst", "library/marshal.rst", "library/math.rst", "library/mimetypes.rst", "library/mm.rst", "library/mmap.rst", "library/modulefinder.rst", "library/modules.rst", "library/msilib.rst", "library/msvcrt.rst", "library/multiprocessing.rst", "library/multiprocessing.shared_memory.rst", "library/netdata.rst", "library/netrc.rst", "library/nis.rst", "library/nntplib.rst", "library/numbers.rst", "library/numeric.rst", "library/operator.rst", "library/optparse.rst", "library/os.rst", "library/os.path.rst", "library/ossaudiodev.rst", "library/pathlib.rst", "library/pdb.rst", "library/persistence.rst", "library/pickle.rst", "library/pickletools.rst", "library/pipes.rst", "library/pkgutil.rst", "library/platform.rst", "library/plistlib.rst", "library/poplib.rst", "library/posix.rst", "library/pprint.rst", "library/profile.rst", "library/pty.rst", "library/pwd.rst", "library/py_compile.rst", "library/pyclbr.rst", "library/pydoc.rst", "library/pyexpat.rst", "library/python.rst", "library/queue.rst", "library/quopri.rst", "library/random.rst", "library/re.rst", "library/readline.rst", "library/reprlib.rst", "library/resource.rst", "library/rlcompleter.rst", "library/runpy.rst", "library/sched.rst", "library/secrets.rst", "library/security_warnings.rst", "library/select.rst", "library/selectors.rst", "library/shelve.rst", "library/shlex.rst", "library/shutil.rst", "library/signal.rst", "library/site.rst", "library/smtplib.rst", "library/sndhdr.rst", "library/socket.rst", "library/socketserver.rst", "library/spwd.rst", "library/sqlite3.rst", "library/ssl.rst", "library/stat.rst", "library/statistics.rst", "library/stdtypes.rst", "library/string.rst", "library/stringprep.rst", "library/struct.rst", "library/subprocess.rst", "library/sunau.rst", "library/superseded.rst", "library/symtable.rst", "library/sys.rst", "library/sys.monitoring.rst", "library/sys_path_init.rst", "library/sysconfig.rst", "library/syslog.rst", "library/tabnanny.rst", "library/tarfile.rst", "library/telnetlib.rst", "library/tempfile.rst", "library/termios.rst", "library/test.rst", "library/text.rst", "library/textwrap.rst", "library/threading.rst", "library/time.rst", "library/timeit.rst", "library/tk.rst", "library/tkinter.rst", "library/tkinter.colorchooser.rst", "library/tkinter.dnd.rst", "library/tkinter.font.rst", "library/tkinter.messagebox.rst", "library/tkinter.scrolledtext.rst", "library/tkinter.tix.rst", "library/tkinter.ttk.rst", "library/token.rst", "library/tokenize.rst", "library/tomllib.rst", "library/trace.rst", "library/traceback.rst", "library/tracemalloc.rst", "library/tty.rst", "library/turtle.rst", "library/types.rst", "library/typing.rst", "library/unicodedata.rst", "library/unittest.rst", "library/unittest.mock.rst", "library/unittest.mock-examples.rst", "library/unix.rst", "library/urllib.rst", "library/urllib.error.rst", "library/urllib.parse.rst", "library/urllib.request.rst", "library/urllib.robotparser.rst", "library/uu.rst", "library/uuid.rst", "library/venv.rst", "library/warnings.rst", "library/wave.rst", "library/weakref.rst", "library/webbrowser.rst", "library/windows.rst", "library/winreg.rst", "library/winsound.rst", "library/wsgiref.rst", "library/xdrlib.rst", "library/xml.rst", "library/xml.dom.rst", "library/xml.dom.minidom.rst", "library/xml.dom.pulldom.rst", "library/xml.etree.elementtree.rst", "library/xml.sax.rst", "library/xml.sax.handler.rst", "library/xml.sax.reader.rst", "library/xml.sax.utils.rst", "library/xmlrpc.rst", "library/xmlrpc.client.rst", "library/xmlrpc.server.rst", "library/zipapp.rst", "library/zipfile.rst", "library/zipimport.rst", "library/zlib.rst", "library/zoneinfo.rst", "license.rst", "reference/compound_stmts.rst", "reference/datamodel.rst", "reference/executionmodel.rst", "reference/expressions.rst", "reference/grammar.rst", "reference/import.rst", "reference/index.rst", "reference/introduction.rst", "reference/lexical_analysis.rst", "reference/simple_stmts.rst", "reference/toplevel_components.rst", "tutorial/appendix.rst", "tutorial/appetite.rst", "tutorial/classes.rst", "tutorial/controlflow.rst", "tutorial/datastructures.rst", "tutorial/errors.rst", "tutorial/floatingpoint.rst", "tutorial/index.rst", "tutorial/inputoutput.rst", "tutorial/interactive.rst", "tutorial/interpreter.rst", "tutorial/introduction.rst", "tutorial/modules.rst", "tutorial/stdlib.rst", "tutorial/stdlib2.rst", "tutorial/venv.rst", "tutorial/whatnow.rst", "using/cmdline.rst", "using/configure.rst", "using/editors.rst", "using/index.rst", "using/mac.rst", "using/unix.rst", "using/windows.rst", "whatsnew/2.0.rst", "whatsnew/2.1.rst", "whatsnew/2.2.rst", "whatsnew/2.3.rst", "whatsnew/2.4.rst", "whatsnew/2.5.rst", "whatsnew/2.6.rst", "whatsnew/2.7.rst", "whatsnew/3.0.rst", "whatsnew/3.1.rst", "whatsnew/3.10.rst", "whatsnew/3.11.rst", "whatsnew/3.12.rst", "whatsnew/3.2.rst", "whatsnew/3.3.rst", "whatsnew/3.4.rst", "whatsnew/3.5.rst", "whatsnew/3.6.rst", "whatsnew/3.7.rst", "whatsnew/3.8.rst", "whatsnew/3.9.rst", "whatsnew/changelog.rst", "whatsnew/index.rst"], "titles": ["About these documents", "Dealing with Bugs", "Abstract Objects Layer", "Allocating Objects on the Heap", "API and ABI Versioning", "Parsing arguments and building values", "Boolean Objects", "Buffer Protocol", "Byte Array Objects", "Bytes Objects", "Call Protocol", "Capsules", "Cell Objects", "Code Objects", "Codec registry and support functions", "Complex Number Objects", "Concrete Objects Layer", "Context Variables Objects", "String conversion and formatting", "Coroutine Objects", "DateTime Objects", "Descriptor Objects", "Dictionary Objects", "Exception Handling", "File Objects", "Floating Point Objects", "Frame Objects", "Function Objects", "Supporting Cyclic Garbage Collection", "Generator Objects", "Importing Modules", "Python/C API Reference Manual", "Initialization, Finalization, and Threads", "Python Initialization Configuration", "Introduction", "Iterator Protocol", "Iterator Objects", "List Objects", "Integer Objects", "Mapping Protocol", "Data marshalling support", "Memory Management", "MemoryView objects", "Instance Method Objects", "Module Objects", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> Object", "Number Protocol", "Old Buffer Protocol", "Object Protocol", "Object Implementation Support", "Support for Perf Maps", "Reference Counting", "Reflection", "Sequence Protocol", "Set Objects", "Slice Objects", "C API Stability", "Common Object Structures", "Operating System Utilities", "Tuple Objects", "Type Objects", "Objects for Type Hinting", "Type Objects", "Unicode Objects and Codecs", "Utilities", "The Very High Level Layer", "Weak Reference Objects", "Python Documentation contents", "Copyright", "Distributing Python Modules", "<span class=\"section-number\">4. </span>Building C and C++ Extensions", "<span class=\"section-number\">1. </span>Embedding Python in Another Application", "<span class=\"section-number\">1. </span>Extending Python with C or C++", "Extending and Embedding the Python Interpreter", "<span class=\"section-number\">3. </span>Defining Extension Types: Assorted Topics", "<span class=\"section-number\">2. </span>Defining Extension Types: Tutorial", "<span class=\"section-number\">5. </span>Building C and C++ Extensions on Windows", "Design and History FAQ", "Extending/Embedding FAQ", "General Python FAQ", "Graphic User Interface FAQ", "Python Frequently Asked Questions", "\u201cWhy is Python Installed on my Computer?\u201d FAQ", "Library and Extension FAQ", "Programming FAQ", "Python on Windows FAQ", "Glossary", "Annotations Best Practices", "Argparse Tutorial", "Argument Clinic How-To", "Porting Extension Modules to Python 3", "Curses Programming with Python", "Descriptor HowTo Guide", "Enum HOWTO", "Functional Programming HOWTO", "Python HOWTOs", "Instrumenting CPython with DTrace and SystemTap", "An introduction to the ipaddress module", "Isolating Extension Modules", "Logging HOWTO", "Logging Cookbook", "Python support for the Linux <code class=\"docutils literal notranslate\"><span class=\"pre\">perf</span></code> profiler", "How to port Python 2 Code to Python 3", "Regular Expression HOWTO", "Socket Programming HOWTO", "Sorting HOW TO", "Unicode HOWTO", "HOWTO Fetch Internet Resources Using The urllib Package", "Installing Python Modules", "2to3 \u2014 Automated Python 2 to 3 code translation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__future__</span></code> \u2014 Future statement definitions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__main__</span></code> \u2014 Top-level code environment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2014 Low-level threading API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abc</span></code> \u2014 Abstract Base Classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aifc</span></code> \u2014 Read and write AIFF and AIFC files", "Generic Operating System Services", "Data Compression and Archiving", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argparse</span></code> \u2014 Parser for command-line options, arguments and sub-commands", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2014 Efficient arrays of numeric values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ast</span></code> \u2014 Abstract Syntax Trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 Asynchronous I/O", "High-level API Index", "Developing with asyncio", "Event Loop", "Exceptions", "Extending", "Futures", "Low-level API Index", "Platform Support", "Policies", "Transports and Protocols", "Queues", "Runners", "Streams", "Subprocesses", "Synchronization Primitives", "Coroutines and Tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">atexit</span></code> \u2014 Exit handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audioop</span></code> \u2014 Manipulate raw audio data", "Audit events table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">base64</span></code> \u2014 Base16, Base32, Base64, Base85 Data Encodings", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bdb</span></code> \u2014 Debugger framework", "Binary Data Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2014 Convert between binary and ASCII", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bisect</span></code> \u2014 Array bisection algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2014 Built-in objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bz2</span></code> \u2014 Support for <strong class=\"program\">bzip2</strong> compression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">calendar</span></code> \u2014 General calendar-related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cgi</span></code> \u2014 Common Gateway Interface support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cgitb</span></code> \u2014 Traceback manager for CGI scripts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">chunk</span></code> \u2014 Read IFF chunked data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2014 Mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmd</span></code> \u2014 Support for line-oriented command interpreters", "Modules command-line interface (CLI)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">code</span></code> \u2014 Interpreter base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codecs</span></code> \u2014 Codec registry and base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codeop</span></code> \u2014 Compile Python code", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2014 Container datatypes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections.abc</span></code> \u2014 Abstract Base Classes for Containers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">colorsys</span></code> \u2014 Conversions between color systems", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">compileall</span></code> \u2014 Byte-compile Python libraries", "Concurrent Execution", "The <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent</span></code> package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent.futures</span></code> \u2014 Launching parallel tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">configparser</span></code> \u2014 Configuration file parser", "Built-in Constants", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextlib</span></code> \u2014 Utilities for <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">with</span></code>-statement contexts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextvars</span></code> \u2014 Context Variables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copy</span></code> \u2014 Shallow and deep copy operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copyreg</span></code> \u2014 Register <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> support functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">crypt</span></code> \u2014 Function to check Unix passwords", "Cryptographic Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">csv</span></code> \u2014 CSV File Reading and Writing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ctypes</span></code> \u2014 A foreign function library for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses</span></code> \u2014 Terminal handling for character-cell displays", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.ascii</span></code> \u2014 Utilities for ASCII characters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.panel</span></code> \u2014 A panel stack extension for curses", "Custom Python Interpreters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataclasses</span></code> \u2014 Data Classes", "Data Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datetime</span></code> \u2014 Basic date and time types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dbm</span></code> \u2014 Interfaces to Unix \u201cdatabases\u201d", "Debugging and Profiling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">decimal</span></code> \u2014 Decimal fixed point and floating point arithmetic", "Development Tools", "Python Development Mode", "Tkinter Dialogs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">difflib</span></code> \u2014 Helpers for computing deltas", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dis</span></code> \u2014 Disassembler for Python bytecode", "Software Packaging and Distribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">doctest</span></code> \u2014 Test interactive Python examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code> \u2014 An email and MIME handling package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.charset</span></code>: Representing character sets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message.Message</span></code>: Representing an email message using the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">compat32</span></code> API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.contentmanager</span></code>: Managing MIME Content", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.encoders</span></code>: Encoders", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.errors</span></code>: Exception and Defect classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code>: Examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.generator</span></code>: Generating MIME documents", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.header</span></code>: Internationalized headers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.headerregistry</span></code>: Custom Header Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.iterators</span></code>: Iterators", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message</span></code>: Representing an email message", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.mime</span></code>: Creating email and MIME objects from scratch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.parser</span></code>: Parsing email messages", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.policy</span></code>: Policy Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.utils</span></code>: Miscellaneous utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ensurepip</span></code> \u2014 Bootstrapping the <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> installer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">enum</span></code> \u2014 Support for enumerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2014 Standard errno system symbols", "Built-in Exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">faulthandler</span></code> \u2014 Dump the Python traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> \u2014 The <code class=\"docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ioctl</span></code> system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">filecmp</span></code> \u2014 File and Directory Comparisons", "File Formats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileinput</span></code> \u2014 Iterate over lines from multiple input streams", "File and Directory Access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fnmatch</span></code> \u2014 Unix filename pattern matching", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fractions</span></code> \u2014 Rational numbers", "Program Frameworks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ftplib</span></code> \u2014 FTP protocol client", "Functional Programming Modules", "Built-in Functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">functools</span></code> \u2014 Higher-order functions and operations on callable objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2014 Garbage Collector interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getopt</span></code> \u2014 C-style parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getpass</span></code> \u2014 Portable password input", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gettext</span></code> \u2014 Multilingual internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">glob</span></code> \u2014 Unix style pathname pattern expansion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">graphlib</span></code> \u2014 Functionality to operate with graph-like structures", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">grp</span></code> \u2014 The group database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2014 Support for <strong class=\"program\">gzip</strong> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2014 Secure hashes and message digests", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2014 Heap queue algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hmac</span></code> \u2014 Keyed-Hashing for Message Authentication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html</span></code> \u2014 HyperText Markup Language support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.entities</span></code> \u2014 Definitions of HTML general entities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.parser</span></code> \u2014 Simple HTML and XHTML parser", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http</span></code> \u2014 HTTP modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.client</span></code> \u2014 HTTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookiejar</span></code> \u2014 Cookie handling for HTTP clients", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookies</span></code> \u2014 HTTP state management", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.server</span></code> \u2014 HTTP servers", "Internationalization", "IDLE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imaplib</span></code> \u2014 IMAP4 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imghdr</span></code> \u2014 Determine the type of an image", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib</span></code> \u2014 The implementation of <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.metadata</span></code> \u2013 Accessing package metadata", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources</span></code> \u2013 Package resource reading, opening and access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources.abc</span></code> \u2013 Abstract base classes for resources", "The Python Standard Library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">inspect</span></code> \u2014 Inspect live objects", "Internet Protocols and Support", "Introduction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2014 Core tools for working with streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ipaddress</span></code> \u2014 IPv4/IPv6 manipulation library", "Networking and Interprocess Communication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">itertools</span></code> \u2014 Functions creating iterators for efficient looping", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2014 JSON encoder and decoder", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">keyword</span></code> \u2014 Testing for Python keywords", "Python Language Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">linecache</span></code> \u2014 Random access to text lines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">locale</span></code> \u2014 Internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging</span></code> \u2014 Logging facility for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.config</span></code> \u2014 Logging configuration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.handlers</span></code> \u2014 Logging handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lzma</span></code> \u2014 Compression using the LZMA algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mailbox</span></code> \u2014 Manipulate mailboxes in various formats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mailcap</span></code> \u2014 Mailcap file handling", "Structured Markup Processing Tools", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">marshal</span></code> \u2014 Internal Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2014 Mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mimetypes</span></code> \u2014 Map filenames to MIME types", "Multimedia Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mmap</span></code> \u2014 Memory-mapped file support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">modulefinder</span></code> \u2014 Find modules used by a script", "Importing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">msilib</span></code> \u2014 Read and write Microsoft Installer files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">msvcrt</span></code> \u2014 Useful routines from the MS VC++ runtime", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing</span></code> \u2014 Process-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing.shared_memory</span></code> \u2014 Shared memory for direct access across processes", "Internet Data Handling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">netrc</span></code> \u2014 netrc file processing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nis</span></code> \u2014 Interface to Sun\u2019s NIS (Yellow Pages)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nntplib</span></code> \u2014 NNTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">numbers</span></code> \u2014 Numeric abstract base classes", "Numeric and Mathematical Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">operator</span></code> \u2014 Standard operators as functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">optparse</span></code> \u2014 Parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2014 Miscellaneous operating system interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os.path</span></code> \u2014 Common pathname manipulations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ossaudiodev</span></code> \u2014 Access to OSS-compatible audio devices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pathlib</span></code> \u2014 Object-oriented filesystem paths", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pdb</span></code> \u2014 The Python Debugger", "Data Persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> \u2014 Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickletools</span></code> \u2014 Tools for pickle developers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pipes</span></code> \u2014 Interface to shell pipelines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pkgutil</span></code> \u2014 Package extension utility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2014  Access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">plistlib</span></code> \u2014 Generate and parse Apple <code class=\"docutils literal notranslate\"><span class=\"pre\">.plist</span></code> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplib</span></code> \u2014 POP3 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">posix</span></code> \u2014 The most common POSIX system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pprint</span></code> \u2014 Data pretty printer", "The Python Profilers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pty</span></code> \u2014 Pseudo-terminal utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pwd</span></code> \u2014 The password database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_compile</span></code> \u2014 Compile Python source files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyclbr</span></code> \u2014 Python module browser support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydoc</span></code> \u2014 Documentation generator and online help system", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.parsers.expat</span></code> \u2014 Fast XML parsing using Expat", "Python Runtime Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">queue</span></code> \u2014 A synchronized queue class", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">quopri</span></code> \u2014 Encode and decode MIME quoted-printable data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2014 Generate pseudo-random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2014 Regular expression operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">readline</span></code> \u2014 GNU readline interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reprlib</span></code> \u2014 Alternate <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">repr()</span></code> implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">resource</span></code> \u2014 Resource usage information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rlcompleter</span></code> \u2014 Completion function for GNU readline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">runpy</span></code> \u2014 Locating and executing Python modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sched</span></code> \u2014 Event scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">secrets</span></code> \u2014 Generate secure random numbers for managing secrets", "Security Considerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2014 Waiting for I/O completion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">selectors</span></code> \u2014 High-level I/O multiplexing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shelve</span></code> \u2014 Python object persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shlex</span></code> \u2014 Simple lexical analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shutil</span></code> \u2014 High-level file operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">signal</span></code> \u2014 Set handlers for asynchronous events", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">site</span></code> \u2014 Site-specific configuration hook", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">smtplib</span></code> \u2014 SMTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sndhdr</span></code> \u2014 Determine type of sound file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2014 Low-level networking interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socketserver</span></code> \u2014 A framework for network servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spwd</span></code> \u2014 The shadow password database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code> \u2014 DB-API 2.0 interface for SQLite databases", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2014 TLS/SSL wrapper for socket objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stat</span></code> \u2014 Interpreting <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">stat()</span></code> results", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">statistics</span></code> \u2014 Mathematical statistics functions", "Built-in Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">string</span></code> \u2014 Common string operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stringprep</span></code> \u2014 Internet String Preparation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2014 Interpret bytes as packed binary data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">subprocess</span></code> \u2014 Subprocess management", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sunau</span></code> \u2014 Read and write Sun AU files", "Superseded Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">symtable</span></code> \u2014 Access to the compiler\u2019s symbol tables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2014 System-specific parameters and functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys.monitoring</span></code> \u2014 Execution event monitoring", "The initialization of the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> module search path", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sysconfig</span></code> \u2014 Provide access to Python\u2019s configuration information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">syslog</span></code> \u2014 Unix syslog library routines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tabnanny</span></code> \u2014 Detection of ambiguous indentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tarfile</span></code> \u2014 Read and write tar archive files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">telnetlib</span></code> \u2014 Telnet client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tempfile</span></code> \u2014 Generate temporary files and directories", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">termios</span></code> \u2014 POSIX style tty control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test</span></code> \u2014 Regression tests package for Python", "Text Processing Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">textwrap</span></code> \u2014 Text wrapping and filling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">threading</span></code> \u2014 Thread-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2014 Time access and conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">timeit</span></code> \u2014 Measure execution time of small code snippets", "Graphical User Interfaces with Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter</span></code> \u2014 Python interface to Tcl/Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.colorchooser</span></code> \u2014 Color choosing dialog", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.dnd</span></code> \u2014 Drag and drop support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.font</span></code> \u2014 Tkinter font wrapper", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.messagebox</span></code> \u2014 Tkinter message prompts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.scrolledtext</span></code> \u2014 Scrolled Text Widget", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.tix</span></code> \u2014 Extension widgets for Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.ttk</span></code> \u2014 Tk themed widgets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">token</span></code> \u2014 Constants used with Python parse trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tokenize</span></code> \u2014 Tokenizer for Python source", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tomllib</span></code> \u2014 Parse TOML files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trace</span></code> \u2014 Trace or track Python statement execution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">traceback</span></code> \u2014 Print or retrieve a stack traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracemalloc</span></code> \u2014 Trace memory allocations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tty</span></code> \u2014 Terminal control functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">turtle</span></code> \u2014 Turtle graphics", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">types</span></code> \u2014 Dynamic type creation and names for built-in types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code> \u2014 Support for type hints", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unicodedata</span></code> \u2014 Unicode Database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code> \u2014 Unit testing framework", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 mock object library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 getting started", "Unix Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib</span></code> \u2014 URL handling modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.error</span></code> \u2014 Exception classes raised by urllib.request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.parse</span></code> \u2014 Parse URLs into components", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.request</span></code> \u2014 Extensible library for opening URLs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.robotparser</span></code> \u2014  Parser for robots.txt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uu</span></code> \u2014 Encode and decode uuencode files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uuid</span></code> \u2014 UUID objects according to <strong>RFC 4122</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">venv</span></code> \u2014 Creation of virtual environments", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code> \u2014 Warning control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wave</span></code> \u2014 Read and write WAV files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">weakref</span></code> \u2014 Weak references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">webbrowser</span></code> \u2014 Convenient web-browser controller", "MS Windows Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winreg</span></code> \u2014 Windows registry access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winsound</span></code> \u2014 Sound-playing interface for Windows", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wsgiref</span></code> \u2014 WSGI Utilities and Reference Implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xdrlib</span></code> \u2014 Encode and decode XDR data", "XML Processing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom</span></code> \u2014 The Document Object Model API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.minidom</span></code> \u2014 Minimal DOM implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.pulldom</span></code> \u2014 Support for building partial DOM trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.etree.ElementTree</span></code> \u2014 The ElementTree XML API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax</span></code> \u2014 Support for SAX2 parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.handler</span></code> \u2014 Base classes for SAX handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.xmlreader</span></code> \u2014 Interface for XML parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.saxutils</span></code> \u2014 SAX Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc</span></code> \u2014 XMLRPC server and client modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.client</span></code> \u2014 XML-RPC client access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.server</span></code> \u2014 Basic XML-RPC servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipapp</span></code> \u2014 Manage executable Python zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipfile</span></code> \u2014 Work with ZIP archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipimport</span></code> \u2014 Import modules from Zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2014 Compression compatible with <strong class=\"program\">gzip</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code> \u2014 IANA time zone support", "History and License", "<span class=\"section-number\">8. </span>Compound statements", "<span class=\"section-number\">3. </span>Data model", "<span class=\"section-number\">4. </span>Execution model", "<span class=\"section-number\">6. </span>Expressions", "<span class=\"section-number\">10. </span>Full Grammar specification", "<span class=\"section-number\">5. </span>The import system", "The Python Language Reference", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">2. </span>Lexical analysis", "<span class=\"section-number\">7. </span>Simple statements", "<span class=\"section-number\">9. </span>Top-level components", "<span class=\"section-number\">16. </span>Appendix", "<span class=\"section-number\">1. </span>Whetting Your Appetite", "<span class=\"section-number\">9. </span>Classes", "<span class=\"section-number\">4. </span>More Control Flow Tools", "<span class=\"section-number\">5. </span>Data Structures", "<span class=\"section-number\">8. </span>Errors and Exceptions", "<span class=\"section-number\">15. </span>Floating Point Arithmetic:  Issues and Limitations", "The Python Tutorial", "<span class=\"section-number\">7. </span>Input and Output", "<span class=\"section-number\">14. </span>Interactive Input Editing and History Substitution", "<span class=\"section-number\">2. </span>Using the Python Interpreter", "<span class=\"section-number\">3. </span>An Informal Introduction to Python", "<span class=\"section-number\">6. </span>Modules", "<span class=\"section-number\">10. </span>Brief Tour of the Standard Library", "<span class=\"section-number\">11. </span>Brief Tour of the Standard Library \u2014 Part II", "<span class=\"section-number\">12. </span>Virtual Environments and Packages", "<span class=\"section-number\">13. </span>What Now?", "<span class=\"section-number\">1. </span>Command line and environment", "<span class=\"section-number\">3. </span>Configure Python", "<span class=\"section-number\">6. </span>Editors and IDEs", "Python Setup and Usage", "<span class=\"section-number\">5. </span>Using Python on a Mac", "<span class=\"section-number\">2. </span>Using Python on Unix platforms", "<span class=\"section-number\">4. </span>Using Python on Windows", "What\u2019s New in Python 2.0", "What\u2019s New in Python 2.1", "What\u2019s New in Python 2.2", "What\u2019s New in Python 2.3", "What\u2019s New in Python 2.4", "What\u2019s New in Python 2.5", "What\u2019s New in Python 2.6", "What\u2019s New in Python 2.7", "What\u2019s New In Python 3.0", "What\u2019s New In Python 3.1", "What\u2019s New In Python 3.10", "What\u2019s New In Python 3.11", "What\u2019s New In Python 3.12", "What\u2019s New In Python 3.2", "What\u2019s New In Python 3.3", "What\u2019s New In Python 3.4", "What\u2019s New In Python 3.5", "What\u2019s New In Python 3.6", "What\u2019s New In Python 3.7", "What\u2019s New In Python 3.8", "What\u2019s New In Python 3.9", "Changelog", "What\u2019s New in Python"], "terms": {"These": [0, 5, 8, 9, 10, 13, 23, 24, 32, 34, 40, 41, 44, 47, 56, 57, 58, 62, 63, 65, 71, 72, 74, 75, 76, 77, 79, 83, 84, 86, 88, 91, 94, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 117, 130, 139, 141, 143, 146, 148, 152, 155, 158, 160, 164, 166, 172, 173, 174, 175, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 193, 195, 199, 202, 204, 205, 208, 222, 224, 232, 233, 240, 244, 248, 252, 255, 256, 258, 261, 263, 264, 265, 266, 267, 268, 272, 273, 275, 279, 280, 285, 286, 288, 289, 290, 291, 293, 296, 305, 311, 315, 316, 317, 319, 327, 332, 334, 335, 337, 338, 339, 340, 341, 342, 345, 348, 349, 350, 352, 359, 362, 363, 366, 377, 381, 383, 385, 386, 387, 391, 392, 396, 402, 404, 407, 408, 410, 411, 417, 419, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 441, 443, 445, 447, 448, 449, 452, 457, 458, 459, 461, 463, 465, 466, 469, 470, 471, 472, 473, 474, 478, 479], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 74, 75, 76, 80, 82, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481], "gener": [0, 1, 7, 12, 13, 14, 16, 23, 26, 30, 31, 32, 34, 36, 39, 41, 48, 50, 53, 56, 57, 60, 61, 62, 65, 67, 70, 71, 72, 75, 76, 78, 81, 85, 86, 90, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 106, 109, 110, 113, 117, 119, 123, 127, 130, 131, 132, 134, 136, 138, 139, 140, 141, 143, 148, 149, 152, 155, 157, 158, 160, 163, 164, 166, 168, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 184, 187, 188, 190, 191, 193, 197, 200, 202, 205, 206, 208, 210, 214, 216, 220, 221, 222, 223, 224, 226, 227, 229, 232, 233, 237, 239, 240, 241, 242, 244, 245, 247, 251, 255, 258, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 278, 280, 281, 282, 285, 286, 287, 288, 290, 296, 302, 304, 306, 308, 311, 312, 316, 317, 318, 320, 322, 327, 328, 332, 334, 337, 339, 340, 342, 343, 344, 345, 349, 350, 354, 355, 361, 362, 363, 366, 372, 373, 374, 375, 377, 378, 381, 382, 384, 385, 386, 391, 392, 395, 396, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 421, 422, 423, 426, 428, 429, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 447, 451, 455, 458, 459, 460, 465, 466, 467, 468, 469, 471, 472, 473, 474, 478, 481], "fromrestructuredtext": [0, 67, 79, 190], "sourc": [0, 5, 13, 20, 22, 23, 30, 32, 33, 34, 56, 65, 67, 71, 72, 74, 75, 77, 78, 80, 86, 88, 91, 92, 93, 94, 100, 108, 109, 110, 113, 114, 117, 119, 120, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 276, 277, 278, 280, 281, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 429, 431, 432, 433, 434, 435, 439, 440, 442, 443, 447, 450, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "sphinx": [0, 67, 79, 83, 100, 471], "processor": [0, 25, 34, 56, 72, 77, 86, 92, 104, 106, 163, 280, 285, 289, 292, 300, 311, 319, 334, 392, 406, 412, 425, 459, 463, 464, 478, 479], "specif": [0, 1, 10, 16, 23, 27, 33, 34, 35, 41, 44, 48, 50, 56, 57, 59, 60, 62, 65, 66, 67, 72, 75, 76, 79, 80, 84, 85, 86, 87, 88, 92, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 112, 117, 119, 121, 123, 128, 129, 130, 131, 139, 142, 144, 148, 150, 151, 152, 158, 164, 166, 168, 169, 172, 173, 174, 178, 180, 181, 183, 190, 191, 192, 193, 199, 200, 202, 203, 205, 207, 208, 209, 210, 212, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 232, 237, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 268, 271, 272, 278, 280, 283, 285, 288, 290, 291, 292, 293, 294, 296, 300, 305, 311, 312, 313, 315, 318, 319, 324, 325, 326, 328, 329, 332, 334, 335, 337, 338, 339, 341, 344, 350, 351, 352, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 369, 371, 374, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 404, 407, 408, 410, 414, 416, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 443, 449, 450, 452, 457, 458, 459, 460, 461, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479], "written": [0, 7, 9, 18, 23, 24, 33, 34, 41, 44, 48, 51, 57, 58, 63, 67, 71, 72, 73, 75, 77, 79, 82, 83, 84, 86, 88, 90, 91, 92, 94, 98, 100, 101, 102, 103, 104, 106, 109, 111, 114, 118, 123, 130, 133, 134, 136, 143, 148, 149, 154, 155, 158, 160, 164, 166, 172, 173, 174, 181, 188, 190, 193, 199, 202, 210, 211, 222, 224, 226, 227, 231, 232, 238, 242, 244, 251, 252, 254, 255, 266, 268, 271, 275, 278, 280, 285, 289, 290, 292, 296, 297, 298, 301, 304, 305, 308, 310, 317, 321, 325, 327, 329, 330, 334, 335, 337, 338, 340, 341, 346, 349, 352, 354, 355, 357, 358, 359, 377, 379, 381, 382, 383, 385, 387, 397, 398, 399, 402, 404, 405, 407, 410, 416, 417, 418, 419, 420, 423, 425, 428, 431, 432, 433, 435, 436, 437, 438, 439, 441, 443, 446, 447, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "develop": [0, 1, 32, 33, 34, 56, 67, 74, 76, 77, 82, 84, 85, 86, 89, 91, 96, 98, 99, 100, 103, 106, 108, 120, 123, 148, 158, 161, 166, 173, 182, 183, 210, 211, 232, 247, 251, 255, 261, 264, 265, 266, 289, 290, 291, 304, 310, 337, 341, 345, 349, 359, 365, 366, 372, 381, 383, 397, 416, 419, 422, 423, 436, 438, 442, 448, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 470, 471, 472, 473, 474, 475, 478, 479, 481], "its": [0, 3, 4, 5, 7, 8, 9, 10, 11, 15, 23, 24, 25, 28, 30, 32, 33, 34, 38, 41, 42, 44, 46, 48, 51, 54, 56, 59, 60, 62, 63, 65, 71, 72, 73, 74, 75, 77, 78, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 146, 148, 149, 151, 152, 155, 157, 160, 163, 164, 166, 167, 168, 172, 173, 174, 175, 178, 180, 181, 183, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 215, 220, 222, 223, 225, 227, 229, 232, 233, 234, 237, 239, 240, 242, 244, 245, 247, 248, 249, 250, 252, 254, 255, 258, 259, 262, 264, 265, 266, 268, 272, 273, 275, 276, 280, 281, 288, 289, 290, 292, 293, 294, 296, 298, 299, 301, 302, 304, 305, 306, 308, 310, 311, 312, 315, 316, 317, 318, 319, 320, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 348, 349, 352, 355, 357, 359, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "toolchain": [0, 465, 476], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "an": [0, 1, 3, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 73, 74, 75, 76, 79, 80, 82, 86, 88, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "entir": [0, 5, 34, 41, 62, 72, 74, 83, 84, 86, 91, 92, 97, 98, 102, 103, 104, 106, 109, 111, 123, 144, 147, 148, 157, 163, 166, 168, 174, 181, 193, 197, 202, 204, 210, 213, 227, 232, 233, 237, 239, 244, 251, 255, 256, 258, 263, 264, 266, 267, 268, 271, 275, 285, 289, 290, 292, 316, 319, 328, 329, 337, 338, 340, 341, 342, 349, 352, 355, 361, 362, 364, 366, 373, 381, 384, 385, 397, 402, 405, 407, 410, 413, 423, 424, 426, 429, 432, 433, 438, 439, 443, 446, 452, 458, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 477], "volunt": [0, 1, 423, 431, 465, 470], "effort": [0, 32, 56, 78, 84, 86, 95, 100, 103, 223, 272, 304, 340, 357, 437, 443, 459, 461, 462, 463, 465, 466, 468, 469, 470, 472, 477], "just": [0, 1, 9, 10, 13, 28, 32, 34, 38, 50, 51, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 117, 119, 125, 126, 135, 136, 146, 147, 148, 152, 154, 155, 156, 157, 158, 164, 166, 173, 174, 176, 178, 180, 183, 187, 190, 191, 197, 198, 210, 215, 220, 222, 223, 227, 229, 231, 232, 240, 244, 247, 249, 250, 258, 263, 264, 265, 266, 268, 278, 280, 281, 286, 289, 290, 293, 294, 296, 305, 310, 311, 315, 316, 317, 325, 327, 328, 330, 334, 335, 337, 338, 341, 342, 345, 348, 349, 352, 355, 357, 359, 361, 362, 366, 372, 373, 378, 381, 383, 385, 386, 387, 392, 396, 399, 404, 406, 407, 410, 411, 412, 417, 418, 419, 420, 424, 425, 427, 429, 431, 433, 436, 437, 438, 439, 440, 441, 443, 446, 447, 449, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "like": [0, 1, 3, 5, 7, 10, 12, 13, 16, 18, 23, 25, 28, 30, 32, 33, 34, 35, 41, 42, 44, 48, 50, 54, 55, 56, 57, 59, 60, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 106, 107, 109, 110, 111, 114, 117, 118, 119, 121, 123, 124, 126, 127, 130, 133, 135, 136, 138, 140, 141, 143, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 160, 164, 165, 166, 168, 169, 172, 173, 174, 178, 179, 180, 181, 183, 187, 188, 190, 193, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 215, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 280, 281, 283, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 321, 323, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 362, 363, 366, 372, 373, 375, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 394, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "itself": [0, 1, 12, 32, 41, 44, 48, 50, 60, 62, 63, 66, 67, 71, 72, 74, 75, 77, 84, 86, 87, 92, 93, 94, 98, 99, 100, 103, 107, 111, 112, 113, 116, 117, 119, 123, 130, 136, 141, 147, 148, 151, 152, 157, 160, 173, 174, 175, 178, 180, 185, 188, 190, 192, 194, 200, 202, 210, 212, 222, 223, 226, 240, 242, 244, 245, 247, 252, 254, 256, 258, 259, 264, 265, 266, 268, 278, 279, 280, 281, 285, 289, 290, 293, 296, 305, 311, 316, 328, 329, 334, 337, 338, 341, 342, 343, 345, 349, 352, 355, 356, 358, 359, 362, 373, 378, 381, 382, 383, 385, 386, 391, 392, 394, 396, 397, 411, 412, 413, 416, 425, 426, 427, 429, 431, 432, 433, 437, 438, 440, 446, 451, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 477, 479], "If": [0, 1, 3, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 41, 42, 44, 46, 48, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 366, 368, 369, 370, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "you": [0, 1, 5, 10, 13, 16, 22, 23, 25, 26, 30, 32, 33, 34, 37, 38, 40, 41, 42, 44, 47, 51, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 119, 120, 123, 130, 137, 138, 140, 143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 163, 164, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 189, 190, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205, 208, 210, 211, 212, 215, 218, 220, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 280, 285, 286, 289, 290, 291, 292, 293, 294, 296, 297, 302, 303, 304, 305, 310, 311, 315, 316, 317, 323, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 349, 352, 355, 356, 357, 359, 361, 362, 364, 365, 366, 368, 372, 373, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "want": [0, 5, 7, 23, 25, 31, 32, 33, 34, 55, 62, 67, 71, 72, 74, 75, 76, 77, 79, 82, 83, 85, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 117, 119, 123, 129, 133, 138, 140, 141, 145, 148, 149, 152, 154, 156, 164, 166, 173, 174, 177, 180, 187, 190, 193, 197, 198, 199, 202, 205, 208, 212, 215, 222, 223, 225, 227, 228, 232, 239, 240, 242, 244, 245, 247, 248, 252, 255, 263, 264, 265, 266, 269, 272, 273, 275, 280, 286, 289, 290, 291, 293, 294, 296, 297, 299, 305, 310, 315, 316, 323, 325, 326, 329, 330, 332, 334, 335, 337, 338, 341, 342, 345, 349, 352, 355, 357, 361, 362, 366, 378, 381, 383, 385, 386, 387, 391, 392, 395, 397, 399, 404, 410, 418, 419, 422, 423, 425, 426, 429, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 478, 479], "contribut": [0, 34, 67, 77, 79, 86, 108, 178, 227, 232, 305, 316, 394, 423, 429, 451, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pleas": [0, 1, 10, 24, 32, 34, 70, 77, 79, 87, 98, 99, 100, 102, 103, 104, 107, 108, 117, 125, 134, 148, 157, 164, 173, 220, 227, 239, 245, 247, 255, 264, 265, 266, 285, 290, 298, 302, 316, 319, 329, 332, 334, 337, 338, 345, 349, 355, 357, 358, 381, 383, 386, 392, 397, 404, 425, 427, 431, 438, 440, 454, 458, 459, 460, 462, 464, 467, 469, 471, 473, 474, 475, 476, 477, 478, 479], "take": [0, 1, 5, 9, 13, 22, 23, 27, 30, 32, 34, 48, 50, 51, 57, 59, 62, 63, 65, 67, 72, 74, 75, 77, 78, 83, 84, 86, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 119, 122, 123, 132, 136, 138, 141, 147, 148, 149, 155, 157, 164, 166, 172, 173, 174, 175, 178, 180, 183, 184, 187, 188, 190, 191, 195, 198, 199, 200, 203, 204, 205, 206, 212, 215, 220, 222, 223, 224, 227, 229, 232, 240, 241, 242, 244, 246, 247, 248, 255, 258, 259, 263, 264, 265, 267, 268, 272, 273, 280, 285, 289, 290, 293, 296, 297, 304, 305, 315, 316, 321, 322, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 352, 355, 357, 358, 359, 361, 364, 366, 372, 373, 379, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 404, 405, 407, 408, 409, 410, 412, 414, 416, 418, 419, 421, 424, 425, 427, 429, 433, 436, 438, 441, 443, 445, 446, 447, 448, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481], "look": [0, 14, 18, 28, 32, 34, 35, 41, 44, 48, 50, 56, 62, 63, 67, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 99, 100, 102, 103, 104, 106, 107, 109, 111, 113, 117, 119, 123, 124, 136, 138, 140, 144, 148, 151, 155, 157, 164, 166, 173, 174, 177, 178, 180, 183, 186, 187, 188, 190, 193, 194, 196, 200, 202, 208, 210, 222, 223, 227, 231, 240, 242, 244, 247, 248, 254, 256, 262, 264, 265, 266, 268, 289, 290, 291, 292, 293, 299, 300, 305, 310, 316, 321, 329, 335, 337, 338, 340, 341, 342, 345, 349, 351, 352, 359, 364, 365, 366, 373, 375, 378, 379, 382, 383, 384, 385, 386, 387, 392, 399, 404, 407, 410, 420, 422, 424, 425, 426, 427, 429, 432, 433, 438, 440, 441, 442, 443, 444, 445, 446, 447, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 474, 476, 478], "deal": [0, 15, 16, 34, 41, 62, 63, 67, 71, 86, 102, 103, 104, 106, 117, 122, 154, 155, 191, 193, 194, 202, 216, 222, 237, 255, 263, 279, 280, 289, 296, 315, 322, 324, 334, 363, 381, 387, 391, 410, 423, 428, 437, 443, 459, 461, 462, 463, 464, 467, 469, 470, 473, 475], "bug": [0, 34, 56, 58, 62, 67, 71, 72, 77, 78, 83, 85, 88, 92, 94, 100, 102, 106, 122, 148, 174, 205, 222, 239, 240, 255, 268, 281, 290, 293, 296, 305, 337, 338, 345, 359, 362, 365, 383, 386, 404, 441, 443, 450, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "page": [0, 1, 18, 63, 67, 79, 80, 83, 84, 85, 86, 91, 94, 99, 100, 104, 107, 112, 117, 121, 122, 123, 127, 130, 133, 147, 155, 163, 166, 170, 174, 187, 208, 212, 222, 224, 244, 248, 251, 254, 255, 263, 264, 265, 266, 268, 275, 281, 290, 301, 310, 311, 319, 325, 330, 334, 337, 339, 344, 347, 353, 358, 359, 362, 363, 366, 372, 380, 381, 392, 400, 404, 410, 417, 419, 421, 423, 431, 437, 448, 450, 451, 452, 458, 459, 461, 463, 464, 465, 466, 472, 473, 476, 477, 478], "inform": [0, 1, 3, 4, 5, 7, 11, 14, 16, 23, 25, 28, 32, 33, 34, 41, 44, 50, 57, 59, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 84, 85, 86, 87, 88, 92, 94, 96, 97, 99, 101, 103, 106, 107, 108, 109, 112, 115, 117, 118, 119, 120, 123, 127, 130, 133, 137, 139, 140, 141, 148, 149, 151, 155, 157, 159, 160, 163, 166, 168, 169, 170, 172, 173, 174, 178, 180, 183, 185, 187, 188, 190, 192, 193, 194, 198, 200, 202, 204, 206, 207, 208, 210, 212, 213, 220, 222, 223, 224, 225, 226, 230, 232, 234, 237, 239, 240, 242, 244, 245, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 273, 275, 280, 283, 284, 285, 288, 289, 291, 293, 296, 299, 300, 302, 304, 305, 308, 309, 310, 311, 312, 313, 316, 317, 318, 325, 326, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 341, 344, 345, 349, 355, 356, 358, 359, 362, 363, 366, 370, 372, 373, 377, 378, 379, 381, 383, 385, 386, 388, 391, 392, 395, 396, 399, 400, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 438, 440, 442, 443, 445, 447, 449, 450, 452, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "how": [0, 1, 5, 7, 11, 32, 34, 41, 51, 57, 60, 61, 62, 63, 67, 70, 71, 72, 73, 74, 75, 76, 86, 87, 91, 92, 94, 95, 96, 97, 98, 99, 103, 104, 106, 107, 109, 110, 111, 114, 117, 119, 122, 123, 129, 130, 134, 136, 137, 138, 141, 144, 146, 147, 148, 151, 152, 155, 157, 160, 164, 169, 171, 172, 173, 178, 180, 181, 183, 184, 186, 187, 189, 191, 192, 197, 198, 199, 204, 208, 210, 215, 219, 220, 222, 223, 224, 227, 228, 231, 232, 233, 239, 240, 241, 244, 247, 248, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 269, 272, 275, 280, 281, 285, 288, 290, 291, 293, 295, 296, 300, 305, 308, 313, 315, 316, 317, 318, 319, 328, 329, 330, 334, 335, 338, 340, 341, 342, 343, 345, 346, 349, 355, 357, 361, 362, 363, 364, 365, 373, 377, 379, 383, 385, 386, 387, 391, 392, 399, 404, 405, 407, 416, 418, 422, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 449, 451, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "do": [0, 1, 2, 5, 7, 10, 14, 15, 16, 18, 22, 23, 27, 28, 32, 33, 34, 35, 41, 42, 51, 55, 58, 59, 60, 62, 63, 67, 71, 72, 73, 74, 75, 76, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 112, 117, 119, 122, 123, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 147, 148, 155, 156, 157, 158, 160, 164, 166, 168, 173, 174, 175, 176, 178, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 198, 199, 202, 204, 205, 208, 210, 211, 213, 220, 222, 223, 224, 225, 227, 229, 232, 233, 234, 237, 240, 241, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 262, 263, 264, 265, 266, 268, 272, 275, 276, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 300, 302, 303, 305, 311, 313, 316, 317, 319, 325, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 352, 353, 355, 356, 357, 359, 361, 362, 363, 364, 365, 371, 372, 373, 375, 377, 379, 381, 383, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 403, 404, 407, 408, 410, 411, 412, 414, 416, 418, 419, 422, 423, 424, 425, 426, 427, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "so": [0, 1, 5, 7, 10, 11, 13, 15, 20, 22, 23, 25, 27, 28, 30, 32, 33, 34, 40, 41, 44, 48, 51, 53, 56, 58, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 117, 118, 119, 123, 128, 134, 136, 137, 138, 140, 144, 147, 148, 150, 151, 154, 155, 156, 157, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 178, 180, 183, 187, 188, 190, 193, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 218, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 247, 250, 251, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 275, 280, 281, 286, 288, 289, 290, 291, 293, 294, 296, 299, 305, 307, 309, 311, 315, 316, 322, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 370, 372, 373, 375, 381, 382, 383, 385, 386, 387, 392, 396, 398, 399, 402, 403, 404, 406, 407, 408, 410, 412, 413, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481], "new": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 117, 118, 119, 123, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 160, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 178, 180, 183, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 277, 278, 280, 281, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 350, 352, 355, 357, 358, 359, 361, 362, 363, 364, 366, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 395, 396, 399, 400, 402, 404, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 453, 456, 458, 480], "alwai": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 53, 54, 55, 57, 58, 59, 60, 62, 63, 66, 72, 74, 75, 77, 78, 79, 84, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 102, 103, 104, 107, 109, 112, 117, 119, 123, 130, 131, 136, 138, 140, 141, 143, 146, 148, 151, 154, 155, 157, 160, 163, 164, 172, 173, 174, 176, 178, 180, 181, 183, 187, 188, 190, 192, 193, 200, 202, 203, 204, 205, 207, 208, 210, 211, 213, 218, 220, 222, 223, 227, 231, 232, 233, 234, 237, 239, 241, 242, 244, 245, 247, 248, 252, 254, 255, 256, 259, 263, 264, 266, 267, 268, 269, 272, 280, 281, 288, 289, 290, 291, 292, 293, 296, 300, 303, 304, 306, 313, 314, 316, 321, 327, 328, 330, 331, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 351, 355, 357, 359, 361, 362, 363, 364, 366, 373, 374, 381, 383, 385, 386, 391, 392, 396, 397, 399, 402, 404, 406, 407, 410, 412, 414, 419, 421, 422, 424, 425, 426, 427, 429, 432, 433, 437, 438, 439, 440, 443, 446, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "welcom": [0, 1, 71, 91, 152, 220, 280, 285, 381, 423, 445, 464, 472], "mani": [0, 7, 13, 16, 18, 32, 33, 34, 51, 56, 62, 63, 67, 71, 72, 74, 75, 77, 78, 82, 83, 85, 86, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 114, 117, 119, 122, 125, 130, 134, 136, 140, 151, 155, 157, 160, 163, 164, 166, 171, 172, 173, 174, 175, 178, 180, 183, 187, 188, 190, 191, 200, 205, 209, 220, 222, 224, 227, 229, 232, 233, 239, 240, 241, 244, 247, 251, 254, 255, 256, 258, 259, 262, 264, 272, 275, 280, 281, 285, 288, 289, 290, 292, 293, 295, 296, 300, 302, 303, 304, 305, 311, 314, 315, 316, 322, 325, 327, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 352, 355, 356, 359, 361, 362, 363, 364, 365, 366, 372, 377, 378, 381, 382, 383, 385, 386, 387, 388, 392, 399, 400, 402, 403, 404, 407, 412, 421, 423, 424, 425, 429, 431, 433, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "thank": [0, 76, 94, 98, 103, 106, 152, 197, 232, 280, 337, 359, 383, 423, 459, 460, 461, 462, 463, 464, 465, 466, 472, 473, 476, 477], "go": [0, 32, 41, 72, 74, 75, 77, 78, 83, 84, 88, 91, 92, 93, 94, 96, 99, 100, 102, 103, 104, 107, 112, 114, 123, 130, 134, 135, 136, 141, 148, 174, 180, 183, 186, 190, 193, 197, 233, 244, 247, 276, 281, 289, 290, 293, 305, 310, 316, 331, 337, 338, 345, 349, 352, 355, 356, 359, 362, 363, 377, 386, 387, 391, 392, 404, 410, 416, 424, 425, 437, 442, 443, 450, 451, 454, 458, 459, 460, 461, 462, 464, 465, 466, 467, 470, 473], "fred": [0, 100, 311, 366, 432, 459, 460, 461, 462, 464, 465, 476], "l": [0, 5, 33, 63, 71, 72, 75, 77, 79, 83, 84, 88, 94, 96, 100, 103, 104, 105, 109, 118, 119, 134, 136, 140, 147, 157, 159, 160, 173, 174, 187, 190, 222, 241, 265, 266, 268, 280, 281, 288, 290, 291, 294, 297, 316, 328, 329, 341, 343, 344, 345, 355, 356, 364, 377, 381, 383, 384, 419, 420, 432, 437, 438, 439, 448, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 475, 478], "drake": [0, 459, 460, 461, 462, 464, 465], "jr": [0, 83, 460, 461, 462, 464, 465], "creator": [0, 73, 86, 100, 280, 290, 329, 396, 408, 419, 420, 425, 431], "origin": [0, 5, 7, 9, 14, 23, 32, 33, 41, 42, 59, 61, 62, 66, 72, 79, 84, 91, 93, 99, 103, 105, 106, 108, 109, 110, 117, 119, 123, 138, 141, 146, 149, 151, 155, 157, 163, 164, 166, 168, 170, 172, 173, 174, 178, 183, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 210, 218, 222, 223, 224, 227, 231, 233, 240, 244, 247, 252, 255, 258, 259, 263, 264, 266, 268, 272, 275, 280, 281, 289, 290, 293, 294, 296, 305, 309, 315, 316, 321, 325, 328, 329, 334, 337, 338, 340, 341, 342, 345, 346, 349, 355, 359, 362, 363, 366, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 399, 404, 405, 410, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 431, 433, 437, 438, 441, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478], "toolset": [0, 92, 258, 289, 448, 465], "writer": [0, 34, 41, 67, 72, 75, 106, 123, 133, 146, 155, 167, 190, 214, 243, 248, 255, 290, 316, 376, 408, 410, 413, 452, 462, 469, 471, 475, 477], "much": [0, 18, 23, 34, 54, 60, 62, 66, 72, 74, 75, 77, 83, 84, 86, 87, 91, 94, 100, 102, 103, 104, 106, 107, 117, 118, 123, 134, 148, 151, 155, 157, 164, 168, 173, 183, 190, 191, 200, 204, 222, 233, 252, 255, 258, 266, 267, 268, 272, 280, 289, 290, 292, 296, 300, 305, 316, 323, 327, 334, 340, 345, 352, 366, 373, 379, 381, 383, 385, 386, 387, 407, 408, 416, 421, 424, 429, 436, 437, 443, 448, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 472, 473, 474, 475, 476, 478, 479], "content": [0, 5, 7, 8, 9, 12, 25, 31, 32, 37, 41, 44, 53, 57, 60, 63, 65, 71, 87, 88, 91, 94, 99, 100, 103, 106, 107, 111, 118, 119, 123, 130, 140, 146, 148, 150, 154, 155, 157, 160, 163, 173, 174, 176, 179, 181, 184, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 220, 222, 223, 224, 227, 231, 232, 234, 237, 238, 239, 242, 244, 247, 248, 249, 250, 251, 252, 254, 255, 259, 265, 268, 270, 273, 275, 276, 278, 281, 282, 290, 293, 296, 297, 299, 304, 308, 312, 314, 317, 329, 337, 338, 341, 342, 344, 346, 349, 351, 355, 357, 359, 360, 361, 366, 375, 382, 388, 390, 391, 392, 393, 396, 399, 404, 406, 408, 410, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 426, 427, 429, 432, 437, 438, 440, 443, 446, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "docutil": [0, 465], "project": [0, 1, 56, 69, 74, 75, 76, 83, 84, 85, 90, 95, 100, 102, 108, 109, 119, 148, 164, 180, 190, 207, 220, 227, 232, 247, 248, 258, 289, 304, 311, 383, 385, 386, 396, 418, 419, 422, 423, 431, 438, 441, 448, 451, 453, 456, 458, 459, 462, 465, 466, 467, 470, 471, 472, 473, 474, 476, 479], "creat": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 38, 39, 41, 42, 44, 48, 50, 51, 54, 57, 58, 59, 61, 62, 65, 66, 67, 72, 74, 75, 76, 77, 80, 85, 86, 87, 91, 92, 98, 99, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 141, 146, 147, 148, 150, 154, 155, 157, 158, 160, 163, 164, 166, 167, 168, 171, 172, 173, 174, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 202, 204, 205, 207, 208, 210, 212, 215, 216, 218, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 238, 239, 242, 244, 245, 247, 248, 249, 251, 252, 255, 256, 263, 264, 265, 266, 267, 268, 269, 275, 278, 279, 280, 281, 282, 285, 290, 291, 293, 294, 295, 296, 297, 299, 302, 304, 305, 309, 311, 316, 319, 320, 325, 327, 329, 331, 332, 335, 338, 339, 340, 341, 342, 344, 345, 348, 349, 351, 355, 357, 359, 361, 362, 364, 366, 367, 368, 369, 370, 372, 373, 375, 377, 378, 379, 381, 382, 383, 385, 386, 392, 394, 395, 399, 400, 402, 404, 407, 408, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 426, 427, 429, 431, 432, 433, 435, 437, 438, 439, 440, 442, 443, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "suit": [0, 62, 67, 74, 77, 83, 84, 86, 94, 99, 100, 102, 158, 184, 190, 222, 227, 251, 255, 280, 289, 337, 338, 340, 355, 379, 385, 386, 397, 419, 424, 436, 443, 447, 449, 453, 458, 464, 465, 466, 467, 469, 470, 471, 472, 474, 476, 477, 479], "fredrik": [0, 84, 94, 423, 459, 460, 461, 463, 464, 466, 468, 472], "lundh": [0, 84, 94, 423, 459, 460, 461, 463, 464, 466, 472], "hi": [0, 72, 83, 100, 144, 173, 227, 301, 341, 366, 383, 423, 432, 459, 461, 465, 466, 474, 476], "altern": [0, 10, 18, 23, 30, 32, 44, 62, 67, 72, 80, 83, 84, 86, 92, 94, 103, 106, 107, 108, 109, 113, 117, 119, 123, 126, 129, 134, 135, 136, 140, 144, 145, 148, 151, 155, 157, 158, 164, 170, 172, 173, 174, 175, 178, 179, 183, 190, 193, 196, 197, 202, 207, 208, 211, 212, 215, 218, 222, 225, 239, 246, 248, 251, 258, 264, 265, 266, 269, 272, 280, 287, 289, 290, 292, 294, 296, 303, 311, 313, 321, 329, 332, 333, 334, 335, 336, 337, 338, 341, 342, 344, 345, 349, 351, 355, 356, 362, 364, 365, 366, 372, 373, 378, 381, 383, 385, 386, 387, 391, 394, 396, 397, 399, 402, 404, 422, 423, 427, 428, 429, 430, 441, 442, 443, 445, 446, 447, 449, 450, 452, 455, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 472, 474, 475, 476, 477, 478, 479], "refer": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 67, 70, 71, 73, 75, 76, 77, 83, 85, 86, 92, 95, 97, 98, 99, 100, 103, 107, 108, 111, 112, 115, 117, 119, 120, 123, 126, 130, 133, 134, 136, 137, 138, 139, 141, 151, 155, 157, 161, 164, 167, 168, 174, 179, 180, 182, 188, 202, 207, 208, 209, 210, 212, 219, 222, 223, 224, 225, 227, 230, 232, 235, 236, 237, 240, 242, 244, 247, 248, 250, 251, 252, 253, 255, 256, 259, 264, 265, 266, 268, 270, 275, 281, 285, 286, 290, 291, 294, 295, 296, 299, 300, 303, 304, 310, 311, 316, 318, 321, 326, 329, 330, 331, 334, 338, 341, 342, 344, 348, 349, 353, 358, 359, 362, 363, 365, 372, 373, 374, 378, 382, 383, 385, 386, 387, 391, 392, 393, 397, 402, 406, 407, 408, 412, 414, 418, 419, 422, 424, 425, 426, 431, 432, 433, 436, 437, 438, 441, 442, 443, 451, 452, 453, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "which": [0, 1, 2, 3, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 117, 118, 119, 120, 122, 123, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 180, 181, 183, 184, 185, 187, 188, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "got": [0, 72, 88, 107, 110, 123, 133, 135, 190, 264, 280, 332, 337, 383, 392, 427, 438, 446, 452, 464, 468, 471, 478], "good": [0, 1, 16, 34, 51, 62, 67, 74, 77, 78, 83, 84, 85, 86, 88, 92, 93, 98, 99, 100, 103, 104, 106, 107, 117, 119, 136, 148, 151, 152, 157, 164, 167, 173, 174, 180, 187, 190, 195, 204, 208, 222, 232, 233, 247, 280, 289, 290, 292, 296, 304, 316, 338, 359, 361, 364, 365, 381, 383, 385, 387, 408, 416, 423, 425, 437, 438, 440, 442, 443, 456, 457, 459, 460, 462, 463, 465, 466, 470], "idea": [0, 16, 34, 51, 77, 78, 79, 83, 84, 85, 86, 88, 91, 92, 93, 98, 99, 100, 104, 117, 180, 187, 190, 208, 258, 263, 292, 304, 340, 352, 373, 381, 425, 438, 442, 451, 459, 461, 462, 463, 466, 467, 468, 469, 470, 472, 476], "peopl": [0, 1, 34, 77, 85, 86, 92, 94, 97, 102, 106, 174, 183, 187, 190, 227, 232, 289, 340, 410, 438, 441, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 473, 476, 478], "have": [0, 1, 2, 5, 7, 10, 11, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 44, 46, 48, 51, 57, 58, 59, 62, 63, 66, 67, 71, 72, 74, 75, 76, 78, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 126, 128, 129, 131, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 178, 180, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 204, 205, 208, 210, 212, 215, 218, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 252, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 279, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 302, 304, 305, 308, 309, 311, 313, 315, 316, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 368, 372, 373, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "languag": [0, 1, 16, 34, 56, 60, 63, 67, 71, 72, 73, 82, 83, 86, 88, 92, 93, 94, 96, 98, 100, 102, 103, 105, 106, 107, 109, 110, 119, 155, 157, 164, 173, 177, 188, 193, 199, 202, 206, 214, 218, 219, 222, 237, 243, 244, 247, 251, 254, 263, 270, 278, 296, 304, 316, 337, 341, 349, 352, 360, 361, 366, 374, 376, 382, 383, 385, 399, 407, 408, 416, 423, 425, 427, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 451, 454, 458, 460, 461, 467, 481], "standard": [0, 5, 7, 18, 24, 30, 31, 32, 33, 41, 58, 60, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 93, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 123, 130, 131, 134, 138, 139, 140, 141, 142, 144, 147, 148, 150, 151, 154, 157, 160, 163, 164, 172, 173, 174, 175, 179, 180, 183, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 204, 205, 206, 208, 210, 211, 215, 216, 217, 220, 221, 222, 227, 232, 235, 236, 240, 242, 244, 245, 247, 252, 254, 255, 258, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 278, 280, 282, 285, 290, 291, 292, 294, 296, 298, 299, 300, 302, 303, 305, 306, 308, 309, 311, 315, 316, 318, 321, 323, 325, 328, 329, 330, 331, 332, 334, 335, 340, 342, 345, 349, 351, 352, 354, 355, 356, 357, 359, 362, 363, 364, 365, 366, 367, 372, 376, 378, 381, 383, 384, 385, 386, 387, 391, 392, 394, 395, 397, 399, 404, 405, 407, 410, 416, 418, 419, 422, 423, 424, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 481], "librari": [0, 7, 18, 23, 24, 32, 33, 34, 41, 44, 50, 56, 58, 62, 65, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 90, 91, 94, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 111, 115, 117, 120, 123, 130, 131, 136, 139, 142, 163, 164, 166, 174, 175, 180, 181, 182, 183, 184, 189, 190, 191, 200, 205, 209, 216, 225, 227, 232, 240, 244, 248, 253, 254, 255, 259, 261, 263, 264, 266, 272, 280, 284, 289, 290, 291, 293, 296, 299, 305, 310, 311, 316, 317, 325, 327, 328, 330, 331, 334, 337, 338, 340, 341, 342, 349, 351, 352, 355, 359, 362, 363, 365, 366, 372, 375, 376, 381, 383, 385, 387, 388, 391, 396, 397, 404, 406, 407, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 436, 442, 443, 444, 445, 447, 450, 451, 452, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "see": [0, 4, 5, 7, 10, 11, 14, 17, 18, 23, 26, 30, 32, 33, 34, 39, 41, 44, 46, 51, 52, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 145, 147, 148, 149, 150, 152, 153, 155, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 226, 227, 230, 231, 232, 233, 236, 239, 240, 242, 244, 245, 246, 247, 248, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 269, 271, 272, 275, 276, 278, 280, 281, 284, 285, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 301, 302, 305, 307, 308, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 370, 372, 373, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 396, 397, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "misc": [0, 34, 67, 79, 220, 341, 373, 453, 459, 462, 463, 464, 465, 466, 467, 472, 474, 481], "ack": [0, 175, 465], "distribut": [0, 30, 32, 34, 56, 65, 67, 70, 72, 74, 79, 80, 82, 83, 84, 85, 86, 108, 111, 120, 121, 123, 131, 183, 206, 227, 232, 247, 251, 268, 272, 277, 280, 281, 287, 299, 300, 337, 352, 355, 366, 374, 385, 411, 418, 423, 442, 447, 451, 453, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 472, 474, 475, 476, 477, 478, 479], "partial": [0, 24, 33, 67, 87, 94, 106, 107, 111, 115, 123, 124, 126, 133, 157, 174, 178, 184, 194, 203, 204, 221, 222, 245, 251, 252, 258, 266, 267, 270, 272, 281, 319, 321, 334, 335, 341, 345, 355, 406, 410, 424, 459, 462, 463, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 481], "list": [0, 1, 2, 5, 7, 14, 16, 18, 23, 30, 32, 33, 34, 39, 41, 48, 51, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 72, 74, 75, 76, 78, 80, 83, 85, 86, 88, 91, 92, 93, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 121, 122, 123, 125, 126, 127, 130, 133, 136, 137, 141, 147, 148, 152, 155, 157, 158, 160, 164, 166, 167, 168, 170, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 193, 194, 196, 197, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 315, 316, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 348, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 393, 397, 399, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 423, 425, 426, 428, 429, 430, 432, 433, 437, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "It": [0, 1, 2, 5, 7, 9, 10, 11, 13, 15, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 48, 50, 51, 54, 56, 57, 60, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 122, 123, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 146, 148, 149, 151, 152, 155, 156, 157, 160, 163, 164, 165, 166, 167, 168, 172, 173, 174, 178, 180, 181, 183, 184, 185, 187, 188, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 215, 217, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 247, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 275, 280, 281, 285, 286, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 303, 304, 305, 306, 307, 309, 311, 313, 315, 316, 317, 318, 319, 321, 322, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 352, 353, 355, 357, 358, 359, 362, 363, 364, 365, 366, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "onli": [0, 3, 5, 6, 7, 9, 10, 13, 22, 23, 24, 26, 28, 30, 32, 33, 34, 37, 38, 40, 41, 42, 44, 47, 48, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 123, 126, 128, 129, 132, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 155, 157, 158, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 176, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 239, 240, 241, 242, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 284, 285, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 322, 324, 325, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 481], "input": [0, 5, 9, 14, 15, 33, 34, 47, 62, 63, 65, 67, 72, 74, 77, 84, 86, 88, 92, 94, 97, 99, 105, 106, 107, 109, 111, 115, 117, 119, 130, 134, 138, 139, 140, 141, 143, 146, 148, 152, 154, 155, 156, 157, 164, 166, 170, 172, 173, 180, 183, 187, 188, 190, 191, 192, 193, 194, 197, 198, 200, 204, 205, 206, 210, 216, 218, 219, 222, 231, 232, 233, 237, 241, 242, 244, 251, 255, 258, 259, 261, 264, 266, 267, 268, 271, 272, 280, 281, 287, 288, 289, 290, 291, 292, 294, 298, 299, 304, 306, 308, 311, 314, 316, 317, 319, 325, 328, 332, 334, 337, 338, 341, 345, 349, 351, 356, 358, 359, 361, 363, 365, 366, 372, 373, 374, 378, 380, 385, 386, 391, 392, 394, 398, 404, 405, 408, 409, 410, 411, 412, 413, 414, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 438, 439, 440, 441, 442, 445, 446, 447, 449, 452, 453, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478], "commun": [0, 32, 67, 79, 84, 86, 100, 104, 108, 122, 123, 127, 130, 134, 190, 209, 239, 242, 244, 251, 254, 266, 280, 281, 290, 296, 302, 306, 330, 334, 335, 338, 344, 345, 362, 373, 383, 404, 416, 423, 443, 449, 456, 459, 460, 463, 464, 465, 470, 472, 475, 477, 478], "ha": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 48, 51, 55, 57, 58, 60, 62, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 166, 167, 172, 173, 174, 175, 178, 180, 181, 183, 185, 187, 188, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 218, 220, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 247, 248, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 278, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 308, 309, 310, 311, 313, 315, 316, 317, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 409, 410, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "wonder": [0, 77, 84, 92, 105, 148, 172, 305, 431, 459, 462, 472], "matur": 1, "program": [1, 5, 15, 16, 30, 32, 33, 41, 43, 44, 65, 67, 71, 72, 76, 77, 81, 82, 86, 88, 92, 93, 95, 99, 100, 102, 103, 107, 108, 109, 111, 115, 117, 119, 121, 122, 123, 130, 133, 134, 137, 140, 143, 147, 148, 152, 154, 155, 156, 157, 161, 163, 164, 165, 166, 172, 173, 180, 182, 183, 190, 197, 198, 200, 205, 210, 211, 213, 220, 222, 223, 224, 225, 231, 243, 244, 245, 247, 251, 252, 260, 264, 266, 268, 269, 273, 279, 283, 289, 290, 291, 293, 294, 296, 300, 303, 304, 305, 306, 308, 310, 311, 313, 316, 319, 325, 327, 330, 334, 335, 337, 338, 341, 344, 345, 349, 350, 351, 357, 359, 362, 364, 365, 372, 373, 377, 378, 381, 383, 385, 391, 392, 395, 397, 399, 400, 402, 404, 407, 408, 416, 418, 419, 423, 424, 425, 427, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 447, 449, 450, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "establish": [1, 99, 121, 123, 133, 190, 220, 233, 244, 245, 266, 280, 296, 299, 302, 316, 325, 332, 338, 356, 392, 402, 424, 425, 426, 466, 472], "reput": 1, "stabil": [1, 4, 31, 67, 79, 222, 233, 258, 469, 470], "In": [1, 5, 7, 10, 11, 13, 14, 17, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 44, 47, 48, 50, 56, 57, 58, 60, 62, 63, 65, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 122, 123, 124, 125, 129, 130, 135, 136, 138, 142, 146, 147, 148, 151, 155, 156, 157, 158, 159, 164, 166, 167, 168, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 200, 202, 203, 205, 207, 208, 210, 212, 215, 218, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 238, 240, 241, 244, 245, 247, 248, 249, 251, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 280, 281, 285, 286, 289, 290, 291, 293, 294, 296, 299, 303, 304, 305, 306, 307, 310, 313, 316, 318, 322, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 353, 355, 356, 359, 360, 361, 362, 363, 364, 366, 372, 373, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 481], "order": [1, 4, 7, 10, 13, 24, 28, 30, 32, 33, 42, 44, 57, 58, 62, 63, 67, 71, 72, 74, 75, 77, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 113, 115, 117, 118, 119, 122, 123, 130, 131, 136, 137, 142, 144, 146, 148, 150, 152, 155, 157, 163, 164, 166, 168, 172, 174, 175, 176, 180, 181, 183, 184, 187, 188, 190, 193, 197, 199, 200, 202, 205, 208, 210, 211, 215, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 238, 242, 244, 245, 247, 251, 252, 254, 255, 256, 258, 259, 263, 264, 266, 268, 272, 278, 280, 281, 285, 288, 290, 292, 293, 296, 299, 300, 301, 304, 305, 306, 307, 310, 311, 312, 313, 315, 316, 322, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 345, 346, 349, 350, 355, 357, 359, 361, 362, 363, 366, 373, 378, 379, 381, 382, 383, 385, 386, 391, 392, 395, 396, 397, 399, 404, 407, 408, 410, 412, 418, 419, 421, 424, 425, 426, 428, 429, 430, 432, 437, 438, 439, 440, 441, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481], "maintain": [1, 22, 32, 34, 67, 72, 79, 83, 86, 91, 93, 98, 100, 105, 108, 117, 118, 144, 155, 157, 164, 166, 173, 178, 183, 193, 204, 205, 210, 222, 224, 233, 245, 247, 248, 252, 263, 271, 289, 304, 305, 322, 335, 344, 349, 352, 357, 363, 372, 385, 397, 399, 400, 404, 409, 422, 427, 429, 431, 437, 438, 447, 448, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 473, 474, 475, 477, 478, 479], "thiwould": [1, 5, 7, 10, 18, 23, 30, 32, 33, 34, 46, 48, 57, 58, 60, 63, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 98, 99, 100, 102, 103, 104, 106, 109, 110, 111, 113, 117, 118, 119, 122, 123, 126, 135, 136, 148, 151, 155, 157, 158, 163, 164, 166, 167, 169, 173, 174, 178, 180, 181, 182, 183, 185, 187, 190, 193, 196, 197, 199, 200, 202, 204, 205, 209, 210, 222, 223, 225, 227, 229, 231, 232, 233, 237, 239, 240, 242, 244, 247, 250, 251, 252, 254, 255, 258, 259, 264, 265, 266, 269, 271, 272, 273, 280, 286, 289, 290, 293, 300, 302, 304, 305, 310, 313, 315, 316, 317, 319, 327, 328, 329, 330, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 355, 357, 359, 362, 366, 369, 373, 378, 379, 381, 383, 384, 385, 386, 387, 391, 392, 396, 397, 399, 400, 402, 405, 407, 409, 410, 418, 419, 420, 422, 423, 424, 425, 427, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 444, 446, 447, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "know": [1, 30, 32, 34, 58, 62, 72, 75, 76, 77, 79, 84, 85, 86, 88, 92, 94, 97, 99, 100, 101, 102, 103, 104, 106, 107, 114, 117, 129, 136, 148, 151, 158, 172, 173, 175, 178, 187, 190, 192, 197, 198, 205, 220, 233, 240, 242, 247, 256, 263, 265, 266, 268, 269, 280, 289, 290, 327, 329, 334, 338, 340, 341, 349, 366, 373, 379, 381, 386, 392, 397, 402, 404, 413, 416, 419, 422, 429, 431, 433, 436, 437, 440, 441, 443, 444, 446, 447, 448, 458, 459, 460, 461, 464, 465, 466, 471, 473, 474, 476], "ani": [1, 5, 7, 8, 9, 10, 11, 12, 13, 18, 20, 22, 23, 24, 27, 28, 30, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 117, 119, 123, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 160, 163, 164, 167, 168, 170, 172, 173, 174, 175, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 215, 217, 218, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 280, 281, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 299, 302, 305, 306, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 350, 351, 355, 356, 357, 359, 361, 362, 363, 366, 369, 372, 373, 375, 377, 378, 379, 381, 382, 385, 387, 391, 392, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "defici": [1, 346, 398], "find": [1, 30, 32, 60, 62, 67, 71, 72, 74, 76, 77, 79, 82, 85, 86, 88, 92, 93, 94, 96, 97, 99, 100, 102, 103, 106, 107, 109, 110, 115, 117, 119, 135, 138, 144, 148, 155, 157, 174, 178, 180, 187, 188, 190, 192, 193, 194, 196, 202, 204, 208, 210, 218, 222, 223, 227, 228, 232, 233, 244, 247, 248, 251, 252, 255, 263, 264, 270, 275, 277, 283, 289, 290, 296, 297, 299, 310, 320, 334, 338, 340, 341, 345, 349, 351, 357, 359, 360, 362, 364, 366, 383, 385, 386, 387, 391, 392, 399, 407, 426, 427, 429, 431, 433, 435, 436, 437, 438, 439, 441, 447, 451, 452, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478], "can": [1, 4, 5, 7, 10, 11, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 76, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 304, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "sometim": [1, 34, 67, 72, 73, 77, 78, 83, 84, 86, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 106, 107, 108, 109, 111, 113, 117, 132, 136, 148, 155, 164, 166, 168, 173, 174, 183, 185, 187, 190, 200, 210, 220, 222, 223, 232, 237, 244, 252, 256, 258, 265, 268, 285, 289, 290, 296, 303, 305, 315, 316, 338, 339, 363, 366, 381, 383, 386, 387, 392, 410, 425, 427, 431, 433, 437, 438, 439, 445, 449, 450, 459, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 479], "faster": [1, 10, 53, 56, 62, 67, 83, 84, 86, 92, 103, 104, 105, 123, 136, 157, 173, 174, 183, 204, 223, 231, 232, 234, 244, 258, 280, 290, 291, 305, 315, 338, 340, 341, 381, 386, 421, 423, 447, 449, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481], "fix": [1, 20, 34, 41, 54, 56, 60, 62, 67, 76, 77, 78, 79, 82, 83, 84, 86, 88, 91, 92, 94, 102, 103, 104, 108, 109, 111, 117, 119, 122, 123, 148, 156, 157, 158, 173, 174, 179, 180, 185, 190, 198, 220, 222, 233, 240, 244, 251, 258, 280, 285, 287, 290, 296, 316, 337, 340, 341, 342, 344, 345, 362, 369, 383, 386, 404, 405, 424, 450, 452, 459, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "patch": [1, 56, 67, 77, 83, 88, 91, 96, 103, 117, 174, 182, 184, 238, 239, 285, 341, 359, 383, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 475, 476, 478, 479], "streamlin": [1, 470, 475], "process": [1, 5, 7, 23, 31, 33, 34, 38, 44, 50, 57, 62, 64, 65, 67, 71, 72, 74, 76, 77, 78, 79, 83, 85, 86, 91, 94, 96, 97, 99, 103, 104, 106, 107, 108, 109, 111, 112, 115, 117, 119, 122, 127, 128, 130, 131, 133, 134, 137, 142, 146, 147, 148, 152, 155, 161, 163, 166, 172, 173, 174, 180, 183, 190, 197, 198, 200, 207, 209, 210, 211, 214, 215, 222, 223, 224, 225, 227, 229, 232, 237, 238, 242, 244, 245, 247, 251, 252, 254, 257, 258, 263, 264, 265, 266, 267, 268, 271, 275, 277, 289, 292, 293, 296, 305, 306, 311, 312, 313, 316, 319, 321, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 339, 341, 343, 344, 345, 349, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 366, 368, 375, 377, 378, 381, 382, 383, 385, 391, 392, 395, 396, 397, 399, 400, 402, 404, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 422, 424, 425, 427, 429, 432, 433, 438, 440, 443, 445, 447, 448, 452, 453, 457, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "involv": [1, 28, 41, 44, 62, 72, 73, 75, 77, 98, 119, 151, 164, 166, 174, 183, 190, 210, 223, 224, 229, 240, 280, 286, 289, 296, 305, 329, 337, 338, 341, 344, 359, 378, 385, 387, 392, 409, 425, 427, 428, 429, 433, 437, 447, 459, 466, 469, 474, 475, 477, 478], "less": [1, 24, 25, 32, 33, 34, 38, 55, 58, 63, 67, 72, 75, 77, 79, 84, 86, 98, 100, 103, 105, 106, 109, 110, 118, 130, 131, 135, 136, 144, 146, 148, 150, 155, 157, 163, 174, 180, 183, 184, 190, 193, 212, 222, 223, 225, 229, 231, 232, 233, 241, 244, 248, 255, 256, 258, 264, 267, 272, 275, 280, 281, 290, 294, 296, 297, 304, 305, 313, 316, 329, 330, 334, 337, 338, 340, 341, 342, 345, 349, 355, 359, 362, 363, 366, 370, 372, 373, 374, 378, 383, 385, 390, 392, 397, 407, 424, 425, 427, 433, 437, 438, 439, 443, 446, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479], "learn": [1, 70, 72, 74, 76, 77, 78, 79, 82, 83, 86, 88, 91, 92, 94, 102, 103, 106, 148, 173, 183, 190, 244, 254, 272, 296, 328, 337, 340, 366, 381, 408, 436, 437, 439, 440, 442, 451, 461, 462, 464, 465, 466, 472, 476, 477], "propos": [1, 34, 77, 86, 110, 150, 163, 172, 223, 264, 338, 341, 345, 399, 407, 424, 427, 429, 432, 433, 459, 460, 462, 463, 464, 465, 466, 472, 476, 478], "improv": [1, 3, 23, 56, 67, 72, 77, 79, 84, 86, 88, 92, 98, 100, 103, 111, 117, 130, 136, 144, 155, 163, 164, 219, 231, 245, 247, 272, 296, 311, 337, 338, 345, 365, 373, 407, 423, 425, 427, 448, 449, 453, 467, 481], "submit": [1, 91, 100, 107, 136, 148, 163, 244, 280, 423, 459, 466, 472, 473, 475, 476, 477, 478], "report": [1, 7, 22, 24, 32, 34, 44, 47, 60, 71, 72, 84, 85, 96, 97, 99, 101, 102, 103, 106, 117, 119, 130, 148, 149, 163, 172, 173, 174, 187, 188, 190, 193, 200, 202, 210, 213, 222, 229, 230, 238, 252, 256, 258, 276, 280, 289, 290, 300, 303, 305, 307, 311, 316, 325, 326, 330, 336, 338, 339, 341, 349, 359, 364, 366, 377, 383, 385, 392, 397, 410, 412, 428, 440, 449, 451, 452, 458, 459, 461, 462, 463, 464, 465, 466, 469, 472, 473, 474, 476, 478], "suggest": [1, 60, 67, 73, 77, 79, 83, 84, 90, 94, 100, 103, 106, 112, 130, 157, 183, 222, 227, 232, 247, 296, 304, 317, 337, 362, 363, 379, 444, 451, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 474, 476, 478, 479], "includ": [1, 4, 5, 7, 9, 10, 13, 18, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 44, 48, 52, 54, 55, 56, 57, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 114, 117, 119, 126, 130, 133, 134, 136, 140, 143, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 164, 170, 173, 174, 175, 178, 180, 183, 187, 188, 190, 193, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 216, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 272, 273, 275, 278, 280, 283, 285, 286, 288, 289, 290, 291, 293, 294, 296, 300, 302, 303, 304, 305, 306, 308, 309, 311, 315, 316, 319, 320, 323, 327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 352, 353, 355, 356, 357, 359, 361, 362, 363, 365, 366, 369, 370, 372, 373, 375, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 394, 396, 397, 399, 400, 402, 403, 404, 406, 407, 408, 410, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "well": [1, 5, 23, 34, 48, 51, 62, 63, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 92, 93, 94, 98, 99, 100, 102, 103, 104, 106, 107, 108, 111, 115, 117, 129, 130, 134, 138, 140, 141, 143, 148, 149, 151, 154, 155, 157, 163, 164, 166, 172, 173, 174, 180, 181, 183, 188, 190, 191, 192, 194, 197, 200, 201, 205, 208, 210, 212, 215, 220, 222, 223, 224, 225, 227, 231, 232, 240, 244, 248, 251, 254, 255, 256, 258, 260, 264, 265, 266, 267, 268, 271, 273, 276, 281, 285, 286, 288, 289, 290, 296, 304, 316, 318, 321, 326, 329, 332, 337, 338, 339, 340, 341, 342, 345, 349, 351, 355, 358, 359, 361, 364, 366, 370, 372, 375, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 395, 399, 407, 410, 411, 412, 413, 416, 422, 424, 425, 427, 429, 433, 436, 437, 438, 439, 440, 442, 446, 447, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "also": [1, 3, 4, 5, 7, 10, 11, 12, 13, 18, 23, 26, 27, 28, 30, 32, 33, 34, 39, 41, 44, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 302, 303, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "open": [1, 24, 32, 33, 40, 50, 65, 67, 72, 77, 79, 83, 85, 86, 91, 94, 99, 102, 103, 106, 108, 109, 114, 117, 127, 130, 137, 139, 145, 146, 148, 152, 155, 157, 164, 166, 172, 174, 180, 181, 185, 186, 187, 197, 204, 205, 209, 210, 211, 212, 215, 216, 220, 222, 227, 231, 232, 237, 238, 239, 240, 242, 244, 245, 246, 247, 250, 251, 252, 253, 255, 262, 263, 264, 265, 266, 267, 268, 271, 273, 275, 277, 278, 280, 285, 290, 291, 292, 293, 296, 298, 299, 302, 306, 310, 311, 315, 317, 319, 323, 325, 327, 328, 330, 332, 333, 334, 337, 338, 339, 340, 341, 345, 346, 349, 353, 355, 356, 357, 359, 362, 366, 372, 373, 375, 376, 378, 381, 383, 386, 387, 389, 394, 398, 400, 402, 404, 408, 410, 411, 413, 416, 418, 419, 422, 423, 424, 425, 432, 435, 437, 438, 440, 443, 447, 448, 449, 452, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "discuss": [1, 4, 16, 32, 34, 56, 71, 72, 73, 79, 84, 94, 98, 100, 103, 106, 107, 168, 178, 187, 200, 205, 208, 227, 244, 255, 264, 265, 272, 285, 290, 316, 327, 330, 338, 340, 349, 373, 383, 385, 387, 392, 407, 416, 421, 423, 424, 426, 427, 429, 432, 437, 438, 439, 440, 443, 459, 460, 461, 464, 465, 466, 468, 469, 470, 471, 474, 476, 479], "item": [1, 2, 5, 7, 14, 22, 23, 30, 32, 33, 34, 35, 36, 37, 39, 48, 53, 56, 59, 62, 63, 67, 72, 75, 77, 78, 83, 86, 93, 94, 100, 102, 103, 105, 109, 117, 118, 119, 131, 138, 144, 147, 148, 154, 155, 157, 158, 164, 167, 168, 173, 178, 181, 186, 187, 188, 190, 193, 194, 197, 202, 206, 208, 210, 220, 222, 223, 224, 229, 230, 231, 232, 233, 241, 244, 245, 247, 249, 250, 258, 259, 265, 266, 268, 272, 273, 276, 280, 285, 288, 290, 291, 296, 299, 303, 304, 305, 307, 310, 313, 316, 317, 321, 329, 331, 333, 334, 336, 337, 338, 341, 342, 344, 345, 346, 349, 351, 356, 357, 358, 359, 362, 365, 366, 372, 375, 378, 381, 382, 383, 386, 391, 399, 402, 404, 405, 406, 407, 409, 410, 413, 416, 419, 420, 424, 425, 427, 428, 429, 431, 432, 433, 437, 438, 439, 443, 446, 447, 449, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478], "our": [1, 30, 34, 72, 75, 84, 88, 92, 93, 100, 103, 104, 106, 107, 111, 131, 164, 166, 173, 193, 197, 202, 233, 256, 289, 296, 316, 332, 335, 337, 338, 359, 383, 386, 387, 399, 404, 410, 419, 437, 461, 464, 465, 469], "discours": 1, "forum": 1, "re": [1, 7, 32, 33, 34, 41, 44, 56, 62, 67, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 104, 106, 110, 111, 119, 124, 135, 136, 137, 141, 142, 152, 157, 160, 164, 166, 173, 174, 180, 183, 184, 187, 188, 190, 193, 198, 202, 204, 208, 217, 233, 237, 239, 240, 244, 245, 247, 251, 255, 256, 263, 264, 265, 266, 268, 271, 275, 276, 280, 285, 289, 290, 292, 293, 294, 305, 312, 334, 335, 337, 338, 340, 341, 342, 345, 349, 350, 360, 361, 362, 364, 366, 374, 375, 381, 383, 387, 391, 392, 396, 397, 404, 410, 412, 416, 423, 424, 425, 426, 429, 431, 432, 433, 436, 438, 440, 441, 443, 447, 448, 450, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 478], "short": [1, 5, 7, 40, 41, 57, 62, 67, 79, 83, 85, 86, 93, 94, 98, 100, 103, 104, 111, 117, 118, 140, 156, 157, 172, 173, 174, 190, 225, 234, 242, 255, 256, 268, 280, 286, 289, 290, 297, 328, 341, 344, 345, 349, 359, 363, 364, 381, 383, 385, 408, 410, 418, 431, 438, 439, 443, 452, 458, 459, 461, 462, 464, 466, 469, 470, 472, 473, 474, 476, 477, 479], "time": [1, 3, 4, 5, 13, 20, 22, 23, 27, 28, 30, 32, 33, 40, 41, 44, 53, 62, 63, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 88, 91, 92, 93, 94, 96, 102, 103, 104, 107, 108, 112, 114, 115, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 154, 157, 160, 163, 164, 165, 166, 170, 173, 174, 179, 182, 183, 187, 190, 199, 200, 205, 206, 209, 210, 211, 213, 215, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 237, 240, 242, 244, 245, 247, 251, 252, 254, 256, 258, 263, 264, 265, 266, 268, 273, 278, 279, 280, 281, 285, 289, 290, 291, 292, 293, 294, 296, 297, 303, 305, 306, 311, 313, 315, 316, 317, 319, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335, 337, 338, 339, 340, 341, 345, 349, 350, 354, 355, 356, 357, 359, 361, 362, 366, 369, 372, 373, 376, 377, 381, 383, 385, 386, 387, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 412, 413, 416, 417, 419, 420, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 449, 452, 453, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 471, 474], "email": [1, 67, 86, 99, 108, 140, 143, 148, 232, 234, 239, 240, 242, 248, 251, 265, 266, 268, 269, 282, 290, 316, 332, 338, 349, 363, 392, 423, 429, 448, 449, 450, 461, 463, 464, 465, 466, 471], "doc": [1, 23, 57, 59, 74, 75, 78, 79, 88, 92, 102, 103, 107, 123, 173, 191, 202, 220, 222, 239, 244, 248, 252, 255, 259, 290, 293, 310, 337, 338, 349, 359, 364, 382, 383, 391, 400, 402, 409, 449, 451, 453, 457, 458, 459, 461, 462, 464, 465, 466, 469, 471, 472, 476, 477, 478], "org": [1, 56, 67, 74, 77, 78, 83, 86, 94, 100, 104, 106, 107, 108, 123, 157, 163, 164, 166, 181, 220, 223, 232, 236, 237, 239, 240, 244, 245, 280, 285, 300, 304, 310, 311, 316, 325, 332, 334, 337, 338, 349, 352, 384, 391, 392, 393, 395, 400, 408, 410, 412, 416, 423, 425, 432, 437, 441, 442, 448, 450, 451, 452, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 477, 478, 479], "behavior": [1, 18, 22, 23, 24, 27, 28, 32, 33, 34, 41, 56, 57, 60, 62, 67, 72, 77, 78, 84, 86, 91, 92, 93, 98, 99, 100, 104, 111, 113, 116, 117, 118, 123, 127, 129, 136, 146, 154, 157, 163, 164, 170, 172, 173, 174, 178, 179, 182, 183, 187, 190, 191, 193, 198, 200, 202, 203, 205, 208, 210, 212, 215, 222, 231, 233, 237, 239, 242, 244, 247, 252, 254, 255, 258, 259, 263, 264, 266, 267, 268, 272, 273, 280, 281, 283, 285, 289, 290, 293, 296, 299, 306, 311, 325, 328, 329, 330, 331, 332, 334, 335, 338, 340, 341, 342, 344, 345, 349, 355, 357, 359, 362, 363, 364, 366, 371, 373, 375, 378, 380, 383, 385, 391, 392, 397, 404, 407, 422, 424, 425, 426, 427, 429, 432, 433, 437, 446, 452, 453, 458, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 481], "sent": [1, 23, 67, 91, 94, 99, 104, 106, 107, 119, 123, 130, 133, 134, 140, 166, 174, 197, 220, 232, 237, 239, 241, 242, 244, 245, 256, 264, 265, 266, 280, 285, 290, 294, 302, 319, 330, 332, 334, 335, 337, 338, 345, 363, 364, 383, 392, 404, 416, 417, 423, 443, 449, 458, 459, 462, 463, 464, 465, 466, 472, 473, 474, 475, 476, 478], "mail": [1, 77, 94, 98, 100, 102, 103, 108, 140, 191, 192, 193, 195, 197, 199, 202, 214, 245, 266, 268, 269, 285, 290, 314, 332, 338, 353, 385, 404, 423, 448, 449, 451, 456, 459, 460, 461, 462, 463, 464, 465, 472, 475], "run": [1, 4, 23, 28, 32, 33, 34, 41, 44, 50, 56, 58, 62, 63, 67, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 117, 120, 121, 126, 127, 129, 130, 131, 133, 134, 135, 137, 141, 144, 148, 149, 154, 157, 160, 163, 164, 166, 167, 170, 173, 174, 178, 182, 183, 184, 190, 197, 200, 205, 210, 211, 223, 224, 225, 227, 232, 233, 239, 240, 241, 242, 247, 248, 252, 258, 263, 264, 265, 266, 268, 276, 280, 283, 285, 289, 290, 291, 293, 294, 305, 310, 315, 317, 319, 320, 321, 322, 324, 328, 329, 330, 331, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 352, 353, 361, 362, 363, 364, 365, 366, 373, 377, 379, 381, 383, 386, 387, 390, 392, 393, 395, 396, 397, 399, 400, 402, 404, 417, 418, 421, 424, 425, 426, 427, 428, 429, 432, 435, 437, 438, 440, 441, 445, 447, 448, 449, 450, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "your": [1, 5, 20, 22, 32, 34, 56, 58, 62, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 98, 99, 101, 103, 104, 106, 107, 108, 109, 111, 115, 117, 119, 130, 138, 139, 149, 156, 157, 163, 164, 174, 178, 180, 182, 184, 188, 190, 193, 195, 197, 198, 199, 202, 204, 208, 210, 219, 220, 222, 223, 224, 231, 232, 239, 240, 241, 242, 243, 244, 247, 252, 255, 259, 263, 264, 265, 266, 268, 275, 280, 290, 293, 294, 296, 302, 303, 305, 310, 315, 316, 317, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 351, 356, 357, 358, 359, 361, 362, 363, 364, 366, 368, 372, 379, 381, 383, 385, 386, 391, 392, 396, 397, 399, 404, 407, 408, 410, 412, 417, 418, 419, 422, 423, 431, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "request": [1, 2, 5, 23, 30, 32, 41, 42, 44, 48, 60, 62, 67, 75, 83, 84, 87, 93, 94, 97, 98, 100, 104, 106, 107, 108, 117, 121, 124, 127, 130, 136, 139, 140, 148, 155, 157, 163, 166, 173, 174, 183, 194, 205, 207, 209, 210, 212, 220, 222, 223, 227, 231, 238, 239, 240, 241, 242, 244, 245, 247, 251, 252, 253, 255, 268, 280, 281, 285, 288, 289, 290, 291, 292, 296, 302, 304, 306, 311, 313, 319, 325, 328, 330, 331, 338, 341, 345, 349, 357, 359, 363, 373, 381, 386, 389, 391, 393, 396, 402, 404, 407, 413, 414, 416, 417, 420, 425, 429, 433, 437, 438, 446, 448, 449, 450, 458, 459, 460, 462, 463, 464, 465, 466, 469, 470, 472, 473, 474, 475, 477, 478, 479], "notic": [1, 34, 56, 72, 75, 77, 88, 98, 99, 100, 103, 104, 105, 107, 109, 129, 130, 155, 164, 170, 181, 183, 199, 215, 224, 228, 247, 255, 266, 280, 300, 329, 334, 337, 352, 359, 366, 381, 383, 423, 425, 427, 437, 439, 445, 450, 458, 460, 462, 466, 469, 470, 472, 473, 477, 478], "though": [1, 9, 11, 30, 32, 34, 56, 57, 62, 63, 72, 74, 75, 79, 83, 84, 85, 86, 91, 93, 94, 100, 102, 103, 106, 107, 111, 112, 113, 117, 123, 129, 130, 133, 151, 152, 155, 157, 158, 165, 170, 174, 183, 190, 193, 196, 197, 202, 203, 205, 208, 210, 222, 227, 232, 240, 244, 247, 248, 249, 252, 255, 259, 264, 266, 268, 272, 280, 281, 285, 289, 290, 302, 308, 311, 316, 325, 328, 338, 341, 344, 359, 362, 363, 366, 379, 381, 383, 385, 386, 387, 390, 392, 404, 407, 408, 412, 422, 423, 425, 426, 427, 429, 431, 432, 433, 437, 439, 441, 446, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473], "mai": [1, 5, 7, 9, 10, 11, 12, 13, 14, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 37, 38, 41, 42, 44, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 123, 125, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 178, 180, 181, 183, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 308, 309, 310, 311, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 366, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "while": [1, 7, 13, 16, 22, 23, 28, 32, 34, 35, 39, 44, 47, 48, 51, 56, 62, 63, 67, 71, 72, 74, 75, 79, 83, 84, 85, 86, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 112, 113, 117, 119, 122, 123, 124, 130, 131, 133, 135, 136, 137, 144, 146, 148, 151, 155, 157, 164, 165, 166, 167, 169, 172, 173, 174, 176, 180, 181, 183, 187, 188, 189, 190, 193, 196, 205, 206, 208, 210, 222, 223, 224, 227, 229, 231, 232, 233, 239, 240, 244, 247, 248, 251, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 272, 280, 281, 289, 290, 293, 294, 296, 299, 303, 305, 308, 311, 313, 315, 316, 323, 325, 326, 328, 330, 332, 334, 335, 337, 338, 341, 342, 344, 345, 346, 349, 355, 357, 359, 361, 362, 363, 366, 368, 377, 378, 381, 383, 385, 391, 392, 395, 396, 397, 398, 407, 410, 419, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "A": [1, 5, 7, 9, 10, 11, 19, 23, 29, 33, 34, 38, 41, 42, 44, 48, 50, 51, 56, 57, 60, 62, 63, 67, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 88, 91, 93, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 144, 147, 148, 150, 151, 152, 154, 155, 157, 158, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 178, 180, 181, 183, 185, 186, 188, 190, 193, 194, 196, 197, 199, 200, 202, 203, 205, 208, 210, 211, 213, 215, 218, 220, 222, 223, 224, 226, 227, 229, 232, 233, 234, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 315, 316, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 372, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 410, 411, 412, 413, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 466, 468, 469, 470, 472, 476, 477, 478, 479, 481], "been": [1, 2, 5, 7, 13, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 42, 44, 46, 48, 57, 58, 59, 62, 63, 66, 69, 72, 74, 77, 78, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 123, 124, 126, 130, 131, 133, 136, 137, 138, 141, 144, 146, 148, 150, 152, 155, 157, 158, 163, 164, 166, 173, 174, 176, 178, 180, 181, 183, 187, 188, 190, 193, 196, 198, 199, 201, 204, 209, 210, 215, 220, 222, 223, 224, 227, 229, 232, 233, 237, 239, 240, 241, 244, 245, 247, 248, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 273, 278, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 299, 302, 304, 305, 306, 311, 313, 315, 316, 317, 319, 325, 326, 328, 330, 331, 332, 334, 335, 337, 338, 340, 341, 344, 345, 347, 349, 351, 353, 355, 357, 358, 359, 361, 362, 363, 365, 366, 372, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 402, 404, 405, 408, 409, 410, 413, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 429, 432, 433, 434, 439, 440, 441, 443, 444, 447, 448, 449, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "track": [1, 23, 28, 34, 41, 62, 67, 77, 84, 86, 93, 98, 99, 102, 103, 123, 148, 155, 157, 164, 166, 178, 182, 183, 184, 190, 224, 233, 251, 266, 272, 280, 281, 289, 290, 293, 296, 313, 316, 325, 349, 362, 363, 366, 368, 385, 386, 392, 407, 423, 441, 449, 459, 460, 463, 466, 468, 471, 472, 474, 475, 476, 477, 478, 479], "overview": [1, 31, 67, 73, 77, 104, 106, 115, 161, 171, 222, 253, 254, 256, 274, 277, 285, 289, 304, 305, 312, 383, 388, 406, 443, 458, 459, 460, 461, 462, 464, 465, 466, 471, 472, 475, 477, 481], "help": [1, 23, 32, 34, 44, 48, 57, 60, 64, 65, 67, 74, 77, 79, 85, 86, 88, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 115, 119, 120, 147, 148, 149, 152, 155, 157, 166, 173, 174, 182, 184, 187, 188, 189, 190, 197, 219, 220, 222, 223, 225, 227, 231, 232, 235, 238, 241, 243, 247, 250, 251, 252, 254, 255, 258, 259, 278, 285, 290, 293, 294, 305, 332, 334, 337, 338, 341, 349, 359, 363, 364, 365, 366, 372, 375, 377, 383, 386, 387, 391, 392, 395, 396, 402, 410, 418, 425, 429, 432, 434, 436, 437, 438, 441, 442, 445, 447, 448, 449, 452, 453, 456, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "comprehens": [1, 24, 67, 83, 84, 86, 98, 107, 109, 146, 188, 222, 232, 252, 261, 296, 341, 366, 426, 427, 428, 432, 437, 442, 448, 454, 463, 464, 466, 467, 469, 470, 473, 474, 475, 477, 478, 479, 481], "guid": [1, 67, 69, 73, 79, 82, 85, 86, 89, 90, 91, 95, 98, 102, 106, 108, 111, 180, 183, 184, 187, 207, 222, 248, 290, 292, 295, 372, 387, 396, 438, 443, 450, 451, 453, 456, 457, 461, 465, 466, 471, 472, 474], "individu": [1, 5, 10, 13, 41, 44, 57, 60, 62, 67, 91, 93, 97, 98, 99, 100, 103, 109, 114, 117, 155, 172, 174, 181, 183, 187, 188, 190, 193, 195, 200, 203, 216, 227, 245, 246, 251, 258, 264, 268, 278, 279, 280, 290, 291, 310, 316, 329, 333, 341, 342, 350, 353, 355, 356, 361, 363, 364, 366, 373, 381, 383, 385, 386, 387, 391, 395, 397, 405, 410, 416, 417, 419, 423, 425, 429, 431, 433, 437, 439, 440, 446, 447, 452, 460, 463, 464, 466, 468, 469, 473, 474, 479], "interest": [1, 22, 62, 67, 71, 72, 74, 76, 79, 83, 84, 92, 93, 94, 96, 99, 100, 103, 104, 106, 117, 135, 148, 150, 151, 157, 164, 180, 187, 190, 191, 197, 204, 212, 213, 222, 233, 244, 258, 264, 268, 270, 273, 283, 289, 294, 305, 311, 325, 346, 350, 362, 364, 365, 383, 385, 386, 387, 392, 397, 398, 412, 425, 431, 433, 448, 451, 459, 460, 461, 462, 464, 466], "translat": [1, 63, 67, 72, 86, 102, 103, 105, 106, 155, 173, 174, 184, 209, 210, 217, 219, 222, 235, 237, 242, 243, 247, 251, 255, 259, 279, 290, 330, 334, 340, 341, 342, 345, 384, 410, 414, 416, 423, 424, 425, 459, 462, 463, 465, 466, 467, 468, 470, 472, 475, 478], "github": [1, 74, 79, 108, 245, 304, 385, 423, 471, 476, 477], "primari": [1, 13, 67, 75, 77, 84, 86, 92, 93, 105, 111, 154, 166, 190, 191, 193, 202, 203, 215, 224, 258, 264, 273, 278, 290, 296, 305, 331, 334, 337, 338, 342, 349, 375, 399, 416, 422, 428, 429, 430, 433, 435, 445, 446, 447, 449, 459, 460, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474], "contact": [1, 92, 392, 404], "should": [1, 3, 5, 7, 10, 11, 13, 14, 18, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 41, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 82, 84, 85, 86, 87, 88, 91, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 121, 122, 123, 125, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 315, 316, 317, 318, 319, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 391, 392, 395, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 481], "via": [1, 4, 7, 32, 35, 41, 44, 60, 62, 63, 67, 72, 75, 79, 83, 84, 86, 88, 94, 96, 98, 99, 107, 109, 110, 112, 113, 117, 119, 120, 122, 127, 136, 137, 141, 148, 157, 164, 167, 180, 187, 190, 193, 197, 198, 199, 202, 203, 204, 205, 210, 213, 215, 218, 222, 225, 229, 230, 232, 233, 239, 244, 248, 252, 258, 259, 262, 263, 264, 265, 266, 275, 280, 281, 289, 290, 294, 295, 296, 299, 302, 305, 311, 314, 316, 317, 318, 320, 332, 334, 335, 338, 341, 342, 345, 349, 352, 357, 359, 381, 383, 385, 386, 392, 397, 402, 404, 407, 410, 415, 416, 422, 424, 425, 427, 437, 439, 451, 452, 455, 459, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "http": [1, 67, 70, 74, 77, 78, 79, 80, 83, 84, 94, 99, 100, 102, 104, 106, 107, 123, 130, 139, 140, 147, 148, 153, 155, 157, 159, 163, 166, 180, 197, 205, 206, 223, 232, 236, 237, 245, 248, 251, 253, 258, 266, 304, 310, 311, 315, 316, 323, 324, 325, 330, 334, 335, 337, 338, 349, 359, 376, 379, 384, 385, 390, 391, 392, 393, 396, 400, 406, 408, 410, 412, 415, 416, 417, 421, 423, 425, 429, 432, 437, 441, 442, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 471, 478], "com": [1, 67, 68, 72, 74, 79, 83, 84, 92, 99, 100, 102, 103, 107, 133, 159, 163, 173, 180, 181, 197, 240, 245, 258, 285, 294, 304, 315, 316, 323, 337, 338, 341, 385, 392, 393, 395, 402, 410, 416, 450, 451, 456, 458, 461, 463, 464, 465, 466, 471, 472, 473, 474, 475, 478], "cpython": [1, 4, 10, 13, 32, 34, 53, 56, 58, 62, 67, 70, 72, 74, 75, 79, 84, 86, 88, 95, 98, 139, 155, 158, 183, 185, 188, 207, 210, 211, 222, 232, 234, 247, 252, 254, 272, 280, 290, 293, 300, 308, 313, 317, 321, 329, 340, 341, 345, 349, 350, 359, 362, 376, 382, 399, 404, 422, 424, 425, 426, 427, 428, 431, 433, 447, 452, 453, 457, 458, 460, 461, 462, 464, 465, 466, 472, 473, 475, 481], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 426, 428, 431, 432, 434, 436, 437, 440, 441, 444, 446, 448, 449, 450, 451, 452, 453, 455, 457, 459, 460, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481], "offer": [1, 32, 62, 72, 73, 83, 88, 90, 91, 92, 93, 94, 97, 99, 100, 106, 107, 154, 157, 158, 169, 183, 213, 220, 222, 228, 232, 233, 251, 255, 258, 264, 265, 266, 268, 280, 291, 293, 294, 313, 315, 316, 317, 321, 329, 334, 337, 341, 345, 351, 362, 363, 386, 392, 402, 405, 413, 423, 436, 440, 443, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 472, 474, 478, 479], "web": [1, 67, 83, 84, 94, 102, 104, 106, 107, 120, 148, 223, 232, 241, 242, 244, 251, 253, 254, 266, 269, 310, 337, 338, 391, 392, 393, 404, 407, 417, 423, 429, 442, 449, 450, 451, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474, 481], "form": [1, 5, 7, 23, 30, 32, 33, 36, 37, 53, 54, 62, 67, 71, 72, 77, 78, 79, 80, 84, 86, 88, 91, 94, 97, 99, 100, 103, 104, 106, 107, 110, 117, 118, 119, 123, 131, 141, 148, 155, 158, 164, 166, 172, 173, 174, 175, 178, 180, 183, 184, 187, 188, 190, 193, 194, 195, 197, 200, 202, 203, 205, 206, 210, 218, 222, 223, 225, 227, 237, 238, 239, 241, 242, 245, 248, 252, 254, 256, 258, 263, 264, 265, 266, 268, 270, 271, 273, 280, 285, 290, 291, 293, 295, 299, 301, 302, 304, 313, 316, 331, 334, 337, 338, 339, 341, 342, 343, 344, 346, 349, 355, 359, 361, 362, 363, 364, 365, 366, 373, 381, 384, 385, 386, 387, 391, 392, 393, 395, 397, 402, 404, 405, 407, 410, 416, 418, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 449, 452, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "allow": [1, 3, 5, 7, 9, 10, 16, 22, 23, 27, 32, 33, 34, 40, 41, 42, 44, 48, 56, 57, 58, 60, 62, 63, 67, 70, 71, 72, 74, 75, 78, 80, 83, 84, 86, 88, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 140, 147, 148, 150, 151, 154, 155, 157, 158, 160, 163, 164, 166, 170, 172, 173, 174, 177, 178, 180, 182, 183, 186, 187, 188, 190, 191, 192, 193, 199, 200, 202, 205, 207, 208, 210, 211, 212, 215, 218, 220, 222, 223, 224, 225, 227, 231, 232, 239, 240, 241, 242, 244, 245, 247, 250, 252, 255, 258, 259, 260, 262, 263, 264, 265, 266, 268, 272, 273, 275, 276, 280, 284, 285, 289, 290, 292, 293, 294, 296, 299, 302, 304, 305, 308, 310, 311, 315, 316, 317, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 341, 342, 343, 345, 346, 349, 350, 351, 353, 355, 357, 359, 361, 362, 363, 366, 371, 372, 373, 374, 377, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 410, 412, 413, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 432, 433, 436, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pertin": [1, 264, 322], "enter": [1, 32, 33, 34, 67, 77, 78, 79, 83, 84, 85, 86, 91, 94, 96, 104, 106, 132, 141, 148, 152, 154, 156, 166, 174, 186, 222, 244, 255, 279, 289, 290, 294, 309, 322, 332, 337, 338, 341, 349, 356, 362, 366, 372, 381, 385, 397, 424, 425, 426, 434, 437, 438, 440, 441, 445, 446, 447, 449, 451, 452, 461, 462, 464, 472, 473, 474, 477, 478], "first": [1, 5, 13, 14, 15, 16, 18, 22, 23, 25, 27, 30, 32, 33, 34, 36, 38, 40, 41, 44, 46, 48, 50, 53, 57, 58, 59, 60, 62, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 117, 118, 119, 123, 129, 131, 132, 135, 136, 137, 138, 141, 144, 147, 148, 150, 152, 154, 155, 157, 163, 164, 166, 168, 172, 173, 174, 175, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 210, 211, 212, 215, 218, 220, 222, 223, 225, 226, 227, 229, 232, 233, 239, 240, 241, 244, 245, 252, 254, 255, 256, 258, 262, 263, 264, 265, 266, 268, 269, 272, 273, 275, 278, 280, 281, 284, 285, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 304, 305, 310, 311, 313, 316, 317, 321, 322, 325, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 361, 363, 364, 366, 370, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 397, 398, 399, 402, 404, 405, 407, 410, 411, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 447, 449, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "step": [1, 55, 62, 67, 71, 72, 76, 83, 85, 92, 94, 98, 101, 102, 103, 104, 105, 107, 109, 117, 119, 138, 141, 144, 148, 152, 155, 157, 163, 166, 173, 182, 183, 188, 190, 222, 227, 229, 233, 239, 244, 247, 258, 264, 272, 278, 280, 288, 289, 290, 294, 315, 316, 335, 337, 341, 349, 355, 357, 373, 381, 387, 396, 411, 418, 424, 425, 427, 433, 438, 441, 442, 444, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475], "file": [1, 7, 16, 20, 23, 25, 30, 31, 32, 33, 40, 44, 48, 50, 56, 58, 62, 65, 67, 70, 71, 72, 74, 75, 76, 77, 79, 80, 86, 88, 92, 93, 94, 96, 98, 101, 103, 104, 107, 108, 109, 111, 112, 115, 116, 118, 119, 122, 124, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 154, 155, 157, 160, 166, 168, 171, 173, 174, 175, 180, 181, 182, 183, 184, 187, 188, 193, 197, 198, 201, 203, 204, 205, 209, 210, 212, 215, 217, 220, 222, 225, 226, 227, 228, 233, 237, 239, 240, 242, 245, 246, 249, 250, 251, 252, 254, 256, 257, 259, 261, 262, 263, 264, 266, 268, 270, 271, 273, 274, 276, 277, 280, 285, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 309, 310, 311, 314, 316, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 331, 334, 335, 337, 338, 339, 341, 344, 345, 347, 348, 349, 352, 354, 356, 358, 359, 360, 362, 363, 364, 365, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 439, 440, 442, 444, 445, 446, 449, 450, 452, 455, 456, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 479, 480, 481], "determin": [1, 3, 5, 7, 10, 11, 18, 22, 23, 32, 33, 34, 38, 39, 44, 48, 53, 59, 62, 67, 72, 74, 75, 84, 86, 91, 93, 97, 99, 100, 102, 103, 104, 105, 106, 117, 118, 123, 130, 133, 141, 144, 148, 151, 154, 155, 156, 157, 158, 172, 173, 174, 176, 178, 179, 181, 183, 186, 187, 188, 190, 194, 200, 205, 208, 210, 212, 222, 227, 229, 239, 244, 245, 247, 251, 252, 256, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 276, 280, 283, 289, 290, 291, 292, 293, 294, 296, 300, 304, 305, 308, 311, 315, 316, 317, 318, 325, 327, 328, 329, 330, 331, 334, 337, 340, 341, 342, 343, 344, 345, 347, 349, 351, 352, 353, 355, 357, 358, 363, 364, 366, 373, 375, 381, 383, 385, 392, 395, 396, 397, 402, 407, 412, 418, 421, 422, 423, 424, 426, 427, 429, 431, 432, 433, 437, 438, 439, 440, 447, 452, 458, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477], "whether": [1, 5, 7, 9, 10, 11, 13, 14, 17, 23, 30, 34, 44, 57, 58, 62, 63, 72, 77, 78, 84, 85, 88, 91, 92, 94, 97, 98, 99, 102, 103, 104, 106, 111, 112, 113, 117, 130, 136, 140, 141, 144, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 164, 166, 173, 174, 178, 180, 183, 186, 188, 190, 193, 199, 204, 205, 207, 217, 222, 227, 228, 231, 232, 240, 241, 244, 247, 252, 255, 256, 258, 263, 265, 266, 268, 269, 272, 273, 280, 281, 289, 290, 291, 292, 293, 294, 296, 299, 304, 305, 307, 308, 311, 313, 314, 316, 321, 323, 325, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 343, 344, 345, 349, 354, 355, 357, 359, 362, 363, 366, 373, 377, 381, 383, 384, 385, 386, 387, 391, 392, 393, 395, 396, 397, 399, 402, 404, 406, 407, 412, 417, 418, 419, 421, 423, 424, 425, 426, 427, 429, 433, 437, 438, 439, 440, 445, 447, 452, 453, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "problem": [1, 23, 25, 32, 34, 58, 62, 67, 72, 75, 77, 79, 83, 84, 85, 86, 87, 91, 92, 94, 98, 99, 100, 101, 102, 104, 106, 108, 111, 122, 123, 138, 149, 151, 155, 156, 164, 166, 168, 172, 180, 183, 187, 190, 193, 196, 200, 202, 204, 220, 227, 233, 242, 244, 247, 251, 259, 263, 264, 265, 280, 281, 287, 289, 290, 296, 305, 311, 330, 334, 337, 338, 341, 344, 354, 355, 359, 361, 383, 386, 387, 390, 392, 399, 404, 407, 410, 424, 432, 435, 436, 439, 440, 441, 443, 448, 449, 450, 451, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478], "alreadi": [1, 5, 7, 9, 10, 13, 22, 23, 24, 27, 28, 30, 32, 33, 37, 41, 48, 50, 53, 59, 60, 62, 63, 65, 67, 72, 74, 75, 76, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 105, 106, 108, 109, 113, 117, 119, 123, 124, 126, 130, 136, 144, 148, 157, 160, 163, 164, 166, 168, 173, 178, 180, 181, 186, 187, 193, 196, 197, 202, 205, 207, 208, 209, 210, 215, 220, 222, 224, 229, 233, 239, 240, 244, 245, 247, 252, 255, 258, 264, 265, 267, 268, 273, 278, 279, 280, 281, 289, 290, 293, 296, 299, 302, 304, 305, 317, 318, 325, 326, 329, 330, 334, 337, 338, 340, 341, 345, 349, 350, 353, 355, 356, 359, 362, 366, 373, 376, 381, 385, 386, 387, 391, 392, 394, 396, 397, 400, 402, 407, 408, 410, 414, 418, 424, 425, 427, 429, 433, 437, 438, 439, 440, 443, 447, 450, 451, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "advantag": [1, 32, 50, 72, 74, 77, 84, 94, 99, 100, 105, 183, 194, 220, 247, 296, 305, 321, 328, 341, 364, 372, 385, 399, 408, 410, 412, 443, 448, 459, 462, 463, 468, 471, 472, 473, 474, 475, 478], "asid": [1, 32, 104, 180, 222, 244, 305, 355, 387, 425, 427, 472, 477, 478], "save": [1, 13, 22, 23, 27, 32, 34, 41, 62, 67, 71, 72, 74, 84, 86, 92, 93, 94, 98, 99, 100, 103, 117, 126, 136, 137, 144, 146, 148, 149, 152, 164, 166, 174, 180, 197, 206, 223, 224, 240, 244, 258, 263, 266, 267, 268, 289, 290, 296, 305, 310, 315, 316, 317, 331, 337, 349, 359, 362, 363, 365, 366, 378, 380, 381, 397, 402, 416, 421, 422, 424, 425, 436, 437, 438, 442, 444, 447, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 477, 479], "what": [1, 5, 9, 19, 23, 25, 26, 29, 30, 32, 33, 34, 38, 39, 41, 48, 50, 53, 57, 62, 63, 67, 71, 74, 75, 77, 78, 85, 86, 88, 92, 93, 94, 96, 100, 102, 103, 104, 106, 107, 109, 117, 119, 123, 130, 136, 148, 151, 155, 160, 164, 167, 172, 173, 174, 180, 182, 183, 184, 196, 197, 198, 200, 204, 205, 210, 212, 220, 222, 227, 232, 233, 240, 241, 244, 245, 246, 247, 248, 258, 263, 264, 265, 266, 267, 269, 276, 286, 290, 292, 293, 295, 304, 308, 311, 312, 315, 316, 317, 323, 325, 329, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 349, 355, 358, 359, 365, 372, 373, 377, 380, 381, 383, 385, 386, 387, 391, 397, 407, 408, 410, 418, 421, 424, 426, 427, 429, 431, 432, 433, 437, 438, 439, 440, 441, 442, 447, 450, 456, 458], "done": [1, 5, 7, 10, 14, 30, 32, 33, 34, 35, 46, 48, 50, 51, 53, 54, 56, 57, 61, 62, 63, 65, 71, 72, 74, 75, 83, 84, 85, 88, 91, 94, 96, 97, 99, 100, 103, 104, 106, 107, 108, 111, 117, 122, 123, 126, 130, 133, 136, 138, 148, 152, 155, 156, 163, 164, 170, 172, 173, 174, 180, 181, 183, 188, 190, 193, 197, 201, 202, 205, 206, 213, 222, 226, 228, 229, 231, 232, 233, 242, 244, 247, 252, 255, 263, 264, 265, 266, 275, 280, 285, 289, 290, 292, 293, 296, 299, 305, 306, 311, 313, 316, 331, 335, 337, 338, 341, 342, 345, 349, 355, 356, 357, 358, 359, 363, 364, 372, 373, 381, 382, 383, 386, 387, 392, 396, 397, 399, 405, 408, 409, 410, 411, 418, 425, 427, 429, 432, 433, 436, 437, 438, 439, 443, 445, 449, 458, 459, 460, 461, 462, 464, 465, 470, 471, 472, 473, 474, 475, 476, 478], "next": [1, 7, 23, 26, 32, 35, 36, 41, 62, 63, 67, 71, 72, 74, 75, 77, 79, 84, 86, 91, 92, 93, 94, 97, 100, 102, 103, 106, 109, 111, 114, 122, 123, 136, 138, 141, 144, 146, 148, 150, 152, 154, 156, 157, 164, 172, 173, 174, 183, 187, 188, 190, 191, 192, 193, 194, 202, 208, 210, 215, 218, 222, 223, 224, 227, 229, 233, 239, 240, 244, 247, 250, 252, 254, 258, 264, 266, 267, 268, 275, 279, 280, 285, 289, 290, 293, 294, 304, 305, 311, 315, 316, 317, 320, 322, 327, 328, 330, 334, 335, 337, 338, 340, 341, 342, 345, 350, 351, 355, 366, 372, 373, 381, 386, 387, 392, 395, 397, 410, 422, 424, 425, 426, 427, 429, 431, 433, 434, 436, 437, 438, 439, 444, 445, 446, 447, 449, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 473, 475, 477, 478, 479], "releas": [1, 3, 4, 5, 7, 9, 12, 13, 23, 26, 28, 33, 34, 35, 38, 41, 44, 47, 50, 51, 56, 57, 60, 62, 63, 67, 71, 72, 74, 75, 76, 79, 83, 84, 86, 91, 92, 94, 100, 102, 105, 106, 107, 110, 112, 119, 123, 129, 132, 135, 136, 144, 163, 166, 173, 174, 188, 207, 222, 231, 232, 233, 252, 255, 264, 268, 280, 281, 290, 296, 300, 323, 330, 334, 337, 340, 341, 349, 354, 359, 362, 366, 368, 379, 381, 383, 397, 419, 423, 425, 433, 437, 440, 447, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 472, 481], "addit": [1, 5, 7, 9, 10, 23, 30, 32, 34, 40, 41, 44, 57, 60, 62, 65, 67, 72, 74, 75, 79, 83, 86, 93, 94, 96, 97, 98, 99, 100, 103, 106, 108, 109, 110, 112, 113, 114, 117, 119, 122, 136, 138, 142, 147, 148, 154, 155, 157, 164, 166, 167, 168, 170, 172, 173, 174, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 193, 194, 196, 199, 200, 202, 203, 205, 207, 210, 212, 215, 218, 220, 222, 223, 224, 227, 229, 231, 232, 237, 238, 239, 240, 242, 244, 247, 248, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 267, 268, 271, 272, 273, 275, 280, 282, 288, 289, 290, 291, 293, 296, 300, 302, 303, 304, 305, 311, 313, 316, 318, 323, 327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 342, 344, 345, 346, 349, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 369, 372, 373, 375, 381, 383, 384, 385, 386, 387, 391, 392, 396, 397, 399, 402, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 419, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "need": [1, 5, 7, 10, 11, 13, 18, 23, 26, 28, 30, 32, 33, 34, 41, 44, 48, 50, 51, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 122, 123, 129, 134, 135, 136, 137, 138, 141, 145, 146, 148, 150, 151, 152, 154, 155, 157, 158, 164, 166, 168, 170, 173, 174, 176, 178, 180, 183, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 220, 222, 223, 226, 227, 231, 232, 233, 235, 237, 240, 242, 244, 245, 247, 248, 249, 252, 254, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 271, 275, 278, 280, 281, 283, 285, 289, 290, 291, 292, 293, 296, 299, 300, 302, 303, 304, 305, 308, 311, 315, 316, 317, 318, 319, 322, 323, 327, 328, 329, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 355, 357, 358, 359, 361, 362, 363, 365, 366, 372, 374, 375, 381, 382, 383, 385, 386, 387, 391, 392, 393, 396, 397, 399, 400, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "case": [1, 5, 7, 10, 13, 14, 18, 22, 23, 24, 25, 27, 30, 32, 33, 34, 38, 40, 44, 48, 51, 55, 56, 57, 58, 60, 62, 63, 65, 67, 70, 71, 72, 74, 75, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 97, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 118, 119, 121, 122, 123, 126, 130, 132, 135, 136, 138, 141, 143, 146, 148, 151, 152, 155, 156, 157, 160, 164, 166, 170, 172, 173, 174, 175, 178, 180, 183, 184, 185, 187, 188, 190, 192, 193, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 217, 222, 224, 227, 229, 231, 232, 233, 236, 237, 240, 241, 242, 244, 245, 247, 248, 252, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 280, 285, 286, 289, 290, 291, 292, 293, 294, 296, 299, 300, 304, 305, 311, 313, 315, 316, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 341, 342, 343, 344, 345, 349, 351, 352, 355, 356, 357, 359, 362, 363, 364, 366, 372, 373, 375, 379, 381, 383, 384, 386, 387, 388, 391, 392, 396, 397, 398, 402, 404, 406, 407, 408, 410, 412, 413, 417, 418, 422, 425, 426, 427, 428, 429, 432, 433, 434, 435, 437, 438, 439, 440, 441, 445, 447, 449, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "provid": [1, 5, 7, 10, 11, 15, 18, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 48, 50, 53, 56, 57, 60, 61, 62, 63, 65, 67, 71, 73, 74, 77, 78, 79, 83, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 130, 133, 134, 136, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 447, 448, 449, 452, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "To": [1, 3, 5, 10, 13, 22, 23, 28, 30, 32, 34, 35, 41, 44, 47, 56, 59, 60, 62, 63, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 106, 107, 109, 110, 113, 117, 122, 123, 129, 132, 133, 136, 144, 148, 149, 154, 155, 156, 157, 158, 160, 164, 166, 167, 170, 172, 173, 174, 178, 180, 183, 185, 187, 190, 194, 197, 198, 199, 200, 205, 206, 207, 209, 211, 215, 222, 223, 224, 225, 227, 231, 232, 233, 239, 240, 242, 244, 247, 248, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 275, 278, 279, 280, 281, 285, 286, 289, 290, 291, 292, 293, 294, 296, 300, 301, 304, 305, 311, 315, 316, 323, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 355, 357, 359, 362, 363, 364, 365, 366, 368, 372, 373, 375, 379, 381, 382, 383, 385, 386, 387, 391, 392, 397, 402, 408, 409, 410, 412, 416, 418, 422, 424, 425, 427, 429, 432, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "search": [1, 14, 23, 30, 32, 33, 34, 58, 63, 67, 74, 77, 79, 83, 84, 85, 86, 92, 98, 99, 106, 111, 118, 138, 148, 155, 157, 160, 173, 179, 190, 193, 208, 213, 222, 227, 228, 245, 247, 251, 262, 263, 264, 265, 267, 275, 276, 277, 285, 290, 293, 294, 296, 299, 305, 308, 309, 310, 328, 329, 331, 337, 341, 345, 349, 352, 357, 360, 365, 366, 368, 372, 381, 385, 392, 393, 400, 407, 409, 410, 412, 417, 419, 420, 422, 424, 425, 426, 427, 430, 433, 436, 437, 438, 439, 442, 445, 446, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "box": [1, 79, 91, 100, 174, 244, 268, 366, 370, 372, 373, 383, 427, 446, 476, 477, 478], "top": [1, 30, 32, 34, 41, 67, 72, 77, 83, 84, 86, 91, 93, 94, 96, 99, 100, 102, 103, 107, 112, 117, 119, 132, 133, 136, 139, 147, 148, 149, 155, 164, 167, 173, 174, 176, 182, 186, 187, 188, 190, 204, 208, 210, 222, 223, 227, 233, 240, 244, 245, 247, 248, 251, 252, 254, 255, 263, 273, 282, 290, 293, 296, 299, 301, 302, 305, 309, 310, 311, 312, 321, 338, 339, 348, 349, 355, 359, 362, 365, 366, 368, 370, 372, 373, 381, 382, 385, 386, 396, 410, 416, 417, 419, 424, 426, 429, 430, 432, 433, 437, 439, 447, 448, 452, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 471, 472, 473, 474, 476, 477, 478, 479], "log": [1, 33, 58, 67, 79, 86, 92, 94, 95, 106, 115, 123, 136, 144, 148, 149, 151, 161, 163, 166, 185, 190, 211, 220, 227, 233, 242, 251, 255, 272, 285, 290, 302, 315, 324, 329, 332, 338, 341, 345, 349, 353, 355, 359, 383, 385, 397, 404, 417, 425, 440, 442, 448, 452, 458, 459, 460, 461, 463, 464, 465, 468, 469, 479, 481], "don": [1, 5, 6, 8, 9, 18, 23, 28, 32, 33, 34, 47, 48, 56, 57, 58, 62, 67, 72, 74, 75, 78, 79, 80, 82, 86, 88, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 119, 123, 130, 131, 134, 136, 141, 148, 149, 150, 151, 156, 157, 160, 164, 166, 168, 173, 176, 178, 180, 187, 188, 190, 197, 206, 213, 222, 223, 224, 227, 239, 240, 247, 254, 255, 256, 259, 264, 265, 266, 272, 280, 285, 289, 290, 292, 293, 294, 296, 304, 305, 315, 316, 325, 327, 329, 332, 334, 337, 338, 340, 341, 346, 352, 362, 364, 365, 366, 373, 383, 385, 386, 387, 392, 396, 398, 399, 402, 404, 410, 421, 423, 424, 425, 427, 428, 429, 436, 437, 438, 439, 440, 441, 443, 446, 447, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 476, 478, 479], "t": [1, 5, 6, 7, 8, 9, 13, 18, 22, 23, 25, 28, 30, 32, 33, 34, 40, 42, 44, 47, 48, 50, 51, 55, 56, 57, 58, 60, 62, 63, 67, 71, 72, 74, 75, 76, 78, 79, 82, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 122, 123, 126, 129, 130, 131, 132, 134, 136, 140, 141, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 163, 164, 166, 168, 170, 172, 173, 174, 176, 178, 180, 181, 183, 187, 188, 190, 193, 195, 197, 198, 199, 201, 202, 203, 206, 207, 210, 211, 213, 214, 218, 222, 223, 224, 227, 228, 229, 231, 232, 233, 239, 240, 241, 244, 245, 247, 248, 252, 254, 255, 256, 259, 263, 264, 265, 266, 268, 269, 272, 273, 280, 283, 285, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 304, 305, 311, 313, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 352, 353, 355, 359, 361, 362, 363, 364, 365, 366, 373, 374, 375, 377, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 408, 410, 413, 414, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "account": [1, 83, 103, 104, 108, 155, 157, 160, 164, 180, 183, 187, 188, 199, 206, 220, 222, 232, 241, 263, 264, 265, 283, 290, 293, 304, 307, 323, 336, 344, 349, 355, 356, 359, 396, 441, 464, 468, 469, 472, 474, 475, 476, 478, 479], "sign": [1, 18, 34, 48, 63, 67, 74, 84, 103, 118, 138, 151, 155, 157, 164, 173, 174, 180, 183, 193, 198, 206, 218, 222, 225, 232, 263, 265, 266, 269, 272, 280, 281, 289, 290, 292, 294, 296, 316, 333, 341, 342, 344, 362, 363, 391, 410, 425, 427, 432, 439, 443, 445, 446, 449, 458, 460, 461, 463, 464, 465, 466, 471, 472, 474, 476, 478], "up": [1, 7, 9, 14, 23, 32, 34, 35, 41, 44, 56, 60, 62, 63, 67, 72, 74, 75, 76, 77, 79, 83, 85, 86, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 106, 113, 117, 119, 123, 129, 131, 133, 135, 136, 137, 144, 146, 147, 148, 155, 157, 160, 163, 164, 174, 176, 180, 183, 187, 188, 190, 191, 194, 197, 205, 206, 208, 210, 218, 220, 222, 223, 224, 227, 232, 237, 239, 240, 242, 244, 249, 252, 255, 258, 262, 263, 264, 265, 266, 267, 272, 273, 275, 277, 279, 280, 281, 289, 290, 291, 293, 294, 305, 306, 308, 312, 313, 316, 317, 320, 325, 328, 330, 331, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 352, 353, 355, 356, 357, 359, 361, 362, 366, 371, 372, 373, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 399, 404, 407, 410, 413, 414, 418, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 441, 442, 443, 444, 447, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "link": [1, 33, 34, 56, 62, 65, 67, 70, 72, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 99, 100, 104, 108, 115, 119, 139, 157, 158, 160, 175, 180, 197, 209, 228, 232, 237, 240, 242, 254, 256, 258, 263, 264, 290, 291, 293, 300, 325, 329, 338, 339, 345, 349, 351, 354, 355, 359, 366, 372, 373, 396, 399, 400, 402, 404, 410, 411, 423, 425, 429, 436, 451, 452, 453, 457, 459, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "possibl": [1, 2, 5, 7, 10, 13, 18, 22, 23, 27, 32, 33, 34, 38, 41, 46, 56, 57, 60, 62, 63, 65, 67, 70, 71, 72, 75, 77, 78, 80, 82, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 117, 119, 123, 135, 136, 137, 138, 144, 146, 148, 155, 156, 160, 164, 166, 167, 168, 170, 172, 173, 174, 178, 180, 181, 183, 187, 188, 190, 191, 193, 194, 197, 198, 202, 203, 205, 207, 208, 210, 215, 219, 222, 223, 229, 232, 233, 239, 242, 244, 247, 252, 255, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 279, 280, 285, 286, 289, 290, 291, 292, 293, 294, 296, 300, 301, 305, 306, 308, 309, 311, 315, 316, 317, 320, 325, 328, 329, 330, 334, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354, 355, 357, 359, 362, 363, 364, 366, 372, 373, 379, 383, 385, 386, 387, 391, 392, 395, 397, 399, 400, 402, 403, 410, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 431, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 449, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "anonym": [1, 86, 94, 173, 220, 265, 275, 283, 290, 381, 424, 427, 438, 459, 472], "Being": [1, 103, 156, 341, 472, 478], "now": [1, 10, 23, 28, 32, 33, 34, 38, 41, 48, 51, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 123, 124, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 143, 146, 148, 150, 155, 157, 158, 160, 163, 164, 166, 167, 169, 172, 173, 174, 178, 180, 181, 183, 185, 188, 190, 197, 199, 202, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 227, 231, 232, 234, 237, 239, 240, 241, 242, 245, 247, 248, 249, 252, 255, 256, 259, 263, 264, 265, 266, 267, 268, 271, 272, 275, 279, 280, 281, 283, 285, 289, 290, 291, 292, 293, 294, 296, 300, 301, 302, 305, 306, 308, 310, 315, 316, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 356, 357, 362, 363, 364, 374, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 396, 397, 398, 402, 408, 410, 416, 417, 419, 420, 421, 423, 424, 425, 427, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "click": [1, 80, 100, 104, 148, 174, 186, 244, 290, 355, 370, 381, 396, 423, 435, 446, 456, 458, 469, 473, 476, 477, 478], "button": [1, 85, 91, 100, 148, 174, 186, 244, 278, 366, 370, 372, 373, 381, 423, 458, 476, 477, 478], "bar": [1, 28, 50, 84, 85, 86, 93, 99, 100, 101, 103, 117, 119, 152, 164, 173, 174, 197, 225, 240, 244, 247, 259, 264, 265, 280, 285, 288, 289, 290, 291, 293, 294, 299, 301, 305, 308, 310, 331, 337, 341, 355, 359, 366, 371, 373, 382, 383, 385, 386, 387, 404, 419, 420, 422, 424, 429, 431, 432, 433, 438, 459, 465, 470], "submiss": [1, 107, 148, 280, 311, 423, 459], "two": [1, 5, 6, 7, 9, 10, 14, 15, 20, 23, 25, 28, 30, 32, 33, 34, 35, 36, 40, 41, 44, 46, 56, 57, 61, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 111, 114, 117, 119, 123, 129, 130, 133, 135, 136, 138, 140, 141, 143, 144, 147, 148, 151, 152, 154, 155, 156, 157, 160, 164, 168, 169, 170, 172, 173, 174, 175, 178, 180, 183, 186, 187, 188, 190, 191, 192, 193, 197, 199, 204, 205, 206, 207, 208, 210, 213, 215, 218, 220, 222, 223, 224, 225, 226, 227, 232, 233, 240, 242, 244, 245, 246, 247, 252, 254, 255, 256, 257, 258, 263, 264, 265, 268, 272, 273, 275, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 305, 309, 311, 313, 314, 315, 316, 319, 321, 322, 323, 327, 329, 330, 331, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 349, 352, 355, 357, 358, 359, 361, 362, 363, 364, 369, 370, 372, 373, 375, 379, 381, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 402, 404, 405, 407, 410, 413, 418, 419, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "field": [1, 2, 3, 5, 13, 20, 27, 28, 30, 32, 33, 34, 41, 53, 54, 56, 57, 59, 60, 62, 63, 65, 67, 72, 74, 75, 83, 86, 92, 93, 98, 99, 105, 115, 119, 144, 148, 150, 155, 172, 174, 179, 180, 183, 188, 193, 196, 199, 200, 202, 205, 206, 210, 230, 231, 233, 239, 244, 256, 258, 264, 265, 269, 278, 288, 290, 300, 307, 311, 312, 313, 319, 322, 332, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 349, 353, 355, 358, 363, 364, 366, 373, 375, 378, 382, 391, 392, 395, 397, 402, 404, 408, 410, 419, 432, 443, 449, 452, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "titl": [1, 63, 79, 83, 92, 94, 103, 106, 107, 117, 148, 157, 181, 186, 237, 244, 259, 264, 278, 280, 289, 334, 337, 341, 342, 366, 370, 381, 383, 392, 408, 409, 410, 417, 423, 451, 459, 461, 463, 470, 472, 478], "comment": [1, 9, 63, 67, 72, 94, 100, 103, 106, 109, 119, 164, 173, 190, 200, 237, 240, 241, 244, 252, 270, 283, 290, 296, 297, 307, 310, 311, 316, 328, 345, 359, 374, 375, 391, 409, 410, 412, 419, 420, 423, 428, 433, 435, 438, 445, 446, 459, 461, 462, 464, 466, 467, 470, 471, 472, 478], "For": [1, 5, 7, 9, 10, 12, 13, 18, 22, 23, 24, 28, 32, 33, 34, 38, 39, 41, 42, 44, 46, 48, 51, 56, 57, 60, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 119, 122, 123, 125, 129, 130, 131, 136, 140, 141, 144, 145, 146, 147, 148, 151, 155, 156, 157, 158, 163, 164, 166, 167, 168, 170, 172, 173, 174, 178, 180, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 216, 217, 218, 220, 222, 223, 225, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 303, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 323, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 366, 372, 373, 375, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "veri": [1, 7, 10, 31, 32, 34, 51, 58, 62, 67, 72, 73, 74, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 107, 118, 125, 146, 148, 155, 157, 163, 164, 166, 174, 180, 183, 187, 190, 193, 199, 200, 203, 204, 208, 222, 227, 233, 239, 242, 247, 251, 252, 263, 267, 268, 280, 281, 285, 286, 289, 290, 296, 305, 316, 325, 327, 332, 334, 335, 338, 343, 345, 349, 350, 355, 356, 364, 366, 372, 381, 383, 385, 386, 387, 391, 423, 425, 427, 429, 433, 436, 438, 439, 441, 443, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 469, 471, 472, 473, 474, 475, 476, 478], "descript": [1, 5, 23, 24, 34, 52, 57, 58, 62, 63, 67, 72, 73, 88, 91, 92, 96, 98, 99, 100, 110, 114, 115, 119, 125, 136, 138, 157, 163, 168, 172, 173, 174, 179, 187, 188, 190, 193, 197, 198, 199, 202, 209, 212, 227, 238, 242, 247, 248, 252, 256, 263, 264, 265, 267, 270, 275, 281, 285, 289, 290, 292, 294, 297, 304, 310, 319, 329, 330, 334, 337, 338, 341, 346, 353, 356, 357, 358, 359, 363, 366, 372, 373, 379, 381, 383, 385, 396, 397, 398, 405, 411, 412, 416, 417, 424, 425, 426, 427, 431, 433, 438, 442, 448, 452, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 471, 472, 474, 475, 477, 478, 479], "fewer": [1, 103, 119, 172, 244, 255, 258, 316, 337, 340, 373, 429, 438, 462, 464, 467, 469, 474, 476, 477, 478], "than": [1, 5, 10, 15, 18, 22, 23, 24, 25, 29, 32, 33, 34, 37, 38, 39, 40, 41, 44, 48, 51, 54, 55, 56, 57, 60, 62, 63, 67, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 117, 118, 119, 122, 123, 124, 126, 130, 131, 134, 135, 136, 137, 141, 143, 144, 146, 147, 148, 151, 155, 157, 158, 160, 163, 164, 166, 167, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 195, 196, 198, 200, 202, 204, 205, 206, 207, 208, 210, 212, 215, 216, 222, 223, 224, 226, 227, 229, 231, 232, 233, 237, 239, 240, 241, 244, 245, 247, 248, 252, 255, 256, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 303, 304, 305, 309, 310, 311, 313, 315, 316, 317, 319, 321, 322, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 351, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 369, 370, 371, 372, 373, 375, 378, 379, 381, 383, 385, 386, 387, 390, 391, 392, 396, 397, 399, 402, 404, 406, 407, 408, 410, 412, 416, 419, 421, 422, 424, 425, 427, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "ten": [1, 84, 92, 100, 157, 174, 183, 305, 315, 323, 344, 462], "word": [1, 5, 10, 11, 32, 62, 67, 72, 77, 79, 84, 85, 86, 91, 93, 96, 100, 103, 104, 105, 106, 117, 151, 155, 157, 164, 170, 173, 180, 183, 187, 190, 198, 200, 205, 233, 244, 272, 289, 293, 294, 315, 316, 317, 323, 328, 337, 340, 341, 342, 346, 350, 361, 362, 366, 383, 409, 410, 414, 427, 429, 431, 432, 433, 438, 439, 442, 446, 447, 456, 459, 461, 463, 464, 465, 467, 470, 471, 475, 476, 477, 478], "describ": [1, 5, 7, 10, 13, 16, 21, 23, 24, 26, 30, 31, 34, 41, 44, 48, 49, 50, 57, 58, 59, 60, 62, 65, 67, 71, 72, 73, 74, 76, 77, 79, 84, 86, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 123, 125, 134, 140, 141, 142, 147, 148, 149, 155, 157, 160, 161, 163, 164, 166, 171, 172, 173, 174, 177, 178, 179, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 199, 200, 205, 210, 213, 214, 216, 219, 220, 221, 222, 227, 232, 234, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 268, 273, 274, 277, 278, 281, 282, 285, 286, 287, 289, 290, 292, 295, 296, 303, 304, 305, 309, 311, 312, 313, 314, 315, 316, 318, 319, 321, 325, 329, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 351, 354, 355, 357, 360, 362, 366, 372, 373, 380, 381, 383, 385, 386, 388, 391, 392, 394, 396, 401, 402, 403, 404, 405, 407, 411, 412, 413, 416, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "detail": [1, 10, 13, 17, 18, 26, 31, 32, 33, 38, 41, 44, 53, 54, 56, 58, 60, 62, 63, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 106, 107, 109, 111, 114, 115, 117, 119, 122, 123, 126, 127, 130, 133, 134, 136, 138, 139, 141, 145, 148, 149, 150, 155, 165, 166, 167, 169, 170, 172, 173, 174, 178, 179, 182, 183, 187, 188, 190, 191, 193, 198, 202, 204, 208, 210, 212, 220, 222, 223, 227, 231, 232, 234, 238, 242, 243, 244, 246, 247, 248, 252, 255, 256, 259, 262, 264, 266, 267, 268, 269, 271, 272, 278, 280, 284, 285, 287, 289, 290, 292, 296, 297, 298, 313, 315, 316, 317, 319, 321, 323, 328, 329, 332, 333, 334, 335, 336, 337, 339, 341, 342, 344, 345, 346, 349, 351, 352, 353, 355, 356, 359, 361, 362, 366, 370, 378, 382, 383, 385, 386, 391, 392, 393, 394, 396, 397, 399, 402, 404, 405, 407, 410, 412, 416, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 449, 451, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "expect": [1, 5, 9, 23, 28, 34, 38, 44, 51, 56, 57, 62, 65, 67, 72, 74, 75, 76, 77, 83, 84, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 117, 119, 123, 124, 130, 131, 136, 148, 150, 155, 157, 164, 166, 173, 174, 178, 183, 184, 185, 187, 188, 190, 194, 200, 210, 218, 220, 222, 227, 232, 239, 240, 242, 247, 248, 250, 252, 255, 258, 259, 263, 264, 266, 268, 275, 280, 288, 289, 290, 296, 299, 306, 309, 323, 325, 327, 328, 330, 334, 337, 338, 340, 341, 345, 349, 351, 355, 356, 357, 359, 363, 373, 375, 381, 382, 383, 386, 387, 390, 391, 392, 394, 396, 404, 405, 410, 412, 413, 416, 421, 422, 425, 426, 427, 428, 429, 437, 438, 441, 449, 450, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "happen": [1, 18, 23, 25, 32, 34, 58, 67, 72, 75, 77, 83, 85, 88, 91, 92, 94, 100, 102, 104, 107, 112, 123, 135, 136, 154, 166, 173, 174, 178, 180, 187, 204, 210, 220, 222, 223, 233, 244, 247, 252, 255, 263, 264, 265, 266, 281, 289, 290, 292, 296, 311, 316, 325, 331, 334, 338, 341, 342, 349, 350, 356, 357, 358, 359, 362, 366, 378, 385, 386, 387, 392, 404, 424, 425, 426, 427, 429, 432, 433, 437, 438, 440, 445, 447, 459, 461, 463, 464, 465, 466, 467, 469, 471, 474, 475, 478, 479], "did": [1, 75, 83, 86, 88, 100, 103, 104, 107, 124, 136, 163, 164, 188, 190, 199, 240, 242, 280, 281, 283, 289, 290, 311, 316, 326, 338, 345, 349, 357, 379, 380, 383, 385, 392, 412, 419, 425, 428, 439, 446, 459, 460, 461, 469, 471, 472, 473, 474, 477, 478], "Be": [1, 67, 71, 75, 83, 99, 106, 164, 176, 178, 210, 222, 259, 268, 289, 290, 293, 305, 338, 351, 381, 443, 445, 447, 448, 465], "sure": [1, 14, 16, 23, 44, 51, 62, 63, 67, 71, 74, 75, 77, 78, 83, 84, 85, 91, 94, 99, 100, 103, 117, 148, 152, 155, 164, 173, 183, 210, 222, 224, 232, 247, 263, 280, 289, 290, 293, 326, 337, 338, 346, 357, 359, 362, 366, 392, 394, 397, 398, 410, 418, 425, 437, 446, 448, 451, 456, 457, 458, 461, 462, 464, 465, 467, 472, 473], "extens": [1, 3, 5, 7, 10, 11, 13, 23, 27, 31, 33, 34, 41, 44, 49, 56, 60, 61, 62, 65, 67, 71, 77, 79, 81, 84, 85, 86, 91, 93, 95, 102, 103, 111, 115, 136, 140, 149, 164, 170, 173, 174, 178, 180, 181, 186, 187, 190, 191, 197, 200, 205, 215, 217, 224, 232, 233, 238, 239, 242, 243, 245, 247, 248, 251, 252, 253, 255, 259, 266, 268, 270, 273, 277, 285, 286, 289, 290, 291, 293, 294, 296, 302, 305, 309, 311, 314, 315, 316, 327, 328, 329, 330, 332, 334, 337, 338, 341, 349, 351, 352, 355, 359, 362, 365, 366, 379, 381, 382, 383, 385, 399, 402, 407, 408, 411, 412, 416, 418, 419, 423, 425, 427, 429, 430, 435, 436, 437, 438, 442, 447, 448, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479], "modul": [1, 3, 5, 7, 11, 16, 17, 20, 23, 24, 27, 31, 32, 33, 34, 40, 41, 57, 58, 60, 62, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 85, 86, 87, 88, 93, 95, 96, 101, 102, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 301, 302, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 457, 467, 481], "were": [1, 5, 7, 9, 10, 16, 17, 18, 23, 26, 32, 34, 47, 57, 60, 62, 65, 72, 74, 75, 77, 82, 86, 92, 94, 99, 100, 103, 104, 109, 110, 117, 118, 119, 122, 123, 130, 131, 136, 137, 139, 141, 143, 148, 155, 157, 163, 164, 166, 174, 178, 180, 183, 185, 187, 188, 190, 193, 196, 197, 198, 200, 202, 204, 205, 210, 213, 220, 222, 224, 225, 229, 232, 233, 237, 239, 241, 244, 246, 247, 248, 252, 259, 264, 265, 272, 273, 275, 280, 286, 290, 292, 296, 305, 311, 313, 316, 327, 330, 332, 334, 335, 337, 340, 341, 342, 344, 345, 349, 350, 353, 355, 356, 359, 366, 373, 377, 378, 379, 381, 383, 385, 386, 387, 391, 392, 397, 404, 409, 410, 420, 424, 425, 426, 427, 429, 431, 432, 433, 437, 438, 440, 441, 444, 447, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "hardwar": [1, 32, 77, 106, 128, 138, 174, 183, 254, 290, 292, 319, 334, 345, 363, 395, 402, 441, 466, 475], "softwar": [1, 32, 67, 68, 76, 82, 84, 85, 86, 94, 99, 100, 106, 108, 148, 155, 174, 184, 190, 191, 207, 209, 225, 232, 242, 243, 244, 251, 263, 264, 285, 290, 304, 315, 338, 363, 381, 396, 402, 404, 416, 436, 448, 456, 457, 458, 459, 460, 462, 463, 465, 466, 481], "platform": [1, 5, 9, 18, 25, 31, 32, 33, 34, 41, 50, 58, 60, 63, 64, 67, 71, 72, 74, 75, 77, 79, 80, 83, 84, 100, 104, 112, 115, 118, 120, 123, 130, 147, 148, 153, 155, 160, 163, 170, 172, 173, 180, 183, 186, 190, 205, 207, 209, 210, 216, 220, 222, 226, 232, 239, 242, 244, 245, 247, 248, 251, 253, 255, 263, 266, 268, 272, 275, 279, 280, 281, 284, 285, 289, 290, 291, 293, 302, 304, 305, 306, 319, 320, 323, 325, 326, 330, 332, 334, 335, 336, 337, 338, 339, 344, 345, 349, 351, 352, 355, 356, 357, 359, 362, 363, 364, 365, 366, 370, 375, 385, 392, 395, 396, 400, 401, 403, 404, 416, 417, 422, 427, 432, 435, 441, 442, 443, 447, 452, 453, 455, 456, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "version": [1, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 99, 100, 103, 104, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 281, 283, 284, 285, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 364, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 404, 405, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 441, 444, 445, 447, 449, 450, 452, 453, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 481], "appropri": [1, 5, 9, 15, 18, 23, 24, 30, 40, 41, 48, 53, 60, 62, 63, 67, 70, 72, 74, 75, 77, 80, 87, 91, 93, 94, 99, 100, 102, 103, 104, 107, 108, 109, 113, 117, 118, 123, 133, 134, 136, 144, 148, 154, 155, 161, 165, 174, 180, 181, 183, 190, 192, 193, 195, 198, 199, 202, 203, 204, 205, 208, 220, 222, 223, 227, 232, 233, 234, 239, 240, 242, 245, 247, 255, 256, 263, 264, 265, 266, 268, 272, 280, 286, 289, 290, 293, 296, 304, 305, 311, 313, 316, 321, 325, 330, 332, 334, 335, 338, 340, 341, 342, 344, 345, 349, 352, 355, 357, 362, 363, 372, 378, 381, 382, 383, 386, 390, 391, 392, 396, 399, 400, 405, 407, 408, 410, 412, 418, 419, 423, 426, 427, 429, 433, 439, 449, 452, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478], "each": [1, 5, 7, 10, 12, 13, 22, 23, 28, 30, 32, 33, 34, 36, 39, 41, 44, 56, 58, 60, 62, 72, 74, 75, 76, 77, 78, 79, 83, 85, 86, 88, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 117, 119, 123, 129, 130, 131, 135, 136, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 163, 164, 166, 172, 173, 174, 176, 178, 180, 181, 183, 187, 188, 190, 192, 193, 194, 199, 200, 201, 202, 205, 208, 209, 211, 213, 215, 220, 222, 223, 224, 225, 227, 229, 232, 233, 239, 240, 241, 242, 244, 245, 246, 247, 248, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 278, 280, 281, 285, 289, 290, 291, 292, 293, 294, 296, 297, 299, 302, 304, 305, 306, 309, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 355, 356, 358, 359, 361, 362, 364, 366, 369, 370, 372, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 397, 399, 402, 404, 405, 406, 407, 408, 410, 412, 414, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 448, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "review": [1, 56, 107, 140, 166, 232, 337, 462, 467, 469, 472, 476, 478], "who": [1, 11, 31, 67, 72, 79, 82, 97, 99, 100, 105, 106, 123, 160, 225, 227, 245, 264, 271, 290, 297, 319, 323, 338, 342, 355, 381, 408, 418, 420, 422, 423, 443, 458, 459, 461, 462, 463, 464, 466, 470, 473, 476, 478, 479], "correct": [1, 7, 32, 62, 63, 67, 70, 72, 76, 84, 93, 94, 97, 106, 107, 109, 111, 130, 166, 173, 184, 185, 188, 190, 193, 194, 196, 205, 208, 213, 237, 240, 244, 245, 251, 272, 275, 280, 286, 289, 290, 292, 296, 311, 328, 329, 334, 338, 340, 341, 342, 344, 345, 346, 349, 363, 381, 383, 385, 386, 387, 392, 396, 398, 404, 412, 418, 421, 422, 423, 425, 427, 437, 438, 440, 441, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "receiv": [1, 5, 16, 23, 32, 34, 44, 48, 66, 67, 71, 72, 75, 79, 83, 94, 99, 102, 104, 107, 111, 112, 117, 121, 123, 127, 129, 130, 131, 133, 135, 148, 152, 155, 164, 173, 187, 210, 220, 222, 232, 237, 239, 240, 241, 242, 244, 245, 256, 264, 265, 266, 271, 272, 280, 285, 292, 296, 302, 306, 311, 313, 315, 319, 326, 329, 330, 332, 334, 335, 338, 340, 345, 350, 356, 362, 373, 378, 383, 385, 392, 397, 399, 404, 407, 408, 410, 411, 412, 417, 423, 424, 426, 427, 438, 448, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "updat": [1, 22, 32, 33, 41, 44, 51, 58, 62, 67, 74, 75, 79, 83, 84, 85, 91, 92, 94, 100, 106, 113, 114, 117, 123, 127, 130, 132, 137, 157, 158, 160, 166, 174, 176, 180, 186, 188, 190, 193, 202, 204, 210, 222, 223, 232, 233, 234, 241, 244, 245, 247, 252, 255, 262, 268, 275, 278, 280, 285, 288, 289, 290, 293, 296, 299, 303, 312, 315, 321, 327, 334, 337, 338, 341, 345, 352, 355, 363, 366, 373, 377, 381, 382, 386, 391, 392, 396, 398, 404, 410, 418, 425, 429, 433, 437, 448, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "action": [1, 32, 41, 54, 67, 72, 74, 75, 88, 91, 103, 112, 115, 119, 141, 152, 157, 166, 172, 174, 187, 197, 212, 225, 233, 239, 245, 278, 280, 290, 294, 298, 305, 306, 322, 325, 330, 335, 337, 341, 349, 355, 356, 357, 358, 362, 373, 381, 385, 386, 392, 396, 397, 404, 421, 423, 425, 438, 442, 452, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 472, 474, 479], "taken": [1, 5, 32, 33, 41, 44, 54, 62, 65, 72, 74, 86, 94, 100, 117, 138, 141, 157, 160, 164, 180, 183, 188, 190, 193, 199, 202, 203, 208, 213, 222, 224, 227, 245, 258, 263, 265, 266, 273, 275, 280, 290, 291, 305, 308, 311, 319, 323, 328, 337, 338, 340, 341, 344, 350, 355, 357, 359, 361, 362, 364, 378, 379, 392, 394, 397, 424, 425, 429, 433, 437, 447, 459, 461, 462, 464, 470, 471, 472, 473, 474, 478], "effect": [1, 9, 11, 14, 22, 23, 27, 32, 33, 44, 51, 57, 58, 62, 63, 67, 72, 74, 77, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 107, 108, 110, 112, 117, 118, 119, 123, 129, 137, 141, 144, 156, 163, 164, 166, 173, 174, 178, 180, 183, 184, 188, 190, 200, 205, 207, 210, 212, 215, 222, 223, 224, 228, 233, 240, 244, 247, 255, 258, 260, 263, 264, 265, 266, 269, 280, 289, 290, 292, 293, 294, 299, 305, 308, 311, 315, 316, 319, 320, 321, 322, 325, 327, 328, 329, 331, 337, 338, 339, 340, 341, 342, 345, 349, 355, 357, 359, 361, 362, 363, 373, 379, 381, 382, 383, 385, 386, 397, 402, 409, 417, 418, 419, 422, 424, 425, 427, 429, 432, 433, 437, 438, 439, 442, 447, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "articl": [1, 94, 106, 223, 232, 258, 268, 285, 338, 381, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "goe": [1, 34, 76, 86, 88, 92, 98, 103, 117, 119, 127, 130, 131, 164, 166, 174, 175, 190, 227, 240, 244, 265, 272, 280, 289, 311, 313, 340, 349, 378, 383, 424, 438, 441, 447, 461, 469, 472, 473], "some": [1, 2, 5, 7, 10, 21, 23, 28, 32, 33, 34, 41, 51, 56, 57, 58, 59, 60, 62, 63, 67, 71, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 123, 127, 128, 129, 130, 134, 135, 136, 138, 142, 146, 148, 151, 152, 154, 155, 157, 158, 160, 161, 163, 164, 165, 166, 172, 173, 174, 177, 178, 179, 180, 181, 183, 185, 187, 188, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 210, 212, 213, 215, 216, 218, 222, 223, 224, 227, 231, 232, 233, 236, 237, 240, 241, 244, 245, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 303, 304, 305, 308, 311, 315, 316, 319, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 366, 373, 374, 378, 379, 381, 382, 383, 385, 386, 387, 388, 391, 392, 395, 396, 397, 399, 400, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "about": [1, 5, 7, 10, 13, 14, 22, 23, 25, 27, 28, 34, 41, 50, 56, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 111, 117, 119, 123, 125, 127, 130, 138, 140, 141, 151, 152, 154, 155, 157, 158, 159, 166, 169, 172, 173, 175, 178, 180, 183, 184, 187, 188, 191, 192, 194, 198, 200, 204, 206, 210, 213, 220, 222, 224, 232, 234, 240, 242, 244, 247, 252, 254, 255, 258, 262, 264, 265, 266, 267, 268, 272, 275, 276, 280, 285, 286, 288, 289, 290, 293, 294, 296, 297, 300, 302, 304, 305, 309, 315, 316, 317, 318, 319, 325, 327, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 344, 345, 349, 350, 355, 356, 359, 366, 373, 378, 381, 383, 385, 386, 387, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 409, 411, 412, 413, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 433, 436, 438, 439, 440, 442, 443, 446, 447, 450, 451, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "kind": [1, 16, 33, 34, 62, 63, 67, 72, 75, 77, 78, 84, 86, 97, 98, 100, 102, 104, 106, 117, 119, 130, 148, 157, 173, 190, 210, 222, 247, 248, 252, 254, 255, 278, 280, 286, 290, 293, 296, 298, 316, 325, 337, 338, 341, 343, 349, 362, 366, 370, 383, 385, 392, 397, 406, 410, 411, 412, 423, 424, 425, 427, 428, 429, 437, 438, 440, 441, 453, 458, 461, 462, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478], "why": [1, 34, 67, 72, 73, 74, 81, 91, 92, 93, 94, 97, 99, 102, 106, 111, 113, 148, 164, 173, 190, 198, 232, 247, 250, 258, 268, 272, 280, 289, 290, 296, 342, 352, 385, 386, 387, 404, 425, 437, 441, 450, 458, 461, 464, 466, 471, 477], "write": [1, 5, 7, 18, 23, 24, 25, 28, 31, 32, 33, 34, 35, 40, 41, 42, 50, 57, 58, 62, 63, 67, 71, 73, 74, 75, 77, 79, 82, 85, 86, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 109, 111, 113, 116, 117, 118, 120, 123, 127, 132, 133, 134, 136, 137, 139, 140, 144, 146, 148, 152, 154, 155, 157, 158, 160, 164, 166, 167, 173, 174, 177, 181, 184, 186, 187, 190, 193, 197, 198, 202, 205, 210, 212, 214, 215, 216, 219, 220, 222, 223, 224, 225, 227, 231, 233, 240, 242, 243, 244, 245, 247, 251, 252, 255, 256, 259, 264, 265, 266, 268, 271, 274, 275, 280, 281, 283, 285, 289, 290, 291, 292, 293, 295, 296, 298, 301, 302, 304, 305, 306, 308, 314, 315, 317, 325, 326, 327, 328, 329, 330, 334, 335, 338, 339, 341, 344, 345, 347, 349, 352, 353, 356, 357, 360, 362, 365, 366, 368, 373, 375, 376, 377, 379, 381, 383, 385, 386, 387, 394, 396, 397, 402, 404, 407, 408, 410, 412, 414, 416, 418, 419, 421, 423, 424, 425, 428, 429, 430, 433, 436, 437, 438, 440, 441, 442, 446, 447, 448, 449, 452, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "guidelin": [1, 34, 67, 74, 87, 98, 161, 244, 359, 370, 459, 460, 464], "mozilla": [1, 107, 240, 338, 392, 400, 463], "practic": [1, 34, 41, 62, 67, 73, 75, 79, 83, 86, 91, 94, 95, 97, 99, 100, 102, 107, 117, 171, 174, 175, 183, 190, 191, 196, 220, 222, 232, 239, 245, 248, 249, 252, 280, 281, 285, 302, 315, 332, 337, 338, 341, 355, 363, 366, 383, 391, 408, 422, 423, 425, 427, 437, 438, 440, 441, 443, 446, 447, 460, 461, 462, 467, 469, 470, 472, 474, 477], "beyond": [1, 32, 67, 73, 79, 86, 88, 91, 97, 99, 103, 115, 157, 180, 183, 194, 200, 252, 259, 265, 268, 279, 290, 316, 334, 337, 338, 341, 344, 383, 402, 424, 431, 438, 460, 471, 473], "them": [1, 5, 7, 15, 16, 22, 23, 24, 32, 33, 34, 44, 56, 58, 62, 63, 65, 67, 70, 72, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 111, 117, 118, 119, 122, 123, 125, 131, 136, 144, 148, 152, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 178, 180, 181, 183, 185, 188, 190, 192, 193, 198, 203, 205, 211, 213, 222, 223, 224, 227, 228, 229, 232, 233, 237, 240, 241, 244, 245, 247, 248, 252, 254, 255, 263, 264, 265, 266, 268, 280, 281, 285, 286, 288, 289, 290, 292, 293, 296, 304, 305, 314, 316, 319, 321, 325, 327, 332, 334, 337, 338, 339, 340, 341, 344, 345, 346, 349, 350, 352, 355, 356, 359, 361, 362, 364, 366, 372, 373, 379, 381, 383, 385, 386, 387, 392, 397, 398, 402, 406, 407, 408, 409, 410, 419, 424, 425, 427, 428, 429, 431, 433, 438, 439, 440, 441, 443, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "more": [1, 5, 10, 11, 13, 17, 18, 22, 23, 24, 25, 27, 32, 33, 34, 41, 44, 48, 50, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 122, 123, 126, 127, 130, 131, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 166, 167, 169, 170, 172, 173, 174, 178, 180, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 212, 215, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 244, 245, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 272, 273, 275, 278, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 304, 305, 308, 309, 311, 313, 314, 315, 316, 318, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 355, 356, 358, 359, 361, 362, 363, 364, 366, 371, 372, 373, 374, 378, 379, 383, 385, 386, 391, 392, 393, 396, 397, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 412, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 437, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479], "": [1, 3, 5, 7, 9, 10, 11, 14, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 41, 42, 44, 48, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 130, 132, 133, 134, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 278, 280, 281, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 301, 302, 304, 306, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 350, 351, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458], "question": [1, 57, 67, 72, 77, 78, 85, 86, 93, 94, 99, 100, 103, 106, 110, 119, 138, 155, 190, 191, 232, 263, 264, 289, 302, 337, 366, 370, 393, 403, 404, 439, 448, 451, 459, 461, 462, 464, 477, 479], "core": [1, 23, 28, 32, 33, 58, 67, 72, 86, 99, 103, 115, 123, 160, 163, 164, 202, 232, 247, 248, 251, 254, 258, 263, 266, 288, 289, 290, 297, 305, 310, 315, 319, 330, 341, 359, 362, 366, 382, 386, 396, 407, 410, 422, 423, 425, 430, 433, 447, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "mentorship": 1, "friendli": [1, 62, 91, 100, 117, 187, 191, 289, 334, 349, 385, 410, 422, 437, 459, 474, 477, 479], "place": [1, 13, 22, 23, 27, 32, 33, 34, 37, 41, 44, 46, 51, 53, 57, 59, 60, 62, 63, 67, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 92, 93, 94, 96, 98, 99, 100, 105, 107, 109, 117, 119, 131, 136, 148, 149, 155, 157, 164, 165, 166, 172, 173, 174, 178, 180, 183, 186, 187, 188, 190, 193, 202, 205, 208, 215, 221, 222, 223, 224, 227, 229, 233, 240, 244, 247, 254, 255, 259, 264, 265, 266, 268, 272, 275, 280, 290, 293, 294, 296, 299, 305, 308, 311, 313, 315, 316, 318, 321, 335, 337, 338, 341, 342, 345, 361, 366, 372, 373, 377, 381, 382, 383, 385, 386, 387, 392, 394, 396, 404, 418, 419, 423, 424, 425, 427, 429, 433, 437, 438, 439, 443, 445, 446, 447, 449, 450, 452, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 477, 478], "answer": [1, 77, 84, 88, 92, 93, 108, 130, 151, 190, 223, 232, 265, 268, 305, 342, 363, 370, 393, 437, 439, 441, 443, 448, 451, 459, 463, 467], "all": [1, 2, 4, 5, 7, 9, 14, 17, 22, 23, 25, 28, 30, 32, 33, 34, 37, 38, 41, 44, 46, 51, 54, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 79, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 281, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 313, 315, 319, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 372, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 391, 392, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 481], "pertain": [1, 32, 34, 62, 72, 290, 349, 372, 423, 467], "function": [2, 6, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 79, 80, 83, 85, 86, 87, 88, 91, 95, 96, 97, 99, 100, 101, 102, 106, 107, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 159, 161, 164, 165, 167, 168, 171, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 239, 240, 242, 244, 245, 246, 251, 253, 254, 255, 259, 261, 262, 263, 266, 267, 269, 270, 271, 273, 275, 277, 278, 280, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 325, 327, 328, 329, 330, 331, 333, 335, 336, 339, 343, 346, 347, 348, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 366, 368, 370, 374, 375, 376, 377, 378, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 421, 426, 428, 429, 430, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 456, 458, 461, 462, 466, 468, 469, 471, 472, 474, 478, 479, 481], "chapter": [2, 16, 23, 34, 41, 49, 64, 65, 71, 72, 74, 75, 76, 77, 83, 90, 94, 115, 116, 142, 161, 171, 177, 179, 184, 210, 214, 216, 219, 221, 243, 244, 253, 254, 257, 274, 277, 282, 287, 295, 312, 347, 349, 360, 364, 388, 401, 427, 431, 432, 434, 436, 438, 439, 443], "interact": [2, 23, 32, 33, 34, 41, 58, 62, 65, 67, 71, 78, 79, 83, 84, 85, 86, 92, 100, 103, 111, 112, 117, 119, 123, 133, 141, 147, 152, 163, 165, 174, 177, 183, 184, 188, 191, 204, 210, 211, 215, 222, 240, 244, 251, 252, 254, 255, 280, 281, 289, 290, 291, 292, 294, 304, 305, 310, 312, 317, 320, 331, 338, 345, 349, 351, 355, 356, 366, 372, 373, 378, 381, 385, 392, 397, 410, 417, 419, 425, 428, 429, 430, 431, 432, 433, 436, 437, 438, 442, 446, 447, 448, 452, 458, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 86, 88, 89, 93, 96, 99, 100, 103, 104, 105, 107, 110, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 129, 132, 133, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157, 163, 164, 165, 166, 168, 170, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 192, 193, 195, 196, 199, 201, 202, 204, 205, 206, 207, 208, 210, 212, 216, 218, 219, 220, 222, 223, 224, 227, 228, 231, 232, 233, 234, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 262, 265, 266, 268, 270, 272, 275, 276, 277, 278, 280, 281, 285, 286, 288, 289, 291, 292, 293, 295, 297, 299, 300, 302, 303, 304, 310, 311, 315, 316, 317, 318, 320, 324, 325, 328, 329, 331, 332, 334, 335, 338, 340, 341, 342, 344, 345, 348, 349, 350, 353, 354, 357, 360, 362, 363, 365, 373, 376, 378, 379, 380, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 399, 400, 402, 404, 406, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 436, 438, 439, 440, 441, 443, 444, 448, 449, 450, 451, 452, 454], "regardless": [2, 9, 10, 24, 32, 33, 34, 40, 58, 63, 77, 93, 111, 117, 136, 163, 166, 172, 174, 180, 183, 205, 208, 217, 222, 244, 247, 254, 255, 258, 259, 293, 299, 311, 330, 331, 332, 334, 337, 338, 341, 342, 344, 345, 349, 350, 352, 357, 373, 381, 385, 386, 387, 396, 397, 399, 400, 409, 422, 427, 429, 432, 440, 452, 458, 471, 472, 473, 474, 475, 477], "type": [2, 3, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 66, 67, 72, 73, 76, 78, 79, 83, 84, 85, 86, 87, 88, 91, 92, 97, 99, 100, 104, 107, 109, 112, 113, 114, 115, 118, 120, 123, 124, 136, 139, 141, 142, 147, 148, 149, 150, 152, 155, 157, 158, 164, 165, 166, 168, 169, 170, 172, 174, 175, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213, 218, 220, 222, 223, 224, 227, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 253, 254, 255, 258, 259, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 278, 280, 281, 282, 287, 288, 290, 291, 293, 294, 295, 300, 301, 303, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 321, 322, 325, 326, 327, 328, 329, 330, 334, 335, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 355, 357, 359, 360, 362, 363, 365, 370, 373, 374, 375, 376, 378, 379, 381, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 401, 403, 405, 406, 408, 409, 410, 412, 413, 416, 417, 419, 421, 422, 423, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 466, 467, 468, 472, 481], "wide": [2, 31, 33, 58, 63, 67, 73, 77, 79, 91, 94, 98, 99, 102, 106, 108, 112, 117, 127, 129, 132, 138, 147, 152, 164, 173, 174, 180, 183, 190, 191, 240, 244, 251, 252, 254, 263, 268, 279, 290, 292, 296, 299, 302, 312, 327, 338, 340, 341, 344, 345, 355, 360, 362, 363, 372, 407, 419, 422, 423, 443, 453, 458, 461, 464, 465, 466, 470, 471, 472, 473, 474], "class": [2, 10, 22, 28, 31, 32, 39, 43, 44, 48, 51, 52, 53, 57, 60, 61, 62, 63, 66, 67, 72, 74, 75, 79, 83, 85, 86, 87, 91, 94, 97, 99, 102, 103, 104, 105, 106, 107, 109, 110, 115, 118, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 161, 164, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 208, 215, 216, 218, 219, 220, 221, 222, 223, 224, 229, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 253, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 270, 273, 275, 276, 277, 281, 282, 283, 285, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 301, 302, 304, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 334, 335, 337, 338, 340, 342, 345, 348, 349, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 384, 391, 393, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 426, 427, 428, 429, 430, 431, 433, 436, 438, 439, 440, 442, 443, 447, 448, 449, 452, 458, 459, 460, 462, 463, 466, 467, 468, 471, 472, 474, 475, 477, 478, 479, 481], "e": [2, 3, 4, 5, 7, 9, 13, 17, 18, 22, 23, 27, 28, 32, 33, 34, 44, 48, 51, 56, 57, 58, 59, 60, 62, 63, 65, 67, 70, 79, 83, 84, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 117, 119, 122, 123, 126, 128, 129, 130, 133, 135, 136, 138, 140, 146, 147, 148, 151, 152, 155, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 178, 180, 183, 187, 188, 190, 192, 193, 196, 197, 199, 202, 203, 206, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 249, 250, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 278, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 305, 308, 310, 316, 319, 321, 325, 326, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 349, 351, 352, 353, 355, 357, 359, 362, 363, 366, 369, 373, 375, 376, 381, 382, 383, 384, 385, 386, 392, 395, 396, 397, 399, 402, 404, 405, 407, 408, 409, 410, 411, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 437, 438, 439, 440, 445, 446, 447, 449, 452, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "g": [2, 4, 5, 13, 17, 18, 22, 23, 27, 28, 32, 34, 44, 48, 51, 56, 57, 58, 60, 62, 65, 67, 70, 71, 72, 79, 83, 84, 86, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 112, 117, 119, 122, 123, 126, 128, 129, 130, 133, 135, 140, 146, 147, 148, 151, 152, 155, 157, 159, 164, 165, 166, 167, 173, 174, 175, 180, 183, 188, 190, 192, 193, 196, 199, 202, 203, 205, 206, 208, 210, 211, 212, 215, 218, 220, 222, 223, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 242, 244, 245, 247, 249, 250, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 273, 278, 280, 285, 288, 289, 290, 291, 293, 294, 296, 300, 303, 305, 308, 310, 316, 319, 321, 325, 326, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 352, 355, 357, 362, 363, 364, 366, 373, 375, 376, 377, 381, 383, 384, 385, 386, 392, 396, 397, 402, 404, 407, 408, 410, 416, 419, 422, 424, 425, 427, 429, 431, 432, 437, 438, 439, 445, 446, 447, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "numer": [2, 4, 7, 31, 40, 46, 62, 63, 67, 79, 84, 86, 94, 99, 100, 103, 104, 106, 107, 141, 144, 151, 155, 172, 174, 179, 183, 188, 206, 208, 209, 210, 218, 222, 230, 231, 235, 237, 239, 242, 251, 258, 259, 263, 264, 272, 280, 288, 290, 299, 305, 307, 311, 315, 316, 322, 328, 332, 334, 337, 338, 340, 342, 349, 366, 373, 374, 381, 384, 385, 386, 390, 392, 410, 416, 419, 427, 439, 441, 443, 446, 448, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478], "sequenc": [2, 5, 7, 14, 22, 31, 32, 34, 36, 38, 41, 48, 49, 55, 58, 63, 65, 67, 74, 77, 78, 83, 86, 91, 93, 94, 98, 100, 103, 106, 109, 117, 118, 119, 123, 133, 136, 140, 142, 154, 155, 156, 157, 158, 160, 161, 172, 173, 174, 186, 187, 188, 190, 193, 199, 202, 203, 206, 209, 210, 215, 222, 227, 229, 233, 235, 240, 247, 251, 252, 255, 256, 258, 259, 260, 263, 265, 267, 268, 272, 273, 278, 280, 281, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 304, 309, 311, 316, 318, 322, 323, 329, 334, 337, 338, 340, 342, 355, 356, 359, 360, 363, 364, 366, 373, 375, 378, 379, 381, 383, 384, 385, 386, 387, 391, 392, 395, 397, 399, 402, 407, 410, 411, 416, 421, 422, 427, 431, 433, 437, 438, 442, 446, 449, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "when": [2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 47, 48, 49, 51, 53, 56, 57, 58, 60, 62, 63, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 91, 92, 94, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 218, 220, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 275, 278, 280, 281, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 362, 363, 364, 366, 368, 369, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "usthei": [2, 5, 7, 8, 10, 18, 21, 23, 24, 28, 29, 32, 33, 34, 41, 44, 47, 53, 54, 56, 57, 58, 60, 62, 63, 65, 72, 73, 74, 75, 77, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 119, 122, 123, 126, 130, 131, 132, 135, 136, 137, 138, 141, 144, 147, 148, 150, 151, 152, 155, 157, 158, 160, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 204, 205, 206, 208, 210, 212, 213, 215, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 237, 240, 241, 244, 245, 247, 249, 252, 253, 255, 256, 258, 259, 264, 265, 266, 267, 268, 272, 273, 274, 278, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 304, 305, 306, 309, 311, 313, 315, 316, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 372, 373, 374, 377, 378, 381, 383, 384, 385, 386, 387, 390, 391, 392, 396, 397, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 419, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "appli": [2, 6, 13, 18, 33, 34, 51, 62, 63, 67, 72, 74, 77, 79, 80, 86, 87, 93, 94, 99, 100, 109, 113, 117, 118, 119, 136, 138, 144, 151, 155, 157, 166, 172, 173, 174, 175, 178, 180, 183, 184, 187, 188, 190, 195, 202, 205, 206, 210, 217, 220, 222, 223, 227, 232, 240, 241, 242, 244, 252, 256, 258, 264, 265, 267, 268, 269, 273, 280, 289, 290, 294, 296, 305, 311, 316, 318, 319, 321, 325, 329, 334, 338, 340, 341, 342, 345, 349, 351, 355, 359, 362, 363, 364, 366, 373, 375, 379, 383, 384, 385, 386, 391, 393, 397, 406, 408, 410, 416, 419, 423, 424, 425, 426, 427, 429, 433, 435, 437, 439, 443, 446, 447, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "rais": [2, 5, 7, 9, 10, 13, 14, 18, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 44, 46, 48, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 72, 74, 75, 77, 85, 86, 87, 91, 92, 93, 94, 97, 100, 102, 104, 106, 107, 109, 111, 112, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 154, 155, 156, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 178, 180, 181, 183, 184, 188, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 208, 210, 212, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 244, 245, 247, 249, 250, 251, 252, 253, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 278, 279, 280, 281, 283, 284, 285, 288, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 313, 315, 316, 319, 320, 322, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 362, 363, 366, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 435, 437, 438, 439, 442, 443, 447, 449, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "except": [2, 5, 7, 9, 10, 11, 13, 14, 17, 18, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 44, 46, 47, 48, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 73, 74, 75, 78, 79, 83, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 106, 109, 110, 111, 112, 114, 115, 118, 119, 120, 123, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 167, 168, 170, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 187, 188, 191, 192, 193, 197, 198, 202, 203, 204, 205, 207, 209, 211, 212, 214, 215, 220, 222, 223, 224, 225, 226, 231, 232, 234, 237, 239, 240, 241, 242, 244, 245, 247, 251, 252, 253, 254, 255, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 305, 308, 312, 313, 314, 317, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 335, 341, 342, 346, 349, 350, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 372, 375, 376, 378, 379, 382, 383, 385, 386, 389, 391, 392, 394, 396, 397, 398, 399, 400, 402, 404, 408, 411, 412, 413, 416, 417, 419, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 481], "properli": [2, 23, 32, 33, 34, 44, 48, 58, 62, 72, 75, 77, 100, 103, 104, 111, 123, 134, 166, 167, 187, 199, 200, 204, 206, 208, 210, 227, 247, 263, 271, 280, 290, 305, 311, 332, 338, 344, 345, 355, 357, 362, 366, 373, 383, 385, 386, 391, 392, 412, 421, 425, 443, 445, 458, 460, 461, 462, 466, 467, 473, 474, 476, 478], "initi": [2, 3, 5, 13, 16, 18, 22, 23, 24, 27, 28, 30, 31, 34, 41, 48, 50, 57, 58, 59, 60, 62, 65, 67, 68, 70, 71, 73, 75, 78, 84, 85, 91, 92, 94, 98, 99, 100, 105, 106, 111, 112, 117, 118, 119, 123, 131, 132, 135, 136, 137, 138, 139, 143, 152, 155, 157, 163, 164, 172, 173, 174, 178, 183, 186, 187, 188, 190, 192, 199, 200, 203, 210, 220, 222, 223, 224, 227, 229, 231, 232, 233, 234, 240, 244, 245, 247, 251, 255, 258, 259, 263, 264, 265, 266, 267, 268, 273, 275, 277, 278, 280, 281, 283, 285, 289, 290, 291, 296, 298, 302, 305, 311, 315, 317, 318, 328, 331, 332, 334, 335, 337, 338, 341, 345, 349, 353, 356, 357, 362, 363, 364, 366, 373, 381, 382, 383, 385, 392, 396, 397, 410, 416, 421, 422, 423, 424, 425, 428, 429, 433, 434, 437, 439, 440, 446, 447, 452, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479], "pylist_new": [2, 34, 37, 56], "whose": [2, 5, 10, 23, 30, 32, 34, 41, 44, 59, 60, 62, 72, 77, 84, 85, 86, 88, 92, 100, 117, 118, 119, 157, 166, 172, 173, 174, 178, 180, 183, 190, 195, 197, 200, 202, 205, 208, 210, 212, 213, 218, 222, 223, 225, 230, 233, 239, 240, 241, 249, 252, 255, 263, 264, 265, 266, 268, 271, 280, 286, 289, 290, 293, 294, 296, 304, 305, 307, 309, 313, 316, 319, 329, 330, 331, 334, 336, 337, 340, 341, 342, 349, 355, 357, 359, 362, 363, 366, 370, 373, 377, 378, 385, 386, 387, 392, 397, 399, 402, 410, 412, 424, 425, 427, 429, 432, 437, 439, 459, 460, 461, 463, 464, 465, 466, 471, 473, 474, 475, 477, 478], "set": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 44, 47, 48, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 109, 111, 112, 114, 117, 119, 120, 122, 124, 126, 127, 130, 132, 133, 134, 135, 136, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 219, 220, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 237, 238, 239, 240, 241, 242, 245, 248, 249, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 304, 305, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 325, 327, 328, 329, 331, 332, 334, 335, 337, 339, 340, 342, 343, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 370, 371, 372, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 426, 428, 429, 432, 433, 435, 437, 438, 442, 443, 445, 447, 448, 449, 451, 452, 453, 455, 456, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "non": [2, 5, 7, 9, 10, 11, 12, 13, 18, 21, 22, 23, 25, 26, 28, 30, 33, 34, 35, 37, 38, 41, 44, 48, 57, 58, 59, 60, 62, 63, 67, 70, 72, 74, 75, 79, 83, 84, 86, 91, 92, 93, 94, 96, 98, 99, 100, 106, 107, 112, 113, 117, 119, 122, 123, 129, 130, 136, 140, 141, 146, 148, 152, 155, 163, 164, 166, 172, 173, 174, 175, 178, 180, 181, 183, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 239, 240, 242, 244, 245, 247, 249, 250, 254, 255, 256, 258, 262, 263, 264, 265, 266, 270, 272, 273, 275, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 302, 303, 305, 308, 311, 313, 314, 315, 316, 317, 319, 323, 325, 328, 329, 330, 331, 332, 334, 335, 339, 340, 341, 342, 343, 344, 345, 349, 352, 355, 356, 359, 361, 362, 363, 374, 382, 383, 385, 386, 387, 390, 391, 392, 395, 396, 397, 398, 400, 412, 416, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 437, 438, 439, 440, 446, 447, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "null": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 74, 75, 78, 92, 98, 100, 102, 106, 119, 172, 173, 188, 222, 224, 240, 259, 269, 278, 281, 284, 290, 296, 315, 316, 334, 337, 338, 344, 345, 346, 402, 405, 407, 408, 419, 428, 432, 433, 459, 463, 466, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479], "valu": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 71, 73, 74, 75, 77, 86, 87, 88, 91, 92, 97, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 119, 123, 124, 126, 130, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 170, 172, 174, 175, 179, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 214, 215, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 364, 366, 369, 370, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 426, 428, 429, 430, 432, 433, 437, 439, 440, 441, 442, 443, 446, 447, 448, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "yet": [2, 5, 13, 14, 23, 28, 30, 32, 33, 44, 62, 63, 72, 77, 78, 79, 83, 84, 85, 88, 91, 93, 98, 102, 103, 108, 110, 121, 126, 130, 134, 136, 148, 163, 166, 173, 174, 183, 193, 194, 202, 210, 224, 229, 233, 247, 254, 265, 280, 290, 292, 294, 305, 331, 332, 338, 341, 345, 362, 378, 383, 386, 407, 410, 421, 426, 428, 433, 436, 437, 443, 447, 459, 461, 462, 464, 466, 471, 474, 476, 477, 479], "protocol": [2, 8, 9, 23, 28, 31, 54, 57, 60, 62, 65, 67, 73, 78, 79, 83, 86, 93, 94, 97, 100, 104, 106, 107, 113, 118, 120, 123, 126, 133, 134, 138, 139, 142, 143, 148, 155, 158, 166, 173, 180, 181, 184, 191, 200, 206, 209, 214, 222, 232, 238, 240, 242, 247, 248, 251, 252, 255, 257, 259, 264, 265, 266, 268, 280, 290, 291, 292, 296, 297, 325, 326, 327, 334, 335, 337, 341, 343, 344, 347, 355, 356, 359, 362, 366, 386, 387, 392, 402, 404, 413, 416, 417, 420, 424, 425, 427, 432, 437, 443, 448, 453, 459, 461, 462, 464, 466, 467, 468, 469, 470, 472, 474, 477, 479, 481], "call": [2, 3, 5, 7, 9, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 73, 74, 75, 76, 80, 83, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 146, 148, 150, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 174, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 215, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 285, 286, 288, 290, 291, 292, 293, 294, 296, 299, 302, 304, 305, 306, 307, 311, 313, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 428, 429, 432, 433, 436, 437, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 479], "tp_call": [2, 23, 62, 67, 74, 471], "vectorcal": [2, 27, 57, 60, 62, 67, 469, 470, 471, 479], "recurs": [2, 22, 27, 31, 32, 60, 67, 72, 84, 86, 94, 109, 119, 139, 148, 160, 164, 167, 168, 178, 187, 188, 190, 193, 197, 202, 210, 213, 222, 223, 228, 247, 249, 259, 271, 280, 290, 293, 294, 296, 299, 304, 305, 310, 318, 327, 329, 339, 349, 354, 355, 362, 381, 383, 385, 386, 392, 409, 410, 419, 425, 426, 429, 433, 437, 438, 439, 459, 460, 461, 462, 463, 465, 470, 471, 472, 474, 475, 476, 477, 478], "control": [2, 7, 31, 32, 33, 34, 41, 47, 49, 57, 64, 67, 72, 73, 74, 76, 78, 82, 83, 86, 91, 92, 93, 98, 99, 100, 102, 103, 105, 112, 117, 120, 123, 127, 129, 130, 133, 134, 136, 140, 141, 146, 148, 149, 152, 155, 157, 160, 163, 168, 172, 173, 174, 175, 180, 181, 183, 187, 188, 190, 191, 193, 194, 198, 199, 202, 204, 205, 207, 208, 210, 212, 215, 219, 220, 222, 224, 226, 231, 242, 244, 245, 247, 251, 252, 253, 255, 256, 259, 261, 264, 265, 266, 268, 273, 278, 279, 280, 281, 285, 289, 290, 292, 294, 295, 296, 302, 304, 305, 306, 308, 311, 312, 314, 318, 319, 325, 326, 328, 330, 334, 335, 338, 340, 341, 343, 344, 345, 349, 350, 355, 357, 361, 362, 364, 366, 371, 372, 373, 377, 378, 382, 385, 386, 387, 388, 391, 392, 396, 399, 402, 403, 404, 410, 412, 414, 416, 417, 419, 421, 423, 424, 425, 426, 427, 429, 431, 433, 435, 437, 440, 441, 442, 443, 445, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "support": [2, 5, 7, 12, 13, 16, 22, 23, 24, 25, 31, 33, 34, 36, 37, 39, 41, 42, 46, 47, 48, 53, 56, 57, 59, 60, 62, 64, 66, 67, 72, 73, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 103, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 120, 123, 126, 127, 129, 130, 133, 134, 136, 138, 140, 143, 144, 150, 155, 157, 158, 160, 161, 168, 170, 172, 173, 174, 177, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 198, 199, 200, 201, 204, 205, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 232, 234, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 280, 281, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 304, 305, 308, 311, 312, 313, 315, 316, 317, 318, 319, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 352, 356, 357, 358, 362, 363, 365, 366, 370, 373, 374, 375, 376, 378, 379, 382, 384, 385, 387, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 481], "api": [2, 7, 11, 13, 15, 16, 17, 20, 22, 23, 24, 26, 27, 28, 34, 37, 38, 44, 45, 47, 50, 54, 57, 58, 60, 62, 63, 64, 67, 71, 73, 74, 75, 78, 83, 86, 87, 90, 91, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 117, 122, 124, 125, 126, 129, 130, 133, 134, 136, 137, 139, 156, 158, 161, 166, 167, 172, 173, 174, 182, 184, 185, 188, 189, 191, 192, 194, 195, 198, 199, 200, 202, 203, 205, 206, 208, 214, 220, 225, 232, 233, 243, 247, 251, 252, 254, 255, 256, 258, 259, 264, 265, 266, 268, 270, 277, 278, 279, 280, 282, 290, 291, 292, 295, 299, 301, 306, 315, 316, 317, 329, 334, 338, 339, 342, 349, 350, 352, 354, 357, 359, 362, 366, 376, 383, 385, 386, 387, 391, 392, 397, 402, 403, 404, 406, 408, 411, 412, 416, 417, 426, 427, 429, 430, 432, 433, 437, 438, 442, 448, 458, 459, 460, 461, 481], "number": [2, 3, 4, 7, 9, 10, 13, 16, 18, 20, 22, 23, 25, 26, 28, 30, 31, 32, 34, 38, 39, 40, 41, 49, 51, 53, 54, 57, 58, 59, 63, 64, 65, 67, 71, 72, 74, 75, 76, 77, 78, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 126, 129, 130, 131, 134, 135, 136, 138, 141, 143, 146, 147, 148, 149, 152, 155, 157, 160, 163, 164, 165, 167, 170, 171, 172, 173, 174, 180, 183, 185, 187, 188, 190, 192, 193, 196, 199, 200, 202, 205, 208, 209, 210, 211, 212, 213, 215, 220, 222, 223, 224, 227, 229, 231, 232, 233, 237, 239, 241, 242, 244, 245, 247, 248, 251, 252, 254, 255, 256, 258, 261, 263, 264, 266, 267, 268, 269, 271, 273, 275, 278, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 293, 294, 296, 297, 300, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322, 325, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 355, 356, 359, 361, 362, 363, 364, 366, 369, 373, 374, 375, 377, 378, 379, 381, 382, 383, 385, 386, 391, 392, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 410, 411, 413, 414, 416, 419, 422, 424, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "map": [2, 16, 22, 31, 32, 33, 41, 48, 49, 58, 64, 65, 67, 74, 77, 78, 83, 84, 86, 92, 93, 94, 100, 101, 106, 107, 109, 113, 119, 140, 152, 155, 157, 158, 163, 166, 167, 172, 174, 178, 180, 181, 183, 187, 188, 190, 192, 193, 200, 202, 208, 209, 210, 213, 214, 221, 222, 223, 227, 233, 236, 239, 242, 244, 251, 252, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 276, 277, 278, 280, 282, 283, 284, 285, 289, 290, 292, 293, 295, 296, 305, 309, 311, 315, 316, 318, 319, 326, 334, 337, 338, 340, 342, 343, 344, 345, 349, 359, 362, 363, 364, 373, 374, 381, 382, 383, 384, 386, 391, 392, 399, 404, 408, 410, 412, 413, 427, 428, 429, 433, 437, 438, 439, 441, 447, 449, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "iter": [2, 13, 16, 22, 28, 29, 31, 32, 48, 53, 54, 62, 63, 66, 67, 74, 77, 86, 87, 92, 97, 103, 105, 109, 113, 118, 119, 123, 130, 133, 136, 141, 146, 147, 148, 155, 157, 158, 163, 164, 166, 167, 172, 173, 178, 184, 188, 191, 192, 193, 194, 202, 208, 210, 216, 217, 221, 222, 223, 227, 228, 229, 231, 232, 233, 239, 240, 247, 248, 249, 250, 251, 252, 253, 255, 259, 263, 264, 267, 268, 272, 280, 282, 285, 290, 293, 294, 296, 297, 301, 305, 315, 316, 325, 334, 337, 340, 342, 344, 349, 359, 375, 382, 383, 386, 391, 392, 399, 404, 407, 410, 411, 412, 416, 422, 424, 428, 429, 433, 438, 439, 440, 442, 447, 459, 460, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481], "buffer": [2, 8, 9, 18, 24, 31, 32, 33, 40, 41, 42, 49, 63, 64, 65, 67, 74, 86, 91, 99, 104, 109, 115, 117, 118, 123, 124, 127, 133, 134, 139, 143, 146, 148, 154, 155, 158, 173, 174, 185, 209, 210, 211, 212, 222, 231, 232, 237, 239, 242, 266, 267, 271, 275, 279, 280, 281, 290, 292, 293, 295, 311, 312, 319, 325, 328, 329, 330, 334, 338, 341, 344, 345, 349, 355, 356, 357, 359, 360, 362, 383, 385, 392, 404, 405, 410, 411, 419, 421, 437, 452, 453, 461, 462, 463, 464, 466, 467, 469, 472, 474, 475, 476, 477, 479, 481], "structur": [2, 3, 5, 10, 12, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 31, 32, 33, 34, 41, 42, 44, 46, 49, 51, 54, 56, 58, 60, 65, 67, 72, 74, 75, 77, 78, 84, 85, 86, 91, 92, 94, 98, 99, 103, 115, 119, 120, 125, 132, 136, 141, 150, 155, 174, 179, 184, 191, 193, 198, 200, 201, 202, 203, 204, 209, 210, 212, 214, 219, 220, 223, 227, 230, 233, 237, 242, 244, 245, 248, 251, 252, 253, 255, 258, 259, 268, 273, 278, 280, 290, 291, 293, 296, 302, 304, 307, 308, 316, 329, 330, 334, 336, 338, 341, 343, 344, 345, 351, 359, 363, 366, 372, 381, 382, 385, 386, 393, 399, 407, 410, 411, 415, 416, 419, 420, 424, 425, 429, 430, 436, 438, 442, 447, 448, 449, 459, 460, 461, 462, 463, 464, 465, 466, 470, 472, 473, 474, 475, 476, 477, 478, 479], "independ": [2, 18, 22, 25, 32, 33, 34, 44, 67, 72, 74, 77, 79, 83, 85, 91, 93, 94, 98, 100, 157, 180, 183, 190, 198, 207, 222, 223, 243, 255, 258, 263, 264, 268, 271, 315, 340, 341, 349, 350, 351, 363, 364, 365, 366, 373, 375, 385, 396, 407, 410, 419, 427, 441, 446, 447, 453, 459, 466, 469, 470, 473, 479, 481], "readonli": [2, 42, 57, 67, 245, 329, 337, 341, 373, 407, 408, 465, 471], "format": [2, 4, 5, 9, 10, 23, 25, 30, 31, 34, 40, 47, 48, 58, 62, 63, 64, 67, 72, 74, 78, 79, 83, 84, 86, 91, 92, 93, 102, 103, 104, 106, 107, 108, 109, 114, 115, 116, 117, 119, 130, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 155, 157, 161, 164, 166, 170, 173, 179, 181, 183, 187, 188, 189, 190, 191, 193, 197, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 218, 220, 222, 225, 227, 231, 232, 237, 240, 242, 245, 246, 247, 251, 252, 256, 259, 262, 263, 264, 266, 267, 269, 271, 273, 278, 281, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 304, 305, 311, 314, 316, 317, 318, 323, 327, 328, 329, 333, 334, 335, 337, 338, 345, 346, 349, 356, 359, 360, 363, 365, 366, 369, 372, 373, 375, 378, 379, 381, 382, 385, 391, 392, 394, 395, 397, 398, 402, 404, 410, 414, 419, 420, 421, 424, 425, 427, 428, 431, 432, 437, 438, 439, 441, 442, 446, 447, 448, 450, 452, 458, 459, 460, 461, 462, 463, 464, 469, 470, 471, 472, 473, 474, 477, 478, 481], "shape": [2, 62, 67, 93, 219, 222, 281, 315, 341, 383, 465, 469, 470, 473], "stride": [2, 62, 67, 252, 341, 425, 427, 462, 473], "suboffset": [2, 62, 67, 341, 473], "contigu": [2, 5, 42, 67, 77, 86, 187, 245, 258, 268, 296, 341, 355, 412, 465, 473], "compound": [2, 34, 67, 168, 219, 244, 288, 342, 361, 366, 372, 373, 428, 430, 432, 434, 446, 465, 473], "complex": [2, 5, 13, 16, 34, 67, 71, 72, 74, 77, 79, 83, 84, 85, 86, 88, 100, 103, 104, 107, 108, 117, 119, 123, 125, 129, 144, 158, 164, 167, 172, 181, 183, 184, 187, 191, 197, 200, 222, 223, 251, 258, 259, 265, 271, 272, 286, 287, 289, 296, 304, 316, 330, 331, 342, 345, 349, 355, 381, 383, 386, 392, 416, 424, 427, 432, 433, 436, 437, 438, 439, 440, 443, 446, 447, 448, 452, 461, 463, 464, 465, 466, 468, 470, 472, 474, 476, 477, 478], "arrai": [2, 3, 5, 9, 10, 16, 30, 38, 44, 53, 57, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 83, 86, 92, 98, 100, 114, 115, 139, 147, 155, 175, 179, 212, 222, 233, 251, 276, 280, 281, 282, 284, 290, 296, 306, 334, 341, 344, 358, 376, 378, 382, 383, 399, 405, 416, 424, 425, 436, 439, 449, 451, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 479], "numpi": [2, 67, 84, 118, 222, 281, 296, 340, 441, 447, 450, 458, 464, 465, 470, 472, 473, 475], "style": [2, 5, 9, 10, 23, 63, 67, 72, 75, 77, 85, 86, 93, 94, 99, 103, 111, 113, 115, 117, 119, 130, 140, 141, 143, 147, 157, 161, 164, 187, 193, 202, 204, 216, 217, 218, 221, 222, 223, 227, 237, 239, 242, 251, 258, 264, 265, 268, 272, 273, 281, 289, 290, 291, 293, 294, 296, 305, 310, 315, 316, 323, 327, 329, 330, 334, 337, 349, 352, 359, 362, 365, 366, 369, 370, 372, 376, 378, 385, 388, 404, 417, 427, 428, 431, 432, 435, 437, 442, 443, 444, 446, 448, 449, 453, 458, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 472, 473, 474, 477, 478, 481], "pil": [2, 67, 84, 341], "relat": [2, 10, 32, 41, 44, 62, 67, 77, 79, 83, 84, 86, 92, 94, 100, 106, 111, 130, 136, 142, 150, 157, 164, 174, 179, 180, 190, 191, 193, 197, 202, 204, 205, 210, 214, 220, 225, 232, 233, 238, 251, 252, 253, 254, 256, 258, 266, 268, 277, 280, 287, 290, 295, 297, 305, 311, 312, 317, 323, 330, 334, 337, 338, 341, 342, 354, 363, 373, 381, 382, 383, 397, 399, 409, 412, 423, 425, 427, 428, 432, 437, 439, 449, 451, 455, 458, 459, 460, 462, 463, 464, 465, 466, 467, 472, 473, 474, 476, 477, 478, 481], "old": [2, 5, 9, 10, 13, 23, 31, 41, 44, 51, 57, 58, 59, 63, 67, 72, 77, 84, 86, 99, 103, 109, 113, 117, 119, 148, 157, 166, 173, 174, 184, 193, 202, 210, 222, 223, 240, 245, 247, 259, 265, 266, 268, 273, 280, 289, 290, 293, 294, 296, 301, 305, 327, 330, 337, 341, 342, 349, 355, 358, 359, 366, 378, 379, 381, 383, 386, 392, 396, 404, 407, 412, 423, 424, 425, 427, 432, 433, 439, 442, 446, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyobject": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 96, 98, 173, 316, 359, 461, 464, 465, 469, 470, 477, 478], "_pyobject_new": 3, "pytypeobject": [3, 6, 8, 9, 12, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 34, 36, 37, 38, 43, 44, 45, 48, 49, 54, 55, 56, 57, 59, 60, 61, 63, 67, 74, 75, 98, 460, 470, 471, 475, 478, 479], "return": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 74, 75, 78, 83, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 435, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyvarobject": [3, 28, 49, 56, 57, 67, 359, 470], "_pyobject_newvar": 3, "py_ssize_t": [3, 5, 7, 8, 9, 10, 13, 18, 22, 23, 28, 33, 34, 37, 38, 39, 40, 42, 44, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 72, 74, 98, 173, 349, 425, 464, 465, 470, 478], "size": [3, 5, 7, 8, 9, 18, 28, 30, 33, 34, 38, 40, 41, 42, 48, 50, 53, 54, 57, 58, 59, 60, 62, 63, 67, 72, 74, 75, 77, 85, 91, 92, 93, 96, 98, 99, 100, 104, 106, 112, 114, 115, 117, 118, 124, 127, 130, 131, 133, 134, 138, 139, 141, 142, 146, 148, 150, 155, 157, 158, 160, 163, 170, 171, 172, 174, 181, 182, 183, 187, 188, 212, 213, 216, 220, 222, 223, 233, 234, 239, 242, 244, 245, 247, 248, 255, 258, 259, 263, 266, 267, 275, 280, 281, 291, 292, 296, 300, 302, 303, 305, 308, 311, 313, 315, 317, 318, 319, 332, 333, 334, 335, 337, 339, 340, 341, 342, 345, 346, 349, 355, 357, 358, 359, 361, 362, 366, 369, 372, 373, 378, 381, 383, 385, 392, 405, 407, 418, 419, 421, 425, 429, 443, 446, 447, 449, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyobject_init": [3, 56, 478, 479], "op": [3, 10, 15, 27, 28, 32, 36, 38, 48, 62, 63, 74, 84, 99, 119, 135, 174, 188, 227, 266, 280, 290, 316, 334, 337, 338, 349, 362, 374, 375, 404, 462, 465, 469, 470, 471, 477], "borrow": [3, 5, 12, 22, 23, 27, 30, 32, 34, 37, 43, 44, 51, 52, 53, 57, 58, 59, 62, 66, 72, 74, 77, 86, 94, 209, 337, 438, 461, 462, 463], "part": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 77, 79, 80, 84, 86, 91, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 125, 140, 145, 148, 151, 154, 155, 156, 158, 164, 166, 173, 174, 180, 181, 183, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 216, 222, 227, 232, 242, 244, 245, 247, 248, 254, 255, 256, 263, 264, 265, 266, 267, 272, 273, 278, 279, 280, 290, 291, 296, 299, 304, 305, 311, 314, 315, 316, 320, 328, 331, 334, 335, 337, 338, 341, 342, 343, 349, 352, 359, 362, 363, 365, 366, 372, 378, 381, 382, 383, 385, 386, 387, 391, 395, 396, 399, 400, 407, 408, 410, 416, 421, 423, 424, 425, 426, 427, 429, 432, 433, 437, 438, 439, 440, 441, 442, 444, 446, 447, 450, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "stabl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 86, 98, 105, 207, 222, 233, 249, 273, 289, 341, 349, 422, 462, 463, 466, 470, 471, 474, 475, 476, 478, 479, 481], "abi": [3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 96, 98, 349, 453, 457, 466, 470, 471, 474, 475, 477, 479, 481], "newli": [3, 5, 34, 41, 58, 67, 72, 84, 99, 136, 154, 158, 178, 188, 195, 222, 229, 240, 255, 280, 290, 299, 329, 331, 334, 357, 372, 373, 381, 407, 424, 425, 437, 463, 465, 470, 471, 473, 476, 477], "indic": [3, 5, 7, 10, 30, 31, 32, 34, 37, 40, 41, 48, 51, 53, 55, 57, 58, 60, 62, 63, 67, 72, 74, 75, 79, 83, 84, 86, 96, 97, 99, 100, 103, 104, 105, 106, 107, 111, 113, 114, 117, 119, 123, 131, 134, 136, 148, 152, 154, 155, 163, 164, 165, 166, 170, 172, 173, 174, 180, 183, 186, 188, 193, 199, 200, 202, 205, 206, 207, 210, 220, 222, 223, 225, 231, 232, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 255, 258, 263, 264, 265, 267, 268, 271, 273, 275, 280, 285, 289, 290, 292, 294, 297, 300, 302, 304, 305, 308, 311, 313, 315, 316, 325, 326, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 354, 355, 357, 358, 359, 362, 363, 366, 373, 374, 378, 383, 385, 386, 391, 392, 395, 396, 397, 402, 403, 404, 405, 407, 410, 416, 419, 421, 423, 424, 425, 427, 428, 429, 432, 433, 437, 438, 440, 446, 447, 449, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "particip": [3, 62, 74, 75, 180, 233, 240, 247, 264, 296, 316, 459, 461, 464, 466, 468], "cyclic": [3, 31, 44, 49, 62, 67, 73, 84, 86, 229, 267, 289, 408, 421, 425, 472, 474], "garbag": [3, 31, 41, 44, 49, 51, 62, 63, 66, 67, 72, 73, 74, 83, 84, 86, 94, 96, 100, 104, 122, 136, 148, 156, 166, 167, 173, 176, 190, 210, 211, 251, 271, 280, 289, 290, 312, 334, 349, 357, 359, 364, 385, 399, 408, 424, 425, 427, 449, 453, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481], "detector": [3, 60, 72, 252, 453, 466], "ad": [3, 5, 13, 22, 23, 30, 32, 33, 34, 41, 44, 46, 56, 57, 58, 60, 62, 63, 65, 67, 72, 73, 74, 76, 77, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 98, 99, 102, 103, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 123, 125, 126, 131, 132, 133, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 152, 154, 155, 157, 158, 160, 163, 164, 166, 170, 172, 173, 174, 176, 178, 180, 181, 183, 187, 188, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 215, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 273, 275, 278, 280, 283, 285, 287, 290, 291, 293, 294, 296, 297, 299, 301, 302, 304, 305, 308, 310, 313, 315, 316, 318, 321, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 355, 356, 357, 359, 361, 362, 363, 364, 366, 369, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 391, 392, 394, 396, 397, 398, 399, 400, 404, 407, 408, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 432, 433, 438, 439, 440, 441, 443, 445, 446, 447, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 481], "observ": [3, 13, 27, 84, 93, 96, 100, 180, 205, 315, 340, 345, 379, 381, 391, 433, 461, 470, 473], "other": [3, 7, 9, 10, 11, 13, 15, 18, 22, 23, 25, 27, 28, 31, 32, 33, 34, 38, 41, 42, 44, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 76, 79, 80, 85, 86, 87, 88, 91, 92, 94, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 122, 123, 127, 129, 130, 134, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 178, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 213, 220, 222, 223, 224, 227, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 280, 281, 283, 284, 285, 286, 288, 290, 291, 293, 294, 295, 299, 300, 304, 305, 306, 307, 310, 311, 312, 315, 316, 318, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 351, 353, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 373, 375, 377, 379, 381, 382, 384, 385, 386, 387, 391, 392, 395, 396, 397, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 457, 481], "affect": [3, 32, 34, 37, 44, 58, 59, 63, 67, 72, 83, 92, 93, 94, 100, 103, 113, 118, 136, 141, 164, 174, 180, 183, 188, 190, 199, 202, 222, 227, 240, 244, 247, 255, 263, 266, 268, 275, 288, 290, 303, 304, 316, 317, 318, 319, 334, 337, 338, 340, 342, 345, 351, 353, 355, 359, 363, 364, 372, 373, 381, 383, 385, 386, 387, 391, 397, 399, 402, 404, 407, 424, 425, 427, 429, 433, 435, 437, 441, 447, 450, 452, 453, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyobject_initvar": [3, 56], "doe": [3, 5, 9, 10, 13, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 41, 44, 48, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 83, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 111, 112, 113, 117, 119, 120, 123, 126, 128, 130, 136, 137, 140, 143, 146, 148, 150, 154, 155, 157, 158, 160, 163, 164, 166, 168, 170, 172, 173, 174, 176, 178, 180, 181, 183, 185, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 207, 208, 210, 217, 218, 220, 222, 223, 224, 225, 226, 227, 231, 232, 233, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 273, 275, 280, 281, 284, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305, 306, 308, 311, 315, 316, 319, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 353, 355, 356, 357, 359, 361, 362, 363, 365, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 437, 438, 439, 440, 442, 445, 446, 447, 449, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "everyth": [3, 56, 62, 72, 75, 84, 85, 87, 88, 91, 100, 102, 104, 107, 117, 168, 190, 205, 217, 222, 244, 265, 289, 290, 291, 293, 296, 316, 329, 330, 334, 356, 366, 386, 397, 416, 431, 432, 440, 446, 465, 467, 469, 471, 473], "length": [3, 5, 7, 8, 9, 22, 23, 24, 33, 34, 37, 47, 48, 53, 54, 55, 57, 58, 59, 62, 63, 67, 72, 74, 77, 84, 86, 91, 92, 93, 94, 96, 98, 100, 104, 106, 107, 114, 117, 118, 119, 138, 139, 140, 143, 147, 150, 155, 157, 171, 172, 173, 174, 181, 183, 187, 188, 192, 193, 198, 199, 202, 204, 205, 212, 222, 234, 239, 242, 245, 251, 255, 256, 258, 259, 265, 266, 267, 268, 272, 275, 280, 281, 288, 289, 290, 305, 311, 315, 316, 317, 323, 325, 329, 332, 334, 337, 338, 340, 342, 344, 349, 355, 358, 361, 362, 363, 373, 382, 383, 385, 386, 390, 392, 397, 402, 404, 405, 407, 412, 416, 419, 420, 421, 424, 425, 427, 432, 433, 438, 439, 445, 446, 449, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478], "variabl": [3, 5, 9, 10, 12, 13, 16, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 41, 44, 51, 52, 54, 57, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 80, 83, 85, 86, 88, 91, 92, 93, 94, 98, 100, 101, 103, 106, 107, 108, 109, 111, 115, 118, 122, 123, 136, 138, 148, 149, 151, 152, 157, 160, 161, 164, 171, 174, 185, 188, 190, 206, 210, 211, 212, 216, 222, 224, 225, 226, 227, 228, 242, 244, 245, 246, 247, 251, 252, 253, 255, 258, 261, 263, 264, 278, 280, 283, 288, 291, 292, 294, 296, 298, 303, 308, 310, 312, 315, 316, 317, 321, 324, 328, 329, 330, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 351, 355, 359, 362, 363, 364, 365, 373, 378, 379, 381, 382, 383, 385, 386, 391, 392, 396, 397, 400, 402, 404, 405, 407, 408, 409, 417, 422, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 453, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479], "pyobject_new": [3, 28, 41, 62, 67, 462, 478, 479], "typeobj": [3, 28, 98, 385], "c": [3, 4, 5, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 38, 40, 42, 45, 48, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 73, 74, 75, 79, 80, 85, 86, 88, 90, 91, 92, 93, 94, 96, 98, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 117, 118, 119, 123, 130, 132, 134, 136, 137, 141, 143, 144, 146, 147, 150, 151, 155, 157, 158, 169, 173, 174, 175, 178, 180, 181, 183, 185, 187, 188, 190, 210, 211, 212, 213, 222, 223, 224, 227, 228, 229, 232, 234, 237, 241, 244, 251, 252, 254, 258, 259, 263, 264, 272, 279, 280, 281, 288, 289, 290, 291, 292, 293, 294, 296, 303, 305, 308, 311, 313, 315, 316, 317, 318, 319, 323, 327, 328, 329, 330, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 351, 352, 355, 357, 358, 359, 362, 363, 366, 373, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 396, 397, 399, 402, 404, 408, 410, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 452, 455, 456, 457, 458, 459, 460, 461, 481], "defin": [3, 4, 5, 7, 10, 11, 14, 15, 23, 24, 25, 28, 32, 33, 34, 41, 42, 43, 44, 49, 56, 58, 60, 62, 63, 67, 70, 71, 72, 73, 76, 77, 78, 79, 83, 85, 86, 87, 91, 92, 93, 94, 99, 100, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 129, 130, 137, 138, 140, 141, 143, 147, 148, 150, 151, 152, 155, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 178, 180, 181, 183, 184, 186, 188, 190, 191, 193, 196, 200, 202, 205, 208, 209, 210, 212, 213, 220, 222, 223, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 259, 260, 262, 263, 264, 266, 268, 271, 272, 273, 280, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 325, 326, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 355, 357, 358, 359, 362, 363, 364, 366, 369, 372, 373, 374, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 404, 405, 407, 408, 410, 411, 412, 416, 418, 419, 420, 422, 423, 424, 426, 427, 429, 431, 432, 433, 435, 436, 437, 439, 442, 444, 446, 447, 449, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481], "header": [3, 20, 25, 28, 34, 57, 62, 67, 72, 83, 99, 103, 114, 139, 143, 147, 148, 150, 152, 164, 166, 172, 173, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 212, 227, 231, 239, 240, 241, 242, 244, 245, 247, 253, 264, 266, 268, 273, 282, 285, 290, 294, 302, 308, 314, 332, 333, 334, 338, 346, 349, 352, 355, 359, 374, 378, 382, 390, 392, 394, 398, 408, 416, 419, 421, 424, 426, 437, 448, 449, 453, 458, 460, 462, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "caller": [3, 5, 9, 10, 18, 23, 30, 32, 33, 34, 35, 44, 57, 58, 60, 63, 72, 84, 86, 87, 92, 94, 136, 141, 154, 155, 166, 173, 178, 186, 188, 210, 220, 222, 232, 239, 248, 249, 252, 255, 264, 288, 290, 293, 299, 305, 329, 330, 332, 334, 338, 345, 349, 362, 367, 373, 377, 378, 383, 385, 392, 394, 397, 398, 400, 402, 416, 418, 425, 426, 427, 437, 438, 440, 460, 461, 462, 463, 464, 465, 466, 470, 476, 479], "own": [3, 5, 7, 9, 22, 23, 24, 26, 28, 32, 34, 44, 58, 60, 62, 63, 67, 71, 72, 73, 75, 76, 77, 79, 83, 84, 86, 88, 91, 92, 93, 94, 98, 99, 100, 106, 107, 108, 109, 111, 115, 117, 123, 126, 130, 134, 136, 148, 157, 164, 166, 168, 172, 178, 183, 190, 193, 197, 200, 202, 204, 207, 208, 222, 224, 227, 229, 240, 244, 247, 252, 255, 264, 265, 266, 268, 280, 281, 283, 289, 290, 293, 294, 296, 305, 315, 316, 318, 323, 328, 329, 330, 334, 337, 338, 341, 342, 345, 349, 355, 359, 361, 362, 366, 381, 385, 391, 392, 396, 399, 400, 404, 407, 410, 412, 417, 421, 423, 425, 427, 429, 432, 433, 437, 438, 440, 444, 447, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 477, 479], "count": [3, 5, 7, 9, 12, 31, 32, 33, 44, 53, 57, 62, 63, 67, 73, 74, 75, 77, 79, 83, 84, 86, 88, 92, 93, 94, 98, 100, 103, 117, 118, 123, 131, 136, 141, 143, 145, 148, 157, 158, 173, 174, 180, 185, 187, 188, 190, 193, 205, 208, 215, 222, 223, 224, 233, 244, 245, 247, 252, 255, 258, 264, 268, 275, 278, 280, 281, 285, 289, 290, 294, 296, 302, 305, 313, 315, 316, 325, 328, 334, 337, 338, 340, 341, 342, 344, 349, 359, 361, 362, 363, 364, 366, 377, 379, 385, 392, 397, 410, 425, 427, 432, 433, 439, 443, 446, 449, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 478], "one": [3, 5, 7, 9, 10, 11, 13, 15, 18, 23, 24, 25, 28, 30, 32, 33, 34, 36, 41, 42, 44, 46, 48, 50, 55, 56, 57, 58, 59, 60, 62, 63, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 178, 180, 181, 183, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 218, 220, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 239, 240, 242, 244, 245, 247, 248, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 304, 305, 308, 311, 313, 315, 316, 317, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 351, 352, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 370, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 399, 402, 404, 405, 406, 407, 408, 409, 410, 412, 416, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "memori": [3, 5, 7, 16, 18, 23, 28, 30, 31, 32, 33, 34, 40, 42, 44, 46, 47, 48, 54, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 84, 86, 92, 94, 98, 99, 100, 103, 104, 106, 112, 116, 118, 119, 129, 134, 148, 155, 157, 161, 173, 181, 182, 183, 185, 204, 209, 210, 211, 222, 224, 231, 232, 233, 234, 244, 247, 251, 252, 255, 257, 258, 259, 266, 268, 280, 290, 296, 311, 313, 319, 327, 329, 330, 334, 335, 337, 344, 345, 349, 355, 357, 359, 362, 383, 386, 399, 402, 403, 406, 408, 410, 418, 419, 421, 425, 432, 435, 437, 439, 443, 449, 452, 453, 459, 460, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 476, 477, 478, 479], "tp_basics": [3, 28, 60, 62, 74, 75, 479], "pyobject_newvar": [3, 28, 41, 62, 98, 462, 478, 479], "plu": [3, 10, 58, 62, 74, 83, 117, 157, 173, 174, 175, 183, 187, 191, 205, 208, 280, 289, 290, 302, 328, 339, 341, 349, 359, 361, 362, 374, 386, 387, 391, 404, 408, 427, 431, 432, 443, 450, 451, 458, 461, 462, 463, 464, 471, 473, 474], "given": [3, 4, 5, 7, 9, 10, 13, 14, 18, 20, 22, 23, 24, 27, 30, 32, 34, 41, 42, 44, 48, 55, 57, 60, 62, 63, 65, 71, 72, 77, 80, 83, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 107, 109, 110, 112, 113, 114, 117, 118, 119, 123, 124, 127, 130, 132, 135, 136, 141, 146, 147, 150, 151, 152, 154, 155, 157, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 178, 180, 181, 183, 187, 188, 190, 192, 193, 197, 199, 200, 202, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 234, 239, 240, 241, 242, 244, 245, 247, 249, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 280, 283, 285, 286, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 303, 305, 307, 309, 310, 311, 315, 316, 319, 321, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 350, 353, 355, 356, 359, 361, 362, 363, 364, 366, 369, 370, 372, 373, 377, 378, 381, 382, 383, 384, 385, 386, 390, 391, 392, 395, 396, 397, 399, 400, 404, 405, 407, 408, 409, 410, 411, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 431, 432, 433, 435, 437, 438, 439, 441, 443, 445, 446, 447, 449, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "tp_items": [3, 28, 60, 62, 74, 75], "implement": [3, 5, 6, 8, 9, 10, 12, 13, 15, 20, 23, 28, 29, 30, 31, 32, 34, 38, 41, 44, 48, 53, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 75, 79, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 98, 99, 103, 105, 106, 107, 111, 113, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 148, 152, 154, 155, 157, 158, 163, 164, 165, 167, 168, 170, 171, 172, 173, 178, 179, 180, 183, 188, 190, 193, 200, 202, 204, 205, 208, 209, 210, 211, 215, 217, 218, 220, 222, 223, 224, 227, 231, 232, 234, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 258, 263, 264, 265, 266, 268, 270, 272, 274, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 293, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 309, 311, 312, 313, 315, 316, 317, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 352, 353, 355, 356, 357, 359, 362, 363, 365, 366, 367, 371, 373, 375, 376, 378, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 402, 406, 407, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 423, 424, 426, 427, 429, 430, 432, 433, 436, 437, 438, 439, 441, 442, 444, 447, 448, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 475, 478, 479, 481], "tupl": [3, 5, 10, 14, 16, 20, 23, 27, 34, 37, 39, 41, 48, 53, 54, 57, 58, 60, 61, 62, 65, 67, 71, 72, 74, 75, 86, 93, 94, 96, 99, 100, 103, 105, 107, 109, 110, 112, 113, 114, 117, 118, 119, 123, 130, 131, 134, 138, 141, 144, 147, 149, 152, 155, 163, 167, 169, 173, 174, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 193, 200, 202, 205, 206, 210, 218, 220, 222, 223, 224, 229, 230, 233, 239, 240, 241, 242, 245, 247, 251, 252, 255, 256, 258, 259, 263, 264, 266, 268, 269, 271, 273, 276, 278, 280, 283, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 300, 301, 302, 304, 305, 307, 311, 313, 315, 316, 319, 322, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 348, 352, 356, 357, 358, 359, 362, 363, 366, 369, 373, 375, 378, 379, 381, 382, 385, 386, 391, 392, 393, 395, 397, 398, 399, 402, 404, 409, 410, 412, 413, 416, 417, 419, 424, 425, 426, 427, 428, 429, 433, 437, 438, 440, 442, 443, 447, 448, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "abl": [3, 7, 32, 62, 72, 74, 75, 76, 77, 79, 83, 85, 86, 88, 91, 93, 99, 100, 101, 102, 103, 104, 106, 108, 118, 119, 138, 148, 155, 156, 166, 173, 174, 178, 180, 191, 210, 232, 233, 237, 252, 264, 265, 266, 280, 289, 290, 291, 292, 294, 296, 306, 311, 315, 316, 323, 329, 333, 334, 337, 338, 340, 345, 355, 359, 362, 381, 386, 391, 397, 403, 404, 410, 418, 424, 425, 431, 441, 442, 445, 452, 453, 458, 459, 460, 461, 464, 466, 470, 471, 472, 473, 474, 477, 478], "construct": [3, 23, 53, 57, 58, 60, 61, 64, 65, 71, 72, 74, 77, 84, 86, 92, 93, 94, 97, 98, 99, 100, 111, 117, 123, 130, 134, 136, 146, 155, 158, 166, 168, 173, 180, 183, 186, 188, 190, 191, 194, 198, 200, 205, 206, 210, 213, 217, 218, 222, 224, 231, 232, 240, 242, 247, 256, 258, 264, 265, 267, 271, 278, 280, 289, 290, 293, 296, 304, 305, 311, 316, 317, 328, 331, 332, 334, 337, 338, 341, 344, 362, 366, 378, 381, 383, 385, 386, 387, 391, 396, 399, 406, 408, 409, 410, 411, 416, 417, 419, 422, 424, 425, 426, 427, 432, 433, 437, 438, 439, 445, 448, 452, 458, 459, 460, 461, 463, 464, 466, 470, 471, 472, 473, 475, 476, 477, 478, 479], "embed": [3, 5, 7, 9, 31, 32, 44, 51, 56, 60, 63, 67, 72, 77, 81, 85, 91, 92, 96, 98, 103, 104, 106, 125, 132, 160, 172, 174, 196, 199, 222, 256, 263, 277, 278, 290, 305, 314, 341, 345, 359, 363, 366, 372, 397, 412, 417, 418, 430, 432, 442, 444, 446, 448, 455, 457, 460, 461, 464, 466, 469, 472, 474, 477, 478, 479, 481], "same": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 18, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 79, 83, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 117, 118, 119, 122, 123, 126, 129, 130, 132, 134, 135, 136, 137, 138, 140, 141, 144, 145, 147, 148, 151, 154, 155, 157, 160, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 178, 180, 181, 183, 184, 187, 188, 190, 191, 192, 193, 198, 199, 200, 202, 204, 205, 206, 208, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 247, 249, 250, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 272, 273, 275, 278, 279, 280, 281, 285, 286, 289, 290, 291, 292, 293, 294, 296, 297, 300, 302, 304, 305, 306, 309, 310, 311, 313, 315, 316, 317, 318, 319, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 368, 371, 372, 373, 375, 376, 378, 381, 382, 383, 384, 385, 386, 390, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 407, 410, 412, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "decreas": [3, 7, 135, 180, 188, 233, 256, 363, 425, 459, 463, 466, 470, 473, 476, 478], "manag": [3, 5, 17, 28, 31, 32, 33, 51, 60, 62, 67, 73, 75, 79, 86, 87, 99, 104, 107, 108, 115, 117, 119, 120, 121, 123, 125, 134, 135, 136, 141, 144, 148, 155, 161, 171, 173, 183, 184, 185, 188, 189, 191, 200, 210, 215, 222, 238, 240, 242, 244, 247, 249, 251, 253, 255, 264, 268, 275, 281, 282, 292, 295, 296, 305, 312, 325, 326, 327, 334, 335, 338, 347, 349, 352, 355, 356, 357, 359, 362, 365, 371, 373, 381, 385, 386, 392, 399, 400, 416, 419, 424, 428, 431, 441, 442, 444, 448, 449, 456, 457, 458, 459, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "effici": [3, 10, 13, 22, 25, 32, 48, 59, 62, 63, 67, 77, 86, 91, 94, 97, 104, 105, 106, 120, 123, 130, 148, 155, 157, 172, 179, 180, 183, 188, 210, 213, 216, 217, 221, 222, 223, 232, 233, 234, 248, 251, 280, 281, 288, 290, 296, 297, 304, 315, 316, 325, 326, 338, 340, 341, 344, 361, 362, 402, 404, 406, 410, 421, 425, 438, 439, 442, 443, 447, 448, 461, 463, 465, 467, 470, 471, 472, 473, 474, 475, 478, 479], "void": [3, 5, 7, 9, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 40, 41, 44, 47, 48, 50, 51, 52, 57, 58, 59, 60, 62, 63, 65, 66, 70, 71, 72, 74, 75, 76, 85, 96, 98, 173, 316, 344, 408, 428, 466, 469, 470, 471, 478, 479], "pyobject_del": [3, 41, 62, 462], "normal": [3, 5, 6, 20, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 37, 44, 48, 50, 55, 57, 62, 65, 71, 72, 74, 75, 77, 83, 84, 86, 91, 92, 93, 99, 100, 103, 104, 106, 107, 108, 110, 113, 117, 119, 136, 137, 140, 141, 143, 145, 147, 152, 155, 157, 164, 166, 173, 174, 178, 180, 183, 185, 187, 190, 192, 193, 195, 197, 199, 202, 205, 206, 208, 210, 211, 215, 217, 218, 222, 223, 227, 231, 232, 237, 239, 244, 245, 251, 254, 255, 263, 264, 265, 266, 272, 273, 279, 280, 285, 289, 290, 291, 293, 294, 296, 299, 305, 308, 311, 315, 316, 317, 318, 321, 328, 330, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 357, 359, 361, 362, 363, 366, 369, 371, 373, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 397, 399, 404, 407, 408, 411, 412, 413, 416, 418, 419, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 437, 438, 443, 452, 458, 460, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "tp_dealloc": [3, 28, 60, 62, 66, 67, 74, 75, 470, 478], "handler": [3, 23, 24, 28, 32, 33, 58, 60, 62, 63, 64, 65, 66, 67, 72, 74, 75, 80, 86, 106, 112, 115, 117, 119, 122, 127, 129, 132, 142, 148, 149, 163, 164, 174, 182, 185, 186, 188, 193, 194, 198, 199, 210, 222, 226, 237, 242, 251, 253, 255, 257, 263, 270, 280, 289, 290, 294, 305, 311, 312, 325, 326, 329, 334, 337, 341, 349, 353, 355, 359, 363, 365, 385, 390, 392, 400, 408, 409, 411, 413, 414, 417, 424, 425, 426, 440, 452, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "specifi": [3, 5, 7, 9, 11, 13, 14, 17, 18, 20, 22, 23, 25, 32, 33, 34, 38, 39, 41, 44, 48, 55, 56, 60, 62, 63, 65, 67, 72, 74, 75, 76, 78, 86, 87, 91, 92, 93, 94, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 123, 126, 129, 130, 132, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 151, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 170, 172, 174, 178, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 220, 222, 223, 224, 225, 227, 228, 231, 232, 233, 239, 240, 241, 242, 244, 245, 247, 249, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 268, 269, 272, 273, 275, 276, 278, 279, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 301, 302, 304, 305, 308, 310, 311, 314, 315, 316, 317, 319, 321, 323, 325, 326, 327, 328, 329, 330, 332, 334, 337, 338, 341, 342, 344, 345, 346, 349, 350, 351, 352, 355, 356, 357, 358, 359, 362, 363, 364, 366, 369, 370, 372, 373, 375, 377, 378, 381, 382, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 407, 408, 410, 412, 413, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 441, 443, 447, 449, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "access": [3, 5, 7, 11, 12, 16, 20, 23, 24, 27, 30, 32, 34, 44, 46, 48, 49, 51, 53, 54, 58, 59, 60, 62, 67, 71, 72, 74, 75, 76, 79, 84, 85, 86, 92, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 113, 115, 118, 119, 122, 127, 133, 135, 136, 139, 143, 145, 146, 148, 151, 155, 157, 158, 161, 166, 167, 172, 174, 178, 180, 181, 183, 188, 190, 191, 193, 197, 200, 202, 204, 207, 209, 210, 214, 215, 218, 222, 223, 224, 227, 229, 230, 232, 233, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 258, 261, 264, 266, 268, 272, 273, 275, 277, 278, 279, 280, 283, 288, 289, 290, 291, 294, 296, 299, 303, 307, 309, 311, 312, 316, 317, 319, 321, 323, 325, 327, 329, 330, 332, 334, 335, 336, 337, 338, 339, 341, 342, 345, 347, 349, 350, 351, 355, 356, 357, 359, 362, 364, 366, 372, 373, 378, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 399, 401, 403, 404, 406, 407, 408, 409, 410, 412, 417, 419, 422, 424, 426, 427, 429, 433, 437, 438, 439, 440, 442, 443, 445, 446, 447, 449, 451, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479], "after": [3, 5, 7, 8, 13, 18, 23, 26, 27, 28, 32, 33, 34, 38, 41, 44, 56, 57, 58, 60, 62, 63, 67, 70, 71, 72, 75, 77, 79, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 107, 109, 110, 112, 113, 114, 115, 117, 119, 123, 125, 127, 130, 132, 133, 135, 136, 137, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 154, 157, 163, 164, 166, 167, 172, 173, 174, 176, 178, 180, 182, 183, 187, 188, 190, 192, 193, 202, 203, 204, 206, 207, 209, 210, 212, 213, 215, 220, 222, 224, 225, 229, 231, 232, 239, 242, 244, 245, 247, 252, 255, 258, 263, 264, 265, 266, 267, 268, 272, 275, 276, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 297, 302, 305, 306, 311, 315, 316, 317, 321, 322, 325, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 355, 357, 358, 359, 361, 362, 363, 364, 366, 372, 373, 378, 379, 381, 383, 385, 386, 387, 392, 396, 397, 398, 399, 402, 404, 407, 410, 412, 413, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "longer": [3, 5, 7, 22, 23, 30, 33, 34, 38, 43, 44, 51, 57, 58, 60, 62, 63, 66, 67, 70, 72, 77, 82, 84, 91, 93, 94, 98, 99, 102, 107, 110, 114, 117, 122, 123, 138, 155, 164, 173, 174, 185, 187, 188, 196, 198, 205, 208, 222, 223, 232, 239, 242, 245, 247, 248, 252, 256, 258, 262, 265, 266, 268, 280, 281, 283, 289, 290, 291, 304, 306, 308, 315, 316, 322, 325, 329, 334, 337, 338, 341, 342, 344, 345, 349, 350, 355, 359, 361, 362, 363, 373, 378, 379, 380, 381, 383, 385, 386, 387, 396, 397, 399, 406, 407, 408, 409, 410, 411, 419, 421, 425, 427, 429, 438, 440, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "valid": [3, 5, 7, 11, 16, 18, 23, 28, 33, 41, 51, 60, 62, 63, 65, 67, 71, 72, 84, 86, 87, 91, 97, 98, 103, 106, 109, 117, 118, 119, 136, 140, 143, 148, 154, 155, 156, 157, 160, 164, 166, 169, 170, 172, 173, 174, 178, 180, 181, 183, 184, 186, 188, 191, 192, 194, 200, 204, 206, 208, 222, 229, 235, 239, 241, 242, 244, 247, 252, 253, 255, 256, 258, 259, 262, 264, 265, 267, 271, 275, 278, 280, 284, 285, 290, 291, 298, 299, 301, 305, 308, 311, 315, 316, 319, 320, 321, 328, 330, 332, 334, 337, 338, 340, 341, 342, 344, 345, 346, 349, 355, 359, 362, 363, 373, 375, 381, 383, 384, 385, 386, 391, 392, 398, 402, 408, 410, 412, 413, 417, 419, 420, 421, 422, 424, 425, 428, 429, 432, 433, 437, 438, 439, 440, 443, 445, 447, 448, 449, 452, 453, 459, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "_py_nonestruct": [3, 85], "visibl": [3, 34, 50, 59, 67, 72, 84, 86, 91, 94, 100, 104, 123, 125, 136, 155, 164, 174, 176, 182, 187, 193, 202, 219, 244, 252, 258, 268, 334, 350, 357, 373, 386, 392, 397, 426, 448, 458, 460, 463, 464, 471, 472, 477, 478], "none": [3, 5, 16, 20, 23, 26, 30, 32, 33, 44, 54, 55, 57, 62, 63, 66, 67, 72, 79, 84, 86, 87, 88, 92, 94, 99, 100, 103, 104, 105, 107, 109, 110, 111, 113, 114, 117, 119, 123, 125, 126, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 178, 180, 181, 183, 186, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 280, 281, 283, 284, 285, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 308, 309, 311, 313, 315, 316, 317, 318, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 350, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 424, 427, 428, 429, 432, 433, 434, 438, 439, 440, 443, 447, 450, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "py_non": [3, 23, 27, 32, 45, 46, 55, 66, 72, 85, 428], "macro": [3, 4, 5, 6, 16, 17, 20, 23, 28, 31, 32, 33, 37, 41, 42, 43, 44, 49, 51, 54, 55, 56, 58, 59, 62, 63, 67, 72, 75, 85, 173, 283, 349, 359, 453, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "evalu": [3, 13, 22, 32, 51, 55, 65, 67, 72, 77, 84, 85, 86, 87, 93, 94, 101, 110, 119, 141, 164, 165, 222, 227, 258, 264, 265, 272, 280, 290, 294, 320, 321, 340, 341, 349, 362, 366, 383, 391, 399, 424, 425, 430, 432, 433, 438, 439, 443, 444, 446, 453, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 478, 479], "pointer": [3, 5, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 23, 24, 30, 32, 34, 38, 41, 42, 44, 47, 48, 53, 54, 57, 58, 59, 60, 62, 63, 67, 71, 74, 75, 77, 78, 80, 84, 85, 86, 96, 98, 101, 114, 115, 139, 174, 176, 239, 275, 280, 290, 296, 300, 305, 346, 349, 398, 427, 437, 442, 451, 461, 463, 464, 465, 466, 470, 471, 472, 474, 476, 477], "pymodule_cr": [3, 32, 34, 44, 71, 72, 75], "expos": [4, 7, 15, 27, 32, 37, 42, 43, 44, 45, 47, 54, 56, 57, 60, 61, 62, 63, 71, 72, 75, 86, 88, 99, 107, 123, 126, 136, 173, 174, 178, 183, 207, 212, 247, 249, 252, 256, 259, 263, 264, 278, 280, 290, 296, 304, 327, 328, 332, 341, 342, 343, 345, 349, 377, 381, 382, 384, 399, 402, 404, 417, 419, 422, 425, 429, 462, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "follow": [4, 5, 6, 7, 9, 10, 14, 18, 20, 23, 28, 32, 33, 34, 38, 40, 41, 44, 54, 56, 57, 60, 62, 63, 65, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 275, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "note": [4, 5, 7, 10, 15, 18, 20, 23, 25, 28, 30, 32, 33, 34, 39, 41, 44, 45, 47, 50, 51, 53, 56, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 117, 118, 119, 123, 129, 131, 134, 136, 137, 138, 140, 147, 148, 151, 154, 155, 157, 158, 160, 161, 163, 164, 166, 169, 172, 173, 174, 175, 178, 179, 180, 181, 187, 188, 190, 191, 193, 195, 196, 197, 198, 201, 202, 205, 206, 210, 211, 212, 213, 217, 218, 220, 222, 223, 224, 225, 227, 228, 230, 231, 232, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 250, 251, 252, 253, 255, 256, 258, 259, 264, 265, 266, 267, 268, 272, 275, 280, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 313, 314, 316, 318, 319, 321, 325, 328, 329, 331, 332, 337, 340, 341, 342, 344, 346, 348, 349, 350, 351, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 375, 378, 381, 382, 383, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 410, 411, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 476, 477, 478, 479], "correspond": [4, 5, 9, 12, 15, 18, 19, 22, 23, 29, 30, 32, 34, 44, 47, 48, 55, 56, 57, 60, 62, 63, 67, 70, 72, 74, 75, 78, 84, 85, 86, 91, 93, 94, 97, 98, 99, 100, 101, 103, 104, 106, 107, 112, 114, 117, 118, 119, 123, 125, 130, 134, 136, 139, 143, 147, 152, 155, 157, 160, 164, 167, 172, 173, 174, 175, 180, 181, 183, 186, 188, 190, 196, 205, 206, 209, 210, 215, 216, 219, 220, 222, 223, 227, 230, 232, 235, 237, 240, 242, 244, 245, 247, 248, 252, 256, 258, 259, 263, 264, 265, 266, 268, 280, 288, 289, 290, 292, 304, 305, 307, 311, 314, 315, 316, 326, 328, 329, 330, 331, 332, 334, 336, 337, 338, 341, 342, 344, 345, 348, 349, 350, 352, 355, 361, 362, 363, 366, 372, 373, 378, 383, 384, 385, 386, 390, 391, 392, 394, 396, 399, 400, 403, 407, 408, 412, 414, 416, 419, 420, 421, 424, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 446, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "code": [4, 5, 7, 9, 10, 11, 12, 16, 18, 22, 23, 24, 26, 27, 30, 31, 33, 35, 37, 38, 40, 41, 44, 47, 50, 51, 54, 55, 56, 58, 59, 62, 63, 64, 65, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 110, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 424, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 471, 476, 477, 478, 481], "built": [4, 7, 16, 21, 23, 24, 30, 32, 33, 34, 36, 41, 46, 48, 56, 57, 58, 60, 61, 62, 67, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 92, 96, 99, 100, 102, 105, 106, 107, 108, 109, 110, 112, 113, 117, 119, 125, 129, 132, 142, 148, 151, 155, 156, 157, 158, 160, 175, 178, 179, 183, 184, 187, 188, 192, 196, 199, 203, 208, 216, 218, 224, 227, 232, 233, 244, 247, 248, 249, 251, 252, 254, 255, 258, 263, 272, 273, 280, 281, 286, 289, 290, 291, 293, 294, 296, 305, 308, 310, 312, 317, 318, 325, 326, 334, 337, 338, 342, 344, 345, 349, 352, 359, 360, 366, 373, 381, 385, 386, 397, 399, 402, 407, 408, 410, 412, 416, 420, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 452, 453, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "necessarili": [4, 13, 23, 34, 56, 60, 62, 71, 75, 79, 84, 85, 98, 104, 112, 119, 174, 183, 190, 193, 202, 222, 248, 268, 272, 280, 281, 290, 296, 316, 323, 334, 337, 338, 340, 341, 349, 350, 363, 382, 386, 404, 407, 412, 422, 423, 433, 458, 462, 464, 465, 466, 470], "across": [4, 32, 41, 56, 60, 62, 64, 67, 77, 88, 96, 98, 102, 105, 117, 161, 164, 166, 173, 180, 188, 190, 206, 222, 251, 252, 257, 258, 263, 264, 265, 266, 280, 296, 297, 315, 317, 325, 327, 341, 349, 362, 366, 373, 375, 381, 427, 432, 441, 462, 463, 465, 466, 469, 470, 471, 472, 476, 477, 478], "py_major_vers": [4, 110], "3": [4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 46, 47, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 70, 71, 72, 74, 75, 77, 79, 83, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 113, 114, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 178, 180, 181, 183, 184, 185, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 481], "4": [4, 5, 10, 22, 23, 25, 30, 32, 33, 34, 41, 44, 48, 57, 59, 60, 62, 63, 65, 67, 72, 74, 75, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 112, 113, 114, 117, 118, 119, 122, 123, 130, 136, 138, 140, 146, 147, 148, 150, 154, 155, 157, 159, 163, 166, 170, 173, 175, 178, 180, 181, 183, 185, 187, 188, 190, 193, 194, 196, 202, 204, 205, 207, 208, 210, 212, 213, 218, 220, 222, 223, 224, 228, 231, 232, 233, 234, 235, 237, 238, 239, 242, 244, 245, 247, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 271, 272, 280, 281, 283, 285, 288, 290, 291, 292, 293, 294, 296, 297, 299, 301, 302, 304, 305, 306, 307, 308, 310, 315, 316, 318, 319, 321, 323, 325, 326, 327, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 352, 355, 359, 361, 362, 363, 364, 366, 373, 375, 378, 379, 381, 382, 383, 385, 386, 387, 390, 391, 392, 395, 396, 398, 399, 405, 406, 407, 410, 412, 413, 418, 419, 421, 422, 423, 424, 425, 427, 429, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 471, 472, 473, 477, 478, 479, 481], "1a2": 4, "py_minor_vers": [4, 65, 110, 478], "py_micro_vers": [4, 110], "1": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 159, 160, 163, 164, 167, 169, 170, 172, 173, 174, 178, 180, 183, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 278, 279, 280, 281, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 300, 301, 302, 304, 305, 306, 307, 308, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 355, 356, 357, 358, 359, 362, 363, 364, 366, 369, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 461, 462, 463, 465, 467, 469, 470, 471, 473, 474, 475, 476, 481], "py_release_level": [4, 110], "0xa": 4, "alpha": [4, 79, 86, 110, 281, 285, 304, 315, 349, 352, 448, 459, 460, 465, 468], "0xb": 4, "beta": [4, 110, 315, 349, 448, 459, 465, 475], "0xc": 4, "candid": [4, 79, 92, 110, 202, 227, 349, 425, 464, 465, 466, 474], "0xf": 4, "final": [4, 28, 31, 33, 34, 44, 48, 58, 60, 62, 67, 72, 73, 75, 77, 79, 83, 84, 93, 94, 99, 100, 102, 103, 104, 105, 110, 112, 113, 119, 123, 130, 132, 135, 136, 138, 141, 155, 173, 178, 179, 183, 185, 187, 188, 190, 194, 200, 208, 210, 224, 232, 242, 247, 252, 254, 255, 258, 262, 264, 268, 280, 288, 289, 290, 293, 294, 296, 305, 308, 311, 312, 316, 329, 331, 335, 337, 338, 340, 342, 349, 350, 351, 355, 357, 358, 359, 361, 362, 364, 366, 373, 375, 378, 379, 381, 382, 383, 385, 386, 387, 396, 397, 403, 406, 411, 419, 425, 426, 427, 428, 429, 432, 433, 436, 438, 440, 441, 443, 444, 453, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 476, 477, 478, 479, 481], "py_release_seri": [4, 110], "2": [4, 5, 7, 18, 22, 23, 24, 25, 30, 32, 33, 34, 38, 40, 41, 44, 46, 47, 48, 50, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 79, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 119, 123, 130, 133, 135, 136, 138, 139, 140, 141, 143, 147, 148, 150, 151, 155, 157, 158, 159, 160, 163, 164, 166, 167, 170, 172, 173, 174, 175, 178, 180, 181, 183, 184, 187, 188, 190, 193, 198, 199, 202, 204, 205, 206, 208, 209, 210, 212, 215, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 278, 280, 281, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 325, 327, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 355, 357, 359, 362, 363, 364, 366, 372, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 427, 429, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 468, 469, 470, 471, 473, 474, 475, 478, 481], "zero": [4, 5, 7, 15, 18, 21, 23, 25, 26, 28, 30, 32, 33, 34, 35, 37, 38, 41, 44, 48, 57, 58, 60, 62, 63, 65, 67, 72, 74, 75, 83, 84, 86, 93, 97, 98, 99, 100, 103, 105, 106, 117, 119, 123, 130, 131, 135, 136, 138, 140, 143, 147, 151, 152, 155, 157, 173, 174, 178, 180, 183, 187, 188, 190, 193, 206, 208, 210, 220, 222, 223, 224, 228, 231, 232, 233, 239, 245, 247, 255, 256, 258, 266, 268, 272, 275, 280, 285, 289, 290, 294, 296, 302, 311, 313, 315, 316, 317, 325, 329, 330, 332, 334, 337, 338, 339, 340, 341, 342, 344, 345, 349, 355, 358, 361, 362, 363, 373, 381, 385, 394, 402, 407, 410, 419, 421, 425, 426, 427, 428, 431, 432, 433, 438, 439, 440, 441, 443, 445, 446, 449, 452, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "py_version_hex": [4, 56, 98, 469, 470, 478, 479], "encod": [4, 5, 16, 22, 23, 24, 26, 30, 32, 33, 39, 44, 48, 57, 58, 64, 65, 67, 70, 76, 83, 86, 91, 96, 99, 100, 102, 103, 107, 115, 117, 118, 123, 130, 133, 138, 142, 143, 146, 147, 148, 150, 153, 164, 167, 172, 173, 174, 175, 181, 183, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 210, 211, 215, 220, 222, 227, 231, 232, 238, 239, 241, 245, 247, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 273, 281, 282, 283, 290, 292, 293, 294, 295, 296, 301, 304, 306, 311, 323, 327, 332, 334, 338, 341, 344, 345, 346, 347, 349, 353, 355, 356, 357, 359, 366, 374, 375, 383, 392, 395, 398, 404, 408, 410, 412, 413, 414, 416, 417, 418, 419, 425, 429, 438, 442, 443, 447, 448, 452, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481], "singl": [4, 5, 7, 9, 10, 14, 16, 22, 23, 25, 30, 32, 34, 38, 47, 50, 57, 58, 60, 62, 63, 65, 66, 67, 70, 72, 75, 77, 78, 79, 85, 86, 91, 93, 94, 95, 97, 98, 102, 103, 105, 106, 107, 117, 118, 119, 123, 141, 143, 147, 148, 154, 155, 156, 157, 160, 163, 164, 172, 173, 174, 175, 178, 180, 183, 186, 187, 188, 190, 192, 193, 199, 200, 204, 205, 210, 215, 217, 220, 222, 223, 227, 231, 232, 233, 234, 239, 240, 244, 245, 247, 248, 252, 255, 256, 258, 262, 264, 265, 266, 267, 268, 271, 272, 275, 278, 280, 281, 285, 289, 290, 291, 293, 294, 296, 299, 300, 302, 304, 305, 311, 312, 315, 316, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 348, 349, 352, 355, 359, 361, 363, 366, 368, 369, 373, 375, 377, 378, 383, 385, 386, 387, 391, 392, 393, 395, 397, 399, 404, 405, 407, 410, 412, 414, 416, 418, 419, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 438, 439, 441, 442, 443, 446, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "integ": [4, 5, 6, 7, 9, 14, 16, 18, 22, 23, 24, 32, 33, 34, 40, 41, 44, 46, 48, 55, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 83, 86, 88, 91, 93, 94, 97, 100, 102, 103, 104, 106, 107, 111, 112, 114, 117, 118, 119, 123, 130, 131, 135, 138, 146, 147, 148, 151, 155, 157, 163, 164, 170, 173, 174, 175, 180, 183, 190, 200, 208, 209, 210, 212, 215, 218, 220, 222, 224, 230, 231, 240, 242, 245, 247, 251, 253, 255, 258, 259, 263, 264, 265, 266, 267, 271, 272, 275, 278, 280, 285, 286, 287, 288, 289, 290, 291, 296, 301, 302, 304, 305, 307, 311, 313, 316, 317, 318, 319, 325, 326, 329, 334, 335, 336, 337, 338, 342, 344, 345, 346, 349, 350, 358, 359, 362, 363, 364, 366, 373, 376, 381, 384, 386, 391, 395, 397, 398, 402, 405, 407, 408, 410, 416, 419, 421, 424, 425, 427, 433, 437, 438, 439, 440, 441, 443, 446, 448, 452, 453, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "underli": [4, 5, 7, 18, 32, 42, 53, 67, 73, 77, 83, 84, 86, 91, 92, 94, 99, 100, 103, 105, 113, 115, 123, 128, 129, 130, 132, 133, 135, 146, 150, 155, 157, 158, 166, 172, 173, 174, 187, 209, 210, 212, 213, 222, 223, 231, 239, 244, 251, 252, 254, 255, 258, 259, 264, 265, 266, 267, 268, 272, 275, 280, 281, 290, 291, 292, 293, 294, 296, 302, 305, 311, 313, 315, 317, 319, 325, 326, 327, 329, 330, 334, 335, 337, 338, 339, 340, 341, 345, 348, 349, 357, 359, 362, 363, 366, 382, 383, 385, 387, 395, 396, 402, 403, 404, 407, 416, 417, 423, 424, 425, 427, 447, 448, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "found": [4, 5, 14, 17, 21, 22, 30, 32, 34, 41, 44, 48, 54, 57, 58, 60, 62, 63, 70, 71, 72, 76, 77, 78, 79, 80, 84, 86, 87, 92, 93, 94, 96, 98, 99, 100, 103, 106, 107, 108, 110, 111, 117, 118, 119, 120, 133, 144, 146, 148, 155, 157, 159, 160, 164, 167, 168, 172, 173, 174, 188, 190, 193, 194, 196, 200, 202, 204, 205, 208, 210, 212, 213, 220, 222, 223, 224, 225, 227, 230, 233, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 250, 252, 254, 258, 262, 263, 264, 265, 267, 268, 269, 271, 273, 275, 276, 279, 280, 283, 289, 290, 292, 293, 294, 299, 307, 311, 315, 316, 319, 329, 330, 332, 334, 336, 337, 338, 340, 341, 345, 349, 351, 352, 355, 356, 359, 366, 368, 373, 375, 382, 383, 384, 385, 386, 387, 390, 392, 397, 403, 404, 407, 409, 410, 411, 412, 416, 417, 420, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 456, 458, 459, 460, 461, 462, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "treat": [4, 34, 55, 57, 58, 60, 62, 63, 65, 67, 83, 88, 93, 94, 97, 98, 102, 103, 110, 117, 118, 136, 138, 151, 155, 157, 164, 168, 174, 178, 180, 183, 185, 187, 190, 191, 200, 202, 213, 218, 223, 240, 242, 255, 256, 258, 264, 265, 268, 272, 289, 291, 293, 316, 328, 332, 337, 338, 340, 341, 342, 345, 346, 350, 355, 359, 361, 364, 366, 369, 373, 383, 385, 391, 392, 397, 398, 404, 409, 410, 424, 425, 426, 427, 432, 433, 437, 445, 446, 447, 458, 459, 461, 464, 465, 466, 467, 473, 476, 478, 479], "32": [4, 16, 25, 40, 41, 58, 67, 85, 93, 94, 96, 97, 103, 104, 106, 112, 118, 136, 138, 143, 150, 155, 163, 173, 183, 212, 223, 232, 247, 248, 256, 258, 259, 267, 280, 290, 300, 301, 303, 308, 315, 323, 330, 334, 340, 341, 344, 346, 349, 362, 363, 385, 395, 402, 403, 419, 420, 421, 425, 432, 443, 453, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479], "bit": [4, 5, 7, 25, 34, 40, 41, 57, 60, 62, 63, 65, 67, 72, 74, 75, 77, 80, 84, 85, 88, 91, 92, 93, 94, 97, 100, 103, 104, 106, 114, 115, 118, 130, 138, 143, 149, 150, 151, 155, 164, 166, 174, 175, 183, 188, 190, 192, 197, 198, 199, 202, 205, 208, 212, 213, 222, 224, 227, 232, 240, 241, 256, 263, 267, 271, 272, 281, 284, 286, 289, 290, 292, 296, 300, 303, 312, 315, 316, 319, 323, 325, 329, 333, 334, 338, 339, 341, 344, 345, 346, 349, 353, 355, 357, 363, 364, 366, 373, 387, 394, 395, 401, 407, 418, 419, 421, 424, 425, 427, 432, 437, 438, 441, 443, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "manner": [4, 55, 72, 84, 86, 91, 100, 164, 242, 265, 267, 289, 291, 293, 304, 308, 310, 316, 318, 345, 357, 383, 385, 397, 412, 424, 425, 429, 453, 462, 464, 465, 469], "byte": [4, 5, 7, 12, 14, 16, 18, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 38, 39, 40, 41, 42, 48, 57, 58, 60, 62, 63, 65, 67, 77, 78, 83, 84, 86, 91, 92, 93, 98, 100, 102, 103, 104, 107, 110, 114, 115, 118, 119, 123, 124, 130, 133, 134, 138, 139, 140, 142, 143, 146, 148, 150, 155, 158, 163, 164, 171, 174, 175, 179, 181, 183, 185, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 204, 205, 209, 210, 212, 220, 222, 227, 231, 232, 234, 239, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 258, 259, 261, 263, 265, 266, 267, 268, 271, 275, 279, 280, 281, 284, 285, 287, 290, 291, 292, 293, 295, 296, 300, 301, 302, 303, 306, 308, 311, 314, 316, 319, 321, 325, 329, 330, 332, 333, 334, 335, 337, 338, 339, 345, 346, 349, 355, 356, 357, 359, 366, 374, 375, 379, 380, 383, 392, 395, 397, 398, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 416, 418, 419, 421, 422, 424, 425, 427, 428, 429, 437, 443, 447, 448, 449, 452, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481], "big": [4, 25, 34, 41, 63, 67, 72, 77, 83, 94, 100, 104, 106, 129, 130, 138, 150, 155, 164, 173, 174, 188, 227, 233, 256, 266, 292, 341, 344, 346, 349, 359, 386, 395, 402, 431, 449, 453, 461, 462, 463, 466, 468, 470, 472, 474], "endian": [4, 25, 30, 41, 63, 83, 104, 106, 138, 150, 155, 173, 227, 256, 292, 344, 346, 349, 395, 402, 449, 474], "mean": [4, 5, 7, 10, 13, 18, 22, 23, 27, 30, 32, 33, 34, 41, 44, 51, 56, 58, 60, 62, 63, 65, 66, 72, 74, 75, 77, 83, 85, 86, 88, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 123, 130, 131, 136, 138, 141, 148, 152, 155, 157, 160, 163, 164, 166, 167, 172, 173, 174, 175, 178, 180, 181, 183, 187, 188, 190, 193, 199, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 215, 217, 220, 222, 223, 225, 230, 231, 232, 233, 234, 239, 240, 241, 244, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 273, 275, 278, 280, 285, 286, 289, 290, 291, 293, 294, 296, 298, 300, 304, 305, 307, 308, 311, 313, 315, 316, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 349, 350, 357, 358, 359, 362, 363, 364, 366, 373, 376, 378, 381, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 407, 410, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 440, 441, 443, 445, 446, 447, 448, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "8": [4, 5, 10, 13, 15, 16, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 38, 39, 41, 44, 46, 48, 56, 58, 62, 65, 67, 77, 83, 84, 85, 86, 88, 91, 93, 94, 96, 99, 100, 103, 104, 106, 112, 115, 117, 118, 119, 123, 124, 128, 129, 133, 134, 136, 138, 139, 142, 143, 144, 147, 148, 150, 157, 160, 163, 164, 170, 172, 173, 174, 175, 180, 181, 183, 185, 187, 188, 190, 193, 194, 198, 202, 203, 205, 206, 208, 212, 215, 218, 220, 222, 223, 224, 227, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 252, 255, 256, 258, 259, 262, 263, 264, 265, 272, 273, 275, 280, 281, 283, 284, 285, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 304, 305, 308, 311, 315, 316, 319, 323, 327, 328, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 355, 357, 359, 361, 362, 363, 364, 365, 366, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 395, 396, 399, 404, 405, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 438, 439, 441, 443, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 479, 481], "0x03": [4, 188], "9": [4, 5, 7, 10, 23, 26, 28, 32, 33, 44, 51, 56, 57, 58, 59, 60, 61, 62, 63, 67, 79, 84, 92, 93, 94, 96, 98, 99, 100, 103, 106, 109, 117, 118, 119, 122, 123, 126, 129, 132, 135, 136, 146, 147, 151, 155, 157, 158, 160, 163, 164, 165, 170, 173, 174, 175, 180, 183, 185, 187, 188, 190, 206, 208, 212, 218, 220, 222, 223, 224, 228, 229, 231, 232, 233, 237, 238, 239, 242, 245, 247, 249, 252, 256, 258, 259, 260, 264, 265, 266, 267, 272, 280, 281, 285, 290, 293, 297, 299, 300, 301, 302, 304, 305, 315, 316, 319, 325, 329, 330, 332, 334, 337, 338, 340, 341, 342, 343, 344, 345, 349, 355, 359, 362, 363, 375, 379, 381, 382, 383, 384, 391, 392, 396, 399, 408, 410, 417, 419, 421, 422, 424, 425, 428, 432, 438, 439, 443, 446, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481], "16": [4, 5, 16, 33, 40, 46, 67, 77, 84, 88, 93, 94, 100, 104, 106, 114, 118, 138, 143, 147, 155, 170, 173, 174, 180, 190, 208, 218, 222, 223, 232, 233, 237, 256, 258, 259, 264, 280, 289, 290, 292, 311, 315, 316, 319, 323, 329, 334, 338, 340, 341, 342, 345, 349, 363, 366, 375, 395, 421, 423, 432, 437, 439, 441, 443, 446, 448, 449, 450, 453, 459, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "0x04": [4, 188, 425], "17": [4, 93, 94, 100, 106, 136, 147, 180, 183, 187, 190, 205, 220, 233, 254, 258, 289, 290, 316, 363, 375, 423, 441, 446, 460, 463, 465, 466, 468, 471, 472, 474, 475, 478, 479], "24": [4, 84, 93, 94, 97, 103, 106, 136, 138, 147, 180, 183, 190, 206, 233, 256, 258, 292, 316, 329, 340, 341, 344, 346, 363, 421, 432, 466, 470, 473, 474, 478, 479], "0x01": [4, 188, 334], "25": [4, 84, 93, 94, 123, 147, 180, 183, 187, 218, 233, 256, 258, 280, 315, 316, 319, 332, 334, 337, 340, 341, 358, 375, 379, 381, 421, 439, 443, 445, 446, 448, 459, 461, 462, 463, 465, 466, 470, 471, 473, 475, 476, 477, 478, 479], "28": [4, 32, 96, 100, 147, 183, 223, 233, 256, 337, 363, 381, 463, 464, 465, 469, 472, 478, 479], "29": [4, 96, 100, 103, 147, 180, 183, 187, 233, 256, 258, 264, 315, 363, 462, 465, 469, 473, 478, 479], "0x2": 4, "thu": [4, 5, 7, 10, 32, 34, 37, 41, 53, 72, 77, 83, 84, 93, 98, 99, 100, 102, 103, 114, 117, 119, 137, 147, 164, 166, 173, 174, 190, 198, 201, 202, 205, 210, 222, 225, 232, 240, 247, 248, 256, 259, 263, 264, 265, 266, 272, 280, 289, 290, 296, 310, 316, 324, 328, 329, 331, 334, 337, 338, 341, 345, 349, 355, 357, 359, 363, 381, 383, 385, 391, 392, 396, 402, 404, 418, 422, 424, 427, 429, 432, 433, 437, 438, 446, 447, 450, 452, 458, 459, 467, 472, 473, 474, 475, 476, 478], "hexvers": [4, 79, 349, 447, 473], "0x030401a2": 4, "10": [4, 10, 14, 18, 20, 22, 23, 26, 28, 32, 33, 35, 38, 44, 46, 48, 51, 54, 56, 57, 60, 62, 63, 67, 72, 78, 83, 86, 91, 92, 93, 94, 96, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 126, 128, 131, 132, 133, 134, 135, 136, 140, 144, 146, 147, 148, 151, 152, 155, 157, 160, 166, 173, 174, 178, 180, 182, 183, 185, 188, 190, 206, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 228, 230, 232, 233, 234, 238, 239, 247, 248, 249, 252, 255, 256, 258, 263, 264, 265, 271, 272, 275, 279, 280, 281, 283, 285, 288, 289, 290, 291, 293, 300, 301, 304, 305, 308, 309, 315, 316, 319, 322, 323, 327, 329, 334, 337, 338, 339, 340, 341, 342, 344, 345, 349, 352, 357, 359, 361, 362, 363, 364, 366, 369, 375, 378, 381, 382, 383, 385, 387, 391, 392, 404, 410, 412, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 432, 437, 438, 439, 440, 441, 443, 445, 446, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 478, 479, 481], "0": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 79, 83, 84, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 123, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 157, 159, 160, 163, 164, 167, 172, 173, 174, 175, 178, 180, 183, 187, 188, 190, 193, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 211, 212, 215, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 236, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 271, 272, 275, 276, 278, 280, 281, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 349, 350, 352, 353, 355, 356, 357, 358, 359, 362, 363, 364, 366, 368, 369, 373, 375, 376, 377, 378, 379, 383, 384, 385, 386, 391, 392, 396, 397, 399, 400, 402, 404, 405, 407, 408, 410, 412, 413, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 481], "0x030a00f0": 4, "comparison": [4, 18, 23, 48, 62, 63, 67, 73, 94, 102, 106, 109, 119, 137, 144, 151, 157, 158, 170, 173, 178, 180, 183, 187, 188, 190, 216, 217, 222, 223, 233, 251, 252, 253, 263, 272, 280, 288, 291, 295, 340, 342, 343, 349, 359, 383, 385, 386, 387, 395, 402, 410, 416, 425, 428, 430, 432, 439, 446, 452, 459, 461, 462, 463, 464, 465, 466, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481], "avail": [4, 5, 6, 7, 10, 11, 13, 15, 22, 23, 24, 25, 26, 27, 32, 33, 34, 38, 41, 43, 44, 54, 56, 57, 58, 60, 63, 65, 67, 70, 71, 72, 73, 74, 76, 77, 79, 83, 84, 85, 86, 91, 93, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 145, 148, 152, 155, 157, 160, 163, 164, 166, 167, 170, 171, 172, 173, 174, 179, 181, 183, 188, 192, 204, 207, 208, 209, 210, 211, 212, 215, 220, 222, 223, 226, 227, 230, 232, 233, 234, 238, 239, 242, 244, 245, 247, 248, 249, 251, 252, 255, 256, 259, 263, 264, 265, 266, 268, 272, 273, 274, 275, 279, 280, 281, 283, 284, 285, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 349, 351, 353, 355, 356, 357, 358, 359, 362, 363, 365, 366, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 392, 395, 396, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 438, 442, 444, 445, 447, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "symbol": [4, 33, 34, 56, 65, 67, 70, 72, 76, 84, 85, 91, 93, 100, 101, 106, 115, 119, 154, 156, 173, 174, 183, 190, 208, 222, 228, 242, 251, 261, 263, 266, 269, 288, 290, 291, 293, 297, 300, 316, 319, 329, 330, 334, 337, 339, 341, 349, 351, 354, 355, 356, 358, 359, 366, 370, 373, 381, 384, 391, 402, 407, 412, 425, 428, 431, 433, 438, 444, 452, 458, 459, 461, 463, 464, 466, 468, 469, 471, 472, 476, 478, 479], "py_vers": [4, 32, 56, 98, 173, 470, 472], "const": [4, 5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 26, 30, 32, 33, 38, 39, 40, 42, 44, 47, 48, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 65, 67, 72, 74, 78, 96, 98, 115, 289, 408, 474, 477, 478], "unsign": [4, 5, 7, 9, 18, 25, 30, 32, 33, 34, 38, 41, 50, 57, 60, 62, 63, 74, 118, 138, 143, 173, 290, 292, 296, 334, 341, 344, 346, 405, 407, 408, 421, 449, 461, 462, 464, 469, 473, 477], "long": [4, 5, 6, 9, 18, 22, 23, 30, 32, 33, 34, 38, 40, 44, 57, 58, 60, 62, 63, 65, 67, 72, 74, 77, 79, 83, 84, 86, 88, 94, 96, 98, 99, 100, 102, 103, 104, 107, 109, 117, 118, 122, 123, 136, 140, 143, 144, 163, 164, 166, 173, 174, 187, 190, 199, 205, 209, 212, 220, 222, 223, 224, 225, 238, 239, 242, 244, 245, 251, 255, 256, 258, 264, 265, 271, 280, 289, 290, 296, 300, 302, 303, 304, 305, 315, 316, 318, 325, 327, 330, 332, 334, 335, 337, 338, 341, 344, 345, 349, 355, 357, 359, 361, 362, 363, 364, 365, 366, 372, 373, 378, 392, 393, 397, 402, 404, 407, 408, 422, 424, 425, 427, 432, 437, 438, 443, 446, 447, 449, 452, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "sinc": [4, 5, 7, 10, 13, 14, 22, 23, 24, 26, 28, 30, 32, 33, 34, 35, 39, 41, 42, 44, 45, 46, 47, 48, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 118, 119, 123, 126, 129, 130, 136, 138, 141, 143, 145, 146, 148, 149, 150, 154, 157, 158, 164, 166, 170, 172, 173, 174, 178, 180, 183, 187, 190, 191, 193, 195, 196, 198, 200, 202, 204, 205, 206, 210, 215, 219, 222, 223, 224, 227, 231, 232, 233, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 259, 263, 265, 266, 268, 269, 272, 275, 278, 280, 284, 285, 289, 290, 291, 292, 293, 294, 298, 299, 304, 305, 311, 316, 325, 327, 329, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 349, 352, 355, 356, 357, 359, 361, 362, 363, 366, 372, 373, 375, 377, 378, 379, 383, 385, 386, 387, 392, 394, 395, 396, 397, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 418, 419, 420, 421, 424, 425, 427, 429, 431, 432, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "11": [4, 7, 13, 23, 25, 26, 30, 32, 33, 34, 42, 51, 56, 57, 58, 59, 60, 67, 71, 84, 86, 88, 91, 92, 93, 94, 98, 99, 100, 101, 103, 106, 109, 110, 114, 117, 119, 123, 124, 125, 132, 133, 135, 136, 138, 143, 147, 148, 149, 150, 155, 157, 163, 166, 170, 172, 173, 178, 180, 181, 183, 188, 190, 208, 209, 210, 212, 215, 218, 222, 223, 227, 228, 231, 232, 233, 238, 239, 242, 244, 246, 247, 249, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 269, 272, 275, 278, 280, 284, 285, 288, 290, 292, 293, 294, 296, 298, 304, 315, 316, 318, 319, 327, 329, 330, 331, 333, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 349, 351, 352, 355, 356, 357, 358, 359, 361, 363, 375, 376, 378, 380, 383, 385, 392, 394, 396, 397, 400, 404, 405, 409, 419, 420, 421, 422, 424, 425, 427, 428, 432, 433, 439, 443, 452, 453, 458, 461, 462, 463, 465, 467, 469, 471, 472, 474, 475, 476, 477, 478, 481], "runtim": [4, 13, 24, 27, 32, 34, 41, 50, 51, 58, 65, 67, 72, 74, 75, 76, 77, 84, 86, 87, 98, 99, 106, 110, 137, 139, 160, 164, 173, 179, 182, 185, 188, 210, 222, 247, 251, 254, 265, 266, 289, 290, 291, 308, 337, 341, 345, 349, 351, 366, 379, 383, 386, 397, 401, 408, 418, 421, 424, 425, 426, 429, 433, 437, 452, 453, 458, 460, 462, 466, 467, 469, 471, 473, 474, 475, 476, 479], "constant": [4, 7, 25, 32, 44, 57, 62, 63, 67, 75, 77, 83, 84, 86, 91, 93, 100, 112, 115, 117, 119, 123, 136, 145, 147, 155, 157, 158, 161, 163, 170, 171, 172, 173, 175, 179, 184, 188, 190, 208, 212, 222, 223, 224, 233, 238, 239, 241, 251, 252, 255, 258, 261, 263, 264, 267, 270, 271, 278, 279, 280, 287, 289, 290, 292, 295, 296, 297, 301, 305, 316, 319, 323, 325, 326, 330, 339, 340, 341, 349, 350, 353, 355, 356, 358, 359, 360, 362, 366, 372, 375, 379, 384, 395, 397, 401, 403, 407, 409, 410, 412, 416, 419, 421, 425, 427, 432, 438, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "contain": [4, 5, 7, 9, 10, 12, 13, 14, 18, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 37, 39, 40, 41, 47, 48, 50, 53, 54, 56, 57, 58, 59, 60, 62, 63, 67, 71, 72, 74, 75, 76, 78, 79, 83, 84, 85, 86, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 118, 119, 123, 130, 133, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 154, 155, 156, 160, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 178, 179, 180, 181, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 220, 222, 223, 224, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 278, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 315, 316, 319, 321, 323, 325, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 348, 349, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 364, 366, 372, 373, 375, 377, 378, 379, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "patchlevel": [4, 300], "h": [4, 5, 20, 25, 26, 30, 32, 34, 56, 57, 58, 62, 65, 71, 72, 75, 78, 83, 84, 85, 88, 92, 93, 99, 100, 104, 106, 111, 117, 118, 119, 147, 157, 159, 160, 174, 180, 188, 199, 209, 212, 222, 225, 230, 231, 232, 233, 244, 246, 258, 259, 263, 264, 265, 266, 278, 280, 281, 288, 289, 290, 292, 294, 307, 328, 330, 334, 336, 337, 338, 340, 341, 342, 344, 349, 352, 353, 356, 359, 363, 364, 366, 375, 385, 386, 395, 396, 404, 416, 418, 437, 446, 449, 452, 453, 457, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 478, 479], "method": [5, 6, 7, 10, 14, 15, 16, 21, 22, 23, 24, 25, 28, 33, 36, 38, 39, 41, 44, 45, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 65, 67, 71, 73, 74, 79, 80, 85, 86, 87, 88, 91, 94, 99, 100, 102, 105, 106, 107, 109, 112, 113, 114, 115, 118, 119, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 167, 168, 172, 173, 174, 176, 178, 179, 180, 181, 183, 184, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 229, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 258, 259, 262, 264, 265, 266, 267, 268, 270, 273, 275, 276, 278, 281, 283, 286, 288, 290, 292, 294, 295, 296, 298, 299, 302, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 318, 320, 322, 325, 326, 327, 328, 332, 335, 338, 340, 342, 344, 345, 346, 348, 349, 355, 356, 357, 359, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 375, 378, 379, 382, 383, 384, 385, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 429, 430, 432, 433, 438, 439, 440, 441, 442, 444, 446, 448, 449, 452, 453, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 474, 478, 481], "exampl": [5, 7, 10, 16, 18, 22, 23, 31, 32, 34, 44, 49, 50, 51, 56, 57, 60, 61, 63, 65, 67, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 119, 121, 122, 125, 126, 127, 128, 132, 135, 136, 138, 140, 141, 142, 145, 147, 148, 151, 155, 156, 159, 160, 161, 165, 167, 168, 171, 173, 174, 178, 179, 181, 182, 183, 184, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 242, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 275, 277, 279, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 303, 305, 308, 310, 312, 313, 318, 319, 320, 322, 323, 328, 331, 333, 337, 339, 341, 343, 345, 348, 349, 350, 352, 359, 360, 361, 363, 366, 372, 373, 377, 381, 382, 383, 384, 386, 388, 391, 393, 397, 400, 403, 405, 406, 407, 409, 412, 419, 422, 423, 424, 425, 426, 429, 431, 432, 433, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "extend": [5, 30, 31, 32, 34, 41, 44, 60, 62, 67, 74, 75, 77, 79, 81, 83, 86, 91, 93, 100, 103, 107, 115, 117, 118, 119, 120, 130, 140, 147, 151, 152, 155, 157, 158, 164, 165, 166, 173, 174, 180, 187, 188, 189, 190, 193, 202, 204, 210, 222, 223, 227, 242, 244, 246, 255, 258, 259, 268, 272, 273, 275, 277, 279, 296, 299, 300, 305, 311, 317, 325, 329, 332, 334, 338, 341, 349, 355, 357, 363, 373, 375, 385, 392, 398, 399, 406, 407, 410, 417, 425, 426, 427, 429, 430, 433, 437, 438, 439, 441, 442, 446, 447, 458, 460, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481], "interpret": [5, 7, 13, 16, 18, 23, 24, 26, 27, 28, 30, 31, 33, 34, 38, 41, 44, 46, 48, 50, 52, 57, 58, 62, 63, 65, 67, 71, 72, 74, 75, 78, 79, 84, 85, 86, 92, 94, 96, 99, 100, 101, 102, 103, 106, 108, 109, 111, 112, 117, 118, 119, 123, 135, 137, 142, 147, 148, 149, 160, 163, 164, 165, 172, 173, 174, 179, 180, 181, 183, 187, 188, 189, 190, 194, 200, 204, 206, 207, 210, 216, 219, 222, 224, 232, 242, 244, 245, 247, 248, 251, 254, 255, 256, 258, 259, 260, 263, 264, 265, 275, 278, 280, 288, 289, 290, 291, 293, 294, 296, 300, 303, 304, 305, 306, 307, 308, 310, 311, 312, 315, 316, 317, 321, 325, 327, 328, 330, 331, 332, 334, 337, 338, 341, 342, 345, 346, 349, 352, 353, 357, 358, 359, 362, 363, 366, 369, 372, 373, 378, 383, 385, 386, 392, 396, 397, 399, 400, 403, 407, 410, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 446, 447, 449, 450, 452, 453, 455, 457, 458, 459, 460, 462, 463, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481], "three": [5, 7, 23, 30, 34, 41, 57, 62, 72, 74, 75, 76, 77, 83, 84, 86, 87, 92, 93, 99, 100, 103, 104, 105, 106, 110, 114, 117, 119, 130, 131, 136, 155, 157, 158, 159, 172, 173, 174, 178, 180, 183, 186, 187, 188, 190, 191, 193, 197, 202, 204, 208, 210, 213, 222, 223, 224, 233, 240, 242, 245, 247, 255, 263, 264, 265, 266, 268, 275, 280, 283, 285, 289, 290, 292, 293, 294, 296, 304, 305, 311, 313, 315, 316, 323, 325, 329, 330, 331, 334, 337, 338, 340, 341, 342, 344, 345, 349, 350, 355, 356, 363, 364, 366, 370, 373, 381, 382, 383, 385, 386, 387, 392, 396, 400, 406, 407, 411, 412, 416, 422, 424, 425, 427, 428, 429, 431, 432, 433, 434, 437, 438, 441, 443, 445, 447, 448, 449, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 477, 478], "pyarg_parsetupl": [5, 7, 47, 56, 57, 71, 72, 74, 76, 98, 427, 459, 461, 462, 464, 465, 469, 471, 473, 478], "pyarg_parsetupleandkeyword": [5, 56, 57, 72, 74, 75, 463, 476], "pyarg_pars": [5, 56, 466, 472], "tell": [5, 18, 30, 32, 67, 72, 74, 77, 79, 84, 88, 91, 94, 100, 102, 103, 104, 109, 114, 117, 123, 131, 148, 150, 156, 190, 205, 219, 220, 232, 255, 264, 266, 275, 280, 289, 292, 296, 313, 329, 330, 334, 335, 337, 338, 341, 346, 364, 366, 377, 383, 386, 392, 398, 404, 419, 437, 443, 459, 461, 462, 463, 465, 470, 475, 476, 477], "syntax": [5, 7, 67, 72, 77, 78, 79, 84, 86, 94, 97, 99, 100, 103, 106, 107, 109, 115, 120, 123, 136, 148, 154, 156, 164, 165, 173, 178, 183, 200, 208, 210, 222, 227, 244, 251, 252, 259, 261, 263, 265, 270, 280, 288, 289, 292, 294, 311, 328, 337, 341, 349, 359, 360, 366, 373, 378, 379, 383, 385, 391, 392, 393, 414, 416, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 441, 442, 443, 445, 446, 447, 448, 449, 451, 452, 454, 459, 460, 461, 462, 463, 464, 466, 468, 470, 472, 474, 477, 478, 479, 481], "consist": [5, 7, 9, 10, 15, 18, 23, 30, 32, 34, 51, 55, 62, 63, 65, 72, 79, 84, 86, 91, 93, 94, 99, 100, 102, 111, 114, 119, 138, 143, 147, 148, 150, 155, 157, 164, 174, 175, 180, 187, 188, 190, 193, 200, 202, 204, 205, 206, 208, 222, 225, 229, 237, 239, 240, 244, 245, 247, 249, 254, 256, 259, 263, 265, 266, 267, 272, 280, 290, 296, 298, 305, 315, 316, 322, 328, 332, 335, 337, 340, 341, 343, 344, 345, 346, 349, 350, 357, 359, 361, 366, 372, 373, 378, 381, 383, 385, 392, 407, 422, 423, 424, 425, 427, 429, 432, 438, 439, 446, 453, 456, 457, 458, 459, 460, 461, 462, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "unit": [5, 63, 67, 72, 79, 84, 86, 93, 94, 97, 99, 100, 106, 111, 157, 163, 175, 180, 184, 190, 222, 223, 251, 272, 305, 322, 334, 338, 341, 342, 363, 364, 366, 373, 381, 386, 404, 423, 425, 426, 460, 465, 471, 473, 475, 478, 479], "usual": [5, 7, 10, 20, 23, 28, 32, 33, 34, 38, 44, 46, 51, 56, 60, 62, 63, 72, 74, 77, 80, 83, 84, 85, 86, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 117, 119, 122, 123, 126, 128, 130, 143, 146, 148, 150, 157, 170, 172, 173, 183, 187, 190, 191, 193, 195, 199, 202, 210, 218, 220, 222, 223, 227, 233, 240, 242, 244, 245, 247, 248, 251, 252, 255, 256, 258, 265, 266, 269, 272, 280, 285, 288, 289, 290, 292, 294, 296, 301, 303, 307, 316, 318, 325, 329, 330, 331, 334, 335, 336, 337, 338, 340, 341, 342, 345, 349, 355, 359, 363, 365, 366, 372, 373, 378, 381, 383, 385, 386, 387, 390, 392, 398, 399, 410, 418, 419, 420, 424, 425, 427, 433, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 474, 475, 476, 478], "charact": [5, 9, 14, 16, 18, 32, 33, 34, 38, 41, 47, 48, 58, 67, 72, 77, 83, 84, 85, 86, 91, 100, 104, 106, 108, 115, 117, 118, 119, 123, 128, 134, 140, 142, 143, 147, 148, 152, 155, 164, 170, 172, 173, 180, 181, 183, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 210, 211, 217, 222, 225, 228, 235, 236, 237, 241, 242, 244, 245, 247, 248, 251, 255, 262, 263, 265, 268, 269, 279, 280, 281, 282, 283, 285, 290, 291, 293, 296, 300, 304, 311, 314, 316, 317, 318, 320, 323, 328, 329, 332, 334, 335, 337, 339, 341, 342, 343, 345, 349, 355, 356, 357, 358, 359, 361, 363, 366, 369, 372, 373, 384, 385, 391, 395, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 423, 427, 428, 431, 432, 433, 435, 438, 439, 443, 445, 446, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "parenthes": [5, 62, 67, 72, 78, 84, 86, 94, 100, 103, 154, 188, 245, 247, 263, 305, 316, 341, 396, 424, 425, 426, 428, 431, 432, 433, 437, 438, 439, 440, 444, 446, 459, 463, 464, 465, 466, 471, 475, 477, 478], "With": [5, 57, 60, 67, 71, 75, 77, 79, 93, 94, 98, 99, 100, 104, 107, 108, 113, 119, 123, 152, 155, 157, 163, 164, 166, 174, 178, 180, 183, 188, 193, 205, 212, 215, 222, 224, 227, 244, 247, 248, 264, 267, 272, 280, 289, 293, 294, 305, 313, 315, 316, 337, 338, 340, 341, 342, 345, 352, 355, 372, 373, 381, 383, 385, 386, 387, 397, 408, 415, 416, 419, 424, 428, 429, 433, 446, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479], "few": [5, 27, 32, 34, 56, 72, 77, 84, 85, 88, 93, 94, 98, 99, 100, 103, 106, 111, 117, 138, 152, 155, 164, 167, 170, 173, 174, 178, 180, 183, 187, 190, 195, 197, 220, 222, 227, 233, 237, 244, 266, 278, 280, 289, 296, 297, 314, 315, 316, 331, 332, 334, 338, 341, 344, 350, 359, 364, 366, 378, 385, 386, 391, 392, 421, 425, 431, 432, 437, 438, 443, 459, 460, 461, 462, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 478], "address": [5, 9, 23, 41, 50, 57, 62, 63, 67, 72, 74, 77, 79, 84, 86, 99, 100, 103, 104, 109, 118, 123, 125, 127, 130, 139, 161, 167, 173, 188, 190, 197, 200, 205, 206, 209, 212, 220, 222, 239, 240, 242, 253, 259, 264, 266, 267, 268, 281, 316, 319, 332, 334, 335, 337, 338, 359, 379, 383, 391, 392, 395, 404, 417, 425, 453, 459, 461, 462, 464, 465, 466, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "quot": [5, 67, 77, 78, 83, 84, 86, 87, 103, 106, 108, 123, 134, 143, 155, 172, 173, 192, 193, 194, 195, 199, 200, 202, 205, 206, 232, 235, 237, 244, 245, 251, 253, 259, 282, 294, 316, 328, 337, 341, 342, 345, 357, 361, 364, 381, 383, 392, 410, 414, 423, 424, 428, 431, 432, 438, 443, 444, 445, 446, 448, 458, 459, 462, 464, 469, 471, 472, 473, 477], "entri": [5, 13, 22, 26, 27, 30, 32, 34, 44, 48, 50, 57, 62, 67, 72, 74, 77, 85, 86, 88, 92, 93, 94, 96, 100, 106, 107, 111, 117, 123, 131, 132, 136, 141, 144, 147, 155, 157, 164, 166, 173, 174, 178, 181, 183, 188, 190, 192, 213, 222, 223, 227, 230, 233, 240, 244, 245, 247, 252, 258, 262, 265, 266, 267, 268, 269, 277, 278, 280, 281, 283, 289, 290, 291, 293, 296, 299, 300, 303, 304, 305, 307, 311, 313, 316, 318, 321, 327, 328, 330, 332, 336, 337, 338, 341, 348, 349, 351, 355, 357, 359, 362, 366, 372, 373, 375, 378, 381, 382, 386, 387, 393, 397, 399, 400, 402, 418, 419, 422, 426, 427, 439, 446, 449, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478], "round": [5, 62, 63, 67, 86, 119, 146, 157, 170, 180, 187, 190, 218, 222, 240, 258, 272, 286, 287, 290, 315, 340, 341, 342, 344, 349, 375, 381, 383, 385, 398, 425, 427, 439, 441, 443, 446, 447, 448, 449, 459, 461, 463, 464, 465, 466, 467, 468, 470, 473, 474, 477, 478], "match": [5, 11, 22, 23, 32, 41, 44, 60, 62, 63, 67, 72, 77, 84, 86, 88, 91, 93, 94, 99, 100, 104, 106, 107, 115, 123, 133, 136, 137, 138, 141, 147, 148, 152, 157, 160, 164, 174, 180, 183, 184, 187, 188, 190, 193, 194, 200, 201, 202, 205, 208, 210, 213, 216, 222, 223, 225, 228, 237, 239, 240, 243, 244, 245, 248, 251, 252, 258, 261, 264, 265, 267, 269, 280, 283, 284, 285, 290, 291, 293, 294, 299, 305, 308, 311, 315, 317, 320, 328, 329, 330, 334, 337, 338, 341, 342, 344, 345, 349, 355, 356, 359, 360, 363, 366, 372, 373, 375, 378, 379, 380, 382, 383, 385, 386, 391, 392, 397, 398, 400, 407, 408, 410, 412, 417, 422, 426, 427, 428, 430, 432, 440, 442, 444, 449, 452, 453, 458, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "squar": [5, 32, 62, 84, 86, 88, 93, 94, 106, 138, 151, 174, 178, 183, 258, 272, 294, 305, 337, 340, 341, 381, 391, 410, 424, 425, 427, 431, 432, 433, 437, 439, 443, 446, 461, 462, 465, 469, 478], "bracket": [5, 32, 62, 77, 86, 94, 100, 103, 106, 141, 206, 217, 222, 228, 237, 268, 294, 316, 337, 341, 383, 384, 391, 407, 410, 424, 425, 427, 431, 432, 433, 436, 437, 438, 439, 443, 446, 464, 465, 466, 469], "pass": [5, 7, 9, 10, 11, 13, 14, 16, 17, 20, 22, 23, 24, 27, 28, 32, 33, 34, 35, 41, 42, 44, 46, 48, 51, 57, 58, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 83, 86, 87, 91, 92, 93, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 122, 123, 126, 130, 132, 133, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 151, 152, 154, 155, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 178, 180, 181, 187, 188, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 220, 222, 223, 227, 229, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 278, 280, 283, 285, 289, 290, 291, 292, 293, 294, 296, 302, 303, 304, 305, 306, 308, 311, 315, 316, 317, 318, 319, 320, 322, 327, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 370, 372, 373, 375, 377, 378, 380, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 440, 442, 443, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "chunk": [5, 13, 42, 67, 77, 84, 100, 104, 106, 130, 146, 163, 177, 220, 222, 232, 237, 239, 251, 255, 258, 259, 267, 280, 281, 290, 300, 311, 329, 331, 334, 344, 347, 392, 404, 412, 413, 427, 459, 462, 464, 466, 470, 471, 476], "raw": [5, 7, 16, 31, 62, 67, 86, 99, 103, 115, 117, 119, 148, 164, 173, 174, 188, 190, 193, 194, 202, 203, 204, 222, 227, 251, 252, 267, 280, 285, 290, 293, 296, 326, 328, 334, 335, 338, 341, 347, 360, 363, 364, 366, 378, 380, 392, 395, 399, 412, 421, 424, 432, 446, 460, 462, 464, 465, 467, 470, 471, 473, 475], "storag": [5, 31, 34, 41, 54, 67, 77, 86, 92, 98, 100, 106, 155, 164, 174, 188, 247, 255, 258, 281, 290, 297, 327, 337, 341, 344, 357, 410, 437, 461, 464, 465, 466, 471, 473, 474], "unicod": [5, 16, 27, 30, 31, 38, 44, 58, 62, 64, 67, 79, 84, 86, 91, 95, 100, 102, 103, 109, 116, 118, 140, 142, 143, 164, 172, 173, 174, 179, 180, 183, 190, 191, 192, 193, 194, 197, 198, 199, 200, 205, 206, 210, 218, 222, 227, 235, 236, 237, 244, 251, 255, 259, 263, 279, 290, 291, 293, 296, 299, 316, 337, 341, 342, 343, 349, 360, 375, 383, 391, 397, 402, 404, 408, 409, 410, 419, 422, 425, 427, 432, 439, 452, 453, 460, 464, 465, 466, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481], "area": [5, 7, 41, 44, 62, 79, 91, 93, 99, 100, 106, 174, 193, 202, 222, 244, 254, 255, 275, 296, 319, 334, 338, 340, 357, 368, 373, 431, 442, 443, 459, 464, 465, 470, 474, 477], "unless": [5, 7, 9, 13, 22, 23, 24, 26, 27, 30, 32, 34, 41, 50, 53, 55, 56, 57, 58, 62, 72, 75, 77, 84, 85, 88, 93, 94, 98, 99, 103, 104, 109, 111, 113, 114, 117, 119, 122, 123, 126, 136, 137, 138, 146, 147, 158, 164, 166, 172, 178, 180, 183, 188, 190, 193, 197, 202, 203, 206, 222, 223, 237, 239, 240, 241, 244, 247, 252, 255, 256, 258, 264, 265, 267, 268, 272, 278, 280, 285, 289, 290, 291, 293, 294, 306, 311, 316, 320, 325, 326, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 345, 349, 350, 351, 355, 356, 361, 362, 383, 385, 386, 391, 392, 396, 397, 399, 403, 404, 409, 412, 423, 424, 425, 426, 427, 432, 435, 437, 438, 443, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 476, 477, 478, 479], "otherwis": [5, 7, 10, 11, 13, 18, 22, 23, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 46, 47, 48, 51, 53, 56, 57, 58, 60, 62, 63, 65, 67, 72, 75, 77, 78, 85, 88, 93, 94, 99, 100, 103, 104, 107, 109, 113, 114, 117, 118, 119, 123, 126, 130, 131, 132, 133, 135, 136, 138, 143, 146, 147, 151, 152, 154, 155, 157, 160, 163, 164, 166, 167, 172, 173, 174, 176, 178, 180, 181, 182, 183, 187, 188, 190, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 211, 213, 215, 220, 222, 223, 224, 226, 227, 229, 231, 239, 240, 241, 242, 244, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 264, 265, 266, 268, 272, 273, 275, 280, 283, 288, 289, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 304, 308, 309, 311, 313, 316, 318, 321, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 366, 370, 373, 375, 378, 379, 381, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 403, 404, 408, 410, 412, 416, 417, 418, 419, 421, 422, 424, 425, 427, 428, 429, 432, 433, 434, 435, 437, 439, 443, 452, 453, 458, 460, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "state": [5, 13, 17, 22, 23, 24, 27, 30, 31, 34, 44, 49, 50, 51, 52, 58, 60, 62, 67, 72, 74, 75, 83, 84, 86, 91, 94, 96, 99, 102, 103, 107, 116, 123, 124, 126, 130, 135, 136, 137, 138, 141, 148, 151, 154, 155, 157, 161, 163, 164, 166, 167, 168, 174, 182, 188, 209, 210, 215, 219, 223, 224, 232, 238, 240, 245, 247, 251, 253, 255, 256, 265, 267, 268, 290, 292, 294, 295, 298, 300, 305, 311, 312, 313, 315, 317, 320, 322, 325, 330, 334, 335, 337, 338, 341, 345, 349, 359, 362, 363, 365, 366, 372, 378, 382, 385, 386, 387, 391, 392, 397, 399, 402, 408, 409, 421, 422, 423, 425, 427, 429, 437, 438, 445, 449, 459, 461, 462, 464, 469, 470, 471, 472, 473, 474, 477, 478, 479], "nul": [5, 7, 62, 173, 174, 175, 234, 266, 281, 290, 293, 311, 344, 349, 416, 472, 473], "termin": [5, 7, 9, 16, 30, 32, 33, 36, 38, 44, 57, 59, 60, 62, 63, 65, 67, 72, 83, 84, 85, 91, 94, 98, 99, 100, 106, 112, 115, 117, 123, 127, 129, 130, 134, 136, 137, 147, 152, 163, 172, 173, 175, 186, 187, 188, 190, 204, 205, 211, 216, 222, 226, 239, 242, 244, 251, 252, 255, 258, 262, 263, 266, 268, 280, 283, 285, 289, 294, 299, 305, 316, 319, 330, 332, 335, 337, 338, 341, 342, 345, 349, 357, 358, 362, 366, 374, 381, 388, 392, 397, 402, 404, 408, 410, 412, 423, 424, 426, 427, 429, 432, 433, 437, 438, 440, 442, 450, 452, 456, 459, 463, 464, 465, 467, 472, 473, 475, 477, 478], "There": [5, 6, 7, 10, 13, 22, 23, 25, 26, 27, 32, 33, 34, 35, 40, 41, 44, 45, 48, 56, 57, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 91, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 108, 117, 119, 122, 129, 130, 136, 140, 148, 150, 151, 152, 155, 156, 157, 160, 164, 173, 176, 178, 180, 181, 183, 187, 190, 193, 200, 204, 205, 206, 208, 222, 223, 227, 232, 240, 244, 245, 247, 248, 252, 254, 255, 256, 258, 263, 264, 265, 268, 271, 278, 280, 285, 286, 289, 290, 293, 294, 296, 305, 311, 325, 328, 330, 334, 335, 337, 338, 340, 341, 343, 344, 345, 350, 355, 356, 357, 362, 364, 366, 373, 381, 383, 385, 386, 387, 392, 396, 397, 404, 405, 407, 408, 411, 412, 418, 419, 421, 424, 425, 427, 428, 429, 432, 437, 438, 439, 440, 442, 443, 446, 447, 448, 451, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "wai": [5, 7, 9, 10, 13, 23, 25, 30, 32, 33, 34, 41, 43, 44, 51, 56, 57, 58, 60, 62, 63, 65, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 117, 118, 119, 121, 122, 123, 126, 130, 135, 136, 138, 141, 148, 151, 154, 155, 156, 157, 158, 160, 164, 166, 168, 169, 170, 172, 173, 174, 178, 180, 183, 185, 187, 190, 191, 192, 193, 197, 198, 202, 204, 205, 206, 208, 216, 220, 222, 225, 227, 232, 233, 240, 244, 245, 247, 248, 252, 254, 255, 256, 258, 263, 264, 265, 266, 267, 268, 271, 272, 275, 277, 280, 281, 288, 289, 290, 292, 293, 294, 296, 304, 305, 315, 316, 321, 323, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 341, 344, 345, 349, 350, 351, 354, 355, 357, 359, 362, 364, 366, 372, 375, 378, 381, 383, 384, 385, 386, 387, 391, 392, 395, 397, 399, 400, 404, 407, 410, 412, 416, 417, 418, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "convert": [5, 7, 10, 14, 15, 18, 25, 32, 34, 38, 46, 51, 54, 55, 57, 58, 63, 65, 67, 71, 72, 74, 75, 77, 83, 86, 91, 92, 93, 94, 98, 99, 100, 103, 104, 109, 114, 117, 118, 123, 136, 138, 141, 145, 151, 152, 155, 157, 159, 161, 164, 172, 173, 174, 175, 178, 180, 181, 183, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 205, 206, 210, 212, 217, 220, 222, 223, 227, 235, 237, 241, 245, 251, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 280, 282, 286, 288, 289, 290, 291, 295, 296, 298, 299, 304, 306, 315, 316, 323, 332, 334, 339, 340, 341, 342, 344, 346, 349, 355, 359, 363, 373, 375, 376, 380, 383, 385, 391, 392, 395, 397, 402, 404, 408, 410, 412, 416, 422, 424, 425, 427, 432, 433, 440, 441, 443, 446, 448, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "y": [5, 7, 33, 34, 47, 57, 71, 72, 76, 77, 79, 83, 88, 91, 92, 93, 94, 99, 100, 106, 107, 117, 119, 140, 157, 159, 164, 173, 174, 176, 178, 180, 183, 187, 190, 207, 222, 223, 244, 258, 264, 265, 266, 272, 278, 280, 285, 288, 310, 330, 331, 337, 338, 340, 341, 342, 349, 352, 363, 366, 373, 381, 383, 396, 399, 416, 417, 418, 424, 425, 427, 428, 432, 433, 437, 438, 439, 440, 443, 446, 448, 449, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 477, 478, 479], "fill": [5, 7, 22, 32, 33, 37, 41, 44, 46, 54, 59, 62, 63, 67, 74, 75, 79, 84, 91, 94, 98, 100, 102, 104, 107, 114, 117, 119, 135, 148, 172, 173, 174, 180, 183, 190, 193, 198, 202, 219, 222, 242, 244, 247, 251, 255, 258, 266, 290, 332, 334, 337, 338, 341, 342, 344, 345, 359, 360, 363, 366, 425, 427, 429, 449, 453, 459, 461, 462, 463, 464, 465, 470, 471, 472, 473, 475, 476], "py_buff": [5, 7, 42, 56, 62, 465, 470, 473], "lock": [5, 30, 31, 50, 62, 67, 72, 75, 86, 98, 100, 104, 112, 121, 139, 161, 163, 164, 166, 173, 181, 209, 212, 223, 238, 255, 264, 266, 267, 268, 279, 280, 290, 302, 313, 315, 319, 321, 327, 330, 335, 337, 339, 349, 359, 366, 383, 399, 425, 449, 459, 461, 463, 464, 465, 466, 467, 470, 471, 472, 475, 477, 478, 479, 481], "subsequ": [5, 23, 32, 44, 59, 63, 84, 87, 92, 99, 103, 112, 117, 131, 156, 174, 187, 188, 199, 203, 205, 208, 220, 223, 240, 247, 252, 255, 258, 265, 266, 268, 275, 280, 288, 289, 290, 291, 293, 313, 316, 329, 334, 338, 340, 341, 342, 349, 353, 355, 357, 362, 366, 372, 381, 386, 392, 421, 423, 424, 427, 429, 431, 433, 438, 439, 462, 463, 464, 465, 466, 468, 470, 475, 478], "even": [5, 9, 18, 23, 26, 30, 32, 33, 34, 41, 44, 56, 57, 58, 61, 62, 63, 72, 75, 77, 78, 79, 80, 83, 84, 85, 86, 88, 92, 93, 94, 98, 100, 102, 103, 104, 105, 106, 108, 109, 113, 117, 119, 122, 123, 129, 136, 143, 148, 151, 155, 158, 160, 163, 164, 165, 166, 173, 174, 178, 180, 183, 185, 190, 191, 193, 195, 196, 202, 203, 204, 205, 208, 210, 211, 212, 215, 218, 222, 223, 232, 233, 236, 240, 244, 247, 248, 252, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 272, 280, 289, 290, 291, 293, 294, 296, 304, 305, 315, 316, 328, 329, 330, 331, 332, 334, 337, 338, 340, 341, 342, 344, 349, 350, 351, 355, 357, 359, 361, 362, 363, 366, 373, 379, 381, 383, 384, 385, 386, 387, 392, 396, 397, 399, 400, 402, 404, 408, 412, 414, 416, 419, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479], "insid": [5, 7, 10, 11, 32, 41, 62, 67, 73, 75, 77, 80, 84, 85, 86, 91, 94, 98, 103, 104, 110, 111, 119, 132, 141, 166, 172, 174, 183, 190, 193, 196, 202, 207, 222, 223, 224, 237, 248, 249, 254, 255, 259, 278, 280, 281, 293, 294, 296, 299, 313, 316, 329, 330, 334, 342, 349, 355, 366, 372, 373, 381, 383, 385, 386, 387, 410, 417, 419, 420, 424, 425, 426, 427, 432, 437, 438, 439, 440, 443, 446, 450, 458, 460, 461, 462, 463, 464, 465, 467, 470, 471, 472, 474, 476, 477, 478], "py_begin_allow_thread": [5, 32, 56, 72], "block": [5, 7, 23, 32, 34, 41, 44, 54, 62, 67, 72, 74, 76, 77, 86, 91, 92, 103, 107, 109, 111, 112, 114, 119, 123, 127, 130, 131, 132, 133, 134, 135, 136, 141, 143, 146, 166, 173, 174, 175, 182, 183, 185, 187, 188, 190, 196, 204, 205, 209, 210, 212, 220, 222, 223, 229, 231, 232, 234, 239, 240, 244, 245, 252, 254, 255, 258, 266, 270, 279, 280, 281, 285, 290, 292, 293, 302, 310, 313, 319, 322, 324, 325, 326, 327, 329, 330, 332, 334, 337, 339, 345, 348, 349, 350, 355, 356, 359, 362, 366, 383, 385, 386, 392, 398, 400, 402, 403, 408, 413, 425, 426, 427, 428, 429, 433, 438, 440, 443, 446, 448, 452, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "without": [5, 7, 8, 9, 10, 12, 13, 22, 23, 25, 26, 28, 32, 33, 34, 37, 38, 41, 44, 48, 50, 53, 54, 56, 57, 58, 60, 62, 65, 67, 71, 72, 74, 75, 77, 78, 82, 84, 86, 88, 91, 92, 93, 94, 96, 98, 99, 100, 103, 104, 105, 108, 111, 112, 113, 117, 119, 122, 123, 130, 131, 132, 133, 134, 136, 137, 144, 146, 148, 152, 155, 157, 163, 164, 166, 167, 168, 170, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 189, 190, 191, 193, 194, 199, 202, 205, 206, 208, 210, 211, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 240, 241, 245, 247, 249, 250, 252, 254, 255, 256, 258, 262, 263, 264, 267, 268, 272, 275, 279, 280, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 302, 305, 306, 311, 313, 315, 316, 319, 320, 321, 322, 325, 327, 329, 331, 334, 337, 338, 341, 342, 344, 345, 346, 349, 350, 351, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 379, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 404, 407, 408, 410, 413, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "risk": [5, 41, 42, 72, 77, 84, 86, 94, 123, 210, 265, 268, 280, 289, 296, 323, 359, 381, 410, 418, 423, 465, 472, 477, 478], "mutabl": [5, 27, 28, 32, 34, 62, 67, 77, 84, 86, 94, 98, 157, 158, 168, 173, 184, 200, 212, 222, 223, 252, 280, 281, 288, 290, 294, 296, 312, 327, 399, 410, 421, 424, 427, 433, 437, 438, 439, 446, 459, 462, 464, 465, 466, 467, 469, 470, 471, 476, 479], "data": [5, 7, 9, 10, 13, 21, 24, 28, 31, 32, 34, 41, 47, 48, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 76, 78, 79, 85, 86, 87, 88, 91, 92, 96, 98, 100, 101, 103, 105, 111, 112, 114, 115, 117, 118, 119, 121, 123, 127, 130, 131, 134, 139, 141, 143, 144, 146, 147, 148, 154, 155, 157, 161, 163, 164, 165, 166, 168, 172, 174, 175, 176, 180, 181, 183, 187, 188, 192, 193, 194, 195, 198, 200, 203, 204, 205, 209, 210, 212, 220, 222, 223, 227, 231, 232, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 258, 259, 263, 264, 266, 268, 269, 270, 271, 273, 275, 278, 280, 281, 283, 285, 287, 289, 290, 292, 293, 297, 299, 301, 303, 305, 306, 311, 312, 313, 315, 316, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 352, 355, 356, 357, 358, 359, 360, 363, 365, 369, 372, 373, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 398, 399, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 427, 429, 430, 436, 437, 438, 440, 441, 442, 446, 447, 451, 453, 455, 459, 460, 461, 462, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 479, 481], "being": [5, 7, 10, 13, 16, 22, 23, 27, 28, 32, 34, 37, 43, 44, 59, 60, 62, 63, 65, 72, 73, 74, 75, 77, 79, 83, 84, 86, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 117, 118, 119, 123, 130, 133, 136, 146, 147, 148, 155, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 178, 180, 181, 188, 190, 192, 193, 199, 202, 205, 208, 210, 213, 215, 220, 222, 223, 224, 227, 229, 231, 233, 244, 245, 247, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 273, 275, 280, 289, 290, 292, 293, 294, 296, 299, 300, 304, 305, 306, 309, 311, 315, 316, 317, 321, 325, 326, 327, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 352, 354, 357, 359, 361, 362, 363, 364, 366, 373, 378, 383, 385, 386, 387, 390, 391, 392, 396, 397, 399, 404, 407, 410, 411, 412, 414, 418, 419, 423, 424, 425, 427, 429, 431, 433, 436, 437, 438, 440, 441, 443, 446, 447, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "resiz": [5, 8, 9, 28, 41, 53, 55, 59, 63, 77, 173, 174, 255, 275, 330, 341, 366, 372, 373, 381, 385, 470, 475, 477], "destroi": [5, 11, 13, 22, 27, 32, 51, 59, 62, 66, 77, 86, 94, 98, 104, 244, 255, 275, 280, 281, 289, 342, 357, 362, 366, 385, 397, 399, 402, 425, 429, 459, 461, 462, 464, 472, 476, 477, 479], "As": [5, 6, 7, 10, 14, 23, 24, 27, 32, 34, 48, 51, 53, 58, 59, 63, 67, 71, 72, 74, 75, 77, 79, 83, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 119, 123, 133, 145, 146, 152, 155, 156, 157, 164, 166, 173, 178, 180, 181, 183, 187, 188, 190, 198, 200, 202, 205, 222, 224, 227, 232, 237, 239, 241, 244, 247, 249, 255, 256, 259, 263, 264, 265, 266, 268, 280, 281, 289, 290, 293, 294, 296, 300, 305, 309, 316, 321, 323, 327, 335, 337, 338, 341, 342, 343, 344, 345, 349, 350, 357, 359, 361, 362, 366, 373, 381, 383, 385, 386, 387, 391, 392, 404, 405, 407, 410, 411, 418, 419, 423, 425, 427, 429, 432, 437, 438, 439, 440, 441, 443, 445, 447, 452, 453, 458, 459, 460, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "result": [5, 7, 8, 9, 10, 13, 15, 20, 23, 26, 30, 32, 33, 34, 35, 38, 41, 44, 46, 48, 52, 53, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 83, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 106, 111, 114, 117, 119, 120, 122, 123, 124, 126, 130, 132, 134, 135, 136, 138, 139, 140, 141, 143, 144, 148, 149, 151, 155, 156, 157, 160, 163, 164, 165, 166, 167, 170, 173, 174, 175, 178, 180, 181, 183, 187, 188, 190, 193, 194, 196, 198, 200, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 216, 220, 222, 223, 224, 227, 228, 231, 232, 234, 239, 240, 241, 242, 244, 245, 247, 249, 251, 252, 253, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 300, 302, 304, 305, 306, 308, 314, 315, 316, 318, 319, 321, 323, 325, 328, 329, 330, 332, 333, 334, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 352, 355, 356, 357, 359, 361, 362, 363, 364, 366, 373, 375, 377, 378, 379, 381, 382, 383, 385, 386, 387, 392, 394, 395, 397, 399, 400, 402, 404, 406, 407, 408, 410, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pybuffer_releas": [5, 7, 47, 56, 62, 465, 470], "finish": [5, 33, 41, 60, 62, 71, 78, 83, 84, 86, 96, 99, 100, 119, 121, 122, 123, 125, 132, 134, 135, 136, 141, 146, 152, 163, 166, 210, 224, 229, 239, 255, 267, 280, 281, 311, 313, 330, 335, 337, 338, 341, 345, 355, 359, 368, 385, 400, 408, 409, 410, 413, 416, 419, 421, 424, 425, 440, 443, 449, 452, 464, 465, 470, 472, 473, 475, 476, 479], "earli": [5, 33, 34, 74, 79, 166, 224, 238, 252, 266, 289, 330, 338, 340, 341, 362, 366, 379, 408, 419, 423, 427, 429, 459, 463, 465, 472], "abort": [5, 34, 41, 58, 72, 100, 123, 127, 130, 133, 135, 209, 210, 220, 245, 290, 294, 330, 337, 338, 349, 355, 356, 362, 370, 385, 429, 462, 477], "et": [5, 78, 100, 178, 334, 338, 373, 410, 461, 464, 466, 469], "alloc": [5, 7, 10, 16, 23, 28, 30, 31, 33, 34, 44, 48, 49, 55, 57, 58, 62, 63, 65, 67, 71, 72, 73, 75, 77, 84, 86, 92, 98, 104, 112, 127, 130, 166, 173, 182, 185, 211, 224, 251, 255, 256, 280, 281, 290, 296, 311, 313, 319, 334, 349, 362, 373, 402, 413, 452, 453, 459, 460, 461, 464, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481], "pymem_fre": [5, 18, 33, 41, 56, 58, 63, 462, 464], "str": [5, 10, 18, 22, 24, 25, 26, 32, 33, 34, 38, 39, 48, 57, 58, 62, 63, 65, 67, 74, 75, 77, 83, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 111, 117, 119, 123, 133, 139, 143, 146, 152, 155, 157, 160, 164, 166, 172, 174, 178, 179, 180, 181, 183, 185, 187, 188, 192, 193, 194, 198, 199, 200, 202, 205, 206, 208, 210, 218, 220, 222, 223, 231, 232, 233, 234, 237, 239, 241, 244, 248, 249, 251, 252, 255, 256, 258, 259, 263, 264, 265, 267, 280, 281, 285, 288, 289, 290, 293, 296, 303, 315, 316, 328, 332, 335, 337, 338, 342, 344, 345, 349, 350, 355, 357, 359, 360, 361, 364, 375, 376, 379, 382, 383, 385, 386, 391, 395, 397, 399, 402, 407, 410, 411, 416, 419, 422, 424, 425, 427, 432, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "read": [5, 7, 22, 23, 24, 25, 30, 32, 33, 40, 41, 42, 47, 57, 60, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 79, 84, 85, 86, 88, 91, 92, 93, 94, 96, 99, 100, 102, 103, 104, 107, 109, 111, 113, 116, 117, 118, 119, 122, 124, 127, 133, 134, 137, 140, 143, 145, 146, 148, 152, 154, 155, 156, 157, 158, 160, 163, 164, 167, 173, 174, 178, 180, 181, 185, 186, 187, 188, 190, 191, 197, 200, 201, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 220, 222, 223, 224, 226, 227, 231, 232, 233, 237, 239, 240, 241, 242, 244, 245, 247, 248, 250, 251, 252, 254, 255, 259, 262, 265, 268, 271, 273, 274, 275, 277, 279, 280, 281, 283, 285, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 305, 306, 309, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 352, 356, 357, 362, 363, 366, 373, 375, 376, 377, 378, 379, 381, 382, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 404, 407, 410, 411, 412, 413, 414, 416, 418, 419, 421, 422, 423, 424, 427, 429, 432, 434, 435, 436, 437, 438, 440, 442, 445, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "char": [5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 26, 30, 32, 33, 34, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 53, 57, 58, 59, 60, 62, 63, 65, 71, 72, 74, 75, 78, 96, 118, 143, 155, 173, 174, 199, 237, 244, 259, 279, 341, 342, 344, 364, 366, 383, 406, 410, 425, 437, 462, 464, 465, 466, 469, 474, 477, 478], "share": [5, 7, 32, 34, 40, 41, 44, 56, 57, 62, 63, 67, 70, 72, 75, 76, 78, 83, 86, 93, 96, 98, 100, 101, 104, 108, 112, 115, 117, 119, 130, 135, 161, 168, 178, 180, 183, 209, 212, 223, 224, 227, 232, 234, 251, 256, 258, 263, 264, 271, 275, 286, 289, 290, 291, 293, 296, 308, 315, 319, 323, 327, 334, 335, 337, 339, 341, 342, 349, 351, 355, 357, 362, 363, 366, 372, 385, 386, 404, 421, 423, 424, 425, 427, 429, 437, 438, 441, 447, 449, 452, 453, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 481], "lifetim": [5, 34, 41, 47, 67, 72, 84, 86, 155, 163, 166, 222, 290, 402, 427, 437, 460, 473, 476, 477], "won": [5, 32, 33, 40, 62, 72, 74, 75, 77, 84, 91, 93, 94, 97, 99, 100, 103, 106, 111, 113, 119, 130, 136, 148, 163, 164, 180, 181, 183, 190, 203, 222, 224, 227, 228, 240, 264, 266, 283, 289, 290, 294, 296, 297, 326, 334, 344, 349, 366, 386, 413, 421, 441, 444, 452, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 477], "yourself": [5, 32, 34, 42, 67, 71, 77, 84, 86, 91, 93, 103, 104, 106, 119, 152, 174, 176, 190, 198, 208, 247, 259, 263, 264, 265, 266, 289, 294, 325, 332, 338, 349, 385, 386, 387, 407, 441, 443, 457, 458, 464, 467, 472], "ensur": [5, 18, 32, 33, 41, 44, 48, 50, 56, 57, 58, 62, 65, 67, 72, 75, 78, 83, 85, 87, 91, 97, 98, 99, 100, 103, 110, 117, 123, 129, 130, 133, 134, 140, 155, 163, 166, 173, 178, 180, 183, 190, 193, 202, 207, 208, 223, 224, 233, 252, 259, 264, 266, 267, 275, 280, 281, 289, 290, 296, 321, 334, 337, 338, 340, 341, 345, 349, 358, 359, 361, 366, 369, 373, 379, 383, 385, 386, 387, 392, 395, 396, 397, 399, 402, 404, 416, 418, 419, 425, 427, 440, 447, 452, 453, 458, 459, 462, 464, 465, 466, 470, 472, 473, 474, 475, 476, 477, 478, 479], "safe": [5, 22, 23, 24, 32, 33, 34, 35, 41, 44, 48, 50, 51, 55, 58, 62, 63, 67, 71, 72, 74, 75, 84, 86, 87, 100, 119, 122, 123, 126, 127, 129, 130, 131, 134, 135, 136, 140, 147, 148, 157, 166, 172, 173, 174, 178, 190, 211, 222, 232, 234, 235, 244, 247, 255, 263, 264, 265, 267, 268, 280, 290, 296, 309, 313, 315, 321, 322, 323, 325, 327, 328, 329, 331, 334, 337, 338, 342, 345, 359, 362, 383, 386, 387, 391, 395, 397, 399, 406, 412, 437, 458, 459, 460, 462, 465, 466, 469, 470, 471, 472, 473, 477, 478], "pybufferproc": [5, 60, 62, 74], "bf_releasebuff": [5, 60, 62, 470], "must": [5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 62, 63, 65, 67, 70, 72, 74, 75, 76, 78, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 112, 113, 114, 117, 118, 119, 122, 123, 124, 129, 130, 135, 136, 137, 140, 141, 143, 146, 147, 148, 151, 152, 155, 157, 158, 163, 164, 166, 169, 170, 172, 173, 174, 178, 180, 183, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 211, 215, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 242, 244, 245, 247, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 285, 288, 289, 290, 292, 293, 294, 296, 298, 299, 301, 305, 311, 313, 314, 315, 316, 317, 319, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 355, 356, 357, 358, 359, 362, 363, 366, 368, 372, 373, 375, 376, 377, 379, 381, 383, 385, 386, 387, 391, 392, 394, 395, 396, 397, 398, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 437, 438, 439, 440, 443, 445, 446, 447, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "disallow": [5, 32, 62, 77, 93, 117, 164, 178, 222, 269, 290, 334, 337, 341, 420, 424, 458, 465, 469, 471, 474, 477, 478], "common": [5, 7, 23, 31, 32, 33, 34, 49, 62, 67, 72, 75, 77, 79, 80, 84, 86, 88, 91, 92, 93, 94, 98, 99, 100, 104, 105, 106, 107, 111, 112, 117, 122, 125, 132, 136, 144, 155, 157, 164, 166, 172, 173, 178, 179, 187, 190, 192, 197, 198, 200, 202, 204, 205, 208, 213, 216, 220, 222, 232, 233, 234, 240, 242, 244, 248, 251, 255, 256, 258, 259, 262, 264, 268, 269, 272, 280, 281, 289, 290, 292, 296, 300, 304, 315, 328, 329, 330, 332, 335, 337, 338, 340, 344, 345, 347, 351, 358, 359, 360, 361, 362, 363, 364, 366, 370, 372, 381, 383, 385, 386, 387, 388, 392, 396, 405, 416, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 438, 439, 440, 441, 446, 447, 448, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 473, 474, 475, 477, 478, 479, 481], "bytearrai": [5, 7, 8, 32, 33, 63, 67, 77, 84, 86, 118, 130, 142, 143, 158, 173, 179, 188, 210, 212, 222, 232, 234, 251, 255, 258, 259, 271, 275, 281, 296, 301, 315, 334, 338, 344, 383, 391, 397, 416, 421, 424, 425, 427, 447, 452, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479], "memoryview": [5, 7, 16, 67, 86, 109, 142, 222, 251, 281, 296, 329, 334, 349, 383, 424, 425, 447, 467, 471, 472, 474, 475, 478, 481], "besid": [5, 75, 92, 93, 157, 180, 222, 255, 330, 373, 399, 432, 433, 458, 469], "requir": [5, 7, 12, 18, 23, 28, 32, 34, 41, 44, 50, 57, 58, 62, 63, 67, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 112, 113, 115, 118, 119, 123, 129, 135, 136, 146, 147, 154, 155, 157, 158, 163, 164, 166, 167, 172, 174, 178, 180, 181, 182, 183, 186, 188, 190, 191, 192, 193, 197, 198, 199, 200, 204, 205, 207, 209, 210, 218, 222, 223, 224, 225, 229, 231, 232, 233, 234, 237, 240, 242, 244, 245, 247, 249, 250, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 272, 277, 278, 280, 281, 285, 289, 290, 291, 292, 293, 296, 297, 298, 302, 304, 305, 307, 311, 313, 316, 319, 325, 327, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 353, 355, 357, 358, 359, 362, 363, 366, 372, 373, 375, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 394, 395, 396, 399, 402, 404, 406, 407, 410, 411, 412, 413, 414, 416, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 437, 438, 439, 441, 443, 444, 447, 449, 450, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "check": [5, 7, 9, 10, 12, 16, 17, 20, 21, 23, 25, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 48, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 71, 72, 74, 75, 77, 79, 80, 83, 87, 88, 91, 93, 94, 96, 98, 99, 100, 101, 103, 104, 106, 111, 113, 117, 119, 122, 123, 125, 126, 136, 140, 141, 146, 148, 152, 157, 158, 160, 164, 166, 173, 174, 175, 178, 180, 183, 184, 185, 188, 194, 197, 202, 205, 208, 210, 211, 212, 218, 220, 222, 223, 226, 229, 230, 237, 239, 240, 242, 244, 245, 251, 252, 253, 256, 259, 262, 264, 265, 266, 267, 269, 272, 277, 280, 283, 284, 285, 286, 290, 291, 292, 293, 299, 300, 302, 317, 319, 324, 325, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 354, 355, 359, 360, 362, 372, 373, 375, 379, 381, 382, 383, 385, 386, 392, 393, 396, 397, 399, 406, 410, 413, 416, 419, 421, 424, 427, 428, 429, 433, 436, 437, 438, 439, 443, 444, 445, 447, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "verifi": [5, 7, 67, 74, 84, 92, 94, 96, 102, 158, 184, 190, 208, 232, 240, 247, 265, 266, 268, 290, 332, 337, 340, 359, 385, 397, 404, 458, 465, 466, 469, 470, 471, 472, 473, 474, 478], "immut": [5, 9, 10, 28, 32, 34, 59, 62, 63, 67, 86, 92, 98, 119, 158, 172, 173, 178, 180, 183, 205, 218, 222, 223, 252, 264, 288, 290, 293, 315, 395, 424, 427, 437, 439, 446, 459, 462, 463, 464, 465, 466, 467, 469, 471, 478, 479], "honor": [5, 79, 112, 248, 294, 349, 355, 417, 456, 465, 466, 476], "writabl": [5, 7, 42, 47, 57, 67, 83, 104, 117, 130, 146, 148, 157, 210, 245, 252, 255, 275, 280, 290, 292, 301, 329, 334, 335, 338, 341, 344, 357, 366, 399, 419, 429, 433, 437, 463, 465, 470, 473, 475, 476, 477], "anoth": [5, 7, 10, 22, 23, 30, 32, 34, 41, 56, 57, 62, 63, 67, 72, 73, 74, 75, 76, 77, 79, 82, 83, 85, 86, 88, 91, 92, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 117, 118, 121, 122, 123, 129, 130, 132, 135, 136, 141, 148, 152, 155, 157, 160, 163, 164, 166, 170, 173, 174, 178, 180, 183, 190, 191, 193, 200, 210, 212, 218, 220, 222, 223, 227, 229, 232, 233, 240, 242, 244, 247, 252, 255, 258, 259, 264, 265, 267, 268, 275, 280, 284, 285, 288, 289, 290, 293, 294, 296, 298, 305, 306, 308, 311, 313, 316, 325, 329, 330, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 352, 362, 364, 366, 372, 373, 375, 376, 377, 381, 383, 385, 386, 387, 390, 391, 392, 396, 399, 402, 404, 405, 406, 407, 408, 410, 411, 419, 422, 424, 425, 426, 427, 429, 433, 437, 438, 439, 440, 441, 443, 444, 447, 449, 450, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 478, 479], "thread": [5, 17, 23, 30, 31, 33, 34, 41, 50, 52, 58, 62, 67, 72, 75, 78, 80, 84, 86, 98, 99, 104, 115, 121, 122, 126, 127, 129, 130, 131, 132, 135, 137, 146, 147, 157, 161, 163, 166, 167, 173, 184, 187, 211, 223, 229, 242, 244, 245, 251, 254, 263, 265, 266, 267, 268, 280, 287, 290, 313, 315, 318, 319, 321, 322, 329, 335, 337, 338, 340, 341, 345, 349, 363, 365, 383, 392, 396, 397, 399, 425, 442, 452, 453, 459, 461, 462, 463, 464, 465, 466, 467, 476, 479, 481], "mutat": [5, 22, 62, 84, 98, 157, 164, 178, 193, 222, 223, 224, 247, 255, 280, 327, 341, 383, 387, 397, 439, 461, 463, 474], "variant": [5, 22, 30, 40, 46, 51, 56, 62, 72, 79, 83, 92, 94, 100, 103, 106, 117, 123, 127, 131, 155, 157, 164, 174, 180, 181, 183, 188, 200, 222, 223, 242, 245, 258, 279, 280, 288, 290, 291, 293, 300, 329, 334, 337, 338, 355, 385, 386, 387, 388, 392, 395, 413, 425, 429, 443, 447, 464, 465, 466, 467, 470, 471, 474, 477, 478, 479], "etc": [5, 33, 63, 78, 80, 86, 93, 94, 99, 100, 104, 106, 107, 117, 120, 127, 130, 138, 143, 148, 152, 165, 172, 182, 203, 208, 222, 237, 240, 241, 244, 249, 252, 255, 256, 263, 264, 266, 269, 273, 278, 280, 281, 289, 290, 293, 300, 304, 305, 307, 308, 316, 326, 331, 334, 337, 338, 340, 355, 362, 363, 366, 372, 381, 383, 385, 391, 404, 407, 419, 425, 428, 433, 434, 437, 438, 439, 444, 446, 447, 448, 450, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479], "py_ssize_t_clean": [5, 34, 58, 71, 72, 75, 464, 469, 478], "befor": [5, 7, 10, 13, 17, 20, 22, 23, 24, 27, 28, 30, 31, 33, 34, 37, 41, 44, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 84, 86, 87, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 104, 106, 107, 110, 112, 114, 117, 118, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 148, 150, 152, 154, 155, 156, 157, 163, 164, 166, 167, 172, 173, 174, 180, 181, 183, 187, 188, 190, 192, 193, 198, 200, 202, 208, 210, 215, 220, 222, 223, 224, 228, 229, 231, 239, 240, 242, 244, 245, 247, 252, 255, 256, 258, 263, 264, 265, 266, 267, 268, 273, 275, 280, 283, 285, 286, 289, 290, 292, 293, 294, 296, 297, 302, 304, 305, 306, 310, 311, 315, 316, 317, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 355, 356, 357, 359, 361, 362, 363, 372, 373, 379, 380, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 398, 399, 402, 404, 407, 408, 409, 410, 411, 412, 413, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 437, 438, 439, 440, 443, 445, 446, 447, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "On": [5, 7, 8, 9, 11, 12, 13, 22, 23, 24, 25, 32, 33, 34, 38, 39, 40, 41, 44, 47, 48, 50, 53, 56, 58, 59, 60, 61, 62, 63, 65, 67, 72, 76, 77, 80, 82, 84, 85, 86, 92, 93, 94, 96, 100, 103, 104, 106, 108, 112, 123, 128, 129, 130, 133, 134, 155, 163, 164, 171, 172, 173, 174, 178, 180, 183, 188, 193, 198, 200, 210, 211, 212, 220, 222, 226, 233, 241, 244, 254, 255, 263, 266, 272, 275, 279, 280, 285, 290, 291, 292, 293, 296, 300, 302, 303, 306, 307, 315, 317, 320, 323, 325, 327, 329, 330, 331, 334, 335, 338, 339, 345, 349, 351, 357, 359, 363, 372, 373, 383, 386, 392, 395, 396, 402, 404, 418, 419, 422, 431, 435, 436, 437, 441, 445, 446, 447, 450, 452, 453, 455, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "older": [5, 32, 56, 60, 62, 67, 72, 74, 79, 91, 100, 102, 116, 117, 128, 161, 174, 183, 187, 199, 224, 227, 232, 244, 248, 249, 265, 285, 290, 292, 294, 296, 311, 315, 325, 337, 338, 349, 351, 359, 366, 374, 383, 392, 412, 419, 427, 429, 441, 456, 459, 462, 465, 466, 470, 472, 473, 474, 475, 476, 477, 478, 479], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 92, 93, 96, 97, 98, 99, 100, 102, 103, 109, 110, 111, 117, 118, 119, 123, 124, 136, 137, 152, 157, 163, 164, 167, 173, 178, 180, 181, 183, 187, 190, 208, 210, 218, 220, 222, 223, 233, 237, 245, 251, 252, 255, 256, 259, 264, 272, 278, 281, 286, 288, 289, 290, 292, 296, 301, 303, 313, 315, 316, 323, 325, 334, 337, 340, 342, 344, 348, 349, 350, 355, 363, 364, 375, 376, 379, 381, 382, 383, 385, 386, 395, 399, 402, 404, 407, 408, 409, 410, 416, 424, 425, 426, 427, 437, 438, 440, 443, 446, 447, 448, 449, 452, 453, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "exist": [5, 9, 22, 23, 24, 25, 26, 30, 32, 33, 34, 38, 41, 47, 54, 56, 57, 58, 61, 62, 63, 65, 66, 67, 71, 72, 73, 75, 77, 78, 79, 83, 84, 86, 92, 93, 94, 97, 99, 100, 102, 103, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 123, 125, 127, 133, 136, 141, 144, 146, 148, 152, 155, 157, 158, 160, 164, 166, 168, 172, 173, 178, 180, 181, 184, 186, 188, 190, 191, 193, 197, 202, 203, 205, 207, 208, 209, 210, 213, 215, 222, 223, 227, 229, 231, 232, 233, 240, 241, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 258, 264, 265, 266, 267, 268, 269, 271, 273, 275, 278, 280, 281, 284, 285, 289, 290, 291, 292, 293, 294, 296, 299, 305, 310, 315, 316, 317, 321, 327, 329, 330, 331, 334, 337, 338, 339, 340, 341, 342, 344, 345, 349, 351, 352, 355, 357, 359, 363, 366, 369, 372, 373, 376, 381, 383, 384, 385, 386, 391, 392, 394, 396, 397, 399, 400, 402, 404, 407, 410, 416, 418, 419, 420, 422, 424, 425, 426, 427, 429, 430, 432, 433, 437, 439, 441, 443, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "store": [5, 7, 10, 11, 12, 13, 18, 25, 27, 28, 32, 33, 40, 41, 48, 55, 57, 60, 62, 63, 67, 72, 74, 75, 77, 78, 83, 86, 87, 88, 92, 94, 98, 99, 100, 103, 105, 106, 107, 110, 114, 117, 118, 119, 130, 131, 138, 151, 155, 157, 164, 167, 170, 172, 173, 174, 178, 180, 181, 183, 188, 190, 193, 194, 197, 198, 200, 202, 205, 220, 228, 233, 240, 242, 244, 245, 247, 250, 252, 255, 258, 264, 267, 268, 269, 273, 275, 280, 281, 285, 290, 295, 296, 297, 307, 311, 323, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 341, 344, 346, 349, 352, 355, 357, 359, 362, 372, 373, 377, 378, 379, 381, 382, 383, 385, 386, 387, 392, 399, 402, 404, 407, 410, 416, 418, 419, 421, 422, 424, 425, 427, 428, 429, 432, 433, 437, 438, 439, 440, 441, 443, 445, 447, 448, 449, 452, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "point": [5, 7, 10, 16, 17, 18, 22, 23, 30, 32, 33, 34, 37, 38, 40, 41, 42, 44, 46, 51, 54, 57, 59, 62, 63, 65, 67, 72, 76, 78, 80, 83, 84, 86, 91, 92, 94, 96, 98, 99, 100, 103, 104, 106, 108, 111, 112, 113, 118, 123, 130, 132, 134, 135, 136, 138, 141, 144, 150, 151, 155, 157, 159, 160, 164, 166, 167, 173, 174, 178, 180, 186, 187, 190, 193, 197, 199, 200, 202, 203, 206, 210, 218, 222, 229, 232, 233, 236, 244, 247, 251, 258, 259, 263, 264, 265, 266, 268, 271, 272, 275, 277, 278, 280, 287, 289, 290, 291, 293, 294, 296, 299, 300, 305, 315, 316, 319, 325, 328, 329, 330, 334, 337, 338, 340, 341, 342, 343, 344, 349, 351, 352, 355, 357, 359, 362, 363, 366, 369, 373, 375, 378, 381, 383, 385, 386, 387, 392, 396, 400, 405, 406, 408, 409, 410, 411, 418, 420, 421, 422, 424, 425, 426, 427, 429, 433, 438, 439, 440, 442, 443, 446, 448, 453, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "valueerror": [5, 9, 18, 23, 38, 40, 57, 63, 84, 92, 93, 97, 99, 107, 111, 112, 117, 118, 119, 123, 131, 135, 140, 141, 144, 147, 148, 154, 155, 156, 157, 160, 163, 164, 170, 172, 173, 178, 180, 183, 190, 193, 194, 196, 200, 202, 205, 206, 207, 208, 210, 220, 222, 224, 229, 240, 245, 247, 252, 255, 256, 258, 259, 264, 265, 271, 272, 275, 280, 281, 285, 289, 290, 291, 293, 299, 302, 311, 313, 315, 319, 322, 326, 327, 329, 330, 332, 334, 337, 338, 340, 341, 342, 345, 348, 349, 350, 362, 363, 376, 384, 385, 386, 391, 392, 396, 405, 407, 419, 422, 424, 427, 438, 439, 440, 443, 447, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "utf": [5, 16, 22, 23, 26, 30, 32, 33, 39, 44, 48, 58, 67, 86, 99, 100, 106, 115, 117, 119, 142, 148, 164, 172, 185, 187, 193, 194, 202, 203, 205, 206, 215, 220, 222, 232, 245, 247, 248, 249, 255, 259, 262, 263, 281, 283, 285, 294, 295, 296, 302, 304, 311, 327, 334, 335, 338, 341, 349, 355, 375, 391, 392, 395, 396, 404, 408, 410, 416, 418, 419, 425, 429, 432, 438, 443, 445, 452, 453, 455, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479], "convers": [5, 9, 10, 31, 32, 33, 34, 62, 63, 64, 67, 71, 79, 91, 92, 96, 104, 115, 117, 119, 130, 140, 143, 155, 164, 172, 180, 183, 192, 214, 222, 251, 253, 255, 259, 263, 268, 273, 274, 286, 287, 289, 290, 296, 315, 334, 338, 342, 344, 345, 349, 355, 375, 382, 386, 391, 394, 423, 424, 428, 430, 432, 447, 452, 458, 464, 465, 466, 467, 468, 470, 472, 474, 475, 477, 478, 481], "fail": [5, 7, 9, 11, 18, 23, 24, 30, 32, 34, 40, 41, 44, 46, 55, 63, 67, 71, 72, 75, 77, 83, 84, 85, 86, 87, 88, 93, 100, 102, 103, 107, 110, 117, 119, 133, 135, 136, 148, 150, 151, 163, 166, 173, 180, 185, 187, 190, 206, 208, 210, 212, 222, 241, 242, 244, 246, 247, 252, 254, 255, 258, 259, 263, 265, 267, 268, 269, 275, 280, 289, 290, 291, 292, 293, 294, 299, 300, 304, 316, 319, 325, 327, 329, 330, 331, 332, 333, 334, 337, 338, 341, 342, 345, 349, 355, 357, 359, 362, 366, 379, 383, 385, 386, 387, 392, 395, 402, 405, 410, 413, 416, 419, 422, 424, 425, 426, 428, 429, 433, 438, 440, 443, 447, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478], "unicodeerror": [5, 23, 86, 155, 180, 199, 210, 290, 341, 447, 462, 467], "accept": [5, 15, 18, 23, 28, 30, 32, 56, 57, 60, 63, 65, 66, 67, 72, 74, 75, 77, 78, 84, 86, 88, 91, 94, 97, 100, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 119, 123, 126, 127, 128, 130, 134, 135, 136, 138, 140, 143, 146, 147, 148, 151, 152, 155, 157, 160, 164, 166, 170, 173, 174, 175, 178, 180, 181, 183, 187, 188, 190, 198, 202, 203, 205, 206, 210, 212, 218, 220, 222, 223, 225, 231, 232, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 275, 279, 280, 286, 288, 289, 290, 291, 292, 293, 296, 311, 314, 315, 316, 321, 325, 326, 327, 329, 330, 332, 335, 337, 338, 341, 345, 346, 349, 355, 357, 359, 361, 363, 372, 373, 375, 377, 379, 382, 383, 385, 391, 392, 394, 395, 396, 398, 400, 402, 404, 408, 410, 413, 416, 418, 419, 421, 423, 424, 425, 427, 429, 432, 437, 438, 440, 449, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "filesystem": [5, 23, 32, 33, 58, 63, 65, 67, 79, 85, 86, 106, 117, 123, 140, 164, 210, 212, 213, 216, 247, 251, 263, 268, 280, 290, 291, 294, 299, 321, 329, 338, 349, 352, 355, 357, 359, 385, 386, 396, 397, 418, 419, 447, 452, 458, 460, 466, 471, 474, 477], "path": [5, 23, 24, 30, 31, 32, 34, 38, 58, 63, 67, 71, 72, 75, 79, 83, 84, 85, 86, 87, 92, 94, 96, 98, 99, 100, 102, 106, 108, 111, 116, 117, 123, 133, 136, 139, 141, 145, 146, 147, 148, 160, 164, 166, 173, 181, 187, 190, 197, 207, 210, 212, 216, 217, 220, 222, 227, 228, 231, 239, 240, 241, 242, 244, 246, 248, 249, 250, 251, 252, 255, 258, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 280, 283, 285, 289, 290, 294, 299, 305, 308, 309, 310, 312, 317, 321, 324, 327, 328, 329, 331, 332, 334, 337, 338, 339, 345, 349, 353, 355, 357, 359, 363, 366, 381, 383, 385, 386, 391, 392, 396, 397, 400, 402, 404, 410, 413, 416, 417, 418, 420, 422, 425, 430, 433, 435, 437, 442, 445, 449, 450, 452, 453, 455, 456, 459, 461, 462, 463, 464, 465, 466, 468, 470, 472, 473, 474, 475, 477, 479], "prefer": [5, 10, 22, 23, 28, 30, 33, 34, 42, 48, 56, 60, 62, 67, 77, 84, 93, 94, 100, 107, 108, 111, 117, 123, 126, 127, 135, 136, 158, 161, 164, 172, 174, 180, 183, 199, 202, 210, 222, 226, 247, 252, 255, 258, 263, 268, 272, 280, 288, 289, 290, 296, 310, 323, 329, 337, 338, 340, 341, 345, 349, 352, 359, 361, 362, 363, 365, 373, 381, 382, 383, 392, 395, 400, 402, 413, 418, 423, 429, 439, 448, 449, 453, 456, 458, 464, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478], "o": [5, 6, 8, 9, 10, 17, 20, 22, 23, 24, 27, 28, 32, 33, 35, 37, 39, 41, 43, 46, 47, 48, 51, 53, 56, 57, 58, 59, 60, 62, 63, 65, 67, 72, 76, 78, 84, 85, 86, 87, 88, 91, 92, 94, 96, 98, 99, 100, 101, 103, 106, 109, 112, 115, 117, 118, 121, 122, 123, 128, 129, 130, 134, 135, 136, 137, 139, 140, 144, 148, 157, 160, 161, 163, 164, 165, 166, 167, 173, 174, 180, 181, 184, 185, 186, 187, 188, 190, 197, 198, 205, 207, 209, 211, 212, 213, 215, 216, 217, 222, 223, 225, 226, 227, 228, 231, 232, 233, 240, 242, 244, 249, 251, 254, 257, 259, 262, 263, 264, 266, 268, 269, 275, 280, 283, 288, 289, 292, 296, 297, 298, 299, 300, 303, 305, 306, 308, 311, 315, 316, 317, 319, 329, 330, 331, 332, 334, 337, 338, 339, 341, 342, 349, 351, 352, 355, 356, 357, 358, 362, 363, 364, 366, 370, 377, 379, 383, 385, 386, 391, 392, 396, 397, 399, 400, 401, 404, 418, 419, 422, 423, 432, 433, 435, 436, 437, 440, 443, 446, 447, 448, 449, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 481], "pyunicode_fsconvert": [5, 56, 63, 476], "chang": [5, 6, 9, 10, 11, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 38, 39, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 85, 86, 87, 88, 91, 92, 93, 94, 96, 100, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 178, 180, 181, 183, 185, 187, 188, 190, 191, 193, 194, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 283, 285, 288, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 369, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 443, 446, 447, 448, 450, 452, 453, 456, 458, 481], "5": [5, 9, 14, 19, 23, 32, 33, 34, 38, 41, 44, 46, 58, 62, 67, 72, 77, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 110, 117, 118, 119, 123, 126, 128, 129, 132, 133, 136, 140, 143, 144, 146, 147, 148, 149, 151, 154, 155, 157, 158, 159, 160, 163, 164, 166, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 193, 202, 203, 205, 208, 210, 211, 212, 218, 220, 222, 223, 228, 231, 232, 233, 235, 237, 238, 239, 241, 245, 246, 247, 248, 249, 252, 255, 256, 258, 259, 262, 263, 264, 266, 267, 268, 272, 275, 280, 281, 285, 286, 288, 290, 291, 292, 293, 294, 296, 300, 302, 305, 307, 315, 316, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 355, 357, 358, 359, 362, 363, 364, 365, 366, 373, 374, 375, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 395, 396, 404, 406, 410, 411, 413, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 429, 432, 435, 437, 438, 439, 441, 443, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 477, 479, 481], "previous": [5, 9, 13, 22, 26, 27, 32, 39, 41, 46, 57, 58, 60, 62, 63, 84, 110, 117, 123, 129, 136, 137, 155, 163, 164, 166, 174, 180, 188, 204, 210, 213, 218, 222, 223, 229, 239, 242, 244, 247, 252, 262, 264, 266, 268, 273, 275, 279, 281, 288, 289, 290, 294, 296, 316, 326, 327, 330, 334, 337, 338, 344, 352, 357, 362, 373, 379, 382, 383, 387, 391, 392, 397, 398, 402, 419, 420, 423, 424, 425, 426, 429, 433, 451, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "typeerror": [5, 9, 22, 23, 38, 40, 46, 47, 48, 53, 54, 57, 58, 60, 62, 63, 66, 72, 74, 75, 84, 88, 92, 93, 94, 97, 106, 107, 117, 118, 119, 126, 140, 164, 165, 166, 169, 173, 178, 180, 181, 183, 190, 193, 194, 195, 196, 202, 203, 208, 210, 222, 230, 247, 252, 255, 256, 259, 265, 271, 272, 275, 288, 289, 290, 293, 301, 315, 341, 349, 363, 383, 385, 386, 391, 395, 399, 408, 410, 416, 419, 424, 425, 427, 433, 438, 439, 440, 446, 447, 448, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "wa": [5, 7, 9, 10, 11, 13, 17, 18, 22, 23, 26, 27, 30, 32, 34, 41, 44, 48, 53, 55, 57, 58, 59, 60, 62, 63, 65, 72, 74, 75, 76, 77, 82, 84, 86, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 146, 148, 149, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 172, 174, 178, 180, 183, 185, 187, 188, 190, 193, 196, 198, 199, 202, 203, 204, 207, 208, 210, 211, 215, 220, 222, 223, 224, 225, 227, 229, 231, 232, 233, 239, 240, 241, 242, 244, 245, 247, 248, 249, 252, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 279, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 294, 296, 299, 303, 304, 305, 308, 310, 311, 313, 315, 316, 317, 318, 319, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 364, 366, 369, 373, 374, 375, 377, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 408, 410, 411, 412, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 429, 431, 432, 433, 437, 438, 439, 440, 443, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "encount": [5, 9, 14, 34, 54, 62, 77, 86, 103, 105, 106, 107, 117, 148, 150, 157, 172, 183, 190, 196, 202, 205, 209, 210, 222, 225, 237, 241, 252, 259, 264, 265, 269, 283, 289, 291, 293, 294, 296, 308, 311, 316, 328, 329, 335, 337, 338, 340, 341, 345, 356, 373, 381, 383, 385, 397, 410, 412, 429, 437, 438, 439, 440, 441, 443, 447, 459, 462, 463, 464, 465, 469, 471, 472, 473, 478], "second": [5, 20, 22, 23, 32, 34, 36, 57, 63, 66, 72, 74, 75, 76, 77, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 109, 112, 114, 121, 122, 123, 126, 131, 132, 133, 135, 136, 138, 148, 155, 163, 164, 166, 168, 172, 173, 174, 180, 183, 187, 188, 190, 192, 197, 200, 205, 206, 208, 210, 211, 212, 215, 218, 220, 222, 225, 227, 229, 232, 233, 239, 240, 244, 245, 247, 252, 255, 264, 265, 266, 268, 269, 272, 273, 279, 280, 281, 288, 289, 290, 291, 292, 294, 296, 298, 299, 302, 304, 305, 313, 315, 316, 319, 322, 325, 326, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 352, 355, 356, 358, 359, 362, 363, 364, 373, 375, 381, 383, 385, 386, 391, 392, 393, 395, 404, 410, 416, 419, 425, 427, 428, 429, 432, 433, 438, 439, 441, 443, 445, 446, 447, 448, 449, 453, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 473, 475, 476, 477, 478], "z": [5, 63, 77, 83, 85, 99, 100, 103, 117, 119, 146, 151, 157, 164, 173, 174, 178, 180, 183, 217, 222, 265, 280, 288, 298, 316, 332, 338, 340, 341, 342, 344, 363, 383, 399, 424, 425, 427, 428, 431, 432, 437, 439, 445, 448, 452, 461, 463, 465, 466, 469, 470, 471, 472, 477], "buf": [5, 7, 41, 123, 212, 232, 281, 338, 341, 355, 464], "member": [5, 7, 26, 30, 32, 33, 34, 44, 49, 55, 58, 59, 60, 62, 67, 72, 74, 75, 77, 86, 87, 109, 146, 147, 160, 164, 173, 174, 178, 181, 188, 208, 210, 230, 231, 241, 242, 245, 258, 259, 265, 267, 290, 291, 296, 307, 308, 310, 312, 315, 329, 334, 336, 337, 338, 339, 340, 341, 344, 349, 355, 359, 363, 375, 382, 383, 385, 386, 419, 423, 424, 425, 427, 437, 439, 448, 462, 463, 464, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "doesn": [5, 7, 22, 23, 32, 33, 34, 42, 47, 55, 62, 67, 71, 72, 75, 76, 78, 80, 84, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 117, 118, 119, 129, 130, 132, 141, 147, 148, 155, 166, 170, 172, 173, 180, 181, 183, 190, 193, 195, 197, 202, 210, 211, 222, 223, 233, 240, 247, 248, 252, 255, 256, 259, 263, 264, 265, 266, 286, 289, 290, 291, 293, 294, 296, 299, 302, 311, 313, 316, 319, 320, 325, 327, 329, 330, 331, 332, 334, 336, 337, 338, 340, 341, 342, 345, 349, 355, 359, 362, 364, 366, 381, 382, 384, 385, 386, 387, 393, 397, 402, 404, 406, 416, 420, 421, 423, 425, 427, 429, 438, 439, 443, 445, 446, 447, 450, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "recommend": [5, 10, 32, 34, 41, 44, 47, 56, 62, 63, 67, 71, 72, 74, 75, 79, 82, 84, 85, 86, 87, 88, 90, 93, 94, 99, 102, 106, 108, 117, 119, 122, 123, 126, 129, 130, 132, 133, 136, 140, 155, 163, 164, 170, 173, 178, 180, 183, 190, 193, 210, 222, 227, 232, 234, 239, 242, 244, 245, 247, 252, 255, 259, 264, 272, 285, 290, 291, 292, 293, 296, 303, 305, 311, 316, 321, 328, 329, 334, 335, 337, 338, 345, 349, 355, 357, 363, 366, 376, 381, 383, 385, 391, 392, 395, 396, 404, 406, 407, 408, 412, 413, 419, 421, 422, 425, 429, 432, 438, 443, 447, 453, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "binari": [5, 7, 31, 33, 40, 41, 46, 62, 65, 67, 73, 74, 77, 79, 80, 85, 86, 93, 96, 100, 106, 112, 115, 118, 119, 123, 138, 140, 146, 165, 173, 179, 183, 188, 191, 193, 194, 195, 197, 198, 200, 202, 204, 205, 208, 212, 218, 220, 222, 227, 231, 232, 233, 234, 242, 247, 249, 250, 251, 252, 253, 256, 258, 259, 263, 265, 266, 267, 268, 271, 272, 278, 279, 280, 282, 285, 289, 290, 293, 296, 299, 300, 301, 314, 334, 342, 345, 349, 352, 355, 357, 360, 366, 376, 383, 392, 394, 396, 399, 402, 410, 413, 417, 418, 419, 422, 423, 425, 430, 433, 436, 441, 442, 443, 453, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pybytesobject": [5, 9, 13, 63, 465, 470, 471], "attempt": [5, 11, 23, 25, 30, 32, 34, 46, 58, 60, 62, 66, 84, 85, 86, 87, 91, 93, 95, 96, 97, 100, 103, 106, 107, 108, 113, 117, 119, 123, 130, 133, 137, 146, 152, 157, 163, 164, 165, 166, 170, 172, 174, 181, 183, 187, 188, 190, 191, 193, 196, 200, 202, 203, 204, 206, 209, 210, 220, 222, 223, 233, 239, 240, 244, 245, 247, 252, 255, 262, 263, 265, 266, 267, 268, 275, 279, 280, 281, 290, 292, 296, 299, 302, 304, 308, 310, 311, 316, 317, 319, 322, 325, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 344, 349, 355, 356, 357, 359, 361, 362, 363, 383, 385, 386, 391, 392, 395, 396, 398, 404, 407, 410, 412, 413, 414, 419, 420, 421, 424, 425, 427, 429, 430, 433, 437, 440, 442, 443, 446, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 479], "declar": [5, 19, 32, 34, 56, 57, 62, 67, 72, 74, 75, 77, 83, 84, 85, 86, 94, 100, 106, 113, 125, 136, 164, 166, 167, 169, 173, 222, 223, 237, 247, 252, 255, 265, 289, 296, 311, 328, 335, 337, 341, 348, 383, 385, 399, 400, 406, 407, 408, 410, 412, 413, 422, 424, 425, 426, 427, 428, 433, 436, 437, 445, 462, 464, 465, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pybytearrayobject": [5, 8], "u": [5, 7, 9, 14, 32, 33, 38, 48, 58, 63, 75, 77, 79, 84, 86, 88, 93, 94, 100, 102, 103, 106, 118, 138, 155, 157, 158, 173, 175, 180, 181, 183, 187, 192, 193, 199, 203, 206, 215, 220, 222, 229, 259, 263, 281, 290, 293, 294, 296, 315, 316, 329, 333, 338, 341, 346, 349, 359, 363, 364, 383, 384, 386, 387, 391, 392, 395, 404, 410, 419, 423, 425, 427, 428, 432, 439, 452, 457, 458, 459, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "w": [5, 7, 23, 33, 47, 72, 83, 84, 86, 93, 99, 100, 103, 106, 109, 114, 117, 122, 137, 146, 147, 151, 152, 157, 164, 166, 172, 173, 178, 180, 181, 183, 185, 186, 187, 197, 222, 227, 231, 232, 255, 265, 266, 267, 278, 280, 288, 290, 292, 293, 294, 298, 299, 310, 316, 334, 337, 341, 345, 346, 355, 357, 359, 362, 363, 366, 373, 376, 383, 385, 386, 391, 396, 397, 410, 416, 418, 419, 432, 438, 443, 449, 452, 463, 464, 465, 466, 468, 469, 472, 473, 477, 478, 479], "interfac": [5, 7, 28, 30, 31, 32, 34, 42, 47, 50, 58, 62, 63, 65, 67, 71, 72, 74, 79, 81, 84, 86, 91, 92, 94, 99, 100, 102, 103, 106, 107, 111, 113, 115, 116, 117, 118, 123, 129, 130, 140, 146, 147, 150, 152, 155, 157, 158, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 177, 182, 184, 186, 189, 190, 191, 193, 194, 200, 201, 202, 203, 204, 209, 211, 212, 215, 216, 219, 222, 225, 227, 230, 232, 239, 240, 242, 244, 247, 248, 249, 250, 251, 253, 254, 257, 258, 261, 263, 264, 267, 268, 270, 273, 274, 278, 280, 282, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 305, 307, 309, 311, 312, 321, 322, 325, 327, 330, 332, 335, 336, 338, 341, 345, 346, 347, 348, 349, 353, 357, 358, 360, 362, 363, 367, 372, 375, 376, 378, 380, 381, 388, 391, 394, 395, 397, 398, 399, 400, 401, 404, 406, 407, 408, 410, 411, 412, 414, 423, 425, 429, 430, 436, 442, 447, 450, 455, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481], "work": [5, 15, 18, 23, 25, 32, 33, 34, 35, 36, 40, 41, 44, 54, 56, 58, 62, 63, 67, 71, 72, 75, 76, 77, 78, 82, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 144, 147, 148, 152, 155, 157, 158, 160, 163, 164, 166, 167, 170, 173, 174, 178, 180, 181, 184, 187, 188, 189, 194, 202, 204, 205, 207, 208, 212, 216, 220, 222, 223, 225, 226, 227, 229, 237, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 254, 257, 258, 261, 263, 264, 265, 266, 270, 272, 275, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 313, 315, 316, 321, 325, 326, 327, 329, 332, 334, 335, 336, 338, 340, 341, 342, 344, 345, 349, 355, 356, 357, 358, 359, 361, 362, 366, 372, 373, 378, 380, 381, 385, 386, 387, 389, 391, 392, 397, 399, 400, 402, 404, 407, 408, 410, 411, 416, 417, 418, 422, 423, 424, 425, 427, 429, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "name": [5, 10, 11, 13, 14, 17, 19, 20, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 41, 44, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 85, 86, 88, 91, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 119, 123, 125, 130, 131, 133, 136, 137, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 197, 199, 200, 202, 205, 206, 209, 210, 211, 212, 213, 215, 217, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 280, 281, 282, 283, 284, 285, 288, 289, 291, 292, 293, 294, 296, 297, 299, 300, 302, 304, 305, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 354, 356, 357, 358, 359, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "known": [5, 9, 23, 24, 32, 34, 59, 60, 62, 63, 67, 74, 79, 84, 85, 86, 88, 93, 94, 96, 103, 104, 107, 117, 119, 131, 148, 151, 155, 164, 166, 173, 180, 183, 193, 194, 206, 232, 233, 239, 244, 247, 248, 250, 263, 264, 265, 272, 273, 281, 288, 290, 296, 316, 317, 324, 325, 334, 337, 338, 339, 340, 341, 345, 346, 349, 351, 352, 363, 366, 372, 373, 375, 381, 383, 384, 386, 387, 395, 396, 397, 406, 407, 412, 413, 419, 421, 422, 423, 427, 431, 432, 433, 437, 438, 440, 443, 445, 447, 453, 455, 462, 464, 466, 467, 468, 469, 470, 472, 474, 476, 477, 478], "text": [5, 53, 58, 63, 67, 71, 74, 77, 79, 83, 84, 86, 88, 94, 99, 100, 103, 104, 106, 107, 115, 117, 119, 123, 142, 143, 146, 147, 148, 149, 152, 154, 156, 164, 165, 170, 172, 173, 175, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 215, 216, 220, 222, 223, 231, 233, 235, 236, 237, 239, 242, 245, 247, 249, 250, 251, 252, 259, 263, 264, 265, 266, 267, 268, 270, 278, 279, 283, 285, 289, 290, 293, 295, 296, 302, 304, 310, 311, 314, 315, 317, 320, 323, 328, 330, 338, 342, 343, 345, 349, 355, 357, 364, 365, 366, 369, 372, 373, 374, 378, 381, 383, 384, 385, 391, 392, 395, 396, 397, 400, 404, 406, 408, 409, 410, 412, 413, 419, 423, 425, 426, 427, 429, 431, 432, 436, 442, 443, 447, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "copi": [5, 7, 9, 17, 25, 32, 33, 41, 42, 51, 54, 57, 62, 63, 67, 72, 76, 77, 88, 94, 98, 100, 108, 109, 117, 119, 123, 130, 136, 148, 155, 157, 163, 164, 167, 169, 173, 174, 178, 179, 180, 183, 188, 190, 197, 198, 200, 205, 210, 212, 216, 222, 223, 224, 227, 232, 234, 241, 244, 245, 251, 252, 255, 258, 264, 265, 266, 268, 273, 275, 280, 281, 289, 290, 294, 296, 298, 299, 306, 316, 327, 337, 341, 342, 344, 345, 349, 352, 355, 359, 369, 379, 381, 382, 385, 386, 387, 392, 396, 397, 404, 412, 413, 418, 421, 423, 425, 437, 438, 439, 446, 447, 450, 458, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "adjust": [5, 12, 44, 53, 55, 56, 63, 108, 117, 122, 157, 174, 180, 183, 198, 205, 290, 304, 321, 331, 337, 338, 341, 363, 366, 372, 373, 410, 459, 466, 470, 474, 476, 477, 478], "respons": [5, 18, 23, 32, 33, 34, 44, 56, 60, 62, 63, 67, 72, 75, 77, 78, 86, 92, 93, 94, 99, 100, 104, 106, 107, 108, 123, 130, 132, 134, 152, 166, 172, 174, 176, 180, 188, 193, 208, 220, 239, 240, 242, 245, 247, 251, 253, 263, 264, 285, 302, 311, 322, 332, 334, 335, 337, 338, 344, 345, 348, 355, 357, 383, 385, 387, 390, 398, 409, 416, 417, 418, 422, 423, 425, 427, 429, 438, 448, 449, 458, 459, 462, 465, 466, 470, 472, 473, 474, 475, 477, 478], "free": [5, 7, 11, 13, 18, 32, 33, 34, 41, 51, 58, 62, 63, 72, 74, 75, 77, 79, 83, 84, 86, 88, 94, 102, 104, 119, 125, 131, 137, 155, 163, 173, 187, 188, 222, 224, 226, 227, 245, 252, 280, 281, 289, 290, 296, 300, 313, 329, 341, 348, 349, 359, 379, 382, 385, 396, 399, 407, 416, 417, 422, 423, 424, 425, 426, 427, 429, 433, 442, 443, 458, 460, 461, 462, 464, 465, 467, 472, 473, 474, 479], "through": [5, 7, 9, 11, 14, 15, 20, 22, 23, 24, 28, 32, 41, 44, 50, 54, 58, 59, 62, 63, 66, 67, 72, 75, 76, 77, 79, 84, 88, 90, 92, 94, 97, 98, 99, 100, 102, 103, 106, 107, 108, 113, 117, 118, 119, 123, 141, 147, 148, 155, 163, 164, 172, 173, 174, 175, 178, 180, 182, 183, 187, 188, 190, 191, 193, 194, 195, 199, 201, 202, 203, 205, 207, 213, 218, 222, 223, 227, 239, 241, 242, 244, 247, 248, 254, 264, 265, 266, 268, 271, 272, 275, 278, 280, 281, 289, 290, 291, 294, 298, 299, 303, 309, 311, 316, 332, 334, 337, 338, 339, 340, 341, 342, 345, 349, 359, 361, 362, 364, 366, 372, 373, 382, 383, 385, 386, 387, 391, 392, 395, 399, 403, 407, 408, 410, 412, 414, 416, 419, 421, 424, 425, 426, 427, 429, 431, 432, 433, 436, 437, 438, 439, 442, 447, 448, 449, 451, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "recod": 5, "instead": [5, 7, 10, 12, 13, 16, 17, 18, 22, 23, 24, 28, 30, 32, 33, 39, 41, 44, 47, 48, 51, 57, 58, 60, 62, 65, 67, 71, 72, 73, 74, 75, 76, 78, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 106, 107, 111, 117, 118, 119, 120, 122, 123, 125, 126, 130, 132, 133, 135, 136, 140, 143, 144, 146, 148, 149, 154, 155, 156, 157, 158, 163, 164, 166, 167, 172, 173, 174, 178, 180, 181, 183, 187, 188, 190, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 222, 223, 225, 227, 229, 231, 233, 234, 239, 240, 241, 242, 244, 245, 247, 250, 252, 255, 258, 259, 263, 264, 266, 267, 268, 271, 272, 280, 281, 285, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 303, 304, 305, 308, 309, 310, 311, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 349, 351, 352, 355, 356, 357, 359, 362, 364, 366, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 394, 396, 397, 399, 400, 402, 404, 406, 407, 408, 409, 410, 412, 420, 422, 424, 425, 426, 427, 428, 429, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "assum": [5, 7, 32, 33, 34, 40, 44, 53, 55, 58, 59, 62, 71, 72, 73, 75, 77, 78, 83, 84, 86, 87, 88, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 113, 117, 123, 144, 147, 148, 150, 151, 155, 157, 158, 163, 164, 166, 172, 173, 180, 193, 196, 198, 199, 200, 206, 207, 220, 222, 227, 232, 233, 239, 240, 244, 245, 246, 249, 254, 255, 263, 264, 265, 280, 285, 289, 290, 293, 294, 299, 308, 310, 315, 331, 334, 337, 338, 340, 341, 342, 344, 345, 349, 355, 357, 361, 363, 369, 373, 383, 385, 387, 392, 396, 405, 413, 418, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 447, 458, 459, 460, 461, 464, 465, 467, 471, 473, 474, 475, 476, 477], "paramet": [5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 22, 23, 24, 27, 28, 31, 33, 34, 36, 43, 44, 48, 51, 55, 57, 60, 62, 63, 65, 66, 67, 73, 74, 77, 78, 83, 86, 92, 93, 94, 99, 103, 105, 106, 109, 112, 114, 115, 117, 118, 123, 126, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 146, 147, 148, 154, 155, 157, 160, 163, 164, 166, 167, 169, 170, 174, 180, 181, 183, 187, 188, 190, 193, 194, 195, 196, 198, 200, 202, 203, 205, 206, 210, 211, 212, 213, 214, 215, 217, 220, 222, 223, 224, 225, 227, 228, 231, 232, 233, 234, 237, 239, 240, 242, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 279, 280, 281, 285, 289, 291, 292, 293, 294, 297, 300, 302, 304, 308, 309, 311, 312, 314, 315, 316, 317, 319, 322, 325, 327, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 343, 345, 346, 348, 353, 355, 356, 357, 359, 362, 363, 364, 365, 369, 372, 377, 378, 379, 381, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 433, 442, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 479], "buffer_length": 5, "unlik": [5, 32, 34, 37, 40, 41, 44, 48, 54, 59, 63, 72, 75, 77, 83, 84, 92, 93, 94, 98, 99, 100, 105, 106, 113, 119, 123, 126, 131, 134, 135, 136, 144, 146, 160, 166, 172, 174, 180, 181, 183, 202, 222, 225, 228, 233, 240, 245, 255, 258, 259, 267, 268, 272, 280, 290, 291, 292, 293, 294, 296, 300, 302, 316, 321, 334, 338, 341, 342, 345, 350, 355, 357, 359, 363, 366, 379, 381, 382, 383, 385, 386, 399, 402, 404, 410, 422, 423, 425, 427, 429, 431, 432, 433, 437, 438, 439, 446, 448, 458, 460, 461, 462, 464, 465, 466, 469, 471, 472, 473, 474, 475, 476, 477, 479], "third": [5, 7, 10, 23, 24, 28, 30, 32, 34, 56, 57, 62, 67, 72, 74, 75, 77, 79, 82, 83, 84, 86, 88, 92, 94, 99, 100, 103, 106, 108, 109, 114, 123, 125, 129, 130, 135, 155, 164, 166, 173, 174, 178, 180, 181, 183, 222, 224, 225, 247, 248, 258, 264, 265, 290, 296, 299, 304, 316, 327, 329, 334, 337, 338, 340, 341, 349, 352, 366, 377, 383, 385, 387, 392, 396, 397, 399, 416, 423, 425, 429, 438, 442, 443, 446, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "referenc": [5, 7, 12, 13, 34, 59, 62, 66, 72, 74, 77, 84, 86, 99, 103, 111, 117, 136, 164, 176, 188, 222, 223, 244, 252, 280, 290, 293, 296, 316, 341, 348, 399, 407, 425, 437, 438, 439, 443, 447, 458, 460, 461, 462, 465, 466, 467, 473, 474], "output": [5, 9, 15, 18, 32, 33, 41, 58, 62, 63, 65, 67, 72, 74, 75, 77, 86, 91, 94, 96, 99, 101, 103, 104, 106, 109, 111, 114, 117, 122, 123, 127, 130, 134, 136, 138, 140, 141, 143, 145, 146, 147, 148, 149, 152, 154, 155, 157, 160, 164, 166, 172, 173, 174, 180, 184, 187, 188, 190, 192, 197, 198, 199, 201, 205, 206, 207, 209, 215, 216, 220, 222, 225, 231, 232, 233, 234, 237, 239, 241, 242, 243, 245, 252, 255, 258, 259, 264, 266, 267, 272, 276, 280, 285, 289, 290, 292, 296, 297, 298, 299, 300, 302, 304, 305, 306, 308, 310, 311, 314, 316, 318, 319, 322, 325, 328, 330, 331, 332, 334, 335, 337, 338, 341, 342, 344, 345, 346, 349, 352, 354, 355, 356, 358, 359, 361, 363, 364, 365, 375, 377, 378, 379, 381, 383, 385, 392, 394, 395, 396, 397, 398, 399, 404, 408, 410, 414, 418, 419, 421, 425, 432, 433, 435, 437, 439, 440, 441, 442, 446, 447, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "mode": [5, 24, 32, 33, 34, 40, 41, 58, 63, 65, 67, 72, 79, 83, 84, 85, 86, 91, 99, 100, 101, 102, 103, 106, 109, 114, 115, 117, 119, 127, 132, 139, 141, 146, 147, 148, 155, 160, 164, 171, 173, 174, 175, 181, 184, 186, 187, 190, 197, 204, 210, 211, 215, 220, 222, 225, 231, 235, 242, 244, 247, 248, 249, 250, 251, 255, 263, 264, 266, 267, 268, 272, 279, 285, 286, 287, 289, 292, 293, 294, 296, 298, 302, 303, 306, 308, 315, 316, 317, 319, 320, 324, 328, 329, 331, 332, 334, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 351, 355, 357, 359, 373, 375, 379, 380, 381, 383, 385, 394, 398, 400, 410, 412, 418, 419, 421, 422, 425, 433, 434, 441, 442, 443, 446, 447, 453, 455, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "oper": [5, 7, 16, 22, 23, 24, 28, 31, 32, 34, 36, 40, 41, 46, 48, 53, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 79, 82, 83, 85, 86, 91, 92, 93, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 116, 118, 119, 122, 123, 124, 126, 127, 130, 131, 133, 135, 136, 138, 139, 141, 142, 144, 148, 151, 157, 158, 163, 164, 165, 166, 170, 172, 173, 174, 179, 180, 181, 183, 185, 188, 191, 192, 193, 197, 198, 199, 202, 204, 205, 207, 208, 209, 210, 212, 213, 216, 217, 218, 220, 221, 222, 224, 227, 233, 234, 239, 242, 244, 247, 248, 251, 252, 253, 254, 255, 258, 263, 264, 266, 267, 268, 271, 272, 273, 280, 287, 291, 292, 296, 300, 303, 305, 306, 310, 311, 313, 315, 317, 319, 323, 325, 327, 328, 330, 332, 334, 337, 339, 340, 344, 345, 349, 350, 352, 355, 356, 357, 358, 359, 360, 362, 366, 370, 373, 375, 381, 382, 383, 387, 388, 391, 392, 396, 397, 399, 400, 401, 402, 404, 406, 407, 408, 410, 413, 416, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 452, 453, 458, 459, 460, 462, 463, 464, 465, 466, 471, 472, 476, 477, 478, 481], "usag": [5, 32, 33, 34, 44, 62, 63, 66, 67, 71, 72, 75, 77, 79, 83, 84, 86, 88, 94, 99, 100, 102, 103, 106, 109, 113, 115, 116, 132, 133, 136, 137, 140, 150, 166, 171, 172, 175, 179, 182, 184, 185, 188, 191, 210, 215, 222, 223, 224, 225, 227, 233, 238, 240, 242, 245, 247, 248, 251, 253, 255, 256, 261, 264, 266, 269, 273, 277, 280, 282, 289, 290, 294, 296, 302, 304, 312, 316, 329, 341, 342, 349, 352, 355, 357, 359, 364, 365, 366, 372, 379, 383, 385, 388, 392, 396, 397, 400, 404, 407, 408, 418, 421, 422, 423, 424, 425, 443, 446, 452, 453, 456, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 475, 476], "locat": [5, 7, 32, 33, 34, 47, 57, 63, 67, 71, 76, 77, 83, 84, 85, 86, 88, 91, 92, 93, 96, 99, 100, 103, 107, 109, 119, 138, 144, 155, 160, 164, 173, 174, 180, 188, 190, 207, 208, 210, 222, 224, 240, 244, 247, 248, 249, 250, 251, 255, 263, 265, 266, 270, 273, 277, 280, 283, 287, 290, 291, 294, 296, 297, 299, 308, 309, 310, 311, 316, 317, 329, 337, 338, 350, 351, 352, 357, 359, 363, 372, 381, 383, 385, 391, 392, 396, 397, 404, 406, 407, 410, 411, 412, 419, 422, 423, 424, 425, 428, 429, 433, 435, 445, 447, 450, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 471, 472, 474, 476, 478], "larg": [5, 7, 18, 34, 54, 57, 58, 62, 67, 71, 77, 79, 83, 86, 91, 92, 94, 97, 100, 103, 104, 106, 107, 119, 134, 155, 163, 173, 174, 180, 181, 183, 185, 187, 190, 209, 210, 219, 222, 228, 244, 245, 255, 256, 259, 272, 280, 285, 289, 290, 292, 293, 296, 315, 330, 340, 341, 342, 343, 344, 345, 349, 355, 379, 381, 385, 388, 399, 406, 407, 408, 410, 419, 422, 436, 438, 441, 443, 446, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 478], "enough": [5, 41, 44, 58, 62, 63, 77, 83, 84, 85, 91, 92, 97, 99, 100, 102, 104, 107, 155, 172, 173, 180, 187, 196, 198, 244, 247, 255, 258, 262, 267, 289, 290, 296, 305, 334, 336, 338, 341, 342, 345, 359, 361, 364, 366, 382, 386, 399, 439, 459, 460, 461, 462, 467, 473], "both": [5, 7, 15, 18, 22, 23, 24, 32, 34, 44, 48, 54, 57, 62, 63, 71, 72, 73, 74, 75, 76, 77, 83, 84, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 110, 111, 117, 119, 123, 130, 134, 136, 138, 140, 147, 148, 151, 155, 156, 157, 158, 163, 164, 166, 172, 173, 174, 178, 180, 183, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 202, 203, 204, 207, 210, 212, 213, 216, 217, 222, 223, 224, 227, 229, 230, 232, 234, 235, 240, 241, 242, 244, 247, 252, 254, 255, 256, 264, 265, 267, 272, 275, 278, 279, 280, 281, 284, 286, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 306, 315, 316, 317, 319, 321, 326, 327, 329, 330, 331, 332, 334, 337, 338, 340, 341, 342, 344, 345, 349, 350, 352, 358, 359, 361, 363, 364, 366, 373, 375, 376, 377, 379, 381, 383, 385, 386, 387, 391, 392, 397, 399, 402, 404, 408, 410, 414, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 441, 443, 446, 447, 448, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "trail": [5, 18, 32, 33, 38, 63, 77, 91, 94, 103, 140, 143, 154, 155, 156, 164, 174, 183, 187, 193, 202, 205, 218, 220, 222, 225, 236, 237, 244, 268, 281, 291, 311, 334, 338, 341, 342, 345, 353, 363, 366, 378, 386, 392, 404, 407, 421, 424, 425, 427, 428, 432, 433, 437, 439, 448, 449, 452, 459, 463, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478], "12": [5, 6, 10, 13, 20, 22, 23, 26, 27, 28, 30, 32, 33, 41, 44, 45, 48, 51, 55, 56, 57, 60, 62, 63, 65, 67, 70, 77, 79, 84, 88, 93, 94, 99, 100, 101, 103, 105, 106, 117, 119, 123, 129, 132, 133, 134, 136, 137, 140, 143, 147, 158, 163, 164, 166, 170, 172, 173, 180, 183, 188, 190, 206, 208, 212, 218, 220, 222, 223, 231, 232, 233, 238, 239, 242, 245, 247, 248, 249, 250, 252, 256, 258, 264, 265, 266, 272, 275, 280, 290, 291, 293, 294, 299, 301, 302, 315, 316, 318, 319, 321, 328, 329, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 348, 349, 350, 353, 355, 357, 359, 361, 362, 363, 366, 375, 378, 379, 380, 381, 382, 383, 385, 391, 395, 396, 397, 398, 400, 410, 419, 420, 422, 424, 425, 426, 427, 428, 429, 432, 433, 438, 439, 441, 443, 445, 446, 448, 452, 453, 456, 458, 461, 462, 463, 464, 465, 466, 468, 469, 472, 476, 477, 479, 481], "remov": [5, 10, 22, 24, 26, 28, 30, 33, 34, 44, 48, 54, 56, 62, 63, 65, 67, 72, 74, 75, 77, 79, 82, 83, 86, 92, 93, 94, 99, 100, 103, 105, 107, 109, 114, 117, 118, 119, 123, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 149, 150, 152, 154, 155, 157, 158, 160, 163, 164, 166, 170, 172, 174, 176, 180, 183, 185, 188, 190, 191, 193, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 215, 220, 222, 223, 227, 228, 231, 232, 233, 234, 237, 239, 240, 244, 245, 246, 247, 248, 249, 250, 252, 256, 258, 259, 263, 264, 266, 268, 269, 272, 278, 280, 281, 284, 288, 289, 290, 292, 293, 294, 296, 298, 299, 301, 302, 305, 310, 311, 313, 315, 316, 317, 322, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 338, 341, 342, 346, 349, 355, 356, 357, 359, 361, 373, 374, 379, 381, 382, 383, 385, 386, 391, 392, 394, 397, 399, 400, 402, 404, 405, 407, 409, 410, 418, 419, 420, 422, 423, 425, 427, 429, 433, 437, 439, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 459, 460, 461, 462, 463, 472, 473, 481], "becaus": [5, 10, 23, 28, 32, 33, 34, 41, 44, 46, 51, 53, 56, 57, 59, 62, 70, 71, 72, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 117, 118, 119, 123, 126, 130, 132, 133, 134, 136, 144, 146, 147, 148, 154, 155, 157, 158, 160, 163, 164, 166, 168, 173, 178, 180, 181, 183, 185, 187, 190, 193, 198, 200, 202, 205, 208, 209, 210, 211, 212, 222, 223, 224, 227, 232, 233, 240, 241, 242, 244, 247, 248, 250, 252, 255, 258, 264, 265, 266, 267, 268, 271, 272, 278, 280, 281, 284, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 315, 316, 325, 327, 328, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 345, 346, 349, 355, 356, 357, 359, 362, 363, 364, 366, 372, 380, 381, 383, 385, 386, 387, 392, 396, 397, 398, 399, 403, 404, 407, 410, 412, 416, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 450, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "legaci": [5, 23, 32, 57, 67, 74, 113, 140, 160, 161, 169, 191, 192, 193, 195, 199, 202, 203, 206, 214, 232, 247, 252, 253, 267, 285, 289, 290, 329, 337, 338, 344, 349, 359, 385, 419, 429, 432, 452, 456, 458, 466, 470, 471, 472, 473, 474, 476, 478, 479], "py_unicod": [5, 63, 118, 469, 470, 471, 473, 479], "represent": [5, 7, 9, 15, 18, 23, 25, 26, 38, 40, 48, 57, 58, 62, 63, 67, 74, 75, 84, 86, 99, 102, 104, 106, 117, 118, 119, 143, 151, 155, 157, 164, 173, 174, 175, 179, 180, 183, 188, 193, 194, 198, 201, 202, 204, 209, 210, 222, 233, 239, 241, 242, 245, 247, 250, 256, 259, 263, 264, 268, 269, 278, 280, 287, 290, 293, 296, 304, 311, 315, 318, 327, 334, 337, 341, 342, 343, 344, 349, 359, 363, 369, 374, 378, 381, 383, 385, 386, 405, 407, 410, 423, 425, 429, 442, 443, 449, 459, 463, 464, 465, 466, 468, 470, 471, 472, 474, 475, 476, 478, 479, 481], "b": [5, 7, 8, 22, 32, 33, 34, 50, 59, 60, 70, 71, 72, 76, 77, 79, 83, 84, 86, 87, 91, 92, 93, 94, 98, 100, 102, 103, 104, 105, 106, 107, 109, 113, 114, 117, 118, 119, 133, 135, 136, 137, 140, 141, 143, 144, 146, 150, 151, 152, 155, 157, 159, 160, 163, 173, 174, 175, 178, 180, 181, 183, 187, 188, 199, 210, 213, 222, 223, 225, 229, 231, 232, 233, 234, 239, 242, 244, 245, 252, 255, 256, 258, 259, 264, 267, 272, 275, 280, 281, 285, 286, 288, 289, 291, 293, 294, 296, 301, 303, 310, 311, 315, 316, 318, 323, 328, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 356, 357, 362, 363, 366, 379, 381, 382, 383, 385, 386, 387, 391, 392, 395, 397, 404, 410, 418, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 437, 438, 439, 440, 443, 446, 447, 448, 449, 450, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "nonneg": [5, 146, 183, 267, 272, 334, 341, 381, 427, 433], "tini": [5, 83, 84, 88, 103, 178, 459, 465, 466], "overflow": [5, 18, 23, 34, 38, 41, 77, 138, 173, 180, 183, 185, 209, 211, 272, 280, 349, 425, 453, 463, 465, 466, 471, 476, 477], "plain": [5, 72, 79, 84, 93, 100, 107, 123, 133, 147, 148, 149, 157, 170, 180, 193, 194, 197, 201, 202, 203, 210, 239, 252, 264, 290, 323, 332, 338, 339, 343, 373, 383, 392, 404, 418, 419, 424, 432, 438, 449, 461, 467, 472, 474, 475, 476], "k": [5, 30, 72, 75, 84, 86, 93, 100, 103, 154, 157, 174, 181, 187, 190, 198, 227, 233, 241, 244, 258, 272, 280, 288, 294, 297, 310, 315, 316, 323, 340, 341, 359, 366, 372, 373, 381, 382, 385, 399, 425, 428, 439, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 476, 477], "n": [5, 7, 9, 14, 18, 24, 32, 33, 34, 41, 46, 58, 59, 62, 63, 71, 72, 74, 75, 79, 83, 84, 86, 88, 91, 92, 94, 96, 100, 101, 103, 104, 106, 107, 109, 117, 118, 119, 129, 133, 134, 135, 137, 138, 139, 140, 144, 146, 147, 150, 152, 155, 157, 160, 163, 164, 167, 172, 173, 174, 181, 183, 187, 188, 190, 197, 199, 202, 205, 210, 217, 218, 222, 223, 227, 231, 232, 233, 239, 241, 244, 245, 247, 252, 255, 256, 258, 259, 262, 263, 265, 266, 267, 272, 275, 276, 280, 285, 289, 290, 293, 294, 296, 304, 305, 306, 310, 311, 315, 316, 323, 328, 332, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 356, 357, 359, 361, 362, 363, 364, 366, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 391, 392, 395, 396, 398, 400, 404, 405, 408, 410, 416, 418, 423, 424, 425, 427, 428, 432, 435, 437, 438, 441, 443, 446, 447, 448, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "repres": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 25, 27, 32, 34, 35, 37, 38, 41, 43, 44, 46, 54, 57, 59, 62, 63, 65, 67, 72, 76, 77, 83, 84, 86, 87, 91, 93, 94, 97, 100, 102, 103, 106, 107, 117, 118, 119, 123, 126, 130, 133, 136, 139, 141, 143, 147, 148, 150, 151, 155, 157, 163, 164, 165, 173, 174, 180, 183, 188, 191, 194, 196, 198, 200, 203, 205, 206, 210, 212, 218, 220, 222, 229, 239, 240, 241, 245, 247, 248, 249, 250, 252, 255, 256, 259, 263, 264, 265, 267, 268, 269, 272, 273, 278, 279, 280, 282, 283, 285, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 305, 311, 316, 318, 319, 322, 325, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 350, 355, 356, 359, 362, 363, 366, 369, 372, 373, 374, 378, 381, 383, 385, 386, 387, 394, 395, 397, 399, 402, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 432, 437, 441, 443, 446, 449, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "f": [5, 7, 18, 42, 58, 62, 65, 67, 72, 77, 78, 83, 84, 86, 88, 91, 92, 93, 94, 99, 100, 101, 103, 105, 106, 109, 111, 113, 117, 118, 119, 123, 130, 131, 133, 134, 136, 138, 141, 144, 145, 146, 148, 152, 157, 160, 163, 164, 166, 167, 172, 173, 174, 175, 180, 181, 183, 187, 188, 190, 197, 205, 208, 210, 212, 215, 218, 222, 223, 225, 231, 232, 247, 252, 255, 256, 258, 263, 264, 267, 268, 272, 275, 280, 285, 288, 289, 290, 293, 294, 296, 298, 313, 315, 316, 323, 328, 330, 337, 339, 340, 341, 342, 344, 349, 355, 357, 359, 361, 364, 366, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 392, 396, 399, 404, 408, 418, 422, 424, 425, 426, 427, 428, 433, 437, 438, 439, 440, 443, 446, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477], "float": [5, 16, 18, 40, 41, 46, 57, 62, 67, 75, 83, 84, 86, 92, 93, 102, 109, 112, 117, 118, 123, 136, 138, 151, 157, 159, 163, 164, 172, 173, 178, 180, 187, 190, 206, 210, 218, 222, 223, 224, 230, 245, 247, 251, 258, 259, 263, 268, 271, 272, 280, 281, 286, 287, 289, 290, 291, 296, 301, 305, 315, 316, 319, 325, 330, 334, 337, 338, 340, 342, 344, 349, 355, 362, 363, 364, 373, 375, 376, 381, 382, 383, 384, 385, 405, 416, 424, 427, 433, 437, 439, 442, 446, 447, 448, 453, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481], "d": [5, 7, 9, 32, 33, 34, 57, 62, 63, 72, 74, 75, 77, 79, 83, 84, 85, 86, 92, 93, 96, 99, 100, 103, 105, 106, 109, 113, 117, 118, 119, 137, 146, 148, 152, 157, 158, 160, 163, 165, 169, 173, 174, 178, 180, 183, 187, 188, 190, 197, 213, 222, 225, 227, 229, 231, 242, 244, 252, 256, 258, 264, 265, 266, 268, 269, 280, 285, 286, 288, 289, 293, 294, 299, 316, 327, 328, 332, 337, 338, 340, 341, 342, 344, 349, 352, 359, 363, 366, 384, 387, 396, 399, 410, 416, 423, 424, 425, 428, 432, 436, 437, 438, 439, 440, 443, 445, 446, 448, 449, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "doubl": [5, 15, 18, 25, 34, 38, 57, 62, 63, 74, 75, 77, 84, 86, 87, 100, 103, 108, 118, 155, 157, 172, 173, 174, 179, 186, 190, 206, 232, 244, 245, 259, 266, 272, 280, 288, 290, 293, 294, 316, 328, 341, 342, 344, 345, 356, 359, 386, 396, 405, 414, 416, 423, 424, 425, 427, 428, 432, 435, 439, 441, 446, 456, 458, 462, 463, 464, 465, 470, 471, 472, 473, 476, 477, 478], "py_complex": [5, 15, 72], "actual": [5, 7, 10, 13, 15, 23, 32, 34, 38, 48, 51, 54, 57, 60, 62, 63, 65, 72, 74, 75, 76, 77, 83, 84, 86, 88, 91, 92, 93, 97, 99, 100, 102, 103, 104, 106, 114, 118, 119, 123, 136, 139, 146, 148, 155, 157, 164, 166, 170, 173, 174, 175, 178, 188, 190, 194, 195, 197, 200, 203, 204, 206, 208, 210, 220, 222, 224, 227, 228, 231, 233, 242, 245, 247, 248, 249, 250, 252, 255, 258, 262, 264, 265, 266, 267, 268, 275, 278, 280, 288, 289, 290, 292, 293, 294, 300, 302, 305, 315, 317, 321, 322, 327, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 355, 362, 366, 369, 378, 381, 383, 385, 386, 387, 392, 396, 398, 399, 402, 404, 407, 411, 419, 421, 423, 424, 425, 426, 429, 431, 432, 433, 437, 438, 441, 448, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479], "strong": [5, 7, 9, 13, 23, 26, 32, 34, 48, 51, 58, 62, 63, 74, 86, 136, 167, 180, 237, 323, 338, 399, 421, 460, 465, 470, 473, 476], "increas": [5, 34, 67, 75, 77, 79, 86, 88, 93, 97, 99, 106, 117, 135, 155, 187, 188, 208, 218, 244, 252, 256, 264, 267, 287, 290, 323, 325, 337, 338, 341, 349, 364, 373, 379, 385, 397, 409, 411, 421, 425, 432, 437, 453, 459, 461, 462, 466, 470, 473, 476, 477, 478, 479], "typeobject": [5, 92, 461], "similar": [5, 7, 8, 9, 13, 22, 23, 26, 28, 30, 32, 37, 44, 48, 51, 56, 57, 58, 59, 62, 63, 65, 66, 71, 72, 74, 77, 78, 83, 84, 85, 86, 87, 88, 92, 93, 94, 98, 99, 100, 102, 103, 106, 107, 109, 113, 123, 130, 131, 133, 134, 135, 136, 140, 143, 144, 147, 148, 151, 154, 155, 157, 163, 164, 165, 166, 167, 168, 172, 173, 174, 177, 178, 180, 181, 183, 185, 187, 188, 192, 193, 202, 204, 208, 210, 222, 223, 225, 227, 230, 232, 233, 237, 239, 240, 242, 244, 247, 248, 249, 252, 255, 256, 258, 263, 265, 267, 273, 279, 280, 286, 289, 290, 293, 294, 296, 299, 302, 305, 307, 310, 316, 318, 323, 328, 329, 332, 334, 335, 336, 337, 338, 341, 342, 345, 349, 352, 355, 357, 361, 362, 363, 366, 372, 378, 379, 383, 385, 387, 391, 399, 404, 406, 407, 408, 410, 411, 414, 416, 419, 421, 422, 424, 425, 427, 429, 432, 433, 435, 437, 438, 439, 440, 443, 444, 447, 450, 452, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "anyth": [5, 28, 34, 40, 62, 67, 71, 72, 75, 77, 79, 82, 84, 88, 91, 94, 99, 100, 103, 104, 106, 111, 117, 134, 148, 157, 173, 174, 175, 178, 180, 183, 190, 193, 200, 208, 244, 245, 254, 255, 264, 266, 280, 289, 294, 298, 307, 316, 320, 327, 331, 332, 338, 342, 345, 346, 349, 350, 357, 359, 362, 366, 373, 381, 383, 386, 391, 398, 402, 404, 410, 418, 424, 425, 427, 429, 435, 437, 438, 440, 443, 446, 456, 458, 460, 461, 464, 465, 469, 473, 474, 478], "arbitrari": [5, 13, 23, 32, 34, 36, 38, 41, 44, 47, 51, 54, 58, 60, 62, 67, 71, 73, 75, 77, 83, 84, 86, 87, 88, 93, 94, 100, 103, 104, 106, 107, 112, 117, 130, 140, 148, 155, 156, 157, 166, 172, 173, 176, 180, 183, 188, 200, 205, 222, 227, 228, 230, 231, 237, 242, 245, 247, 248, 252, 255, 256, 259, 264, 265, 268, 272, 280, 283, 284, 287, 290, 291, 292, 293, 294, 296, 304, 307, 310, 316, 319, 325, 327, 330, 331, 334, 335, 336, 337, 340, 341, 342, 349, 351, 355, 359, 362, 363, 366, 381, 383, 385, 386, 387, 394, 407, 410, 416, 417, 418, 425, 437, 439, 442, 443, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478], "turn": [5, 23, 32, 33, 34, 57, 62, 67, 72, 77, 84, 87, 88, 91, 92, 94, 99, 102, 103, 106, 107, 109, 111, 117, 119, 125, 152, 155, 157, 164, 173, 174, 187, 190, 191, 205, 206, 222, 233, 240, 242, 244, 252, 263, 264, 265, 280, 289, 293, 295, 298, 308, 312, 313, 317, 325, 330, 332, 334, 341, 358, 359, 362, 364, 366, 381, 385, 387, 392, 397, 417, 421, 424, 429, 431, 432, 439, 445, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 473, 474, 476], "statu": [5, 32, 33, 48, 58, 62, 67, 72, 83, 91, 93, 99, 100, 107, 111, 112, 113, 117, 141, 174, 193, 202, 204, 208, 210, 211, 239, 242, 244, 245, 253, 268, 280, 285, 289, 290, 302, 304, 306, 308, 331, 335, 337, 338, 345, 349, 373, 390, 392, 404, 435, 438, 445, 459, 463, 464, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479], "where": [5, 10, 23, 24, 32, 33, 34, 37, 39, 41, 44, 46, 48, 53, 55, 56, 57, 58, 60, 62, 63, 65, 67, 72, 74, 75, 76, 77, 78, 82, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 106, 107, 109, 110, 111, 117, 119, 122, 123, 130, 133, 136, 138, 141, 147, 148, 149, 150, 151, 155, 157, 160, 164, 166, 172, 173, 174, 178, 180, 183, 184, 185, 187, 188, 190, 193, 196, 198, 199, 200, 202, 205, 207, 208, 210, 212, 218, 222, 223, 227, 229, 232, 233, 237, 239, 240, 242, 244, 245, 247, 248, 250, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 302, 303, 305, 307, 309, 310, 311, 314, 315, 316, 321, 325, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 352, 355, 356, 358, 359, 362, 363, 364, 366, 368, 370, 373, 375, 377, 378, 379, 381, 382, 383, 385, 387, 390, 391, 392, 395, 396, 397, 399, 404, 407, 408, 409, 410, 412, 413, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 443, 445, 447, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "success": [5, 7, 9, 10, 11, 12, 13, 14, 17, 18, 22, 23, 24, 26, 27, 30, 32, 33, 34, 37, 38, 39, 41, 44, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 72, 74, 75, 78, 79, 84, 86, 91, 94, 99, 103, 107, 111, 119, 123, 130, 133, 136, 156, 157, 173, 174, 188, 206, 212, 220, 239, 242, 245, 258, 263, 266, 275, 280, 290, 292, 293, 296, 297, 300, 302, 311, 315, 316, 320, 332, 333, 334, 337, 338, 340, 344, 345, 349, 372, 373, 385, 392, 407, 420, 424, 425, 438, 440, 453, 459, 462, 463, 466, 469, 470, 472, 474, 476, 478], "leav": [5, 23, 30, 34, 56, 59, 63, 65, 74, 75, 77, 79, 91, 94, 98, 100, 106, 117, 123, 135, 137, 157, 164, 166, 174, 181, 183, 185, 188, 190, 193, 202, 208, 210, 222, 223, 232, 233, 240, 244, 247, 255, 266, 268, 272, 280, 281, 289, 290, 314, 315, 337, 338, 355, 359, 362, 366, 381, 385, 402, 424, 429, 431, 433, 437, 439, 440, 441, 449, 450, 453, 459, 461, 462, 463, 464, 466, 470, 473, 476], "unmodifi": [5, 7, 79, 112, 205, 206, 304, 341, 362, 391, 414], "py_cleanup_support": 5, "get": [5, 7, 10, 14, 17, 23, 26, 30, 32, 33, 34, 38, 41, 44, 47, 48, 51, 53, 57, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 78, 85, 86, 87, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 117, 119, 122, 123, 125, 126, 127, 130, 131, 134, 135, 136, 138, 141, 147, 148, 155, 157, 158, 164, 166, 167, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 190, 193, 197, 202, 203, 205, 206, 208, 210, 213, 219, 222, 224, 225, 227, 229, 230, 232, 233, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 276, 278, 280, 285, 286, 289, 290, 292, 293, 294, 296, 299, 300, 302, 305, 306, 310, 313, 315, 317, 319, 323, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 345, 346, 349, 352, 355, 356, 357, 359, 362, 363, 366, 372, 373, 378, 382, 383, 385, 386, 391, 392, 395, 396, 397, 398, 399, 400, 404, 407, 408, 410, 411, 412, 413, 415, 416, 417, 421, 422, 424, 425, 427, 429, 434, 435, 436, 437, 438, 440, 441, 445, 446, 447, 449, 450, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "eventu": [5, 32, 34, 72, 75, 78, 83, 103, 104, 126, 130, 135, 136, 190, 229, 239, 244, 247, 280, 290, 306, 364, 392, 408, 416, 429, 432, 436, 440, 460, 461, 463, 464, 465, 466, 467, 470, 471, 474, 476], "give": [5, 7, 14, 23, 34, 41, 47, 62, 63, 71, 72, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 88, 91, 92, 93, 94, 98, 102, 103, 104, 105, 106, 114, 117, 118, 119, 135, 138, 148, 150, 151, 152, 155, 157, 173, 174, 178, 180, 182, 183, 187, 188, 190, 205, 210, 213, 222, 225, 227, 234, 247, 255, 258, 265, 266, 272, 273, 275, 276, 280, 284, 289, 290, 291, 293, 294, 296, 304, 311, 315, 316, 323, 329, 330, 335, 338, 340, 341, 342, 345, 346, 349, 362, 363, 364, 366, 370, 373, 381, 383, 385, 387, 391, 396, 400, 402, 404, 406, 407, 408, 412, 419, 423, 424, 425, 431, 432, 434, 435, 438, 441, 442, 443, 446, 448, 449, 450, 451, 452, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 479], "chanc": [5, 34, 58, 74, 99, 100, 104, 136, 137, 247, 286, 362, 437, 438, 464, 471, 478], "had": [5, 22, 32, 41, 60, 71, 75, 79, 84, 88, 94, 100, 104, 109, 117, 118, 119, 131, 137, 152, 155, 166, 167, 174, 180, 183, 188, 196, 208, 210, 233, 240, 252, 280, 290, 294, 311, 313, 325, 334, 338, 340, 342, 366, 377, 379, 383, 385, 386, 391, 392, 407, 425, 429, 433, 438, 441, 445, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "p": [5, 9, 11, 15, 22, 24, 25, 33, 37, 38, 41, 44, 54, 59, 62, 63, 83, 84, 91, 92, 93, 96, 99, 100, 103, 106, 109, 119, 148, 152, 157, 160, 164, 169, 173, 174, 178, 180, 187, 190, 197, 199, 205, 222, 227, 232, 237, 242, 244, 245, 248, 258, 265, 268, 272, 280, 281, 289, 290, 293, 294, 296, 297, 305, 306, 310, 311, 315, 316, 324, 337, 340, 341, 342, 344, 345, 349, 359, 362, 363, 364, 366, 373, 381, 383, 385, 386, 396, 405, 408, 409, 410, 418, 424, 428, 432, 437, 445, 446, 452, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "bool": [5, 6, 30, 57, 67, 91, 93, 117, 123, 136, 164, 165, 173, 178, 208, 222, 223, 251, 258, 259, 264, 281, 286, 288, 337, 344, 376, 379, 383, 385, 407, 416, 424, 425, 427, 437, 447, 462, 465, 469, 471, 477, 478], "test": [5, 23, 34, 45, 56, 57, 60, 67, 72, 77, 78, 86, 88, 91, 92, 93, 96, 97, 98, 99, 100, 103, 105, 106, 107, 111, 113, 117, 119, 122, 126, 151, 152, 157, 158, 163, 167, 173, 174, 175, 178, 183, 184, 186, 188, 197, 210, 217, 222, 223, 225, 233, 237, 242, 244, 245, 246, 247, 248, 251, 252, 256, 258, 259, 261, 263, 266, 269, 272, 280, 288, 290, 293, 302, 306, 312, 315, 316, 332, 333, 337, 339, 340, 349, 355, 361, 362, 364, 372, 373, 379, 383, 386, 392, 399, 404, 410, 416, 419, 422, 424, 425, 431, 436, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "truth": [5, 6, 67, 88, 94, 104, 173, 222, 251, 288, 344, 410, 425, 427, 462, 471], "boolean": [5, 16, 34, 67, 84, 99, 105, 117, 119, 135, 164, 165, 173, 174, 180, 188, 190, 222, 232, 233, 240, 242, 245, 251, 259, 265, 271, 280, 288, 290, 292, 301, 316, 317, 334, 335, 337, 338, 362, 366, 373, 376, 381, 383, 386, 392, 396, 399, 407, 408, 416, 421, 424, 425, 430, 439, 460, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 478, 479, 481], "redic": 5, "equival": [5, 7, 9, 10, 13, 18, 22, 23, 24, 32, 34, 37, 39, 41, 44, 46, 48, 53, 54, 57, 59, 60, 61, 62, 63, 67, 72, 75, 77, 80, 85, 86, 88, 93, 94, 96, 98, 102, 103, 109, 112, 113, 114, 117, 118, 119, 130, 134, 135, 136, 146, 151, 155, 157, 160, 163, 164, 166, 173, 174, 175, 178, 180, 183, 187, 188, 193, 201, 202, 204, 210, 222, 223, 225, 229, 231, 232, 233, 234, 236, 237, 240, 241, 242, 244, 247, 248, 252, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 280, 283, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 303, 305, 313, 315, 316, 318, 321, 325, 326, 334, 335, 340, 341, 342, 345, 346, 349, 352, 355, 359, 362, 363, 366, 376, 378, 381, 382, 383, 384, 385, 391, 398, 400, 402, 407, 419, 421, 424, 425, 427, 432, 433, 436, 437, 438, 439, 443, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "true": [5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 27, 29, 32, 33, 34, 36, 37, 38, 42, 43, 44, 48, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 72, 75, 77, 83, 84, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 104, 105, 106, 109, 111, 112, 113, 117, 119, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 176, 178, 180, 183, 185, 186, 187, 188, 190, 193, 195, 197, 198, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 245, 247, 248, 249, 250, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 275, 279, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 304, 305, 308, 309, 311, 313, 314, 316, 317, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 348, 349, 352, 354, 355, 357, 359, 361, 362, 363, 366, 369, 370, 373, 374, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 396, 397, 399, 400, 402, 404, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 424, 425, 427, 428, 432, 433, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "fals": [5, 6, 7, 22, 32, 33, 34, 46, 48, 57, 62, 63, 65, 72, 83, 84, 86, 88, 91, 93, 94, 97, 98, 99, 100, 102, 104, 105, 106, 107, 111, 112, 113, 117, 119, 123, 126, 129, 130, 131, 132, 133, 135, 136, 140, 141, 143, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 176, 178, 180, 183, 185, 187, 188, 190, 193, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 222, 223, 224, 225, 227, 228, 229, 232, 233, 238, 239, 240, 242, 245, 247, 249, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 273, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 296, 300, 301, 304, 308, 309, 311, 313, 314, 316, 317, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 352, 355, 357, 359, 361, 362, 363, 366, 369, 370, 373, 377, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 396, 397, 399, 400, 404, 410, 412, 414, 416, 417, 418, 419, 422, 424, 425, 427, 428, 432, 433, 437, 438, 439, 440, 441, 446, 447, 449, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "express": [5, 10, 22, 39, 46, 48, 53, 59, 65, 67, 72, 79, 84, 85, 86, 92, 95, 100, 111, 117, 122, 136, 141, 151, 156, 158, 159, 160, 164, 180, 183, 187, 188, 190, 210, 217, 222, 227, 228, 244, 251, 252, 256, 258, 261, 263, 265, 272, 280, 288, 290, 294, 305, 315, 320, 330, 334, 337, 338, 341, 342, 344, 349, 350, 356, 359, 360, 363, 364, 366, 375, 377, 382, 383, 384, 385, 387, 395, 397, 399, 410, 416, 423, 424, 425, 426, 428, 429, 430, 432, 436, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481], "nest": [5, 13, 67, 72, 77, 84, 86, 93, 94, 99, 103, 110, 136, 157, 166, 173, 178, 183, 184, 187, 188, 190, 196, 210, 222, 223, 252, 258, 259, 264, 268, 280, 294, 299, 304, 309, 311, 316, 341, 342, 348, 349, 362, 366, 373, 378, 383, 385, 406, 410, 412, 424, 425, 426, 427, 432, 433, 437, 438, 440, 442, 443, 446, 449, 452, 459, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 481], "exce": [5, 58, 123, 133, 136, 163, 164, 183, 222, 224, 255, 281, 290, 296, 319, 341, 357, 362, 407, 419, 438, 466, 470, 477], "long_max": [5, 18, 38], "howev": [5, 6, 10, 23, 24, 32, 33, 34, 41, 44, 48, 56, 62, 70, 71, 72, 75, 77, 83, 84, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 111, 117, 123, 125, 130, 132, 136, 148, 155, 157, 158, 164, 166, 167, 173, 174, 178, 183, 187, 190, 191, 193, 196, 198, 200, 202, 203, 205, 206, 210, 220, 222, 223, 224, 227, 232, 233, 236, 240, 242, 244, 245, 247, 249, 252, 254, 255, 256, 258, 264, 265, 266, 268, 269, 278, 280, 285, 289, 290, 291, 296, 297, 307, 308, 313, 315, 316, 325, 328, 329, 330, 331, 334, 337, 338, 340, 341, 342, 345, 349, 350, 351, 352, 354, 355, 359, 361, 362, 364, 366, 373, 375, 378, 382, 383, 384, 385, 386, 387, 394, 399, 400, 402, 404, 407, 408, 412, 413, 416, 419, 423, 425, 426, 427, 429, 437, 438, 439, 440, 444, 446, 447, 449, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "proper": [5, 32, 33, 39, 48, 67, 71, 74, 84, 98, 151, 174, 188, 210, 232, 242, 244, 247, 281, 329, 334, 338, 341, 344, 349, 359, 385, 392, 407, 410, 424, 425, 427, 444, 459, 471, 475, 476, 477], "rang": [5, 7, 18, 20, 23, 25, 34, 38, 58, 63, 64, 67, 71, 72, 73, 75, 83, 84, 86, 91, 92, 93, 94, 97, 100, 101, 103, 106, 107, 109, 117, 123, 131, 135, 136, 138, 141, 144, 146, 147, 151, 155, 157, 163, 164, 166, 173, 174, 175, 180, 183, 187, 188, 190, 208, 209, 210, 220, 222, 223, 228, 232, 233, 238, 241, 245, 251, 252, 256, 258, 259, 271, 275, 280, 281, 285, 290, 292, 294, 296, 300, 301, 302, 305, 312, 313, 315, 316, 319, 323, 330, 332, 334, 337, 338, 340, 342, 344, 349, 350, 360, 362, 363, 364, 366, 372, 375, 378, 379, 381, 383, 385, 391, 403, 407, 416, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 437, 439, 440, 442, 443, 446, 447, 448, 449, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "most": [5, 7, 10, 15, 23, 25, 30, 32, 33, 34, 38, 41, 44, 56, 57, 58, 60, 62, 63, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 115, 117, 122, 123, 130, 131, 133, 135, 136, 138, 140, 141, 143, 145, 146, 148, 150, 155, 157, 163, 164, 166, 172, 173, 174, 180, 181, 183, 185, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 202, 204, 207, 208, 210, 211, 212, 218, 220, 222, 223, 224, 227, 230, 231, 233, 237, 240, 244, 245, 247, 248, 251, 252, 253, 255, 256, 258, 259, 263, 264, 265, 266, 267, 269, 272, 275, 280, 281, 286, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 302, 304, 305, 307, 311, 313, 315, 316, 318, 323, 325, 326, 327, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 352, 353, 355, 357, 359, 361, 362, 363, 364, 366, 371, 372, 378, 379, 381, 383, 384, 385, 386, 387, 388, 392, 397, 398, 399, 400, 403, 404, 405, 407, 408, 410, 411, 412, 413, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 433, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "signific": [5, 34, 40, 67, 94, 100, 103, 104, 106, 123, 129, 155, 175, 183, 190, 194, 222, 256, 258, 266, 272, 281, 296, 305, 315, 341, 342, 349, 362, 385, 395, 425, 429, 431, 432, 441, 449, 452, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479], "silent": [5, 22, 39, 48, 55, 58, 65, 99, 100, 106, 112, 130, 137, 166, 183, 210, 215, 224, 245, 264, 266, 268, 275, 280, 281, 290, 292, 293, 294, 304, 305, 327, 329, 331, 337, 342, 345, 362, 386, 391, 422, 433, 438, 452, 458, 459, 463, 464, 466, 467, 469, 471, 472, 474, 475, 477, 478, 479], "truncat": [5, 18, 58, 63, 83, 84, 138, 139, 146, 174, 180, 183, 210, 222, 231, 245, 255, 258, 267, 290, 317, 334, 337, 341, 344, 357, 359, 361, 378, 379, 390, 394, 419, 421, 425, 427, 443, 459, 461, 465, 466, 467, 472, 473, 474, 475, 477], "too": [5, 18, 34, 62, 65, 74, 77, 83, 91, 93, 94, 99, 100, 103, 106, 107, 113, 122, 130, 134, 136, 148, 151, 155, 163, 164, 166, 168, 173, 181, 183, 185, 188, 190, 191, 201, 209, 210, 222, 227, 240, 254, 255, 256, 280, 288, 289, 302, 304, 329, 330, 334, 335, 337, 338, 341, 342, 344, 345, 349, 356, 359, 362, 366, 381, 383, 385, 386, 387, 406, 410, 419, 420, 421, 423, 425, 429, 431, 436, 437, 438, 443, 446, 448, 452, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 473, 475, 477, 478], "small": [5, 32, 38, 41, 54, 57, 62, 67, 72, 77, 79, 83, 84, 91, 93, 97, 100, 101, 103, 104, 106, 119, 155, 165, 166, 173, 182, 183, 187, 190, 240, 244, 251, 255, 258, 268, 272, 280, 285, 290, 305, 315, 316, 327, 330, 334, 340, 341, 359, 362, 372, 379, 385, 404, 406, 410, 421, 425, 433, 436, 438, 439, 449, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 478, 479], "semant": [5, 7, 10, 11, 13, 27, 34, 56, 62, 63, 79, 86, 93, 99, 100, 102, 130, 136, 158, 183, 190, 193, 199, 202, 204, 205, 222, 245, 247, 249, 251, 254, 264, 265, 266, 268, 280, 289, 290, 292, 293, 296, 308, 313, 316, 327, 328, 329, 334, 339, 340, 349, 362, 363, 383, 391, 402, 420, 421, 422, 424, 425, 426, 427, 429, 430, 433, 437, 438, 451, 452, 453, 459, 461, 462, 464, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478], "inherit": [5, 28, 33, 60, 62, 67, 74, 75, 77, 84, 86, 87, 92, 93, 98, 113, 115, 117, 119, 123, 125, 136, 152, 155, 157, 158, 166, 173, 174, 180, 196, 208, 218, 219, 220, 222, 231, 232, 244, 247, 251, 252, 255, 256, 266, 268, 280, 281, 289, 293, 296, 312, 325, 334, 335, 338, 339, 345, 348, 357, 359, 362, 366, 367, 373, 375, 383, 407, 411, 412, 413, 424, 425, 427, 441, 442, 458, 459, 462, 464, 465, 467, 469, 470, 471, 473, 475, 477, 478, 479], "downcast": [5, 453], "mileag": [5, 332], "vari": [5, 7, 57, 74, 77, 83, 84, 86, 94, 103, 105, 106, 138, 148, 155, 172, 180, 188, 190, 222, 244, 248, 252, 255, 263, 268, 276, 302, 315, 332, 335, 337, 338, 339, 340, 341, 349, 359, 362, 363, 366, 382, 386, 387, 397, 424, 425, 431, 459, 460, 461, 463, 465, 466, 472, 473, 474], "occur": [5, 7, 13, 17, 18, 22, 23, 30, 34, 35, 38, 39, 41, 44, 47, 48, 58, 62, 63, 65, 72, 74, 78, 79, 84, 85, 86, 92, 94, 97, 99, 100, 102, 106, 110, 117, 119, 123, 134, 136, 141, 147, 148, 149, 151, 154, 155, 163, 164, 166, 167, 172, 174, 178, 180, 183, 187, 188, 190, 200, 209, 210, 215, 222, 225, 227, 234, 244, 247, 251, 252, 255, 258, 264, 266, 267, 268, 272, 285, 289, 290, 294, 296, 299, 308, 311, 313, 315, 316, 325, 329, 330, 332, 334, 338, 340, 341, 342, 345, 349, 350, 355, 357, 359, 361, 362, 363, 366, 368, 373, 378, 381, 382, 383, 385, 392, 397, 399, 400, 404, 406, 407, 409, 410, 412, 416, 419, 421, 424, 425, 426, 427, 429, 432, 433, 435, 437, 438, 440, 447, 449, 462, 464, 465, 466, 467, 469, 472, 473, 474, 477, 478, 479], "remain": [5, 13, 32, 35, 41, 56, 62, 72, 75, 77, 79, 84, 93, 94, 100, 103, 108, 117, 119, 123, 136, 150, 157, 158, 163, 166, 172, 173, 174, 180, 183, 187, 188, 190, 191, 192, 195, 199, 200, 202, 205, 206, 208, 210, 215, 222, 223, 224, 233, 244, 245, 247, 265, 268, 272, 280, 289, 290, 292, 293, 294, 296, 309, 319, 321, 330, 334, 337, 340, 341, 342, 345, 349, 357, 359, 361, 362, 373, 381, 382, 383, 385, 391, 397, 399, 404, 421, 423, 424, 425, 429, 432, 433, 438, 439, 446, 448, 452, 453, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "option": [5, 23, 32, 33, 34, 41, 46, 48, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 77, 80, 85, 86, 87, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 115, 116, 118, 119, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 140, 143, 147, 148, 149, 150, 152, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 178, 180, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 215, 218, 220, 222, 223, 224, 227, 229, 232, 233, 235, 238, 239, 242, 245, 247, 248, 249, 251, 252, 254, 255, 256, 258, 261, 263, 264, 265, 266, 267, 268, 269, 273, 275, 278, 280, 281, 282, 285, 290, 291, 292, 293, 294, 296, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 337, 338, 340, 341, 342, 343, 344, 345, 347, 349, 351, 352, 353, 354, 356, 359, 361, 362, 363, 364, 365, 367, 369, 370, 372, 375, 378, 379, 381, 382, 383, 386, 387, 391, 392, 395, 396, 397, 400, 404, 408, 410, 411, 412, 414, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479], "default": [5, 7, 14, 17, 18, 23, 24, 27, 31, 32, 33, 34, 44, 48, 56, 57, 60, 62, 63, 65, 67, 70, 75, 76, 77, 82, 83, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 112, 114, 115, 116, 118, 119, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 220, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 280, 281, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 340, 341, 342, 344, 345, 349, 350, 352, 353, 356, 357, 359, 361, 362, 363, 364, 366, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "touch": [5, 67, 84, 88, 174, 224, 244, 293, 294, 426, 436, 447, 465, 478], "keyword": [5, 10, 19, 57, 62, 63, 65, 67, 73, 74, 75, 83, 86, 88, 94, 98, 99, 100, 112, 113, 117, 119, 123, 126, 132, 136, 137, 146, 148, 155, 157, 164, 167, 172, 173, 174, 180, 183, 186, 187, 188, 190, 193, 198, 202, 203, 204, 205, 206, 210, 215, 222, 223, 227, 232, 233, 234, 237, 240, 242, 244, 248, 251, 252, 255, 258, 259, 261, 263, 264, 265, 268, 275, 280, 285, 288, 289, 290, 293, 294, 296, 301, 304, 310, 312, 315, 316, 318, 320, 322, 324, 328, 329, 332, 334, 341, 342, 345, 349, 353, 355, 357, 359, 361, 362, 366, 369, 370, 373, 381, 382, 383, 385, 386, 387, 392, 396, 397, 400, 404, 408, 410, 417, 419, 421, 424, 425, 426, 427, 428, 430, 433, 439, 440, 442, 443, 446, 449, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479], "current": [5, 7, 10, 11, 12, 13, 17, 18, 23, 26, 27, 28, 30, 32, 33, 34, 38, 40, 41, 42, 44, 48, 52, 56, 58, 60, 61, 62, 63, 65, 67, 72, 74, 75, 77, 78, 79, 83, 86, 87, 88, 91, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 112, 113, 114, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 141, 147, 148, 149, 150, 152, 155, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 180, 182, 183, 186, 188, 190, 193, 194, 197, 199, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 219, 220, 222, 224, 227, 228, 231, 232, 233, 237, 239, 241, 242, 244, 245, 247, 253, 255, 256, 258, 263, 264, 266, 268, 271, 272, 273, 275, 278, 279, 280, 281, 285, 289, 290, 291, 292, 293, 294, 296, 300, 304, 305, 306, 308, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 326, 328, 329, 330, 334, 337, 338, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 355, 357, 359, 361, 362, 363, 364, 366, 369, 372, 373, 377, 378, 381, 383, 385, 391, 392, 393, 395, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 416, 419, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 437, 438, 443, 444, 445, 447, 448, 449, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "end": [5, 7, 9, 13, 18, 23, 24, 28, 30, 32, 33, 34, 36, 37, 38, 41, 55, 57, 59, 62, 63, 65, 67, 71, 72, 74, 78, 79, 83, 85, 86, 88, 93, 94, 96, 98, 99, 100, 102, 103, 104, 106, 108, 113, 114, 117, 118, 119, 123, 124, 127, 130, 132, 133, 135, 136, 140, 143, 146, 147, 148, 150, 152, 155, 156, 157, 160, 164, 166, 172, 173, 174, 175, 179, 180, 183, 187, 188, 190, 191, 193, 202, 204, 205, 206, 207, 210, 212, 222, 223, 224, 231, 232, 237, 239, 240, 242, 244, 245, 247, 252, 255, 258, 259, 264, 265, 266, 267, 268, 275, 276, 279, 280, 281, 285, 289, 290, 291, 292, 293, 294, 298, 299, 302, 305, 306, 308, 311, 314, 315, 316, 317, 325, 327, 328, 329, 332, 334, 337, 338, 341, 342, 344, 345, 349, 350, 352, 355, 356, 357, 359, 361, 363, 368, 373, 374, 375, 377, 378, 381, 385, 386, 387, 392, 397, 404, 405, 407, 408, 410, 412, 413, 414, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 452, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "here": [5, 7, 23, 28, 32, 33, 34, 41, 44, 50, 51, 61, 62, 71, 72, 74, 75, 77, 79, 83, 84, 87, 88, 91, 92, 93, 94, 96, 99, 100, 103, 104, 105, 107, 109, 111, 113, 115, 117, 119, 126, 133, 134, 138, 141, 147, 148, 150, 152, 155, 157, 161, 164, 166, 167, 171, 172, 173, 174, 178, 180, 183, 187, 188, 190, 193, 195, 196, 197, 199, 202, 203, 204, 205, 206, 213, 218, 219, 220, 222, 223, 227, 231, 232, 239, 242, 244, 245, 248, 252, 253, 254, 264, 265, 266, 267, 272, 274, 280, 285, 289, 290, 294, 296, 302, 304, 311, 312, 316, 319, 326, 328, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 349, 355, 357, 358, 359, 362, 363, 364, 366, 381, 382, 383, 385, 386, 387, 388, 392, 395, 397, 400, 404, 405, 407, 408, 410, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 440, 443, 444, 446, 447, 448, 451, 452, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 473, 475, 476, 477, 478, 479], "colon": [5, 67, 86, 103, 180, 190, 193, 196, 202, 205, 225, 227, 239, 252, 256, 264, 268, 291, 294, 299, 316, 332, 342, 374, 375, 392, 397, 404, 407, 424, 427, 428, 432, 438, 440, 452, 453, 458, 465, 466, 476], "error": [5, 7, 8, 9, 13, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 71, 73, 74, 75, 77, 78, 79, 83, 86, 88, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 111, 112, 116, 117, 118, 119, 126, 127, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 148, 151, 152, 154, 156, 160, 163, 164, 165, 166, 168, 172, 173, 174, 178, 180, 181, 184, 187, 190, 191, 193, 194, 198, 199, 200, 202, 204, 205, 206, 209, 210, 211, 213, 215, 220, 222, 223, 225, 226, 231, 234, 241, 242, 244, 245, 247, 249, 251, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 296, 299, 302, 303, 305, 308, 313, 315, 316, 319, 325, 328, 329, 330, 331, 332, 334, 335, 337, 338, 341, 342, 344, 345, 346, 349, 353, 356, 357, 359, 362, 366, 370, 373, 378, 381, 383, 385, 386, 387, 389, 391, 392, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 432, 433, 436, 439, 442, 446, 447, 449, 452, 453, 458, 459, 460, 461, 463, 464, 465, 466, 467, 472, 473, 474, 475, 476, 477, 478, 479, 481], "messag": [5, 23, 32, 33, 53, 58, 65, 67, 71, 72, 74, 75, 78, 83, 84, 88, 91, 94, 97, 103, 104, 106, 107, 111, 117, 119, 122, 123, 130, 133, 139, 140, 141, 143, 147, 148, 152, 154, 155, 160, 165, 171, 173, 174, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 209, 210, 220, 225, 226, 231, 239, 240, 242, 243, 244, 245, 247, 251, 252, 256, 259, 264, 265, 266, 269, 276, 280, 281, 282, 285, 289, 290, 294, 302, 308, 311, 314, 316, 319, 328, 330, 332, 334, 335, 337, 338, 339, 349, 353, 354, 355, 356, 359, 364, 365, 372, 375, 378, 383, 385, 386, 387, 390, 392, 395, 396, 397, 404, 410, 411, 412, 416, 418, 424, 426, 428, 433, 435, 440, 445, 446, 448, 449, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 479], "associ": [5, 23, 24, 27, 32, 43, 57, 60, 62, 65, 67, 72, 74, 75, 83, 85, 86, 91, 93, 97, 98, 99, 100, 101, 103, 104, 107, 108, 112, 117, 123, 132, 136, 141, 148, 155, 157, 163, 172, 174, 176, 183, 188, 190, 191, 193, 198, 200, 210, 227, 239, 242, 244, 245, 247, 249, 252, 264, 273, 280, 283, 289, 290, 292, 294, 296, 311, 325, 326, 334, 341, 343, 345, 350, 355, 359, 362, 364, 366, 372, 373, 383, 385, 399, 400, 402, 403, 404, 407, 410, 412, 413, 416, 417, 419, 420, 423, 424, 425, 426, 428, 429, 433, 435, 437, 438, 439, 440, 451, 455, 466, 469, 472, 473, 474, 477, 478, 479], "semicolon": [5, 32, 75, 103, 236, 294, 337, 424, 433, 452, 458], "mutual": [5, 62, 67, 102, 115, 259, 265, 268, 289, 316, 366, 377, 383, 400, 426], "exclud": [5, 18, 33, 58, 63, 86, 98, 100, 103, 157, 160, 178, 180, 188, 190, 224, 232, 244, 258, 268, 272, 276, 278, 290, 293, 305, 311, 315, 338, 340, 341, 349, 355, 362, 363, 364, 373, 379, 386, 410, 418, 419, 423, 424, 425, 427, 433, 439, 446, 452, 465, 466, 469, 470, 472, 473, 474, 475, 477, 478, 479], "decrement": [5, 7, 9, 34, 62, 72, 75, 77, 84, 98, 135, 136, 188, 280, 290, 294, 330, 362, 373, 425], "abov": [5, 7, 23, 32, 33, 34, 41, 57, 62, 63, 71, 72, 74, 75, 84, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 112, 113, 114, 117, 119, 123, 126, 134, 135, 136, 144, 146, 147, 148, 151, 155, 157, 160, 161, 164, 166, 172, 173, 174, 175, 176, 178, 180, 181, 183, 185, 186, 187, 188, 190, 194, 197, 200, 202, 205, 210, 212, 220, 222, 227, 231, 232, 233, 239, 240, 244, 248, 255, 256, 263, 264, 265, 266, 267, 272, 275, 280, 285, 286, 289, 290, 294, 296, 300, 304, 305, 310, 316, 321, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 351, 357, 359, 363, 366, 372, 373, 377, 381, 383, 385, 386, 387, 391, 392, 394, 396, 399, 402, 404, 405, 407, 410, 417, 418, 423, 424, 425, 428, 429, 431, 432, 433, 437, 438, 440, 441, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479], "succe": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 25, 27, 29, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 53, 54, 55, 59, 60, 61, 62, 63, 66, 84, 103, 119, 190, 206, 222, 229, 285, 290, 293, 313, 329, 333, 334, 338, 359, 385, 386, 387, 391, 392, 402, 407, 424, 426, 428, 452, 461, 462], "arg": [5, 10, 20, 23, 28, 32, 33, 34, 35, 57, 58, 60, 61, 62, 63, 65, 71, 72, 74, 75, 77, 83, 84, 86, 88, 92, 93, 98, 99, 100, 109, 112, 113, 117, 119, 122, 123, 129, 134, 136, 137, 139, 141, 152, 157, 163, 166, 167, 172, 173, 174, 180, 187, 188, 194, 197, 200, 202, 209, 210, 212, 222, 223, 225, 229, 244, 245, 247, 250, 252, 258, 264, 265, 266, 268, 280, 281, 288, 289, 290, 294, 296, 297, 304, 305, 313, 315, 332, 341, 342, 345, 349, 352, 356, 359, 362, 373, 377, 381, 383, 385, 386, 387, 392, 396, 399, 424, 425, 428, 433, 438, 440, 445, 448, 452, 453, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 478, 479], "exhaust": [5, 62, 77, 86, 94, 119, 155, 157, 188, 222, 239, 258, 290, 324, 339, 341, 359, 366, 383, 386, 419, 424, 425, 427, 438, 439, 461, 463, 464, 465, 467, 475, 476], "due": [5, 23, 32, 34, 44, 62, 65, 74, 75, 77, 83, 92, 99, 102, 107, 119, 123, 128, 134, 136, 166, 172, 173, 174, 180, 181, 187, 205, 210, 218, 222, 224, 229, 239, 244, 247, 255, 264, 265, 266, 268, 272, 280, 296, 311, 322, 324, 338, 341, 345, 359, 362, 368, 383, 385, 386, 399, 406, 419, 424, 425, 427, 428, 429, 432, 438, 453, 458, 459, 460, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "failur": [5, 7, 8, 9, 10, 11, 13, 15, 18, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 39, 41, 44, 46, 48, 50, 53, 54, 57, 58, 59, 61, 63, 65, 67, 72, 102, 103, 111, 119, 130, 173, 174, 180, 184, 188, 190, 210, 240, 266, 275, 279, 280, 290, 293, 299, 313, 319, 329, 331, 334, 338, 341, 359, 363, 365, 386, 387, 420, 422, 423, 424, 427, 428, 433, 440, 460, 463, 465, 466, 468, 470, 472, 473, 474, 475, 476, 477, 478], "left": [5, 15, 32, 33, 46, 62, 63, 71, 72, 74, 86, 91, 94, 100, 103, 104, 106, 119, 123, 133, 138, 143, 144, 146, 151, 152, 154, 157, 164, 173, 174, 178, 180, 183, 187, 188, 190, 193, 209, 213, 222, 223, 225, 232, 244, 247, 264, 265, 266, 268, 278, 280, 288, 289, 290, 291, 292, 294, 299, 311, 316, 321, 328, 334, 337, 338, 341, 342, 345, 361, 362, 366, 372, 373, 381, 383, 384, 385, 387, 392, 397, 408, 424, 425, 427, 429, 432, 433, 437, 438, 439, 443, 444, 445, 446, 449, 453, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 475, 477, 478], "untouch": [5, 63, 178, 453], "posit": [5, 7, 10, 13, 15, 20, 23, 25, 34, 37, 46, 57, 59, 60, 62, 63, 67, 72, 75, 83, 84, 86, 91, 93, 94, 96, 98, 100, 103, 104, 105, 106, 112, 114, 117, 118, 119, 123, 130, 133, 135, 136, 137, 141, 144, 146, 150, 151, 152, 155, 157, 159, 160, 163, 172, 173, 174, 178, 180, 183, 187, 188, 190, 208, 210, 212, 218, 219, 222, 223, 231, 232, 233, 234, 244, 252, 255, 258, 259, 263, 264, 267, 272, 275, 279, 280, 281, 286, 288, 290, 293, 296, 297, 308, 311, 313, 315, 317, 318, 322, 325, 329, 334, 337, 338, 340, 341, 342, 344, 345, 346, 349, 355, 359, 360, 362, 363, 366, 369, 373, 375, 378, 379, 382, 383, 385, 386, 387, 391, 392, 395, 396, 398, 405, 407, 410, 412, 418, 419, 424, 427, 428, 437, 439, 442, 443, 446, 449, 459, 462, 463, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479], "local": [5, 12, 13, 16, 18, 30, 31, 33, 34, 48, 52, 58, 65, 67, 72, 77, 78, 83, 86, 87, 88, 91, 94, 98, 99, 100, 103, 105, 106, 108, 111, 117, 123, 137, 141, 147, 148, 149, 154, 157, 161, 164, 167, 172, 173, 174, 180, 183, 187, 188, 189, 190, 197, 206, 210, 222, 223, 239, 242, 243, 244, 245, 247, 251, 252, 255, 256, 258, 264, 266, 269, 275, 280, 283, 285, 290, 291, 293, 294, 296, 305, 310, 311, 312, 316, 317, 329, 331, 332, 334, 338, 341, 342, 345, 348, 349, 352, 359, 363, 376, 377, 378, 380, 383, 385, 387, 392, 395, 402, 406, 410, 411, 412, 413, 416, 419, 422, 424, 425, 426, 427, 429, 433, 434, 435, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 472, 473, 474, 478, 481], "pyarg_vapars": [5, 56], "va_list": [5, 9, 18, 23, 63, 463, 475], "varg": [5, 9, 23, 63], "ident": [5, 9, 18, 25, 45, 48, 63, 67, 72, 83, 85, 92, 93, 94, 97, 99, 100, 104, 119, 123, 137, 139, 151, 156, 178, 180, 183, 187, 190, 193, 198, 202, 204, 212, 213, 222, 227, 242, 252, 258, 264, 266, 268, 278, 280, 288, 290, 302, 305, 316, 325, 329, 330, 334, 337, 338, 340, 341, 344, 349, 353, 362, 363, 372, 375, 382, 386, 387, 396, 399, 407, 410, 422, 425, 428, 434, 437, 438, 441, 461, 462, 464, 465, 469, 472, 476, 477, 478], "rather": [5, 7, 10, 15, 22, 23, 29, 32, 39, 40, 44, 48, 54, 56, 57, 60, 63, 71, 72, 73, 74, 75, 82, 83, 85, 86, 93, 98, 99, 100, 108, 111, 117, 119, 123, 124, 134, 137, 146, 148, 151, 152, 155, 157, 160, 163, 166, 173, 174, 178, 180, 183, 188, 205, 206, 207, 208, 210, 222, 223, 224, 226, 232, 240, 244, 245, 252, 255, 258, 264, 265, 266, 267, 268, 272, 280, 288, 289, 290, 292, 293, 297, 299, 300, 309, 310, 311, 313, 316, 321, 328, 329, 331, 332, 334, 337, 338, 340, 341, 342, 345, 349, 352, 355, 359, 363, 364, 366, 369, 372, 373, 375, 381, 383, 385, 386, 387, 391, 392, 396, 397, 399, 404, 407, 410, 416, 419, 420, 422, 424, 425, 427, 429, 431, 433, 436, 437, 438, 439, 440, 443, 449, 452, 453, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "kw": [5, 62, 65, 173, 186, 194, 200, 202, 205, 222, 259, 349, 359, 369, 371, 372, 373, 386, 387, 397, 438, 459, 462, 465, 472], "empti": [5, 10, 13, 17, 22, 24, 30, 32, 33, 34, 37, 44, 48, 54, 58, 72, 75, 83, 84, 86, 87, 94, 103, 104, 111, 117, 118, 119, 123, 130, 131, 133, 135, 136, 140, 141, 146, 147, 148, 150, 152, 154, 155, 157, 164, 167, 172, 178, 180, 181, 185, 187, 188, 190, 193, 194, 200, 202, 204, 205, 206, 209, 210, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 242, 247, 252, 255, 256, 258, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 280, 283, 285, 289, 290, 291, 293, 296, 300, 306, 311, 313, 315, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 337, 338, 340, 341, 342, 344, 345, 349, 355, 356, 359, 361, 362, 366, 370, 372, 373, 377, 379, 381, 382, 383, 384, 385, 386, 391, 392, 396, 397, 402, 404, 405, 407, 408, 410, 416, 417, 419, 420, 421, 424, 425, 427, 428, 429, 432, 433, 437, 439, 443, 445, 446, 447, 452, 453, 458, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "denot": [5, 45, 60, 67, 79, 84, 103, 164, 188, 241, 242, 252, 256, 290, 319, 338, 341, 366, 383, 392, 424, 425, 427, 428, 429, 432, 437, 438, 459, 465, 477], "6": [5, 13, 20, 23, 25, 32, 33, 34, 41, 51, 55, 58, 62, 63, 67, 71, 72, 74, 75, 77, 79, 84, 85, 91, 93, 94, 96, 97, 100, 102, 103, 106, 107, 110, 123, 128, 129, 136, 143, 146, 147, 151, 154, 155, 157, 158, 160, 163, 164, 166, 172, 173, 174, 180, 183, 187, 188, 190, 191, 194, 198, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 215, 218, 219, 220, 222, 231, 232, 233, 238, 239, 242, 244, 245, 246, 247, 248, 252, 256, 258, 259, 264, 266, 267, 272, 275, 280, 281, 290, 291, 293, 294, 296, 297, 299, 303, 304, 305, 307, 315, 316, 317, 318, 319, 323, 325, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 352, 355, 356, 357, 359, 363, 364, 366, 372, 373, 374, 378, 379, 382, 383, 385, 386, 387, 391, 392, 393, 396, 397, 399, 402, 410, 416, 418, 419, 421, 425, 427, 428, 429, 432, 438, 439, 441, 443, 446, 448, 449, 450, 452, 453, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 481], "pyarg_vaparsetupleandkeyword": [5, 56, 463], "pyarg_validatekeywordargu": [5, 56], "kei": [5, 10, 22, 32, 34, 39, 48, 53, 54, 62, 67, 83, 84, 85, 86, 91, 92, 93, 94, 98, 99, 100, 102, 109, 119, 123, 126, 139, 144, 148, 152, 154, 157, 158, 161, 164, 167, 171, 172, 174, 178, 180, 181, 183, 186, 188, 190, 193, 194, 198, 200, 202, 203, 209, 210, 220, 222, 223, 224, 227, 229, 233, 241, 242, 245, 247, 248, 251, 252, 256, 258, 259, 263, 264, 265, 267, 268, 269, 276, 279, 284, 285, 288, 290, 292, 294, 296, 300, 301, 302, 303, 304, 305, 309, 316, 317, 326, 327, 330, 331, 337, 341, 342, 343, 349, 352, 355, 359, 365, 366, 373, 381, 382, 383, 386, 387, 391, 392, 396, 399, 402, 404, 410, 413, 414, 416, 418, 422, 424, 425, 427, 428, 429, 433, 437, 438, 439, 443, 444, 445, 449, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "dictionari": [5, 10, 16, 21, 23, 27, 30, 32, 41, 44, 48, 52, 57, 58, 60, 62, 63, 65, 67, 72, 74, 75, 83, 84, 86, 87, 92, 93, 94, 99, 103, 105, 107, 109, 112, 115, 117, 119, 141, 144, 148, 154, 155, 157, 164, 168, 170, 172, 173, 178, 180, 181, 183, 184, 188, 190, 192, 193, 197, 198, 199, 200, 202, 203, 204, 209, 210, 213, 220, 222, 223, 224, 227, 229, 233, 236, 239, 241, 242, 247, 248, 252, 256, 258, 259, 263, 264, 266, 267, 268, 269, 271, 273, 276, 280, 283, 284, 285, 288, 289, 290, 294, 296, 297, 300, 301, 302, 303, 304, 305, 309, 311, 316, 321, 322, 323, 327, 332, 337, 338, 342, 343, 345, 349, 352, 355, 359, 362, 366, 372, 373, 374, 377, 378, 381, 383, 385, 386, 390, 391, 392, 397, 399, 404, 410, 413, 414, 421, 424, 426, 428, 433, 436, 437, 438, 442, 443, 449, 452, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 474, 475, 476, 477, 478, 481], "latter": [5, 7, 23, 41, 72, 84, 86, 102, 103, 104, 107, 117, 123, 130, 135, 141, 164, 168, 180, 181, 193, 198, 202, 206, 212, 222, 233, 244, 247, 252, 255, 256, 264, 265, 273, 289, 290, 293, 296, 305, 329, 334, 337, 341, 344, 348, 357, 366, 372, 373, 381, 383, 385, 395, 397, 398, 424, 425, 426, 427, 428, 429, 433, 434, 437, 439, 448, 458, 462, 467, 469, 470, 472, 473, 474, 477, 479], "deconstruct": 5, "meth_oldarg": [5, 461, 467], "modifi": [5, 9, 22, 23, 27, 32, 33, 51, 60, 62, 63, 65, 67, 72, 75, 76, 77, 78, 79, 86, 87, 88, 93, 94, 98, 99, 100, 105, 106, 107, 109, 113, 117, 119, 134, 136, 138, 155, 157, 164, 170, 173, 174, 182, 183, 188, 190, 193, 194, 195, 198, 200, 202, 205, 208, 212, 213, 222, 229, 242, 244, 252, 255, 263, 264, 265, 266, 268, 270, 271, 278, 280, 281, 289, 290, 293, 294, 296, 299, 303, 304, 305, 311, 316, 318, 321, 325, 326, 327, 328, 329, 332, 334, 335, 337, 341, 342, 345, 349, 350, 352, 355, 359, 362, 366, 369, 372, 373, 375, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 397, 402, 404, 406, 407, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 433, 437, 438, 439, 443, 447, 450, 452, 455, 456, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478], "purpos": [5, 7, 17, 18, 30, 32, 34, 36, 41, 56, 62, 67, 71, 72, 74, 77, 79, 83, 84, 88, 92, 93, 99, 100, 103, 105, 107, 110, 111, 119, 125, 140, 151, 155, 157, 164, 165, 166, 167, 170, 172, 173, 174, 178, 180, 183, 187, 190, 193, 199, 202, 203, 210, 223, 224, 227, 232, 233, 242, 247, 250, 252, 258, 265, 271, 280, 281, 289, 290, 292, 296, 304, 305, 315, 316, 320, 322, 324, 331, 334, 337, 338, 344, 349, 355, 362, 366, 373, 381, 382, 383, 385, 386, 391, 397, 404, 407, 410, 411, 418, 422, 423, 424, 426, 427, 428, 429, 432, 437, 438, 439, 440, 443, 447, 452, 453, 458, 459, 465, 466, 467, 468, 470, 472, 474, 475, 476, 477, 478], "conveni": [5, 7, 20, 23, 24, 28, 30, 32, 41, 44, 62, 67, 72, 74, 77, 83, 84, 85, 99, 100, 105, 106, 107, 117, 121, 123, 136, 143, 147, 148, 154, 155, 157, 164, 178, 180, 183, 186, 188, 192, 193, 195, 198, 199, 200, 202, 203, 204, 205, 206, 222, 223, 227, 229, 231, 232, 240, 244, 248, 251, 252, 253, 255, 264, 265, 267, 268, 272, 273, 280, 281, 289, 292, 294, 296, 305, 323, 328, 332, 334, 338, 340, 341, 345, 346, 352, 355, 358, 359, 361, 363, 364, 366, 370, 372, 381, 383, 385, 386, 387, 396, 398, 404, 406, 407, 410, 411, 413, 418, 424, 425, 429, 432, 433, 437, 438, 440, 447, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478], "decompos": [5, 79, 94, 384, 391], "continu": [5, 23, 28, 34, 35, 58, 60, 67, 72, 77, 78, 79, 84, 86, 92, 94, 98, 99, 106, 107, 110, 112, 113, 115, 119, 123, 136, 151, 152, 155, 166, 174, 178, 190, 193, 196, 197, 199, 204, 208, 238, 239, 242, 245, 247, 248, 258, 264, 268, 279, 289, 290, 291, 293, 294, 311, 315, 316, 329, 330, 334, 335, 338, 340, 341, 351, 355, 363, 374, 381, 385, 387, 392, 397, 412, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 440, 442, 444, 445, 446, 449, 452, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 477, 478], "pyarg_unpacktupl": [5, 56, 57, 461], "min": [5, 86, 94, 100, 103, 104, 157, 163, 180, 183, 222, 223, 233, 258, 272, 313, 340, 341, 349, 364, 427, 437, 447, 464, 466, 474], "max": [5, 86, 94, 104, 117, 138, 151, 157, 163, 180, 183, 222, 223, 233, 240, 241, 258, 272, 315, 337, 338, 340, 341, 349, 397, 424, 427, 437, 447, 464, 466, 471, 472, 474, 478], "simpler": [5, 62, 67, 73, 77, 88, 91, 100, 103, 105, 117, 148, 157, 222, 232, 280, 316, 341, 342, 366, 386, 399, 408, 410, 412, 429, 436, 439, 440, 458, 459, 460, 461, 462, 464, 466, 473, 474, 477, 481], "retriev": [5, 11, 23, 27, 32, 35, 38, 44, 48, 53, 55, 60, 62, 67, 71, 72, 74, 77, 83, 84, 86, 91, 92, 94, 103, 107, 131, 136, 148, 157, 163, 164, 168, 173, 174, 178, 181, 186, 193, 200, 204, 205, 220, 222, 223, 231, 238, 239, 240, 244, 245, 251, 255, 262, 263, 265, 268, 280, 286, 288, 290, 293, 296, 299, 301, 302, 312, 313, 316, 319, 325, 327, 329, 337, 338, 341, 342, 349, 357, 362, 369, 379, 383, 386, 392, 399, 402, 406, 410, 423, 424, 425, 427, 433, 439, 448, 451, 452, 453, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 473, 474, 475, 476, 478, 479], "meth_vararg": [5, 57, 71, 72, 461], "tabl": [5, 7, 10, 30, 32, 34, 41, 44, 57, 58, 63, 67, 73, 74, 76, 77, 79, 92, 94, 99, 102, 103, 106, 107, 144, 147, 155, 173, 174, 180, 182, 183, 187, 192, 200, 209, 214, 222, 232, 244, 247, 251, 254, 255, 258, 259, 261, 263, 264, 273, 280, 288, 293, 295, 316, 325, 335, 337, 338, 341, 343, 344, 349, 355, 363, 366, 383, 385, 400, 402, 406, 407, 419, 423, 427, 438, 443, 444, 449, 452, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 479], "least": [5, 10, 28, 33, 34, 40, 48, 51, 60, 62, 65, 71, 72, 75, 77, 83, 84, 92, 97, 100, 102, 103, 104, 106, 108, 110, 112, 117, 133, 146, 150, 151, 155, 157, 163, 172, 173, 174, 180, 183, 187, 190, 191, 197, 200, 205, 207, 212, 218, 222, 223, 229, 231, 239, 245, 255, 258, 266, 267, 272, 289, 290, 303, 305, 306, 315, 323, 325, 329, 330, 332, 334, 338, 340, 341, 342, 344, 345, 349, 352, 356, 357, 358, 359, 362, 363, 364, 375, 377, 379, 383, 385, 386, 392, 395, 403, 406, 419, 421, 423, 424, 425, 427, 428, 431, 433, 436, 437, 438, 439, 440, 441, 445, 458, 462, 465, 466, 467, 469, 470, 471, 473, 476, 477, 479], "equal": [5, 7, 25, 32, 33, 34, 36, 41, 53, 58, 62, 63, 65, 67, 74, 77, 84, 86, 88, 93, 94, 100, 105, 109, 113, 117, 119, 129, 130, 131, 137, 138, 144, 146, 151, 157, 163, 167, 173, 174, 178, 180, 183, 187, 190, 192, 193, 199, 205, 213, 218, 222, 223, 224, 225, 233, 238, 240, 255, 256, 258, 259, 263, 269, 272, 275, 281, 286, 288, 290, 292, 294, 305, 313, 315, 316, 323, 328, 331, 334, 337, 338, 340, 341, 343, 344, 349, 359, 361, 362, 373, 374, 375, 379, 381, 383, 384, 385, 386, 387, 397, 399, 405, 407, 409, 410, 420, 424, 425, 427, 428, 429, 432, 433, 438, 439, 441, 443, 446, 447, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 478, 479], "wrong": [5, 16, 32, 41, 72, 83, 84, 86, 98, 102, 103, 107, 117, 122, 141, 173, 180, 190, 209, 210, 245, 272, 289, 290, 292, 293, 332, 337, 344, 349, 355, 363, 385, 386, 392, 404, 425, 438, 446, 447, 460, 462, 463, 464, 465, 469, 470, 471, 472, 474], "element": [5, 7, 13, 32, 34, 41, 48, 53, 54, 58, 60, 62, 63, 67, 77, 83, 84, 86, 100, 103, 105, 106, 114, 117, 118, 119, 130, 136, 138, 144, 148, 152, 157, 158, 169, 172, 173, 175, 178, 183, 187, 188, 190, 192, 193, 200, 202, 204, 206, 210, 217, 220, 222, 223, 225, 229, 233, 237, 239, 242, 252, 258, 259, 264, 269, 270, 272, 280, 289, 290, 291, 293, 301, 311, 313, 315, 316, 319, 323, 329, 332, 334, 340, 341, 342, 344, 345, 349, 363, 366, 372, 373, 375, 378, 381, 382, 383, 385, 391, 399, 405, 408, 409, 412, 413, 414, 416, 417, 422, 424, 425, 426, 427, 428, 437, 438, 439, 443, 446, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 478, 479], "_weakref": [5, 479], "helper": [5, 32, 50, 67, 85, 92, 113, 125, 161, 166, 173, 184, 193, 202, 215, 232, 234, 247, 251, 254, 255, 261, 264, 286, 296, 316, 329, 338, 360, 364, 378, 381, 385, 387, 392, 410, 464, 465, 469, 470, 473, 475, 476], "weak": [5, 16, 62, 67, 72, 73, 84, 136, 179, 210, 223, 232, 251, 338, 341, 365, 385, 425, 442, 461, 464, 466, 469, 471, 474, 481], "static": [5, 10, 20, 28, 32, 34, 41, 44, 49, 51, 57, 59, 61, 63, 67, 71, 72, 74, 75, 76, 77, 78, 79, 86, 100, 103, 110, 180, 186, 188, 212, 222, 223, 247, 253, 296, 312, 316, 341, 362, 366, 383, 386, 387, 424, 429, 433, 437, 453, 460, 461, 462, 463, 466, 468, 469, 472, 475, 476, 477, 478, 479], "weakref_ref": 5, "self": [5, 10, 22, 28, 43, 51, 57, 60, 62, 67, 71, 72, 74, 75, 78, 83, 86, 92, 93, 94, 96, 98, 100, 101, 104, 105, 113, 117, 119, 123, 129, 130, 139, 141, 145, 152, 157, 158, 166, 169, 173, 178, 180, 183, 188, 200, 202, 208, 210, 213, 218, 220, 222, 223, 224, 227, 229, 237, 239, 240, 245, 247, 250, 252, 256, 258, 259, 271, 280, 285, 286, 289, 290, 293, 294, 296, 302, 315, 317, 318, 330, 332, 334, 335, 337, 341, 342, 355, 356, 359, 366, 369, 372, 378, 379, 381, 382, 383, 385, 386, 387, 392, 396, 399, 407, 410, 414, 416, 417, 418, 424, 425, 429, 437, 438, 442, 443, 448, 449, 450, 452, 459, 460, 461, 462, 464, 465, 466, 468, 471, 472, 473, 474, 475, 476, 477, 479], "callback": [5, 11, 13, 14, 22, 27, 28, 32, 60, 62, 66, 67, 72, 80, 86, 92, 98, 115, 117, 120, 122, 126, 127, 129, 130, 133, 136, 166, 220, 224, 252, 278, 280, 296, 305, 306, 311, 312, 313, 317, 326, 329, 337, 338, 339, 349, 356, 364, 366, 368, 373, 382, 383, 399, 409, 410, 412, 418, 425, 449, 464, 465, 469, 470, 471, 472, 473, 474, 476, 477, 478, 481], "ref": [5, 33, 34, 62, 66, 77, 174, 399, 452, 453, 460, 466, 469, 474, 478], "pyweakref_newref": [5, 56, 66], "py_buildvalu": [5, 10, 34, 56, 58, 59, 67, 72, 85, 464, 469, 478], "base": [5, 14, 18, 19, 23, 25, 29, 30, 32, 33, 34, 38, 42, 44, 46, 47, 48, 49, 60, 62, 63, 67, 72, 74, 75, 77, 82, 83, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 107, 108, 115, 117, 119, 120, 123, 126, 127, 129, 133, 136, 140, 141, 142, 143, 144, 147, 151, 157, 160, 161, 164, 166, 170, 173, 177, 178, 179, 180, 183, 184, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 208, 218, 222, 223, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 244, 245, 248, 251, 252, 253, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 277, 278, 279, 281, 285, 287, 289, 290, 291, 293, 295, 296, 299, 300, 302, 305, 309, 311, 312, 316, 317, 318, 321, 324, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 351, 352, 355, 357, 359, 363, 366, 370, 372, 373, 379, 382, 383, 384, 385, 386, 387, 390, 391, 392, 395, 396, 397, 399, 400, 405, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 430, 432, 437, 439, 440, 441, 447, 448, 449, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 481], "those": [5, 7, 23, 32, 34, 38, 58, 62, 63, 65, 66, 71, 72, 73, 75, 76, 77, 79, 83, 84, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 111, 113, 117, 119, 123, 130, 135, 136, 148, 151, 155, 157, 158, 164, 166, 169, 172, 173, 174, 175, 180, 183, 187, 188, 190, 191, 193, 199, 200, 201, 202, 205, 207, 208, 210, 213, 217, 220, 222, 223, 224, 225, 229, 231, 239, 241, 244, 247, 248, 249, 250, 252, 255, 256, 258, 259, 263, 264, 265, 266, 268, 272, 273, 280, 281, 286, 288, 289, 290, 292, 293, 294, 296, 299, 305, 307, 308, 311, 313, 315, 316, 319, 321, 322, 323, 326, 327, 328, 329, 330, 332, 334, 338, 340, 341, 349, 350, 352, 355, 357, 358, 359, 362, 363, 366, 372, 373, 378, 379, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 399, 402, 407, 409, 410, 412, 413, 419, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 452, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "famili": [5, 16, 32, 41, 47, 53, 67, 94, 106, 123, 128, 133, 139, 161, 197, 209, 232, 268, 280, 290, 295, 335, 353, 359, 366, 369, 407, 452, 458, 462, 463, 464, 466, 473, 476, 477, 478], "exactli": [5, 7, 9, 10, 11, 24, 28, 34, 38, 63, 65, 72, 74, 75, 77, 83, 84, 86, 91, 97, 98, 100, 103, 105, 109, 117, 118, 123, 130, 133, 144, 149, 166, 173, 180, 183, 188, 190, 193, 195, 200, 202, 204, 218, 222, 225, 233, 240, 242, 252, 264, 265, 266, 272, 280, 289, 290, 291, 292, 311, 315, 316, 319, 325, 332, 334, 335, 338, 341, 342, 343, 344, 345, 357, 358, 361, 362, 375, 378, 383, 385, 386, 387, 395, 399, 408, 419, 421, 424, 427, 432, 433, 437, 438, 441, 449, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 473], "whatev": [5, 30, 72, 77, 82, 83, 84, 87, 99, 100, 103, 117, 148, 157, 173, 192, 197, 205, 222, 247, 264, 265, 289, 290, 294, 308, 316, 341, 349, 356, 357, 359, 362, 383, 386, 387, 392, 404, 427, 429, 440, 447, 451, 459, 460, 461, 462, 463, 466, 469], "forc": [5, 32, 33, 62, 67, 72, 77, 83, 84, 86, 94, 97, 102, 123, 130, 149, 156, 160, 174, 178, 180, 181, 183, 190, 232, 237, 245, 255, 264, 279, 280, 285, 290, 305, 306, 308, 323, 330, 342, 344, 345, 349, 357, 359, 363, 386, 399, 404, 425, 429, 440, 443, 452, 466, 471, 473, 474, 475, 476, 478, 479], "suppli": [5, 18, 20, 28, 32, 62, 74, 84, 86, 91, 92, 93, 94, 103, 106, 107, 117, 119, 136, 143, 148, 149, 157, 158, 173, 174, 175, 178, 180, 183, 188, 190, 212, 222, 223, 232, 234, 240, 244, 245, 247, 248, 250, 252, 256, 258, 264, 266, 280, 281, 285, 289, 290, 292, 293, 294, 299, 305, 311, 315, 321, 323, 325, 334, 337, 338, 340, 341, 345, 352, 357, 359, 362, 373, 378, 381, 383, 385, 391, 392, 396, 397, 399, 404, 412, 416, 418, 419, 422, 423, 424, 425, 427, 429, 433, 438, 441, 448, 449, 450, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 468, 471, 472, 473, 474, 476], "never": [5, 10, 13, 18, 22, 23, 27, 28, 32, 33, 34, 41, 58, 59, 60, 62, 67, 72, 75, 84, 86, 88, 91, 94, 99, 100, 102, 103, 107, 117, 125, 126, 129, 130, 131, 135, 136, 138, 141, 144, 148, 155, 160, 163, 164, 166, 167, 172, 173, 174, 178, 180, 183, 187, 193, 196, 202, 210, 222, 223, 227, 233, 237, 239, 240, 242, 244, 247, 252, 255, 256, 259, 262, 263, 264, 266, 271, 275, 280, 289, 290, 291, 293, 294, 296, 311, 313, 315, 316, 319, 321, 325, 329, 331, 335, 337, 338, 341, 344, 345, 355, 356, 359, 362, 366, 382, 383, 386, 391, 392, 397, 399, 400, 404, 407, 410, 412, 419, 422, 424, 425, 427, 429, 432, 433, 437, 438, 441, 447, 452, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "invok": [5, 13, 20, 23, 27, 30, 34, 51, 57, 58, 62, 63, 67, 74, 83, 84, 92, 94, 96, 97, 100, 102, 103, 106, 111, 117, 123, 127, 135, 141, 148, 152, 164, 166, 173, 178, 180, 188, 190, 207, 222, 223, 224, 228, 240, 242, 244, 252, 263, 264, 265, 280, 289, 290, 291, 294, 296, 297, 299, 305, 308, 310, 316, 317, 321, 329, 332, 335, 337, 338, 341, 345, 349, 356, 359, 362, 364, 366, 368, 370, 373, 374, 377, 383, 385, 391, 396, 399, 404, 410, 411, 412, 413, 416, 417, 419, 420, 422, 424, 426, 429, 432, 434, 437, 442, 444, 446, 448, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 473, 474, 475, 477, 479], "malloc": [5, 7, 33, 41, 72, 77, 210, 279, 290, 421, 452, 459, 460, 462, 464, 474, 475, 476], "onc": [5, 7, 13, 22, 23, 24, 28, 32, 33, 34, 51, 55, 56, 58, 60, 62, 71, 72, 74, 75, 77, 83, 84, 85, 88, 91, 93, 94, 98, 99, 100, 102, 103, 105, 106, 113, 114, 117, 123, 126, 129, 130, 132, 135, 136, 137, 146, 148, 152, 155, 156, 157, 160, 163, 164, 166, 183, 185, 187, 190, 193, 202, 208, 210, 215, 220, 223, 227, 229, 231, 232, 233, 237, 241, 242, 244, 247, 248, 252, 255, 258, 264, 265, 266, 267, 268, 280, 281, 285, 289, 290, 292, 296, 303, 305, 311, 313, 316, 317, 325, 326, 329, 330, 331, 334, 335, 337, 338, 341, 344, 350, 351, 355, 359, 362, 364, 366, 379, 381, 383, 385, 386, 387, 392, 396, 397, 399, 400, 404, 407, 408, 410, 412, 413, 421, 424, 425, 427, 428, 429, 433, 436, 437, 438, 447, 450, 451, 452, 453, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 477, 478, 479], "space": [5, 18, 32, 41, 48, 58, 60, 62, 63, 71, 72, 77, 84, 85, 86, 91, 92, 94, 98, 99, 103, 104, 106, 112, 117, 119, 140, 143, 147, 152, 155, 157, 158, 159, 164, 172, 174, 175, 181, 183, 187, 188, 190, 195, 196, 198, 199, 209, 210, 218, 222, 223, 239, 244, 245, 252, 256, 258, 259, 263, 264, 265, 280, 281, 289, 290, 294, 297, 300, 311, 314, 315, 316, 318, 319, 328, 329, 330, 331, 332, 334, 341, 342, 343, 345, 359, 361, 362, 363, 364, 366, 369, 372, 373, 375, 379, 381, 391, 392, 394, 396, 404, 407, 410, 421, 423, 425, 429, 431, 432, 438, 443, 445, 446, 449, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 479], "tab": [5, 65, 67, 76, 119, 143, 152, 172, 174, 175, 187, 190, 195, 199, 210, 222, 239, 244, 252, 259, 294, 314, 316, 317, 320, 328, 331, 341, 342, 345, 361, 365, 372, 391, 400, 416, 432, 438, 442, 446, 452, 459, 464, 466, 469, 471, 473, 474, 476, 477, 478, 479], "comma": [5, 33, 67, 93, 109, 148, 157, 172, 183, 190, 239, 245, 263, 264, 265, 268, 289, 316, 341, 342, 359, 374, 377, 392, 397, 424, 425, 427, 428, 433, 438, 439, 446, 448, 452, 463, 464, 465, 466, 467, 469, 471, 474, 477, 478, 481], "ignor": [5, 14, 18, 22, 23, 24, 32, 33, 34, 38, 39, 46, 48, 58, 60, 62, 63, 65, 72, 75, 76, 86, 99, 103, 106, 107, 112, 119, 130, 133, 134, 136, 140, 141, 146, 147, 148, 152, 155, 156, 157, 160, 163, 164, 166, 169, 172, 173, 174, 178, 180, 183, 185, 187, 188, 190, 193, 196, 197, 205, 206, 210, 212, 213, 215, 220, 222, 223, 224, 226, 227, 233, 239, 240, 244, 245, 246, 247, 248, 252, 255, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 273, 280, 281, 285, 290, 291, 293, 294, 296, 299, 301, 305, 311, 313, 315, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 337, 338, 341, 342, 344, 345, 349, 351, 353, 355, 357, 359, 361, 362, 363, 369, 370, 373, 375, 377, 378, 379, 383, 385, 386, 391, 392, 395, 396, 397, 402, 404, 407, 410, 412, 413, 418, 419, 422, 424, 425, 428, 429, 432, 434, 437, 438, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "within": [5, 7, 22, 32, 41, 48, 53, 67, 72, 75, 77, 84, 86, 91, 93, 94, 96, 97, 98, 100, 102, 103, 104, 108, 111, 113, 117, 118, 119, 132, 136, 137, 141, 151, 154, 155, 160, 164, 166, 173, 174, 180, 183, 187, 188, 190, 192, 200, 213, 215, 222, 226, 227, 244, 245, 247, 248, 249, 250, 252, 258, 264, 267, 268, 272, 280, 281, 282, 291, 294, 299, 304, 305, 309, 310, 313, 315, 316, 318, 321, 328, 329, 334, 335, 337, 340, 341, 342, 344, 345, 348, 349, 350, 351, 359, 361, 364, 366, 368, 373, 381, 383, 385, 386, 391, 392, 396, 397, 407, 408, 410, 417, 419, 420, 423, 424, 425, 426, 427, 429, 432, 433, 437, 438, 439, 443, 446, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "make": [5, 10, 11, 14, 23, 32, 34, 38, 44, 50, 56, 58, 61, 62, 63, 67, 71, 72, 74, 75, 77, 79, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 123, 130, 135, 136, 137, 138, 146, 148, 152, 154, 155, 157, 158, 160, 164, 166, 167, 168, 172, 173, 174, 176, 178, 180, 183, 185, 187, 188, 190, 193, 194, 197, 202, 203, 206, 208, 209, 210, 215, 218, 219, 222, 223, 227, 229, 231, 232, 233, 234, 239, 242, 244, 247, 249, 252, 254, 255, 256, 258, 263, 264, 265, 266, 267, 268, 272, 276, 278, 280, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 299, 305, 309, 313, 315, 319, 323, 325, 326, 327, 328, 330, 331, 334, 335, 337, 338, 340, 341, 342, 344, 346, 349, 350, 352, 355, 357, 359, 360, 361, 362, 364, 366, 367, 370, 373, 375, 377, 378, 382, 383, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 404, 408, 409, 410, 413, 418, 419, 421, 423, 424, 425, 427, 429, 431, 432, 433, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 477, 478, 479, 481], "tad": 5, "readabl": [5, 47, 77, 84, 86, 91, 99, 100, 103, 104, 114, 117, 130, 146, 148, 152, 157, 164, 173, 187, 188, 195, 202, 227, 240, 242, 255, 264, 265, 271, 280, 285, 290, 296, 300, 301, 304, 307, 316, 330, 335, 338, 339, 341, 344, 345, 346, 357, 366, 374, 376, 386, 398, 411, 423, 432, 436, 437, 438, 439, 443, 446, 447, 449, 452, 460, 461, 463, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478], "wchar_t": [5, 16, 32, 33, 58, 65, 67, 71, 72, 118, 173, 470, 471, 477, 479], "uc": [5, 349, 461, 473], "increment": [5, 32, 33, 34, 41, 62, 67, 72, 75, 79, 84, 93, 94, 100, 115, 116, 119, 135, 142, 157, 183, 188, 204, 208, 267, 280, 289, 290, 341, 354, 362, 363, 366, 373, 383, 408, 410, 438, 459, 461, 462, 463, 464, 466, 469, 470, 472, 473], "caus": [5, 9, 16, 18, 23, 32, 34, 41, 46, 50, 51, 56, 58, 60, 62, 63, 65, 72, 74, 75, 76, 77, 80, 84, 85, 94, 99, 100, 103, 107, 109, 111, 112, 117, 119, 123, 130, 132, 135, 136, 148, 149, 152, 155, 156, 157, 160, 164, 166, 168, 172, 173, 174, 183, 185, 187, 188, 190, 202, 205, 208, 209, 210, 222, 224, 225, 237, 239, 242, 244, 245, 247, 252, 255, 259, 263, 264, 266, 268, 272, 273, 279, 280, 281, 290, 294, 296, 299, 300, 305, 310, 311, 316, 324, 325, 327, 330, 331, 334, 337, 338, 340, 341, 342, 349, 350, 353, 355, 357, 359, 361, 362, 363, 364, 373, 383, 385, 386, 387, 390, 392, 397, 399, 402, 404, 407, 408, 412, 416, 419, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 438, 440, 443, 445, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "produc": [5, 7, 10, 22, 23, 24, 25, 33, 34, 38, 58, 62, 75, 76, 79, 83, 84, 86, 87, 88, 91, 94, 99, 100, 101, 103, 104, 106, 117, 119, 136, 146, 148, 155, 157, 158, 160, 164, 172, 173, 174, 180, 183, 184, 187, 190, 191, 193, 194, 198, 199, 200, 202, 205, 210, 211, 220, 222, 225, 227, 228, 231, 232, 233, 245, 255, 258, 259, 264, 267, 273, 280, 285, 290, 296, 299, 302, 305, 310, 313, 315, 316, 318, 338, 340, 341, 342, 344, 345, 349, 355, 362, 374, 375, 377, 381, 385, 391, 392, 394, 403, 404, 408, 409, 411, 412, 413, 418, 419, 421, 425, 427, 429, 432, 438, 440, 441, 443, 446, 449, 450, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479], "therefor": [5, 10, 23, 32, 34, 41, 47, 48, 62, 72, 74, 75, 77, 83, 84, 86, 88, 91, 94, 99, 100, 101, 102, 103, 106, 113, 117, 119, 135, 136, 143, 148, 155, 170, 173, 178, 180, 205, 210, 211, 212, 222, 224, 229, 240, 247, 250, 255, 259, 263, 266, 271, 278, 280, 290, 291, 296, 310, 316, 327, 329, 330, 334, 338, 341, 349, 355, 357, 362, 372, 383, 386, 397, 410, 411, 418, 419, 421, 424, 425, 427, 431, 432, 437, 440, 441, 446, 447, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 476, 477], "systemerror": [5, 23, 27, 44, 48, 54, 59, 63, 210, 440, 447, 471, 476], "constructor": [5, 18, 23, 28, 52, 54, 62, 63, 67, 72, 78, 86, 92, 93, 94, 97, 99, 100, 102, 109, 117, 119, 123, 132, 146, 147, 154, 155, 157, 158, 161, 164, 169, 171, 172, 173, 178, 180, 183, 187, 190, 195, 198, 199, 200, 203, 204, 205, 210, 215, 218, 220, 222, 223, 231, 234, 239, 240, 243, 245, 255, 256, 258, 259, 264, 265, 267, 268, 275, 280, 288, 289, 296, 302, 304, 305, 313, 318, 322, 324, 325, 327, 328, 332, 334, 335, 338, 341, 342, 348, 355, 356, 357, 359, 361, 362, 364, 366, 370, 381, 382, 383, 385, 386, 387, 392, 399, 400, 404, 410, 417, 419, 420, 422, 425, 427, 438, 439, 440, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "compat": [5, 23, 24, 32, 33, 41, 47, 56, 58, 60, 62, 63, 65, 67, 74, 75, 78, 82, 83, 86, 91, 96, 98, 99, 100, 103, 106, 107, 116, 117, 118, 123, 125, 126, 136, 141, 142, 155, 158, 164, 168, 173, 181, 183, 190, 191, 193, 198, 200, 202, 204, 205, 210, 211, 219, 225, 227, 238, 240, 242, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 263, 264, 265, 268, 280, 285, 288, 290, 293, 296, 298, 299, 305, 309, 311, 313, 315, 316, 319, 322, 329, 334, 337, 338, 341, 345, 346, 347, 349, 354, 355, 357, 359, 362, 363, 365, 378, 381, 383, 384, 385, 391, 392, 394, 395, 398, 404, 408, 416, 418, 419, 422, 423, 424, 425, 427, 429, 432, 433, 440, 453, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "dict": [5, 10, 22, 23, 26, 30, 32, 34, 53, 58, 60, 62, 67, 72, 77, 78, 83, 84, 86, 92, 94, 98, 109, 117, 119, 123, 157, 164, 168, 172, 178, 179, 181, 184, 187, 188, 190, 202, 222, 223, 224, 241, 247, 251, 252, 259, 264, 265, 266, 280, 285, 288, 296, 300, 301, 304, 323, 327, 337, 338, 342, 352, 355, 359, 362, 366, 373, 376, 382, 383, 385, 399, 410, 416, 424, 425, 427, 428, 432, 438, 439, 443, 447, 449, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "pair": [5, 7, 22, 28, 32, 39, 63, 67, 72, 74, 84, 86, 91, 93, 94, 97, 103, 106, 117, 123, 127, 130, 133, 138, 141, 148, 151, 157, 164, 174, 178, 181, 183, 187, 188, 190, 193, 194, 199, 206, 210, 218, 222, 225, 227, 233, 237, 241, 252, 256, 258, 259, 265, 268, 272, 280, 285, 289, 290, 291, 293, 294, 296, 306, 319, 329, 334, 335, 337, 338, 341, 345, 352, 355, 356, 358, 360, 362, 366, 372, 373, 381, 382, 383, 386, 391, 392, 399, 404, 407, 410, 413, 414, 424, 425, 427, 432, 433, 438, 439, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476], "consecut": [5, 22, 60, 63, 94, 119, 140, 155, 258, 272, 341, 342, 344, 381, 425, 432, 452, 463, 474], "add": [5, 7, 28, 30, 32, 33, 34, 44, 54, 57, 58, 62, 72, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 102, 103, 105, 106, 107, 109, 114, 117, 118, 119, 126, 127, 136, 138, 140, 148, 149, 152, 154, 155, 157, 158, 160, 164, 165, 166, 174, 178, 180, 183, 185, 186, 188, 190, 191, 192, 193, 194, 197, 200, 202, 203, 205, 210, 220, 222, 223, 224, 227, 229, 231, 233, 240, 241, 242, 244, 247, 252, 255, 258, 259, 264, 265, 268, 271, 273, 278, 280, 286, 288, 289, 290, 293, 296, 298, 299, 300, 303, 304, 305, 316, 318, 325, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 349, 350, 351, 352, 355, 359, 361, 363, 366, 372, 373, 381, 382, 383, 385, 386, 387, 391, 392, 396, 397, 399, 404, 407, 408, 410, 411, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 438, 439, 440, 443, 446, 447, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "serv": [5, 72, 75, 77, 79, 86, 99, 100, 110, 123, 130, 133, 144, 183, 190, 199, 200, 222, 223, 233, 237, 242, 247, 250, 258, 265, 280, 290, 296, 310, 330, 337, 338, 340, 366, 381, 383, 404, 410, 417, 429, 432, 437, 463, 467, 472, 473, 475, 477], "respect": [5, 7, 10, 18, 22, 23, 30, 32, 33, 38, 46, 48, 51, 61, 63, 71, 72, 74, 75, 77, 83, 84, 85, 86, 92, 93, 99, 100, 103, 109, 117, 119, 129, 132, 136, 138, 146, 147, 148, 151, 155, 160, 164, 165, 173, 174, 180, 183, 188, 190, 191, 193, 205, 210, 212, 222, 227, 240, 242, 247, 250, 255, 259, 264, 265, 266, 267, 272, 275, 280, 290, 291, 293, 296, 305, 306, 319, 329, 330, 331, 332, 334, 335, 337, 338, 341, 342, 344, 345, 346, 349, 350, 351, 355, 362, 363, 372, 373, 381, 383, 385, 394, 408, 423, 425, 427, 429, 433, 437, 446, 449, 452, 453, 456, 459, 461, 463, 465, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "py_vabuildvalu": [5, 56], "subclass": [6, 10, 20, 23, 28, 42, 46, 48, 53, 57, 58, 60, 62, 67, 73, 74, 86, 97, 98, 99, 103, 107, 113, 117, 119, 123, 124, 129, 130, 135, 136, 141, 147, 152, 154, 155, 157, 158, 163, 164, 169, 172, 173, 178, 179, 180, 183, 184, 186, 190, 196, 200, 202, 203, 205, 208, 210, 213, 215, 220, 222, 223, 226, 229, 237, 238, 239, 242, 245, 247, 248, 250, 252, 253, 255, 256, 259, 264, 265, 266, 268, 280, 281, 283, 286, 288, 289, 290, 293, 296, 300, 302, 304, 315, 316, 327, 328, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 345, 349, 355, 359, 362, 366, 372, 373, 376, 381, 382, 383, 385, 386, 390, 391, 392, 394, 396, 397, 399, 404, 406, 407, 409, 410, 411, 412, 414, 416, 420, 422, 424, 426, 427, 433, 437, 440, 449, 452, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "py_fals": [6, 62, 63, 74, 428], "py_tru": [6, 62, 63, 74, 428], "creation": [6, 13, 16, 27, 32, 57, 58, 62, 67, 72, 73, 75, 77, 84, 86, 92, 93, 94, 99, 100, 108, 115, 116, 117, 118, 130, 132, 134, 136, 146, 157, 178, 179, 183, 189, 194, 208, 220, 222, 223, 224, 227, 245, 247, 251, 252, 253, 255, 264, 267, 268, 278, 280, 281, 285, 289, 291, 302, 308, 318, 319, 328, 329, 332, 339, 341, 342, 345, 355, 357, 359, 366, 372, 386, 399, 407, 410, 418, 423, 424, 426, 429, 437, 462, 470, 471, 473, 474, 475, 477, 479], "delet": [6, 22, 37, 48, 51, 53, 57, 58, 62, 63, 67, 72, 74, 75, 77, 86, 87, 92, 96, 100, 103, 107, 110, 113, 119, 141, 157, 164, 172, 174, 175, 176, 178, 181, 184, 187, 188, 193, 197, 202, 203, 210, 215, 220, 222, 223, 233, 238, 244, 245, 247, 266, 268, 280, 288, 290, 293, 294, 302, 327, 329, 331, 337, 339, 341, 346, 349, 357, 359, 362, 366, 373, 381, 392, 396, 397, 399, 402, 404, 421, 424, 425, 429, 432, 433, 435, 437, 439, 456, 458, 461, 462, 464, 465, 466, 467, 468, 469, 472, 474, 477, 478, 479, 481], "pybool_typ": [6, 56], "instanc": [6, 8, 9, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 28, 30, 32, 34, 37, 38, 41, 42, 44, 46, 48, 51, 52, 54, 57, 59, 60, 62, 63, 67, 70, 72, 74, 75, 77, 86, 88, 91, 94, 98, 99, 100, 102, 103, 105, 107, 110, 113, 114, 117, 119, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 141, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 172, 173, 174, 180, 183, 187, 188, 190, 191, 192, 193, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 218, 220, 222, 223, 224, 227, 229, 231, 232, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 255, 258, 259, 264, 265, 266, 267, 268, 271, 278, 280, 281, 282, 283, 285, 286, 288, 289, 290, 293, 294, 295, 297, 302, 304, 305, 309, 311, 312, 315, 316, 318, 320, 322, 326, 327, 328, 329, 332, 334, 335, 337, 338, 340, 342, 344, 345, 346, 348, 349, 352, 355, 356, 359, 361, 362, 364, 366, 369, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 390, 391, 392, 395, 397, 398, 399, 400, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 422, 424, 426, 427, 432, 433, 438, 439, 440, 442, 443, 446, 447, 448, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "layer": [6, 8, 9, 15, 20, 22, 24, 25, 26, 31, 37, 38, 55, 59, 60, 67, 74, 83, 100, 104, 302, 332, 334, 338, 344, 365, 416, 452, 459, 462, 465, 478, 479], "pybool_check": 6, "immort": [6, 32, 33, 45, 51, 55, 86, 349, 462, 471, 478], "py_return_fals": [6, 463], "py_return_tru": [6, 463], "pybool_fromlong": [6, 56], "v": [6, 7, 9, 15, 25, 32, 33, 38, 39, 48, 53, 58, 62, 63, 67, 72, 74, 84, 85, 88, 91, 92, 100, 103, 104, 106, 109, 111, 117, 157, 159, 161, 180, 183, 184, 190, 222, 225, 229, 241, 244, 258, 285, 288, 289, 290, 305, 317, 334, 335, 337, 339, 341, 349, 354, 355, 359, 360, 361, 362, 364, 382, 385, 399, 416, 417, 424, 428, 432, 439, 452, 458, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "depend": [6, 13, 14, 18, 27, 32, 33, 34, 44, 52, 56, 62, 63, 67, 71, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 91, 92, 93, 94, 98, 100, 103, 104, 105, 106, 108, 111, 112, 118, 119, 123, 128, 130, 136, 141, 147, 148, 152, 155, 161, 164, 165, 166, 170, 173, 174, 178, 180, 183, 187, 188, 190, 192, 202, 205, 207, 208, 210, 212, 216, 218, 220, 222, 224, 227, 228, 229, 231, 239, 240, 241, 244, 247, 252, 253, 254, 255, 256, 258, 263, 264, 265, 266, 267, 268, 272, 276, 278, 280, 285, 290, 293, 296, 305, 306, 307, 312, 315, 316, 319, 325, 326, 327, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 355, 356, 357, 358, 359, 361, 363, 364, 366, 373, 381, 383, 385, 386, 387, 392, 395, 396, 398, 399, 400, 402, 403, 404, 410, 412, 416, 418, 421, 422, 424, 425, 426, 427, 429, 432, 433, 437, 440, 443, 447, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "certain": [7, 16, 23, 32, 40, 41, 48, 57, 58, 62, 65, 72, 76, 77, 79, 86, 87, 91, 93, 94, 99, 100, 103, 104, 117, 118, 130, 141, 155, 170, 180, 187, 190, 192, 193, 196, 200, 202, 203, 205, 206, 210, 231, 244, 252, 263, 264, 265, 266, 267, 268, 280, 289, 290, 292, 294, 303, 304, 305, 334, 338, 343, 345, 351, 355, 362, 363, 364, 366, 383, 384, 385, 386, 391, 404, 407, 416, 425, 427, 429, 432, 438, 439, 440, 447, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 470, 471, 473, 474, 477, 478], "object": [7, 11, 14, 18, 28, 30, 31, 32, 33, 35, 39, 40, 46, 47, 51, 52, 53, 56, 58, 64, 65, 67, 71, 72, 73, 75, 76, 77, 79, 80, 85, 86, 91, 94, 96, 101, 102, 103, 105, 106, 107, 112, 113, 114, 115, 116, 118, 119, 121, 122, 124, 127, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 156, 158, 160, 161, 165, 166, 167, 168, 169, 170, 171, 173, 177, 178, 179, 181, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 234, 242, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 261, 266, 267, 270, 274, 275, 277, 279, 281, 282, 287, 288, 289, 291, 294, 295, 297, 299, 301, 305, 307, 310, 312, 314, 315, 319, 320, 321, 323, 326, 329, 330, 333, 336, 342, 344, 348, 349, 352, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 369, 371, 375, 376, 377, 379, 382, 384, 385, 390, 391, 394, 396, 397, 401, 403, 404, 414, 418, 421, 422, 423, 424, 426, 427, 429, 430, 433, 435, 438, 439, 440, 442, 444, 446, 447, 448, 449, 452, 453, 456, 458, 459, 460, 461, 464, 467, 468, 469, 471, 472, 475, 476, 477, 478, 479, 481], "wrap": [7, 18, 21, 32, 41, 42, 57, 62, 67, 77, 78, 87, 92, 96, 100, 105, 106, 109, 111, 117, 119, 123, 126, 127, 134, 136, 138, 144, 145, 146, 152, 155, 166, 173, 174, 178, 187, 188, 190, 198, 199, 204, 205, 210, 217, 222, 223, 227, 228, 231, 239, 244, 248, 251, 252, 255, 258, 264, 265, 267, 278, 280, 289, 290, 301, 313, 330, 337, 338, 341, 344, 349, 353, 355, 359, 360, 365, 373, 382, 383, 385, 386, 387, 391, 392, 402, 404, 410, 414, 424, 425, 438, 440, 449, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 478], "Such": [7, 13, 34, 62, 72, 77, 86, 97, 98, 99, 117, 119, 130, 169, 178, 187, 193, 200, 202, 204, 244, 290, 294, 296, 303, 334, 355, 374, 383, 385, 395, 419, 425, 427, 433, 447, 462, 466, 472, 477], "parti": [7, 10, 24, 30, 32, 34, 56, 67, 77, 79, 82, 83, 84, 86, 100, 108, 109, 123, 125, 129, 130, 135, 155, 166, 173, 178, 180, 181, 222, 232, 247, 248, 264, 280, 290, 296, 299, 316, 327, 331, 337, 338, 340, 349, 352, 362, 366, 377, 383, 385, 392, 396, 397, 399, 422, 423, 425, 442, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "special": [7, 10, 14, 18, 23, 30, 32, 33, 34, 41, 48, 56, 57, 59, 60, 62, 63, 67, 72, 74, 77, 83, 84, 86, 91, 93, 94, 98, 99, 100, 101, 102, 103, 106, 108, 110, 111, 113, 117, 119, 123, 134, 135, 136, 140, 141, 148, 149, 151, 152, 157, 164, 165, 166, 168, 172, 173, 174, 177, 178, 179, 180, 184, 188, 190, 193, 200, 202, 205, 210, 217, 219, 225, 227, 228, 242, 244, 247, 251, 252, 256, 258, 259, 263, 264, 265, 268, 269, 278, 279, 280, 287, 288, 289, 290, 293, 296, 299, 300, 316, 318, 321, 326, 328, 329, 330, 334, 338, 339, 340, 344, 345, 349, 350, 355, 358, 362, 366, 372, 385, 386, 391, 392, 396, 399, 404, 407, 410, 412, 416, 422, 423, 424, 426, 427, 428, 430, 432, 433, 436, 437, 439, 442, 445, 446, 447, 453, 456, 458, 459, 460, 461, 463, 464, 465, 466, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481], "imag": [7, 15, 41, 67, 84, 86, 148, 151, 174, 195, 197, 203, 222, 223, 240, 251, 259, 286, 319, 333, 341, 342, 347, 349, 365, 370, 373, 381, 392, 399, 403, 416, 425, 428, 449, 472, 477], "analysi": [7, 32, 34, 67, 101, 103, 149, 151, 187, 219, 234, 251, 261, 276, 305, 315, 383, 427, 430, 431, 433, 441, 451, 464, 473, 475], "characterist": [7, 84, 296, 343, 349, 464, 465], "back": [7, 10, 15, 22, 25, 28, 34, 38, 40, 41, 57, 58, 62, 63, 67, 73, 75, 77, 83, 84, 85, 88, 94, 96, 100, 102, 103, 104, 105, 106, 109, 110, 117, 118, 119, 125, 130, 140, 143, 148, 151, 152, 155, 157, 158, 164, 166, 174, 178, 180, 183, 187, 188, 190, 191, 193, 202, 205, 212, 220, 222, 224, 226, 227, 229, 232, 240, 242, 247, 254, 255, 259, 265, 266, 271, 275, 279, 280, 281, 286, 288, 289, 290, 291, 292, 294, 296, 309, 311, 316, 327, 334, 335, 337, 338, 339, 341, 342, 349, 355, 359, 363, 366, 374, 375, 381, 387, 391, 392, 410, 414, 415, 416, 417, 419, 421, 422, 424, 425, 429, 433, 437, 443, 446, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "possibli": [7, 10, 30, 34, 48, 56, 57, 63, 72, 77, 79, 86, 87, 99, 102, 104, 129, 155, 163, 164, 170, 174, 177, 180, 183, 190, 194, 199, 200, 222, 228, 244, 264, 265, 268, 285, 290, 299, 311, 325, 329, 334, 341, 355, 356, 359, 361, 362, 373, 381, 382, 385, 391, 404, 412, 413, 421, 424, 425, 427, 432, 434, 437, 447, 461, 466, 467, 471, 472, 473, 474, 476, 477, 478], "desir": [7, 9, 23, 32, 34, 41, 60, 72, 73, 84, 91, 92, 93, 94, 99, 100, 103, 106, 117, 134, 136, 148, 155, 157, 158, 164, 166, 173, 174, 186, 187, 188, 205, 209, 220, 222, 223, 232, 233, 237, 242, 244, 247, 255, 256, 263, 264, 268, 269, 273, 275, 289, 291, 294, 299, 304, 308, 315, 316, 317, 335, 337, 338, 340, 341, 342, 344, 351, 359, 361, 362, 366, 372, 373, 381, 383, 391, 396, 399, 402, 409, 410, 413, 425, 427, 429, 438, 439, 440, 447, 452, 459, 461, 462, 463, 464, 465, 466, 474, 475, 476, 478], "situat": [7, 34, 41, 60, 62, 72, 74, 77, 84, 87, 93, 94, 98, 99, 100, 102, 104, 105, 107, 111, 117, 123, 124, 148, 155, 166, 178, 188, 204, 210, 227, 232, 247, 250, 255, 264, 268, 280, 289, 332, 345, 359, 362, 387, 394, 397, 407, 425, 434, 437, 438, 439, 440, 461, 466, 467, 471, 474, 475, 476], "directli": [7, 10, 13, 24, 28, 30, 32, 33, 34, 41, 44, 45, 53, 56, 57, 58, 60, 62, 63, 66, 67, 71, 72, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 92, 93, 96, 97, 98, 99, 100, 102, 105, 107, 108, 111, 113, 117, 119, 120, 122, 125, 129, 130, 133, 136, 143, 144, 145, 146, 148, 155, 156, 157, 158, 160, 163, 164, 166, 168, 172, 173, 178, 180, 183, 187, 188, 190, 191, 193, 198, 202, 203, 206, 207, 209, 210, 218, 222, 223, 224, 229, 232, 233, 239, 240, 242, 244, 248, 249, 250, 252, 255, 256, 259, 263, 264, 265, 267, 268, 275, 277, 280, 281, 289, 290, 291, 292, 296, 299, 303, 305, 315, 316, 317, 321, 327, 332, 334, 335, 337, 338, 340, 341, 342, 345, 349, 355, 357, 359, 362, 366, 371, 372, 373, 375, 377, 378, 382, 383, 385, 386, 387, 392, 397, 399, 404, 407, 410, 411, 414, 418, 422, 424, 425, 426, 427, 428, 429, 431, 433, 435, 437, 438, 439, 440, 447, 448, 449, 452, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "intermedi": [7, 78, 83, 86, 94, 183, 188, 203, 223, 247, 258, 272, 289, 290, 329, 338, 386, 429, 441, 464, 468, 472, 477], "facil": [7, 32, 67, 91, 99, 115, 139, 141, 152, 154, 174, 244, 251, 255, 261, 266, 268, 290, 296, 334, 338, 342, 353, 355, 366, 381, 425, 444, 446, 447, 458, 462], "level": [7, 13, 16, 22, 23, 24, 30, 31, 33, 34, 41, 42, 56, 58, 62, 67, 72, 73, 74, 77, 78, 79, 83, 85, 86, 88, 92, 93, 94, 96, 98, 104, 105, 106, 107, 115, 117, 118, 119, 122, 123, 126, 130, 132, 133, 134, 136, 137, 143, 146, 147, 149, 155, 157, 160, 161, 163, 164, 166, 167, 174, 177, 178, 180, 187, 188, 190, 191, 199, 201, 204, 207, 208, 209, 210, 216, 220, 222, 223, 224, 227, 228, 229, 231, 233, 238, 239, 240, 242, 244, 245, 247, 248, 251, 252, 253, 257, 258, 265, 266, 267, 268, 276, 278, 279, 280, 281, 282, 285, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 318, 319, 321, 323, 327, 328, 330, 331, 332, 337, 338, 340, 344, 349, 351, 352, 353, 355, 356, 357, 359, 361, 362, 366, 372, 373, 378, 380, 382, 383, 385, 386, 392, 396, 397, 399, 400, 404, 406, 407, 408, 410, 412, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 442, 447, 448, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481], "side": [7, 14, 22, 32, 51, 59, 67, 72, 74, 77, 83, 84, 94, 100, 103, 104, 106, 107, 119, 123, 130, 148, 151, 157, 163, 166, 174, 178, 184, 187, 188, 193, 207, 220, 223, 239, 240, 247, 263, 264, 266, 280, 285, 290, 296, 299, 308, 315, 320, 321, 327, 334, 335, 341, 345, 349, 357, 359, 366, 373, 383, 385, 386, 404, 410, 422, 424, 427, 429, 433, 438, 439, 446, 447, 449, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "export": [7, 23, 34, 41, 42, 44, 47, 62, 67, 70, 71, 72, 76, 84, 86, 107, 115, 119, 147, 172, 180, 208, 288, 296, 303, 334, 337, 341, 349, 352, 375, 433, 447, 453, 462, 466, 472, 473, 475, 476, 477, 478, 479], "section": [7, 16, 17, 33, 34, 41, 50, 51, 54, 57, 62, 63, 70, 71, 72, 73, 74, 75, 76, 79, 84, 86, 87, 91, 92, 94, 96, 97, 98, 99, 100, 103, 106, 107, 111, 117, 119, 122, 123, 127, 129, 130, 131, 132, 133, 134, 136, 140, 142, 144, 148, 152, 155, 157, 164, 166, 172, 173, 178, 181, 183, 190, 191, 192, 195, 199, 200, 209, 218, 222, 227, 232, 238, 239, 240, 244, 245, 254, 255, 258, 259, 264, 265, 268, 289, 290, 296, 300, 302, 304, 305, 311, 316, 318, 323, 325, 329, 334, 337, 338, 341, 342, 344, 345, 349, 355, 362, 364, 366, 381, 383, 385, 386, 387, 391, 392, 404, 406, 407, 408, 410, 412, 413, 416, 419, 423, 424, 425, 426, 427, 429, 432, 433, 434, 437, 438, 439, 440, 441, 443, 447, 448, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "consum": [7, 58, 62, 63, 67, 83, 84, 94, 103, 104, 111, 117, 122, 124, 131, 133, 148, 155, 166, 172, 188, 191, 204, 228, 239, 255, 258, 259, 280, 285, 289, 290, 293, 295, 305, 313, 316, 319, 327, 344, 349, 359, 362, 379, 383, 386, 391, 406, 410, 421, 425, 428, 445, 452, 459, 463, 464, 465, 466, 470, 472, 473, 474, 476, 478], "sever": [7, 24, 28, 32, 34, 41, 56, 65, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 86, 92, 93, 94, 98, 99, 100, 103, 104, 106, 107, 109, 117, 119, 121, 122, 123, 131, 132, 134, 147, 154, 155, 157, 158, 163, 164, 165, 173, 174, 180, 181, 183, 185, 188, 190, 192, 196, 209, 210, 220, 222, 233, 238, 244, 247, 252, 254, 256, 264, 265, 266, 268, 270, 278, 280, 284, 289, 290, 291, 292, 296, 303, 304, 305, 308, 316, 318, 326, 330, 332, 334, 335, 337, 338, 339, 341, 344, 345, 355, 362, 365, 366, 372, 373, 375, 377, 378, 381, 383, 384, 385, 386, 387, 389, 392, 397, 399, 400, 402, 403, 406, 412, 416, 421, 422, 423, 424, 425, 429, 431, 433, 436, 438, 440, 442, 443, 446, 447, 456, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "obtain": [7, 30, 34, 63, 67, 77, 85, 91, 97, 99, 103, 108, 118, 123, 134, 146, 148, 149, 150, 174, 180, 183, 187, 193, 194, 200, 202, 205, 212, 222, 229, 232, 245, 251, 255, 256, 258, 263, 264, 265, 266, 267, 275, 280, 289, 290, 291, 305, 308, 310, 315, 316, 334, 338, 341, 345, 348, 357, 363, 392, 395, 396, 399, 404, 410, 411, 412, 423, 424, 427, 433, 437, 438, 441, 446, 458, 459, 461, 462, 464, 465, 472, 473, 474, 475, 476, 477], "simpl": [7, 32, 34, 42, 62, 63, 66, 67, 73, 74, 79, 83, 84, 85, 88, 91, 93, 94, 97, 98, 100, 105, 106, 107, 110, 112, 117, 119, 133, 135, 137, 138, 147, 148, 152, 155, 158, 164, 166, 167, 170, 171, 173, 178, 180, 181, 184, 186, 187, 191, 193, 197, 202, 204, 205, 206, 219, 220, 223, 224, 227, 231, 239, 241, 245, 251, 252, 253, 259, 265, 266, 268, 270, 275, 280, 286, 289, 290, 292, 293, 294, 296, 301, 304, 305, 313, 315, 316, 319, 321, 326, 330, 332, 334, 337, 340, 341, 342, 344, 355, 356, 359, 362, 364, 366, 375, 377, 378, 381, 382, 383, 385, 387, 388, 391, 392, 396, 397, 399, 400, 403, 405, 406, 407, 408, 410, 411, 416, 417, 419, 424, 427, 428, 430, 436, 437, 438, 439, 440, 442, 443, 446, 448, 452, 458, 459, 460, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 478, 479, 481], "orient": [7, 41, 67, 75, 79, 80, 84, 86, 92, 94, 106, 130, 147, 198, 216, 219, 251, 280, 305, 334, 341, 362, 363, 365, 366, 373, 385, 437, 442, 460, 465, 472, 474], "multi": [7, 16, 31, 32, 34, 67, 70, 72, 83, 84, 85, 86, 93, 94, 98, 100, 103, 106, 110, 115, 119, 146, 147, 183, 187, 188, 190, 222, 223, 231, 244, 247, 258, 264, 265, 267, 280, 300, 313, 316, 319, 322, 328, 329, 337, 340, 341, 362, 364, 404, 417, 419, 424, 432, 438, 442, 445, 446, 447, 452, 458, 459, 464, 466, 469, 471, 473, 474, 478, 481], "seri": [7, 32, 60, 79, 86, 94, 103, 105, 109, 117, 119, 152, 157, 172, 173, 183, 188, 222, 232, 289, 311, 334, 341, 352, 362, 372, 383, 386, 387, 391, 404, 427, 438, 446, 447, 461, 463, 464, 465, 466, 469, 474, 477, 481], "intern": [7, 8, 9, 10, 11, 13, 16, 22, 23, 24, 30, 32, 33, 34, 40, 41, 44, 54, 58, 60, 62, 63, 67, 72, 74, 75, 77, 79, 83, 86, 91, 92, 94, 99, 100, 102, 103, 106, 107, 109, 115, 117, 118, 119, 123, 124, 125, 132, 133, 135, 136, 137, 139, 146, 151, 152, 154, 155, 157, 158, 163, 164, 172, 173, 178, 180, 181, 183, 188, 190, 196, 201, 204, 205, 207, 210, 232, 234, 240, 242, 244, 247, 251, 252, 255, 258, 262, 263, 264, 266, 267, 272, 273, 275, 280, 290, 294, 295, 296, 299, 304, 305, 311, 313, 315, 319, 325, 328, 329, 330, 334, 337, 338, 343, 344, 345, 349, 355, 356, 359, 362, 363, 366, 372, 373, 378, 381, 383, 385, 392, 395, 396, 397, 399, 407, 408, 410, 412, 416, 419, 420, 421, 426, 427, 435, 438, 447, 453, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "readinto": [7, 146, 239, 255, 296, 465, 473, 475], "argument": [7, 9, 10, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 41, 46, 47, 48, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 74, 75, 77, 78, 83, 85, 86, 87, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 118, 119, 123, 125, 126, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 348, 349, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 368, 369, 370, 373, 375, 376, 377, 378, 381, 382, 383, 385, 386, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 433, 434, 436, 437, 439, 440, 442, 443, 446, 447, 449, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479], "select": [7, 32, 56, 58, 63, 65, 67, 83, 85, 86, 92, 93, 99, 101, 103, 104, 106, 108, 117, 119, 123, 135, 138, 151, 157, 166, 173, 174, 207, 208, 210, 222, 227, 243, 244, 245, 248, 251, 255, 257, 258, 259, 263, 265, 267, 278, 280, 285, 290, 296, 305, 308, 310, 315, 326, 330, 332, 334, 335, 337, 341, 342, 344, 345, 357, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 381, 383, 387, 392, 400, 404, 410, 414, 421, 424, 425, 426, 427, 429, 440, 443, 448, 449, 450, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479], "reject": [7, 77, 97, 103, 164, 240, 245, 272, 315, 355, 383, 432, 433, 459, 466, 474, 476], "acquir": [7, 32, 47, 72, 88, 112, 135, 166, 205, 212, 264, 268, 280, 290, 330, 338, 355, 362, 371, 425, 464, 465, 466, 467, 470, 472, 473, 475, 477], "over": [7, 13, 22, 23, 24, 29, 32, 34, 35, 41, 47, 48, 60, 63, 67, 72, 73, 74, 77, 79, 83, 86, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 106, 108, 117, 118, 119, 120, 123, 127, 130, 138, 141, 144, 148, 149, 157, 158, 163, 164, 167, 173, 174, 180, 181, 183, 187, 188, 190, 193, 198, 199, 201, 202, 208, 216, 220, 222, 223, 226, 227, 229, 233, 240, 244, 245, 247, 249, 250, 251, 255, 256, 258, 263, 264, 265, 266, 268, 273, 275, 280, 285, 290, 296, 297, 302, 303, 305, 315, 316, 319, 325, 326, 329, 332, 334, 337, 338, 340, 341, 342, 345, 349, 355, 357, 359, 364, 366, 372, 373, 374, 375, 377, 381, 382, 383, 385, 386, 387, 394, 395, 397, 404, 406, 407, 409, 410, 416, 419, 421, 424, 425, 427, 429, 432, 436, 437, 438, 439, 443, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "target": [7, 32, 34, 63, 67, 83, 92, 96, 99, 100, 102, 117, 119, 123, 130, 133, 157, 166, 168, 180, 183, 188, 208, 238, 239, 244, 247, 248, 252, 265, 266, 280, 281, 288, 289, 290, 293, 311, 313, 316, 329, 330, 334, 335, 337, 348, 355, 357, 359, 362, 366, 368, 383, 385, 386, 396, 404, 407, 410, 412, 416, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 433, 438, 439, 452, 455, 457, 458, 462, 464, 465, 467, 469, 471, 472, 473, 474, 477, 478], "pyobject_getbuff": [7, 47, 56, 62, 465, 470], "right": [7, 15, 16, 41, 46, 63, 67, 68, 71, 72, 77, 84, 86, 91, 94, 100, 103, 104, 106, 109, 118, 119, 138, 141, 143, 144, 148, 151, 152, 155, 157, 166, 173, 174, 180, 183, 187, 188, 190, 193, 210, 213, 222, 223, 224, 232, 244, 245, 252, 264, 271, 272, 285, 286, 288, 289, 290, 292, 293, 296, 299, 305, 316, 327, 334, 338, 341, 342, 361, 366, 371, 372, 373, 381, 385, 386, 387, 392, 397, 400, 401, 408, 421, 422, 423, 424, 425, 427, 428, 432, 433, 437, 438, 439, 443, 446, 449, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 474, 476, 477, 478], "sibl": [7, 84, 109, 117, 222, 373, 407, 447], "isn": [7, 22, 23, 25, 30, 32, 51, 60, 62, 67, 72, 75, 78, 83, 84, 86, 87, 88, 91, 92, 93, 97, 98, 100, 102, 103, 104, 106, 111, 112, 117, 119, 126, 130, 136, 144, 154, 155, 163, 166, 172, 180, 188, 190, 193, 199, 201, 202, 224, 231, 233, 240, 245, 252, 255, 266, 290, 293, 299, 311, 315, 316, 334, 335, 338, 339, 340, 349, 352, 366, 375, 385, 386, 387, 391, 400, 402, 403, 404, 406, 416, 425, 433, 437, 438, 439, 445, 446, 457, 459, 460, 461, 462, 463, 464, 465, 466, 469, 472], "anymor": [7, 11, 30, 32, 47, 62, 63, 79, 84, 86, 104, 130, 222, 224, 259, 280, 290, 294, 334, 349, 466, 467, 471, 472, 473, 478], "could": [7, 22, 23, 27, 30, 32, 34, 38, 41, 46, 55, 60, 62, 72, 75, 76, 77, 82, 84, 86, 87, 91, 92, 93, 94, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 117, 119, 123, 125, 126, 129, 130, 132, 135, 138, 148, 152, 157, 164, 173, 174, 180, 190, 197, 198, 203, 205, 210, 213, 220, 222, 223, 224, 225, 227, 233, 234, 242, 244, 252, 255, 256, 258, 259, 264, 265, 266, 268, 280, 288, 289, 290, 292, 293, 294, 296, 300, 305, 308, 311, 315, 316, 318, 326, 328, 330, 334, 337, 345, 349, 355, 359, 362, 365, 366, 379, 383, 385, 386, 387, 391, 392, 394, 395, 399, 404, 407, 419, 422, 425, 427, 429, 431, 432, 433, 436, 437, 438, 440, 441, 443, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "lead": [7, 10, 18, 28, 38, 62, 63, 72, 74, 77, 84, 85, 93, 97, 98, 99, 100, 102, 103, 113, 119, 136, 137, 147, 148, 152, 160, 164, 180, 183, 185, 187, 190, 193, 196, 202, 205, 210, 218, 222, 225, 228, 240, 242, 244, 247, 252, 255, 256, 258, 264, 266, 268, 272, 273, 280, 290, 291, 293, 294, 296, 305, 311, 315, 334, 338, 340, 341, 342, 344, 349, 351, 353, 355, 356, 359, 361, 363, 364, 378, 385, 386, 391, 392, 397, 407, 410, 419, 424, 425, 426, 427, 429, 432, 433, 434, 437, 438, 443, 447, 452, 458, 459, 462, 463, 464, 465, 467, 471, 473, 474, 476, 477, 478, 479], "variou": [7, 10, 20, 24, 32, 34, 41, 57, 61, 62, 64, 67, 72, 73, 74, 78, 79, 84, 86, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 109, 114, 117, 130, 143, 148, 155, 157, 166, 171, 172, 173, 175, 178, 183, 187, 190, 191, 194, 200, 205, 208, 210, 213, 214, 224, 227, 233, 239, 240, 247, 251, 255, 256, 258, 261, 265, 270, 274, 275, 278, 282, 287, 289, 290, 293, 295, 297, 300, 305, 311, 315, 323, 328, 332, 334, 335, 336, 337, 338, 341, 342, 344, 349, 351, 355, 359, 363, 366, 381, 382, 384, 385, 387, 392, 394, 404, 406, 410, 423, 425, 427, 429, 432, 433, 434, 436, 442, 444, 447, 450, 452, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 473, 474, 475, 476, 477, 478], "issu": [7, 22, 24, 31, 32, 33, 56, 60, 65, 67, 75, 79, 85, 86, 92, 93, 99, 100, 102, 106, 111, 116, 117, 123, 132, 152, 155, 173, 174, 178, 182, 183, 185, 200, 210, 218, 220, 222, 226, 232, 239, 244, 245, 255, 259, 263, 264, 268, 269, 271, 280, 281, 289, 290, 293, 296, 308, 330, 332, 334, 338, 341, 345, 359, 381, 383, 385, 386, 387, 396, 397, 399, 406, 409, 410, 418, 423, 440, 442, 449, 452, 455, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "resourc": [7, 23, 32, 47, 62, 67, 79, 83, 84, 86, 90, 95, 98, 102, 104, 105, 108, 116, 117, 119, 129, 130, 132, 135, 139, 163, 166, 185, 190, 209, 210, 223, 239, 245, 247, 248, 251, 254, 259, 264, 277, 280, 281, 290, 296, 299, 326, 329, 334, 338, 341, 349, 359, 362, 366, 373, 379, 385, 388, 391, 392, 395, 397, 402, 404, 406, 410, 413, 416, 425, 429, 440, 443, 449, 451, 452, 455, 462, 464, 465, 466, 469, 470, 472, 476, 479], "leak": [7, 32, 37, 44, 58, 59, 72, 86, 98, 100, 222, 224, 280, 290, 345, 349, 379, 427, 459, 460, 466, 467, 472, 474, 475, 479], "simpli": [7, 34, 62, 71, 72, 74, 75, 77, 78, 83, 84, 86, 87, 88, 94, 97, 100, 102, 103, 106, 113, 117, 136, 147, 149, 152, 155, 157, 164, 173, 174, 180, 183, 190, 220, 222, 227, 229, 237, 247, 252, 259, 265, 266, 269, 280, 289, 290, 293, 294, 296, 300, 301, 311, 316, 321, 322, 330, 332, 337, 339, 342, 345, 349, 350, 362, 382, 383, 385, 386, 387, 392, 397, 399, 400, 404, 406, 407, 408, 416, 418, 429, 437, 441, 443, 446, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 475], "programm": [7, 27, 31, 34, 62, 72, 76, 77, 84, 85, 86, 91, 92, 99, 104, 105, 113, 172, 174, 178, 180, 183, 190, 191, 210, 251, 263, 268, 272, 280, 289, 290, 292, 334, 337, 341, 344, 349, 365, 366, 372, 381, 387, 397, 399, 402, 424, 430, 433, 437, 440, 443, 447, 460, 461, 463, 464, 465, 472], "slice": [7, 16, 37, 39, 41, 53, 59, 67, 84, 86, 94, 102, 118, 119, 138, 144, 157, 165, 168, 173, 188, 203, 210, 222, 225, 258, 275, 280, 281, 288, 290, 293, 296, 315, 316, 337, 341, 363, 412, 428, 433, 439, 443, 446, 447, 459, 461, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 477, 479, 481], "mechan": [7, 11, 14, 28, 32, 34, 44, 60, 62, 72, 74, 77, 78, 83, 84, 86, 91, 92, 93, 99, 100, 103, 104, 110, 111, 113, 123, 127, 128, 136, 140, 166, 173, 178, 190, 194, 200, 222, 223, 240, 241, 242, 243, 245, 248, 256, 257, 263, 264, 265, 266, 268, 269, 281, 289, 294, 296, 299, 314, 316, 319, 321, 330, 332, 334, 335, 338, 341, 349, 355, 362, 366, 372, 373, 382, 385, 392, 396, 397, 420, 423, 425, 429, 432, 433, 436, 437, 440, 444, 448, 459, 460, 461, 462, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 478, 479], "abil": [7, 71, 72, 84, 86, 88, 91, 94, 99, 100, 103, 108, 114, 119, 157, 210, 224, 247, 250, 265, 280, 289, 321, 329, 341, 342, 383, 385, 407, 418, 419, 420, 423, 424, 438, 460, 461, 462, 464, 465, 466, 469, 472, 473, 474, 475, 476], "quit": [7, 71, 72, 75, 79, 83, 84, 88, 91, 94, 99, 100, 103, 104, 117, 141, 165, 166, 173, 174, 186, 197, 220, 233, 244, 255, 266, 272, 280, 285, 289, 294, 302, 306, 332, 337, 338, 366, 395, 427, 429, 431, 437, 438, 444, 445, 447, 448, 459, 460, 461, 462, 464, 473, 474], "easili": [7, 23, 41, 71, 72, 75, 77, 79, 83, 84, 85, 88, 93, 97, 99, 100, 102, 103, 111, 122, 136, 148, 155, 164, 166, 172, 173, 197, 222, 227, 229, 233, 252, 294, 316, 328, 341, 357, 359, 385, 399, 425, 432, 442, 443, 446, 448, 457, 458, 459, 462, 464, 468, 472, 473, 475, 476, 479], "manipul": [7, 13, 32, 33, 34, 41, 44, 54, 67, 72, 75, 94, 97, 100, 141, 142, 157, 166, 172, 173, 174, 180, 183, 191, 192, 202, 204, 216, 235, 251, 253, 255, 266, 280, 282, 290, 293, 305, 321, 328, 329, 331, 334, 339, 340, 341, 347, 349, 360, 366, 372, 373, 391, 404, 407, 410, 417, 422, 429, 446, 448, 449, 451, 452, 459, 462, 465, 469, 470, 473, 474, 476, 478, 479], "system": [7, 16, 23, 24, 31, 32, 33, 34, 41, 62, 64, 67, 72, 73, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 91, 93, 94, 96, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 116, 118, 123, 130, 134, 139, 141, 147, 152, 160, 161, 163, 164, 166, 170, 171, 172, 173, 174, 180, 183, 184, 204, 205, 206, 207, 210, 211, 216, 217, 220, 222, 225, 226, 227, 228, 242, 244, 247, 248, 249, 250, 251, 253, 254, 255, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 279, 280, 283, 284, 291, 292, 293, 294, 296, 298, 299, 300, 305, 306, 307, 308, 311, 312, 313, 315, 319, 321, 323, 325, 328, 329, 330, 331, 334, 335, 337, 338, 339, 341, 344, 352, 353, 355, 357, 358, 359, 362, 363, 366, 372, 379, 381, 382, 383, 385, 386, 387, 388, 392, 396, 400, 402, 403, 404, 406, 407, 410, 411, 412, 413, 416, 417, 418, 422, 423, 425, 430, 432, 433, 434, 435, 436, 440, 441, 442, 443, 445, 447, 449, 450, 452, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 481], "around": [7, 23, 25, 30, 32, 42, 47, 58, 71, 72, 75, 77, 78, 79, 94, 96, 98, 100, 104, 108, 111, 117, 128, 136, 138, 145, 149, 152, 157, 164, 166, 172, 174, 180, 183, 188, 190, 203, 212, 215, 218, 222, 223, 233, 244, 247, 252, 262, 266, 271, 272, 278, 280, 281, 284, 289, 290, 294, 299, 315, 316, 334, 338, 340, 349, 355, 357, 359, 366, 373, 378, 381, 383, 385, 399, 424, 425, 428, 436, 437, 438, 439, 440, 444, 451, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "nativ": [7, 25, 32, 40, 63, 67, 85, 101, 106, 112, 142, 151, 155, 166, 167, 173, 180, 181, 205, 210, 232, 255, 290, 293, 327, 334, 337, 341, 349, 362, 365, 367, 381, 383, 419, 429, 456, 458, 461, 466, 467, 472, 473, 474, 476, 477, 478, 479], "contrari": [7, 60, 77, 187, 443], "wrapper": [7, 18, 21, 23, 24, 25, 30, 32, 41, 43, 47, 57, 58, 67, 77, 85, 86, 91, 92, 100, 105, 111, 123, 134, 143, 145, 157, 166, 173, 174, 188, 190, 212, 223, 233, 247, 251, 252, 257, 264, 272, 278, 280, 284, 290, 296, 299, 325, 334, 342, 359, 361, 365, 366, 378, 397, 404, 407, 410, 416, 422, 424, 425, 437, 448, 459, 460, 461, 463, 464, 465, 466, 470, 471, 472, 474, 475, 478], "instruct": [7, 13, 26, 67, 76, 77, 83, 85, 86, 94, 96, 148, 172, 183, 190, 237, 252, 261, 289, 290, 305, 311, 330, 337, 338, 350, 385, 407, 410, 412, 425, 427, 452, 459, 464, 466, 469, 470, 471, 472, 474, 478, 479], "start": [7, 9, 10, 11, 22, 23, 25, 32, 33, 34, 41, 55, 56, 62, 63, 65, 67, 71, 74, 75, 77, 78, 79, 82, 83, 84, 86, 88, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 114, 117, 118, 119, 121, 122, 123, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 147, 148, 150, 154, 155, 157, 158, 161, 163, 165, 166, 173, 174, 175, 178, 180, 181, 184, 186, 187, 188, 190, 191, 196, 198, 200, 202, 205, 208, 210, 212, 214, 217, 219, 220, 222, 224, 227, 228, 230, 233, 237, 239, 240, 242, 244, 245, 248, 251, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 268, 269, 272, 275, 278, 281, 285, 287, 289, 290, 291, 293, 294, 296, 297, 299, 302, 303, 305, 306, 309, 310, 311, 313, 315, 316, 317, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 351, 353, 355, 359, 362, 363, 366, 368, 373, 375, 377, 378, 379, 383, 385, 391, 392, 396, 397, 399, 400, 404, 407, 408, 410, 412, 414, 418, 419, 421, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439, 441, 445, 446, 448, 449, 452, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "logic": [7, 67, 77, 83, 84, 87, 94, 98, 100, 111, 136, 158, 166, 174, 178, 188, 190, 204, 218, 229, 253, 264, 266, 267, 268, 278, 287, 288, 290, 293, 299, 316, 341, 342, 353, 357, 359, 366, 370, 374, 383, 385, 424, 433, 438, 449, 459, 462, 463, 465, 466, 471, 473, 477, 478], "physic": [7, 67, 86, 91, 174, 190, 244, 249, 275, 278, 291, 334, 341, 346, 374, 375, 381, 402, 429, 446, 464, 477], "neg": [7, 18, 22, 23, 30, 37, 38, 41, 44, 46, 48, 53, 57, 59, 60, 62, 63, 65, 92, 93, 94, 98, 103, 105, 112, 117, 118, 119, 130, 134, 143, 146, 147, 150, 151, 155, 157, 159, 172, 173, 174, 175, 180, 183, 208, 218, 222, 223, 255, 256, 258, 259, 263, 267, 272, 275, 280, 288, 290, 293, 296, 305, 315, 316, 317, 325, 329, 330, 334, 337, 338, 340, 341, 342, 345, 349, 362, 363, 366, 369, 378, 381, 407, 410, 424, 425, 427, 428, 433, 438, 439, 443, 446, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "begin": [7, 18, 23, 34, 57, 72, 74, 75, 77, 78, 83, 84, 85, 86, 94, 100, 102, 103, 104, 114, 117, 136, 147, 148, 152, 157, 164, 174, 175, 180, 183, 187, 190, 193, 198, 206, 212, 220, 228, 244, 247, 252, 254, 255, 258, 259, 267, 268, 275, 280, 285, 290, 291, 293, 294, 298, 299, 311, 316, 317, 321, 331, 332, 337, 338, 341, 342, 344, 346, 355, 356, 357, 359, 361, 364, 366, 373, 375, 381, 385, 398, 410, 412, 413, 422, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 443, 446, 447, 451, 452, 453, 458, 461, 464, 465, 466, 469, 471, 476, 477], "obj": [7, 9, 10, 23, 24, 26, 28, 32, 35, 38, 42, 44, 47, 48, 51, 62, 63, 74, 76, 77, 83, 84, 86, 92, 93, 94, 100, 109, 126, 136, 139, 155, 158, 173, 176, 178, 188, 190, 194, 205, 208, 210, 222, 224, 252, 256, 259, 275, 280, 288, 296, 318, 341, 342, 359, 379, 383, 385, 386, 399, 425, 428, 437, 438, 459, 460, 461, 462, 463, 464, 465, 469, 470, 475, 477, 478], "automat": [7, 12, 23, 28, 32, 34, 44, 54, 58, 60, 61, 62, 67, 70, 72, 75, 83, 84, 85, 86, 91, 94, 97, 102, 103, 104, 106, 108, 109, 117, 123, 129, 130, 133, 135, 136, 137, 148, 152, 155, 157, 158, 164, 165, 166, 172, 173, 174, 178, 181, 183, 184, 187, 188, 190, 193, 198, 202, 203, 205, 206, 210, 220, 222, 223, 224, 229, 231, 237, 239, 240, 245, 247, 252, 263, 264, 265, 267, 268, 269, 275, 278, 280, 285, 289, 290, 291, 294, 296, 303, 305, 310, 315, 317, 320, 325, 327, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 349, 353, 355, 357, 359, 362, 363, 364, 365, 366, 373, 381, 383, 385, 386, 387, 391, 392, 398, 399, 402, 404, 408, 412, 416, 419, 420, 421, 423, 425, 426, 427, 429, 433, 435, 437, 438, 440, 443, 444, 446, 447, 448, 449, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "temporari": [7, 22, 39, 48, 51, 54, 62, 67, 86, 100, 107, 109, 141, 173, 190, 216, 220, 244, 249, 251, 255, 258, 263, 268, 269, 280, 290, 291, 294, 321, 323, 337, 341, 349, 355, 359, 379, 385, 392, 399, 455, 461, 463, 465, 472, 473, 474, 479], "pymemoryview_frombuff": [7, 42, 56, 470], "pybuffer_fillinfo": [7, 56, 62, 470], "NOT": [7, 62, 107, 240, 345, 383, 404, 423, 427, 428, 476], "scheme": [7, 30, 62, 67, 74, 94, 100, 104, 107, 133, 138, 155, 173, 207, 244, 266, 268, 312, 314, 315, 331, 337, 338, 349, 355, 372, 391, 392, 396, 404, 425, 452, 459, 460, 462, 465, 466, 470, 471, 472, 473, 474, 475], "len": [7, 8, 9, 22, 37, 39, 40, 48, 53, 54, 59, 67, 75, 84, 86, 92, 93, 100, 103, 104, 106, 111, 138, 139, 144, 146, 148, 157, 158, 163, 167, 173, 185, 187, 188, 190, 208, 212, 222, 223, 227, 232, 233, 239, 244, 258, 266, 275, 280, 281, 285, 288, 289, 290, 293, 302, 315, 317, 332, 334, 337, 338, 340, 341, 344, 359, 379, 382, 386, 397, 404, 405, 407, 410, 424, 425, 432, 437, 438, 439, 440, 446, 447, 448, 459, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 478], "product": [7, 15, 67, 79, 83, 94, 99, 119, 122, 140, 183, 190, 222, 233, 242, 244, 258, 266, 272, 315, 324, 340, 341, 349, 381, 385, 386, 418, 423, 427, 432, 437, 447, 456, 459, 460, 464, 465, 466, 468, 471, 473, 476, 478], "items": [7, 60, 118, 280, 334, 341], "guarante": [7, 9, 11, 18, 24, 32, 34, 41, 53, 56, 57, 58, 60, 62, 63, 66, 71, 72, 75, 79, 84, 86, 87, 91, 94, 96, 102, 105, 112, 118, 119, 123, 135, 136, 157, 173, 180, 183, 188, 190, 193, 202, 220, 222, 223, 229, 232, 240, 247, 252, 255, 259, 271, 272, 273, 275, 280, 285, 289, 290, 293, 296, 305, 313, 315, 321, 325, 328, 335, 341, 344, 345, 349, 357, 359, 361, 362, 375, 383, 395, 397, 399, 402, 404, 405, 410, 412, 422, 424, 425, 429, 438, 458, 463, 464, 466, 468, 469, 472, 473, 476, 477, 478, 479], "pybuf_simpl": 7, "pybuf_writ": [7, 42, 465], "flag": [7, 9, 10, 13, 18, 24, 28, 32, 33, 42, 48, 49, 60, 62, 63, 65, 67, 71, 72, 74, 75, 88, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 115, 123, 133, 135, 139, 140, 141, 152, 155, 173, 174, 178, 180, 181, 183, 184, 185, 188, 193, 204, 205, 206, 208, 212, 222, 224, 235, 240, 245, 254, 255, 261, 263, 264, 265, 268, 273, 275, 278, 279, 280, 285, 290, 293, 298, 302, 303, 304, 310, 311, 312, 314, 325, 327, 329, 330, 331, 334, 335, 337, 338, 339, 341, 342, 345, 349, 354, 357, 358, 359, 360, 362, 363, 373, 380, 382, 383, 385, 391, 392, 397, 403, 404, 405, 416, 417, 419, 422, 424, 425, 429, 447, 452, 455, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "struct": [7, 15, 16, 21, 26, 30, 32, 34, 38, 44, 56, 57, 60, 62, 65, 67, 72, 74, 75, 77, 83, 85, 98, 100, 118, 138, 142, 173, 212, 222, 251, 265, 266, 281, 334, 341, 363, 416, 437, 449, 461, 464, 465, 466, 469, 470, 471, 472, 477, 478, 479], "calcsiz": [7, 222, 334, 341, 344], "import": [7, 11, 23, 24, 31, 32, 33, 34, 41, 44, 58, 62, 64, 65, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 115, 117, 118, 120, 122, 123, 128, 130, 131, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 157, 159, 160, 163, 164, 165, 166, 167, 169, 170, 172, 173, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 197, 199, 202, 204, 205, 206, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 231, 232, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 251, 252, 254, 255, 258, 259, 261, 262, 263, 267, 268, 269, 272, 273, 275, 276, 280, 281, 285, 289, 290, 291, 293, 294, 296, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 391, 392, 393, 395, 396, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 412, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 430, 432, 435, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 452, 453, 456, 458, 459, 461, 466, 467, 468, 469, 471, 472, 475, 476, 477, 478, 479, 481], "pybuf_format": 7, "still": [7, 9, 10, 13, 22, 23, 27, 28, 30, 32, 33, 34, 47, 57, 62, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 86, 91, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 117, 118, 119, 130, 136, 140, 148, 155, 157, 160, 164, 166, 167, 172, 173, 174, 178, 183, 190, 191, 199, 203, 205, 210, 222, 223, 224, 227, 229, 240, 244, 247, 249, 252, 264, 265, 266, 268, 272, 275, 280, 281, 289, 290, 292, 293, 296, 305, 311, 316, 319, 320, 321, 325, 327, 330, 331, 334, 335, 337, 338, 341, 342, 345, 349, 357, 359, 361, 362, 366, 373, 379, 382, 383, 385, 386, 387, 392, 399, 404, 406, 407, 410, 413, 423, 424, 425, 427, 429, 432, 433, 437, 439, 440, 441, 443, 447, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "present": [7, 22, 30, 33, 38, 44, 48, 56, 62, 67, 72, 73, 76, 78, 79, 84, 85, 91, 92, 93, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 111, 112, 117, 119, 140, 143, 144, 148, 149, 150, 152, 155, 157, 158, 164, 173, 174, 178, 181, 183, 187, 188, 190, 193, 194, 202, 207, 210, 212, 218, 222, 223, 224, 232, 233, 234, 236, 238, 240, 242, 244, 247, 248, 252, 256, 259, 264, 265, 266, 268, 273, 275, 281, 283, 285, 289, 290, 293, 294, 296, 300, 304, 305, 310, 311, 314, 316, 319, 328, 332, 334, 338, 341, 342, 349, 355, 356, 359, 361, 362, 363, 364, 366, 368, 370, 372, 373, 375, 378, 381, 383, 385, 391, 392, 399, 404, 407, 410, 412, 416, 418, 420, 421, 424, 425, 427, 429, 432, 433, 438, 440, 443, 447, 453, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "hold": [7, 9, 14, 23, 27, 32, 34, 44, 50, 54, 57, 62, 65, 72, 77, 79, 84, 85, 86, 92, 98, 99, 100, 104, 117, 118, 119, 121, 136, 164, 166, 167, 173, 179, 180, 183, 188, 200, 210, 212, 233, 239, 242, 252, 254, 265, 266, 268, 280, 281, 289, 290, 299, 305, 316, 319, 322, 327, 334, 338, 341, 345, 349, 359, 362, 366, 378, 385, 399, 402, 408, 410, 412, 421, 423, 425, 429, 433, 441, 447, 459, 460, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "navig": [7, 67, 91, 174, 293, 310, 365, 372], "disregard": [7, 32, 341], "string": [7, 8, 9, 10, 11, 14, 16, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 44, 46, 48, 52, 57, 58, 62, 64, 65, 67, 71, 72, 74, 75, 78, 79, 86, 87, 88, 91, 92, 94, 96, 97, 99, 100, 102, 104, 105, 107, 109, 110, 111, 114, 117, 118, 119, 123, 124, 130, 134, 136, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 161, 164, 166, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 234, 235, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 259, 260, 263, 264, 265, 266, 268, 269, 271, 273, 275, 278, 279, 280, 281, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 317, 318, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 452, 453, 458, 460, 461, 464, 466, 468, 469, 472, 474, 475, 481], "ndim": [7, 341], "dimens": [7, 173, 174, 272, 329, 341, 465, 473, 478], "dimension": [7, 86, 200, 272, 296, 315, 341, 372, 381, 473, 475], "scalar": [7, 138, 193, 196, 223, 381, 383], "maximum": [7, 25, 34, 58, 63, 84, 92, 94, 99, 100, 103, 112, 123, 136, 138, 148, 151, 155, 157, 160, 163, 164, 172, 173, 174, 183, 187, 192, 199, 200, 205, 210, 220, 232, 244, 258, 259, 266, 267, 272, 275, 278, 280, 285, 290, 296, 302, 304, 316, 317, 318, 319, 326, 334, 336, 337, 338, 340, 342, 345, 349, 355, 361, 362, 373, 375, 379, 381, 385, 391, 392, 404, 410, 432, 436, 452, 459, 461, 462, 464, 465, 466, 472, 473, 475, 476, 477], "pybuf_max_ndim": 7, "restrict": [7, 32, 41, 57, 67, 72, 74, 75, 77, 88, 92, 98, 100, 103, 112, 117, 118, 119, 147, 155, 157, 173, 174, 180, 183, 187, 202, 220, 222, 227, 232, 244, 253, 254, 259, 280, 290, 295, 305, 309, 316, 324, 334, 337, 338, 341, 342, 343, 345, 350, 351, 353, 362, 363, 383, 386, 407, 410, 416, 417, 423, 424, 425, 427, 428, 432, 433, 437, 438, 452, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "attent": [7, 98, 103, 174, 381, 438, 447, 462, 472, 474], "further": [7, 32, 40, 62, 67, 72, 74, 75, 77, 78, 79, 84, 86, 87, 94, 97, 99, 100, 104, 106, 107, 113, 116, 119, 136, 141, 146, 148, 150, 155, 163, 166, 170, 173, 178, 184, 188, 190, 208, 210, 215, 222, 225, 229, 237, 244, 252, 263, 264, 266, 267, 272, 279, 280, 289, 290, 292, 294, 296, 316, 329, 330, 334, 335, 337, 338, 341, 342, 349, 351, 363, 366, 378, 383, 406, 407, 410, 412, 418, 421, 422, 424, 425, 427, 429, 432, 437, 441, 452, 458, 459, 460, 461, 462, 463, 465, 466, 471, 473, 477, 478], "skip": [7, 14, 32, 33, 34, 57, 67, 83, 94, 102, 103, 104, 106, 136, 141, 150, 155, 157, 160, 164, 166, 180, 184, 188, 190, 201, 202, 207, 215, 220, 247, 252, 254, 258, 259, 264, 268, 269, 294, 301, 316, 328, 331, 339, 341, 344, 349, 355, 359, 373, 383, 396, 410, 412, 423, 424, 433, 440, 449, 452, 458, 459, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 474, 479], "regular": [7, 11, 33, 62, 67, 75, 77, 79, 83, 84, 86, 92, 94, 95, 100, 113, 117, 119, 123, 130, 157, 158, 160, 164, 166, 172, 173, 178, 183, 190, 197, 207, 217, 222, 223, 231, 233, 240, 244, 251, 252, 258, 263, 265, 290, 291, 293, 296, 305, 308, 325, 330, 332, 334, 338, 339, 341, 342, 349, 355, 356, 359, 360, 381, 383, 385, 392, 397, 399, 425, 426, 427, 432, 433, 437, 448, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "handl": [7, 14, 25, 30, 31, 32, 33, 34, 39, 41, 48, 50, 55, 60, 62, 63, 65, 67, 72, 74, 75, 77, 78, 79, 83, 84, 85, 86, 88, 90, 91, 93, 94, 97, 98, 99, 102, 103, 104, 106, 109, 110, 112, 115, 117, 119, 120, 121, 122, 127, 128, 129, 136, 137, 139, 141, 143, 146, 148, 149, 151, 154, 155, 157, 163, 164, 166, 167, 172, 173, 178, 180, 183, 184, 186, 187, 188, 190, 193, 197, 198, 199, 200, 204, 205, 208, 209, 210, 212, 220, 222, 223, 227, 231, 237, 239, 241, 242, 244, 245, 247, 250, 251, 252, 253, 255, 256, 259, 264, 265, 266, 267, 268, 272, 275, 279, 280, 286, 288, 290, 291, 292, 293, 294, 295, 305, 306, 308, 313, 315, 316, 318, 325, 327, 328, 329, 330, 332, 334, 335, 339, 340, 341, 342, 345, 347, 349, 350, 354, 355, 357, 359, 362, 363, 368, 372, 375, 383, 386, 387, 390, 392, 397, 399, 400, 401, 404, 406, 410, 412, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 429, 432, 433, 437, 438, 442, 443, 445, 446, 447, 448, 449, 452, 456, 458, 459, 460, 461, 463, 464, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481], "along": [7, 34, 35, 57, 77, 94, 98, 99, 100, 117, 123, 133, 137, 138, 146, 151, 160, 166, 173, 183, 190, 200, 202, 215, 227, 231, 232, 241, 247, 248, 264, 266, 275, 290, 293, 296, 305, 326, 332, 334, 338, 341, 342, 345, 354, 366, 373, 377, 381, 383, 385, 386, 404, 411, 418, 423, 424, 440, 448, 459, 460, 461, 462, 463, 465, 466, 468, 469, 471, 472, 474, 475], "nth": [7, 258, 373], "dictat": [7, 86, 164, 219, 222, 296, 334, 437, 458, 459, 465], "de": [7, 12, 23, 28, 40, 67, 73, 79, 116, 140, 170, 174, 227, 240, 249, 258, 271, 285, 296, 307, 341, 355, 383, 391, 416, 443, 469, 470, 471, 474, 476, 477, 479], "might": [7, 23, 32, 34, 51, 57, 62, 63, 72, 74, 75, 77, 80, 82, 84, 85, 87, 91, 93, 94, 98, 99, 100, 102, 103, 104, 106, 107, 111, 119, 129, 134, 136, 138, 141, 143, 155, 173, 176, 178, 180, 188, 190, 193, 202, 204, 206, 210, 218, 220, 231, 232, 233, 235, 237, 240, 244, 255, 256, 263, 264, 265, 266, 268, 269, 275, 280, 281, 285, 289, 290, 292, 296, 299, 302, 303, 305, 316, 332, 334, 337, 338, 341, 349, 350, 352, 359, 362, 364, 366, 381, 383, 385, 386, 387, 391, 392, 397, 399, 405, 410, 419, 425, 429, 431, 437, 438, 439, 443, 444, 446, 447, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 471, 472, 473, 474, 476, 477], "cast": [7, 32, 34, 41, 44, 57, 60, 63, 72, 75, 77, 157, 173, 183, 341, 378, 383, 470, 473, 477, 478], "freed": [7, 13, 22, 27, 32, 41, 44, 67, 72, 74, 98, 100, 163, 224, 229, 233, 280, 290, 326, 425, 449, 460, 462, 464, 476], "alter": [7, 22, 41, 84, 86, 123, 127, 150, 157, 183, 205, 240, 244, 245, 259, 265, 269, 296, 321, 341, 342, 381, 423, 425, 429, 449, 459, 463, 469, 472, 474, 478], "limit": [7, 13, 23, 26, 31, 32, 33, 34, 38, 57, 58, 60, 62, 63, 67, 74, 84, 91, 93, 94, 96, 100, 103, 109, 116, 117, 119, 123, 124, 128, 129, 130, 133, 134, 136, 139, 146, 155, 160, 163, 166, 170, 172, 181, 182, 183, 188, 198, 204, 205, 208, 211, 212, 218, 220, 222, 223, 232, 244, 245, 251, 254, 258, 265, 267, 273, 279, 280, 281, 282, 289, 290, 291, 292, 296, 300, 304, 309, 311, 313, 315, 316, 318, 321, 327, 330, 331, 334, 337, 338, 340, 342, 345, 349, 355, 359, 362, 370, 372, 378, 379, 381, 386, 388, 402, 404, 407, 410, 418, 421, 423, 425, 426, 427, 429, 431, 432, 437, 439, 442, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "64": [7, 41, 63, 67, 84, 92, 93, 97, 104, 133, 140, 143, 173, 174, 180, 183, 222, 232, 256, 258, 267, 280, 281, 290, 300, 301, 303, 329, 334, 338, 341, 344, 349, 381, 401, 416, 425, 439, 443, 446, 453, 458, 459, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "send": [7, 35, 67, 78, 86, 91, 94, 99, 102, 103, 104, 107, 121, 123, 125, 127, 130, 133, 134, 138, 139, 148, 149, 155, 158, 166, 174, 188, 191, 197, 198, 209, 220, 227, 239, 241, 242, 244, 245, 254, 264, 265, 266, 275, 280, 281, 285, 290, 296, 302, 313, 314, 326, 330, 332, 334, 335, 338, 345, 353, 358, 359, 366, 381, 383, 392, 404, 416, 425, 427, 448, 449, 451, 459, 462, 463, 464, 466, 469, 470, 471, 472, 473, 475, 476, 477, 479], "drastic": [7, 109], "exact": [7, 13, 18, 34, 46, 79, 83, 92, 93, 94, 103, 104, 106, 108, 109, 123, 130, 146, 173, 174, 180, 183, 188, 190, 198, 208, 210, 222, 247, 251, 267, 268, 272, 281, 287, 288, 289, 290, 296, 334, 340, 341, 344, 349, 352, 366, 375, 378, 385, 387, 396, 410, 418, 424, 427, 429, 430, 433, 441, 449, 453, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474], "unambigu": [7, 77, 117, 119, 180, 265, 305, 332, 425, 433, 443, 465, 472], "influenc": [7, 296, 334, 452, 465], "els": [7, 22, 28, 34, 35, 40, 41, 52, 62, 63, 67, 71, 72, 74, 75, 77, 78, 83, 84, 85, 87, 88, 94, 98, 100, 102, 103, 104, 107, 110, 111, 119, 123, 131, 133, 136, 148, 157, 163, 166, 170, 173, 180, 183, 187, 188, 190, 193, 197, 204, 223, 225, 227, 233, 237, 239, 244, 245, 247, 258, 259, 264, 266, 268, 273, 280, 286, 288, 289, 290, 296, 306, 313, 315, 316, 326, 329, 334, 337, 338, 339, 340, 341, 345, 349, 355, 357, 359, 362, 369, 375, 376, 381, 382, 383, 386, 396, 397, 399, 404, 407, 419, 425, 427, 428, 429, 431, 432, 433, 440, 442, 449, 452, 458, 459, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 479], "either": [7, 10, 11, 14, 22, 23, 32, 34, 41, 42, 44, 48, 54, 57, 58, 60, 62, 63, 66, 70, 71, 72, 75, 77, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 114, 117, 119, 122, 123, 126, 130, 134, 136, 138, 140, 141, 142, 145, 146, 147, 148, 151, 155, 157, 166, 169, 170, 172, 173, 174, 175, 178, 180, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 202, 203, 204, 205, 206, 208, 210, 212, 218, 220, 222, 228, 229, 232, 234, 239, 240, 242, 244, 245, 247, 249, 252, 254, 255, 256, 258, 259, 264, 265, 266, 267, 268, 269, 272, 275, 278, 280, 281, 285, 286, 289, 290, 291, 292, 293, 294, 296, 298, 299, 305, 306, 308, 311, 316, 319, 321, 322, 325, 326, 328, 329, 331, 333, 334, 337, 338, 341, 342, 344, 345, 349, 350, 352, 355, 356, 357, 359, 362, 363, 366, 372, 373, 375, 378, 381, 383, 385, 386, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 436, 437, 438, 439, 440, 441, 443, 447, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "choic": [7, 67, 72, 77, 83, 84, 85, 88, 100, 104, 107, 115, 148, 151, 161, 190, 208, 222, 227, 229, 244, 252, 264, 265, 268, 280, 289, 305, 311, 315, 321, 323, 326, 327, 338, 340, 341, 344, 372, 428, 431, 438, 443, 445, 448, 456, 457, 461, 464, 471, 472, 475, 476, 477], "correctli": [7, 25, 44, 62, 65, 75, 77, 84, 92, 97, 98, 100, 113, 114, 117, 148, 155, 166, 172, 180, 183, 190, 193, 194, 200, 205, 206, 222, 228, 244, 256, 263, 272, 275, 290, 321, 337, 341, 355, 359, 366, 383, 386, 387, 402, 404, 425, 429, 432, 439, 440, 458, 461, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "stand": [7, 80, 85, 106, 166, 183, 207, 272, 289, 299, 316, 417, 418, 424, 432, 459, 464, 465, 466, 470, 472, 474, 477, 478], "alon": [7, 63, 74, 80, 85, 100, 103, 119, 247, 294, 316, 321, 328, 417, 423, 424, 431, 461, 464, 469, 474], "impli": [7, 30, 34, 41, 57, 62, 88, 100, 106, 109, 160, 178, 220, 222, 233, 255, 289, 311, 315, 317, 337, 338, 341, 412, 419, 423, 425, 427, 433, 452, 453, 458, 465, 470, 474, 477, 478], "below": [7, 23, 24, 32, 34, 44, 54, 56, 58, 59, 60, 62, 63, 65, 72, 75, 84, 86, 87, 92, 93, 94, 99, 100, 107, 111, 112, 114, 117, 127, 130, 131, 133, 135, 141, 144, 146, 151, 155, 157, 164, 168, 169, 172, 174, 176, 178, 180, 183, 185, 186, 188, 190, 192, 200, 205, 210, 218, 220, 222, 224, 227, 230, 232, 233, 237, 239, 240, 242, 244, 245, 246, 247, 249, 251, 255, 263, 264, 265, 266, 271, 273, 279, 280, 285, 288, 289, 290, 292, 293, 294, 296, 304, 307, 311, 313, 315, 316, 317, 318, 319, 321, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 366, 368, 373, 377, 381, 383, 385, 386, 387, 392, 400, 403, 410, 411, 416, 417, 419, 421, 423, 424, 425, 426, 427, 428, 429, 432, 437, 438, 441, 458, 459, 460, 462, 464, 465, 466, 467, 469, 471, 474, 475], "pybuf_indirect": 7, "ye": [7, 72, 77, 78, 79, 80, 83, 84, 85, 88, 96, 164, 183, 190, 263, 264, 311, 316, 338, 366, 370, 402, 404, 408, 410, 423, 438, 443, 446, 453, 458, 461, 470, 472], "pybuf_strid": 7, "pybuf_nd": 7, "fortran": [7, 77, 86, 296, 337, 341, 441, 460, 463, 465], "explicitli": [7, 28, 29, 32, 33, 34, 44, 48, 50, 56, 62, 67, 72, 75, 84, 86, 87, 91, 93, 94, 96, 98, 99, 100, 102, 103, 108, 109, 117, 119, 123, 129, 132, 136, 145, 148, 154, 163, 166, 167, 173, 176, 178, 180, 183, 185, 193, 195, 199, 202, 203, 205, 207, 210, 211, 215, 220, 222, 223, 227, 230, 240, 242, 247, 251, 252, 255, 259, 263, 264, 265, 267, 268, 272, 278, 280, 281, 289, 290, 291, 292, 294, 304, 308, 323, 325, 327, 330, 331, 332, 334, 335, 337, 338, 340, 341, 344, 345, 349, 353, 355, 357, 359, 362, 378, 381, 382, 383, 385, 386, 392, 396, 397, 399, 402, 404, 407, 408, 409, 410, 420, 423, 424, 425, 426, 427, 429, 432, 433, 435, 437, 438, 439, 440, 446, 447, 452, 458, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "contig": [7, 252], "pybuf_c_contigu": [7, 465], "pybuf_f_contigu": [7, 465], "pybuf_any_contigu": 7, "fulli": [7, 13, 27, 32, 33, 44, 60, 62, 70, 80, 86, 100, 102, 106, 109, 117, 124, 128, 131, 183, 190, 194, 200, 204, 205, 247, 252, 254, 258, 265, 266, 280, 296, 300, 313, 330, 332, 334, 341, 345, 349, 355, 357, 383, 385, 395, 397, 404, 407, 410, 414, 420, 425, 429, 437, 452, 458, 461, 466, 467, 470, 471, 472, 473, 474, 475, 476, 478, 479], "combin": [7, 23, 32, 48, 55, 57, 62, 63, 67, 71, 75, 79, 84, 86, 91, 94, 98, 100, 103, 104, 106, 107, 108, 113, 114, 117, 123, 135, 136, 155, 157, 160, 166, 173, 174, 178, 180, 183, 186, 190, 200, 202, 205, 208, 224, 233, 240, 241, 242, 244, 247, 255, 258, 263, 264, 280, 289, 290, 291, 292, 293, 305, 315, 316, 319, 325, 326, 328, 331, 332, 334, 335, 337, 340, 341, 342, 343, 344, 345, 353, 355, 357, 366, 373, 383, 384, 385, 391, 402, 403, 420, 423, 424, 425, 427, 429, 432, 433, 437, 438, 439, 443, 453, 459, 463, 464, 465, 466, 469, 470, 474, 475, 476, 477, 478], "previou": [7, 11, 16, 17, 23, 28, 32, 37, 41, 57, 60, 62, 63, 71, 72, 74, 75, 77, 78, 83, 86, 88, 91, 94, 99, 100, 103, 106, 117, 119, 127, 129, 130, 136, 141, 146, 147, 148, 155, 164, 167, 170, 173, 174, 178, 180, 183, 187, 188, 190, 205, 208, 210, 211, 222, 227, 229, 239, 242, 244, 252, 255, 258, 266, 267, 280, 289, 290, 291, 293, 294, 296, 308, 311, 315, 316, 327, 328, 330, 332, 334, 338, 340, 341, 344, 349, 353, 355, 359, 361, 363, 372, 373, 377, 379, 381, 383, 385, 386, 391, 392, 397, 407, 410, 417, 424, 425, 429, 433, 437, 439, 443, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "frequent": [7, 34, 67, 72, 74, 83, 84, 96, 103, 104, 106, 107, 144, 157, 161, 165, 180, 187, 244, 263, 266, 280, 285, 289, 302, 340, 383, 385, 421, 435, 438, 443, 448, 451, 462, 463, 465, 466, 471, 478], "undefin": [7, 18, 25, 28, 32, 38, 41, 62, 63, 67, 84, 123, 137, 155, 163, 193, 202, 204, 210, 222, 224, 229, 255, 272, 289, 325, 340, 341, 349, 363, 375, 379, 397, 410, 413, 425, 427, 432, 443, 446, 453, 475, 477], "pybuffer_iscontigu": [7, 56, 470], "pybuf_ful": 7, "pybuf_full_ro": 7, "pybuf_record": 7, "pybuf_records_ro": 7, "pybuf_strided_ro": 7, "pybuf_contig": 7, "pybuf_contig_ro": 7, "ptr": [7, 18, 33, 41, 256, 463, 475], "typeof": 7, "def": [7, 17, 22, 34, 44, 60, 65, 67, 70, 71, 72, 75, 78, 83, 84, 86, 87, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 109, 111, 113, 117, 119, 120, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 152, 157, 158, 163, 166, 167, 169, 170, 173, 178, 180, 183, 185, 187, 188, 190, 197, 200, 208, 210, 213, 222, 223, 224, 225, 227, 229, 232, 233, 237, 240, 242, 244, 247, 248, 252, 255, 256, 258, 259, 264, 265, 272, 280, 286, 288, 289, 293, 294, 296, 300, 306, 309, 311, 313, 315, 316, 317, 318, 322, 326, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 341, 342, 348, 349, 355, 358, 359, 361, 362, 364, 366, 375, 378, 379, 381, 382, 383, 385, 386, 387, 396, 397, 399, 404, 408, 410, 416, 417, 419, 424, 425, 426, 427, 428, 432, 433, 437, 438, 440, 447, 448, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "verify_structur": 7, "memlen": 7, "offset": [7, 10, 14, 20, 22, 23, 26, 28, 57, 60, 62, 74, 75, 83, 92, 96, 119, 123, 138, 139, 150, 173, 180, 183, 188, 200, 206, 210, 212, 220, 232, 237, 252, 255, 268, 275, 280, 290, 303, 311, 334, 337, 344, 350, 355, 359, 363, 376, 378, 412, 419, 422, 425, 443, 452, 459, 464, 465, 469, 470, 472, 473, 477], "bound": [7, 10, 13, 37, 41, 43, 53, 55, 59, 62, 63, 77, 80, 84, 86, 92, 93, 99, 100, 103, 104, 119, 120, 121, 122, 123, 126, 127, 135, 136, 155, 157, 161, 163, 166, 183, 187, 188, 208, 210, 222, 223, 244, 245, 247, 252, 265, 266, 280, 315, 316, 319, 328, 334, 337, 338, 341, 348, 359, 362, 364, 366, 372, 373, 382, 383, 386, 387, 392, 399, 417, 423, 424, 425, 426, 427, 428, 429, 433, 437, 440, 446, 447, 459, 461, 462, 464, 465, 466, 471, 473, 474, 477, 479], "mem": [7, 41, 42], "imin": 7, "sum": [7, 15, 34, 86, 92, 94, 117, 119, 123, 138, 157, 180, 183, 190, 205, 222, 223, 252, 258, 267, 272, 281, 290, 293, 305, 315, 319, 323, 334, 340, 341, 363, 373, 379, 383, 427, 428, 437, 438, 441, 446, 447, 448, 449, 462, 463, 465, 468, 470, 471, 473, 478, 479], "j": [7, 41, 63, 72, 83, 84, 86, 92, 106, 151, 157, 160, 174, 178, 180, 187, 190, 232, 258, 285, 288, 294, 302, 316, 334, 340, 341, 349, 363, 425, 432, 441, 446, 452, 453, 463, 464, 465, 466, 467, 468, 469, 470, 473, 475, 477, 478, 479], "imax": 7, "view": [7, 15, 22, 42, 47, 62, 67, 83, 86, 91, 92, 93, 96, 117, 119, 130, 136, 157, 158, 180, 183, 188, 193, 197, 202, 205, 222, 233, 244, 255, 264, 269, 296, 305, 310, 337, 339, 344, 348, 349, 366, 372, 373, 381, 382, 402, 407, 423, 443, 459, 464, 465, 469, 472, 473, 475, 481], "x": [7, 9, 14, 25, 32, 33, 34, 47, 48, 56, 57, 58, 62, 63, 67, 71, 72, 76, 77, 78, 79, 85, 86, 88, 91, 92, 93, 94, 97, 99, 100, 101, 103, 105, 106, 107, 109, 113, 117, 118, 119, 136, 143, 144, 146, 148, 151, 155, 157, 160, 164, 166, 168, 170, 173, 174, 176, 178, 180, 183, 184, 185, 187, 188, 190, 207, 211, 218, 220, 222, 223, 224, 225, 231, 233, 237, 239, 244, 246, 252, 255, 256, 258, 259, 264, 266, 267, 268, 272, 273, 278, 280, 285, 286, 288, 289, 290, 293, 294, 296, 297, 298, 307, 310, 315, 316, 318, 329, 330, 331, 334, 337, 338, 340, 341, 342, 344, 345, 349, 352, 355, 359, 362, 363, 364, 366, 372, 373, 374, 379, 381, 383, 385, 387, 391, 392, 395, 396, 399, 404, 416, 417, 418, 419, 424, 425, 427, 432, 433, 435, 437, 438, 439, 440, 441, 443, 445, 446, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "anywher": [7, 84, 103, 148, 157, 183, 187, 208, 244, 248, 258, 265, 289, 293, 316, 349, 375, 383, 391, 412, 422, 426, 427, 429, 467, 479], "index": [7, 13, 33, 34, 37, 46, 53, 58, 59, 62, 63, 67, 78, 79, 83, 86, 93, 94, 97, 100, 102, 103, 105, 108, 112, 113, 118, 119, 120, 138, 139, 141, 144, 148, 152, 157, 158, 173, 188, 189, 193, 202, 206, 208, 210, 222, 227, 230, 233, 239, 242, 251, 252, 254, 258, 259, 265, 275, 278, 280, 281, 288, 290, 293, 296, 307, 310, 311, 313, 316, 317, 319, 334, 336, 337, 339, 341, 342, 349, 356, 358, 362, 363, 365, 373, 378, 379, 391, 402, 404, 407, 410, 419, 424, 425, 427, 433, 437, 439, 446, 447, 450, 451, 456, 459, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481], "get_item_point": 7, "pyobject_checkbuff": [7, 56, 470, 479], "cannot": [7, 9, 24, 26, 28, 32, 33, 34, 37, 38, 48, 53, 57, 58, 60, 62, 63, 65, 66, 71, 72, 75, 77, 84, 86, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 105, 107, 109, 112, 113, 119, 123, 126, 128, 129, 132, 141, 148, 155, 157, 158, 160, 163, 164, 165, 166, 173, 174, 178, 180, 183, 188, 190, 194, 198, 199, 200, 205, 209, 210, 211, 212, 215, 220, 222, 223, 224, 227, 229, 230, 233, 242, 244, 247, 249, 250, 252, 255, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 279, 280, 290, 292, 293, 294, 296, 299, 300, 301, 304, 305, 307, 311, 316, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 345, 349, 350, 351, 355, 357, 359, 362, 363, 366, 383, 391, 392, 396, 399, 402, 403, 407, 410, 412, 413, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 441, 443, 446, 449, 452, 453, 458, 461, 462, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479], "buffererror": [7, 23, 62, 210, 296, 447], "chain": [7, 23, 62, 67, 84, 92, 94, 98, 100, 107, 116, 154, 157, 164, 173, 184, 210, 211, 222, 233, 252, 258, 264, 290, 341, 349, 378, 386, 392, 425, 427, 433, 437, 439, 442, 465, 467, 470, 471, 473, 474, 475, 479], "redirect": [7, 62, 67, 85, 99, 100, 107, 130, 134, 166, 238, 239, 240, 242, 247, 264, 330, 345, 349, 392, 396, 442, 452, 455, 459, 474, 475, 476, 477], "pybuffer_sizefromformat": [7, 56, 470], "pybuffer_getpoint": [7, 56, 470], "pybuffer_fromcontigu": [7, 56, 470], "fort": 7, "pybuffer_tocontigu": [7, 56, 470], "src": [7, 51, 88, 101, 139, 173, 190, 197, 228, 237, 275, 278, 290, 329, 337, 462, 464], "pyobject_copydata": [7, 56, 470], "dest": [7, 67, 88, 100, 115, 197, 225, 266, 275, 289, 306, 396, 462, 464, 465, 466], "between": [7, 15, 18, 20, 32, 33, 34, 37, 38, 41, 44, 53, 55, 59, 60, 62, 67, 71, 72, 73, 74, 75, 77, 78, 79, 83, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 117, 119, 121, 123, 130, 131, 135, 137, 138, 144, 146, 147, 151, 155, 157, 158, 161, 164, 168, 169, 170, 174, 180, 183, 188, 190, 192, 193, 194, 198, 202, 206, 208, 210, 213, 215, 222, 227, 229, 232, 233, 237, 244, 247, 248, 251, 252, 255, 256, 258, 259, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 305, 313, 315, 316, 317, 331, 334, 335, 336, 337, 338, 341, 344, 345, 346, 349, 356, 357, 359, 361, 362, 363, 364, 366, 368, 369, 372, 373, 374, 375, 379, 381, 382, 383, 385, 386, 387, 391, 392, 397, 398, 402, 404, 407, 408, 410, 414, 416, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 437, 438, 439, 440, 443, 446, 447, 448, 452, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "pybuffer_fillcontiguousstrid": [7, 56, 470], "per": [7, 13, 22, 23, 30, 34, 44, 48, 62, 63, 67, 72, 77, 79, 83, 84, 87, 100, 108, 114, 117, 119, 123, 129, 130, 138, 140, 141, 143, 147, 155, 157, 174, 178, 180, 183, 184, 188, 193, 194, 200, 202, 205, 206, 220, 223, 224, 239, 247, 248, 259, 264, 268, 278, 280, 285, 290, 291, 292, 302, 304, 305, 312, 314, 316, 326, 331, 334, 335, 337, 338, 341, 349, 359, 362, 363, 364, 366, 373, 377, 379, 385, 416, 419, 424, 425, 429, 433, 441, 447, 449, 452, 458, 462, 463, 464, 466, 467, 468, 469, 473, 474, 475, 477, 478, 481], "accord": [7, 18, 32, 35, 38, 63, 65, 67, 92, 93, 100, 106, 119, 123, 148, 151, 155, 157, 172, 178, 180, 183, 193, 198, 200, 202, 205, 206, 213, 228, 230, 232, 240, 244, 245, 247, 251, 253, 258, 263, 264, 265, 272, 278, 280, 289, 290, 291, 300, 305, 315, 338, 339, 341, 343, 344, 363, 372, 373, 375, 381, 385, 391, 392, 393, 396, 407, 419, 423, 425, 432, 439, 452, 458, 461, 462, 463, 464, 470, 471, 472, 473, 474, 475, 476], "design": [7, 33, 34, 62, 67, 75, 79, 81, 83, 84, 86, 87, 92, 93, 94, 98, 99, 100, 102, 104, 106, 107, 108, 110, 119, 126, 128, 131, 134, 135, 136, 143, 144, 149, 155, 157, 164, 166, 174, 180, 183, 189, 190, 191, 198, 207, 208, 210, 222, 223, 225, 227, 229, 232, 234, 244, 247, 251, 268, 271, 280, 289, 290, 296, 305, 313, 314, 320, 323, 328, 334, 338, 344, 349, 352, 355, 359, 362, 366, 372, 375, 381, 383, 386, 391, 404, 414, 421, 422, 423, 429, 436, 437, 439, 447, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 479], "getbufferproc": [7, 56, 62, 473], "subtyp": [8, 9, 11, 15, 20, 22, 25, 37, 38, 44, 48, 54, 59, 60, 62, 63, 67, 184, 193, 194, 197, 198, 200, 201, 202, 203, 240, 244, 273, 286, 289, 330, 338, 341, 390, 413, 424, 425, 427, 461, 469], "pybytearray_typ": [8, 56], "pybytearray_check": 8, "pybytearray_checkexact": 8, "pybytearray_fromobject": [8, 56, 465], "pybytearray_fromstringands": [8, 56, 465], "pybytearray_concat": [8, 56], "concat": [8, 63, 94, 288, 383, 438], "pybytearray_s": [8, 56], "pybytearray_asstr": [8, 56], "extra": [8, 9, 16, 18, 28, 34, 56, 62, 63, 67, 75, 77, 84, 86, 87, 91, 93, 100, 107, 109, 117, 119, 123, 129, 157, 158, 167, 172, 183, 188, 190, 193, 199, 200, 202, 205, 208, 239, 244, 248, 264, 265, 268, 271, 280, 281, 289, 290, 329, 337, 338, 341, 344, 355, 356, 359, 364, 373, 383, 386, 410, 419, 425, 428, 438, 439, 443, 449, 452, 453, 459, 462, 465, 466, 469, 470, 471, 472, 473, 476, 477, 478], "append": [8, 9, 33, 37, 58, 63, 75, 77, 78, 79, 83, 84, 99, 100, 104, 109, 117, 118, 131, 146, 148, 154, 155, 157, 158, 160, 173, 178, 180, 181, 183, 186, 188, 193, 197, 199, 200, 202, 205, 222, 223, 224, 231, 244, 245, 246, 247, 252, 255, 258, 264, 266, 267, 268, 278, 280, 281, 285, 289, 290, 291, 293, 294, 296, 298, 299, 306, 313, 315, 316, 317, 318, 327, 331, 334, 338, 339, 341, 349, 355, 359, 375, 385, 392, 397, 404, 405, 408, 410, 419, 424, 425, 432, 437, 438, 439, 440, 443, 446, 447, 449, 452, 453, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476], "pybytearray_res": [8, 56], "trade": [8, 213, 289, 341, 423, 449], "safeti": [8, 12, 32, 67, 72, 86, 87, 93, 115, 136, 197, 252, 280, 289, 321, 337, 395, 466, 468, 472], "speed": [8, 41, 63, 72, 77, 92, 99, 103, 143, 157, 158, 174, 181, 183, 187, 213, 223, 231, 233, 247, 255, 258, 292, 293, 294, 296, 315, 327, 338, 340, 349, 358, 364, 381, 421, 425, 436, 447, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pybytearray_as_str": 8, "pybytearray_get_s": 8, "pybytes_typ": [9, 56], "pybytes_check": [9, 78, 465], "pybytes_checkexact": 9, "pybytes_fromstr": [9, 41, 56], "pybytes_fromstringands": [9, 56, 465], "uniniti": [9, 32, 34, 41, 72, 84, 296, 453], "pybytes_fromformat": [9, 56], "printf": [9, 63, 67, 71, 72, 96, 173, 242, 264, 427, 443, 446, 457, 464, 470], "calcul": [9, 30, 32, 33, 34, 58, 62, 63, 67, 72, 79, 84, 85, 88, 92, 94, 117, 122, 147, 157, 174, 178, 180, 183, 188, 203, 223, 232, 258, 266, 272, 280, 292, 319, 330, 334, 340, 341, 342, 344, 348, 351, 353, 363, 364, 375, 378, 381, 382, 387, 392, 398, 425, 427, 429, 432, 436, 439, 441, 442, 447, 448, 449, 461, 464, 465, 468, 470, 471, 474, 478], "liter": [9, 38, 63, 67, 77, 86, 93, 102, 103, 109, 110, 117, 154, 155, 156, 165, 180, 183, 188, 190, 217, 218, 222, 227, 228, 245, 254, 259, 261, 264, 265, 267, 299, 304, 316, 328, 337, 341, 342, 345, 363, 364, 366, 373, 375, 383, 385, 391, 397, 400, 410, 412, 425, 426, 428, 429, 430, 431, 438, 442, 445, 446, 459, 461, 462, 464, 466, 467, 471, 472, 474, 477, 478, 479, 481], "ld": [9, 71, 76, 173, 341, 453], "lu": [9, 341, 384, 432, 459, 474, 476, 477], "zd": 9, "zu": 9, "size_t": [9, 10, 18, 28, 33, 34, 38, 41, 58, 63, 173, 344, 473], "hex": [9, 63, 84, 86, 93, 103, 104, 106, 140, 143, 155, 173, 208, 222, 232, 323, 338, 341, 342, 349, 366, 395, 425, 432, 441, 447, 449, 459, 460, 462, 464, 465, 467, 468, 469, 474, 475], "mostli": [9, 10, 23, 24, 62, 63, 65, 77, 79, 85, 92, 104, 123, 165, 190, 210, 244, 252, 264, 272, 280, 338, 372, 381, 391, 392, 410, 419, 424, 426, 429, 433, 437, 441, 459, 460, 461, 462, 464, 466, 467, 468, 470, 472, 474, 475, 476, 477], "0x": [9, 18, 46, 63, 84, 86, 93, 103, 135, 173, 190, 222, 241, 280, 289, 341, 342, 381, 386, 387, 432, 463, 472], "yield": [9, 29, 35, 56, 63, 67, 74, 77, 84, 86, 94, 110, 113, 119, 130, 135, 136, 146, 148, 157, 163, 164, 166, 180, 187, 188, 194, 204, 220, 222, 223, 228, 229, 232, 239, 247, 250, 252, 255, 258, 259, 268, 280, 290, 293, 296, 299, 316, 328, 341, 344, 350, 355, 359, 375, 378, 383, 386, 387, 391, 395, 404, 407, 410, 416, 424, 425, 426, 428, 430, 432, 437, 441, 461, 462, 464, 465, 466, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "unrecogn": [9, 63, 88, 117, 225, 237, 411, 419, 432, 471, 475, 476], "rest": [9, 18, 63, 76, 79, 84, 88, 94, 98, 99, 100, 103, 104, 109, 117, 119, 125, 133, 148, 158, 174, 183, 190, 210, 220, 223, 244, 264, 273, 289, 290, 299, 316, 320, 341, 359, 373, 375, 386, 416, 424, 425, 428, 432, 433, 436, 438, 440, 443, 459, 461, 462, 464, 465, 466, 467, 469, 471, 473, 474, 477, 479], "discard": [9, 34, 37, 48, 54, 59, 63, 65, 72, 93, 94, 104, 123, 136, 140, 144, 148, 154, 155, 157, 158, 180, 183, 240, 255, 264, 265, 268, 280, 283, 289, 334, 337, 341, 358, 373, 385, 397, 399, 408, 410, 413, 424, 425, 446, 452, 461, 464, 465, 466, 471, 474, 476, 478], "precis": [9, 13, 18, 25, 44, 63, 67, 71, 77, 99, 172, 180, 210, 222, 227, 256, 259, 265, 266, 272, 280, 287, 290, 305, 310, 315, 325, 326, 334, 337, 341, 342, 344, 349, 363, 364, 373, 383, 392, 405, 424, 425, 427, 431, 432, 438, 441, 449, 459, 463, 464, 465, 466, 470, 472, 473, 474, 476, 477, 478, 479], "pybytes_fromformatv": [9, 56], "pybytes_fromobject": [9, 56], "pybytes_s": [9, 56, 78], "pybytes_get_s": 9, "pybytes_asstr": [9, 56, 469], "last": [9, 22, 23, 25, 26, 32, 33, 34, 44, 51, 58, 62, 66, 72, 75, 77, 83, 84, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 111, 113, 117, 118, 119, 122, 131, 136, 137, 141, 143, 147, 148, 152, 155, 157, 158, 164, 166, 173, 174, 180, 181, 183, 185, 187, 188, 190, 193, 197, 200, 202, 206, 208, 210, 211, 212, 215, 218, 220, 222, 224, 229, 231, 232, 233, 242, 244, 245, 252, 256, 258, 259, 263, 264, 266, 267, 268, 272, 280, 281, 285, 288, 289, 290, 291, 293, 294, 296, 298, 305, 311, 316, 317, 320, 325, 327, 328, 329, 333, 334, 336, 337, 339, 341, 342, 344, 345, 349, 355, 357, 362, 363, 366, 373, 375, 378, 379, 381, 383, 384, 385, 386, 387, 391, 392, 393, 395, 399, 402, 403, 407, 410, 412, 419, 421, 424, 425, 426, 427, 429, 432, 433, 437, 438, 439, 440, 443, 446, 447, 449, 452, 453, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "dealloc": [9, 13, 22, 28, 32, 34, 41, 44, 51, 62, 63, 72, 74, 75, 77, 86, 98, 224, 359, 399, 433, 453, 460, 461, 466, 470, 472, 478], "pybytes_as_str": [9, 428], "pybytes_asstringands": [9, 56, 78], "pybytes_concat": [9, 56], "newpart": 9, "stolen": [9, 19, 29, 34, 71], "pybytes_concatanddel": [9, 56], "_pybytes_res": 9, "newsiz": [9, 28, 59, 275], "build": [9, 31, 32, 33, 41, 44, 56, 57, 63, 64, 67, 73, 74, 75, 77, 78, 80, 83, 84, 85, 86, 92, 96, 100, 101, 104, 105, 107, 108, 119, 138, 144, 152, 154, 155, 157, 173, 183, 184, 185, 187, 188, 200, 203, 205, 208, 222, 232, 233, 242, 251, 254, 255, 258, 270, 272, 279, 289, 291, 293, 300, 304, 308, 311, 325, 331, 334, 335, 338, 341, 349, 352, 359, 366, 379, 381, 385, 387, 391, 392, 396, 397, 406, 407, 421, 422, 423, 425, 439, 448, 452, 455, 456, 458, 459, 461, 481], "brand": [9, 54, 59, 72, 302], "refcount": [9, 32, 51, 62, 98, 349, 359, 464], "lvalu": [9, 289, 341], "differ": [9, 10, 13, 15, 20, 23, 24, 27, 32, 33, 34, 35, 41, 44, 56, 57, 58, 62, 63, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 85, 86, 88, 90, 91, 92, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 111, 117, 118, 119, 122, 123, 126, 128, 129, 130, 134, 135, 136, 138, 148, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 180, 182, 183, 188, 190, 192, 193, 199, 200, 202, 205, 208, 210, 211, 213, 219, 220, 222, 223, 227, 233, 234, 239, 240, 242, 244, 247, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 280, 281, 286, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 305, 310, 311, 313, 315, 316, 317, 318, 319, 325, 327, 328, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 348, 349, 350, 352, 355, 357, 359, 360, 361, 362, 363, 364, 366, 369, 372, 373, 378, 382, 383, 385, 386, 387, 391, 392, 398, 402, 404, 407, 408, 417, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "realloc": [9, 41, 53, 72, 174, 463, 476], "memoryerror": [9, 23, 54, 59, 63, 119, 183, 210, 392, 447, 474], "callabl": [10, 32, 36, 43, 57, 58, 62, 66, 67, 71, 72, 84, 86, 87, 91, 93, 94, 100, 105, 109, 113, 117, 119, 123, 129, 133, 135, 136, 158, 163, 164, 167, 169, 173, 174, 178, 184, 187, 188, 203, 204, 205, 220, 221, 222, 232, 245, 247, 248, 251, 255, 264, 265, 266, 268, 280, 288, 289, 290, 293, 295, 296, 310, 311, 312, 322, 329, 330, 332, 341, 345, 349, 350, 355, 357, 362, 364, 368, 373, 375, 376, 385, 386, 387, 392, 396, 397, 399, 404, 410, 418, 424, 427, 429, 442, 447, 452, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "signatur": [10, 13, 17, 44, 57, 62, 67, 70, 84, 92, 93, 98, 99, 100, 119, 123, 136, 142, 156, 157, 158, 166, 178, 180, 210, 213, 222, 223, 232, 244, 255, 264, 265, 289, 296, 310, 312, 329, 337, 338, 345, 349, 378, 381, 382, 383, 386, 387, 391, 410, 412, 416, 421, 425, 427, 437, 465, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481], "slot": [10, 16, 31, 44, 46, 48, 49, 57, 60, 67, 74, 75, 92, 100, 131, 178, 188, 209, 223, 224, 247, 252, 278, 280, 296, 313, 341, 382, 383, 425, 427, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 473, 474, 475, 478, 479], "kwarg": [10, 57, 62, 67, 84, 86, 92, 99, 100, 109, 112, 117, 119, 123, 136, 137, 139, 155, 157, 163, 164, 167, 174, 183, 222, 247, 250, 252, 259, 264, 265, 280, 288, 289, 290, 296, 304, 305, 322, 341, 342, 355, 359, 361, 362, 382, 383, 385, 386, 387, 396, 399, 425, 428, 438, 465, 470, 473, 475, 476, 478], "made": [10, 11, 12, 30, 32, 34, 42, 57, 58, 62, 65, 71, 77, 79, 84, 85, 86, 88, 93, 96, 99, 100, 102, 103, 108, 109, 110, 117, 124, 127, 130, 136, 145, 155, 157, 163, 164, 166, 168, 173, 174, 180, 183, 188, 190, 193, 196, 197, 202, 205, 210, 220, 227, 229, 234, 239, 244, 247, 252, 255, 264, 265, 266, 272, 275, 278, 280, 290, 294, 296, 304, 305, 311, 315, 317, 318, 319, 321, 325, 328, 329, 330, 331, 332, 334, 338, 340, 341, 345, 350, 355, 357, 359, 362, 366, 370, 379, 386, 387, 391, 395, 397, 399, 404, 407, 410, 416, 417, 418, 422, 423, 424, 425, 433, 435, 437, 440, 441, 447, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "similarli": [10, 28, 57, 58, 77, 84, 94, 100, 103, 106, 109, 117, 123, 134, 136, 148, 155, 160, 178, 180, 187, 188, 190, 217, 222, 239, 265, 268, 280, 290, 293, 296, 298, 305, 313, 316, 333, 334, 338, 341, 344, 345, 349, 364, 366, 372, 379, 381, 383, 385, 405, 408, 419, 433, 439, 459, 463, 464, 465, 466, 470, 472, 474, 475, 477, 479], "convent": [10, 34, 57, 60, 62, 72, 84, 86, 91, 92, 98, 99, 100, 106, 111, 147, 164, 173, 174, 175, 178, 180, 206, 222, 225, 227, 240, 243, 263, 268, 289, 291, 292, 315, 341, 342, 349, 359, 361, 363, 385, 392, 425, 427, 431, 432, 437, 438, 440, 445, 447, 449, 450, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 474, 475, 477], "tp_new": [10, 60, 62, 74, 75, 98, 471], "tp_init": [10, 60, 62, 74, 75, 471], "pyobject_cal": [10, 56, 62, 72, 479], "introduc": [10, 23, 32, 33, 44, 56, 67, 72, 77, 79, 84, 85, 86, 94, 98, 99, 100, 103, 110, 119, 123, 136, 180, 185, 210, 232, 240, 247, 248, 266, 268, 272, 280, 289, 296, 302, 305, 338, 341, 342, 344, 348, 349, 357, 366, 372, 373, 381, 382, 383, 391, 411, 422, 424, 425, 426, 427, 429, 431, 432, 433, 436, 437, 438, 442, 446, 447, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pep": [10, 13, 23, 26, 30, 32, 33, 34, 44, 48, 56, 58, 61, 62, 63, 65, 67, 70, 72, 74, 77, 79, 84, 85, 86, 87, 94, 106, 109, 110, 113, 114, 119, 123, 126, 138, 139, 148, 149, 150, 151, 155, 157, 158, 160, 163, 166, 167, 170, 172, 178, 184, 188, 207, 210, 218, 222, 223, 224, 244, 246, 247, 248, 252, 255, 262, 263, 264, 269, 272, 278, 284, 285, 286, 290, 292, 293, 296, 298, 299, 308, 319, 321, 323, 325, 326, 329, 330, 331, 333, 334, 336, 337, 338, 341, 342, 345, 346, 349, 350, 355, 356, 359, 363, 375, 382, 394, 396, 399, 404, 405, 420, 422, 424, 425, 426, 427, 428, 429, 432, 433, 438, 447, 452, 453, 454, 458, 459, 479, 481], "590": [10, 67, 469, 470, 479], "rule": [10, 18, 23, 28, 32, 34, 60, 62, 67, 77, 79, 86, 92, 93, 94, 98, 100, 102, 103, 104, 106, 117, 119, 126, 148, 151, 158, 173, 175, 178, 180, 183, 187, 191, 193, 199, 200, 202, 204, 205, 206, 218, 219, 222, 224, 228, 233, 235, 237, 240, 241, 244, 256, 263, 272, 289, 293, 316, 341, 342, 344, 345, 357, 362, 363, 372, 383, 386, 387, 391, 393, 397, 408, 412, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 445, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473], "thumb": [10, 62, 98, 102, 126, 187, 373], "hard": [10, 32, 41, 67, 71, 72, 75, 77, 91, 92, 94, 98, 100, 102, 103, 104, 160, 164, 172, 173, 174, 180, 181, 187, 190, 199, 222, 264, 265, 289, 290, 293, 294, 305, 316, 319, 323, 327, 337, 338, 345, 355, 359, 372, 383, 387, 458, 459, 472, 474, 477, 478], "addition": [10, 32, 62, 100, 103, 117, 120, 123, 267, 280, 289, 290, 302, 304, 310, 345, 359, 366, 383, 386, 423, 459, 466, 467, 470, 471, 473, 475, 476, 477, 478, 479], "moreov": [10, 32, 33, 34, 222, 233, 268, 381, 383, 439, 466, 467, 469, 470], "behav": [10, 23, 32, 33, 44, 62, 63, 75, 77, 84, 88, 93, 98, 100, 103, 106, 118, 160, 164, 166, 167, 172, 173, 180, 181, 183, 185, 222, 223, 241, 254, 255, 268, 275, 285, 290, 317, 318, 330, 332, 334, 335, 338, 341, 345, 349, 353, 357, 361, 366, 383, 385, 386, 387, 408, 410, 424, 425, 426, 427, 432, 433, 435, 437, 438, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 473, 474, 477, 478], "achiev": [10, 32, 44, 62, 71, 77, 84, 94, 98, 100, 102, 117, 155, 164, 173, 223, 233, 242, 258, 264, 280, 317, 338, 340, 349, 359, 362, 364, 366, 371, 385, 386, 387, 392, 396, 398, 410, 425, 432, 433, 459, 461, 462, 464, 474, 475], "pyvectorcall_cal": [10, 56, 62, 471], "bear": [10, 63, 180, 240, 247, 280, 341, 349, 470], "repeat": [10, 53, 57, 62, 67, 78, 86, 94, 104, 109, 117, 144, 152, 157, 158, 173, 174, 180, 194, 211, 222, 232, 233, 234, 244, 258, 280, 282, 289, 292, 294, 299, 305, 315, 316, 334, 338, 341, 342, 344, 364, 377, 378, 381, 383, 385, 386, 392, 406, 424, 425, 440, 441, 446, 452, 461, 462, 463, 465, 466, 472, 473, 474, 475, 476], "py_tpflags_have_vectorcal": [10, 62, 471], "__call__": [10, 62, 84, 86, 92, 117, 156, 157, 158, 200, 208, 222, 280, 288, 355, 383, 386, 387, 399, 425, 427, 471, 476], "reassign": [10, 41, 62, 75, 165, 208, 304, 345, 383, 399, 471, 478], "earlier": [10, 32, 62, 63, 71, 83, 84, 85, 86, 91, 94, 99, 100, 102, 103, 108, 111, 112, 123, 174, 180, 190, 207, 222, 227, 242, 244, 255, 264, 266, 272, 289, 290, 296, 316, 328, 337, 338, 345, 355, 366, 377, 380, 383, 385, 386, 391, 392, 396, 397, 399, 408, 412, 421, 425, 427, 429, 432, 439, 444, 446, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "slower": [10, 83, 84, 103, 155, 223, 244, 255, 267, 280, 315, 327, 381, 441, 449, 462, 463, 465, 467, 471, 477, 478, 479], "calle": [10, 84, 350, 377, 438], "anywai": [10, 62, 75, 77, 88, 173, 180, 222, 240, 244, 256, 385, 386, 439, 460, 461, 471], "enabl": [10, 11, 28, 33, 34, 48, 56, 62, 67, 74, 75, 79, 80, 91, 93, 103, 107, 109, 110, 117, 119, 121, 122, 126, 127, 130, 136, 139, 141, 148, 149, 152, 164, 166, 173, 174, 182, 183, 185, 190, 194, 210, 211, 220, 222, 223, 224, 227, 239, 242, 244, 245, 247, 252, 255, 263, 265, 266, 280, 285, 290, 291, 293, 294, 296, 302, 303, 305, 308, 311, 315, 316, 317, 330, 331, 334, 337, 338, 341, 342, 345, 349, 350, 351, 359, 364, 366, 368, 373, 377, 383, 385, 387, 396, 397, 404, 409, 411, 412, 417, 419, 424, 425, 426, 433, 436, 444, 449, 452, 453, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479], "tp_vectorcall_offset": [10, 57, 60, 62, 74], "vectorcallfunc": [10, 27, 56, 62, 74, 471], "appear": [10, 25, 32, 33, 44, 57, 58, 65, 67, 74, 75, 77, 83, 85, 86, 88, 91, 93, 94, 97, 99, 100, 101, 102, 103, 109, 117, 119, 130, 148, 155, 160, 164, 172, 173, 174, 178, 183, 187, 188, 190, 193, 196, 199, 200, 202, 210, 219, 222, 224, 227, 232, 244, 245, 247, 252, 256, 263, 265, 266, 268, 269, 278, 280, 290, 294, 305, 311, 314, 316, 328, 330, 332, 334, 337, 341, 342, 355, 361, 366, 373, 382, 383, 386, 387, 392, 397, 399, 404, 405, 407, 410, 413, 417, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 438, 439, 445, 446, 452, 458, 460, 462, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478], "typedef": [10, 11, 13, 15, 22, 27, 28, 31, 32, 49, 57, 58, 60, 63, 67, 74, 75], "nargsf": 10, "kwname": [10, 57, 98], "py_vectorcall_arguments_offset": [10, 56, 471], "pyvectorcall_narg": [10, 56, 471], "uniqu": [10, 32, 67, 72, 74, 79, 92, 94, 96, 99, 102, 106, 112, 117, 157, 173, 180, 181, 187, 200, 202, 206, 208, 209, 222, 225, 233, 252, 256, 258, 259, 268, 278, 281, 290, 296, 302, 311, 315, 337, 338, 340, 341, 350, 352, 362, 369, 370, 373, 383, 385, 386, 388, 391, 395, 423, 424, 425, 429, 437, 439, 453, 458, 463, 464, 466, 468, 471, 472, 477, 479], "temporarili": [10, 23, 34, 67, 72, 86, 100, 107, 147, 166, 183, 190, 224, 227, 247, 263, 264, 312, 313, 329, 341, 345, 359, 364, 373, 379, 385, 386, 387, 424, 458, 465, 471, 476, 477], "vector": [10, 258, 272, 345, 364, 381, 383, 406, 471], "restor": [10, 13, 17, 22, 23, 27, 32, 34, 62, 74, 91, 100, 129, 155, 166, 167, 168, 174, 183, 187, 188, 240, 244, 252, 255, 263, 289, 296, 298, 315, 316, 317, 321, 337, 345, 349, 355, 358, 359, 362, 373, 380, 381, 383, 385, 386, 387, 397, 402, 425, 459, 461, 462, 464, 465, 470, 471, 474, 477, 479], "pyobject_vectorcallmethod": [10, 56, 471], "whenev": [10, 23, 51, 60, 62, 65, 72, 77, 84, 92, 93, 94, 99, 100, 117, 130, 131, 133, 174, 183, 187, 204, 222, 224, 244, 249, 252, 255, 264, 266, 268, 280, 289, 293, 296, 311, 313, 325, 330, 337, 338, 341, 349, 359, 373, 381, 385, 386, 410, 422, 425, 429, 437, 461, 462, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477], "cheapli": 10, "encourag": [10, 32, 57, 72, 76, 87, 102, 210, 251, 289, 325, 326, 328, 350, 383, 402, 408, 412, 431, 436, 453, 459, 460, 467, 470, 478], "onward": [10, 56, 94, 100, 183, 218, 252, 330, 337, 341], "prepend": [10, 32, 33, 86, 92, 100, 155, 160, 175, 199, 223, 258, 266, 268, 285, 289, 298, 309, 324, 328, 329, 349, 353, 361, 396, 410, 418, 452, 458, 470, 471], "pyobject_vectorcal": [10, 56, 101, 471], "provision": [10, 31, 67, 86, 194, 200, 202, 205, 248, 349, 474, 475, 476, 477, 478], "under": [10, 13, 14, 23, 33, 34, 41, 44, 57, 60, 65, 67, 73, 77, 84, 91, 94, 99, 100, 102, 103, 108, 110, 117, 142, 148, 152, 155, 173, 174, 180, 187, 190, 193, 196, 200, 205, 210, 212, 222, 224, 227, 232, 244, 255, 259, 265, 266, 268, 272, 275, 278, 280, 289, 290, 293, 294, 305, 319, 328, 334, 337, 339, 340, 341, 349, 350, 352, 357, 359, 360, 366, 368, 372, 373, 377, 378, 381, 385, 386, 387, 391, 392, 394, 396, 397, 400, 402, 416, 417, 418, 419, 422, 423, 425, 426, 428, 432, 433, 440, 447, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478], "underscor": [10, 38, 56, 67, 70, 84, 86, 93, 100, 143, 148, 155, 157, 173, 183, 193, 202, 218, 222, 268, 288, 304, 314, 316, 328, 341, 342, 349, 351, 366, 386, 404, 419, 424, 425, 426, 427, 431, 432, 433, 437, 447, 449, 465, 467, 468, 470, 471], "_pyobject_vectorcal": 10, "_py_tpflags_have_vectorcal": 10, "_pyobject_vectorcallmethod": 10, "_pyvectorcall_funct": 10, "_pyobject_callonearg": 10, "_pyobject_callmethodnoarg": 10, "_pyobject_callmethodonearg": 10, "pyobject_vectorcalldict": 10, "_pyobject_fastcalldict": 10, "alias": [10, 23, 67, 86, 93, 117, 119, 147, 155, 184, 192, 208, 210, 227, 263, 294, 300, 334, 337, 341, 348, 373, 381, 384, 426, 432, 433, 437, 453, 458, 460, 462, 465, 469, 470, 471, 472, 473, 474, 476, 479], "worri": [10, 34, 72, 74, 91, 99, 102, 106, 148, 180, 191, 289, 316, 344, 385, 447, 461, 466, 473], "py_enterrecursivecal": [10, 23, 56, 479], "py_leaverecursivecal": [10, 23, 56, 479], "futur": [10, 22, 32, 34, 56, 60, 62, 67, 76, 83, 86, 98, 99, 102, 103, 109, 111, 117, 119, 120, 122, 124, 127, 129, 130, 135, 136, 152, 156, 161, 162, 164, 165, 172, 180, 190, 194, 200, 202, 204, 205, 207, 210, 222, 224, 229, 231, 233, 242, 244, 247, 249, 251, 252, 254, 264, 265, 280, 281, 289, 290, 305, 312, 316, 322, 325, 330, 334, 337, 338, 340, 349, 350, 354, 359, 362, 363, 382, 383, 385, 392, 395, 397, 410, 421, 425, 427, 432, 437, 438, 443, 447, 458, 459, 460, 461, 462, 463, 464, 465, 469, 473, 474, 478, 481], "pyvectorcall_funct": 10, "intend": [10, 23, 30, 32, 33, 41, 44, 56, 60, 63, 71, 72, 73, 74, 77, 83, 86, 88, 94, 99, 100, 102, 103, 107, 111, 112, 123, 136, 148, 155, 157, 166, 168, 181, 188, 190, 198, 205, 210, 222, 223, 237, 241, 242, 244, 248, 252, 255, 256, 264, 266, 267, 268, 271, 272, 285, 286, 290, 296, 299, 300, 304, 331, 334, 338, 340, 341, 342, 344, 345, 349, 350, 354, 355, 362, 373, 377, 381, 383, 385, 386, 391, 392, 397, 404, 408, 419, 422, 424, 425, 427, 431, 432, 433, 438, 439, 440, 441, 447, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 474, 475, 476, 477, 478], "put": [10, 20, 33, 34, 48, 57, 67, 72, 74, 75, 77, 78, 83, 84, 85, 86, 87, 91, 92, 93, 94, 98, 100, 103, 104, 111, 119, 131, 135, 148, 155, 163, 164, 172, 173, 188, 190, 198, 200, 205, 212, 224, 227, 229, 238, 239, 244, 247, 265, 278, 280, 288, 292, 296, 297, 313, 315, 330, 331, 332, 334, 338, 341, 352, 357, 361, 362, 366, 380, 386, 387, 392, 422, 429, 435, 438, 445, 446, 447, 450, 457, 458, 460, 461, 462, 463, 464, 465, 466, 470, 472, 475], "fall": [10, 15, 18, 22, 25, 38, 41, 62, 63, 83, 94, 99, 105, 158, 174, 178, 180, 183, 193, 202, 210, 222, 226, 232, 265, 286, 288, 290, 292, 322, 338, 340, 341, 342, 355, 391, 392, 422, 423, 425, 429, 432, 438, 445, 459, 461, 462, 464, 465, 466, 467, 469, 471, 472, 474, 476, 477, 479], "littl": [10, 25, 30, 63, 67, 77, 85, 94, 99, 100, 103, 104, 106, 138, 143, 150, 155, 173, 174, 175, 183, 187, 188, 190, 227, 240, 265, 280, 289, 292, 316, 330, 334, 341, 344, 349, 364, 379, 381, 387, 395, 402, 423, 437, 438, 440, 441, 449, 459, 460, 461, 465, 469, 470, 472, 473, 474], "pick": [10, 75, 84, 86, 100, 107, 138, 157, 242, 248, 272, 289, 294, 379, 385, 418, 459, 464, 470], "best": [10, 30, 34, 54, 63, 67, 79, 83, 86, 91, 94, 95, 98, 99, 100, 102, 128, 138, 171, 180, 183, 185, 187, 190, 191, 192, 202, 210, 220, 222, 223, 227, 231, 232, 233, 239, 244, 245, 252, 264, 267, 280, 285, 289, 290, 302, 304, 305, 328, 332, 334, 337, 341, 349, 355, 357, 364, 366, 372, 381, 383, 386, 400, 422, 425, 429, 436, 438, 439, 441, 448, 453, 456, 458, 459, 463, 464, 467, 469, 470, 471, 472, 474, 475, 476, 479], "fit": [10, 34, 72, 77, 97, 104, 117, 120, 173, 174, 175, 183, 188, 190, 192, 212, 220, 233, 234, 247, 256, 266, 289, 304, 305, 315, 334, 340, 344, 361, 366, 381, 385, 392, 397, 407, 418, 421, 423, 449, 462, 463, 466, 469, 470, 471, 472, 473, 474, 479], "summar": [10, 85, 92, 102, 106, 183, 190, 255, 256, 327, 340, 341, 383, 385, 423, 424, 427, 429, 463, 472], "document": [10, 18, 20, 23, 24, 28, 31, 34, 41, 44, 50, 54, 56, 57, 58, 60, 62, 63, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 84, 86, 87, 88, 91, 92, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 112, 117, 118, 119, 121, 123, 125, 127, 130, 133, 134, 136, 139, 141, 142, 145, 147, 148, 152, 157, 163, 164, 166, 173, 174, 178, 179, 180, 184, 187, 190, 191, 192, 193, 195, 199, 200, 202, 204, 205, 210, 217, 218, 220, 221, 222, 223, 227, 232, 238, 240, 244, 245, 247, 248, 251, 252, 253, 255, 256, 259, 263, 264, 265, 266, 268, 269, 270, 278, 279, 280, 282, 287, 289, 290, 291, 292, 294, 301, 303, 304, 311, 315, 319, 327, 328, 332, 334, 335, 337, 338, 339, 341, 345, 348, 349, 351, 355, 358, 359, 360, 361, 362, 363, 365, 366, 372, 373, 376, 381, 382, 383, 385, 391, 392, 396, 397, 399, 400, 402, 406, 408, 409, 411, 412, 413, 414, 416, 419, 420, 421, 422, 424, 425, 427, 429, 431, 432, 433, 435, 436, 440, 442, 443, 444, 447, 448, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 475, 476, 479, 481], "pyobject_callnoarg": [10, 56, 74, 479], "pyobject_callonearg": [10, 479], "pyobject_callobject": [10, 56, 71, 72, 78], "pyobject_callfunct": [10, 56, 464, 478], "pyobject_callmethod": [10, 38, 54, 56, 78, 469, 471], "pyobject_callfunctionobjarg": [10, 56], "variad": [10, 67, 115, 383, 438], "pyobject_callmethodobjarg": [10, 56], "pyobject_callmethodnoarg": 10, "pyobject_callmethodonearg": 10, "arg1": [10, 74, 84, 94, 96, 113, 188, 222, 289, 290, 425, 461, 462, 464], "arg2": [10, 74, 84, 94, 96, 113, 188, 222, 289, 386, 425, 461, 462, 464], "kwdict": [10, 72], "readi": [10, 32, 63, 79, 91, 99, 100, 102, 129, 130, 133, 141, 147, 167, 173, 183, 187, 229, 239, 242, 255, 266, 280, 325, 326, 334, 338, 363, 378, 386, 413, 414, 442, 459, 462, 472, 473, 475], "py_tpflags_method_descriptor": [10, 62], "featur": [10, 23, 32, 33, 48, 50, 53, 60, 62, 65, 67, 73, 74, 77, 78, 79, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 103, 106, 110, 115, 117, 140, 144, 148, 149, 151, 155, 157, 163, 164, 169, 173, 174, 176, 177, 178, 180, 184, 190, 191, 205, 207, 210, 222, 223, 233, 240, 244, 247, 254, 259, 264, 267, 280, 289, 290, 294, 296, 299, 316, 321, 329, 332, 337, 338, 340, 341, 345, 349, 355, 359, 362, 366, 377, 381, 385, 386, 388, 392, 397, 399, 404, 406, 407, 408, 411, 412, 413, 419, 425, 427, 429, 431, 432, 433, 435, 436, 437, 438, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 472, 481], "unbound": [10, 43, 62, 67, 100, 112, 157, 183, 184, 188, 222, 223, 252, 265, 313, 359, 362, 381, 382, 425, 426, 429, 433, 461, 463, 467, 469, 475, 477], "full": [10, 11, 28, 32, 33, 34, 56, 62, 63, 67, 72, 75, 77, 79, 83, 86, 88, 92, 99, 100, 103, 104, 107, 120, 121, 131, 136, 144, 145, 147, 154, 155, 157, 158, 160, 164, 165, 170, 172, 173, 177, 180, 183, 187, 188, 190, 194, 197, 198, 209, 210, 216, 219, 224, 240, 244, 248, 252, 256, 258, 264, 266, 272, 275, 277, 278, 280, 281, 289, 290, 292, 293, 294, 299, 311, 313, 316, 328, 329, 330, 332, 334, 335, 338, 340, 341, 344, 345, 349, 355, 359, 363, 366, 381, 382, 383, 385, 386, 391, 392, 396, 399, 400, 404, 408, 410, 416, 419, 424, 425, 426, 429, 430, 433, 437, 439, 441, 443, 445, 446, 447, 449, 452, 453, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pycallable_check": [10, 56, 71, 72], "pycapsul": [11, 72, 466, 468, 469, 472], "opaqu": [11, 13, 26, 32, 34, 38, 60, 62, 113, 168, 255, 311, 326, 339, 405, 410, 443, 460, 469, 470, 471, 472, 474, 477, 478, 479], "often": [11, 13, 32, 34, 57, 63, 72, 74, 75, 77, 79, 80, 83, 84, 86, 91, 92, 94, 97, 100, 103, 105, 106, 107, 108, 111, 117, 119, 120, 143, 148, 152, 157, 163, 168, 172, 173, 180, 181, 183, 187, 190, 191, 195, 210, 222, 224, 227, 230, 233, 251, 252, 258, 278, 289, 296, 305, 306, 308, 315, 328, 334, 337, 338, 340, 341, 343, 345, 351, 359, 362, 363, 366, 383, 386, 387, 392, 411, 421, 425, 427, 431, 432, 433, 437, 439, 440, 441, 443, 445, 447, 448, 450, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 475, 478], "dynam": [11, 22, 25, 30, 41, 44, 51, 62, 65, 67, 71, 72, 73, 76, 77, 78, 79, 83, 84, 86, 99, 100, 101, 104, 110, 113, 115, 138, 179, 187, 200, 222, 223, 244, 247, 251, 252, 281, 290, 293, 318, 332, 334, 337, 341, 342, 349, 366, 373, 381, 383, 386, 387, 404, 420, 425, 427, 429, 433, 437, 442, 453, 459, 461, 462, 464, 465, 470, 472, 473, 474, 477, 478], "load": [11, 14, 30, 32, 33, 34, 40, 44, 56, 57, 58, 67, 71, 72, 73, 76, 78, 83, 84, 85, 86, 92, 93, 96, 98, 99, 100, 104, 107, 115, 119, 139, 148, 152, 163, 164, 181, 184, 188, 190, 210, 220, 222, 240, 241, 244, 247, 248, 250, 258, 259, 264, 265, 271, 273, 276, 281, 290, 294, 296, 299, 301, 304, 305, 308, 311, 317, 327, 331, 337, 338, 341, 349, 351, 359, 363, 365, 366, 376, 379, 381, 382, 402, 407, 410, 411, 416, 417, 418, 420, 421, 422, 424, 425, 428, 430, 433, 443, 447, 449, 452, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pycapsule_destructor": [11, 56], "destructor": [11, 32, 56, 62, 74, 75, 77, 83, 86, 112, 185, 290, 313, 345, 349, 425, 433, 452, 468, 472, 476, 478], "pycapsule_new": [11, 56, 72], "pycapsule_checkexact": 11, "encapsul": [11, 79, 83, 84, 87, 92, 98, 109, 111, 152, 163, 199, 205, 245, 255, 283, 302, 332, 349, 407, 411, 413, 416, 424, 429, 433, 463, 464, 465, 466, 474], "outliv": [11, 57, 281, 424], "permit": [11, 27, 58, 72, 87, 97, 119, 183, 207, 209, 218, 222, 242, 252, 254, 256, 259, 262, 268, 280, 281, 290, 296, 305, 316, 341, 345, 351, 386, 407, 416, 423, 427, 428, 432, 433, 452, 464, 465, 471, 473, 474, 475, 478], "attribut": [11, 21, 22, 23, 24, 26, 27, 30, 32, 34, 44, 48, 49, 55, 59, 60, 61, 62, 67, 73, 78, 86, 87, 94, 99, 103, 105, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 123, 126, 130, 133, 134, 139, 141, 145, 146, 147, 148, 152, 155, 156, 157, 164, 165, 169, 171, 172, 173, 174, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 197, 200, 202, 204, 205, 208, 210, 212, 213, 220, 222, 223, 225, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 248, 251, 255, 256, 259, 265, 266, 267, 268, 270, 278, 280, 281, 283, 288, 292, 293, 295, 296, 299, 300, 301, 302, 307, 309, 310, 311, 312, 316, 318, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 344, 345, 350, 355, 357, 358, 359, 361, 362, 363, 364, 366, 368, 369, 371, 376, 378, 379, 380, 381, 382, 383, 385, 390, 391, 392, 395, 396, 397, 399, 402, 404, 405, 407, 408, 410, 411, 412, 414, 416, 417, 419, 420, 421, 422, 423, 424, 426, 432, 433, 437, 438, 439, 440, 444, 447, 448, 449, 453, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 481], "modulenam": [11, 70, 72, 78, 84, 96, 447], "attributenam": [11, 72], "pycapsule_import": [11, 56, 72], "pycapsule_getpoint": [11, 56, 466], "compar": [11, 23, 32, 33, 48, 62, 63, 67, 71, 74, 77, 83, 86, 88, 91, 93, 97, 99, 100, 102, 103, 104, 105, 108, 119, 123, 144, 157, 163, 173, 178, 179, 180, 183, 187, 188, 190, 192, 193, 194, 199, 211, 213, 222, 223, 233, 234, 256, 259, 263, 264, 266, 268, 271, 280, 281, 289, 293, 294, 305, 308, 311, 313, 315, 323, 325, 337, 338, 339, 341, 343, 349, 359, 364, 366, 379, 383, 384, 385, 386, 387, 395, 402, 410, 422, 424, 425, 427, 429, 432, 437, 438, 441, 442, 444, 449, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "strcmp": [11, 18, 74], "pycapsule_getdestructor": [11, 56], "legal": [11, 76, 91, 106, 222, 238, 244, 255, 294, 363, 366, 373, 383, 417, 423, 427, 432, 438, 439, 449, 460, 461, 462, 464, 465, 466], "somewhat": [11, 23, 77, 86, 98, 100, 173, 180, 201, 223, 244, 263, 289, 290, 334, 357, 366, 422, 445, 446, 447, 459, 464, 467, 469, 477, 478], "ambigu": [11, 34, 67, 77, 86, 94, 103, 117, 180, 251, 256, 261, 289, 294, 316, 341, 422, 424, 427, 431, 432, 438, 459, 465, 469, 470, 471, 474, 476, 477, 478, 479], "pycapsule_isvalid": [11, 56, 466], "pyerr_occur": [11, 22, 23, 25, 34, 35, 38, 40, 48, 56, 63, 71, 72, 428], "disambigu": [11, 38, 67, 180, 427, 432], "pycapsule_getcontext": [11, 56], "context": [11, 16, 23, 32, 41, 44, 48, 53, 63, 65, 67, 72, 77, 78, 84, 86, 94, 98, 104, 106, 117, 119, 120, 121, 123, 125, 126, 129, 136, 148, 149, 157, 161, 163, 164, 165, 180, 181, 184, 185, 187, 188, 215, 220, 222, 227, 232, 233, 239, 247, 248, 249, 251, 252, 255, 259, 264, 265, 266, 267, 268, 275, 285, 287, 290, 292, 294, 295, 296, 302, 304, 305, 311, 312, 313, 316, 318, 319, 325, 326, 327, 332, 334, 335, 340, 342, 345, 349, 355, 356, 357, 359, 362, 365, 372, 374, 383, 385, 386, 392, 396, 399, 402, 407, 409, 410, 411, 412, 416, 419, 424, 426, 427, 428, 432, 433, 435, 439, 440, 453, 459, 466, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "pycapsule_getnam": [11, 56], "no_block": 11, "accessor": [11, 67, 84, 105, 222, 270, 408, 464, 478], "pycapsule_get": 11, "nonzero": [11, 23, 32, 58, 72, 103, 109, 112, 183, 188, 222, 266, 272, 275, 280, 297, 308, 315, 316, 341, 349, 358, 362, 363, 425, 432, 435, 452, 465, 478], "pycapsule_setcontext": [11, 56], "pycapsule_setdestructor": [11, 56], "pycapsule_setnam": [11, 56], "pycapsule_setpoint": [11, 56], "multipl": [12, 28, 30, 32, 33, 44, 46, 48, 56, 62, 63, 67, 70, 72, 74, 75, 77, 79, 83, 86, 88, 91, 93, 94, 102, 103, 104, 105, 106, 107, 112, 113, 117, 118, 119, 120, 121, 123, 126, 132, 134, 135, 140, 146, 148, 155, 157, 160, 163, 164, 166, 172, 174, 178, 180, 183, 184, 186, 190, 196, 202, 206, 210, 216, 218, 220, 222, 223, 225, 227, 229, 231, 232, 233, 242, 244, 247, 248, 250, 251, 252, 255, 258, 259, 264, 265, 267, 268, 272, 273, 275, 279, 280, 281, 288, 289, 290, 293, 294, 296, 297, 299, 300, 304, 311, 313, 315, 316, 317, 326, 327, 328, 332, 334, 335, 337, 338, 339, 340, 341, 344, 348, 349, 350, 353, 355, 359, 362, 364, 366, 372, 373, 374, 377, 381, 383, 385, 395, 396, 397, 399, 404, 406, 410, 412, 416, 424, 425, 426, 427, 428, 429, 432, 433, 438, 439, 441, 442, 446, 449, 450, 452, 453, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "scope": [12, 34, 51, 67, 77, 84, 86, 93, 97, 99, 100, 110, 111, 119, 141, 147, 157, 188, 222, 252, 256, 294, 304, 311, 317, 328, 334, 338, 348, 349, 366, 383, 386, 387, 396, 408, 410, 412, 424, 425, 427, 429, 433, 438, 442, 447, 459, 465, 467, 471, 472, 473, 476, 477, 478, 479, 481], "stack": [12, 23, 32, 34, 58, 67, 72, 74, 77, 93, 99, 101, 112, 115, 119, 123, 132, 136, 137, 141, 154, 157, 166, 168, 174, 181, 182, 188, 190, 210, 211, 222, 223, 244, 251, 254, 264, 266, 294, 312, 313, 316, 319, 328, 330, 334, 338, 339, 341, 349, 350, 362, 372, 385, 386, 387, 397, 424, 425, 426, 427, 432, 433, 435, 440, 442, 452, 459, 460, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 477, 478, 479], "frame": [12, 13, 16, 19, 23, 29, 32, 34, 48, 52, 65, 67, 77, 83, 93, 96, 101, 114, 136, 138, 139, 140, 141, 168, 174, 182, 188, 210, 211, 244, 252, 259, 264, 294, 330, 333, 334, 338, 341, 346, 349, 350, 366, 371, 372, 373, 378, 382, 397, 398, 404, 424, 426, 452, 460, 462, 463, 464, 466, 469, 471, 473, 474, 475, 477, 479], "outer": [12, 26, 84, 86, 136, 166, 183, 188, 204, 223, 234, 237, 252, 349, 424, 425, 426, 427, 432, 433, 437, 440, 467, 470, 471, 472, 473, 479], "elsewher": [12, 103, 111, 136, 154, 164, 269, 280, 321, 383, 391, 407, 424, 429, 432, 469, 470, 471, 474], "pycellobject": 12, "pycell_typ": 12, "pycell_check": 12, "ob": [12, 19, 20, 29, 55, 66, 399, 470], "pycell_new": 12, "pycell_get": 12, "pycell_set": [12, 469], "No": [12, 30, 32, 33, 44, 58, 59, 63, 67, 72, 74, 77, 79, 84, 92, 96, 99, 100, 103, 106, 107, 110, 117, 123, 130, 134, 136, 138, 155, 158, 164, 166, 172, 178, 180, 183, 188, 190, 193, 197, 202, 209, 220, 227, 228, 239, 242, 244, 247, 252, 255, 264, 267, 280, 285, 290, 291, 293, 294, 304, 311, 315, 316, 322, 331, 332, 337, 340, 341, 344, 345, 350, 355, 356, 362, 366, 373, 381, 385, 402, 407, 425, 427, 428, 438, 440, 441, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473], "low": [13, 16, 24, 34, 37, 56, 59, 62, 63, 67, 74, 79, 83, 85, 96, 99, 103, 104, 106, 118, 122, 123, 126, 130, 132, 133, 134, 136, 143, 147, 157, 161, 164, 166, 174, 175, 188, 210, 220, 222, 238, 251, 255, 257, 264, 278, 281, 290, 293, 305, 313, 315, 316, 325, 326, 327, 330, 332, 337, 338, 340, 341, 349, 353, 366, 380, 383, 397, 399, 410, 412, 421, 425, 453, 461, 462, 464, 465, 466, 469, 473, 475, 476, 478], "execut": [13, 22, 23, 24, 26, 27, 32, 33, 34, 44, 48, 50, 51, 52, 58, 65, 67, 71, 72, 74, 75, 76, 77, 84, 86, 88, 92, 94, 96, 100, 101, 102, 103, 106, 110, 111, 112, 117, 119, 120, 121, 122, 125, 126, 130, 132, 134, 136, 137, 139, 141, 147, 148, 152, 154, 155, 157, 160, 163, 166, 167, 173, 182, 184, 188, 189, 198, 210, 222, 223, 231, 233, 242, 245, 247, 251, 252, 255, 263, 264, 265, 266, 269, 277, 278, 280, 281, 289, 290, 291, 293, 294, 296, 297, 298, 300, 305, 306, 310, 312, 317, 319, 322, 325, 327, 328, 329, 331, 334, 337, 339, 341, 343, 344, 345, 349, 351, 355, 357, 362, 363, 365, 366, 368, 372, 375, 383, 385, 386, 387, 392, 395, 396, 397, 400, 402, 404, 417, 424, 427, 428, 429, 430, 433, 434, 437, 438, 440, 442, 443, 444, 445, 446, 448, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "hasn": [13, 34, 78, 79, 83, 84, 130, 132, 136, 163, 187, 229, 294, 311, 331, 338, 353, 386, 387, 459, 460, 464, 465, 467, 475, 477], "pycodeobject": [13, 26, 470], "subject": [13, 38, 44, 54, 60, 62, 74, 83, 94, 99, 100, 107, 119, 164, 180, 188, 190, 193, 197, 199, 200, 202, 240, 244, 254, 259, 264, 265, 266, 268, 285, 290, 304, 305, 315, 323, 327, 334, 338, 359, 363, 383, 423, 424, 425, 428, 432, 437, 438, 457, 464, 469, 470, 471, 474], "pycode_typ": 13, "pycode_check": 13, "co": [13, 30, 57, 65, 67, 75, 117, 151, 163, 174, 183, 218, 253, 272, 296, 334, 350, 359, 381, 448, 462, 463, 470, 472, 477, 478], "pycode_getnumfre": 13, "pyunstable_code_new": [13, 471], "argcount": [13, 65, 139, 382, 478], "kwonlyargcount": [13, 139, 382], "nlocal": [13, 139, 382], "stacksiz": [13, 139, 382], "varnam": 13, "freevar": 13, "cellvar": [13, 222], "filenam": [13, 23, 32, 33, 44, 58, 65, 67, 70, 76, 83, 84, 94, 96, 99, 100, 103, 109, 117, 119, 139, 141, 146, 148, 152, 154, 155, 156, 157, 160, 164, 166, 172, 173, 181, 186, 187, 190, 193, 194, 197, 198, 202, 210, 211, 215, 216, 220, 222, 227, 228, 231, 240, 244, 247, 251, 252, 262, 264, 265, 266, 267, 269, 276, 278, 280, 282, 283, 289, 290, 291, 292, 293, 294, 296, 299, 305, 306, 308, 316, 317, 327, 328, 329, 333, 337, 345, 348, 349, 354, 355, 357, 359, 366, 372, 375, 378, 379, 381, 382, 385, 387, 390, 392, 397, 400, 402, 403, 404, 408, 409, 410, 411, 418, 419, 433, 435, 443, 448, 449, 452, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "qualnam": [13, 19, 27, 29, 93, 99, 194, 208, 265], "firstlineno": 13, "linet": 13, "exceptiont": 13, "unstabl": [13, 23, 26, 28, 31, 38, 50, 60, 67, 74, 109, 183, 471, 478], "warn": [13, 26, 27, 28, 31, 32, 33, 34, 38, 50, 51, 56, 57, 58, 60, 67, 75, 77, 84, 86, 96, 99, 100, 102, 104, 109, 115, 122, 123, 126, 132, 136, 178, 179, 184, 185, 226, 247, 251, 255, 265, 266, 269, 280, 290, 305, 308, 312, 316, 330, 336, 337, 338, 345, 349, 355, 366, 370, 381, 383, 385, 394, 404, 411, 412, 413, 425, 426, 429, 432, 438, 447, 448, 449, 452, 453, 459, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 478, 479, 481], "minor": [13, 23, 26, 28, 32, 38, 50, 56, 60, 62, 65, 67, 76, 77, 78, 79, 83, 91, 100, 102, 107, 119, 157, 174, 200, 203, 290, 300, 310, 349, 352, 355, 412, 449, 453, 458, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478], "dummi": [13, 67, 72, 100, 111, 161, 173, 187, 227, 255, 290, 338, 355, 359, 362, 381, 404, 476], "pycode_newempti": [13, 466], "definit": [13, 30, 32, 34, 38, 44, 49, 56, 57, 58, 63, 67, 72, 73, 74, 75, 84, 86, 87, 91, 93, 97, 98, 100, 103, 109, 113, 117, 140, 141, 147, 155, 158, 166, 173, 174, 178, 180, 208, 222, 223, 227, 229, 235, 244, 247, 248, 251, 252, 253, 261, 264, 266, 270, 278, 280, 281, 286, 289, 296, 305, 309, 310, 312, 321, 332, 337, 341, 342, 349, 356, 361, 363, 374, 381, 382, 383, 384, 385, 392, 395, 399, 405, 406, 407, 408, 411, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 442, 446, 447, 450, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 477, 478, 479], "bytecod": [13, 30, 32, 34, 65, 67, 83, 84, 85, 86, 94, 96, 101, 103, 160, 184, 222, 247, 251, 252, 261, 297, 308, 321, 330, 348, 349, 379, 425, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 472, 473, 474, 475, 481], "bind": [13, 43, 57, 60, 67, 77, 84, 86, 92, 100, 104, 123, 139, 166, 168, 174, 190, 220, 222, 227, 238, 242, 252, 263, 265, 291, 295, 311, 317, 326, 332, 334, 335, 338, 348, 349, 359, 365, 368, 372, 373, 381, 406, 423, 424, 425, 427, 429, 430, 431, 433, 437, 438, 456, 459, 460, 461, 463, 464, 465, 469, 473, 474, 475, 477], "inter": [13, 187, 254, 257, 330, 383, 449, 472], "subtl": [13, 23, 62, 72, 77, 128, 172, 190, 212, 286, 289, 292, 305, 425, 426, 446, 474], "incorrect": [13, 86, 100, 103, 109, 154, 181, 190, 210, 222, 241, 244, 264, 268, 289, 290, 363, 383, 385, 387, 394, 408, 419, 428, 460, 461, 462, 464, 467, 469, 471, 473, 474, 478, 479], "vm": [13, 62, 83, 188, 289, 319, 350, 473, 474], "crash": [13, 32, 34, 42, 56, 62, 72, 74, 98, 119, 137, 148, 173, 181, 185, 211, 222, 244, 247, 268, 280, 289, 294, 296, 327, 349, 359, 453, 459, 464, 465, 471, 473, 474, 476], "extrem": [13, 77, 94, 98, 100, 106, 204, 259, 265, 290, 296, 315, 340, 386, 407, 419, 427], "care": [13, 23, 32, 34, 62, 65, 67, 72, 74, 75, 83, 84, 92, 93, 98, 99, 100, 102, 103, 106, 107, 111, 117, 119, 132, 141, 157, 166, 173, 178, 180, 183, 188, 190, 193, 205, 208, 224, 227, 247, 255, 264, 265, 266, 268, 280, 286, 289, 296, 305, 311, 330, 344, 345, 349, 355, 385, 386, 387, 397, 405, 408, 410, 418, 427, 437, 443, 445, 458, 459, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 479], "renam": [13, 41, 57, 62, 75, 83, 100, 109, 118, 139, 157, 210, 220, 244, 245, 249, 266, 268, 290, 293, 308, 325, 329, 339, 378, 385, 386, 418, 436, 437, 449, 459, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476], "pycode_new": [13, 466, 470, 471, 478], "deprec": [13, 23, 30, 32, 34, 41, 44, 47, 48, 53, 55, 56, 57, 58, 60, 62, 63, 67, 88, 92, 109, 113, 114, 117, 118, 119, 123, 124, 126, 129, 136, 138, 146, 148, 149, 150, 155, 158, 163, 165, 170, 173, 180, 183, 184, 195, 196, 202, 204, 206, 210, 215, 216, 220, 222, 231, 239, 240, 244, 245, 246, 247, 250, 252, 256, 263, 264, 269, 272, 277, 278, 284, 285, 289, 290, 292, 293, 295, 296, 298, 299, 301, 302, 311, 319, 321, 324, 325, 329, 332, 333, 334, 336, 338, 341, 343, 346, 347, 349, 355, 356, 359, 362, 363, 366, 368, 372, 381, 385, 392, 394, 396, 397, 400, 405, 410, 419, 420, 425, 427, 429, 458, 460, 461, 464, 467, 481], "until": [13, 30, 32, 33, 34, 58, 62, 65, 71, 72, 75, 78, 83, 84, 86, 87, 91, 94, 99, 100, 103, 104, 112, 117, 119, 123, 126, 127, 130, 131, 133, 134, 135, 136, 140, 148, 150, 157, 163, 174, 180, 183, 188, 204, 211, 215, 220, 222, 223, 227, 229, 232, 233, 237, 239, 240, 244, 247, 255, 258, 262, 264, 266, 267, 280, 289, 290, 292, 294, 296, 302, 305, 313, 317, 320, 322, 325, 326, 328, 330, 334, 335, 336, 337, 338, 341, 344, 345, 356, 357, 358, 359, 362, 364, 366, 378, 381, 383, 386, 392, 397, 399, 400, 402, 404, 405, 409, 412, 413, 421, 424, 425, 433, 437, 438, 439, 440, 449, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "again": [13, 22, 27, 28, 32, 44, 62, 72, 74, 75, 77, 82, 83, 84, 85, 86, 91, 93, 94, 100, 103, 104, 105, 106, 107, 108, 119, 130, 133, 135, 143, 144, 148, 157, 164, 167, 173, 174, 180, 185, 197, 209, 211, 218, 223, 229, 240, 244, 258, 264, 266, 272, 275, 279, 280, 289, 290, 292, 293, 294, 296, 305, 310, 325, 328, 330, 332, 337, 338, 341, 345, 349, 357, 359, 362, 366, 372, 373, 381, 384, 386, 387, 392, 397, 406, 410, 411, 421, 424, 425, 427, 429, 432, 433, 437, 438, 440, 441, 443, 444, 446, 447, 451, 458, 459, 461, 462, 465, 467, 469, 472, 473, 477, 478], "pyunstable_code_newwithposonlyarg": [13, 471], "posonlyargcount": [13, 139, 382, 478], "caveat": [13, 60, 67, 112, 135, 189, 243, 247, 252, 305, 308, 386, 425, 433, 457], "pycode_newwithposonlyarg": [13, 470, 471, 478], "funcnam": [13, 71, 96, 141, 264, 424, 437], "line": [13, 23, 24, 26, 32, 33, 34, 63, 65, 67, 71, 72, 75, 77, 79, 83, 84, 85, 86, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 113, 115, 116, 122, 133, 134, 139, 140, 141, 143, 146, 148, 149, 151, 154, 155, 156, 157, 164, 165, 166, 167, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 189, 190, 192, 193, 196, 197, 198, 199, 201, 202, 204, 205, 208, 210, 211, 216, 219, 220, 222, 227, 237, 239, 242, 245, 247, 248, 251, 253, 255, 256, 258, 261, 264, 265, 266, 267, 268, 269, 275, 278, 279, 280, 282, 283, 285, 293, 294, 295, 296, 298, 299, 302, 304, 305, 309, 310, 311, 312, 314, 315, 316, 318, 321, 324, 328, 329, 332, 338, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 356, 360, 361, 365, 366, 369, 372, 374, 378, 379, 381, 383, 384, 386, 387, 393, 396, 397, 400, 404, 408, 410, 413, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481], "pycode_addr2lin": [13, 462, 469, 470, 476], "byte_offset": 13, "pyframe_getlinenumb": [13, 26, 56, 466, 469, 470, 476, 479], "626": [13, 67, 188, 425, 471], "pycode_addr2loc": [13, 470], "start_lin": [13, 425], "start_column": [13, 425], "end_lin": [13, 425], "end_column": [13, 425], "column": [13, 33, 62, 67, 84, 96, 106, 119, 147, 148, 152, 172, 174, 187, 188, 190, 210, 222, 244, 252, 258, 259, 278, 290, 297, 305, 311, 316, 329, 337, 341, 344, 361, 365, 366, 375, 410, 413, 425, 439, 443, 452, 459, 466, 470, 475], "particular": [13, 32, 34, 44, 56, 58, 62, 63, 65, 67, 72, 74, 77, 84, 85, 86, 92, 94, 97, 98, 99, 106, 107, 108, 111, 112, 113, 117, 119, 135, 136, 148, 155, 158, 164, 166, 172, 173, 174, 179, 180, 190, 200, 205, 210, 224, 229, 237, 240, 244, 245, 248, 252, 254, 256, 259, 260, 264, 265, 266, 268, 271, 272, 273, 280, 281, 285, 289, 290, 296, 299, 313, 316, 319, 323, 325, 329, 330, 331, 332, 334, 338, 339, 341, 342, 344, 345, 349, 350, 359, 361, 362, 366, 372, 373, 378, 383, 385, 386, 387, 391, 392, 393, 396, 397, 399, 407, 408, 410, 417, 421, 423, 424, 425, 427, 428, 429, 431, 433, 437, 439, 443, 447, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "pycode_getcod": [13, 470], "getattr": [13, 77, 84, 86, 87, 92, 99, 100, 113, 123, 157, 173, 178, 188, 222, 252, 258, 280, 288, 289, 296, 342, 355, 382, 383, 424, 437, 447, 459, 472, 474, 477], "co_cod": [13, 252, 425, 470], "demand": [13, 41, 63, 67, 92, 164, 280, 289, 300, 386, 424, 455, 469, 471, 475, 479], "debugg": [13, 31, 41, 56, 67, 72, 182, 190, 210, 211, 222, 244, 251, 318, 349, 350, 378, 385, 425, 437, 453, 458, 461, 462, 464, 465, 466, 470, 471, 472, 476, 477, 478], "profil": [13, 31, 33, 34, 50, 67, 79, 84, 95, 96, 153, 155, 251, 330, 338, 343, 349, 351, 362, 366, 402, 435, 448, 452, 453, 456, 460, 461, 463, 464, 465, 467, 469, 470, 471, 476, 478], "pycode_getvarnam": [13, 470], "co_varnam": [13, 188, 252, 425, 470], "pytupleobject": [13, 53, 58, 59, 61], "pycode_getcellvar": [13, 470], "co_cellvar": [13, 252, 425, 470], "pycode_getfreevar": [13, 470], "co_freevar": [13, 252, 425, 470], "pycode_addwatch": [13, 471], "pycode_watchcallback": 13, "regist": [13, 14, 22, 27, 32, 33, 58, 60, 62, 67, 72, 75, 80, 83, 84, 86, 106, 107, 113, 117, 123, 125, 126, 129, 130, 137, 155, 158, 164, 166, 168, 172, 190, 194, 200, 205, 211, 222, 223, 238, 247, 251, 255, 264, 273, 280, 286, 290, 295, 296, 299, 312, 317, 325, 326, 329, 330, 334, 338, 341, 349, 359, 366, 373, 381, 383, 385, 392, 397, 399, 400, 403, 407, 410, 412, 417, 418, 424, 425, 427, 429, 451, 458, 459, 460, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 477, 478], "watcher": [13, 22, 27, 60, 62, 67, 74, 134, 471, 479], "id": [13, 22, 27, 32, 44, 60, 67, 77, 79, 86, 94, 96, 99, 100, 112, 114, 115, 119, 127, 130, 139, 150, 157, 174, 178, 190, 193, 194, 197, 200, 202, 206, 222, 227, 230, 237, 256, 258, 264, 265, 266, 267, 268, 269, 278, 280, 285, 290, 296, 300, 302, 304, 307, 311, 316, 319, 325, 326, 331, 334, 337, 338, 339, 345, 346, 350, 353, 354, 355, 357, 362, 366, 373, 383, 385, 386, 387, 395, 398, 399, 410, 413, 425, 427, 428, 433, 447, 448, 455, 458, 459, 460, 461, 463, 464, 465, 470, 471, 473, 477, 478, 479], "pycode_clearwatch": [13, 471], "watcher_id": [13, 22, 27, 60], "clear": [13, 14, 22, 27, 31, 32, 34, 44, 46, 57, 58, 60, 62, 66, 67, 72, 74, 75, 77, 79, 84, 86, 91, 96, 98, 100, 103, 104, 106, 107, 123, 135, 152, 155, 157, 158, 164, 166, 174, 183, 188, 190, 202, 213, 220, 223, 224, 229, 240, 244, 247, 252, 262, 264, 266, 268, 273, 289, 290, 294, 299, 316, 317, 329, 330, 334, 337, 340, 341, 349, 355, 359, 362, 373, 378, 379, 380, 381, 383, 386, 387, 396, 397, 410, 420, 424, 425, 427, 437, 439, 446, 453, 458, 459, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 476, 477, 479], "identifi": [13, 22, 23, 27, 32, 41, 60, 63, 67, 72, 74, 75, 76, 84, 86, 97, 99, 106, 107, 112, 113, 115, 117, 119, 145, 150, 157, 172, 173, 182, 188, 190, 191, 193, 202, 209, 222, 224, 227, 244, 245, 251, 252, 256, 265, 266, 268, 278, 280, 285, 290, 294, 299, 305, 311, 312, 316, 317, 320, 325, 332, 334, 338, 341, 342, 343, 348, 349, 352, 359, 362, 365, 366, 369, 370, 383, 384, 385, 387, 391, 392, 395, 402, 404, 407, 410, 412, 413, 417, 423, 424, 425, 426, 429, 430, 433, 437, 438, 440, 445, 448, 449, 458, 462, 463, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 477, 478, 479], "pycodeev": 13, "enumer": [13, 22, 23, 27, 67, 77, 92, 94, 105, 106, 147, 157, 179, 222, 223, 251, 258, 280, 308, 341, 362, 379, 395, 402, 419, 438, 439, 447, 449, 458, 470, 471, 474, 476, 481], "event": [13, 22, 24, 27, 30, 32, 41, 57, 58, 65, 67, 72, 79, 91, 96, 99, 112, 118, 120, 121, 122, 126, 128, 129, 130, 132, 133, 134, 136, 141, 161, 173, 174, 180, 182, 186, 188, 207, 212, 219, 220, 222, 224, 228, 233, 239, 245, 251, 254, 255, 257, 264, 266, 271, 275, 278, 279, 280, 285, 290, 293, 294, 296, 302, 305, 306, 311, 312, 319, 325, 326, 329, 332, 334, 337, 338, 339, 341, 345, 349, 353, 355, 356, 357, 359, 365, 368, 382, 385, 392, 399, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 423, 425, 427, 433, 440, 443, 449, 452, 457, 458, 459, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "py_code_event_cr": 13, "py_code_event_destroi": 13, "destruct": [13, 32, 72, 74, 152, 174, 252, 255, 281, 341, 357, 425, 460, 471, 472], "prior": [13, 22, 27, 32, 44, 58, 67, 77, 84, 86, 92, 99, 100, 105, 110, 119, 123, 140, 163, 172, 183, 208, 222, 223, 242, 248, 252, 264, 313, 326, 329, 334, 337, 338, 340, 341, 345, 349, 353, 355, 357, 359, 362, 383, 385, 399, 410, 419, 423, 424, 425, 427, 429, 432, 440, 471, 474, 475, 476, 477, 478], "inspect": [13, 22, 27, 32, 33, 65, 67, 72, 75, 86, 87, 96, 100, 102, 110, 117, 119, 126, 136, 153, 158, 172, 178, 190, 222, 224, 232, 247, 248, 251, 256, 264, 268, 294, 299, 304, 310, 312, 329, 330, 331, 338, 341, 349, 355, 359, 368, 379, 383, 385, 386, 392, 419, 424, 425, 452, 459, 460, 461, 465, 466], "resurrect": [13, 22, 27, 349, 359, 362, 425, 472, 479], "prevent": [13, 22, 23, 27, 32, 34, 41, 57, 60, 67, 72, 74, 75, 83, 84, 86, 91, 92, 98, 99, 100, 106, 107, 123, 136, 155, 157, 164, 166, 167, 173, 178, 183, 185, 187, 190, 203, 210, 220, 222, 223, 234, 244, 247, 256, 259, 265, 266, 268, 269, 273, 280, 285, 289, 290, 293, 302, 308, 332, 334, 338, 345, 349, 350, 355, 359, 366, 378, 381, 383, 385, 386, 387, 397, 399, 406, 419, 421, 425, 427, 429, 435, 438, 446, 447, 450, 452, 458, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "later": [13, 22, 23, 24, 27, 32, 33, 34, 41, 44, 60, 71, 72, 74, 75, 83, 85, 91, 94, 99, 100, 103, 104, 107, 111, 117, 122, 123, 135, 136, 137, 138, 139, 146, 148, 149, 151, 152, 155, 164, 166, 173, 174, 180, 188, 193, 199, 202, 227, 232, 240, 244, 247, 252, 255, 258, 262, 263, 265, 267, 276, 280, 289, 290, 296, 316, 322, 325, 328, 330, 334, 337, 338, 346, 349, 355, 357, 359, 378, 383, 385, 386, 387, 392, 397, 398, 399, 418, 421, 423, 424, 425, 427, 429, 433, 436, 437, 438, 439, 446, 447, 452, 453, 458, 459, 460, 461, 462, 465, 466, 467, 470, 471, 472, 474, 475, 477, 479], "activ": [13, 22, 23, 27, 32, 34, 48, 58, 62, 65, 71, 77, 79, 84, 85, 91, 103, 104, 108, 123, 129, 135, 136, 141, 148, 149, 157, 166, 174, 183, 207, 210, 215, 220, 222, 240, 244, 248, 251, 260, 269, 280, 285, 289, 292, 294, 302, 305, 311, 325, 331, 335, 337, 338, 341, 345, 349, 350, 362, 363, 366, 373, 381, 382, 386, 387, 396, 408, 409, 412, 433, 438, 450, 452, 458, 459, 461, 462, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "user": [13, 23, 28, 32, 33, 34, 38, 41, 43, 56, 60, 62, 63, 65, 67, 69, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 92, 93, 96, 97, 98, 99, 100, 102, 103, 106, 107, 111, 115, 117, 122, 123, 126, 130, 132, 136, 139, 141, 148, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 170, 172, 174, 176, 178, 180, 182, 183, 184, 186, 190, 197, 207, 208, 209, 210, 213, 220, 223, 224, 225, 226, 227, 230, 232, 237, 239, 240, 242, 245, 247, 248, 251, 252, 254, 255, 259, 263, 264, 266, 268, 269, 272, 278, 280, 283, 285, 289, 290, 291, 292, 293, 294, 296, 297, 300, 302, 307, 308, 309, 312, 316, 317, 319, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 344, 345, 349, 350, 353, 355, 356, 357, 359, 362, 363, 366, 367, 370, 372, 373, 376, 377, 378, 381, 382, 385, 387, 391, 392, 393, 396, 397, 400, 402, 404, 408, 409, 410, 411, 412, 416, 418, 419, 422, 423, 424, 426, 427, 429, 433, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "reli": [13, 24, 50, 51, 56, 67, 72, 75, 86, 87, 92, 93, 98, 100, 102, 104, 108, 130, 137, 148, 157, 158, 178, 180, 222, 247, 252, 264, 273, 280, 289, 290, 296, 299, 300, 315, 327, 329, 341, 349, 357, 359, 361, 362, 363, 383, 385, 387, 396, 424, 425, 426, 429, 437, 438, 447, 458, 459, 462, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478], "print": [13, 22, 27, 31, 32, 33, 34, 41, 48, 58, 62, 67, 71, 72, 74, 75, 77, 83, 84, 85, 86, 87, 88, 93, 94, 96, 97, 98, 99, 100, 103, 106, 107, 109, 110, 111, 112, 115, 119, 120, 122, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 147, 148, 152, 154, 156, 157, 160, 163, 164, 165, 166, 167, 169, 172, 173, 174, 178, 180, 181, 183, 185, 187, 188, 190, 193, 197, 198, 201, 202, 208, 210, 211, 213, 217, 220, 222, 223, 224, 225, 226, 227, 229, 232, 237, 239, 241, 242, 244, 245, 247, 248, 251, 252, 254, 255, 258, 259, 264, 266, 268, 275, 276, 279, 280, 285, 290, 293, 294, 296, 297, 298, 301, 302, 304, 305, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 322, 326, 328, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 345, 349, 352, 354, 355, 356, 357, 359, 361, 362, 364, 366, 372, 373, 375, 377, 379, 381, 383, 385, 386, 392, 394, 396, 397, 399, 402, 404, 405, 408, 409, 410, 413, 414, 416, 417, 418, 419, 422, 424, 425, 426, 427, 432, 433, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 452, 453, 458, 459, 460, 461, 462, 463, 464, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "unrais": [13, 22, 23, 27, 139, 337, 349, 359, 470, 478], "pyerr_writeunrais": [13, 22, 23, 27, 56, 74], "pend": [13, 22, 23, 27, 32, 38, 67, 74, 86, 109, 123, 130, 136, 163, 233, 255, 268, 278, 302, 325, 330, 337, 338, 421, 427, 472, 473, 474, 476, 479, 481], "extern": [13, 34, 50, 67, 72, 77, 78, 83, 84, 86, 92, 98, 100, 105, 115, 118, 119, 148, 155, 164, 173, 181, 194, 213, 234, 244, 247, 252, 254, 264, 269, 271, 290, 295, 308, 311, 335, 341, 344, 345, 355, 357, 359, 362, 366, 381, 385, 404, 405, 406, 407, 409, 410, 411, 412, 413, 419, 425, 427, 440, 458, 465, 467, 468, 470, 472, 475, 476, 477, 478, 479], "compil": [13, 30, 32, 33, 34, 41, 44, 56, 57, 58, 62, 65, 67, 73, 75, 76, 79, 83, 84, 85, 86, 94, 100, 101, 106, 108, 109, 110, 139, 154, 164, 173, 177, 179, 181, 188, 190, 210, 217, 222, 227, 232, 239, 244, 245, 247, 249, 251, 252, 254, 261, 265, 267, 271, 300, 303, 305, 311, 316, 317, 321, 328, 337, 338, 341, 342, 344, 349, 352, 356, 359, 364, 378, 382, 383, 384, 385, 397, 407, 419, 423, 425, 426, 429, 431, 432, 433, 436, 437, 442, 452, 455, 457, 459, 460, 461, 462, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 479], "attach": [13, 32, 44, 67, 71, 98, 99, 100, 117, 123, 129, 157, 163, 180, 184, 190, 191, 193, 194, 196, 200, 202, 203, 204, 209, 244, 264, 265, 281, 325, 326, 337, 349, 366, 372, 378, 385, 387, 404, 422, 423, 424, 425, 433, 437, 440, 448, 460, 462, 466, 467, 470, 473, 476, 478], "tier": [13, 56, 470, 471], "pyunstable_eval_requestcodeextraindex": [13, 471], "freefunc": [13, 44, 62, 74], "pycode_getextra": 13, "pycode_setextra": 13, "py_decref": [13, 22, 23, 28, 34, 35, 44, 51, 56, 62, 71, 72, 74, 75, 78, 86, 98, 469, 471, 478], "_pyeval_requestcodeextraindex": [13, 471], "privat": [13, 31, 32, 41, 42, 56, 67, 84, 92, 93, 94, 173, 178, 187, 220, 222, 244, 245, 247, 256, 275, 280, 296, 302, 332, 338, 343, 345, 359, 383, 386, 427, 432, 433, 442, 447, 458, 460, 461, 462, 465, 469, 470, 471, 472, 473, 474, 475, 476, 478], "pyunstable_code_getextra": [13, 471], "_pycode_getextra": [13, 471], "pyunstable_code_setextra": [13, 471], "_pycode_setextra": [13, 471], "pycodec_regist": [14, 56], "search_funct": [14, 155], "tri": [14, 32, 41, 47, 62, 72, 74, 75, 77, 84, 86, 94, 97, 103, 109, 123, 138, 156, 173, 185, 188, 190, 200, 206, 222, 255, 263, 264, 265, 266, 273, 279, 280, 286, 290, 300, 310, 316, 319, 332, 342, 359, 362, 366, 392, 404, 425, 427, 429, 431, 440, 459, 460, 461, 462, 463, 464, 465, 466, 467, 477], "packag": [14, 30, 32, 33, 56, 62, 63, 67, 69, 73, 76, 78, 79, 84, 86, 92, 95, 99, 100, 109, 118, 140, 148, 157, 161, 170, 173, 180, 184, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 209, 222, 227, 235, 238, 239, 244, 247, 250, 251, 252, 258, 264, 265, 266, 270, 273, 276, 277, 278, 280, 282, 291, 304, 309, 310, 312, 321, 327, 331, 332, 337, 338, 340, 342, 349, 351, 352, 365, 366, 372, 376, 377, 381, 382, 383, 385, 386, 387, 389, 392, 396, 397, 408, 411, 415, 418, 419, 420, 422, 423, 430, 433, 435, 441, 442, 448, 451, 452, 453, 455, 457, 459, 461, 463, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "pycodec_unregist": [14, 56, 469], "unregist": [14, 123, 125, 137, 155, 211, 290, 325, 326, 329, 350, 366, 399, 469, 479], "cach": [14, 30, 33, 41, 60, 62, 63, 67, 72, 74, 83, 86, 92, 99, 103, 107, 113, 123, 136, 144, 155, 157, 160, 173, 181, 187, 188, 213, 217, 223, 227, 247, 262, 264, 280, 285, 290, 291, 299, 308, 316, 321, 327, 337, 338, 344, 349, 357, 359, 379, 383, 385, 392, 399, 420, 422, 424, 447, 449, 450, 452, 458, 460, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "noth": [14, 23, 32, 33, 34, 41, 57, 63, 71, 72, 74, 77, 88, 99, 100, 103, 104, 107, 112, 113, 119, 129, 133, 136, 137, 151, 155, 166, 174, 178, 180, 187, 188, 190, 195, 207, 208, 210, 220, 223, 237, 244, 245, 255, 263, 264, 265, 266, 268, 279, 280, 289, 296, 302, 316, 329, 330, 335, 337, 341, 343, 345, 346, 356, 362, 366, 379, 383, 385, 396, 404, 414, 423, 425, 427, 432, 433, 436, 437, 438, 445, 447, 450, 452, 461, 462, 465, 466, 471, 474, 475, 478, 479], "pycodec_knownencod": [14, 56], "pycodec_encod": [14, 56, 471], "lookuperror": [14, 23, 63, 155, 167, 210, 341, 447, 474], "pycodec_decod": [14, 56, 471], "decod": [14, 23, 32, 33, 58, 63, 65, 67, 71, 72, 86, 100, 102, 106, 118, 123, 130, 133, 134, 138, 140, 142, 143, 172, 173, 185, 193, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 210, 222, 232, 241, 247, 251, 255, 267, 282, 285, 290, 293, 296, 297, 301, 333, 334, 337, 338, 341, 344, 345, 347, 349, 355, 356, 359, 374, 375, 376, 391, 392, 396, 404, 416, 419, 425, 429, 432, 443, 448, 452, 459, 461, 463, 464, 465, 466, 467, 468, 472, 473, 474, 475, 476, 479], "lower": [14, 32, 56, 63, 67, 71, 83, 84, 86, 91, 96, 100, 103, 105, 119, 123, 130, 136, 137, 143, 147, 152, 155, 157, 160, 164, 174, 175, 177, 183, 192, 193, 197, 199, 200, 202, 208, 216, 222, 223, 233, 237, 242, 268, 271, 280, 285, 290, 305, 316, 319, 322, 334, 337, 338, 341, 342, 349, 357, 362, 363, 364, 372, 374, 381, 383, 391, 392, 397, 425, 427, 433, 439, 460, 462, 463, 464, 465, 466, 468, 472, 474, 479], "insensit": [14, 18, 67, 86, 103, 105, 106, 155, 157, 164, 193, 202, 241, 242, 247, 273, 293, 316, 331, 337, 342, 343, 355, 359, 392, 397, 404, 452, 458, 463, 465, 477, 481], "keyerror": [14, 22, 23, 34, 54, 77, 84, 157, 164, 167, 181, 193, 194, 202, 208, 210, 230, 233, 240, 247, 258, 268, 293, 307, 325, 326, 327, 336, 341, 342, 352, 355, 382, 383, 384, 386, 387, 419, 422, 425, 429, 447, 449, 462, 463, 466, 473, 476, 478], "pycodec_incrementalencod": [14, 56], "incrementalencod": [14, 67, 142, 464], "pycodec_incrementaldecod": [14, 56], "incrementaldecod": [14, 67, 142, 255, 464], "pycodec_streamread": [14, 56], "stream": [14, 24, 32, 33, 40, 67, 83, 86, 94, 99, 104, 106, 115, 120, 123, 124, 127, 134, 136, 142, 143, 146, 154, 166, 174, 191, 197, 198, 203, 204, 209, 210, 216, 222, 226, 231, 233, 239, 242, 244, 246, 249, 251, 258, 259, 264, 265, 266, 267, 273, 278, 290, 295, 297, 304, 305, 311, 325, 326, 328, 329, 330, 331, 333, 334, 335, 345, 346, 349, 355, 359, 375, 383, 385, 392, 396, 398, 404, 405, 406, 409, 410, 413, 414, 416, 419, 421, 425, 427, 431, 432, 435, 447, 452, 459, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 478], "streamread": [14, 67, 121, 123, 134, 142, 463, 464, 475, 476], "factori": [14, 62, 67, 86, 97, 117, 123, 125, 127, 130, 155, 166, 169, 173, 179, 186, 190, 200, 204, 205, 223, 247, 253, 264, 265, 266, 268, 272, 280, 289, 295, 312, 329, 362, 366, 368, 383, 387, 399, 404, 407, 410, 416, 417, 425, 461, 464, 465, 468, 470, 471, 472, 473, 475, 477, 478, 479], "pycodec_streamwrit": [14, 56], "streamwrit": [14, 67, 121, 123, 134, 142, 464, 470, 477], "pycodec_registererror": [14, 56], "unencod": [14, 44, 106, 155, 314, 462, 467, 472], "undecod": [14, 58, 106, 155, 193, 290, 472], "unicodeencodeerror": [14, 23, 44, 70, 106, 155, 210, 349, 391, 447, 470, 472, 478], "unicodedecodeerror": [14, 23, 106, 155, 210, 290, 391, 447, 464, 467, 472, 474, 478], "unicodetranslateerror": [14, 23, 155, 210, 447], "problemat": [14, 60, 86, 164, 265, 280, 463, 468, 470, 472, 477], "extract": [14, 20, 34, 55, 67, 71, 73, 74, 88, 93, 94, 97, 98, 116, 117, 144, 174, 180, 187, 188, 190, 194, 195, 197, 211, 222, 227, 233, 239, 240, 248, 249, 252, 258, 290, 294, 309, 310, 316, 327, 329, 332, 341, 349, 378, 391, 425, 438, 439, 440, 448, 458, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 478], "replac": [14, 22, 24, 30, 32, 33, 34, 37, 41, 43, 55, 56, 58, 59, 60, 62, 63, 67, 70, 72, 77, 83, 84, 85, 88, 91, 92, 93, 94, 98, 100, 106, 107, 109, 117, 119, 123, 129, 136, 147, 148, 154, 155, 157, 161, 163, 164, 170, 173, 174, 176, 178, 180, 187, 188, 190, 193, 194, 199, 202, 203, 206, 208, 210, 211, 215, 222, 226, 232, 233, 236, 237, 247, 248, 249, 252, 255, 263, 264, 265, 268, 269, 273, 276, 280, 289, 290, 291, 293, 294, 304, 305, 312, 315, 316, 317, 318, 328, 329, 330, 337, 338, 340, 341, 342, 349, 355, 357, 359, 361, 362, 363, 365, 366, 368, 372, 373, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 396, 397, 399, 404, 406, 407, 410, 412, 414, 418, 419, 422, 425, 427, 430, 432, 433, 436, 437, 443, 446, 447, 448, 452, 453, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "resum": [14, 32, 86, 94, 127, 130, 131, 133, 136, 166, 174, 175, 188, 252, 280, 290, 293, 294, 296, 311, 313, 350, 358, 362, 404, 424, 425, 427, 437, 461, 462, 463, 464, 470], "pycodec_lookuperror": [14, 56], "strict": [14, 33, 63, 93, 94, 97, 106, 117, 140, 155, 164, 172, 173, 183, 199, 204, 205, 208, 222, 237, 239, 240, 241, 245, 249, 252, 255, 256, 258, 259, 272, 273, 290, 291, 292, 293, 296, 338, 341, 349, 359, 363, 391, 407, 423, 453, 459, 460, 462, 465, 466, 469, 471, 472, 473, 474, 475, 477], "pycodec_stricterror": [14, 56], "exc": [14, 23, 32, 46, 109, 119, 130, 136, 163, 166, 210, 378, 385, 387, 425, 433, 440, 465, 467, 469, 471, 473], "pycodec_ignoreerror": [14, 56], "faulti": 14, "pycodec_replaceerror": [14, 56], "fffd": [14, 106, 155, 459], "pycodec_xmlcharrefreplaceerror": [14, 56], "xml": [14, 67, 79, 94, 103, 106, 155, 222, 251, 253, 255, 270, 301, 324, 392, 415, 448, 449, 458, 460, 461, 462, 463, 464, 465, 466, 470, 472, 476, 481], "pycodec_backslashreplaceerror": [14, 56], "backslash": [14, 67, 155, 156, 190, 206, 222, 244, 255, 280, 290, 293, 316, 345, 432, 443, 462, 463, 467, 471, 476, 477], "escap": [14, 16, 41, 48, 58, 67, 72, 77, 84, 91, 100, 103, 106, 117, 123, 134, 155, 164, 172, 174, 175, 187, 205, 222, 228, 235, 244, 247, 255, 259, 285, 316, 318, 328, 341, 342, 345, 363, 381, 383, 391, 414, 416, 425, 446, 449, 459, 460, 463, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pycodec_namereplaceerror": [14, 56, 475], "7": [14, 16, 17, 20, 23, 25, 30, 32, 34, 39, 41, 42, 44, 46, 48, 55, 57, 58, 62, 67, 77, 84, 88, 91, 93, 94, 96, 100, 102, 103, 106, 108, 110, 112, 117, 122, 123, 126, 128, 130, 132, 133, 136, 137, 143, 147, 148, 155, 157, 160, 163, 164, 166, 167, 170, 173, 174, 175, 178, 180, 183, 185, 187, 188, 190, 192, 199, 200, 202, 205, 206, 208, 210, 211, 218, 222, 223, 224, 232, 233, 234, 238, 239, 241, 242, 247, 248, 249, 252, 255, 256, 258, 259, 263, 264, 266, 267, 272, 275, 278, 280, 281, 283, 290, 293, 294, 296, 297, 303, 304, 305, 308, 309, 310, 313, 315, 316, 319, 329, 330, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 355, 362, 363, 364, 374, 375, 378, 379, 381, 382, 383, 385, 386, 387, 391, 394, 395, 396, 397, 400, 404, 406, 409, 410, 411, 416, 417, 418, 419, 423, 424, 425, 427, 429, 432, 437, 438, 439, 441, 443, 446, 447, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 481], "distinct": [15, 32, 34, 41, 44, 62, 77, 84, 86, 91, 102, 103, 104, 106, 138, 157, 166, 178, 180, 183, 190, 223, 258, 265, 267, 272, 281, 289, 296, 305, 331, 337, 338, 341, 344, 349, 366, 383, 404, 429, 432, 443, 459, 461, 465, 472, 473, 476, 477, 479], "dereferenc": [15, 173, 224, 399, 473], "throughout": [15, 67, 72, 79, 92, 99, 109, 139, 183, 247, 386, 431, 459, 461, 462, 464, 465, 466, 470, 472, 475], "portion": [15, 62, 86, 91, 94, 97, 103, 125, 133, 138, 151, 176, 180, 183, 200, 206, 223, 232, 264, 265, 266, 334, 339, 340, 373, 385, 391, 404, 407, 413, 416, 417, 423, 429, 459, 472, 473, 475], "real": [15, 34, 37, 46, 58, 67, 71, 75, 84, 86, 92, 100, 107, 141, 150, 151, 154, 157, 166, 173, 188, 190, 197, 202, 210, 222, 223, 233, 245, 247, 259, 285, 286, 287, 290, 300, 305, 316, 319, 321, 328, 330, 331, 337, 338, 340, 341, 342, 349, 350, 351, 363, 366, 385, 386, 387, 392, 410, 424, 428, 432, 436, 437, 438, 439, 440, 441, 451, 458, 464, 465, 466, 471, 472, 473, 476], "_py_c_sum": 15, "_py_c_diff": 15, "_py_c_neg": 15, "num": [15, 100, 119, 155, 174, 183, 223, 227, 237, 245, 280, 289, 297, 338, 342, 383, 438, 439, 465, 466, 471, 478], "negat": [15, 46, 93, 183, 223, 288, 290, 328, 341, 427, 439, 471], "_py_c_prod": 15, "_py_c_quot": 15, "dividend": [15, 183], "divisor": [15, 183, 272, 446], "quotient": [15, 180, 183, 222, 272, 305, 341, 427, 441, 446], "errno": [15, 18, 23, 34, 50, 67, 72, 83, 115, 130, 139, 173, 185, 210, 212, 247, 251, 290, 311, 325, 330, 334, 338, 349, 359, 440, 465, 470, 473, 475, 477], "edom": [15, 209], "_py_c_pow": 15, "exp": [15, 151, 183, 222, 272, 315, 342, 465, 466, 473], "exponenti": [15, 84, 183, 266, 288, 315, 341, 359, 406, 427, 462, 463, 465], "pycomplexobject": 15, "pycomplex_typ": [15, 56], "pycomplex_check": 15, "pycomplex_checkexact": 15, "pycomplex_fromccomplex": 15, "pycomplex_fromdoubl": [15, 56], "pycomplex_realasdoubl": [15, 56], "pycomplex_imagasdoubl": [15, 56], "imaginari": [15, 67, 86, 151, 180, 286, 341, 342, 349, 381, 424, 425, 427, 446, 465, 466, 472], "pycomplex_asccomplex": [15, 465], "__complex__": [15, 151, 222, 259, 383, 386, 425, 465, 470, 474, 477, 478], "__float__": [15, 25, 62, 151, 222, 383, 386, 425, 469, 477, 478], "__index__": [15, 25, 38, 62, 67, 222, 288, 341, 344, 383, 386, 425, 465, 466, 467, 469, 470, 474, 477, 478, 481], "upon": [15, 18, 25, 30, 32, 34, 40, 63, 65, 71, 72, 79, 84, 86, 92, 99, 137, 141, 148, 152, 155, 156, 166, 170, 172, 174, 183, 185, 186, 190, 239, 241, 244, 245, 247, 268, 281, 290, 294, 296, 325, 326, 328, 330, 331, 337, 338, 344, 346, 349, 357, 359, 377, 396, 397, 398, 407, 423, 425, 427, 429, 436, 437, 447, 450, 460, 465, 470, 473, 474, 476, 478], "perform": [16, 18, 20, 23, 28, 32, 34, 38, 41, 58, 59, 62, 63, 64, 67, 71, 74, 77, 80, 86, 88, 91, 94, 99, 100, 101, 104, 106, 109, 115, 117, 119, 120, 122, 123, 124, 130, 135, 136, 155, 157, 158, 160, 163, 164, 166, 172, 174, 178, 179, 180, 183, 185, 188, 190, 196, 203, 206, 208, 210, 212, 217, 220, 222, 223, 224, 229, 233, 239, 240, 242, 244, 245, 246, 247, 249, 256, 258, 259, 263, 264, 265, 266, 269, 271, 280, 281, 285, 288, 290, 291, 295, 297, 302, 303, 305, 311, 314, 315, 316, 318, 328, 329, 330, 331, 333, 334, 335, 337, 338, 341, 342, 345, 349, 350, 352, 362, 363, 364, 368, 375, 381, 383, 385, 386, 391, 392, 396, 402, 412, 416, 417, 423, 425, 427, 429, 432, 433, 436, 437, 438, 439, 441, 442, 443, 446, 447, 449, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "pydict_check": [16, 22], "tree": [16, 32, 33, 62, 67, 77, 83, 84, 85, 86, 94, 109, 148, 160, 171, 187, 191, 193, 201, 202, 204, 213, 228, 233, 244, 251, 261, 270, 290, 293, 308, 309, 329, 339, 341, 349, 354, 357, 366, 372, 373, 381, 396, 406, 407, 408, 425, 428, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 475, 476, 478, 479, 481], "carefulli": [16, 23, 51, 65, 75, 84, 148, 178, 296, 305, 316, 327, 425, 438, 452, 463, 464, 465, 466, 474], "violat": [16, 23, 41, 60, 62, 93, 173, 180, 185, 200, 205, 212, 245, 296, 302, 338, 341, 398, 425, 437, 470, 476], "immedi": [16, 23, 24, 28, 30, 32, 34, 44, 62, 65, 72, 78, 83, 84, 86, 91, 92, 94, 102, 103, 112, 123, 126, 127, 130, 131, 132, 133, 135, 136, 138, 150, 152, 163, 166, 172, 173, 174, 181, 183, 188, 190, 202, 210, 211, 213, 215, 223, 229, 233, 239, 244, 252, 255, 263, 264, 268, 279, 280, 281, 290, 292, 294, 300, 309, 313, 316, 328, 330, 334, 337, 338, 341, 342, 345, 349, 350, 356, 357, 358, 362, 363, 366, 373, 381, 383, 385, 386, 387, 392, 397, 403, 407, 410, 412, 413, 416, 417, 424, 425, 426, 427, 429, 440, 443, 448, 452, 461, 462, 463, 465, 466, 469, 471, 473, 474, 476, 477, 478, 479], "singleton": [16, 20, 32, 44, 45, 48, 55, 57, 62, 72, 84, 86, 93, 100, 119, 180, 271, 296, 341, 386, 416, 424, 425, 427, 438, 439, 453, 460, 469, 470, 476, 477], "heap": [16, 31, 34, 41, 49, 57, 67, 72, 74, 75, 179, 211, 251, 279, 319, 381, 449, 462, 463, 465, 466, 469, 470, 471, 478, 479], "pack": [16, 67, 100, 118, 138, 142, 173, 212, 222, 231, 244, 251, 256, 265, 266, 268, 281, 290, 300, 334, 341, 366, 371, 373, 405, 418, 425, 437, 439, 448, 449, 464, 466, 470, 472], "unpack": [16, 67, 72, 83, 94, 100, 109, 118, 119, 157, 188, 197, 212, 222, 280, 301, 329, 334, 341, 342, 344, 382, 383, 386, 424, 427, 428, 433, 439, 440, 442, 448, 449, 459, 463, 464, 465, 467, 469, 470, 471, 472, 474, 478], "intrins": [16, 164, 188, 288, 296, 425, 468], "direct": [16, 32, 34, 48, 60, 63, 67, 71, 72, 84, 86, 92, 97, 100, 108, 109, 112, 119, 125, 145, 147, 155, 157, 158, 161, 166, 173, 180, 183, 184, 188, 202, 215, 222, 229, 244, 247, 251, 289, 290, 303, 304, 305, 311, 337, 338, 340, 341, 357, 361, 362, 363, 364, 373, 381, 382, 392, 407, 410, 414, 423, 425, 427, 429, 433, 439, 440, 443, 448, 449, 458, 459, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481], "codec": [16, 31, 33, 64, 67, 86, 102, 106, 142, 192, 198, 199, 210, 222, 251, 255, 290, 332, 341, 360, 419, 445, 448, 458, 459, 461, 463, 464, 467, 470, 475, 476, 478, 479, 481], "properti": [16, 57, 62, 67, 77, 84, 86, 93, 94, 97, 99, 103, 105, 113, 119, 147, 155, 157, 167, 172, 173, 174, 178, 179, 183, 190, 192, 193, 200, 202, 205, 208, 216, 218, 222, 223, 227, 232, 233, 238, 248, 252, 254, 255, 256, 259, 263, 268, 278, 280, 286, 301, 328, 332, 338, 340, 341, 343, 344, 349, 357, 362, 375, 379, 381, 382, 383, 384, 385, 386, 392, 399, 402, 407, 408, 411, 412, 413, 419, 423, 424, 425, 432, 433, 437, 439, 447, 448, 458, 459, 461, 462, 463, 464, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478], "latin": [16, 67, 103, 106, 117, 133, 155, 192, 220, 236, 316, 328, 337, 355, 384, 427, 461, 462, 465, 468, 472, 475, 476, 477, 479], "ascii": [16, 23, 30, 33, 41, 48, 57, 67, 70, 91, 99, 100, 103, 104, 106, 107, 115, 117, 119, 130, 134, 140, 142, 148, 155, 173, 174, 180, 188, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 211, 222, 227, 234, 245, 251, 253, 255, 259, 263, 269, 279, 282, 283, 285, 290, 296, 311, 314, 316, 328, 332, 335, 337, 338, 341, 342, 343, 346, 355, 356, 359, 392, 394, 410, 416, 419, 423, 431, 432, 438, 443, 445, 447, 452, 459, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 479], "mbc": [16, 32, 33, 67, 142, 349, 452, 458, 461, 462, 472, 473, 476], "window": [16, 23, 32, 33, 34, 41, 56, 58, 62, 65, 67, 70, 72, 73, 77, 79, 80, 81, 82, 83, 84, 86, 99, 100, 104, 106, 107, 108, 112, 115, 117, 123, 129, 130, 134, 142, 148, 152, 161, 163, 164, 168, 173, 176, 210, 211, 219, 222, 226, 228, 240, 247, 251, 255, 258, 263, 266, 269, 272, 273, 275, 278, 279, 280, 289, 290, 291, 293, 303, 313, 325, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 349, 351, 352, 355, 357, 358, 359, 362, 363, 365, 367, 368, 369, 370, 372, 373, 375, 385, 392, 394, 396, 400, 404, 418, 419, 421, 422, 423, 425, 432, 435, 436, 438, 443, 445, 447, 450, 452, 453, 455, 456, 459, 460, 461, 463, 464, 467, 468, 469, 471, 472, 474, 475, 478, 479, 481], "cell": [16, 27, 65, 67, 84, 91, 92, 115, 173, 188, 223, 233, 251, 252, 373, 382, 425, 465, 470], "phase": [16, 31, 32, 67, 70, 72, 86, 98, 108, 135, 151, 224, 247, 338, 373, 428, 429, 433, 465, 469, 472, 473], "lookup": [16, 17, 22, 30, 60, 62, 64, 67, 76, 77, 84, 86, 93, 119, 144, 155, 157, 178, 188, 192, 200, 208, 210, 222, 223, 227, 242, 252, 256, 266, 284, 288, 290, 300, 341, 342, 348, 349, 366, 373, 378, 384, 386, 422, 424, 429, 437, 449, 459, 461, 463, 464, 465, 469, 470, 471, 472, 473, 474, 476, 478, 479], "descriptor": [16, 23, 24, 30, 32, 48, 60, 62, 67, 74, 77, 80, 83, 86, 93, 95, 96, 113, 115, 122, 127, 128, 129, 130, 133, 146, 173, 174, 182, 184, 209, 212, 215, 222, 223, 228, 232, 245, 252, 254, 255, 265, 275, 279, 280, 291, 292, 306, 309, 312, 319, 325, 326, 329, 330, 334, 335, 338, 341, 345, 355, 356, 357, 358, 359, 366, 380, 382, 424, 427, 433, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 477, 479], "ellipsi": [16, 62, 67, 86, 119, 165, 190, 271, 296, 304, 374, 375, 382, 383, 428, 432, 447, 463, 467, 471, 478], "capsul": [16, 67, 72, 94, 467], "coroutin": [16, 26, 67, 86, 94, 120, 121, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 158, 166, 179, 183, 185, 188, 210, 312, 341, 349, 350, 383, 385, 386, 427, 430, 453, 464, 469, 470, 471, 476, 477, 478, 479], "datetim": [16, 67, 84, 93, 100, 123, 130, 134, 136, 147, 179, 187, 200, 206, 208, 245, 251, 253, 266, 285, 296, 301, 337, 338, 342, 363, 376, 382, 387, 417, 422, 432, 448, 462, 463, 464, 465, 466, 469, 471, 475], "hint": [16, 41, 67, 78, 84, 86, 87, 102, 104, 116, 155, 157, 164, 184, 199, 222, 227, 238, 240, 243, 244, 251, 255, 259, 297, 300, 341, 381, 382, 424, 425, 433, 476, 477, 481], "pycontext": 17, "pycontextvar": 17, "pycontexttoken": 17, "pycontext_new": 17, "bpo": [17, 34, 180, 185, 223, 264, 266, 280, 290, 299, 329, 383, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "34762": [17, 477], "public": [17, 26, 28, 32, 33, 54, 56, 62, 67, 79, 83, 92, 104, 107, 108, 139, 152, 157, 172, 173, 187, 201, 208, 219, 220, 232, 237, 240, 247, 248, 252, 256, 261, 280, 283, 289, 311, 313, 328, 334, 338, 342, 348, 349, 355, 359, 361, 364, 383, 384, 385, 392, 405, 407, 410, 413, 423, 432, 433, 437, 459, 460, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "contextvar": [17, 67, 86, 123, 126, 132, 136, 161, 183, 251, 453], "token": [17, 65, 67, 83, 113, 119, 153, 167, 171, 247, 251, 261, 262, 278, 283, 301, 311, 315, 328, 345, 354, 360, 392, 424, 428, 430, 431, 440, 444, 466, 467, 472, 476, 477], "pycontext_typ": 17, "pycontextvar_typ": 17, "pycontexttoken_typ": 17, "pycontext_checkexact": 17, "pycontextvar_checkexact": 17, "pycontexttoken_checkexact": 17, "pycontext_copi": 17, "ctx": [17, 23, 41, 100, 119, 167, 183, 280, 338, 465], "shallow": [17, 32, 67, 157, 167, 178, 179, 190, 213, 241, 251, 252, 296, 341, 355, 382, 439, 446], "pycontext_copycurr": 17, "pycontext_ent": 17, "pycontext_exit": 17, "deactiv": [17, 349, 366, 396, 425, 450, 458, 469, 470, 471], "pycontextvar_new": 17, "introspect": [17, 67, 74, 84, 86, 92, 157, 167, 184, 188, 210, 223, 247, 296, 312, 366, 382, 386, 416, 417, 425, 429, 467, 469, 470, 471, 472, 473, 474, 475], "debug": [17, 31, 32, 33, 48, 62, 65, 67, 74, 75, 77, 84, 86, 91, 96, 99, 100, 101, 119, 127, 132, 141, 149, 163, 167, 173, 183, 184, 185, 188, 193, 201, 202, 208, 210, 220, 224, 239, 245, 251, 264, 265, 266, 276, 285, 289, 290, 294, 298, 300, 302, 316, 328, 332, 337, 338, 341, 349, 355, 356, 357, 359, 365, 366, 372, 379, 383, 385, 386, 397, 410, 416, 419, 425, 426, 432, 433, 443, 448, 449, 454, 455, 458, 459, 460, 461, 462, 464, 465, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479], "pycontextvar_get": 17, "var": [17, 77, 84, 86, 87, 92, 93, 100, 117, 119, 157, 164, 167, 222, 266, 341, 352, 357, 383, 386, 428, 438, 443, 447, 463, 464, 465, 466, 467, 469, 472], "default_valu": 17, "dure": [17, 18, 22, 23, 24, 28, 32, 33, 44, 50, 51, 57, 62, 63, 67, 76, 79, 84, 86, 92, 93, 100, 102, 119, 130, 136, 137, 144, 148, 155, 164, 165, 168, 173, 174, 178, 180, 183, 188, 190, 195, 198, 199, 200, 205, 208, 210, 215, 222, 223, 224, 228, 232, 234, 247, 248, 255, 259, 264, 265, 266, 267, 268, 278, 285, 290, 293, 296, 305, 310, 311, 316, 317, 320, 323, 329, 330, 331, 332, 337, 338, 341, 349, 350, 357, 358, 359, 363, 364, 373, 377, 379, 381, 382, 383, 385, 386, 387, 397, 399, 410, 411, 412, 413, 419, 422, 424, 425, 427, 429, 432, 433, 436, 437, 440, 441, 444, 448, 452, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "pycontextvar_set": 17, "pycontextvar_reset": 17, "reset": [17, 32, 58, 84, 93, 94, 107, 133, 135, 141, 152, 154, 155, 157, 167, 174, 183, 187, 195, 203, 209, 210, 211, 215, 237, 242, 244, 247, 264, 280, 290, 291, 292, 293, 298, 323, 325, 330, 334, 338, 341, 353, 355, 359, 362, 363, 372, 377, 381, 385, 386, 397, 405, 409, 410, 413, 422, 424, 432, 461, 465, 469, 472, 473, 474, 475], "pyos_snprintf": [18, 56, 461], "unix": [18, 23, 32, 33, 34, 58, 65, 67, 72, 73, 79, 80, 82, 86, 91, 94, 99, 104, 106, 112, 115, 117, 121, 127, 128, 129, 130, 133, 134, 143, 147, 157, 164, 171, 172, 174, 187, 193, 196, 198, 205, 212, 216, 222, 225, 226, 227, 230, 240, 244, 251, 254, 255, 258, 263, 266, 268, 269, 275, 280, 283, 284, 285, 289, 290, 291, 292, 293, 295, 298, 302, 303, 306, 307, 310, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 345, 347, 349, 351, 352, 355, 357, 358, 359, 362, 363, 366, 372, 380, 385, 400, 404, 418, 419, 432, 435, 436, 443, 445, 450, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478], "man": [18, 91, 123, 170, 268, 290, 310, 319, 325, 330, 334, 339, 363, 366, 372, 380, 466], "snprintf": [18, 461, 469], "pyos_vsnprintf": [18, 56, 461], "va": [18, 423], "vsnprintf": [18, 461, 469], "Their": [18, 62, 86, 92, 155, 204, 265, 290, 337, 338, 349, 362, 383, 391, 410, 425, 426, 427, 432, 470, 473, 476, 477], "corner": [18, 62, 91, 174, 381, 404, 446, 461, 464, 465, 470], "int_max": 18, "c99": [18, 34, 62, 75, 151, 173, 272, 341, 344, 349, 441, 453, 465, 469, 472, 476], "necessari": [18, 32, 34, 48, 56, 60, 62, 63, 71, 72, 75, 76, 77, 78, 79, 83, 84, 86, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 109, 112, 117, 130, 136, 140, 151, 152, 155, 158, 164, 166, 174, 181, 183, 190, 191, 192, 193, 202, 203, 204, 205, 206, 210, 222, 223, 224, 239, 240, 244, 245, 247, 251, 255, 258, 263, 264, 267, 268, 269, 272, 275, 280, 285, 288, 289, 290, 291, 293, 296, 299, 303, 305, 313, 329, 332, 334, 337, 338, 341, 343, 344, 345, 350, 352, 353, 359, 361, 362, 364, 369, 371, 373, 381, 385, 392, 396, 399, 402, 404, 405, 407, 409, 412, 416, 419, 425, 426, 427, 428, 433, 436, 437, 439, 440, 450, 458, 461, 462, 464, 465, 466, 468, 470, 471, 473, 474, 475, 476, 478], "rv": [18, 34, 212], "someth": [18, 22, 32, 35, 72, 74, 77, 79, 83, 84, 85, 86, 88, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 117, 119, 129, 136, 141, 148, 166, 172, 173, 198, 210, 222, 225, 233, 244, 247, 248, 250, 252, 258, 259, 264, 265, 280, 289, 290, 296, 303, 305, 311, 319, 335, 337, 338, 346, 352, 355, 359, 362, 366, 383, 385, 386, 387, 392, 398, 399, 404, 407, 410, 416, 422, 425, 428, 429, 433, 437, 438, 446, 449, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 472, 479], "bad": [18, 41, 67, 71, 72, 85, 88, 99, 102, 104, 107, 117, 172, 184, 187, 190, 198, 209, 210, 232, 244, 263, 265, 268, 280, 289, 305, 330, 381, 383, 419, 433, 438, 440, 447, 461, 465, 467, 469, 476], "pyos_strtoul": [18, 56], "36": [18, 38, 99, 101, 106, 222, 258, 268, 280, 315, 319, 340, 342, 363, 439, 443, 446, 448, 449, 450, 469, 472, 474, 478, 479], "inclus": [18, 33, 34, 38, 41, 79, 86, 117, 147, 157, 163, 180, 209, 235, 256, 262, 264, 267, 290, 305, 315, 316, 328, 340, 350, 379, 410, 423, 425, 427, 431, 433, 452, 466, 472, 477], "white": [18, 77, 91, 93, 103, 174, 175, 196, 208, 244, 345, 373, 381, 392, 423, 431, 449, 474, 479], "0b": [18, 46, 222, 289, 341, 342, 465, 472], "0o": [18, 46, 84, 222, 341, 342, 465, 472], "absent": [18, 117, 157, 174, 265, 294, 334, 342, 392, 472], "scan": [18, 84, 85, 92, 94, 96, 99, 103, 104, 155, 157, 174, 190, 225, 227, 242, 290, 293, 300, 316, 325, 366, 383, 392, 425, 426, 448, 452, 461, 462, 464, 466, 472, 475], "out": [18, 23, 30, 33, 34, 37, 38, 41, 55, 56, 58, 59, 63, 67, 71, 72, 75, 77, 79, 80, 82, 84, 86, 88, 91, 93, 94, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 117, 119, 130, 131, 136, 137, 138, 141, 146, 155, 158, 160, 164, 172, 173, 174, 175, 180, 181, 183, 187, 188, 190, 192, 193, 200, 202, 208, 209, 210, 212, 223, 227, 232, 237, 240, 244, 247, 248, 250, 254, 255, 256, 258, 259, 263, 264, 272, 280, 289, 290, 292, 294, 295, 297, 301, 305, 308, 310, 311, 316, 319, 325, 328, 330, 334, 335, 337, 338, 340, 341, 342, 344, 345, 349, 355, 359, 362, 366, 378, 381, 382, 383, 385, 386, 387, 391, 396, 397, 404, 406, 407, 410, 414, 416, 420, 421, 422, 423, 424, 425, 426, 433, 435, 436, 438, 439, 440, 441, 443, 445, 446, 447, 450, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477], "erang": [18, 209], "ulong_max": [18, 38], "strtoul": 18, "pyos_strtol": [18, 56], "strtol": 18, "pyos_string_to_doubl": [18, 56, 466, 468], "endptr": 18, "overflow_except": 18, "whitespac": [18, 38, 63, 67, 84, 85, 93, 94, 103, 106, 109, 117, 123, 134, 140, 143, 152, 157, 164, 172, 175, 183, 187, 190, 196, 199, 200, 205, 218, 222, 237, 242, 244, 252, 259, 263, 283, 294, 311, 314, 316, 328, 341, 342, 344, 345, 354, 359, 361, 363, 378, 397, 407, 410, 412, 434, 438, 446, 452, 459, 462, 465, 466, 468, 472, 473, 474, 477], "whole": [18, 41, 73, 78, 79, 82, 96, 97, 103, 104, 117, 138, 147, 155, 164, 166, 174, 180, 204, 205, 232, 239, 256, 258, 264, 275, 289, 290, 293, 302, 304, 316, 325, 334, 337, 340, 341, 361, 372, 385, 407, 410, 421, 423, 424, 432, 436, 452, 457, 459, 466, 474, 478], "unconvert": 18, "segment": [18, 41, 47, 119, 151, 173, 181, 190, 211, 212, 217, 280, 290, 291, 293, 330, 363, 391, 396, 404, 464, 466, 472, 473], "1e500": 18, "py_huge_v": 18, "pyos_double_to_str": [18, 56], "val": [18, 22, 23, 72, 94, 113, 164, 187, 188, 193, 202, 220, 241, 263, 294, 337, 341, 383, 387, 392, 425, 464, 471], "format_cod": 18, "ptype": [18, 23, 300], "r": [18, 41, 62, 63, 67, 72, 83, 84, 86, 88, 92, 93, 94, 100, 103, 106, 114, 117, 119, 130, 133, 134, 136, 140, 144, 145, 146, 151, 155, 157, 159, 160, 163, 164, 166, 172, 173, 174, 175, 180, 181, 185, 186, 187, 190, 197, 199, 202, 205, 215, 220, 222, 231, 232, 240, 241, 244, 245, 247, 249, 250, 255, 258, 259, 267, 268, 272, 275, 280, 288, 289, 290, 291, 292, 293, 294, 298, 302, 315, 316, 329, 332, 334, 337, 338, 340, 341, 342, 343, 346, 349, 355, 361, 364, 366, 377, 381, 382, 383, 385, 387, 391, 392, 395, 396, 399, 402, 418, 419, 423, 432, 435, 437, 439, 440, 441, 443, 446, 448, 450, 452, 457, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "repr": [18, 23, 24, 48, 62, 63, 67, 74, 93, 100, 105, 106, 109, 119, 136, 173, 178, 179, 180, 188, 190, 208, 222, 239, 244, 251, 280, 311, 326, 334, 341, 342, 349, 359, 361, 375, 378, 382, 383, 386, 387, 422, 424, 425, 432, 433, 441, 443, 447, 449, 459, 460, 462, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478], "py_dtsf_sign": 18, "py_dtsf_add_dot_0": 18, "py_dtsf_alt": 18, "ed": [18, 41, 62, 72, 91, 151, 164, 174, 190, 204, 208, 267, 290, 316, 329, 337, 469, 472, 479], "togeth": [18, 34, 60, 62, 67, 71, 77, 87, 91, 92, 94, 97, 99, 100, 102, 103, 117, 123, 130, 155, 157, 172, 173, 190, 199, 204, 205, 215, 222, 231, 232, 240, 241, 244, 256, 258, 264, 265, 268, 290, 329, 338, 341, 350, 366, 371, 381, 383, 385, 386, 387, 392, 396, 409, 411, 423, 425, 427, 437, 439, 440, 442, 446, 448, 463, 469, 470, 471, 472, 473, 479], "preced": [18, 67, 79, 86, 92, 99, 100, 101, 103, 104, 105, 150, 157, 164, 172, 175, 180, 187, 188, 190, 191, 199, 204, 222, 223, 244, 252, 263, 264, 265, 273, 300, 305, 316, 331, 334, 337, 341, 342, 344, 345, 349, 350, 363, 366, 373, 381, 397, 407, 410, 416, 417, 419, 421, 424, 425, 426, 428, 430, 431, 432, 433, 437, 440, 446, 452, 453, 458, 460, 461, 473, 477], "py_dtst_finit": 18, "py_dtst_infinit": 18, "py_dtst_nan": 18, "signifi": [18, 93, 102, 178, 220, 242, 337, 338, 341, 383, 425, 432, 471], "finit": [18, 25, 34, 83, 91, 94, 103, 151, 183, 218, 258, 272, 315, 341, 349, 425, 441], "infinit": [18, 22, 27, 44, 60, 67, 77, 84, 94, 103, 131, 135, 155, 183, 233, 245, 258, 272, 280, 282, 290, 293, 296, 313, 316, 317, 341, 349, 385, 425, 441, 459, 463, 465, 473], "pyos_stricmp": [18, 465], "s1": [18, 106, 158, 187, 263, 334, 462], "s2": [18, 106, 158, 187, 263, 334, 462], "almost": [18, 32, 34, 63, 71, 74, 75, 77, 83, 84, 86, 88, 91, 100, 103, 104, 106, 109, 115, 117, 122, 124, 151, 154, 174, 183, 233, 248, 255, 263, 269, 272, 280, 285, 289, 315, 316, 338, 341, 345, 366, 383, 385, 386, 404, 421, 425, 431, 440, 441, 448, 453, 458, 460, 462, 465, 467, 471, 473, 479], "pyos_strnicmp": [18, 465], "strncmp": 18, "async": [19, 23, 26, 31, 49, 67, 86, 100, 120, 121, 122, 123, 126, 130, 131, 132, 133, 134, 135, 136, 166, 167, 188, 222, 223, 252, 261, 309, 338, 374, 382, 383, 385, 386, 387, 425, 427, 428, 432, 469, 470, 471, 476, 477, 478, 479], "pycoroobject": 19, "pycoro_typ": 19, "pycoro_checkexact": 19, "pycoro_new": 19, "pyframeobject": [19, 26, 29, 32, 52, 56, 65, 470, 474], "__name__": [19, 29, 44, 60, 62, 67, 83, 84, 86, 92, 93, 99, 100, 101, 123, 141, 152, 154, 163, 180, 185, 187, 190, 194, 197, 208, 222, 223, 225, 247, 252, 264, 280, 286, 289, 293, 294, 296, 299, 310, 312, 318, 320, 321, 330, 335, 337, 339, 341, 359, 362, 364, 382, 383, 385, 396, 397, 399, 404, 417, 425, 429, 447, 461, 462, 465, 467, 469, 471, 473, 474, 475, 476, 478, 479], "__qualname__": [19, 27, 29, 60, 86, 92, 93, 194, 208, 222, 223, 252, 341, 425, 426, 469, 473, 475], "date": [20, 32, 67, 71, 84, 85, 93, 100, 130, 134, 136, 147, 160, 179, 190, 196, 200, 205, 206, 208, 240, 242, 251, 263, 264, 266, 268, 285, 288, 290, 296, 300, 308, 336, 337, 338, 340, 341, 355, 363, 366, 376, 387, 416, 417, 419, 420, 423, 429, 432, 442, 447, 449, 458, 459, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "pydatetime_import": 20, "initialis": [20, 100, 240, 266, 321, 349, 386, 425, 452, 474, 476], "pydatetimeapi": 20, "pydatetime_d": 20, "pydatetime_datetim": 20, "pydatetime_tim": 20, "pydatetime_delta": 20, "pydatetime_datetyp": 20, "pydatetime_datetimetyp": 20, "pydatetime_timetyp": 20, "pydatetime_deltatyp": 20, "timedelta": [20, 67, 93, 179, 285, 382, 422, 462, 466, 472, 473, 477, 478, 479], "pydatetime_tzinfotyp": 20, "zone": [20, 67, 179, 180, 206, 251, 256, 334, 363, 423, 453, 462, 464, 466, 479], "info": [20, 23, 62, 67, 72, 79, 80, 83, 88, 92, 99, 100, 117, 122, 134, 149, 155, 166, 180, 188, 222, 224, 227, 239, 240, 248, 252, 264, 265, 266, 268, 280, 285, 299, 300, 304, 329, 346, 355, 366, 370, 381, 383, 385, 392, 418, 419, 427, 449, 456, 460, 462, 464, 465, 466, 469, 471, 472, 474, 478], "tzinfo": [20, 67, 179, 206, 376, 422, 462, 469, 470, 472, 473, 476, 477, 479], "utc": [20, 67, 180, 187, 200, 206, 266, 337, 338, 363, 422, 448, 465, 470, 471, 472, 475, 476, 477], "pydatetime_timezone_utc": [20, 477], "timezon": [20, 67, 100, 115, 179, 187, 200, 206, 337, 338, 359, 376, 422, 448, 470, 471, 472, 473, 475, 476, 477], "pydate_check": 20, "pydate_checkexact": 20, "pydatetime_check": 20, "pydatetime_checkexact": 20, "pytime_check": 20, "pytime_checkexact": 20, "pydelta_check": 20, "pydelta_checkexact": 20, "pytzinfo_check": 20, "pytzinfo_checkexact": 20, "pydate_fromd": 20, "year": [20, 79, 84, 92, 103, 147, 172, 180, 190, 259, 337, 340, 363, 383, 410, 419, 423, 432, 443, 458, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 478, 479], "month": [20, 79, 84, 147, 180, 263, 363, 419, 432, 459, 460, 462, 466, 471], "dai": [20, 72, 79, 83, 84, 93, 103, 104, 123, 147, 164, 180, 223, 241, 259, 263, 266, 272, 285, 290, 336, 338, 340, 363, 382, 419, 422, 429, 432, 448, 451, 459, 462, 464, 465, 466, 471, 474, 476, 478, 479], "pydatetime_fromdateandtim": 20, "hour": [20, 84, 103, 123, 130, 136, 180, 206, 266, 268, 363, 419, 422, 432, 462, 470, 476], "minut": [20, 104, 106, 132, 180, 266, 290, 359, 363, 419, 432, 453, 462, 470, 477], "usecond": 20, "microsecond": [20, 96, 180, 319, 337, 363, 465, 470], "pydatetime_fromdateandtimeandfold": 20, "fold": [20, 180, 198, 199, 200, 205, 247, 293, 341, 343, 422, 423, 463, 464, 476, 477], "pytime_fromtim": 20, "pytime_fromtimeandfold": 20, "pydelta_fromdsu": 20, "lie": [20, 280, 373, 433, 461, 462], "pytimezone_fromoffset": [20, 477], "unnam": [20, 59, 72, 86, 93, 173, 208, 337, 402, 427, 474], "pytimezone_fromoffsetandnam": [20, 477], "tzname": [20, 180, 363, 422, 476, 479], "pydatetime_get_year": 20, "pydatetime_get_month": 20, "pydatetime_get_dai": 20, "31": [20, 92, 103, 147, 170, 173, 175, 180, 208, 231, 256, 259, 315, 316, 340, 341, 349, 363, 416, 419, 421, 422, 432, 448, 462, 464, 465, 472, 477, 478, 479], "pydatetime_date_get_hour": 20, "23": [20, 93, 96, 100, 106, 147, 180, 183, 206, 222, 223, 233, 256, 258, 264, 280, 316, 329, 334, 341, 345, 356, 363, 364, 461, 462, 470, 472, 474, 475, 476, 478, 479], "pydatetime_date_get_minut": 20, "59": [20, 88, 100, 180, 258, 316, 363, 379, 450, 472], "pydatetime_date_get_second": 20, "pydatetime_date_get_microsecond": 20, "999999": [20, 180, 183, 473], "pydatetime_date_get_fold": 20, "pydatetime_date_get_tzinfo": [20, 469], "pydatetime_time_get_hour": 20, "pydatetime_time_get_minut": 20, "pydatetime_time_get_second": 20, "pydatetime_time_get_microsecond": 20, "pydatetime_time_get_fold": 20, "pydatetime_time_get_tzinfo": [20, 469], "delta": [20, 67, 106, 138, 180, 188, 238, 251, 267, 360, 385, 461, 463, 466, 476, 478], "pydatetime_delta_get_dai": 20, "999999999": [20, 180], "pydatetime_delta_get_second": 20, "86399": [20, 180], "pydatetime_delta_get_microsecond": 20, "db": [20, 67, 92, 172, 181, 222, 251, 258, 278, 295, 327, 448, 453, 464, 465, 467, 470], "pydatetime_fromtimestamp": 20, "suitabl": [20, 32, 62, 63, 72, 84, 94, 99, 100, 106, 108, 121, 140, 143, 144, 155, 157, 166, 170, 173, 180, 187, 193, 201, 205, 206, 232, 233, 234, 241, 247, 250, 256, 258, 263, 264, 265, 266, 268, 273, 280, 285, 290, 291, 296, 300, 305, 315, 320, 321, 323, 324, 330, 332, 334, 335, 341, 349, 355, 359, 362, 363, 364, 377, 385, 397, 404, 407, 410, 418, 419, 421, 425, 438, 441, 442, 449, 452, 458, 461, 462, 463, 465, 466, 472, 476, 477, 478], "fromtimestamp": [20, 100, 180, 187, 337, 471, 477], "pydate_fromtimestamp": 20, "pyproperty_typ": [21, 56, 92], "pydescr_newgetset": [21, 56], "pygetsetdef": [21, 56, 57, 62, 74, 75, 98, 252, 382, 477], "getset": [21, 62, 252], "pydescr_newmemb": [21, 56], "pymemberdef": [21, 56, 57, 60, 62, 74, 75, 92, 252, 382, 466, 471, 477], "meth": [21, 43, 62, 77, 84, 86, 109, 383, 460, 463, 470, 473], "pydescr_newmethod": [21, 56], "pymethoddef": [21, 34, 44, 56, 57, 61, 62, 71, 72, 74, 75, 98, 462], "pydescr_newwrapp": 21, "wrapperbas": [21, 477], "pydescr_newclassmethod": [21, 56], "pydescr_isdata": 21, "descr": [21, 92, 173], "pywrapper_new": [21, 56], "pydictobject": [22, 54, 471], "pydict_typ": [22, 56], "pydict_checkexact": 22, "pydict_new": [22, 56], "pydictproxy_new": [22, 56], "mappingproxytyp": [22, 178, 222, 341, 382, 424, 469, 471, 473], "enforc": [22, 67, 86, 93, 121, 183, 193, 202, 222, 240, 290, 319, 339, 341, 342, 381, 383, 407, 408, 410, 424, 427, 433, 437, 438, 452, 460, 461, 464, 467, 470, 472, 473], "modif": [22, 27, 33, 60, 63, 65, 72, 93, 100, 109, 119, 166, 187, 213, 222, 231, 242, 245, 247, 263, 266, 268, 275, 280, 289, 290, 291, 293, 303, 321, 329, 331, 335, 339, 349, 355, 359, 373, 407, 410, 419, 423, 425, 443, 447, 458, 464, 466, 472, 473, 474, 475, 476, 478], "pydict_clear": [22, 56], "pydict_contain": [22, 56, 463], "pydict_copi": [22, 56], "pydict_setitem": [22, 56, 62, 72], "insert": [22, 30, 32, 33, 34, 37, 59, 67, 71, 72, 77, 79, 94, 106, 109, 111, 117, 118, 119, 123, 140, 143, 144, 148, 157, 158, 164, 168, 174, 178, 187, 190, 205, 222, 223, 229, 233, 244, 247, 255, 259, 264, 267, 278, 281, 289, 294, 296, 304, 313, 317, 337, 341, 342, 344, 349, 373, 382, 397, 399, 404, 407, 410, 420, 425, 427, 429, 433, 437, 438, 439, 446, 452, 457, 459, 462, 464, 465, 466, 468, 471, 473, 474, 475, 476, 477, 478], "hashabl": [22, 48, 62, 84, 86, 113, 157, 158, 180, 187, 218, 222, 223, 229, 252, 256, 288, 293, 315, 341, 383, 399, 425, 427, 462, 463, 465, 466, 469, 470, 471, 473, 475, 479], "steal": [22, 23, 32, 34, 37, 44, 48, 53, 59, 469, 470], "pydict_setitemstr": [22, 56], "pydict_delitem": [22, 56], "pydict_delitemstr": [22, 56], "pydict_getitem": [22, 56, 72, 469], "__hash__": [22, 62, 77, 79, 84, 86, 158, 178, 208, 222, 286, 341, 386, 425, 452, 464, 465, 467, 473, 477], "__eq__": [22, 62, 77, 79, 84, 86, 144, 158, 165, 178, 192, 199, 208, 223, 241, 252, 288, 341, 382, 386, 387, 416, 425, 460, 465, 466, 467, 470, 472, 477], "pydict_getitemwitherror": [22, 56], "gil": [22, 23, 41, 44, 50, 58, 62, 67, 75, 83, 86, 98, 136, 163, 173, 185, 232, 247, 465, 466, 469, 472, 474, 476, 479], "held": [22, 30, 32, 41, 51, 58, 83, 98, 164, 244, 255, 265, 266, 275, 280, 341, 349, 362, 385, 399, 423, 425, 459, 464, 465, 466, 469, 470, 476], "histor": [22, 40, 62, 72, 74, 94, 98, 164, 174, 180, 210, 245, 268, 271, 292, 340, 357, 363, 380, 411, 419, 423, 433, 441, 458, 466, 469, 471, 474, 476], "reason": [22, 23, 32, 34, 41, 45, 46, 48, 50, 56, 62, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 91, 93, 94, 99, 100, 102, 103, 104, 106, 107, 112, 136, 138, 148, 151, 152, 163, 174, 178, 180, 183, 188, 190, 191, 193, 208, 210, 213, 227, 233, 238, 239, 242, 244, 245, 247, 254, 255, 264, 265, 266, 267, 268, 272, 289, 290, 293, 296, 300, 302, 305, 311, 323, 329, 331, 334, 338, 341, 349, 355, 356, 359, 361, 363, 366, 381, 383, 385, 386, 387, 390, 392, 396, 404, 422, 423, 424, 425, 429, 436, 437, 441, 447, 461, 462, 464, 467, 469, 472, 473, 474, 475], "suppress": [22, 32, 33, 47, 67, 91, 99, 117, 136, 149, 154, 160, 166, 190, 224, 285, 289, 293, 308, 312, 331, 332, 341, 345, 349, 359, 404, 424, 425, 433, 435, 438, 449, 452, 458, 460, 462, 464, 465, 466, 467, 468, 474, 475, 477, 478, 481], "wasn": [22, 30, 44, 75, 77, 79, 100, 117, 222, 266, 289, 353, 385, 420, 440, 459, 461, 462, 464, 465, 476], "pydict_getitemstr": [22, 56, 72], "pyunicode_fromstr": [22, 34, 56, 63, 71, 75], "pydict_setdefault": 22, "defaultobj": 22, "setdefault": [22, 77, 157, 158, 181, 241, 341, 404, 425, 459, 462, 472, 473], "hash": [22, 32, 33, 48, 62, 63, 67, 74, 77, 83, 84, 86, 143, 158, 160, 164, 171, 178, 181, 220, 222, 247, 248, 251, 267, 286, 295, 308, 323, 334, 349, 382, 386, 392, 395, 399, 421, 423, 425, 427, 429, 432, 435, 446, 447, 452, 453, 461, 462, 464, 465, 466, 469, 470, 472, 473, 476, 479], "pydict_item": [22, 56], "pylistobject": [22, 37, 53, 75], "pydict_kei": [22, 56], "pydict_valu": [22, 56], "pydict_s": [22, 56], "pydict_next": [22, 56], "ppo": 22, "pkei": 22, "pvalu": [22, 23, 71], "Its": [22, 30, 32, 55, 57, 62, 67, 71, 72, 74, 75, 84, 88, 92, 112, 141, 149, 164, 173, 174, 178, 185, 203, 222, 227, 233, 240, 252, 255, 264, 280, 290, 305, 321, 331, 338, 349, 355, 359, 362, 363, 392, 403, 410, 417, 419, 424, 425, 427, 429, 442, 452, 459, 469, 470, 471, 472, 477], "spars": [22, 290, 355], "po": [22, 59, 88, 114, 138, 150, 183, 227, 252, 259, 275, 288, 290, 297, 316, 317, 346, 373, 381, 398, 462, 466, 475], "pylong_aslong": [22, 34, 38, 56, 71, 478], "pylong_fromlong": [22, 34, 38, 44, 56, 71, 72, 74, 75], "pydict_merg": [22, 56], "overrid": [22, 24, 32, 33, 34, 48, 60, 62, 63, 65, 67, 84, 92, 99, 100, 107, 113, 117, 123, 129, 132, 133, 141, 147, 152, 154, 157, 158, 164, 168, 172, 173, 178, 180, 186, 190, 193, 199, 200, 202, 205, 206, 210, 215, 222, 223, 227, 237, 240, 241, 242, 245, 247, 252, 255, 259, 264, 266, 269, 280, 284, 289, 290, 293, 296, 308, 311, 312, 315, 316, 328, 331, 334, 335, 341, 342, 345, 349, 351, 357, 359, 362, 370, 373, 381, 383, 385, 386, 387, 392, 395, 399, 404, 410, 414, 419, 425, 426, 427, 429, 437, 452, 453, 457, 458, 459, 462, 465, 466, 467, 468, 470, 473, 474, 476, 477, 478], "pymapping_kei": [22, 39, 56, 477], "pyobject_getitem": [22, 34, 39, 48, 56, 62], "pydict_upd": [22, 56], "pydict_mergefromseq2": [22, 56], "seq2": [22, 94, 288, 459], "merg": [22, 67, 84, 86, 91, 92, 94, 99, 100, 157, 174, 180, 190, 210, 233, 264, 266, 279, 289, 290, 341, 377, 383, 423, 449, 453, 458, 459, 462, 465, 466, 471, 475], "duplic": [22, 51, 67, 87, 94, 109, 144, 157, 160, 163, 164, 166, 183, 187, 188, 193, 202, 205, 208, 212, 252, 256, 264, 268, 290, 299, 334, 341, 342, 359, 381, 383, 385, 404, 419, 424, 425, 427, 428, 438, 439, 444, 461, 463, 464, 465, 469, 471, 472, 475, 477, 479], "win": [22, 32, 67, 91, 100, 174, 176, 233, 289, 315, 352, 385, 458, 468, 472], "pydict_addwatch": [22, 471], "pydict_watchcallback": 22, "pydict_watch": [22, 471], "pydict_clearwatch": 22, "mark": [22, 23, 28, 33, 34, 56, 57, 60, 63, 67, 74, 77, 83, 86, 92, 96, 100, 102, 103, 106, 109, 113, 114, 117, 119, 126, 127, 130, 136, 141, 155, 163, 164, 174, 178, 187, 188, 190, 202, 227, 229, 233, 237, 244, 252, 259, 266, 268, 294, 297, 302, 311, 325, 334, 337, 341, 345, 356, 359, 366, 377, 383, 385, 399, 407, 412, 423, 425, 427, 428, 432, 438, 443, 446, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "watch": [22, 58, 60, 67, 98, 99, 122, 127, 128, 130, 133, 134, 183, 233, 258, 264, 266, 325, 366, 448], "grant": [22, 60, 92, 103, 291, 357, 423, 459, 460, 464], "pydict_unwatch": 22, "pydict_watchev": 22, "pydict_event_ad": 22, "pydict_event_modifi": 22, "pydict_event_delet": 22, "pydict_event_clon": 22, "pydict_event_clear": 22, "pydict_event_dealloc": 22, "new_valu": [22, 27, 359], "unpredict": [22, 27, 210, 268, 290, 410, 413, 425, 452, 461], "trigger": [22, 32, 33, 41, 51, 62, 67, 75, 86, 92, 94, 96, 102, 136, 166, 174, 183, 186, 193, 202, 207, 210, 223, 247, 252, 280, 281, 283, 289, 290, 313, 330, 331, 337, 341, 349, 350, 366, 368, 385, 386, 391, 397, 406, 416, 425, 440, 449, 452, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 473, 474, 475, 476, 477], "notifi": [22, 58, 99, 102, 131, 135, 136, 244, 245, 280, 350, 362, 368, 399], "let": [23, 41, 65, 71, 72, 75, 77, 78, 79, 83, 84, 85, 87, 88, 91, 92, 93, 94, 99, 100, 102, 103, 104, 105, 106, 107, 117, 123, 136, 152, 157, 158, 164, 166, 168, 173, 187, 197, 223, 227, 233, 242, 248, 254, 259, 263, 264, 265, 266, 289, 294, 304, 316, 327, 328, 337, 338, 366, 373, 381, 383, 386, 387, 392, 410, 423, 427, 429, 435, 437, 438, 440, 443, 446, 448, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 477], "understand": [23, 41, 67, 72, 74, 75, 77, 83, 86, 92, 99, 100, 102, 103, 104, 106, 107, 117, 151, 180, 190, 204, 227, 239, 240, 259, 272, 285, 304, 305, 316, 337, 342, 345, 365, 373, 383, 387, 404, 413, 419, 424, 431, 437, 438, 441, 443, 459, 460, 461, 462, 464, 465, 466, 467, 471, 476], "basic": [23, 32, 34, 62, 63, 67, 72, 73, 74, 76, 79, 83, 84, 86, 91, 92, 94, 97, 100, 102, 109, 117, 118, 132, 135, 141, 142, 144, 152, 155, 157, 164, 166, 174, 179, 181, 182, 184, 186, 187, 189, 208, 216, 219, 227, 231, 237, 238, 242, 244, 247, 249, 251, 252, 253, 255, 264, 265, 266, 280, 281, 282, 289, 301, 304, 305, 315, 319, 323, 324, 334, 335, 337, 338, 340, 341, 345, 355, 359, 362, 365, 366, 371, 373, 378, 383, 386, 387, 392, 393, 403, 409, 410, 411, 412, 416, 421, 427, 433, 437, 439, 441, 442, 443, 446, 448, 453, 459, 461, 462, 464, 465, 466, 468, 472, 473, 474, 475, 478], "posix": [23, 33, 67, 100, 104, 108, 112, 130, 134, 147, 163, 173, 180, 206, 210, 251, 254, 263, 280, 281, 283, 289, 290, 291, 293, 298, 306, 313, 319, 325, 328, 329, 334, 335, 345, 349, 352, 355, 357, 362, 363, 388, 396, 418, 422, 423, 452, 453, 459, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 477, 478], "global": [23, 27, 30, 31, 33, 34, 44, 50, 51, 52, 62, 65, 67, 72, 75, 77, 78, 86, 87, 93, 94, 96, 107, 111, 112, 117, 119, 129, 132, 137, 141, 145, 148, 157, 163, 166, 173, 174, 179, 188, 190, 192, 207, 208, 210, 215, 220, 222, 224, 227, 239, 244, 245, 247, 252, 262, 266, 273, 280, 289, 290, 293, 294, 295, 302, 305, 312, 317, 321, 324, 331, 332, 334, 341, 342, 348, 349, 351, 352, 355, 356, 357, 359, 362, 364, 366, 377, 381, 383, 385, 387, 392, 395, 397, 399, 410, 417, 424, 425, 426, 428, 429, 430, 432, 434, 435, 437, 438, 447, 452, 456, 458, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "suppos": [23, 59, 62, 63, 72, 76, 84, 97, 100, 104, 178, 183, 190, 193, 196, 245, 306, 316, 331, 334, 337, 338, 340, 342, 355, 373, 387, 399, 447, 464, 465, 466, 472, 477, 478], "pyarg_": 23, "concret": [23, 31, 32, 67, 74, 75, 93, 103, 113, 119, 163, 173, 180, 184, 194, 205, 216, 227, 247, 250, 251, 255, 265, 289, 315, 326, 335, 341, 344, 349, 362, 385, 391, 404, 407, 414, 422, 429, 461, 462, 465, 473, 474, 477, 479], "traceback": [23, 33, 34, 41, 65, 67, 72, 75, 78, 84, 88, 91, 92, 93, 94, 97, 98, 99, 100, 106, 111, 117, 122, 136, 137, 139, 148, 154, 157, 160, 164, 166, 173, 174, 182, 183, 185, 188, 190, 208, 210, 222, 244, 251, 252, 256, 262, 264, 265, 266, 280, 281, 293, 294, 296, 308, 312, 316, 335, 337, 341, 342, 344, 345, 347, 349, 362, 364, 381, 382, 384, 385, 386, 387, 404, 424, 426, 427, 433, 437, 438, 439, 440, 443, 446, 449, 452, 453, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 477, 478, 479], "although": [23, 25, 27, 34, 41, 62, 71, 77, 79, 84, 88, 93, 99, 100, 131, 136, 147, 155, 173, 178, 180, 187, 190, 193, 194, 197, 202, 203, 228, 245, 252, 255, 258, 259, 264, 268, 271, 278, 280, 289, 290, 291, 292, 293, 296, 304, 316, 340, 342, 349, 352, 355, 363, 365, 372, 404, 409, 411, 412, 413, 422, 423, 424, 425, 427, 429, 431, 433, 437, 438, 439, 440, 441, 445, 447, 452, 458, 459, 471, 474, 475, 476], "forbidden": [23, 41, 93, 107, 136, 238, 296, 341, 362, 465, 469, 475], "clean": [23, 32, 34, 67, 72, 74, 77, 86, 98, 100, 104, 117, 119, 129, 136, 137, 155, 163, 188, 190, 198, 202, 205, 209, 210, 244, 249, 252, 268, 279, 280, 281, 284, 312, 335, 337, 340, 355, 357, 359, 392, 396, 399, 413, 425, 427, 442, 453, 459, 460, 461, 463, 464, 465, 466, 467, 469, 471, 472, 473, 478, 479], "prepar": [23, 58, 65, 67, 77, 100, 106, 107, 147, 154, 180, 188, 222, 227, 229, 232, 241, 251, 255, 266, 290, 296, 324, 334, 345, 349, 359, 360, 381, 382, 385, 392, 410, 411, 414, 419, 423, 446, 447, 465, 467, 469, 474, 475, 477, 479], "propag": [23, 32, 34, 35, 51, 94, 99, 100, 122, 136, 154, 157, 167, 210, 247, 264, 265, 280, 293, 294, 299, 322, 329, 330, 337, 341, 345, 349, 363, 378, 385, 386, 387, 392, 399, 424, 425, 427, 429, 440, 462, 464, 476], "mysteri": [23, 72, 79, 104, 148, 293, 331, 474], "sy": [23, 24, 28, 30, 32, 33, 34, 44, 58, 62, 63, 65, 67, 72, 78, 79, 84, 86, 87, 96, 98, 99, 100, 101, 102, 106, 109, 110, 111, 112, 115, 119, 130, 133, 134, 136, 137, 139, 141, 148, 149, 152, 154, 160, 166, 172, 173, 174, 183, 185, 187, 188, 190, 197, 207, 210, 211, 212, 213, 215, 220, 222, 224, 225, 226, 227, 231, 242, 244, 247, 248, 251, 252, 255, 258, 259, 262, 264, 265, 266, 272, 276, 277, 280, 289, 290, 292, 294, 296, 297, 299, 300, 304, 305, 306, 308, 309, 310, 312, 318, 321, 324, 325, 328, 329, 330, 331, 334, 335, 337, 339, 341, 344, 345, 352, 353, 355, 356, 358, 359, 362, 364, 366, 377, 378, 379, 382, 383, 385, 386, 387, 392, 396, 397, 399, 404, 410, 414, 417, 418, 419, 420, 424, 425, 427, 429, 433, 434, 435, 440, 443, 445, 447, 448, 449, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 481], "exc_info": [23, 32, 34, 72, 99, 100, 109, 141, 149, 188, 190, 264, 266, 329, 349, 355, 385, 402, 404, 424, 425, 447, 462, 464, 465, 467, 470, 475], "former": [23, 30, 43, 84, 117, 141, 156, 168, 173, 174, 180, 183, 247, 252, 264, 285, 305, 319, 329, 337, 366, 372, 381, 383, 395, 425, 427, 429, 470, 472, 473, 476, 477], "caught": [23, 98, 112, 117, 124, 136, 149, 154, 163, 210, 280, 290, 299, 302, 320, 329, 330, 334, 337, 349, 359, 363, 366, 385, 386, 411, 420, 424, 425, 433, 440, 460, 465, 467, 474, 478], "stop": [23, 28, 33, 55, 67, 84, 93, 94, 96, 99, 100, 102, 118, 127, 130, 134, 136, 141, 152, 156, 157, 158, 184, 187, 188, 190, 194, 204, 210, 222, 224, 225, 232, 244, 252, 258, 264, 265, 266, 268, 280, 281, 289, 290, 292, 293, 294, 297, 299, 305, 311, 315, 330, 335, 341, 345, 359, 362, 373, 379, 381, 382, 383, 385, 387, 403, 404, 424, 425, 427, 438, 439, 440, 441, 459, 460, 461, 462, 464, 465, 466, 467, 469, 471, 472, 475, 476, 477], "pyerr_clear": [23, 34, 56, 72, 474], "pyerr_printex": [23, 56], "set_sys_last_var": 23, "stderr": [23, 32, 33, 41, 58, 63, 67, 71, 72, 84, 99, 100, 111, 123, 127, 130, 134, 148, 154, 166, 187, 190, 211, 224, 226, 242, 244, 255, 264, 265, 266, 280, 289, 290, 308, 318, 330, 337, 341, 345, 349, 355, 359, 362, 364, 378, 383, 385, 396, 397, 404, 425, 447, 448, 449, 452, 458, 459, 463, 465, 466, 467, 472, 474, 475, 476, 477, 479], "systemexit": [23, 65, 99, 112, 136, 137, 154, 165, 210, 244, 349, 362, 403, 426, 440, 447, 464, 465, 467, 476], "exit": [23, 32, 33, 34, 51, 58, 65, 67, 71, 72, 83, 85, 86, 88, 91, 94, 100, 111, 112, 115, 119, 123, 127, 129, 130, 132, 133, 134, 135, 136, 147, 148, 152, 154, 163, 165, 166, 172, 174, 183, 185, 186, 188, 190, 197, 210, 211, 215, 225, 244, 245, 249, 251, 258, 264, 266, 280, 289, 290, 294, 305, 306, 308, 312, 316, 325, 330, 331, 332, 334, 335, 337, 341, 345, 349, 350, 356, 357, 359, 362, 364, 375, 377, 381, 382, 385, 386, 387, 395, 396, 397, 399, 400, 403, 404, 408, 417, 418, 419, 424, 425, 427, 435, 440, 443, 445, 447, 448, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 475, 476, 477, 478, 479], "fatal": [23, 32, 41, 58, 71, 72, 137, 211, 338, 355, 385, 435, 440, 466, 467, 469, 473, 476], "last_exc": [23, 349, 378, 471], "backward": [23, 24, 32, 56, 58, 60, 63, 65, 79, 86, 99, 100, 117, 118, 125, 141, 164, 174, 180, 188, 190, 191, 193, 202, 204, 205, 210, 225, 233, 238, 242, 245, 247, 252, 255, 264, 265, 268, 271, 288, 290, 291, 292, 296, 299, 305, 311, 315, 316, 319, 329, 334, 338, 341, 345, 347, 354, 357, 359, 363, 378, 381, 383, 391, 392, 394, 416, 425, 427, 429, 432, 433, 437, 457, 458, 459, 461, 462, 464, 465, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "last_typ": [23, 349, 447, 467, 471], "last_valu": [23, 93, 208, 349, 378, 447, 471], "last_traceback": [23, 294, 349, 425, 447, 471], "pyerr_print": [23, 56, 67, 71, 72], "alia": [23, 30, 39, 58, 67, 84, 86, 93, 100, 102, 118, 119, 124, 130, 134, 150, 155, 158, 163, 173, 175, 180, 188, 192, 194, 202, 208, 210, 215, 222, 225, 227, 240, 247, 251, 252, 255, 280, 284, 289, 290, 294, 311, 315, 316, 319, 325, 326, 330, 334, 337, 338, 345, 348, 350, 356, 357, 362, 373, 381, 382, 383, 390, 400, 402, 403, 404, 416, 419, 420, 424, 425, 426, 433, 437, 453, 467, 469, 470, 471, 474, 476, 477, 479], "unraisablehook": [23, 28, 112, 139, 337, 349, 359, 447, 478], "util": [23, 30, 31, 32, 34, 67, 92, 93, 94, 100, 111, 115, 119, 121, 130, 148, 152, 155, 156, 160, 163, 174, 179, 183, 184, 187, 188, 190, 191, 193, 197, 200, 202, 204, 205, 227, 235, 238, 245, 248, 251, 253, 267, 270, 277, 282, 289, 308, 312, 319, 329, 333, 339, 341, 343, 345, 362, 366, 381, 385, 388, 396, 408, 448, 449, 458, 459, 461, 463, 464, 466, 469, 471, 472, 473, 474, 475, 476, 478, 479], "imposs": [23, 39, 53, 62, 77, 79, 84, 99, 155, 210, 265, 280, 290, 293, 309, 340, 346, 359, 362, 383, 385, 398, 407, 419, 433, 459, 460, 461, 462, 463, 465, 466, 471, 475], "__del__": [23, 32, 51, 62, 67, 72, 83, 179, 224, 255, 280, 313, 337, 357, 359, 386, 425, 474], "pyerr_displayexcept": [23, 56, 471], "displai": [23, 32, 33, 41, 67, 79, 86, 88, 93, 96, 100, 106, 115, 117, 119, 122, 136, 148, 149, 152, 154, 157, 165, 176, 182, 183, 185, 188, 190, 197, 200, 210, 211, 235, 244, 251, 252, 256, 263, 264, 268, 278, 285, 290, 293, 294, 304, 308, 310, 316, 317, 318, 339, 341, 342, 343, 345, 349, 355, 361, 364, 366, 369, 370, 372, 373, 375, 377, 378, 381, 385, 392, 396, 397, 400, 418, 423, 425, 432, 433, 438, 440, 441, 443, 445, 446, 448, 449, 450, 452, 453, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "statement": [23, 34, 46, 48, 53, 60, 62, 65, 67, 71, 72, 79, 84, 85, 86, 88, 94, 98, 100, 109, 111, 112, 114, 117, 123, 133, 135, 136, 141, 146, 148, 156, 161, 163, 165, 168, 173, 181, 182, 183, 185, 188, 190, 198, 210, 215, 220, 222, 231, 239, 244, 245, 247, 249, 251, 252, 254, 255, 260, 261, 267, 268, 275, 278, 280, 281, 285, 288, 289, 290, 292, 294, 303, 309, 312, 316, 325, 332, 334, 335, 337, 338, 341, 345, 348, 349, 351, 355, 356, 357, 358, 359, 364, 375, 381, 383, 385, 386, 387, 398, 402, 407, 408, 409, 419, 423, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 447, 452, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "pyerr_setstr": [23, 34, 56, 72, 74, 75, 98, 466, 471], "pyexc_runtimeerror": [23, 56, 74], "py_incref": [23, 34, 51, 56, 66, 72, 74, 75, 85, 86, 469, 470, 471, 478], "pyerr_setobject": [23, 56, 72, 471], "pyerr_format": [23, 56, 74, 466, 475], "pyunicode_fromformat": [23, 56, 63, 74, 75, 469, 471, 473, 474, 475], "pyerr_formatv": [23, 56, 475], "pyerr_setnon": [23, 56], "shorthand": [23, 77, 84, 97, 117, 140, 188, 190, 256, 299, 334, 361, 366, 378, 383, 397, 424, 437, 440, 462, 463, 474], "pyerr_badargu": [23, 56], "pyexc_typeerror": [23, 56, 72, 74, 75], "illeg": [23, 46, 88, 94, 106, 155, 165, 193, 202, 209, 210, 290, 311, 330, 338, 341, 363, 373, 404, 407, 419, 424, 425, 428, 432, 433, 460, 461, 463, 464, 466, 472, 477, 478], "pyerr_nomemori": [23, 41, 56, 72], "pyexc_memoryerror": [23, 56], "pyerr_setfromerrno": [23, 56, 72], "gotten": [23, 82, 148, 180, 183, 280, 313, 459], "strerror": [23, 209, 210, 263, 290, 465], "eintr": [23, 67, 209, 210, 280, 466], "interrupt": [23, 32, 67, 100, 112, 116, 123, 136, 148, 174, 175, 183, 188, 209, 210, 222, 244, 268, 280, 290, 313, 325, 326, 330, 334, 335, 337, 345, 356, 362, 363, 385, 392, 403, 417, 423, 425, 435, 438, 440, 465, 466, 470, 472, 475, 478, 479], "pyerr_checksign": [23, 56, 471], "pyerr_setfromerrnowithfilenameobject": [23, 56], "filenameobject": 23, "oserror": [23, 106, 123, 127, 130, 150, 173, 180, 185, 210, 212, 215, 220, 222, 227, 231, 240, 242, 247, 252, 255, 275, 279, 280, 285, 290, 291, 292, 293, 300, 303, 319, 325, 329, 330, 332, 334, 338, 345, 355, 356, 359, 363, 390, 392, 402, 420, 424, 440, 447, 466, 469, 473, 474, 478], "filenameobject2": 23, "pyerr_setfromerrnowithfilenam": [23, 56], "pyerr_setfromwindowserr": [23, 56], "ierr": 23, "windowserror": [23, 173, 210, 402, 473], "getlasterror": [23, 173], "win32": [23, 63, 83, 85, 134, 173, 266, 280, 290, 334, 345, 349, 352, 402, 403, 458, 459, 465, 467, 472, 475], "formatmessag": [23, 173, 210], "pyexc_windowserror": [23, 56], "pyerr_setexcfromwindowserr": [23, 56], "pyerr_setfromwindowserrwithfilenam": [23, 56], "fsdecod": [23, 86, 290, 349, 472, 476], "pyerr_setexcfromwindowserrwithfilenameobject": [23, 56], "filename2": [23, 210], "pyerr_setexcfromwindowserrwithfilenam": [23, 56], "pyerr_setimporterror": [23, 56, 474, 476], "msg": [23, 83, 100, 104, 119, 126, 136, 148, 166, 173, 187, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 225, 232, 234, 239, 247, 259, 263, 264, 266, 268, 280, 283, 316, 332, 334, 341, 356, 359, 378, 385, 390, 392, 405, 411, 447, 462, 463, 464, 472, 473, 474, 475, 476], "importerror": [23, 100, 102, 210, 247, 265, 276, 280, 296, 299, 331, 338, 349, 359, 385, 407, 420, 429, 433, 447, 453, 460, 462, 465, 471, 473, 474, 476, 477, 479], "pyerr_setimporterrorsubclass": [23, 56, 476], "pyerr_syntaxlocationobject": 23, "lineno": [23, 96, 119, 141, 164, 185, 188, 190, 210, 215, 252, 259, 262, 264, 283, 294, 296, 305, 309, 311, 316, 328, 359, 378, 379, 385, 397, 425, 428, 452, 469, 475, 476, 478], "col_offset": [23, 119, 188, 478], "syntaxerror": [23, 65, 67, 78, 103, 119, 154, 156, 165, 190, 210, 222, 244, 316, 359, 375, 378, 383, 424, 426, 428, 432, 433, 439, 440, 443, 446, 447, 459, 460, 461, 470, 471, 472, 474, 475, 476, 477], "subsystem": [23, 94, 100, 247, 345, 366, 458, 462, 464, 466, 478], "think": [23, 59, 63, 74, 77, 79, 84, 94, 98, 100, 103, 104, 106, 190, 198, 222, 233, 249, 258, 264, 289, 296, 383, 386, 387, 425, 427, 429, 437, 438, 439, 446, 461, 464, 465], "pyerr_syntaxlocationex": [23, 56], "pyerr_syntaxloc": [23, 56], "omit": [23, 59, 67, 74, 77, 86, 100, 101, 103, 114, 117, 118, 119, 123, 150, 157, 164, 172, 173, 174, 180, 187, 190, 197, 198, 199, 201, 210, 220, 222, 227, 231, 242, 244, 245, 249, 255, 256, 262, 263, 268, 273, 275, 280, 285, 289, 290, 294, 296, 302, 311, 315, 316, 317, 325, 328, 329, 331, 332, 334, 337, 340, 341, 342, 355, 362, 373, 378, 380, 381, 383, 385, 386, 397, 398, 406, 408, 410, 411, 418, 423, 424, 425, 427, 428, 432, 433, 443, 446, 452, 458, 462, 463, 464, 466, 467, 469, 470, 473, 474, 476, 477], "pyerr_badinternalcal": [23, 56], "pyexc_systemerror": [23, 56], "mirror": [23, 107, 220, 264, 265, 266, 366, 374, 384, 412, 452, 463], "machineri": [23, 44, 62, 67, 72, 86, 92, 100, 113, 155, 206, 208, 222, 248, 252, 265, 277, 299, 338, 349, 382, 399, 403, 420, 421, 425, 429, 452, 458, 460, 461, 463, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477], "nor": [23, 32, 33, 62, 74, 75, 83, 86, 88, 93, 97, 107, 113, 130, 140, 141, 155, 185, 188, 239, 240, 264, 267, 272, 280, 283, 289, 290, 293, 294, 296, 299, 300, 313, 315, 316, 327, 335, 337, 338, 341, 349, 350, 357, 373, 377, 383, 385, 392, 400, 422, 423, 425, 427, 452, 453, 469, 471, 472, 474, 476, 477], "intent": [23, 30, 71, 72, 100, 178, 180, 193, 202, 255, 272, 290, 349, 383, 385, 386, 404, 424, 425, 462, 463, 465, 467, 473, 474], "pyerr_warnex": [23, 56, 397, 464], "stack_level": 23, "forth": [23, 84, 91, 103, 104, 157, 290, 316, 325, 341, 425, 459, 461, 462, 464], "pyexc_warn": [23, 56], "pyexc_except": [23, 56], "pyexc_runtimewarn": [23, 56], "command": [23, 32, 33, 34, 65, 67, 71, 72, 76, 77, 78, 80, 84, 85, 88, 99, 100, 101, 102, 103, 106, 108, 109, 111, 115, 116, 121, 122, 123, 127, 133, 134, 139, 148, 154, 157, 161, 165, 174, 179, 182, 184, 185, 189, 190, 203, 211, 219, 220, 222, 227, 242, 245, 248, 251, 253, 255, 261, 265, 269, 280, 282, 285, 292, 293, 295, 298, 300, 302, 303, 305, 306, 307, 310, 312, 321, 324, 328, 329, 332, 338, 341, 347, 349, 351, 356, 357, 360, 365, 366, 370, 373, 379, 381, 396, 397, 400, 404, 410, 417, 425, 426, 433, 434, 435, 436, 442, 444, 445, 446, 447, 450, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 475, 477, 478, 479, 481], "pyerr_warnexplicitobject": 23, "registri": [23, 31, 33, 63, 64, 67, 142, 164, 172, 192, 194, 200, 223, 247, 251, 256, 266, 273, 296, 300, 338, 349, 351, 383, 392, 397, 401, 403, 410, 455, 459, 465, 466, 476, 479], "explicit": [23, 28, 30, 34, 44, 65, 67, 72, 75, 77, 84, 98, 99, 103, 104, 109, 111, 117, 130, 137, 164, 166, 178, 180, 183, 187, 202, 207, 210, 222, 227, 240, 247, 256, 266, 280, 289, 294, 296, 311, 321, 328, 329, 334, 335, 337, 341, 342, 344, 349, 357, 359, 383, 386, 399, 408, 411, 418, 425, 427, 429, 435, 437, 438, 439, 447, 453, 458, 459, 460, 464, 466, 467, 469, 471, 472, 477, 478, 479, 481], "straightforward": [23, 34, 72, 83, 84, 85, 98, 100, 106, 107, 155, 157, 164, 173, 256, 265, 289, 325, 334, 381, 386, 387, 437, 446, 461, 462, 465, 470, 472, 473], "warn_explicit": [23, 397, 476], "pyerr_warnexplicit": [23, 56], "pyerr_warnformat": [23, 56], "pyerr_resourcewarn": [23, 56, 476], "resourcewarn": [23, 67, 122, 184, 210, 224, 290, 345, 359, 385, 397, 447, 472, 476], "warningmessag": [23, 476], "pyerr_set": 23, "pyerr_restor": [23, 56, 62, 74, 471], "pyerr_exceptionmatch": [23, 34, 56], "shown": [23, 34, 41, 72, 76, 88, 91, 93, 98, 99, 100, 101, 102, 105, 107, 108, 113, 117, 144, 157, 166, 178, 183, 185, 187, 188, 190, 200, 210, 211, 244, 264, 265, 289, 294, 305, 310, 316, 322, 342, 345, 363, 372, 373, 378, 381, 385, 386, 387, 391, 397, 399, 425, 436, 438, 440, 458, 465, 469, 475, 476, 477, 478, 479], "pyerr_givenexceptionmatch": [23, 56], "subtupl": 23, "pyerr_getraisedexcept": [23, 56, 471], "catch": [23, 34, 41, 67, 77, 84, 86, 91, 94, 100, 102, 106, 107, 117, 119, 136, 164, 172, 190, 210, 241, 252, 264, 289, 290, 312, 319, 328, 330, 337, 345, 359, 383, 385, 392, 405, 425, 427, 440, 459, 462, 464, 465, 466, 467, 470, 471, 472, 473, 474, 476, 479], "pyerr_setraisedexcept": [23, 56, 471], "pyerr_gethandledexcept": [23, 56, 470], "pyerr_fetch": [23, 56, 62, 74, 471, 474], "ptraceback": 23, "invalid": [23, 28, 33, 56, 58, 60, 62, 63, 67, 72, 77, 79, 84, 86, 88, 92, 93, 97, 98, 99, 103, 106, 107, 112, 115, 123, 124, 143, 147, 154, 156, 157, 160, 173, 180, 181, 183, 193, 196, 198, 200, 202, 205, 206, 208, 209, 210, 213, 222, 223, 224, 227, 231, 235, 237, 239, 241, 244, 247, 252, 255, 259, 263, 265, 268, 272, 280, 289, 290, 291, 292, 296, 306, 308, 316, 319, 325, 326, 330, 334, 337, 338, 340, 341, 342, 345, 346, 355, 359, 362, 363, 373, 375, 376, 383, 385, 391, 393, 397, 398, 399, 402, 407, 416, 422, 424, 425, 428, 433, 438, 440, 446, 452, 459, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "awai": [23, 27, 32, 34, 75, 84, 94, 99, 104, 117, 163, 174, 180, 183, 190, 210, 244, 247, 251, 252, 272, 280, 281, 289, 290, 305, 316, 392, 436, 437, 449, 461, 462, 467, 474, 475], "pyerr_normalizeexcept": [23, 56, 471], "tb": [23, 100, 188, 210, 244, 378, 379, 382, 387, 425, 464, 465, 471, 474], "avoid": [23, 24, 32, 33, 34, 41, 43, 60, 62, 67, 71, 72, 74, 75, 77, 84, 86, 87, 91, 93, 94, 99, 102, 103, 104, 105, 106, 110, 113, 117, 118, 122, 123, 126, 129, 130, 134, 135, 136, 144, 146, 155, 157, 163, 164, 166, 168, 173, 174, 180, 183, 207, 210, 212, 222, 224, 233, 234, 239, 242, 245, 252, 256, 259, 262, 263, 265, 266, 268, 272, 275, 280, 281, 286, 289, 290, 296, 311, 315, 316, 318, 329, 330, 334, 337, 339, 340, 341, 345, 349, 355, 359, 361, 362, 363, 364, 366, 372, 382, 383, 385, 387, 392, 399, 403, 406, 407, 408, 410, 414, 424, 425, 427, 428, 429, 432, 433, 437, 438, 439, 440, 446, 449, 453, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "circumst": [23, 41, 77, 84, 91, 93, 100, 148, 164, 210, 240, 264, 267, 289, 290, 319, 329, 340, 392, 400, 425, 433, 437, 440, 447, 463, 470, 474, 478], "unnorm": [23, 315], "instanti": [23, 62, 75, 83, 93, 98, 99, 100, 107, 113, 119, 123, 129, 130, 133, 136, 148, 150, 152, 157, 173, 174, 178, 180, 187, 191, 193, 195, 200, 227, 237, 239, 242, 245, 247, 264, 265, 266, 268, 280, 286, 289, 293, 294, 296, 315, 325, 326, 328, 332, 334, 335, 341, 359, 366, 373, 382, 383, 385, 386, 387, 396, 400, 405, 407, 408, 411, 413, 425, 433, 437, 440, 464, 465, 471, 472, 475, 477, 478, 479], "delai": [23, 67, 83, 91, 100, 110, 122, 126, 136, 174, 242, 244, 252, 266, 280, 285, 322, 330, 334, 338, 359, 380, 381, 387, 392, 393, 425, 447, 465, 469, 472, 476, 477, 478], "implicitli": [23, 33, 84, 86, 98, 111, 123, 130, 140, 163, 164, 166, 178, 181, 185, 210, 220, 237, 245, 255, 265, 278, 292, 321, 330, 332, 334, 337, 341, 342, 345, 383, 386, 397, 409, 424, 425, 427, 429, 432, 433, 437, 440, 466, 469, 470, 472, 473, 475, 476, 477, 478], "__traceback__": [23, 210, 349, 378, 382, 425, 427, 433, 467, 470], "snippet": [23, 67, 77, 88, 93, 100, 122, 136, 167, 182, 241, 251, 265, 328, 338, 362, 439, 458, 461, 462, 464, 475], "pyexception_settraceback": [23, 56], "freshli": [23, 84, 252, 382], "pyerr_sethandledexcept": [23, 56, 470], "pyerr_getexcinfo": [23, 56, 470], "kept": [23, 24, 32, 44, 58, 63, 84, 98, 100, 111, 157, 164, 173, 181, 183, 192, 196, 205, 208, 210, 211, 222, 240, 241, 244, 255, 258, 266, 268, 288, 308, 309, 313, 316, 331, 335, 338, 340, 347, 383, 386, 399, 421, 433, 440, 449, 459, 461, 466, 467, 469, 470, 471, 472, 473, 474, 479], "pyerr_setexcinfo": [23, 56, 470], "deriv": [23, 32, 48, 58, 60, 67, 75, 77, 86, 87, 113, 117, 119, 141, 154, 155, 157, 163, 171, 173, 174, 175, 178, 180, 194, 196, 198, 199, 200, 210, 222, 223, 227, 237, 241, 245, 247, 248, 252, 255, 258, 259, 264, 265, 269, 285, 289, 290, 293, 305, 307, 309, 310, 311, 325, 335, 338, 342, 349, 352, 366, 381, 383, 385, 390, 392, 395, 397, 404, 405, 408, 413, 416, 417, 423, 425, 428, 429, 432, 437, 440, 459, 462, 463, 464, 465, 466, 467, 470, 473, 474, 476, 477], "main": [23, 32, 33, 34, 41, 44, 58, 62, 65, 67, 71, 72, 73, 74, 75, 77, 83, 84, 86, 88, 91, 92, 98, 99, 100, 101, 111, 112, 117, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 154, 163, 164, 166, 167, 174, 182, 185, 187, 190, 191, 193, 196, 197, 198, 201, 202, 203, 205, 223, 225, 227, 233, 237, 244, 247, 248, 249, 252, 255, 264, 265, 268, 280, 285, 289, 290, 293, 296, 319, 321, 330, 331, 335, 337, 341, 344, 349, 351, 353, 355, 359, 362, 364, 366, 369, 370, 372, 373, 379, 381, 383, 385, 386, 387, 392, 396, 399, 408, 410, 412, 417, 418, 426, 429, 439, 447, 448, 449, 452, 455, 458, 461, 462, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "invoc": [23, 28, 55, 67, 72, 86, 96, 161, 166, 173, 207, 271, 280, 305, 362, 378, 385, 396, 404, 412, 424, 425, 435, 437, 452, 455, 456, 463, 472, 474, 478], "press": [23, 80, 91, 100, 123, 151, 174, 244, 279, 294, 320, 366, 372, 373, 381, 385, 419, 466, 472], "ctrl": [23, 85, 91, 100, 123, 132, 165, 175, 280, 294, 330, 335, 337, 438, 452, 459, 464, 472, 478], "sigint": [23, 67, 112, 132, 280, 294, 313, 330, 345, 385, 469, 472, 478], "keyboardinterrupt": [23, 99, 100, 112, 132, 136, 154, 210, 280, 313, 330, 385, 404, 417, 435, 440, 447, 464, 465, 466, 467, 476, 477, 478], "pyerr_setinterrupt": [23, 56], "simul": [23, 67, 91, 92, 100, 105, 112, 123, 130, 133, 157, 174, 231, 233, 287, 296, 315, 323, 330, 344, 360, 381, 399, 460, 461, 469, 474], "arriv": [23, 112, 190, 240, 242, 280, 315, 330, 335, 338, 363, 439, 459], "pyerr_setinterruptex": [23, 56, 469], "signum": [23, 83, 112, 123, 211, 290, 330], "sig_dfl": [23, 112, 330, 345], "sig_ign": [23, 112, 330, 345], "outsid": [23, 58, 84, 92, 94, 99, 100, 103, 104, 122, 123, 129, 136, 147, 155, 160, 163, 167, 173, 174, 180, 183, 193, 196, 202, 205, 210, 222, 242, 244, 249, 259, 296, 310, 311, 316, 322, 329, 334, 338, 341, 342, 344, 355, 359, 362, 363, 364, 373, 381, 383, 397, 410, 412, 419, 423, 424, 425, 432, 433, 437, 439, 447, 462, 463, 466, 470, 471, 472, 476, 477, 478, 479], "pysignal_setwakeupfd": [23, 465], "fd": [23, 24, 83, 123, 127, 130, 139, 174, 212, 255, 279, 290, 306, 325, 326, 329, 330, 334, 358, 380, 381, 465], "disabl": [23, 28, 32, 33, 34, 41, 56, 62, 67, 72, 93, 99, 100, 103, 109, 117, 123, 127, 132, 141, 148, 161, 164, 172, 174, 183, 187, 190, 198, 211, 215, 220, 222, 223, 224, 239, 247, 252, 255, 259, 264, 265, 266, 280, 285, 289, 290, 294, 296, 305, 312, 316, 317, 324, 325, 328, 330, 331, 332, 334, 336, 337, 338, 341, 349, 357, 359, 373, 381, 383, 385, 386, 392, 397, 399, 402, 410, 422, 425, 429, 435, 440, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "set_wakeup_fd": [23, 330, 465, 475, 477], "socket": [23, 67, 79, 86, 94, 95, 97, 99, 103, 106, 121, 124, 127, 128, 139, 155, 167, 168, 184, 204, 209, 210, 220, 232, 239, 242, 244, 245, 251, 253, 254, 255, 256, 257, 264, 265, 266, 280, 281, 285, 290, 293, 302, 304, 319, 325, 326, 330, 332, 335, 339, 355, 356, 366, 399, 404, 410, 425, 436, 449, 453, 459, 460, 461, 462, 463, 464, 465, 466, 471], "pyerr_newexcept": [23, 56, 72, 464, 466, 472], "classnam": [23, 84, 119, 158, 366, 372, 386, 387, 424, 437], "__module__": [23, 27, 57, 62, 87, 92, 93, 157, 178, 194, 208, 222, 223, 252, 276, 359, 383, 425, 462, 469, 475, 476], "dot": [23, 30, 44, 62, 63, 75, 77, 86, 92, 96, 99, 100, 103, 119, 190, 222, 228, 240, 244, 247, 256, 258, 263, 264, 265, 268, 273, 285, 288, 293, 299, 310, 316, 320, 329, 334, 341, 349, 355, 357, 366, 374, 381, 385, 386, 387, 417, 419, 420, 424, 425, 429, 431, 433, 437, 438, 444, 445, 447, 452, 458, 465, 468, 469, 475], "pyerr_newexceptionwithdoc": [23, 56, 466, 472], "docstr": [23, 27, 33, 34, 44, 57, 59, 62, 65, 67, 74, 83, 86, 100, 119, 152, 157, 184, 219, 222, 223, 244, 252, 294, 310, 359, 375, 382, 383, 385, 404, 424, 425, 432, 433, 437, 438, 448, 452, 459, 460, 461, 462, 463, 464, 465, 466, 470, 472, 474, 475, 476, 477, 478, 479], "pyexception_gettraceback": [23, 56], "ex": [23, 33, 41, 67, 85, 86, 100, 101, 103, 244, 266, 280, 290, 291, 317, 329, 331, 334, 341, 345, 396, 416, 419, 428, 435, 443, 445, 452, 453, 458, 461, 464, 466, 471, 472, 475, 476, 477, 479], "pyexception_getcontext": [23, 56], "__context__": [23, 210, 378, 433, 467, 473], "pyexception_setcontext": [23, 56], "pyexception_getcaus": [23, 56], "__cause__": [23, 188, 210, 378, 433, 467], "pyexception_setcaus": [23, 56], "__suppress_context__": [23, 210, 378, 433], "pyexception_getarg": [23, 56, 471], "pyexception_setarg": [23, 56, 471], "pyunstable_exc_prepreraisestar": 23, "orig": [23, 200, 393], "unhandl": [23, 34, 65, 112, 122, 148, 154, 166, 190, 225, 244, 349, 357, 362, 378, 392, 425, 440, 467, 471], "claus": [23, 34, 67, 86, 94, 100, 112, 119, 136, 166, 210, 252, 280, 294, 311, 337, 341, 349, 357, 359, 425, 426, 427, 432, 433, 435, 439, 440, 442, 459, 464, 465, 469, 470, 472, 474, 477, 478, 479], "rerais": [23, 166, 188, 280, 341, 350, 424, 425, 440], "exceptiongroup": [23, 123, 136, 188, 210, 334, 378, 424, 440, 470, 471], "pyunicodedecodeerror_cr": [23, 56], "pyunicodedecodeerror_getencod": [23, 56], "pyunicodeencodeerror_getencod": [23, 56], "pyunicodedecodeerror_getobject": [23, 56], "pyunicodeencodeerror_getobject": [23, 56], "pyunicodetranslateerror_getobject": [23, 56], "pyunicodedecodeerror_getstart": [23, 56], "pyunicodeencodeerror_getstart": [23, 56], "pyunicodetranslateerror_getstart": [23, 56], "pyunicodedecodeerror_setstart": [23, 56], "pyunicodeencodeerror_setstart": [23, 56], "pyunicodetranslateerror_setstart": [23, 56], "pyunicodedecodeerror_getend": [23, 56], "pyunicodeencodeerror_getend": [23, 56], "pyunicodetranslateerror_getend": [23, 56], "pyunicodedecodeerror_setend": [23, 56], "pyunicodeencodeerror_setend": [23, 56], "pyunicodetranslateerror_setend": [23, 56], "pyunicodedecodeerror_getreason": [23, 56], "pyunicodeencodeerror_getreason": [23, 56], "pyunicodetranslateerror_getreason": [23, 56], "pyunicodedecodeerror_setreason": [23, 56], "pyunicodeencodeerror_setreason": [23, 56], "pyunicodetranslateerror_setreason": [23, 56], "depth": [23, 90, 99, 119, 139, 160, 164, 174, 176, 181, 188, 193, 202, 210, 222, 232, 267, 296, 304, 318, 337, 341, 349, 355, 359, 372, 378, 382, 385, 409, 410, 437, 438, 442, 459, 460, 461, 475, 476, 477], "use_stackcheck": [23, 58], "pyos_checkstack": [23, 56, 58], "reach": [23, 24, 34, 51, 56, 65, 72, 74, 79, 83, 84, 94, 100, 102, 103, 107, 123, 124, 131, 133, 134, 141, 146, 150, 156, 222, 239, 255, 258, 264, 267, 290, 294, 310, 311, 313, 325, 328, 334, 335, 337, 341, 345, 378, 392, 410, 412, 421, 424, 425, 427, 429, 433, 437, 438, 440, 443, 458, 459, 460, 461, 462, 464, 465, 466, 472, 474, 475, 477, 478], "recursionerror": [23, 119, 210, 259, 296, 304, 349, 440, 475, 476], "concaten": [23, 52, 53, 67, 75, 103, 117, 118, 146, 148, 154, 155, 188, 222, 231, 232, 234, 264, 267, 268, 288, 290, 291, 293, 294, 311, 316, 328, 332, 334, 338, 341, 342, 355, 378, 383, 421, 425, 427, 440, 443, 446, 458, 462, 463, 469], "tp_repr": [23, 62, 74], "protect": [23, 32, 72, 74, 75, 100, 136, 164, 173, 174, 178, 220, 227, 232, 233, 245, 255, 267, 275, 280, 304, 321, 328, 335, 338, 339, 355, 386, 397, 418, 425, 440, 452, 461, 464, 470, 471, 475], "cycl": [23, 28, 60, 62, 67, 72, 75, 77, 84, 86, 94, 96, 98, 100, 111, 136, 157, 207, 224, 229, 244, 252, 258, 281, 349, 359, 362, 373, 399, 424, 425, 433, 436, 449, 460, 462, 464, 465, 466, 472, 474, 478, 479, 481], "facilit": [23, 222, 244, 265, 316, 317, 332, 397, 474, 477], "reprlib": [23, 67, 179, 251, 449, 467], "recursive_repr": [23, 318, 472], "py_reprent": [23, 56], "detect": [23, 28, 33, 34, 41, 58, 62, 67, 72, 74, 75, 77, 84, 86, 92, 94, 103, 104, 107, 109, 113, 130, 137, 155, 158, 172, 174, 178, 180, 183, 185, 188, 191, 200, 203, 210, 222, 229, 244, 247, 251, 252, 261, 268, 272, 280, 289, 290, 291, 292, 293, 296, 304, 311, 317, 318, 328, 330, 332, 334, 337, 341, 345, 349, 355, 359, 361, 362, 375, 379, 385, 386, 390, 392, 400, 404, 424, 425, 426, 427, 432, 434, 440, 452, 453, 458, 459, 460, 461, 462, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478], "typic": [23, 32, 33, 34, 44, 48, 56, 57, 60, 62, 72, 76, 77, 84, 85, 86, 92, 93, 98, 99, 100, 107, 108, 111, 117, 119, 122, 123, 126, 131, 136, 146, 148, 155, 164, 170, 183, 187, 190, 193, 200, 202, 215, 220, 222, 223, 225, 227, 242, 247, 248, 249, 250, 252, 255, 263, 264, 265, 266, 268, 272, 273, 278, 280, 289, 290, 293, 294, 296, 303, 304, 305, 313, 315, 317, 321, 323, 329, 331, 335, 338, 340, 341, 342, 344, 345, 349, 352, 355, 356, 357, 362, 363, 364, 366, 368, 373, 381, 382, 383, 385, 386, 392, 395, 396, 397, 402, 404, 407, 408, 410, 411, 412, 413, 418, 420, 425, 427, 429, 435, 436, 439, 440, 448, 449, 450, 452, 458, 462, 463, 466, 467, 470, 471, 472, 474, 475, 477, 478], "py_reprleav": [23, 56], "pyexc_": 23, "complet": [23, 32, 33, 34, 41, 56, 58, 63, 65, 67, 68, 72, 74, 75, 76, 77, 79, 85, 86, 91, 93, 94, 95, 98, 100, 103, 104, 114, 117, 121, 123, 124, 127, 130, 131, 133, 134, 136, 137, 147, 148, 151, 152, 154, 155, 156, 160, 163, 164, 166, 174, 178, 180, 183, 187, 190, 191, 193, 199, 200, 202, 203, 204, 205, 208, 210, 212, 220, 222, 223, 227, 229, 230, 232, 233, 237, 242, 251, 252, 256, 257, 258, 259, 264, 265, 266, 268, 269, 273, 278, 280, 281, 289, 290, 292, 294, 296, 305, 313, 315, 316, 319, 328, 329, 331, 334, 335, 337, 338, 339, 341, 345, 349, 350, 351, 355, 357, 358, 359, 360, 362, 365, 366, 372, 373, 375, 377, 378, 381, 383, 385, 387, 391, 392, 398, 404, 405, 407, 408, 410, 413, 424, 425, 426, 427, 429, 430, 431, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyexc_baseexcept": [23, 56], "baseexcept": [23, 124, 136, 163, 210, 264, 349, 350, 378, 429, 433, 440, 447, 464, 465, 467, 470, 477, 478], "pyexc_arithmeticerror": [23, 56], "arithmeticerror": [23, 183, 210, 447], "pyexc_assertionerror": [23, 56], "assertionerror": [23, 188, 210, 280, 359, 385, 386, 387, 404, 433, 447, 470, 479], "pyexc_attributeerror": [23, 56, 74, 75], "attributeerror": [23, 48, 57, 67, 87, 92, 100, 148, 166, 173, 178, 210, 222, 223, 247, 252, 265, 280, 290, 296, 299, 316, 330, 341, 359, 364, 382, 385, 386, 387, 407, 408, 424, 425, 427, 433, 447, 453, 459, 461, 466, 470, 472, 473, 474, 475, 477], "pyexc_blockingioerror": [23, 56], "blockingioerror": [23, 209, 210, 255, 290, 338, 424, 447, 473], "pyexc_brokenpipeerror": [23, 56], "brokenpipeerror": [23, 134, 209, 210, 330, 447, 473], "pyexc_buffererror": [23, 56], "pyexc_childprocesserror": [23, 56], "childprocesserror": [23, 209, 210, 290, 447, 473], "pyexc_connectionabortederror": [23, 56], "connectionabortederror": [23, 209, 210, 447, 473], "pyexc_connectionerror": [23, 56], "connectionerror": [23, 210, 239, 440, 447, 473, 475], "pyexc_connectionrefusederror": [23, 56], "connectionrefusederror": [23, 209, 210, 447, 473], "pyexc_connectionreseterror": [23, 56], "connectionreseterror": [23, 134, 209, 210, 239, 447, 473], "pyexc_eoferror": [23, 56], "eoferror": [23, 24, 40, 118, 124, 146, 150, 154, 210, 220, 222, 231, 267, 271, 280, 296, 332, 356, 447, 467], "pyexc_fileexistserror": [23, 56], "fileexistserror": [23, 197, 209, 210, 222, 255, 290, 293, 308, 329, 355, 419, 447, 473, 474], "pyexc_filenotfounderror": [23, 56], "filenotfounderror": [23, 117, 137, 166, 209, 210, 247, 250, 265, 283, 290, 293, 317, 440, 447, 473, 475], "pyexc_floatingpointerror": [23, 56], "floatingpointerror": [23, 210, 447], "pyexc_generatorexit": [23, 56], "generatorexit": [23, 94, 210, 425, 427, 447, 464, 465], "pyexc_importerror": [23, 56, 98], "pyexc_indentationerror": [23, 56], "indentationerror": [23, 67, 85, 210, 447, 459], "pyexc_indexerror": [23, 56], "indexerror": [23, 36, 37, 46, 59, 155, 157, 173, 193, 210, 233, 258, 280, 296, 315, 316, 341, 342, 378, 386, 425, 427, 433, 439, 446, 447, 459, 472], "pyexc_interruptederror": [23, 56], "interruptederror": [23, 209, 210, 222, 290, 325, 330, 334, 447, 473, 475], "pyexc_isadirectoryerror": [23, 56], "isadirectoryerror": [23, 209, 210, 290, 447, 473], "pyexc_keyerror": [23, 34, 56], "pyexc_keyboardinterrupt": [23, 56], "pyexc_lookuperror": [23, 56], "pyexc_modulenotfounderror": [23, 56], "modulenotfounderror": [23, 210, 247, 429, 476, 477], "pyexc_nameerror": [23, 56], "nameerror": [23, 26, 67, 173, 210, 247, 426, 427, 433, 440, 446, 447, 459, 460, 461, 464, 471], "pyexc_notadirectoryerror": [23, 56], "notadirectoryerror": [23, 209, 210, 290, 447, 473], "pyexc_notimplementederror": [23, 56], "notimplementederror": [23, 130, 165, 180, 197, 210, 223, 240, 247, 264, 280, 290, 293, 315, 338, 383, 402, 419, 447, 474, 476], "pyexc_oserror": [23, 56, 72], "pyexc_overflowerror": [23, 56], "overflowerror": [23, 25, 38, 46, 112, 154, 156, 180, 183, 190, 210, 222, 272, 301, 334, 337, 341, 362, 363, 425, 447, 461, 462, 465, 466, 468, 469, 473, 474], "pyexc_permissionerror": [23, 56], "permissionerror": [23, 209, 210, 247, 290, 319, 336, 357, 359, 447, 473, 476], "pyexc_processlookuperror": [23, 56], "processlookuperror": [23, 209, 210, 319, 447, 473], "pyexc_recursionerror": [23, 56, 475], "pyexc_referenceerror": [23, 56], "referenceerror": [23, 210, 399, 447, 460, 461], "runtimeerror": [23, 94, 104, 112, 118, 123, 124, 129, 134, 135, 136, 137, 163, 166, 167, 210, 215, 222, 255, 258, 265, 280, 290, 293, 316, 332, 341, 345, 349, 353, 359, 362, 383, 403, 419, 425, 427, 433, 440, 447, 462, 463, 464, 466, 471, 473, 475, 476, 477, 478], "pyexc_stopasynciter": [23, 56], "stopasynciter": [23, 86, 188, 210, 222, 386, 424, 425, 427, 433], "pyexc_stopiter": [23, 56], "stopiter": [23, 62, 67, 74, 86, 94, 110, 157, 188, 210, 222, 258, 271, 280, 341, 350, 386, 425, 427, 433, 437, 447, 461, 462, 464, 465, 469, 476, 477], "pyexc_syntaxerror": [23, 56, 428], "pyexc_systemexit": [23, 56], "pyexc_taberror": [23, 56], "taberror": [23, 85, 210, 432, 447, 459, 471], "pyexc_timeouterror": [23, 56], "timeouterror": [23, 124, 136, 163, 209, 210, 280, 332, 334, 447, 469, 473], "pyexc_unboundlocalerror": [23, 56], "unboundlocalerror": [23, 188, 210, 426, 447, 459], "pyexc_unicodedecodeerror": [23, 56], "pyexc_unicodeencodeerror": [23, 56], "pyexc_unicodeerror": [23, 56], "pyexc_unicodetranslateerror": [23, 56], "pyexc_valueerror": [23, 56, 72, 466], "pyexc_zerodivisionerror": [23, 56, 72], "zerodivisionerror": [23, 91, 100, 180, 183, 210, 218, 280, 294, 330, 337, 426, 427, 433, 440, 447, 448, 462, 468, 470, 472, 475, 479], "3151": [23, 67, 210, 319, 325, 334, 462, 481], "pyexc_environmenterror": [23, 56], "pyexc_ioerror": [23, 56], "separ": [23, 32, 33, 54, 56, 58, 62, 63, 67, 73, 76, 78, 83, 84, 87, 91, 93, 98, 99, 100, 102, 103, 105, 106, 109, 113, 117, 121, 122, 124, 129, 133, 136, 143, 147, 148, 151, 152, 155, 157, 163, 164, 166, 172, 173, 174, 175, 180, 183, 187, 190, 193, 198, 199, 202, 205, 208, 210, 217, 222, 223, 227, 233, 242, 244, 245, 247, 249, 254, 255, 256, 259, 263, 264, 265, 266, 267, 268, 273, 280, 285, 288, 289, 290, 291, 293, 294, 299, 300, 304, 310, 311, 316, 321, 328, 331, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 355, 358, 359, 361, 362, 364, 365, 366, 369, 377, 383, 385, 386, 387, 391, 392, 395, 397, 399, 400, 404, 419, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 438, 439, 443, 446, 447, 448, 449, 452, 453, 458, 459, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "preprocessor": [23, 41, 56, 67, 328, 455, 459, 466], "ms_window": [23, 33], "pyexc_byteswarn": [23, 56], "byteswarn": [23, 33, 210, 397, 447, 477], "pyexc_deprecationwarn": [23, 56], "deprecationwarn": [23, 67, 103, 109, 129, 163, 165, 185, 210, 249, 280, 290, 337, 344, 355, 359, 385, 397, 410, 425, 429, 432, 447, 452, 460, 462, 466, 469, 470, 471, 472, 474, 475, 476, 478, 481], "pyexc_futurewarn": [23, 56], "futurewarn": [23, 210, 316, 397, 447, 462, 463, 466, 471, 477], "pyexc_importwarn": [23, 56], "importwarn": [23, 185, 210, 385, 397, 429, 447, 464, 469, 471, 476], "pyexc_pendingdeprecationwarn": [23, 56], "pendingdeprecationwarn": [23, 109, 185, 210, 385, 397, 447, 462, 465, 466, 475, 476, 477, 478, 479], "pyexc_resourcewarn": [23, 56], "runtimewarn": [23, 44, 122, 123, 210, 334, 349, 385, 397, 447, 472, 478], "pyexc_syntaxwarn": [23, 56], "syntaxwarn": [23, 210, 316, 359, 397, 432, 447, 462, 470, 471, 476, 478], "pyexc_unicodewarn": [23, 56], "unicodewarn": [23, 210, 397, 447, 464, 472], "pyexc_userwarn": [23, 56], "userwarn": [23, 210, 226, 359, 397, 447], "minim": [24, 44, 61, 67, 72, 75, 79, 83, 91, 100, 102, 111, 119, 138, 148, 183, 187, 190, 211, 222, 232, 237, 245, 247, 251, 256, 270, 289, 296, 302, 316, 321, 330, 334, 336, 337, 359, 361, 376, 383, 392, 406, 434, 438, 453, 458, 459, 464, 476], "emul": [24, 32, 67, 75, 78, 84, 92, 154, 156, 157, 174, 178, 186, 190, 212, 255, 263, 268, 280, 289, 290, 291, 299, 306, 317, 329, 330, 345, 349, 356, 437, 461, 462, 465, 472, 473, 476, 478], "io": [24, 32, 33, 67, 70, 78, 84, 86, 102, 115, 120, 121, 122, 123, 133, 136, 146, 155, 161, 166, 184, 185, 187, 193, 210, 212, 215, 216, 222, 231, 232, 239, 242, 247, 248, 250, 251, 259, 267, 268, 285, 290, 291, 296, 301, 305, 306, 335, 338, 341, 345, 349, 355, 357, 359, 375, 376, 386, 396, 404, 408, 418, 419, 422, 423, 425, 452, 464, 465, 466, 467, 468, 469, 470, 474, 476, 479, 481], "unbuff": [24, 32, 255, 345, 349, 452], "meant": [24, 34, 48, 60, 77, 99, 100, 111, 119, 130, 136, 138, 155, 163, 210, 227, 233, 237, 247, 305, 334, 359, 366, 383, 392, 419, 428, 438, 443, 458, 464, 465, 466, 469, 472, 473, 474, 475, 477, 478], "advis": [24, 99, 166, 173, 245, 280, 285, 290, 362, 397, 422, 423, 425, 427, 445, 472, 478], "pyfile_fromfd": [24, 56], "newlin": [24, 67, 78, 86, 100, 103, 117, 119, 140, 143, 146, 154, 156, 172, 174, 187, 190, 193, 204, 215, 222, 231, 244, 247, 255, 259, 262, 264, 266, 267, 268, 275, 285, 293, 296, 304, 316, 328, 334, 335, 341, 345, 353, 357, 361, 363, 364, 374, 375, 378, 379, 391, 397, 408, 416, 418, 419, 424, 428, 432, 434, 443, 446, 448, 449, 452, 460, 463, 464, 465, 466, 467, 470, 474, 476, 477, 478, 481], "closefd": [24, 185, 222, 255, 280, 467], "mix": [24, 32, 41, 67, 85, 88, 100, 102, 113, 164, 183, 201, 202, 203, 204, 208, 215, 222, 225, 256, 272, 280, 286, 290, 292, 306, 316, 335, 338, 340, 341, 352, 359, 383, 391, 424, 425, 432, 439, 446, 447, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474], "unexpect": [24, 28, 79, 99, 100, 190, 202, 205, 220, 227, 247, 264, 272, 285, 315, 316, 330, 332, 334, 338, 340, 359, 385, 387, 392, 397, 419, 424, 425, 427, 432, 440, 458, 466, 469, 473, 477, 478, 479], "pyobject_asfiledescriptor": [24, 56], "fileno": [24, 58, 83, 100, 139, 146, 185, 212, 215, 232, 239, 255, 275, 280, 290, 292, 325, 326, 330, 334, 335, 338, 356, 357, 358, 366, 461, 464, 474], "pyfile_getlin": [24, 56], "readlin": [24, 33, 65, 67, 78, 83, 94, 98, 106, 123, 133, 134, 137, 140, 148, 152, 155, 167, 185, 187, 201, 204, 210, 215, 220, 222, 245, 251, 255, 265, 275, 290, 293, 294, 296, 312, 328, 335, 360, 366, 375, 379, 386, 392, 396, 418, 419, 425, 435, 437, 440, 443, 444, 445, 452, 453, 459, 460, 461, 462, 464, 465, 466, 472, 474, 477], "greater": [24, 32, 33, 37, 38, 44, 55, 62, 63, 75, 91, 99, 100, 105, 106, 112, 130, 131, 135, 136, 141, 143, 144, 151, 157, 174, 180, 183, 187, 193, 205, 206, 208, 223, 227, 239, 245, 256, 264, 266, 272, 290, 294, 315, 319, 331, 332, 340, 341, 349, 355, 359, 362, 373, 374, 379, 381, 385, 404, 407, 421, 425, 432, 433, 437, 438, 443, 445, 446, 459, 461, 462, 463, 464, 475, 476, 477, 479], "pyfile_setopencodehook": [24, 255], "py_opencodehookfunct": 24, "open_cod": [24, 255], "userdata": [24, 58], "pyunicodeobject": [24, 62, 63, 469, 470], "hook": [24, 30, 31, 33, 58, 65, 67, 86, 92, 96, 98, 112, 139, 152, 173, 185, 205, 213, 215, 222, 239, 251, 277, 299, 304, 305, 312, 328, 337, 341, 349, 360, 362, 379, 382, 386, 396, 397, 420, 425, 427, 433, 435, 436, 452, 453, 459, 461, 464, 466, 469, 470, 471, 473, 475, 476, 477, 479, 481], "intention": [24, 244, 285, 383, 404, 416, 423, 467], "frozen": [24, 30, 33, 67, 79, 173, 222, 247, 280, 299, 312, 349, 379, 383, 425, 429, 452, 458, 462, 471, 474, 477], "py_initi": [24, 30, 32, 33, 34, 56, 58, 71, 72, 85, 458, 469, 472, 477, 479], "audit": [24, 32, 57, 58, 67, 96, 112, 118, 173, 182, 207, 212, 220, 222, 224, 228, 239, 245, 251, 255, 271, 275, 279, 285, 290, 293, 294, 296, 302, 306, 319, 329, 330, 332, 334, 337, 341, 345, 349, 350, 353, 356, 357, 382, 392, 400, 402, 425, 433, 447, 452, 462, 469], "setopencodehook": [24, 139], "pyfile_writeobject": [24, 48, 56], "py_print_raw": [24, 48], "pyfile_writestr": [24, 56], "pyfloatobject": [25, 75], "pyfloat_typ": [25, 56], "pyfloat_check": 25, "pyfloat_checkexact": 25, "pyfloat_fromstr": [25, 56], "pyfloat_fromdoubl": [25, 56], "pyfloat_asdoubl": [25, 56, 478], "pyfloat": 25, "pyfloat_as_doubl": 25, "pyfloat_getinfo": [25, 56, 465], "structseq": [25, 466], "minimum": [25, 33, 34, 41, 56, 63, 75, 92, 100, 102, 108, 112, 118, 122, 123, 130, 138, 151, 157, 173, 174, 183, 194, 254, 258, 272, 290, 300, 325, 331, 338, 340, 341, 342, 349, 359, 362, 369, 373, 380, 381, 383, 385, 386, 437, 443, 453, 461, 462, 465, 469, 472, 473, 474, 476, 477], "thin": [25, 58, 67, 223, 244, 272, 284, 330, 365, 366, 453, 470], "pyfloat_getmax": [25, 56, 465], "dbl_max": [25, 349], "pyfloat_getmin": [25, 56, 465], "dbl_min": [25, 349], "routin": [25, 32, 40, 62, 67, 71, 72, 74, 85, 92, 105, 106, 137, 138, 170, 174, 181, 192, 212, 234, 247, 251, 255, 263, 278, 290, 305, 338, 363, 388, 401, 404, 462, 463, 470, 477], "suffix": [25, 63, 67, 70, 79, 86, 100, 109, 173, 197, 242, 245, 247, 256, 264, 265, 266, 273, 290, 293, 316, 327, 332, 341, 357, 392, 419, 427, 428, 446, 447, 453, 458, 459, 461, 470, 472, 473, 478], "ieee": [25, 151, 183, 259, 272, 291, 334, 344, 359, 427, 441, 453, 463, 465, 468, 470, 472, 476, 477], "754": [25, 151, 183, 259, 272, 344, 359, 427, 441, 453, 463, 465, 468, 470, 472, 476, 477], "binary16": [25, 344], "half": [25, 91, 100, 130, 172, 174, 180, 218, 223, 272, 292, 315, 325, 341, 344, 432, 441, 466, 469, 471, 476], "binary32": [25, 344], "binary64": [25, 344, 441], "inf": [25, 118, 151, 183, 222, 259, 272, 341, 342, 349, 465, 466, 470, 472, 475, 476], "nan": [25, 67, 84, 118, 151, 183, 222, 272, 282, 340, 341, 342, 349, 427, 439, 453, 463, 465, 466, 469, 470, 472, 473, 475, 476], "thing": [25, 32, 34, 62, 67, 71, 72, 74, 75, 76, 77, 82, 83, 84, 85, 91, 93, 94, 97, 99, 100, 102, 104, 106, 107, 117, 121, 130, 154, 156, 164, 166, 173, 178, 190, 197, 203, 208, 212, 220, 222, 224, 241, 247, 255, 264, 265, 272, 280, 289, 296, 316, 331, 338, 343, 349, 355, 362, 364, 366, 371, 373, 381, 383, 384, 385, 386, 387, 390, 392, 396, 397, 400, 427, 428, 431, 436, 437, 438, 439, 441, 446, 447, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 471, 473, 474, 478], "larger": [25, 34, 41, 48, 55, 67, 75, 84, 91, 92, 114, 130, 148, 151, 173, 174, 180, 181, 183, 212, 222, 233, 255, 256, 272, 275, 281, 290, 303, 315, 316, 319, 337, 338, 340, 341, 342, 359, 362, 364, 419, 421, 425, 427, 432, 436, 438, 439, 440, 441, 448, 451, 458, 459, 461, 462, 464, 466, 467, 470, 471, 472, 475, 476, 477, 478, 479], "smaller": [25, 41, 63, 91, 92, 103, 104, 130, 173, 180, 183, 187, 188, 223, 233, 256, 267, 272, 290, 296, 305, 313, 315, 340, 342, 344, 352, 366, 373, 379, 381, 391, 408, 421, 425, 427, 432, 439, 441, 447, 452, 460, 462, 463, 464, 465, 466, 468, 470, 472, 473, 474, 475, 476, 478], "partli": [25, 232, 256, 472, 476, 477], "accident": [25, 32, 77, 100, 102, 183, 187, 190, 210, 383, 433, 440, 447, 460, 462, 465, 475], "ala": [25, 85], "le": [25, 94, 106, 155, 197, 288, 460, 468, 473], "expon": [25, 88, 183, 222, 272, 315, 341, 342, 344, 349, 375, 432, 463, 465, 473, 478], "py_big_endian": 25, "ok": [25, 72, 79, 107, 174, 186, 190, 220, 238, 239, 240, 242, 245, 286, 289, 332, 338, 370, 372, 383, 385, 404, 437, 438, 463, 470, 471, 472], "infin": [25, 103, 151, 183, 222, 259, 272, 315, 341, 342, 349, 463, 465, 472], "pyfloat_pack2": [25, 470], "pyfloat_pack4": [25, 470], "pyfloat_pack8": [25, 470], "refus": [25, 34, 104, 209, 210, 269, 285, 327, 332, 334, 338, 355, 419], "pyfloat_unpack2": [25, 470], "pyfloat_unpack4": [25, 470], "pyfloat_unpack8": [25, 470], "pyeval_getfram": [26, 32, 52, 56], "pythreadstate_getfram": [26, 32, 52, 56, 470, 479], "reflect": [26, 31, 51, 64, 67, 84, 86, 88, 96, 100, 114, 117, 119, 157, 165, 172, 174, 180, 190, 207, 212, 222, 223, 244, 247, 252, 281, 289, 290, 305, 317, 334, 337, 338, 341, 344, 349, 366, 381, 382, 383, 398, 402, 408, 418, 424, 425, 426, 452, 465, 470, 471, 472, 473, 475, 478, 479], "pyframe_typ": [26, 470], "frametyp": [26, 382], "frameobject": [26, 469, 470], "pyframe_check": [26, 470], "pyframe_getback": [26, 470, 479], "pyframe_getbuiltin": [26, 470], "f_builtin": [26, 252, 425, 470], "pyframe_getcod": [26, 56, 470, 479], "pyframe_getgener": [26, 470], "pyframe_getglob": [26, 470], "f_global": [26, 252, 425, 470], "pyframe_getlasti": [26, 470], "f_lasti": [26, 188, 252, 425, 462, 469, 470], "pyframe_getvar": [26, 471], "pyframe_getvarstr": [26, 471], "pyframe_getloc": [26, 470], "f_local": [26, 252, 382, 425, 470], "523": [26, 32, 67, 462, 470, 471, 479], "_pyinterpreterfram": [26, 32, 470], "pyunstable_interpreterframe_getcod": 26, "pyunstable_interpreterframe_getlasti": 26, "pyunstable_interpreterframe_getlin": 26, "pyfunctionobject": [27, 471], "pyfunction_typ": 27, "functiontyp": [27, 119, 382, 469], "pyfunction_check": 27, "pyfunction_new": 27, "annot": [27, 67, 77, 84, 86, 95, 110, 119, 178, 184, 188, 223, 245, 251, 252, 263, 297, 348, 359, 377, 399, 404, 423, 424, 425, 427, 428, 442, 467, 469, 470, 471, 472, 473, 475, 478, 479], "closur": [27, 57, 65, 75, 123, 166, 167, 188, 222, 247, 252, 289, 341, 357, 425, 470, 473, 476], "co_qualnam": [27, 252, 425], "pyfunction_newwithqualnam": 27, "pyfunction_getcod": 27, "pyfunction_getglob": 27, "pyfunction_getmodul": 27, "pyfunction_getdefault": 27, "pyfunction_setdefault": 27, "pyfunction_setvectorcal": [27, 471], "func": [27, 32, 33, 34, 43, 52, 58, 62, 65, 77, 84, 86, 87, 92, 94, 98, 117, 119, 123, 136, 137, 141, 157, 173, 174, 209, 223, 252, 258, 263, 264, 280, 289, 305, 311, 329, 337, 341, 349, 350, 359, 362, 364, 366, 377, 383, 385, 399, 417, 424, 426, 440, 463, 465, 467, 472, 473, 476, 478], "preserv": [27, 32, 34, 41, 67, 72, 79, 83, 84, 94, 100, 104, 105, 109, 117, 157, 163, 164, 172, 180, 183, 187, 190, 193, 198, 200, 202, 205, 210, 222, 228, 237, 238, 252, 258, 259, 265, 266, 289, 290, 294, 296, 297, 328, 329, 337, 341, 355, 359, 365, 376, 382, 383, 385, 386, 399, 408, 410, 421, 424, 425, 427, 432, 437, 441, 458, 459, 460, 461, 462, 464, 465, 466, 470, 472, 473, 474, 475, 477, 478, 479], "unalt": [27, 439], "pyfunction_getclosur": 27, "pyfunction_setclosur": 27, "pyfunction_getannot": 27, "pyfunction_setannot": 27, "pyfunction_addwatch": 27, "pyfunction_watchcallback": 27, "pyfunction_clearwatch": 27, "pyfunction_watchev": 27, "pyfunction_event_cr": 27, "pyfunction_event_destroi": 27, "pyfunction_event_modify_cod": 27, "pyfunction_event_modify_default": 27, "pyfunction_event_modify_kwdefault": 27, "optim": [27, 33, 34, 41, 57, 62, 65, 67, 75, 84, 103, 119, 125, 126, 130, 136, 138, 155, 157, 160, 174, 188, 208, 222, 224, 232, 234, 240, 247, 252, 262, 290, 291, 296, 297, 305, 308, 315, 334, 337, 348, 349, 359, 362, 363, 419, 424, 425, 433, 447, 448, 453, 458, 459, 461, 481], "emit": [27, 32, 33, 44, 57, 75, 86, 99, 100, 112, 122, 123, 126, 129, 132, 136, 165, 174, 180, 185, 188, 210, 224, 242, 255, 258, 264, 266, 290, 296, 337, 345, 349, 359, 373, 378, 383, 385, 397, 408, 410, 414, 425, 427, 433, 448, 452, 462, 465, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479], "decis": [27, 86, 100, 102, 104, 110, 154, 252, 349, 373, 424, 433, 447, 459, 463, 464, 466, 472, 473], "circular": [28, 32, 34, 72, 75, 77, 84, 259, 381, 387, 425, 460, 475, 477], "atom": [28, 67, 83, 224, 280, 290, 313, 316, 334, 341, 362, 363, 428, 430, 466, 467, 470, 473], "tp_flag": [28, 60, 62, 74, 75, 98, 188, 465, 479], "py_tpflags_have_gc": [28, 60, 62, 75, 98, 461, 470], "tp_travers": [28, 60, 62, 67, 74, 75, 224, 470, 479], "tp_clear": [28, 44, 62, 74, 75, 98], "conform": [28, 56, 62, 67, 93, 99, 123, 143, 148, 164, 180, 183, 198, 200, 205, 206, 208, 222, 239, 242, 244, 247, 249, 253, 263, 264, 270, 293, 296, 311, 349, 383, 391, 408, 410, 416, 422, 425, 453, 463, 467, 468, 469, 473, 474, 476, 477, 478, 479], "pyobject_gc_new": [28, 62, 98, 461, 478], "pyobject_gc_newvar": [28, 62, 98, 461, 478], "pyobject_gc_track": [28, 56, 461], "pyobject_gc_untrack": [28, 56, 62, 74, 75, 98, 461, 470], "pyobject_gc_del": [28, 56, 62, 98, 461, 478], "pytype_readi": [28, 44, 56, 60, 62, 74, 75, 98, 470], "indirectli": [28, 57, 60, 63, 84, 92, 102, 168, 173, 210, 247, 290, 311, 349, 399, 425, 426, 427, 429, 439, 440, 467, 474, 477, 478], "pytype_fromspecwithbas": [28, 56, 60, 62, 469, 471], "pytype_fromspec": [28, 44, 56, 57, 60, 62, 75, 98, 471, 478, 479], "popul": [28, 34, 44, 67, 99, 100, 111, 117, 119, 180, 188, 204, 233, 247, 264, 281, 296, 315, 321, 340, 341, 382, 397, 404, 408, 410, 425, 429, 458, 462, 469, 470, 476], "child": [28, 32, 58, 84, 87, 99, 100, 117, 119, 127, 128, 129, 130, 134, 157, 209, 210, 224, 245, 247, 250, 275, 280, 290, 293, 306, 311, 319, 325, 330, 334, 335, 345, 357, 366, 373, 383, 386, 387, 407, 408, 410, 419, 425, 459, 463, 464, 465, 466, 471, 472, 473, 474, 476, 477, 478, 479], "analog": [28, 37, 63, 74, 84, 100, 183, 252, 264, 265, 272, 280, 296, 361, 381, 425, 427, 445, 461, 463, 464, 466, 472, 478], "pyunstable_object_gc_newwithextradata": 28, "extra_s": [28, 449], "reserv": [28, 34, 48, 60, 67, 68, 86, 93, 104, 252, 256, 271, 293, 296, 311, 315, 316, 319, 330, 336, 341, 362, 395, 402, 407, 416, 419, 423, 425, 433, 440, 452, 460, 465, 467, 472, 477, 478], "decid": [28, 33, 34, 75, 77, 79, 84, 88, 94, 99, 102, 104, 110, 129, 136, 141, 151, 154, 166, 180, 190, 224, 240, 266, 334, 335, 349, 362, 383, 425, 429, 433, 447, 450, 464, 466, 469, 471], "pyobject_gc_res": 28, "becom": [28, 32, 33, 34, 62, 63, 65, 72, 77, 79, 83, 84, 85, 86, 91, 92, 93, 94, 96, 98, 100, 103, 104, 105, 106, 109, 110, 111, 123, 129, 130, 135, 136, 138, 155, 157, 172, 174, 190, 193, 199, 202, 208, 222, 229, 233, 244, 252, 255, 258, 280, 289, 290, 291, 294, 296, 305, 308, 315, 316, 325, 326, 328, 329, 330, 338, 341, 342, 345, 349, 355, 362, 366, 373, 381, 383, 386, 387, 392, 399, 419, 424, 425, 426, 427, 433, 438, 443, 447, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "pyobject_is_gc": [28, 62, 74, 479], "pyobject_gc_istrack": [28, 56, 479], "gc": [28, 44, 60, 62, 67, 72, 75, 77, 84, 86, 96, 98, 139, 251, 252, 312, 349, 359, 364, 379, 399, 408, 425, 449, 453, 459, 462, 464, 466, 471, 472], "is_track": [28, 224, 466], "pyobject_gc_isfin": [28, 56, 479], "is_fin": [28, 32, 224, 349, 447, 475, 478, 479], "_pyobject_gc_track": [28, 478], "_pyobject_gc_untrack": [28, 478], "visitproc": [28, 56, 62, 75, 98, 479], "visitor": [28, 119], "travers": [28, 30, 44, 51, 62, 75, 86, 94, 98, 109, 119, 160, 181, 193, 202, 210, 247, 249, 250, 264, 290, 299, 341, 373, 385, 386, 404, 409, 410, 419, 429, 433, 459, 461, 462, 464, 465, 466, 470, 471, 475, 478, 479], "traverseproc": [28, 44, 56, 62, 74, 75], "visit": [28, 62, 75, 85, 86, 94, 98, 119, 180, 224, 258, 290, 293, 310, 329, 339, 412, 458, 459, 461, 462, 465, 473, 479], "simplifi": [28, 32, 41, 65, 73, 77, 85, 86, 92, 94, 103, 107, 121, 125, 132, 155, 157, 166, 180, 194, 198, 213, 223, 247, 252, 280, 316, 334, 335, 340, 372, 373, 375, 383, 399, 407, 424, 432, 448, 449, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "py_visit": [28, 62, 75, 98, 479], "my_travers": [28, 98], "noddi": 28, "foo": [28, 77, 78, 84, 85, 86, 87, 88, 93, 99, 100, 101, 103, 107, 113, 117, 119, 148, 152, 164, 173, 190, 193, 197, 225, 240, 244, 247, 252, 259, 263, 264, 265, 269, 280, 285, 288, 289, 290, 291, 293, 294, 296, 299, 301, 305, 308, 316, 331, 337, 341, 355, 359, 382, 383, 385, 386, 387, 402, 404, 408, 409, 410, 419, 420, 424, 427, 429, 432, 433, 438, 459, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "inquiri": [28, 44, 56, 62, 74, 75, 255, 385], "drop": [28, 62, 67, 75, 83, 84, 86, 92, 93, 99, 106, 110, 130, 131, 157, 190, 208, 209, 222, 247, 251, 258, 266, 280, 302, 313, 318, 322, 338, 341, 345, 349, 361, 365, 366, 373, 385, 391, 459, 460, 461, 463, 464, 465, 467, 472, 474, 475], "pygc_collect": [28, 56, 479], "uncondition": [28, 112, 244, 280, 281, 285, 290, 293, 331, 385, 425, 435, 440, 452, 466, 467, 472, 473, 474, 475, 477, 479], "unreach": [28, 34, 209, 224, 383, 425, 477, 479], "pygc_en": [28, 56, 469], "pygc_dis": [28, 56, 469], "pygc_isen": [28, 56, 469], "isen": [28, 224], "pyunstable_gc_visitobject": 28, "gcvisitobjects_t": 28, "live": [28, 34, 62, 66, 67, 72, 77, 83, 100, 108, 148, 163, 165, 180, 204, 220, 224, 244, 245, 247, 248, 250, 251, 280, 286, 290, 296, 302, 312, 337, 338, 355, 391, 397, 399, 407, 422, 425, 437, 443, 445, 458, 459, 460, 461, 467, 472], "capabl": [28, 63, 75, 86, 91, 92, 94, 100, 103, 107, 108, 119, 123, 128, 157, 166, 174, 183, 190, 209, 231, 233, 242, 245, 247, 248, 250, 252, 254, 255, 256, 269, 279, 280, 285, 289, 302, 303, 304, 317, 372, 376, 387, 391, 410, 412, 419, 427, 448, 452, 461, 462, 463, 464, 472, 473, 474, 475], "behaviour": [28, 30, 32, 34, 48, 62, 67, 83, 84, 86, 88, 94, 99, 100, 103, 123, 163, 166, 186, 210, 212, 214, 234, 240, 252, 255, 264, 265, 266, 280, 289, 290, 293, 296, 308, 315, 316, 317, 325, 328, 330, 334, 335, 337, 340, 341, 345, 349, 361, 381, 386, 387, 391, 392, 397, 410, 413, 416, 425, 427, 429, 443, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 473, 474, 476, 477], "pygen_new": 29, "pygen_newwithqualnam": 29, "pygenobject": 29, "pygen_typ": 29, "pygen_check": 29, "pygen_checkexact": 29, "pyimport_importmodul": [30, 56, 72, 78, 460, 465, 467, 469, 471], "pyimport_import": [30, 56, 71, 465], "pyimport_importmodulenoblock": [30, 56, 465, 467, 471, 473], "switch": [30, 32, 34, 60, 63, 67, 74, 83, 98, 104, 106, 107, 108, 109, 125, 130, 134, 155, 190, 207, 222, 227, 233, 240, 242, 244, 289, 302, 316, 319, 321, 337, 341, 342, 349, 355, 381, 386, 409, 429, 438, 447, 452, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 477, 479], "pyimport_importmoduleex": [30, 473], "fromlist": [30, 118, 188, 222, 247], "__import__": [30, 188, 222, 247, 265, 296, 425, 429, 447, 465, 468, 473, 476, 479], "submodul": [30, 62, 67, 86, 113, 155, 181, 190, 222, 235, 247, 299, 321, 338, 377, 383, 406, 419, 433, 447, 452, 464, 467, 468, 469, 474, 477], "incomplet": [30, 60, 63, 67, 77, 115, 143, 154, 155, 177, 180, 222, 237, 244, 258, 265, 311, 325, 355, 419, 421, 423, 449, 462, 463, 466, 467, 471, 473, 474], "pyimport_importmodulelevelobject": [30, 56], "pyimport_importmodulelevel": [30, 56, 473], "higher": [30, 32, 55, 67, 83, 94, 96, 99, 100, 104, 112, 123, 137, 143, 163, 166, 174, 183, 188, 199, 201, 220, 221, 222, 227, 239, 251, 255, 258, 264, 265, 266, 267, 276, 278, 279, 280, 285, 290, 296, 302, 306, 322, 329, 334, 337, 338, 341, 349, 355, 356, 362, 364, 379, 383, 385, 392, 397, 410, 421, 446, 448, 460, 461, 464, 465, 469, 470, 472, 473, 474, 477], "absolut": [30, 32, 33, 34, 46, 60, 62, 67, 71, 75, 77, 83, 85, 99, 102, 105, 110, 119, 123, 136, 138, 141, 147, 148, 150, 151, 152, 183, 188, 190, 210, 222, 227, 228, 239, 247, 248, 254, 255, 265, 266, 267, 272, 275, 288, 289, 290, 291, 293, 300, 321, 328, 329, 332, 337, 341, 342, 349, 351, 355, 357, 363, 366, 369, 379, 381, 383, 391, 396, 402, 412, 419, 421, 422, 427, 429, 433, 437, 443, 447, 452, 453, 458, 459, 463, 465, 466, 467, 470, 471, 472, 473, 474, 475, 477, 479, 481], "__builtins__": [30, 145, 222, 252, 426, 447, 467, 469], "instal": [30, 32, 33, 34, 41, 56, 67, 71, 75, 78, 79, 80, 81, 83, 84, 85, 86, 88, 91, 96, 100, 102, 107, 109, 111, 129, 132, 141, 160, 171, 181, 185, 189, 209, 211, 227, 232, 244, 247, 248, 251, 254, 258, 264, 266, 273, 274, 308, 312, 317, 330, 331, 337, 338, 341, 345, 347, 349, 351, 358, 366, 372, 379, 381, 385, 392, 396, 397, 402, 404, 418, 423, 429, 435, 445, 447, 450, 451, 452, 455, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481], "environ": [30, 32, 33, 34, 41, 62, 65, 67, 79, 80, 83, 84, 85, 86, 92, 99, 100, 101, 102, 106, 107, 108, 115, 122, 123, 148, 155, 157, 160, 173, 174, 179, 183, 185, 189, 207, 211, 219, 222, 225, 226, 227, 232, 234, 244, 248, 251, 253, 255, 263, 265, 277, 289, 291, 292, 294, 296, 303, 305, 306, 308, 310, 312, 321, 322, 324, 329, 334, 335, 338, 341, 345, 349, 352, 355, 357, 359, 363, 366, 377, 379, 385, 386, 392, 397, 400, 402, 407, 417, 425, 426, 429, 434, 435, 438, 442, 444, 447, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 474, 477, 478, 479, 481], "pyimport_reloadmodul": [30, 56], "m": [30, 33, 41, 53, 57, 62, 67, 72, 75, 84, 91, 92, 94, 96, 99, 100, 101, 102, 103, 104, 106, 108, 111, 119, 120, 147, 151, 155, 157, 160, 164, 173, 174, 180, 187, 188, 190, 207, 222, 232, 234, 242, 244, 245, 248, 251, 258, 259, 264, 265, 266, 272, 280, 285, 289, 290, 294, 296, 297, 301, 302, 305, 310, 315, 316, 318, 321, 329, 331, 337, 338, 340, 341, 342, 345, 349, 351, 352, 355, 359, 363, 364, 366, 372, 375, 377, 381, 383, 385, 386, 387, 392, 395, 396, 400, 416, 417, 418, 419, 423, 425, 426, 427, 429, 433, 437, 438, 439, 445, 448, 449, 450, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "reload": [30, 84, 93, 109, 240, 244, 247, 349, 359, 379, 429, 447, 462, 467, 471, 474, 477], "pyimport_addmoduleobject": [30, 56], "pyimport_addmodul": [30, 56, 72], "pyimport_execcodemodul": [30, 56], "danger": [30, 34, 58, 60, 84, 280, 289, 290, 293, 338, 355, 386, 431, 460, 463, 464, 470, 471], "unknown": [30, 32, 63, 67, 87, 93, 103, 119, 136, 138, 187, 190, 193, 196, 198, 199, 205, 208, 222, 232, 242, 273, 285, 289, 290, 301, 304, 316, 333, 339, 340, 349, 355, 362, 363, 379, 392, 395, 413, 438, 447, 453, 461, 462, 466, 470, 472, 476, 477], "probabl": [30, 32, 34, 55, 67, 72, 74, 77, 78, 79, 80, 84, 88, 91, 97, 100, 102, 103, 104, 140, 155, 156, 173, 180, 190, 197, 210, 227, 233, 280, 287, 290, 294, 297, 300, 305, 315, 332, 334, 335, 337, 338, 349, 352, 364, 381, 386, 392, 395, 402, 403, 404, 412, 431, 437, 440, 451, 453, 459, 460, 461, 462, 464, 465, 467, 469, 470, 472, 473], "damag": [30, 296, 355, 383, 423], "author": [30, 72, 76, 86, 87, 88, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 123, 155, 157, 190, 210, 232, 239, 248, 249, 266, 286, 290, 304, 337, 338, 385, 392, 404, 416, 423, 447, 450, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475], "__spec__": [30, 67, 247, 249, 321, 382, 447, 469, 471, 474, 476, 477], "__loader__": [30, 44, 222, 247, 262, 321, 382, 429, 447, 469, 473, 474, 477], "spec": [30, 44, 60, 67, 86, 105, 208, 233, 236, 241, 247, 252, 259, 321, 338, 342, 346, 349, 373, 386, 387, 391, 416, 420, 428, 462, 471, 474, 475, 476, 477, 478, 479], "loader": [30, 67, 86, 166, 173, 190, 247, 248, 249, 250, 262, 299, 359, 379, 382, 385, 410, 418, 420, 462, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "sourcefileload": [30, 247, 471, 473, 476], "__file__": [30, 44, 88, 100, 111, 185, 190, 222, 232, 247, 252, 262, 299, 320, 321, 359, 379, 385, 397, 420, 425, 429, 453, 462, 474, 476, 477, 479], "co_filenam": [30, 252, 378, 425, 466], "applic": [30, 31, 32, 33, 34, 62, 63, 67, 72, 74, 76, 77, 79, 82, 84, 86, 88, 94, 98, 99, 101, 102, 103, 104, 106, 107, 108, 111, 117, 119, 122, 123, 130, 134, 136, 137, 140, 142, 145, 148, 154, 163, 164, 166, 172, 174, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 205, 210, 211, 222, 223, 224, 232, 233, 239, 243, 251, 254, 255, 259, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 288, 289, 290, 291, 293, 296, 302, 305, 311, 316, 322, 323, 328, 329, 330, 334, 337, 338, 340, 341, 343, 345, 351, 355, 357, 359, 361, 362, 363, 365, 366, 368, 369, 370, 372, 373, 379, 381, 384, 385, 391, 392, 396, 397, 399, 402, 404, 407, 408, 410, 411, 412, 413, 414, 419, 420, 421, 422, 423, 424, 427, 431, 433, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 452, 455, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481], "__cached__": [30, 222, 247, 321, 429, 469, 471, 472, 474], "pyimport_execcodemoduleex": [30, 56], "pyimport_execcodemodulewithpathnam": [30, 56], "modulespec": [30, 44, 67, 86, 247, 299, 321, 349, 382, 429], "pathnam": [30, 67, 77, 83, 139, 148, 173, 216, 217, 220, 222, 251, 264, 266, 276, 278, 290, 293, 303, 328, 339, 349, 355, 357, 366, 372, 392, 394, 419, 420, 425, 429, 452, 470, 472, 475], "pyimport_execcodemoduleobject": [30, 56], "cpathnam": 30, "Of": [30, 67, 72, 75, 77, 85, 93, 100, 104, 119, 173, 190, 197, 199, 209, 254, 265, 280, 289, 305, 328, 335, 366, 387, 396, 407, 408, 437, 446, 471, 481], "figur": [30, 72, 75, 79, 82, 88, 91, 93, 94, 103, 106, 117, 183, 190, 289, 305, 334, 355, 459, 460, 461, 462, 463, 464, 465, 466, 470, 473], "imp": [30, 67, 467, 469, 470, 472, 473, 474, 476], "source_from_cach": [30, 247, 471, 472, 474, 476], "pyimport_getmagicnumb": [30, 56, 473], "magic": [30, 67, 84, 86, 88, 112, 164, 173, 184, 190, 197, 227, 247, 305, 338, 346, 359, 362, 363, 383, 387, 419, 422, 423, 446, 459, 460, 462, 470, 474, 475, 476, 477], "pyc": [30, 32, 33, 67, 85, 86, 160, 247, 271, 278, 296, 308, 329, 341, 349, 359, 379, 419, 420, 425, 429, 447, 452, 453, 458, 460, 462, 463, 465, 466, 470, 471, 474, 475, 479, 481], "four": [30, 57, 63, 77, 79, 87, 88, 91, 92, 93, 103, 106, 117, 129, 155, 174, 187, 188, 204, 208, 220, 236, 239, 244, 252, 255, 256, 264, 265, 268, 275, 278, 289, 311, 315, 331, 334, 335, 337, 341, 342, 344, 346, 348, 366, 373, 381, 386, 432, 438, 449, 458, 465, 468, 472, 479], "pyimport_getmagictag": [30, 56], "tag": [30, 56, 60, 62, 67, 74, 96, 103, 119, 148, 187, 237, 245, 247, 266, 275, 290, 296, 311, 343, 349, 353, 365, 392, 407, 410, 414, 416, 447, 458, 459, 464, 466, 470, 474, 475, 478, 481], "3147": [30, 67, 84, 160, 247, 308, 321, 359, 429, 447, 473, 481], "keep": [30, 32, 34, 38, 62, 67, 72, 77, 79, 84, 86, 88, 93, 98, 100, 102, 103, 106, 117, 119, 125, 136, 141, 144, 148, 155, 157, 166, 168, 173, 174, 176, 178, 183, 188, 190, 193, 208, 211, 223, 224, 231, 233, 240, 244, 249, 252, 255, 258, 268, 275, 289, 290, 293, 296, 302, 304, 316, 335, 341, 345, 349, 359, 366, 385, 386, 392, 399, 404, 407, 412, 424, 425, 429, 433, 437, 438, 441, 447, 448, 449, 450, 460, 462, 463, 464, 465, 466, 472, 474, 477], "mind": [30, 84, 91, 98, 100, 103, 117, 119, 144, 173, 183, 197, 249, 266, 280, 289, 340, 383, 392, 410, 429, 441, 461, 463, 472], "cache_tag": [30, 247, 349, 471, 473], "authorit": [30, 107, 421, 471], "pyimport_getmoduledict": [30, 56], "administr": [30, 32, 58, 79, 82, 99, 148, 152, 245, 284, 285, 290, 331, 334, 363, 404, 426, 435, 445, 458, 463, 473, 478, 479], "pyimport_getmodul": [30, 56, 477], "pyimport_getimport": [30, 56], "finder": [30, 67, 86, 190, 247, 248, 267, 276, 299, 349, 430, 456, 458, 463, 465, 469, 471, 473, 474], "pkg": [30, 247, 299, 418, 433, 452, 453, 457, 459, 460, 464, 466, 469, 470, 471, 478], "__path__": [30, 67, 86, 247, 299, 309, 349, 447, 474, 476, 477], "fetch": [30, 67, 83, 92, 94, 95, 111, 131, 164, 172, 205, 245, 254, 258, 278, 280, 281, 288, 290, 296, 304, 312, 313, 330, 334, 337, 338, 386, 387, 392, 393, 411, 416, 449, 463, 470, 472, 473], "path_importer_cach": [30, 247, 299, 349, 429, 447, 462, 470, 471, 473, 474, 475, 477], "path_hook": [30, 86, 139, 247, 299, 349, 429, 433, 447, 462, 473, 474], "pyimport_importfrozenmoduleobject": [30, 56], "misnom": 30, "pyimport_importfrozenmodul": [30, 56], "_frozen": [30, 173, 470], "freez": [30, 84, 163, 223, 224, 244, 285, 450, 477], "tool": [30, 32, 34, 50, 56, 67, 71, 77, 78, 79, 80, 82, 85, 86, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 115, 119, 134, 144, 152, 153, 157, 161, 166, 173, 190, 191, 201, 216, 220, 222, 223, 227, 228, 248, 251, 252, 253, 258, 259, 261, 288, 296, 304, 312, 315, 318, 328, 330, 340, 349, 365, 375, 377, 379, 381, 383, 385, 396, 410, 418, 419, 425, 433, 437, 441, 442, 448, 450, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 467, 468, 470, 472, 473, 474, 475, 476, 479, 481], "is_packag": [30, 247, 420, 470], "pyimport_frozenmodul": [30, 33, 173], "record": [30, 60, 67, 74, 77, 91, 92, 93, 94, 99, 100, 101, 105, 106, 110, 119, 144, 152, 157, 160, 172, 173, 174, 175, 181, 182, 183, 194, 200, 209, 233, 248, 252, 256, 264, 266, 268, 276, 288, 289, 290, 292, 296, 305, 306, 337, 339, 341, 344, 359, 381, 382, 383, 385, 386, 387, 397, 419, 429, 437, 442, 459, 462, 463, 464, 465, 466, 472, 473, 474, 475, 478], "plai": [30, 34, 67, 75, 86, 88, 104, 173, 183, 251, 292, 315, 338, 381, 385, 401, 425, 436, 437, 467], "trick": [30, 77, 84, 173, 222, 294, 337, 349, 383, 387, 437, 461], "collect": [30, 31, 41, 44, 49, 51, 62, 63, 66, 67, 72, 73, 74, 83, 84, 86, 91, 94, 95, 96, 99, 100, 102, 103, 104, 109, 111, 113, 117, 119, 122, 130, 136, 144, 148, 155, 163, 164, 166, 167, 168, 173, 176, 178, 179, 181, 184, 190, 191, 210, 211, 222, 223, 224, 238, 239, 240, 248, 251, 252, 254, 258, 261, 280, 290, 296, 302, 305, 311, 313, 327, 329, 330, 334, 335, 337, 338, 340, 341, 344, 349, 356, 357, 359, 364, 373, 379, 381, 382, 385, 389, 392, 398, 399, 402, 408, 410, 415, 424, 425, 427, 433, 436, 438, 439, 440, 447, 449, 450, 451, 453, 458, 461, 462, 463, 464, 465, 467, 468, 470, 471, 481], "pyimport_appendinittab": [30, 32, 33, 44, 56, 71, 72], "initfunc": 30, "pyimport_extendinittab": [30, 32, 33], "_inittab": 30, "emb": [30, 31, 32, 33, 34, 65, 67, 71, 73, 84, 160, 190, 243, 247, 364, 366, 406, 410, 461, 466, 477, 478], "conjunct": [30, 165, 187, 189, 190, 222, 252, 265, 328, 334, 338, 376, 383, 428, 432, 469, 474], "newtab": 30, "sentinel": [30, 36, 57, 67, 72, 74, 75, 84, 100, 178, 184, 222, 258, 266, 280, 387, 461, 473, 477], "fault": [30, 67, 99, 173, 181, 182, 253, 289, 294, 319, 330, 363, 378, 464, 466, 473], "insuffici": [30, 158, 183, 190, 209, 249, 280, 290, 386, 476], "companion": [31, 462], "principl": [31, 34, 72, 84, 86, 183, 385, 386, 404, 439, 456, 473], "introduct": [31, 67, 73, 75, 88, 91, 95, 108, 110, 111, 117, 130, 161, 182, 190, 219, 251, 256, 277, 315, 334, 338, 364, 383, 387, 430, 442, 445, 456, 463, 474, 476, 481], "consider": [31, 34, 67, 72, 77, 84, 98, 99, 115, 123, 161, 174, 178, 190, 210, 220, 239, 245, 251, 253, 259, 268, 282, 285, 302, 312, 332, 337, 392, 407, 430, 436, 459, 462, 463, 464, 466, 469, 471, 473, 477], "high": [31, 37, 51, 59, 63, 67, 72, 73, 77, 78, 79, 82, 83, 85, 99, 100, 104, 107, 115, 123, 126, 127, 130, 132, 133, 134, 136, 144, 146, 161, 163, 174, 180, 183, 188, 191, 198, 216, 223, 228, 238, 251, 256, 257, 258, 263, 267, 280, 286, 290, 291, 292, 296, 305, 315, 325, 330, 334, 338, 340, 349, 350, 353, 355, 357, 363, 396, 400, 430, 433, 436, 441, 442, 448, 449, 461, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 477, 479], "queri": [31, 49, 67, 83, 94, 100, 103, 106, 115, 130, 133, 148, 155, 166, 202, 216, 227, 242, 247, 248, 252, 278, 293, 295, 300, 302, 325, 355, 359, 366, 372, 373, 383, 391, 392, 402, 404, 407, 416, 429, 452, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "signal": [31, 32, 33, 48, 58, 62, 67, 91, 94, 98, 100, 103, 112, 120, 122, 127, 129, 130, 132, 134, 137, 138, 139, 163, 173, 174, 182, 184, 185, 188, 190, 210, 222, 239, 251, 254, 255, 257, 258, 264, 265, 272, 280, 287, 289, 290, 294, 296, 306, 316, 319, 325, 326, 328, 334, 337, 338, 342, 345, 349, 359, 362, 363, 368, 378, 383, 392, 410, 412, 416, 427, 429, 440, 452, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 476, 478], "categori": [31, 67, 83, 86, 99, 103, 106, 130, 210, 222, 253, 255, 263, 266, 288, 312, 316, 337, 341, 359, 384, 391, 432, 452, 459, 460, 464, 465, 467, 472, 477], "marshal": [31, 64, 67, 84, 139, 155, 251, 259, 266, 295, 376, 416, 462, 463, 466, 475], "pars": [31, 33, 34, 58, 63, 64, 65, 67, 72, 77, 78, 79, 83, 84, 86, 88, 97, 100, 103, 107, 109, 111, 115, 119, 130, 133, 148, 152, 154, 156, 164, 172, 180, 190, 191, 193, 196, 197, 198, 200, 202, 203, 205, 206, 214, 219, 222, 225, 227, 235, 237, 239, 240, 241, 242, 245, 247, 251, 253, 256, 259, 261, 265, 266, 268, 270, 273, 282, 283, 290, 305, 337, 341, 342, 345, 352, 363, 375, 379, 389, 392, 393, 396, 397, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 427, 428, 432, 433, 434, 440, 443, 447, 448, 451, 452, 459, 460, 461, 462, 463, 464, 465, 470, 471, 473, 474, 475, 476, 478, 481], "perf": [31, 33, 64, 67, 95, 349, 452, 471], "abstract": [31, 37, 54, 62, 67, 73, 75, 77, 78, 83, 84, 86, 90, 105, 123, 127, 129, 130, 163, 166, 173, 179, 180, 183, 205, 210, 216, 218, 223, 241, 248, 251, 252, 255, 261, 266, 277, 287, 288, 290, 298, 312, 326, 334, 338, 341, 349, 357, 383, 392, 404, 422, 425, 427, 437, 438, 462, 464, 466, 467, 469, 472, 473, 475, 476, 477, 479, 481], "fundament": [31, 32, 34, 62, 67, 77, 79, 86, 104, 115, 191, 256, 280, 289, 296, 304, 305, 315, 337, 382, 399, 429, 458, 459, 465, 471, 476], "configur": [31, 34, 41, 58, 62, 63, 67, 71, 72, 84, 85, 86, 91, 94, 96, 98, 101, 103, 112, 115, 122, 123, 128, 129, 132, 133, 163, 167, 169, 173, 179, 183, 186, 208, 214, 219, 220, 232, 242, 244, 245, 247, 251, 254, 263, 264, 266, 268, 269, 289, 290, 302, 303, 304, 311, 312, 317, 320, 324, 328, 332, 334, 337, 338, 349, 351, 355, 358, 359, 362, 366, 369, 370, 371, 372, 373, 376, 385, 386, 387, 392, 396, 397, 402, 404, 408, 409, 410, 414, 416, 423, 444, 447, 449, 452, 455, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481], "sub": [31, 44, 49, 67, 94, 98, 99, 100, 103, 115, 119, 121, 130, 172, 173, 174, 175, 180, 187, 188, 191, 193, 198, 202, 204, 211, 228, 245, 249, 251, 258, 265, 268, 275, 288, 291, 305, 311, 315, 316, 327, 341, 349, 359, 372, 383, 385, 387, 402, 410, 427, 428, 439, 440, 446, 447, 448, 458, 459, 461, 465, 466, 468, 471, 472, 473, 474, 475, 476, 477], "asynchron": [31, 62, 67, 83, 86, 119, 121, 122, 123, 126, 127, 130, 132, 133, 134, 136, 158, 163, 166, 167, 184, 188, 210, 222, 251, 253, 257, 264, 280, 312, 334, 338, 345, 349, 382, 385, 386, 403, 424, 433, 466, 469, 470, 471, 472, 473, 474, 475, 477, 478], "notif": [31, 66, 67, 326, 397, 402, 412, 459, 466, 471, 478], "trace": [31, 33, 34, 41, 62, 67, 72, 96, 99, 101, 112, 141, 153, 154, 168, 173, 182, 188, 211, 223, 233, 238, 245, 251, 252, 254, 290, 294, 337, 349, 359, 362, 378, 381, 425, 433, 435, 437, 452, 453, 460, 461, 462, 466, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "advanc": [31, 67, 75, 77, 78, 79, 84, 86, 91, 100, 103, 104, 146, 164, 166, 172, 173, 174, 183, 184, 191, 208, 222, 231, 233, 252, 255, 258, 264, 265, 266, 267, 275, 289, 313, 334, 338, 342, 345, 349, 364, 377, 381, 387, 399, 408, 409, 419, 424, 425, 431, 436, 437, 444, 447, 448, 449, 458, 462, 467, 472, 478, 481], "pywidestringlist": [31, 67, 478], "pystatu": [31, 32, 67, 471, 478], "pypreconfig": [31, 32, 41, 58, 67, 471, 478], "preiniti": [31, 41, 58, 67, 263], "pyconfig": [31, 32, 34, 58, 65, 67, 86, 290, 349, 351, 352, 453, 466, 469, 470, 471, 478, 479], "isol": [31, 32, 44, 62, 65, 67, 77, 86, 94, 95, 108, 111, 119, 136, 190, 244, 324, 349, 351, 359, 385, 386, 396, 452, 458, 470, 471, 474, 476, 479], "py_runmain": [31, 67, 478], "py_getargcargv": [31, 67], "domain": [31, 67, 96, 99, 123, 142, 200, 205, 206, 209, 227, 232, 240, 241, 245, 254, 263, 265, 266, 280, 284, 332, 334, 335, 338, 343, 344, 349, 379, 391, 395, 436, 452, 462, 464, 471, 473, 474, 475, 476, 477], "custom": [31, 32, 33, 34, 58, 62, 67, 70, 72, 75, 78, 84, 86, 98, 107, 112, 113, 115, 116, 119, 123, 124, 126, 132, 136, 147, 152, 155, 157, 158, 161, 178, 180, 182, 186, 190, 191, 204, 205, 208, 210, 214, 222, 239, 242, 244, 247, 248, 251, 252, 253, 255, 259, 264, 266, 268, 277, 282, 289, 295, 315, 317, 320, 329, 330, 331, 338, 341, 349, 351, 355, 359, 360, 362, 366, 373, 383, 385, 386, 392, 396, 397, 399, 404, 407, 409, 410, 416, 422, 424, 427, 429, 433, 436, 437, 439, 442, 444, 449, 451, 453, 455, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479], "pymalloc": [31, 33, 67, 349, 452, 453, 460, 465, 466, 472, 474, 476, 478, 481], "tracemalloc": [31, 33, 67, 182, 185, 251, 359, 423, 452], "pyinitfrozenextens": 32, "pymem_setalloc": [32, 33, 41, 471], "pymem_setupdebughook": [32, 41, 185, 476], "pyobject_setarenaalloc": [32, 41], "py_setpath": [32, 56, 351, 458, 470, 478], "py_setprogramnam": [32, 33, 34, 56, 71, 72, 458, 470], "py_setpythonhom": [32, 33, 56, 470], "py_setstandardstreamencod": [32, 33, 470, 474], "pysys_addwarnopt": [32, 56, 58, 470, 477], "pysys_addxopt": [32, 56, 58, 470], "pysys_resetwarnopt": [32, 56, 58, 471], "py_isiniti": [32, 34, 56], "pymem_getalloc": [32, 41], "pyobject_getarenaalloc": [32, 41], "py_getbuildinfo": [32, 56, 464], "py_getcompil": [32, 56], "py_getcopyright": [32, 56], "py_getplatform": [32, 56], "py_getvers": [32, 56], "py_decodelocal": [32, 33, 56, 58, 63, 71, 72, 475, 477], "pymem_rawmalloc": [32, 33, 41, 65, 474], "pymem_rawrealloc": [32, 41, 65, 474], "pymem_rawcalloc": [32, 41, 475], "pymem_rawfre": [32, 41, 58, 71, 72], "py_encodelocal": [32, 56, 58, 63, 475, 477], "py_getpath": [32, 34, 56, 469, 471], "py_getprefix": [32, 34, 56, 469, 471], "py_getexecprefix": [32, 34, 56, 469, 471], "py_getprogramfullpath": [32, 34, 56, 469, 471, 478], "py_getpythonhom": [32, 56, 469, 471], "py_getprogramnam": [32, 56, 469, 471, 478], "pyeval_initthread": [32, 56, 472, 479], "By": [32, 33, 44, 56, 57, 67, 79, 84, 86, 92, 93, 97, 99, 100, 102, 103, 107, 109, 111, 112, 117, 122, 123, 132, 133, 147, 152, 163, 164, 166, 173, 174, 178, 183, 185, 187, 190, 205, 207, 208, 211, 222, 231, 232, 233, 239, 240, 241, 242, 244, 247, 248, 249, 252, 255, 258, 259, 264, 266, 268, 273, 278, 280, 281, 289, 290, 293, 294, 296, 304, 305, 310, 311, 314, 315, 316, 317, 327, 328, 329, 334, 337, 338, 341, 342, 344, 345, 349, 355, 357, 359, 361, 362, 364, 366, 370, 372, 373, 376, 379, 381, 383, 385, 386, 387, 391, 392, 395, 397, 404, 410, 413, 414, 418, 419, 422, 423, 425, 426, 427, 429, 432, 433, 436, 437, 438, 440, 445, 449, 450, 452, 453, 458, 459, 461, 465, 471, 472, 473, 475, 476, 477, 478, 479], "py_byteswarningflag": [32, 471, 477], "bb": [32, 94, 102, 157, 258, 264, 452, 477], "bytes_warn": [32, 33, 349, 471, 472], "py_debugflag": [32, 471], "parser_debug": [32, 33, 471], "parser": [32, 33, 67, 72, 77, 78, 88, 94, 100, 103, 106, 109, 115, 119, 154, 156, 157, 172, 187, 190, 191, 193, 196, 197, 198, 200, 202, 203, 205, 210, 214, 220, 222, 235, 251, 253, 259, 265, 270, 282, 294, 301, 306, 316, 328, 341, 347, 376, 392, 396, 406, 407, 408, 409, 410, 412, 414, 428, 432, 433, 434, 438, 440, 444, 446, 448, 452, 453, 459, 460, 462, 463, 464, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477], "expert": [32, 33, 289, 447, 452], "pythondebug": [32, 33, 452, 453], "py_dontwritebytecodeflag": [32, 471], "write_bytecod": [32, 33, 471], "try": [32, 33, 34, 41, 44, 48, 62, 67, 70, 72, 74, 75, 76, 77, 78, 79, 83, 85, 86, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 106, 107, 111, 112, 117, 119, 123, 130, 132, 135, 136, 137, 138, 143, 146, 148, 157, 163, 164, 165, 172, 173, 174, 180, 183, 187, 188, 190, 197, 209, 210, 220, 222, 223, 225, 227, 233, 242, 244, 247, 252, 255, 258, 259, 264, 266, 268, 276, 280, 283, 286, 288, 289, 290, 292, 293, 294, 296, 299, 302, 305, 311, 312, 316, 317, 320, 327, 328, 329, 330, 332, 334, 337, 338, 341, 345, 349, 355, 356, 358, 359, 362, 364, 366, 372, 378, 381, 383, 386, 387, 392, 396, 397, 399, 400, 404, 405, 410, 416, 417, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 440, 441, 443, 446, 452, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481], "pythondontwritebytecod": [32, 33, 84, 349, 452, 465], "py_frozenflag": [32, 471], "pathconfig_warn": [32, 33, 471], "_freeze_modul": 32, "frozenmain": 32, "py_hashrandomizationflag": [32, 471], "hash_se": [32, 33, 471], "use_hash_se": [32, 33, 471], "pythonhashse": [32, 33, 425, 452, 473], "secret": [32, 67, 130, 171, 232, 234, 251, 280, 289, 290, 302, 315, 324, 338, 423, 437, 452, 459], "seed": [32, 33, 77, 86, 290, 315, 338, 340, 349, 423, 452, 466, 472, 479], "py_ignoreenvironmentflag": [32, 471, 477], "use_environ": [32, 33, 34, 471, 479], "pythonpath": [32, 33, 34, 70, 85, 148, 349, 351, 359, 429, 447, 452, 456, 458, 474], "pythonhom": [32, 33, 34, 351, 359, 452, 458, 471, 476], "py_inspectflag": [32, 471], "script": [32, 33, 34, 65, 67, 71, 72, 74, 77, 78, 79, 80, 82, 86, 88, 96, 99, 100, 101, 107, 109, 111, 117, 119, 147, 160, 166, 185, 188, 190, 207, 210, 219, 225, 227, 237, 241, 242, 247, 248, 251, 277, 289, 294, 305, 306, 308, 310, 312, 321, 324, 327, 331, 337, 347, 349, 351, 354, 359, 366, 373, 375, 383, 385, 392, 395, 396, 400, 404, 417, 418, 426, 429, 431, 432, 433, 434, 436, 437, 440, 442, 445, 448, 449, 450, 451, 452, 455, 457, 459, 460, 461, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "stdin": [32, 33, 58, 65, 75, 84, 86, 93, 94, 98, 117, 119, 123, 127, 130, 134, 141, 148, 152, 154, 160, 173, 183, 187, 188, 190, 205, 211, 212, 215, 226, 231, 244, 245, 255, 256, 259, 280, 290, 293, 294, 306, 318, 325, 328, 341, 344, 345, 349, 355, 358, 359, 375, 384, 392, 404, 417, 424, 425, 427, 429, 433, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 453, 460, 461, 462, 463, 465, 466, 467, 469, 471, 473, 474, 475, 476, 477, 479], "pythoninspect": [32, 33, 452, 462], "py_interactiveflag": [32, 471], "py_isolatedflag": [32, 471], "neither": [32, 75, 94, 97, 103, 111, 126, 130, 140, 141, 155, 178, 183, 188, 190, 193, 202, 206, 222, 239, 259, 264, 267, 268, 272, 280, 283, 289, 290, 293, 296, 300, 315, 316, 335, 337, 338, 341, 349, 357, 373, 377, 383, 385, 392, 400, 422, 423, 425, 427, 452, 471, 474, 476, 477], "directori": [32, 33, 34, 50, 67, 72, 74, 77, 78, 83, 84, 85, 86, 88, 92, 94, 96, 100, 106, 109, 111, 115, 134, 148, 149, 160, 164, 166, 181, 186, 187, 190, 197, 207, 209, 210, 217, 220, 222, 227, 228, 242, 244, 245, 247, 248, 249, 250, 251, 268, 276, 280, 283, 289, 291, 293, 294, 299, 303, 307, 308, 309, 310, 317, 321, 324, 328, 331, 337, 338, 339, 345, 349, 351, 352, 354, 355, 359, 372, 377, 381, 385, 392, 396, 399, 400, 404, 418, 419, 420, 422, 429, 435, 440, 442, 444, 445, 448, 450, 452, 453, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 481], "site": [32, 33, 67, 79, 84, 94, 106, 107, 153, 164, 207, 222, 240, 241, 247, 248, 251, 256, 264, 290, 299, 312, 332, 349, 351, 352, 355, 392, 393, 396, 397, 411, 427, 429, 435, 442, 447, 450, 451, 452, 453, 458, 459, 464, 466, 467, 473, 474, 475, 481], "py_legacywindowsfsencodingflag": [32, 471], "legacy_windows_fs_encod": [32, 33, 58, 471], "surrogatepass": [32, 33, 155, 452, 474, 476], "pythonlegacywindowsfsencod": [32, 33, 349, 452, 476], "529": [32, 63, 67, 290, 349, 452, 458, 478], "py_legacywindowsstdioflag": [32, 471], "legacy_windows_stdio": [32, 33, 471], "fileio": [32, 33, 117, 222, 255, 466, 474], "_windowsconsoleio": [32, 33], "pythonlegacywindowsstdio": [32, 33, 349, 452, 476], "528": [32, 33, 67, 458], "py_nositeflag": [32, 471], "site_import": [32, 33, 471], "entail": [32, 33, 452], "py_nousersitedirectori": [32, 471], "user_site_directori": [32, 33, 471], "pythonnousersit": [32, 33, 331, 452, 465], "py_optimizeflag": [32, 471], "optimization_level": [32, 33, 471], "pythonoptim": [32, 33, 452], "py_quietflag": [32, 471], "quiet": [32, 33, 88, 160, 183, 187, 272, 289, 308, 349, 359, 394, 458, 466, 469, 471, 472, 475], "copyright": [32, 33, 67, 72, 85, 120, 165, 232, 244, 349, 410, 423, 445, 447, 452, 472, 478], "q": [32, 33, 62, 83, 88, 91, 96, 100, 102, 118, 157, 159, 160, 180, 183, 187, 199, 211, 222, 258, 272, 280, 285, 289, 293, 294, 297, 308, 313, 314, 315, 316, 340, 344, 349, 354, 391, 439, 441, 452, 461, 468, 472, 473, 475], "py_unbufferedstdioflag": [32, 471], "buffered_stdio": [32, 33, 471], "stdout": [32, 33, 58, 63, 65, 67, 72, 86, 88, 99, 100, 117, 119, 123, 127, 130, 134, 136, 148, 152, 166, 173, 174, 187, 188, 190, 207, 213, 220, 222, 239, 244, 245, 255, 259, 265, 266, 280, 289, 290, 294, 297, 304, 305, 306, 318, 330, 341, 345, 349, 355, 356, 359, 375, 377, 378, 385, 386, 396, 397, 404, 410, 414, 419, 425, 443, 447, 448, 452, 453, 458, 459, 463, 464, 465, 466, 467, 472, 473, 474, 475, 476, 477], "pythonunbuff": [32, 33, 349, 452], "py_verboseflag": [32, 471], "verbos": [32, 33, 62, 67, 88, 97, 99, 100, 117, 157, 174, 184, 185, 190, 207, 223, 225, 265, 289, 298, 316, 328, 329, 342, 349, 354, 355, 359, 364, 379, 385, 396, 416, 425, 458, 461, 462, 463, 465, 466, 470, 471, 472, 474, 476, 477], "show": [32, 33, 34, 67, 71, 72, 73, 75, 86, 88, 91, 92, 93, 94, 96, 98, 99, 100, 101, 104, 106, 107, 113, 117, 119, 123, 136, 144, 147, 148, 149, 152, 155, 157, 166, 169, 173, 176, 183, 185, 186, 187, 190, 199, 208, 210, 213, 222, 223, 231, 232, 239, 240, 244, 245, 247, 254, 258, 259, 264, 275, 280, 288, 289, 290, 296, 304, 305, 315, 318, 323, 329, 331, 334, 337, 338, 340, 341, 342, 355, 364, 366, 367, 370, 372, 373, 375, 377, 378, 381, 385, 386, 387, 395, 396, 397, 399, 416, 417, 418, 428, 432, 436, 437, 439, 440, 441, 448, 449, 450, 452, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 474, 475, 476, 479], "cleanup": [32, 33, 34, 58, 67, 94, 100, 112, 132, 137, 161, 166, 211, 281, 290, 335, 345, 349, 357, 359, 385, 387, 399, 402, 408, 424, 425, 426, 427, 452, 459, 461, 464, 466, 467, 471, 472, 473, 478], "pythonverbos": [32, 33, 452], "builtin": [32, 33, 34, 52, 62, 67, 84, 86, 92, 105, 119, 139, 155, 157, 184, 188, 190, 222, 227, 232, 241, 244, 247, 251, 252, 255, 256, 258, 265, 296, 305, 312, 320, 331, 341, 349, 357, 382, 383, 387, 424, 425, 427, 429, 432, 434, 437, 438, 440, 447, 453, 465, 468, 469, 471, 472, 474, 475, 476, 477, 479, 481], "__main__": [32, 33, 34, 65, 67, 78, 83, 84, 86, 92, 99, 100, 101, 123, 141, 152, 163, 185, 187, 190, 197, 210, 225, 247, 251, 276, 280, 289, 294, 296, 305, 310, 312, 320, 321, 330, 335, 337, 339, 359, 364, 379, 381, 383, 385, 386, 387, 396, 397, 399, 404, 418, 426, 430, 434, 437, 447, 452, 460, 463, 464, 465, 466, 468, 472, 473, 474, 475, 478, 479], "argv": [32, 33, 34, 65, 67, 71, 72, 100, 111, 115, 123, 133, 139, 185, 187, 190, 215, 225, 244, 289, 290, 294, 306, 321, 335, 339, 349, 353, 366, 385, 404, 440, 445, 447, 448, 452, 462, 466, 467, 472, 477, 478], "pysys_setargvex": [32, 56, 466, 470, 472], "py_finalizeex": [32, 34, 56, 58, 71, 98, 476], "py_initializefromconfig": [32, 33, 41, 351, 471, 478], "consol": [32, 33, 65, 67, 84, 91, 99, 100, 111, 173, 175, 177, 190, 198, 222, 244, 265, 290, 294, 310, 317, 345, 349, 401, 435, 452, 458, 461, 465, 472, 473, 477], "o_text": [32, 279, 290], "o_binari": [32, 33, 279, 290], "py_initializeex": [32, 56, 98], "initsig": 32, "registr": [32, 58, 158, 166, 290, 296, 326, 392, 402, 417, 465], "undo": [32, 152, 174, 244, 264, 381, 386, 465], "py_newinterpret": [32, 56, 98], "ideal": [32, 62, 77, 94, 100, 102, 106, 132, 147, 180, 349, 397, 404, 442, 447, 463, 472], "flush": [32, 99, 100, 104, 112, 123, 127, 130, 133, 146, 155, 157, 174, 211, 222, 242, 255, 264, 266, 267, 268, 275, 280, 290, 311, 319, 330, 334, 345, 349, 359, 396, 402, 404, 410, 421, 473, 474, 476, 478], "restart": [32, 100, 174, 209, 220, 244, 265, 294, 330, 358, 363, 447, 465, 466, 475, 477, 478], "loadabl": [32, 62, 98, 247, 304, 337, 453, 458], "dll": [32, 33, 56, 67, 73, 83, 115, 266, 290, 349, 366, 458, 459, 464, 465, 469, 474, 478], "unload": [32, 98, 359, 399], "hunt": [32, 289], "random": [32, 33, 34, 67, 72, 77, 84, 86, 91, 94, 100, 106, 115, 123, 131, 146, 155, 157, 170, 171, 173, 190, 215, 216, 223, 233, 244, 251, 254, 255, 258, 280, 287, 289, 305, 316, 324, 325, 340, 355, 357, 381, 385, 395, 407, 421, 423, 425, 442, 448, 451, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 478], "amount": [32, 34, 44, 72, 75, 77, 83, 84, 94, 104, 123, 130, 133, 136, 174, 183, 220, 228, 232, 233, 255, 256, 267, 280, 285, 289, 290, 292, 293, 296, 302, 304, 319, 327, 329, 330, 334, 339, 341, 361, 362, 363, 366, 369, 373, 381, 390, 392, 406, 408, 421, 437, 438, 440, 446, 460, 463, 465, 469, 472, 474, 475, 476, 477, 479], "ti": [32, 183, 305, 338, 340, 350, 424, 462, 463, 470, 478], "_pysys_clearaudithook": [32, 139], "py_fin": [32, 33, 56, 466], "stdio_encod": [32, 33, 349], "stdio_error": [32, 33, 349], "pythonioencod": [32, 33, 290, 349, 452, 465, 474], "backslashreplac": [32, 33, 106, 155, 211, 222, 255, 264, 290, 341, 349, 452, 462, 475, 477], "program_nam": [32, 33], "rel": [32, 34, 62, 67, 78, 85, 99, 103, 105, 109, 110, 111, 118, 119, 123, 147, 150, 151, 155, 166, 174, 178, 180, 187, 188, 190, 206, 207, 212, 222, 228, 242, 247, 255, 262, 263, 264, 267, 272, 275, 278, 290, 291, 293, 296, 299, 305, 311, 314, 315, 316, 321, 322, 328, 329, 334, 337, 338, 340, 341, 345, 349, 351, 355, 357, 359, 363, 366, 372, 373, 377, 385, 386, 391, 396, 402, 404, 410, 412, 418, 419, 422, 430, 433, 439, 443, 447, 448, 452, 458, 459, 460, 461, 463, 466, 467, 470, 471, 473, 474, 475, 476, 478, 479, 481], "durat": [32, 34, 86, 100, 122, 123, 132, 136, 180, 268, 280, 305, 334, 335, 338, 341, 349, 358, 359, 362, 363, 385, 403, 466, 471, 472, 473, 475, 478], "prefix": [32, 33, 34, 46, 56, 57, 60, 62, 63, 67, 72, 77, 86, 97, 102, 103, 104, 115, 152, 156, 160, 164, 170, 172, 173, 174, 183, 187, 188, 200, 210, 222, 225, 227, 232, 240, 242, 244, 253, 265, 266, 290, 291, 294, 299, 309, 311, 312, 316, 329, 331, 341, 342, 344, 349, 351, 357, 359, 361, 366, 372, 373, 377, 385, 386, 395, 396, 397, 407, 410, 412, 416, 420, 421, 424, 428, 432, 433, 437, 443, 446, 447, 452, 453, 457, 458, 462, 465, 466, 469, 471, 472, 473, 475, 476, 478], "complic": [32, 62, 72, 77, 86, 87, 91, 93, 94, 98, 102, 103, 104, 106, 107, 138, 155, 166, 173, 178, 187, 190, 212, 223, 224, 240, 289, 296, 316, 363, 425, 427, 436, 440, 443, 446, 459, 461, 462, 463, 464, 465, 466, 468, 472], "usr": [32, 34, 78, 83, 88, 94, 96, 100, 106, 148, 164, 173, 197, 227, 228, 269, 289, 291, 293, 300, 316, 323, 331, 341, 345, 349, 352, 357, 363, 366, 379, 392, 418, 435, 445, 450, 452, 453, 456, 457, 458, 460, 462, 464, 469, 472, 474, 475], "bin": [32, 34, 67, 71, 77, 78, 83, 94, 100, 106, 107, 148, 161, 164, 197, 222, 242, 248, 289, 290, 293, 298, 341, 342, 352, 392, 393, 396, 418, 425, 435, 445, 447, 450, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468], "makefil": [32, 67, 71, 72, 78, 228, 232, 255, 293, 334, 338, 352, 425, 455, 459, 460, 465, 466, 471, 473, 474, 475, 476], "exec": [32, 72, 83, 109, 119, 139, 141, 154, 156, 190, 209, 210, 222, 224, 247, 290, 294, 305, 341, 345, 348, 349, 359, 366, 375, 377, 378, 379, 425, 426, 433, 434, 435, 437, 447, 453, 459, 460, 461, 463, 464, 467, 469, 474, 475], "exec_prefix": [32, 33, 34, 280, 331, 349, 351, 377, 396, 447, 452, 453, 457, 471, 472], "background": [32, 67, 76, 91, 96, 100, 104, 123, 136, 164, 166, 174, 243, 244, 266, 280, 290, 337, 345, 359, 362, 366, 372, 373, 381, 396, 424, 425, 449, 463, 474], "plat": [32, 458, 476], "subtre": [32, 410, 459], "speak": [32, 33, 67, 72, 84, 104, 118, 180, 222, 271, 341, 344, 353, 437, 438], "sparc": [32, 292], "machin": [32, 50, 63, 67, 72, 83, 85, 86, 96, 99, 100, 104, 118, 130, 155, 163, 174, 175, 180, 197, 209, 222, 227, 240, 252, 255, 257, 265, 266, 267, 269, 271, 280, 281, 285, 290, 293, 300, 305, 310, 330, 332, 334, 337, 338, 340, 341, 344, 362, 364, 395, 406, 417, 418, 425, 431, 441, 443, 445, 453, 458, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 477, 478], "solari": [32, 67, 243, 290, 300, 303, 325, 349, 352, 363, 459, 466, 472, 473, 475, 477], "consid": [32, 33, 38, 41, 48, 54, 55, 56, 62, 63, 67, 71, 72, 74, 75, 77, 84, 86, 87, 88, 91, 92, 93, 94, 97, 98, 100, 101, 103, 109, 111, 113, 117, 122, 123, 125, 141, 144, 148, 151, 157, 160, 164, 165, 172, 173, 174, 178, 180, 181, 183, 187, 188, 190, 193, 201, 202, 205, 222, 223, 225, 227, 228, 232, 233, 240, 247, 249, 250, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 267, 268, 272, 280, 281, 285, 286, 289, 291, 293, 294, 296, 305, 311, 316, 317, 323, 325, 328, 330, 337, 338, 340, 341, 342, 344, 349, 352, 355, 359, 361, 362, 363, 366, 382, 383, 385, 386, 391, 392, 396, 399, 404, 407, 408, 409, 417, 418, 424, 425, 426, 427, 429, 433, 437, 438, 439, 441, 447, 453, 458, 459, 460, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479], "intel": [32, 85, 138, 292, 305, 344, 453, 456, 464, 466, 475, 476, 478, 479], "linux": [32, 33, 50, 67, 70, 71, 79, 82, 83, 91, 92, 95, 96, 112, 115, 129, 173, 174, 183, 209, 211, 212, 227, 244, 254, 255, 266, 275, 280, 292, 303, 306, 319, 323, 325, 329, 330, 334, 339, 345, 349, 352, 355, 357, 359, 362, 363, 366, 380, 392, 445, 452, 453, 455, 458, 459, 460, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "major": [32, 67, 76, 79, 86, 92, 93, 102, 104, 106, 107, 119, 164, 174, 180, 184, 191, 200, 203, 205, 227, 232, 240, 289, 290, 300, 302, 310, 340, 341, 349, 352, 355, 385, 391, 442, 451, 458, 459, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 481], "revis": [32, 67, 77, 106, 107, 233, 300, 344, 405, 423, 459, 464, 467, 468, 473, 476, 477, 481], "stori": [32, 72, 79, 144, 233, 443], "strategi": [32, 41, 62, 72, 75, 78, 117, 132, 155, 266, 359, 366, 385, 400, 421, 422, 429, 438, 462, 467, 472, 477], "meaningless": [32, 106, 460, 461, 474], "mount": [32, 290, 291, 293, 329, 466, 471, 474, 477], "automount": 32, "comput": [32, 33, 34, 48, 62, 63, 67, 71, 74, 75, 77, 79, 81, 84, 85, 86, 91, 92, 94, 96, 97, 99, 100, 103, 105, 106, 118, 130, 136, 138, 143, 144, 147, 151, 157, 158, 159, 163, 175, 178, 180, 182, 183, 188, 190, 213, 220, 222, 223, 232, 233, 234, 251, 252, 256, 258, 264, 266, 272, 280, 288, 290, 291, 293, 300, 304, 305, 308, 315, 323, 331, 334, 335, 338, 340, 341, 349, 360, 362, 366, 381, 385, 392, 395, 402, 421, 423, 424, 425, 427, 432, 433, 435, 436, 437, 439, 441, 443, 448, 449, 451, 452, 453, 456, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 474, 477, 478], "delimit": [32, 58, 67, 77, 84, 86, 103, 104, 164, 172, 190, 198, 218, 235, 244, 245, 268, 285, 289, 296, 316, 317, 341, 342, 345, 366, 375, 391, 422, 430, 449, 458, 462, 472], "maco": [32, 33, 56, 67, 79, 80, 82, 83, 84, 96, 106, 108, 112, 115, 130, 173, 181, 212, 254, 266, 275, 280, 290, 301, 305, 306, 317, 325, 327, 329, 330, 331, 334, 337, 338, 339, 349, 352, 359, 362, 363, 365, 366, 370, 373, 380, 392, 400, 423, 436, 450, 452, 455, 456, 459, 460, 461, 462, 464, 465, 466, 469, 470, 471, 476, 477, 478], "startup": [32, 33, 67, 85, 86, 111, 122, 165, 185, 211, 247, 263, 265, 290, 331, 341, 349, 360, 365, 379, 429, 442, 444, 452, 456, 464, 465, 469, 473, 474, 475, 477, 479], "module_search_path": [32, 33, 58, 470], "module_search_paths_set": [32, 33, 58, 470], "knowledg": [32, 73, 91, 180, 191, 263, 286, 300, 327, 437, 448, 465], "compon": [32, 34, 41, 44, 63, 67, 72, 77, 79, 84, 92, 99, 100, 103, 106, 107, 108, 113, 136, 155, 157, 168, 174, 180, 183, 191, 205, 207, 227, 228, 240, 242, 247, 248, 251, 252, 253, 254, 278, 286, 290, 291, 293, 316, 328, 329, 341, 342, 349, 350, 352, 353, 355, 357, 363, 364, 366, 373, 381, 382, 383, 385, 392, 402, 407, 412, 417, 419, 422, 425, 429, 430, 432, 438, 452, 458, 462, 463, 466, 467, 470, 471, 472, 474, 475, 476, 477], "wchar_": 32, "0a5": 32, "py3k": [32, 86, 102, 349, 352, 467], "63103m": 32, "2008": [32, 155, 180, 220, 329, 344, 410, 423, 465, 466, 467, 472], "00": [32, 88, 101, 104, 106, 180, 183, 218, 232, 264, 316, 338, 363, 381, 422, 448, 449, 452, 464, 465, 466, 472, 476, 479], "53": [32, 77, 100, 101, 136, 180, 183, 272, 315, 340, 341, 363, 387, 441, 464], "55": [32, 92, 94, 99, 100, 101, 136, 183, 223, 281, 315, 316, 381, 438, 439, 441, 446, 447, 452, 476], "gcc": [32, 34, 62, 173, 300, 349, 445, 452, 453, 465, 466, 468, 469, 470, 474, 476], "period": [32, 56, 77, 84, 86, 93, 99, 148, 174, 180, 183, 217, 223, 264, 266, 280, 291, 299, 315, 320, 323, 334, 335, 338, 340, 361, 373, 393, 417, 427, 432, 438, 458, 459, 462, 463, 464, 465, 466, 470, 471, 472], "offici": [32, 102, 155, 192, 206, 232, 273, 292, 338, 366, 385, 408, 416, 425, 456, 458, 459, 460, 461, 464, 466, 469, 472, 473, 475, 477, 479], "suno": [32, 300, 355], "sunos5": [32, 349], "darwin": [32, 300, 349, 363, 459, 465, 475], "1991": [32, 68, 79, 337, 423], "1995": [32, 68, 206, 423, 459], "sticht": [32, 68, 423], "mathematisch": [32, 68, 423], "centrum": [32, 68, 423], "amsterdam": [32, 79, 363, 423], "67": [32, 101, 218, 222, 334, 340, 379, 381, 443, 465], "aug": [32, 94, 180, 420, 461, 462], "1997": [32, 144, 423, 466, 472], "22": [32, 76, 100, 103, 106, 147, 157, 170, 173, 180, 188, 233, 244, 256, 258, 264, 281, 315, 334, 338, 342, 381, 420, 423, 441, 462, 471, 472, 478, 479], "34": [32, 100, 136, 180, 183, 218, 223, 334, 338, 340, 427, 438, 446, 447, 472], "argc": [32, 33, 65, 71, 72, 188], "updatepath": [32, 466], "parse_argv": [32, 33, 34], "safe_path": [32, 33, 349, 470], "host": [32, 67, 83, 100, 104, 123, 133, 139, 155, 174, 175, 206, 209, 220, 222, 239, 240, 242, 244, 245, 253, 254, 266, 268, 280, 283, 284, 285, 290, 291, 293, 302, 310, 316, 332, 334, 335, 338, 341, 343, 344, 356, 359, 383, 386, 391, 392, 395, 404, 416, 451, 453, 458, 459, 462, 464, 465, 466, 470, 472, 473, 474, 475, 476, 477], "condit": [32, 34, 58, 62, 67, 72, 74, 77, 84, 86, 93, 94, 100, 107, 119, 121, 130, 134, 136, 137, 141, 161, 178, 183, 187, 188, 196, 210, 222, 223, 225, 228, 233, 237, 245, 247, 248, 254, 255, 264, 265, 268, 269, 278, 280, 294, 306, 311, 315, 316, 324, 325, 334, 338, 341, 349, 350, 357, 359, 383, 385, 397, 399, 409, 411, 413, 416, 424, 425, 426, 430, 438, 442, 446, 449, 452, 459, 460, 461, 463, 465, 466, 469, 472, 473, 474, 475, 476, 478, 479, 481], "py_fatalerror": [32, 34, 41, 56, 58, 63, 479], "algorithm": [32, 41, 67, 77, 83, 84, 86, 103, 105, 106, 116, 123, 130, 138, 140, 143, 146, 148, 155, 157, 170, 171, 179, 180, 183, 187, 190, 199, 205, 219, 222, 227, 234, 245, 251, 255, 256, 263, 266, 272, 274, 277, 278, 305, 307, 315, 324, 334, 338, 340, 341, 349, 357, 361, 364, 387, 392, 404, 419, 420, 421, 423, 427, 437, 453, 459, 461, 462, 464, 466, 468, 469, 470, 472, 473, 476, 478], "orig_argv": [32, 33, 349, 469], "themselv": [32, 62, 72, 74, 77, 84, 85, 86, 97, 99, 103, 108, 138, 148, 151, 155, 164, 168, 172, 173, 191, 205, 208, 227, 258, 259, 271, 272, 280, 294, 296, 316, 329, 337, 341, 359, 361, 383, 385, 386, 387, 408, 416, 425, 427, 429, 437, 439, 461, 464, 465, 466, 471, 472, 474, 475, 477], "cve": [32, 341, 466, 470], "5983": [32, 466], "manual": [32, 44, 60, 67, 71, 72, 73, 76, 78, 83, 84, 85, 91, 92, 94, 98, 100, 102, 106, 109, 117, 123, 128, 129, 130, 136, 161, 173, 174, 182, 190, 194, 203, 208, 212, 222, 251, 254, 255, 264, 268, 280, 281, 289, 290, 299, 301, 310, 317, 325, 334, 337, 341, 353, 355, 357, 358, 363, 365, 372, 383, 386, 407, 410, 418, 421, 425, 430, 431, 442, 446, 448, 451, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 473, 474, 475, 477, 478], "pop": [32, 34, 79, 83, 84, 100, 118, 157, 158, 183, 188, 191, 200, 233, 258, 268, 290, 302, 328, 341, 372, 373, 381, 385, 396, 425, 432, 439, 449, 461, 462, 463, 464, 465, 472, 474, 475], "pysys_setargv": [32, 56, 466, 470], "pyrun_simplestr": [32, 33, 65, 71, 78, 85], "home": [32, 33, 67, 79, 80, 84, 85, 91, 100, 103, 148, 152, 164, 174, 211, 231, 244, 248, 268, 269, 283, 290, 291, 293, 294, 303, 307, 311, 312, 317, 328, 331, 345, 351, 359, 366, 372, 381, 396, 419, 421, 431, 435, 450, 453, 458, 465, 471, 472, 473, 475, 478], "simplest": [32, 62, 71, 72, 75, 94, 97, 98, 99, 103, 104, 107, 117, 155, 166, 172, 183, 190, 197, 207, 233, 264, 296, 316, 338, 362, 383, 385, 386, 425, 427, 437, 438, 447, 448, 449, 452, 459, 461, 462, 469], "simultan": [32, 62, 100, 102, 134, 135, 146, 183, 228, 244, 255, 258, 268, 278, 315, 327, 335, 337, 359, 362, 372, 433, 445, 446, 458, 465, 469, 470, 475, 478], "twice": [32, 33, 76, 87, 94, 100, 102, 105, 106, 110, 143, 160, 164, 180, 185, 211, 229, 233, 234, 252, 272, 316, 337, 375, 397, 419, 437, 443, 452, 459, 461, 462, 463, 465, 466, 470, 476, 478], "concurr": [32, 67, 83, 86, 111, 120, 121, 123, 126, 127, 130, 131, 134, 167, 223, 251, 268, 280, 293, 296, 308, 317, 327, 337, 338, 345, 349, 362, 410, 440, 466, 470, 471, 478, 481], "regularli": [32, 41, 102, 108, 210, 381, 458], "setswitchinterv": [32, 83, 349, 359, 447, 472, 479], "potenti": [32, 33, 34, 62, 84, 94, 98, 99, 100, 102, 108, 123, 164, 170, 180, 220, 222, 245, 247, 250, 252, 258, 264, 265, 266, 280, 281, 290, 291, 296, 302, 313, 324, 335, 338, 341, 349, 361, 382, 383, 385, 391, 406, 418, 425, 429, 438, 452, 458, 460, 461, 465, 469, 470, 471, 472, 473, 474, 475, 477], "meantim": [32, 119], "bookkeep": [32, 67, 174, 287, 471], "pythreadst": [32, 56, 469, 470, 471, 474, 479], "pythreadstate_get": [32, 56], "reacquir": [32, 173, 362], "py_end_allow_thread": [32, 56, 72, 478], "hidden": [32, 56, 84, 85, 176, 188, 228, 244, 294, 305, 315, 335, 373, 381, 450, 471, 473, 477, 478, 479], "close": [32, 50, 62, 65, 67, 75, 77, 78, 84, 85, 86, 94, 98, 99, 100, 104, 106, 114, 117, 121, 123, 127, 129, 130, 132, 133, 134, 136, 148, 150, 151, 152, 154, 155, 158, 164, 166, 167, 174, 181, 185, 187, 188, 196, 204, 205, 210, 211, 215, 220, 222, 231, 232, 237, 239, 240, 244, 245, 255, 264, 266, 267, 268, 272, 275, 278, 280, 281, 285, 289, 290, 292, 293, 298, 305, 306, 311, 317, 325, 326, 327, 328, 330, 332, 334, 335, 337, 338, 340, 341, 345, 346, 349, 355, 356, 357, 359, 362, 363, 366, 370, 372, 373, 375, 381, 383, 385, 386, 387, 392, 396, 398, 402, 404, 410, 413, 414, 416, 417, 418, 419, 425, 427, 428, 432, 438, 440, 441, 443, 449, 452, 459, 463, 464, 465, 466, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479], "expand": [32, 57, 62, 74, 85, 86, 88, 93, 103, 106, 119, 164, 180, 183, 190, 227, 244, 252, 256, 258, 265, 280, 289, 291, 293, 311, 316, 341, 352, 361, 363, 366, 373, 386, 391, 402, 406, 407, 409, 410, 412, 417, 427, 443, 458, 461, 462, 465, 472, 473, 474, 475, 476, 477, 478, 479], "_save": 32, "pyeval_savethread": [32, 56, 472], "pyeval_restorethread": [32, 56, 472, 478], "compress": [32, 67, 86, 94, 97, 100, 114, 130, 155, 164, 197, 215, 231, 232, 251, 256, 258, 273, 278, 292, 296, 329, 333, 338, 339, 346, 355, 398, 406, 418, 419, 442, 451, 461, 462, 464, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478], "cryptograph": [32, 67, 232, 251, 290, 315, 323, 338, 410, 421, 473, 476], "zlib": [32, 67, 83, 103, 116, 155, 231, 232, 251, 329, 359, 419, 448, 461, 462, 464, 469, 470, 479], "hashlib": [32, 67, 83, 170, 171, 234, 251, 324, 337, 423, 453, 465, 466, 467], "dedic": [32, 67, 100, 164, 190, 232, 338, 341, 359, 383], "aforement": [32, 122, 473], "pygilstate_ensur": [32, 56, 478], "pygilstate_releas": [32, 56], "idiom": [32, 34, 72, 77, 84, 86, 102, 105, 109, 111, 117, 190, 222, 280, 328, 338, 349, 383, 399, 440, 462, 467, 472, 473, 479], "pygilstate_st": [32, 56], "gstate": 32, "callsomefunct": 32, "pygilstate_": 32, "unsupport": [32, 33, 67, 88, 107, 112, 117, 123, 164, 180, 190, 222, 227, 255, 271, 280, 281, 292, 296, 301, 334, 338, 340, 345, 362, 383, 386, 391, 392, 402, 419, 429, 440, 458, 459, 463, 465, 472, 476, 479], "face": [32, 106, 123, 126, 146, 244, 266, 299, 391, 422, 459, 465, 467, 469, 473, 474, 475], "impact": [32, 67, 74, 164, 247, 290, 293, 304, 331, 337, 338, 344, 345, 359, 383, 470], "fact": [32, 34, 63, 72, 77, 79, 84, 85, 94, 99, 103, 104, 107, 123, 147, 164, 168, 173, 183, 190, 203, 207, 220, 222, 229, 247, 276, 289, 296, 305, 341, 355, 366, 381, 383, 392, 404, 418, 425, 427, 429, 431, 437, 438, 441, 446, 447, 458, 459, 460, 465, 470, 471, 473, 474, 475], "solv": [32, 67, 77, 83, 84, 86, 94, 103, 111, 244, 280, 327, 340, 344, 355, 383, 386, 387, 424, 451, 461, 462, 464, 468, 472, 474, 478], "afterward": [32, 71, 92, 173, 180, 183, 258, 290, 325, 337, 349, 356, 387, 418, 425, 445, 446, 461, 462], "pthread_atfork": 32, "accomplish": [32, 34, 84, 102, 117, 174, 224, 245, 303, 327, 407, 424, 469], "deadlock": [32, 134, 163, 209, 211, 264, 280, 290, 313, 335, 345, 349, 362, 425, 465, 472, 473], "defunct": 32, "pyos_afterfork_child": [32, 56, 58, 290, 471, 477, 478], "belong": [32, 41, 57, 62, 72, 84, 93, 98, 136, 163, 190, 208, 240, 255, 256, 269, 278, 289, 290, 311, 335, 337, 341, 373, 382, 397, 407, 413, 424, 425, 437, 438, 466, 469, 473], "pyinterpreterst": [32, 33, 56, 62, 469, 478, 479], "natur": [32, 34, 77, 84, 93, 103, 106, 111, 123, 151, 155, 171, 173, 183, 190, 191, 227, 258, 272, 275, 291, 305, 315, 327, 334, 340, 373, 399, 400, 410, 427, 432, 437, 441, 442, 459, 463, 465, 466, 467, 468, 470, 472, 476, 477], "commonli": [32, 72, 83, 84, 86, 91, 94, 97, 103, 106, 111, 117, 164, 172, 187, 210, 212, 222, 239, 251, 254, 273, 280, 282, 335, 340, 341, 343, 345, 355, 363, 366, 370, 372, 383, 385, 391, 392, 397, 414, 416, 425, 432, 438, 441, 442, 443, 448, 458, 461, 463, 464, 465, 469, 475, 477], "cooper": [32, 86, 113, 136, 161, 200, 222, 338, 349, 366, 423, 437, 477], "interp": [32, 366], "didn": [32, 75, 78, 84, 88, 102, 103, 106, 111, 119, 166, 241, 289, 316, 332, 349, 387, 425, 437, 459, 460, 461, 463, 464, 465, 466, 474, 477, 479], "pyeval_threadsiniti": [32, 56, 463, 479], "tstate": [32, 470, 471, 479], "ensu": [32, 472], "_py_isfin": [32, 478], "unwant": [32, 34, 84, 355, 447, 477], "needn": [32, 316, 344, 477], "pythreadstate_swap": [32, 56], "swap": [32, 71, 104, 155, 157, 173, 188, 258, 280, 319, 334, 344, 359, 425, 433, 448, 470, 477], "henc": [32, 72, 77, 88, 100, 111, 119, 166, 169, 188, 190, 224, 244, 247, 250, 266, 280, 289, 293, 298, 305, 319, 328, 340, 341, 344, 345, 362, 386, 397, 424, 425, 427, 463, 474, 477], "gilstat": 32, "everi": [32, 34, 41, 48, 56, 57, 67, 72, 74, 76, 77, 79, 84, 86, 92, 94, 98, 99, 100, 101, 103, 106, 107, 109, 113, 119, 123, 129, 131, 136, 137, 140, 143, 155, 164, 167, 173, 174, 180, 181, 183, 184, 187, 188, 190, 191, 193, 202, 211, 220, 222, 227, 229, 233, 240, 242, 244, 248, 252, 256, 258, 259, 264, 266, 275, 280, 289, 290, 292, 299, 311, 313, 316, 329, 330, 331, 334, 335, 337, 341, 342, 345, 346, 348, 353, 361, 362, 373, 376, 381, 383, 385, 386, 392, 397, 404, 405, 407, 410, 416, 422, 424, 425, 429, 431, 435, 438, 441, 442, 447, 450, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 478], "pygilstate_getthisthreadst": [32, 56], "auto": [32, 67, 79, 92, 107, 180, 208, 244, 317, 328, 334, 338, 381, 386, 387, 446, 453, 457, 459, 466, 469, 472, 476, 477], "mainli": [32, 44, 99, 119, 152, 164, 252, 271, 274, 289, 306, 349, 352, 383, 404, 416, 425, 458, 469, 470, 479], "diagnost": [32, 41, 67, 74, 99, 283, 354, 383, 386, 404, 416, 418, 455, 472, 476], "pygilstate_check": 32, "sensit": [32, 144, 157, 164, 217, 245, 266, 273, 293, 349, 383, 385, 397, 425, 452, 460, 462, 463, 464, 465, 470, 471, 474], "brace": [32, 77, 86, 155, 278, 316, 341, 342, 395, 427, 432, 439, 449, 476, 477], "py_block_thread": [32, 56], "py_unblock_thread": [32, 56], "pyinterpreterstate_new": [32, 56, 139], "serial": [32, 40, 41, 67, 86, 100, 164, 179, 191, 193, 194, 198, 200, 202, 203, 204, 205, 251, 259, 264, 266, 280, 281, 295, 301, 327, 330, 332, 337, 344, 349, 410, 443, 459, 465, 466, 468, 470, 472, 473, 474, 479], "pyinterpreterstate_clear": [32, 56, 139], "pyinterpreterstate_delet": [32, 56], "pythreadstate_new": [32, 56], "pythreadstate_clear": [32, 56], "on_delet": 32, "pythreadstate_delet": [32, 56], "pythreadstate_deletecurr": [32, 479], "uint64_t": 32, "pythreadstate_getid": [32, 56, 479], "pythreadstate_getinterpret": [32, 56, 479], "pythreadstate_entertrac": [32, 470], "suspend": [32, 86, 94, 122, 136, 174, 252, 311, 330, 349, 358, 362, 363, 424, 425, 427, 461, 462, 464, 470, 475, 477], "pythreadstate_leavetrac": [32, 470], "pyeval_settrac": [32, 461], "pyeval_setprofil": [32, 461], "pyinterpreterstate_get": [32, 56, 479], "int64_t": 32, "pyinterpreterstate_getid": [32, 56, 477], "pyinterpreterstate_getdict": [32, 56], "pymodule_getst": [32, 44, 56, 60, 98, 479], "_pyframeevalfunct": [32, 470], "throwflag": [32, 65], "throw": [32, 65, 76, 87, 93, 94, 99, 109, 125, 136, 158, 174, 188, 244, 290, 350, 359, 383, 391, 425, 427, 428, 436, 464, 469, 471, 473, 476, 479], "_pyinterpreterstate_getevalframefunc": 32, "_pyinterpreterstate_setevalframefunc": 32, "eval_fram": [32, 479], "pythreadstate_getdict": [32, 56], "okai": [32, 93, 117, 164, 263, 383, 404, 447], "pythreadstate_setasyncexc": [32, 56, 477], "naiv": [32, 67, 103, 179, 200, 206, 232, 287, 337, 473], "misus": [32, 44, 102, 337, 461], "pyeval_acquirethread": [32, 56, 478], "pyeval_releasethread": [32, 56], "pyeval_acquirelock": [32, 56, 472, 478], "pyeval_releaselock": [32, 56, 472], "perhap": [32, 62, 71, 72, 75, 78, 79, 82, 83, 93, 98, 99, 100, 103, 104, 107, 117, 148, 151, 174, 178, 190, 215, 240, 255, 263, 265, 280, 290, 296, 300, 315, 331, 334, 391, 408, 425, 427, 428, 436, 438, 440, 445, 459, 460, 461, 463, 464, 465, 469, 471, 478], "pyinterpreterstate_main": 32, "pyinterpreterconfig": [32, 471], "py_newinterpreterfromconfig": [32, 471], "use_main_obmalloc": 32, "check_multi_interp_extens": [32, 471], "pyinterpreterconfig_own_gil": [32, 471], "allow_fork": 32, "unrestrict": [32, 58, 77, 423], "subprocess": [32, 67, 100, 120, 122, 127, 129, 139, 161, 163, 166, 205, 207, 245, 251, 254, 280, 290, 298, 324, 328, 334, 335, 359, 365, 379, 381, 396, 397, 452, 457, 462, 465, 466, 469, 472, 478, 479, 481], "allow_exec": 32, "execv": [32, 254, 289, 290, 303, 473], "allow_thread": 32, "allow_daemon_thread": 32, "daemon": [32, 99, 100, 266, 280, 313, 332, 334, 335, 362, 363, 399, 462, 465, 469, 473, 477, 479], "init": [32, 44, 62, 67, 72, 85, 139, 173, 200, 247, 273, 290, 293, 305, 312, 360, 372, 383, 464, 465], "489": [32, 44, 67, 70, 72, 247, 479], "py_mod_multiple_interpret": [32, 44], "pyinterpreterconfig_default_gil": 32, "pyinterpreterconfig_shared_gil": 32, "tstate_p": 32, "config": [32, 33, 67, 71, 78, 84, 99, 100, 115, 164, 244, 251, 263, 264, 266, 289, 329, 349, 352, 366, 369, 386, 387, 404, 449, 453, 457, 462, 466, 469, 470, 471, 472, 474, 476, 477, 478], "total": [32, 33, 34, 58, 72, 77, 84, 88, 94, 100, 114, 123, 124, 130, 131, 136, 157, 180, 183, 187, 188, 190, 193, 202, 222, 223, 224, 227, 233, 255, 256, 258, 269, 290, 305, 315, 316, 329, 334, 337, 338, 341, 342, 355, 363, 364, 373, 379, 383, 385, 392, 398, 425, 427, 432, 441, 452, 466, 470, 471, 472, 473, 474, 475, 476, 478], "unsuccess": [32, 37], "likewis": [32, 34, 54, 84, 86, 93, 105, 109, 117, 183, 187, 205, 206, 208, 264, 268, 335, 381, 412, 431, 432, 437, 438, 472, 473], "briefli": [32, 76, 106, 183, 464], "pymodule_fromdefandspec": [32, 44, 475], "squirrel": [32, 305], "initmodul": 32, "essenti": [32, 72, 84, 92, 103, 104, 130, 164, 212, 222, 247, 254, 265, 266, 272, 285, 289, 290, 293, 321, 327, 335, 341, 349, 385, 408, 419, 430, 436, 459, 461, 466, 467, 470, 473, 474, 479], "unisol": 32, "py_endinterpret": [32, 56, 98], "haven": [32, 88, 103, 106, 136, 148, 183, 229, 340, 386, 440, 465, 466, 471], "benefit": [32, 34, 77, 84, 94, 100, 105, 108, 111, 183, 264, 265, 281, 296, 338, 341, 349, 359, 373, 383, 399, 404, 437, 458, 461, 462, 463, 466, 470, 472, 473, 477, 478], "truli": [32, 72, 80, 83, 84, 98, 112, 136, 178, 268, 361, 392, 466, 467], "cpu": [32, 83, 101, 104, 106, 119, 122, 123, 127, 136, 155, 161, 163, 232, 233, 259, 267, 280, 290, 319, 334, 341, 344, 355, 363, 364, 379, 406, 453, 456, 462, 469, 471, 473, 474, 475, 477, 478, 479], "approach": [32, 34, 67, 72, 73, 75, 78, 84, 86, 87, 88, 94, 99, 100, 102, 105, 106, 107, 112, 148, 155, 157, 166, 183, 187, 190, 207, 222, 234, 272, 280, 290, 293, 315, 330, 335, 337, 340, 341, 345, 357, 362, 364, 366, 381, 383, 385, 387, 392, 410, 416, 425, 427, 437, 442, 448, 449, 458, 459, 460, 464, 465, 466, 468, 470, 472, 473, 475, 476, 477, 481], "554": [32, 157], "vigil": 32, "That": [32, 51, 62, 67, 71, 75, 78, 82, 84, 85, 88, 91, 92, 98, 99, 100, 102, 103, 104, 105, 111, 119, 129, 148, 157, 158, 164, 174, 178, 183, 187, 190, 191, 198, 200, 202, 222, 254, 256, 258, 259, 264, 265, 289, 291, 296, 313, 316, 323, 328, 332, 341, 342, 345, 349, 361, 364, 373, 379, 383, 387, 404, 413, 419, 421, 424, 425, 427, 433, 440, 441, 447, 461, 462, 464, 465, 467, 468, 470, 472, 473, 477], "especi": [32, 62, 71, 72, 75, 83, 84, 86, 97, 102, 106, 123, 157, 164, 166, 180, 183, 190, 195, 202, 233, 244, 255, 259, 265, 281, 285, 290, 294, 305, 308, 310, 311, 313, 315, 330, 338, 339, 345, 349, 359, 381, 399, 407, 424, 429, 431, 449, 459, 461, 462, 465, 466, 467, 469, 472, 473, 474, 475, 476, 478], "One": [32, 56, 57, 65, 67, 71, 72, 74, 77, 80, 83, 84, 86, 91, 92, 94, 100, 103, 104, 106, 107, 108, 113, 116, 117, 119, 122, 130, 140, 151, 154, 164, 173, 178, 190, 198, 222, 227, 242, 244, 247, 248, 256, 264, 278, 280, 302, 304, 305, 314, 316, 330, 337, 338, 341, 343, 345, 355, 359, 361, 373, 381, 386, 387, 391, 397, 410, 424, 425, 427, 428, 429, 431, 432, 433, 440, 441, 444, 445, 446, 447, 448, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 477, 478], "spite": 32, "come": [32, 63, 70, 74, 77, 79, 80, 83, 84, 86, 88, 91, 92, 96, 99, 100, 102, 104, 106, 107, 111, 144, 147, 148, 155, 157, 158, 166, 174, 178, 183, 190, 206, 223, 229, 232, 241, 247, 289, 292, 296, 297, 315, 316, 317, 331, 335, 337, 338, 341, 352, 365, 366, 373, 383, 392, 396, 407, 412, 421, 424, 425, 429, 431, 432, 436, 437, 438, 440, 443, 447, 450, 451, 456, 457, 458, 459, 460, 461, 462, 463, 465, 474, 477, 478, 479], "consequ": [32, 41, 51, 62, 72, 77, 84, 144, 158, 164, 188, 233, 252, 280, 290, 293, 330, 334, 341, 349, 425, 427, 431, 437, 440, 441, 464, 466, 467, 471, 472, 473, 474, 475, 477], "race": [32, 86, 137, 183, 223, 247, 290, 324, 334, 357, 399, 471, 472, 473, 479], "challeng": [32, 233, 280, 332, 340, 397, 449, 472, 477], "break": [32, 34, 56, 62, 63, 67, 74, 75, 77, 83, 86, 91, 93, 94, 100, 102, 103, 104, 119, 125, 129, 133, 136, 141, 148, 155, 166, 167, 173, 174, 187, 190, 197, 199, 205, 233, 244, 247, 252, 258, 268, 280, 289, 294, 296, 304, 311, 316, 318, 323, 330, 332, 334, 338, 341, 342, 345, 349, 356, 358, 359, 361, 362, 381, 385, 391, 396, 397, 404, 408, 424, 425, 426, 427, 428, 430, 432, 437, 440, 442, 446, 449, 459, 460, 461, 462, 464, 465, 466, 468, 472, 473, 474, 475, 477, 478], "stdlib": [32, 33, 34, 67, 72, 98, 100, 208, 232, 244, 352, 406, 453, 464, 469, 470, 471, 472, 473, 475], "mitig": [32, 67, 122, 132, 241, 287, 341, 355, 441, 468, 470, 478], "insul": 32, "perfect": [32, 120, 240, 244, 338, 340, 469], "malici": [32, 106, 259, 265, 271, 296, 311, 324, 345, 349, 355, 406, 408, 409, 410, 411, 416, 417, 452, 465, 470], "namespac": [32, 44, 60, 67, 72, 77, 78, 84, 86, 88, 92, 94, 99, 111, 115, 119, 154, 157, 165, 178, 188, 190, 204, 208, 219, 222, 223, 227, 244, 245, 247, 248, 252, 264, 265, 270, 280, 290, 294, 296, 299, 311, 321, 328, 334, 341, 342, 348, 349, 350, 363, 364, 379, 382, 383, 385, 386, 387, 395, 397, 407, 408, 409, 412, 413, 424, 426, 433, 434, 435, 442, 447, 452, 459, 460, 461, 462, 464, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481], "reachabl": [32, 51, 77, 104, 190, 224, 289, 290, 293, 383, 425, 470, 479], "delic": [32, 62], "biject": [32, 106], "assumpt": [32, 62, 72, 75, 86, 98, 137, 158, 178, 180, 461, 465, 469, 472, 476, 477], "broken": [32, 98, 100, 104, 106, 109, 121, 135, 163, 187, 204, 209, 228, 252, 263, 280, 290, 291, 293, 302, 330, 338, 341, 349, 359, 361, 362, 366, 385, 386, 387, 391, 432, 452, 464, 468, 469, 470, 471, 473, 474, 478, 479], "presenc": [32, 34, 62, 72, 74, 86, 109, 155, 158, 183, 188, 215, 222, 240, 247, 253, 283, 289, 293, 305, 338, 340, 345, 349, 375, 383, 385, 424, 425, 427, 440, 446, 461, 462, 467, 470, 476], "highli": [32, 41, 84, 85, 102, 103, 119, 125, 188, 245, 254, 255, 296, 306, 316, 337, 338, 345, 360, 383, 462, 463, 470], "furthermor": [32, 77, 83, 117, 155, 188, 252, 265, 266, 268, 321, 341, 383, 396, 424, 458, 469, 470, 471, 474], "ctype": [32, 67, 72, 115, 139, 161, 193, 197, 202, 211, 251, 263, 290, 299, 341, 349, 383, 423, 466, 471, 473, 476], "py_addpendingcal": [32, 56, 466, 479], "schedul": [32, 67, 79, 83, 110, 112, 115, 121, 122, 126, 127, 133, 157, 161, 163, 233, 249, 251, 252, 319, 330, 349, 363, 373, 427, 461, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479], "queu": [32, 123, 133, 152, 174, 266, 292, 334, 358, 465], "successfulli": [32, 41, 65, 73, 76, 86, 87, 96, 103, 104, 112, 119, 123, 129, 136, 160, 163, 164, 166, 190, 220, 222, 224, 245, 247, 280, 285, 289, 290, 329, 334, 338, 341, 345, 362, 385, 404, 429, 433, 443, 450, 463, 472, 475, 476], "met": [32, 62, 74, 92, 93, 94, 99, 187, 208, 300, 338, 423, 449, 464, 478], "boundari": [32, 93, 103, 150, 180, 190, 193, 196, 202, 203, 208, 210, 280, 296, 316, 341, 344, 359, 412, 432, 438, 465, 470], "subinterpret": [32, 44, 62, 137, 247, 290, 341, 345, 353, 359, 470, 471, 478, 479], "quick": [32, 49, 67, 74, 94, 100, 103, 107, 108, 115, 184, 214, 287, 349, 366, 383, 387, 443, 461, 462, 463, 464, 465, 467, 471, 472], "busi": [32, 84, 104, 134, 209, 266, 335, 345, 366, 403, 412, 423, 438], "pygilst": 32, "coverag": [32, 67, 84, 349, 366, 377, 467, 469, 471, 474], "overhead": [32, 34, 74, 85, 100, 104, 129, 136, 185, 249, 258, 267, 290, 305, 337, 339, 341, 349, 350, 364, 379, 381, 383, 399, 425, 429, 459, 460, 461, 462, 464, 468, 470, 471, 472, 473, 476, 477, 478, 479], "py_tracefunc": 32, "pytrace_cal": 32, "pytrace_except": 32, "pytrace_lin": 32, "pytrace_return": 32, "pytrace_c_cal": 32, "pytrace_c_except": 32, "pytrace_c_return": 32, "pytrace_opcod": 32, "transfer": [32, 34, 67, 71, 72, 86, 91, 104, 107, 133, 140, 166, 188, 192, 193, 194, 195, 198, 199, 200, 203, 204, 205, 220, 232, 238, 239, 241, 268, 271, 273, 280, 285, 290, 296, 332, 344, 392, 394, 416, 423, 427, 429, 465, 466, 470, 472, 473, 476, 478], "unwind": [32, 74, 101, 132, 166, 252, 350, 425], "f_trace_lin": [32, 349, 425, 470, 477], "opcod": [32, 67, 187, 261, 296, 297, 349, 425, 462, 463, 465, 466, 469, 471, 474, 476, 477, 478, 479], "f_trace_opcod": [32, 349, 425, 470, 477], "monitor": [32, 67, 85, 96, 99, 100, 121, 123, 128, 129, 134, 159, 183, 251, 266, 305, 312, 326, 335, 349, 396, 463, 465, 476, 477], "setprofil": [32, 139, 280, 349, 362, 447, 461, 469], "pyeval_setprofileallthread": [32, 471], "settrac": [32, 139, 141, 280, 349, 362, 447, 461, 469], "pyeval_settraceallthread": [32, 471], "pyinterpreterstate_head": [32, 461], "head": [32, 62, 77, 100, 103, 133, 147, 148, 152, 175, 197, 237, 238, 239, 242, 285, 291, 305, 315, 330, 331, 335, 338, 373, 381, 392, 410, 459, 461, 473], "pyinterpreterstate_next": [32, 461], "pyinterpreterstate_threadhead": [32, 461], "pythreadstate_next": [32, 461], "pthread": [32, 112, 349, 362, 453, 472], "pythread": 32, "behalf": [32, 123, 330, 423], "supersed": [32, 58, 67, 247, 250, 251, 285, 292, 338, 423, 459, 466, 469, 473, 477], "py_tss_t": [32, 477], "539": [32, 67], "py_limited_api": [32, 55, 56, 58, 60, 469, 470, 472, 477, 479], "py_tss_needs_init": 32, "pythread_tss_alloc": [32, 56, 471], "pythread_tss_fre": [32, 56, 471], "pythread_tss_delet": [32, 56, 471], "unassign": [32, 92, 343], "dangl": [32, 62, 72, 76, 86, 290, 329, 341, 342, 359, 424], "pythread_tss_set": [32, 56, 471], "pythread_tss_get": [32, 56, 471], "pythread_tss_cr": [32, 56], "pythread_tss_is_cr": [32, 56], "repeatedli": [32, 77, 103, 107, 152, 173, 187, 258, 263, 273, 337, 362, 364, 381, 385, 402, 403, 404, 424, 449, 461, 472, 476], "forget": [32, 34, 71, 72, 98, 100, 136, 183, 255, 359, 373, 427, 428, 437, 439, 463, 464, 465, 469, 471, 472, 478], "pythread_create_kei": [32, 56, 471], "pythread_delete_kei": [32, 56, 471], "pythread_set_key_valu": [32, 56, 471, 474], "pythread_get_key_valu": [32, 56, 471], "pythread_delete_key_valu": [32, 56, 471], "pythread_reinittl": [32, 56, 471], "py_preiniti": [33, 41, 58, 471, 478], "lc_ctype": [33, 58, 86, 106, 263, 290, 341, 452, 476, 477], "unchang": [33, 41, 77, 92, 100, 103, 109, 118, 141, 148, 152, 157, 164, 168, 173, 174, 183, 205, 227, 252, 255, 258, 263, 266, 268, 290, 291, 299, 315, 316, 334, 337, 341, 342, 355, 366, 381, 382, 383, 391, 424, 425, 427, 432, 437, 443, 449, 458, 461, 463, 464, 465, 466, 467, 468, 471, 472, 473, 476, 477], "587": [33, 67, 100, 338, 470], "pyconfig_initpythonconfig": [33, 478], "pyconfig_setbytesargv": [33, 478], "pystatus_except": [33, 471, 478], "goto": [33, 34, 67, 152, 381, 453, 468, 470, 472], "pyconfig_clear": [33, 478], "pystatus_isexit": [33, 478], "exitcod": [33, 280, 290, 345, 359], "py_exitstatusexcept": [33, 478], "pywidestringlist_append": [33, 478], "pywidestringlist_insert": [33, 478], "err_msg": [33, 337, 349, 359], "pystatus_ok": [33, 478], "pystatus_error": [33, 478], "pystatus_nomemori": [33, 478], "pystatus_exit": [33, 478], "pystatus_iserror": [33, 478], "wherea": [33, 72, 84, 85, 100, 123, 128, 134, 164, 237, 259, 264, 280, 316, 326, 349, 366, 386, 392, 396, 399, 429, 438, 458, 467, 469, 479], "preconfigur": [33, 386], "pypreconfig_initpythonconfig": [33, 478], "preconfig": [33, 478], "pypreconfig_initisolatedconfig": [33, 478], "pymem_allocator_not_set": 33, "pymem_allocator_default": 33, "pymem_allocator_debug": 33, "pymem_allocator_malloc": 33, "pymem_allocator_malloc_debug": 33, "pymem_allocator_pymalloc": 33, "pymem_allocator_pymalloc_debug": 33, "configure_local": 33, "coerce_c_local": 33, "coerce_c_locale_warn": 33, "coerc": [33, 63, 97, 164, 172, 183, 192, 193, 202, 259, 263, 340, 342, 452, 459, 467, 470, 477], "dev_mod": [33, 185, 349], "utf8_mod": [33, 290, 349, 471], "filesystem_encod": [33, 58, 86, 290, 349, 471], "filesystem_error": [33, 58, 86, 290, 349, 471], "ifdef": [33, 72, 453, 459], "py_preinitializefromarg": [33, 478], "py_preinitializefrombytesarg": [33, 478], "utf8": [33, 57, 119, 148, 155, 200, 202, 204, 205, 245, 290, 302, 311, 332, 349, 408, 410, 452, 458, 475, 477], "pythonutf8": [33, 290, 349, 452, 458, 477], "_pyruntim": [33, 479], "pre": [33, 34, 72, 86, 99, 100, 103, 108, 183, 188, 200, 205, 223, 233, 242, 247, 255, 258, 265, 289, 293, 321, 328, 335, 337, 349, 350, 355, 378, 383, 384, 386, 392, 396, 424, 433, 441, 452, 453, 456, 458, 459, 462, 463, 464, 466, 471, 472, 474, 475, 476, 477, 479], "pyconfig_initisolatedconfig": [33, 478], "pyconfig_setstr": [33, 478], "config_str": 33, "pyconfig_setbytesstr": [33, 58, 478], "pyconfig_setargv": [33, 478], "pyconfig_setwidestringlist": 33, "pyconfig_read": [33, 58, 86, 290, 349, 470, 478], "stripp": 33, "tune": [33, 77, 223, 224, 240, 289, 316, 319, 338, 421, 459, 462, 470, 471], "strip": [33, 84, 94, 103, 117, 119, 155, 164, 167, 174, 175, 180, 187, 190, 197, 205, 206, 220, 222, 225, 242, 244, 265, 266, 281, 291, 305, 323, 328, 332, 335, 340, 341, 345, 353, 355, 359, 378, 379, 383, 391, 397, 404, 410, 419, 437, 438, 439, 440, 459, 462, 467, 468, 472, 475], "unsaf": [33, 56, 62, 74, 84, 118, 146, 164, 185, 280, 290, 306, 324, 328, 337, 349, 355, 385, 386, 392, 395, 452, 462, 469, 470, 471, 475, 477], "py": [33, 34, 50, 67, 72, 75, 78, 84, 85, 86, 88, 93, 94, 96, 99, 100, 101, 106, 108, 109, 110, 113, 114, 117, 119, 122, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 172, 173, 175, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 208, 211, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 273, 276, 278, 281, 283, 285, 286, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 359, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 427, 429, 435, 445, 446, 447, 448, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "resolv": [33, 67, 74, 77, 84, 85, 86, 99, 100, 117, 123, 125, 136, 164, 173, 180, 188, 190, 208, 247, 248, 249, 252, 256, 264, 265, 289, 290, 291, 293, 299, 300, 305, 311, 329, 334, 338, 345, 349, 382, 383, 385, 386, 396, 408, 409, 410, 412, 413, 414, 426, 437, 450, 452, 458, 461, 469, 473, 474, 475, 476, 477, 478], "pythonsafepath": [33, 324, 349, 452, 470], "base_exec_prefix": [33, 331, 349, 396, 447], "base_execut": 33, "_base_execut": 33, "__pyvenv_launcher__": 33, "base_prefix": [33, 227, 331, 349, 396, 447], "configure_c_stdio": 33, "warn_default_encod": [33, 255, 349, 452, 469], "encodingwarn": [33, 67, 115, 210, 452], "textiowrapp": [33, 117, 146, 185, 215, 222, 231, 247, 250, 255, 267, 345, 357, 419, 465, 469, 473, 474, 476, 477], "opt": [33, 56, 67, 71, 115, 164, 187, 210, 225, 247, 289, 296, 303, 335, 429, 447, 452, 453, 462, 465, 466, 471, 472, 474, 475, 477], "code_debug_rang": 33, "caret": [33, 103, 174, 175, 190, 316, 378], "pythonnodebugrang": [33, 425, 452, 470], "no_debug_rang": [33, 425, 452, 470], "check_hash_pycs_mod": 33, "check_sourc": 33, "552": [33, 67, 247, 308, 470], "determinist": [33, 67, 100, 103, 166, 182, 185, 247, 252, 315, 334, 337, 356, 410, 472, 477, 479], "dev": [33, 67, 78, 79, 96, 100, 123, 185, 226, 266, 268, 269, 290, 291, 292, 304, 330, 345, 349, 352, 435, 452, 459, 460, 461, 462, 463, 464, 465, 466, 472, 473, 475], "pythondevmod": [33, 185, 452, 477], "dump_ref": 33, "dump": [33, 41, 67, 72, 93, 99, 100, 119, 139, 148, 169, 172, 182, 185, 251, 259, 263, 266, 271, 281, 283, 290, 294, 296, 301, 305, 330, 337, 339, 378, 379, 404, 410, 416, 443, 452, 453, 459, 460, 461, 462, 465, 466, 468, 473, 474, 475, 476, 479], "aliv": [33, 62, 84, 173, 223, 280, 281, 302, 341, 359, 362, 399, 424, 425, 449, 452, 460, 466, 467, 472, 474], "pythondumpref": [33, 62, 452, 453, 478], "py_trace_ref": [33, 34, 62, 453, 469, 478, 479], "faulthandl": [33, 67, 173, 182, 185, 251, 294, 330, 359, 378, 452], "pythonfaulthandl": [33, 185, 211, 452, 473], "getfilesystemencod": [33, 65, 86, 106, 117, 290, 349, 355, 418, 447, 476], "android": [33, 63, 86, 263, 300, 349, 359, 476, 477, 478], "vxwork": [33, 63, 86, 170, 263, 290, 298, 319, 469], "nl_langinfo": [33, 263, 461], "codeset": [33, 155, 227, 263, 461, 470, 478], "announc": [33, 79, 106, 110, 290, 451, 473], "mbstowc": 33, "latin1": [33, 133, 155, 296, 311, 464, 473, 476, 479], "At": [33, 41, 57, 58, 62, 63, 71, 72, 75, 82, 84, 86, 92, 100, 102, 108, 123, 130, 135, 136, 137, 146, 148, 150, 164, 166, 231, 232, 244, 245, 255, 266, 267, 289, 290, 296, 302, 329, 334, 338, 349, 362, 366, 372, 377, 381, 383, 385, 386, 398, 405, 422, 424, 427, 429, 432, 437, 440, 446, 449, 453, 458, 460, 461, 465, 469, 470, 476, 477], "ansi_x3": 33, "1968": 33, "getfilesystemencodeerror": [33, 86, 349, 447, 476], "surrogateescap": [33, 58, 63, 106, 155, 198, 205, 215, 222, 290, 334, 337, 349, 355, 452, 472, 475, 476, 477], "chosen": [33, 44, 72, 86, 93, 99, 103, 163, 183, 208, 222, 232, 254, 265, 280, 281, 289, 296, 315, 323, 334, 338, 344, 349, 357, 372, 395, 412, 425, 448, 452, 458, 462, 463, 467], "randomli": [33, 83, 100, 123, 170, 280, 305, 315, 323, 359, 461, 464, 474], "import_tim": 33, "importtim": [33, 452, 477], "pythonprofileimporttim": [33, 452, 477], "install_signal_handl": [33, 469], "repl": [33, 111, 120, 188, 316, 349, 452, 469, 478], "int_max_str_digit": [33, 341, 349, 452], "4300": [33, 341, 470], "int_info": [33, 341, 349, 447, 453, 468], "default_max_str_digit": [33, 341, 349], "640": [33, 341, 381], "str_digits_check_threshold": [33, 341, 349], "pythonintmaxstrdigit": [33, 341, 349, 452], "prompt": [33, 65, 67, 78, 84, 85, 86, 109, 111, 117, 139, 152, 154, 170, 173, 186, 188, 190, 197, 204, 220, 222, 226, 244, 245, 251, 294, 310, 317, 332, 338, 341, 345, 349, 358, 362, 365, 378, 381, 392, 396, 429, 433, 435, 438, 441, 445, 446, 447, 450, 452, 458, 462, 465, 469, 470, 472, 474, 476, 477, 478, 479], "malloc_stat": 33, "statist": [33, 41, 67, 77, 79, 92, 182, 223, 224, 251, 272, 285, 287, 305, 315, 329, 338, 349, 364, 377, 441, 448, 451, 452, 453, 459, 460, 464, 466, 470, 472, 473], "pythonmallocstat": [33, 41, 452], "platlibdir": [33, 349, 351, 452, 453, 479], "pythonplatlibdir": [33, 351, 452], "lib": [33, 34, 71, 76, 78, 83, 85, 88, 94, 96, 109, 110, 113, 114, 117, 119, 120, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 178, 180, 181, 183, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 273, 276, 278, 280, 281, 283, 285, 286, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 313, 314, 315, 316, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 427, 435, 447, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "layout": [33, 41, 60, 62, 67, 75, 98, 99, 100, 155, 186, 210, 264, 268, 338, 344, 352, 365, 366, 370, 395, 425, 429, 442, 443, 458, 465, 471, 473, 474], "virtual": [33, 34, 67, 72, 84, 86, 100, 102, 108, 113, 158, 173, 174, 176, 189, 207, 222, 223, 239, 248, 251, 252, 277, 290, 330, 334, 337, 338, 349, 352, 355, 365, 382, 392, 404, 424, 425, 426, 429, 437, 442, 455, 459, 465, 470, 471, 472, 474, 476, 477, 478, 481], "pythonpath_env": 33, "delim": 33, "pathsep": [33, 290, 331, 377, 400, 422, 452, 453], "peephol": [33, 463, 464, 472, 477], "__debug__": [33, 65, 165, 185, 222, 247, 433, 447, 452, 462, 469], "assert": [33, 34, 48, 65, 67, 100, 105, 109, 113, 119, 136, 140, 165, 178, 180, 181, 184, 185, 188, 190, 210, 222, 225, 252, 280, 289, 294, 296, 316, 337, 341, 359, 382, 383, 385, 386, 397, 399, 408, 422, 423, 424, 427, 428, 430, 432, 447, 452, 453, 462, 463, 465, 468, 472, 474, 475, 478, 479], "py_debug": [33, 34, 359, 453, 469, 478], "pythonexecut": [33, 452], "with_next_framework": 33, "python3": [33, 56, 71, 88, 96, 100, 108, 109, 197, 205, 293, 331, 341, 351, 352, 379, 396, 418, 435, 445, 450, 452, 453, 457, 458, 466, 469, 471, 472, 474, 476, 478, 479], "pycache_prefix": [33, 160, 349, 447, 452, 478], "pythonpycacheprefix": [33, 349, 452, 478], "run_command": [33, 139, 452], "run_filenam": 33, "skip_source_first_lin": 33, "run_modul": [33, 139, 321, 452], "show_ref_count": 33, "showrefcount": [33, 452, 453, 474], "py_ref_debug": [33, 453], "no_sit": [33, 349, 472], "invert": [33, 92, 93, 94, 119, 155, 183, 188, 208, 288, 341, 425, 427, 428, 470], "cmd": [33, 67, 85, 100, 117, 123, 134, 139, 141, 174, 212, 219, 220, 251, 290, 294, 298, 305, 329, 332, 345, 377, 396, 452, 471, 472], "hack": [33, 83, 94, 98, 190, 328, 392, 452, 459, 460, 461, 471], "pythontracemalloc": [33, 379, 452], "perf_profil": 33, "trampolin": [33, 349, 471], "pythonperfsupport": [33, 101, 452, 471], "warnopt": [33, 58, 349, 359, 397, 447, 471, 477], "filter": [33, 58, 67, 79, 84, 94, 96, 99, 109, 115, 116, 138, 157, 174, 182, 185, 186, 187, 210, 213, 215, 217, 222, 258, 265, 309, 312, 325, 329, 334, 359, 385, 386, 396, 418, 422, 427, 439, 447, 449, 452, 453, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479], "lowest": [33, 41, 56, 99, 119, 131, 183, 188, 208, 218, 233, 275, 286, 313, 338, 340, 341, 345, 362, 364, 369, 427, 439, 449, 459, 464, 476], "highest": [33, 78, 92, 93, 99, 119, 130, 164, 208, 224, 264, 275, 296, 297, 323, 325, 330, 337, 338, 340, 341, 349, 363, 369, 427, 439, 465, 473], "prioriti": [33, 67, 92, 121, 139, 164, 179, 247, 254, 258, 259, 266, 290, 296, 313, 319, 322, 325, 338, 341, 345, 353, 362, 372, 425, 427, 439, 449, 461, 462, 465, 472, 473, 474, 476, 478], "revers": [33, 37, 67, 72, 79, 91, 92, 94, 104, 105, 106, 118, 137, 138, 155, 157, 158, 166, 172, 174, 178, 180, 183, 188, 208, 211, 222, 233, 252, 256, 258, 271, 280, 286, 288, 290, 293, 305, 311, 316, 328, 337, 341, 375, 379, 382, 383, 385, 391, 399, 425, 437, 438, 439, 440, 447, 459, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 481], "pythonwarn": [33, 185, 397, 452, 466, 472, 477], "dont_write_bytecod": [33, 349, 447, 465, 472], "xoption": [33, 58, 452, 470], "_xoption": [33, 58, 349, 447, 452], "show_alloc_count": [33, 476, 479], "init_python": 33, "my_program": 33, "pysys_getobject": [33, 56, 58, 98, 470], "my_execut": 33, "unspecifi": [33, 94, 102, 123, 146, 173, 190, 222, 228, 255, 256, 267, 272, 284, 290, 293, 296, 311, 334, 363, 373, 383], "coercion": [33, 67, 222, 290, 342, 425, 452, 453, 464, 466, 481], "538": [33, 67, 263, 452, 453], "540": [33, 67, 263, 290], "pythoncoerceclocal": [33, 290, 452, 453, 477], "softwarepythonpythoncorex": 33, "ypythonpath": 33, "hkey_current_us": [33, 402, 458], "hkey_local_machin": [33, 402, 458], "unset": [33, 58, 62, 135, 188, 268, 290, 292, 341, 349, 359, 395, 429, 465, 466, 477], "overridden": [33, 77, 84, 92, 93, 100, 113, 117, 141, 152, 157, 158, 164, 180, 205, 208, 222, 227, 237, 240, 241, 242, 247, 252, 255, 264, 266, 289, 290, 294, 304, 310, 321, 335, 337, 338, 341, 345, 349, 355, 362, 373, 383, 385, 392, 396, 397, 404, 425, 427, 429, 440, 452, 465, 466, 469, 473, 474, 478, 479], "py_main": [33, 56, 65, 458, 477], "pyvenv": [33, 331, 351, 396, 458, 473, 474, 476, 478], "cfg": [33, 84, 164, 265, 331, 351, 381, 396, 458, 465, 473, 475, 476], "_pth": [33, 67, 277, 458, 476, 477], "pybuilddir": 33, "txt": [33, 34, 67, 77, 94, 100, 106, 117, 157, 163, 166, 185, 190, 205, 215, 217, 222, 227, 228, 231, 232, 240, 244, 248, 251, 253, 255, 275, 285, 289, 290, 293, 296, 329, 341, 345, 349, 355, 366, 384, 389, 396, 410, 418, 419, 432, 437, 440, 448, 449, 450, 453, 458, 459, 465, 466, 468, 472, 473, 474, 475, 476, 478], "432": [33, 477], "bare": [33, 86, 99, 100, 119, 164, 200, 289, 332, 428, 456, 458, 464, 467, 470, 478], "importlib": [33, 67, 84, 86, 96, 100, 102, 109, 222, 244, 251, 252, 265, 277, 299, 308, 321, 349, 359, 379, 382, 419, 420, 425, 430, 433, 447, 458, 468, 470, 472, 478, 481], "_init_main": 33, "_py_initializemain": 33, "move": [33, 69, 77, 83, 84, 89, 90, 91, 92, 97, 100, 104, 107, 109, 117, 119, 139, 152, 157, 173, 174, 176, 178, 180, 193, 202, 203, 215, 224, 233, 244, 258, 266, 268, 275, 290, 294, 308, 315, 329, 359, 363, 368, 372, 373, 381, 385, 387, 391, 392, 396, 410, 423, 436, 448, 456, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "mayb": [33, 72, 93, 94, 104, 268, 397, 428, 431, 436, 469, 470], "meta_path": [33, 86, 139, 247, 248, 299, 349, 429, 433, 447, 458, 462, 473, 476], "motiv": [33, 92, 355, 425, 427, 460, 462, 463, 469, 473, 478], "anytim": [33, 148, 338, 341, 366], "varieti": [34, 63, 72, 74, 77, 79, 86, 94, 98, 106, 107, 108, 117, 155, 179, 183, 191, 220, 222, 227, 270, 289, 290, 305, 341, 345, 366, 370, 383, 404, 429, 463, 464, 465, 466, 470, 474], "usabl": [34, 38, 47, 53, 55, 56, 58, 62, 63, 75, 77, 79, 84, 86, 97, 102, 104, 105, 123, 148, 155, 173, 174, 206, 222, 242, 247, 256, 265, 273, 280, 290, 291, 300, 334, 338, 341, 342, 345, 407, 425, 427, 429, 437, 447, 461, 462, 463, 464, 470, 471, 472, 476, 477], "breviti": [34, 74, 289, 438], "techniqu": [34, 67, 77, 84, 86, 94, 100, 105, 106, 148, 157, 158, 190, 198, 223, 290, 305, 316, 337, 351, 358, 372, 383, 386, 387, 429, 438, 442, 443, 449, 472, 478], "understood": [34, 71, 104, 148, 172, 240, 265, 271, 280, 290, 294, 328, 341, 364, 394, 418, 423, 425, 437], "cookbook": [34, 67, 73, 84, 95, 99, 107, 208, 264, 265, 266, 272, 364, 451, 472], "autom": [34, 67, 75, 83, 86, 102, 119, 184, 220, 251, 285, 362, 385, 436, 460, 466, 467, 474, 478], "extent": [34, 130, 152, 168, 232, 255, 275, 373, 381, 423, 468], "familiar": [34, 75, 85, 86, 88, 91, 94, 97, 100, 103, 111, 154, 191, 225, 254, 259, 290, 337, 376, 385, 429, 438, 441, 443, 456, 460, 461, 462, 465], "stdio": [34, 71, 72, 101, 290, 465, 470], "_py": [34, 478], "confus": [34, 62, 71, 77, 83, 84, 91, 98, 100, 102, 103, 105, 107, 110, 113, 154, 173, 183, 187, 190, 222, 256, 266, 289, 290, 296, 300, 316, 330, 355, 386, 392, 425, 427, 433, 437, 438, 459, 460, 461, 462, 463, 464, 466, 468, 469, 471, 472, 474, 476, 477, 478], "reader": [34, 67, 77, 79, 90, 97, 103, 104, 106, 123, 133, 146, 155, 157, 167, 193, 197, 199, 202, 214, 222, 239, 247, 250, 255, 268, 269, 280, 285, 289, 296, 330, 334, 338, 344, 384, 396, 407, 410, 411, 412, 413, 414, 425, 431, 437, 442, 452, 462, 464, 467, 469, 475], "jeopard": 34, "portabl": [34, 64, 67, 72, 77, 79, 80, 100, 104, 106, 115, 128, 173, 174, 212, 213, 216, 246, 247, 251, 263, 272, 275, 290, 295, 296, 300, 303, 334, 339, 355, 363, 396, 400, 418, 445, 458, 459, 462, 468, 473, 477, 478], "pythonvers": 34, "version_info": [34, 79, 98, 102, 110, 119, 337, 349, 352, 447, 459, 466, 468, 470, 471, 472, 473], "parent": [34, 58, 60, 62, 67, 84, 86, 87, 97, 99, 100, 111, 115, 119, 130, 157, 174, 186, 222, 224, 233, 245, 247, 250, 252, 264, 275, 278, 280, 290, 291, 293, 299, 302, 306, 309, 311, 330, 334, 335, 337, 338, 345, 349, 366, 368, 370, 373, 382, 386, 387, 392, 396, 407, 410, 418, 425, 429, 437, 447, 461, 462, 463, 464, 465, 469, 471, 473, 474, 476, 477], "pythonx": [34, 71, 331, 341, 349, 396], "closer": [34, 93, 328, 329, 387, 397, 437, 441, 466, 467, 475], "py_return_non": [34, 45, 72, 463], "pymodinit_func": [34, 72, 75, 453, 462], "pyinit": [34, 70], "linkag": [34, 67, 73, 85, 300], "pyinit_": [34, 70, 453], "pymoduledef": [34, 44, 56, 60, 70, 71, 72, 75, 98, 479], "spam_modul": [34, 72], "pymoduledef_head_init": [34, 44, 71, 72, 75], "m_name": [34, 44, 75], "spam": [34, 44, 72, 76, 100, 103, 107, 117, 167, 172, 173, 215, 222, 223, 227, 239, 240, 242, 247, 252, 255, 265, 293, 304, 310, 316, 318, 327, 331, 337, 341, 345, 355, 378, 382, 383, 386, 387, 392, 410, 419, 425, 427, 429, 437, 438, 440, 443, 446, 447, 459, 465, 475], "pyinit_spam": [34, 72], "py_ab": 34, "py_always_inlin": 34, "ask": [34, 41, 67, 77, 84, 85, 86, 91, 100, 103, 158, 191, 230, 232, 240, 244, 255, 266, 289, 294, 302, 307, 316, 329, 336, 338, 341, 370, 383, 392, 409, 410, 411, 419, 427, 429, 433, 440, 451, 458, 463, 464, 465, 466, 467, 470], "inlin": [34, 51, 56, 57, 59, 63, 67, 86, 164, 187, 188, 193, 194, 200, 202, 234, 305, 316, 376, 385, 453, 462, 464, 469, 472, 476, 478], "critic": [34, 38, 74, 79, 86, 99, 100, 123, 188, 247, 264, 265, 266, 289, 403, 429, 436, 448, 449, 462, 464, 465, 468, 470, 472, 475], "msc": [34, 85], "blindli": [34, 341, 474], "wors": [34, 84, 103, 104, 123, 180, 185, 259, 471, 473, 474], "smarter": [34, 387, 468, 472], "cost": [34, 71, 77, 84, 157, 164, 180, 185, 187, 223, 232, 240, 247, 290, 341, 364, 366, 378, 383, 387, 419, 425, 459, 462, 465, 466, 470, 474], "py_charmask": 34, "128": [34, 63, 86, 97, 100, 106, 138, 157, 174, 183, 223, 232, 256, 281, 290, 337, 338, 381, 395, 432, 446, 464, 471, 475], "127": [34, 57, 63, 100, 104, 106, 123, 130, 133, 167, 242, 244, 256, 280, 290, 335, 338, 341, 345, 349, 359, 379, 464, 475], "255": [34, 63, 67, 86, 91, 97, 106, 110, 155, 157, 174, 188, 222, 232, 256, 341, 344, 381, 427, 470, 473, 475, 477, 481], "py_deprec": [34, 478], "pyapi_func": [34, 453, 462, 478], "py_oldfunct": [34, 478], "msvc": [34, 62, 76, 85, 173, 463, 478], "py_getenv": 34, "getenv": [34, 290, 303], "py_max": 34, "py_member_s": 34, "py_min": 34, "py_no_inlin": 34, "reduc": [34, 41, 55, 56, 74, 77, 84, 94, 109, 123, 130, 174, 180, 183, 223, 224, 232, 234, 244, 255, 258, 290, 296, 305, 315, 323, 325, 338, 341, 359, 362, 386, 399, 406, 410, 418, 432, 441, 447, 453, 458, 459, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "consumpt": [34, 74, 119, 252, 296, 319, 329, 349, 443, 472, 473], "lto": [34, 453, 470], "pgo": [34, 359, 453, 465, 476, 479], "heavili": [34, 108, 181, 247, 332, 424, 460, 476, 477], "33720": 34, "py_stringifi": 34, "123": [34, 72, 98, 100, 102, 103, 119, 183, 218, 222, 258, 265, 334, 341, 344, 427, 437, 443, 459, 461, 465, 466, 468, 472], "py_unreach": [34, 477], "cover": [34, 56, 73, 75, 78, 79, 84, 91, 93, 95, 98, 99, 100, 103, 104, 106, 108, 130, 166, 188, 190, 191, 205, 240, 265, 280, 289, 315, 316, 332, 334, 341, 345, 366, 377, 381, 383, 385, 391, 407, 421, 424, 431, 442, 449, 452, 459, 460, 461, 464, 467, 469, 470, 471, 473, 474], "tempt": [34, 75, 100, 102, 103, 364, 439, 448], "__builtin_unreach": 34, "_py_no_return": 34, "better": [34, 67, 71, 72, 74, 75, 77, 79, 83, 84, 92, 94, 98, 100, 102, 103, 104, 108, 111, 117, 123, 135, 138, 156, 157, 173, 187, 190, 208, 212, 220, 223, 225, 231, 233, 244, 258, 263, 268, 280, 289, 290, 302, 305, 325, 340, 344, 345, 362, 363, 366, 373, 381, 383, 385, 386, 387, 394, 410, 421, 437, 438, 440, 441, 443, 447, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479], "py_unus": [34, 57, 75], "unus": [34, 57, 62, 75, 88, 123, 146, 174, 227, 255, 256, 279, 280, 297, 310, 329, 335, 337, 342, 346, 355, 359, 398, 432, 458, 461, 465, 470, 474, 477, 479], "silenc": [34, 58, 117, 222, 320, 329, 394, 466, 472, 474, 479], "pydoc_strvar": [34, 44, 98, 453], "pop_doc": 34, "rightmost": [34, 144, 155, 157, 174, 183, 258, 290, 341, 427, 463], "deque_method": 34, "pycfunct": [34, 43, 56, 57, 72, 74, 75, 98, 463], "deque_pop": 34, "meth_noarg": [34, 57, 75, 461, 462], "pydoc_str": [34, 57, 62, 75], "pysqlite_row_method": 34, "pysqlite_row_kei": 34, "row": [34, 67, 72, 84, 87, 147, 172, 222, 258, 295, 366, 373, 375, 381, 432, 439, 446, 464, 468, 472, 475, 476], "assign": [34, 37, 53, 60, 62, 67, 72, 74, 75, 78, 79, 84, 86, 87, 88, 92, 93, 94, 106, 109, 112, 117, 118, 119, 123, 136, 155, 157, 164, 165, 167, 168, 173, 174, 178, 183, 188, 193, 199, 200, 202, 205, 208, 209, 210, 222, 223, 233, 240, 247, 264, 268, 275, 280, 281, 288, 289, 290, 293, 294, 296, 303, 311, 316, 327, 328, 334, 337, 338, 340, 341, 344, 348, 349, 357, 359, 361, 362, 373, 378, 383, 384, 385, 386, 397, 408, 410, 419, 422, 424, 425, 426, 428, 429, 430, 432, 437, 438, 439, 445, 446, 447, 453, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 475, 476, 477, 479, 481], "sole": [34, 56, 77, 84, 88, 93, 102, 158, 165, 183, 252, 280, 281, 337, 341, 361, 382, 383, 399, 423, 425, 427, 440, 466, 469, 470, 473, 474, 475, 477], "explain": [34, 41, 44, 62, 72, 74, 75, 76, 78, 84, 86, 88, 91, 94, 97, 99, 100, 102, 103, 106, 107, 111, 122, 148, 168, 173, 190, 210, 222, 232, 240, 242, 244, 252, 258, 289, 294, 340, 341, 366, 373, 385, 386, 390, 421, 427, 436, 437, 441, 450, 451, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "hierarchi": [34, 44, 67, 84, 96, 99, 100, 113, 115, 141, 183, 222, 247, 251, 252, 259, 264, 265, 286, 287, 296, 299, 326, 330, 337, 341, 349, 366, 372, 373, 383, 385, 407, 410, 424, 427, 429, 430, 433, 437, 443, 462, 464, 467, 481], "pylist_check": [34, 37, 78], "todai": [34, 71, 93, 106, 164, 180, 208, 285, 292, 337, 387, 416, 432, 441, 448, 460, 462, 463, 465, 478], "obviou": [34, 51, 62, 77, 85, 94, 99, 100, 103, 174, 183, 233, 292, 296, 305, 320, 344, 345, 359, 376, 387, 410, 458, 459, 463, 464, 470, 476], "solut": [34, 67, 72, 77, 80, 83, 84, 86, 92, 93, 94, 98, 100, 102, 103, 104, 106, 108, 129, 178, 183, 233, 244, 251, 296, 316, 330, 335, 340, 352, 357, 381, 387, 423, 429, 447, 448, 450, 451, 458, 459, 461, 462, 463, 464, 465, 466, 468, 472, 478], "incref": [34, 62], "sizeof": [34, 41, 62, 75, 173, 300, 344, 349, 386], "theori": [34, 67, 83, 179, 315, 316, 423, 474, 475], "down": [34, 50, 51, 71, 75, 84, 85, 86, 94, 99, 100, 102, 104, 123, 131, 133, 136, 148, 157, 174, 176, 188, 190, 209, 233, 242, 244, 264, 272, 280, 290, 293, 294, 305, 306, 313, 315, 316, 325, 330, 334, 335, 338, 349, 350, 368, 373, 381, 385, 391, 404, 437, 441, 449, 452, 459, 461, 462, 466, 470, 471, 475, 476, 477, 478, 479], "cancel": [34, 67, 121, 122, 123, 124, 126, 131, 132, 135, 138, 148, 163, 166, 174, 175, 186, 209, 211, 278, 311, 322, 330, 362, 368, 370, 372, 373, 381, 385, 424, 427, 435, 441, 470, 472, 477, 478, 479], "we": [34, 56, 63, 71, 72, 74, 75, 77, 79, 82, 84, 85, 87, 88, 90, 92, 93, 94, 99, 100, 101, 103, 104, 105, 106, 107, 111, 117, 119, 123, 126, 130, 131, 133, 136, 141, 147, 151, 152, 154, 157, 163, 164, 166, 167, 173, 180, 187, 188, 191, 193, 197, 199, 202, 205, 208, 210, 229, 232, 233, 239, 240, 244, 248, 258, 263, 265, 266, 280, 281, 286, 289, 290, 293, 296, 316, 329, 330, 335, 337, 338, 340, 341, 342, 344, 345, 359, 364, 366, 373, 375, 379, 381, 383, 385, 386, 387, 391, 392, 395, 397, 399, 404, 408, 410, 416, 419, 421, 423, 424, 425, 427, 428, 429, 437, 438, 439, 440, 441, 443, 444, 446, 453, 459, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 478, 479], "aris": [34, 86, 183, 255, 264, 265, 271, 296, 340, 382, 423, 427, 449, 461, 463, 472, 478], "pitfal": [34, 67, 103, 116, 122, 470], "conceiv": [34, 296, 355, 437], "innoc": 34, "flow": [34, 67, 72, 94, 127, 130, 133, 174, 175, 183, 261, 345, 350, 356, 383, 424, 426, 427, 439, 442, 447, 459, 461, 462, 464, 465, 475], "pyobject_": [34, 44, 62, 464], "pynumber_": 34, "pysequence_": 34, "pymapping_": 34, "soon": [34, 83, 91, 102, 103, 104, 106, 107, 127, 133, 136, 190, 225, 229, 258, 280, 290, 294, 341, 357, 359, 381, 383, 408, 424, 425, 439, 440, 462, 464, 471, 474, 479], "term": [34, 67, 72, 79, 86, 88, 92, 94, 102, 113, 136, 174, 183, 206, 210, 218, 232, 240, 247, 254, 255, 259, 264, 271, 272, 286, 289, 293, 296, 305, 340, 341, 342, 346, 359, 363, 366, 382, 396, 398, 399, 404, 411, 424, 428, 429, 437, 447, 463, 465, 466, 468, 471, 473, 474, 476, 478], "ownership": [34, 67, 98, 100, 123, 133, 254, 280, 283, 362, 423, 465, 473], "py_xdecref": [34, 44, 51, 62, 71, 72, 75, 470, 478], "said": [34, 77, 84, 86, 91, 92, 164, 210, 280, 424, 425, 432, 445, 446, 460, 461, 470, 476], "notabl": [34, 67, 79, 86, 98, 134, 188, 263, 280, 281, 330, 337, 350, 388, 397, 422, 451, 460, 461, 462, 463, 464, 465, 466, 468, 469, 481], "pylist_setitem": [34, 37, 56, 72], "pytuple_setitem": [34, 54, 56, 59, 71, 72], "moment": [34, 77, 84, 102, 106, 180, 210, 255, 280, 290, 340, 398, 429, 437, 476], "pytuple_new": [34, 56, 59, 71], "1l": [34, 461, 462, 465, 466], "2l": [34, 459], "grab": [34, 84, 99, 100, 362, 457, 458], "incident": [34, 84, 210, 248, 382, 423, 437], "pysequence_setitem": [34, 37, 53, 56, 62], "pyobject_setitem": [34, 39, 48, 56, 62, 464], "rare": [34, 62, 77, 83, 86, 108, 123, 130, 174, 178, 190, 196, 210, 220, 232, 240, 244, 255, 264, 271, 289, 327, 330, 334, 341, 355, 387, 404, 407, 437, 441, 449, 460, 461, 464, 465, 469, 470, 471, 473], "ii": [34, 67, 72, 78, 157, 173, 338, 404, 423, 424, 442], "friend": [34, 72, 341, 387, 463, 467], "regard": [34, 62, 98, 99, 108, 113, 166, 202, 223, 232, 266, 290, 337, 340, 341, 345, 350, 357, 380, 407, 410, 423, 437, 458, 469], "saner": 34, "set_al": [34, 223], "pyobject_length": [34, 48, 56], "pylong_fromssize_t": [34, 38, 56], "slightli": [34, 74, 77, 78, 79, 84, 94, 99, 100, 105, 107, 166, 172, 183, 193, 227, 233, 248, 255, 289, 290, 291, 294, 304, 305, 315, 338, 341, 381, 387, 391, 392, 429, 433, 437, 448, 459, 461, 462, 463, 464, 465, 466, 470, 472, 474, 475, 477, 479], "fly": [34, 50, 67, 74, 77, 101, 183, 222, 243, 424, 436], "pysequence_getitem": [34, 53, 56, 62, 78], "owner": [34, 72, 92, 96, 100, 178, 209, 280, 290, 293, 329, 339, 355, 423, 425, 449, 476], "realiz": [34, 77, 78, 79, 85, 102, 104, 205, 294, 437, 441, 464, 465], "plumag": [34, 72, 438], "pylist_getitem": [34, 37, 56, 72, 78], "sum_list": 34, "pylist_s": [34, 37, 56, 78, 464], "Not": [34, 57, 62, 67, 76, 79, 84, 88, 107, 119, 126, 135, 136, 164, 181, 183, 185, 188, 209, 210, 211, 223, 224, 239, 240, 242, 245, 247, 267, 268, 271, 275, 280, 290, 293, 315, 325, 328, 329, 341, 359, 383, 385, 396, 399, 404, 408, 410, 419, 423, 425, 428, 432, 438, 453, 462, 463, 464, 465, 467, 469, 471], "pylong_check": [34, 38, 62], "bail": 34, "sum_sequ": 34, "pysequence_length": [34, 53, 56, 78], "role": [34, 86, 155, 338, 410, 467, 472, 478], "integr": [34, 65, 67, 72, 80, 84, 85, 86, 96, 100, 104, 112, 115, 183, 190, 218, 222, 244, 267, 272, 286, 316, 335, 337, 341, 344, 362, 365, 366, 385, 386, 387, 398, 427, 454, 456, 458, 459, 462, 463, 465, 467, 472, 473, 477, 478, 479], "353": [34, 67, 469, 481], "py_ssize_t_max": [34, 46, 55], "largest": [34, 94, 98, 164, 180, 183, 220, 222, 233, 272, 315, 319, 340, 341, 349, 359, 421, 459, 460, 461, 462, 463, 464, 465, 473], "accompani": [34, 188, 268, 332, 334, 425, 460, 472], "claim": [34, 72, 102, 187, 196, 254, 338, 391, 423], "unthread": [34, 459], "loop": [34, 35, 44, 63, 65, 67, 72, 77, 79, 86, 91, 94, 99, 100, 103, 104, 119, 120, 121, 122, 126, 128, 129, 131, 132, 133, 134, 135, 136, 144, 154, 156, 168, 173, 174, 181, 183, 186, 188, 193, 202, 215, 221, 222, 229, 251, 254, 266, 280, 291, 293, 294, 305, 306, 316, 329, 330, 334, 335, 338, 341, 342, 345, 349, 359, 362, 364, 366, 378, 381, 385, 386, 409, 410, 417, 424, 425, 426, 427, 428, 432, 433, 437, 442, 443, 446, 449, 453, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "overwrit": [34, 72, 77, 99, 100, 109, 146, 157, 160, 174, 178, 193, 197, 202, 255, 264, 266, 267, 290, 317, 327, 341, 355, 392, 418, 419, 424, 425, 438, 439, 457, 458, 462, 465, 466, 468, 471, 472, 473, 474], "task": [34, 64, 67, 72, 84, 86, 88, 94, 98, 99, 103, 106, 108, 112, 120, 122, 124, 126, 127, 131, 132, 133, 135, 144, 161, 162, 164, 166, 167, 198, 204, 229, 233, 244, 251, 256, 264, 266, 268, 280, 290, 293, 296, 305, 313, 319, 335, 337, 345, 362, 385, 391, 417, 427, 436, 440, 441, 446, 448, 449, 451, 453, 459, 461, 465, 466, 468, 470, 471, 472, 475, 476, 477, 478, 479], "lose": [34, 41, 93, 103, 164, 180, 183, 208, 210, 237, 240, 258, 266, 268, 315, 316, 337, 345, 459, 466, 472], "remind": [34, 77, 84, 341, 438, 467], "incr_item": 34, "glori": 34, "const_on": 34, "incremented_item": 34, "0l": [34, 72, 344], "pynumber_add": [34, 46, 56], "endors": [34, 423], "illustr": [34, 84, 98, 99, 100, 107, 117, 136, 166, 170, 180, 190, 205, 237, 240, 247, 265, 328, 330, 337, 341, 345, 356, 366, 385, 392, 396, 424, 427, 463, 473], "dispos": [34, 72, 385, 396], "confront": [34, 411, 462], "embedd": [34, 67, 241, 280, 455, 478], "oppos": [34, 75, 86, 91, 103, 119, 123, 154, 198, 205, 220, 244, 334, 340, 392, 429, 465, 475], "guess": [34, 83, 88, 155, 164, 181, 190, 197, 203, 206, 242, 247, 252, 263, 273, 305, 323, 392, 404, 431, 437, 446, 453, 462, 472], "shell": [34, 67, 72, 75, 78, 79, 84, 85, 86, 91, 94, 100, 108, 121, 123, 127, 134, 148, 152, 161, 164, 165, 174, 190, 217, 219, 228, 251, 252, 259, 269, 281, 285, 289, 290, 291, 306, 310, 337, 347, 349, 351, 359, 365, 366, 381, 385, 396, 397, 402, 435, 436, 444, 445, 446, 447, 448, 450, 452, 453, 456, 457, 458, 459, 461, 463, 466, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "fallback": [34, 67, 123, 160, 165, 181, 214, 227, 296, 329, 349, 355, 359, 373, 403, 425, 427, 429, 469, 471, 472, 478], "front": [34, 37, 103, 157, 166, 198, 205, 244, 254, 258, 293, 299, 387, 392, 397, 404, 420, 425, 427, 439, 452, 459, 462, 464, 466], "steer": [34, 110, 381, 460, 463, 470, 472], "getpath": 34, "tend": [34, 77, 84, 98, 146, 187, 223, 302, 305, 340, 437, 468], "specialbuild": [34, 453], "remaind": [34, 46, 74, 96, 103, 152, 180, 183, 205, 222, 254, 258, 265, 272, 289, 291, 293, 316, 341, 363, 366, 385, 427, 441, 446, 465, 477], "pydebug": [34, 349, 359, 453, 462, 469, 474], "_debug": 34, "doubli": [34, 62, 84, 466], "pyiter_check": [35, 56, 62], "pyiter_next": [35, 56, 62], "pyaiter_check": [35, 56], "asynciter": [35, 48, 158, 341, 383, 475], "pyobject_getit": [35, 48, 54, 56, 62], "pysendresult": [35, 62], "enum": [35, 41, 67, 95, 117, 160, 179, 238, 251, 252, 259, 305, 308, 316, 330, 338, 341, 382, 425, 438, 473], "pyiter_send": [35, 56, 62, 469], "presult": 35, "pygen_return": 35, "pygen_next": 35, "pygen_error": 35, "__getitem__": [36, 39, 53, 62, 63, 67, 79, 86, 96, 100, 105, 113, 157, 158, 173, 193, 200, 202, 208, 215, 222, 268, 280, 288, 316, 341, 342, 383, 386, 387, 404, 407, 409, 410, 424, 427, 449, 461, 462, 463, 467, 470, 471, 472, 476, 478], "pyseqiter_typ": [36, 56], "pyseqiter_new": [36, 56], "pyseqiter_check": 36, "seq": [36, 63, 84, 157, 188, 217, 222, 258, 288, 315, 341, 459, 463, 470, 472], "subscript": [36, 62, 67, 86, 157, 173, 188, 210, 244, 261, 341, 383, 425, 433, 437, 446, 452, 462, 465, 469, 470, 471, 479], "pycalliter_typ": [36, 56], "pycalliter_new": [36, 56], "pycalliter_check": 36, "pylist_typ": [37, 56, 75], "pylist_checkexact": 37, "pylist_get_s": 37, "pylist_get_item": [37, 56], "pylist_set_item": [37, 469], "pylist_insert": [37, 56], "pylist_append": [37, 56], "pylist_getslic": [37, 56], "pylist_setslic": [37, 56], "itemlist": 37, "pylist_sort": [37, 56], "sort": [37, 67, 75, 76, 79, 83, 85, 86, 88, 94, 95, 107, 109, 117, 148, 157, 164, 170, 173, 179, 181, 183, 187, 190, 205, 222, 223, 228, 229, 233, 245, 248, 252, 256, 258, 259, 263, 268, 280, 288, 289, 290, 293, 301, 304, 305, 313, 315, 316, 325, 332, 337, 340, 341, 355, 359, 379, 381, 385, 392, 404, 407, 410, 419, 425, 427, 437, 438, 439, 447, 449, 458, 461, 462, 463, 464, 465, 466, 467, 472, 474, 475, 477, 478, 479], "pylist_revers": [37, 56], "pylist_astupl": [37, 56], "pylong_a": 38, "distinguish": [38, 62, 67, 72, 86, 119, 151, 158, 174, 184, 188, 190, 194, 222, 240, 252, 265, 272, 311, 338, 352, 373, 383, 397, 421, 425, 427, 429, 440, 446, 458, 460, 461, 466, 469, 473, 474], "pylongobject": [38, 56, 471], "pylong_typ": [38, 56], "pylong_checkexact": 38, "256": [38, 41, 63, 86, 97, 155, 170, 174, 183, 222, 232, 267, 323, 338, 341, 355, 425, 446, 463, 464, 478, 479], "pylong_fromunsignedlong": [38, 56], "pylong_fromsize_t": [38, 56], "pylong_fromlonglong": [38, 56], "pylong_fromunsignedlonglong": [38, 56], "pylong_fromdoubl": [38, 56, 479], "pylong_fromstr": [38, 56], "radix": [38, 183, 222, 263, 349, 432], "decim": [38, 58, 63, 67, 77, 84, 103, 106, 151, 155, 157, 164, 175, 180, 218, 222, 223, 237, 251, 256, 258, 259, 263, 265, 272, 287, 289, 305, 315, 316, 340, 341, 342, 349, 362, 363, 375, 376, 384, 385, 416, 423, 425, 427, 432, 441, 442, 443, 446, 452, 453, 459, 464, 465, 466, 468, 469, 470, 478, 481], "digit": [38, 58, 63, 77, 84, 98, 103, 104, 106, 114, 138, 140, 143, 151, 155, 157, 170, 175, 180, 183, 190, 218, 220, 222, 232, 234, 241, 256, 263, 265, 272, 285, 290, 316, 318, 323, 337, 338, 341, 342, 349, 359, 363, 364, 366, 375, 384, 385, 391, 392, 395, 410, 421, 423, 432, 441, 446, 453, 459, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476], "to_byt": [38, 341], "from_byt": [38, 341], "pylong_fromunicodeobject": [38, 469], "pylong_fromvoidptr": [38, 56], "pylong_asvoidptr": [38, 56], "__int__": [38, 62, 218, 222, 383, 386, 425, 464, 466, 469, 470, 477, 478], "pylong_aslongandoverflow": [38, 56, 466, 472], "long_min": 38, "pylong_aslonglong": [38, 56], "pylong_aslonglongandoverflow": [38, 56, 466, 472], "llong_max": 38, "llong_min": 38, "pylong_asssize_t": [38, 56], "pylong": [38, 468], "pylong_asunsignedlong": [38, 56], "pylong_assize_t": [38, 56], "pylong_asunsignedlonglong": [38, 56, 468], "pylong_asunsignedlongmask": [38, 56], "reduct": [38, 67, 77, 169, 295, 341, 471, 473], "modulo": [38, 100, 183, 210, 222, 288, 330, 341, 373, 425, 427, 443, 449, 462, 466, 472, 478], "pylong_asunsignedlonglongmask": [38, 56], "ullong_max": 38, "pylong_asdoubl": [38, 56], "assur": [38, 75, 84, 86, 151, 223, 272, 280, 375, 425, 466, 468, 472], "pyunstable_long_iscompact": [38, 471], "compact": [38, 41, 84, 86, 103, 106, 119, 148, 152, 187, 194, 195, 259, 296, 304, 314, 344, 378, 427, 437, 471, 473, 474, 476], "fast": [38, 57, 63, 67, 86, 93, 98, 104, 105, 138, 144, 157, 167, 181, 183, 188, 222, 231, 247, 251, 252, 255, 258, 266, 270, 288, 296, 305, 313, 315, 329, 340, 341, 364, 365, 366, 381, 383, 410, 425, 439, 443, 451, 459, 463, 464, 466, 470, 472, 473, 474, 475, 476, 477, 479], "pyunstable_long_compactvalu": [38, 471], "speedup": [38, 67, 296, 423, 428, 460, 464, 465, 466, 468, 471, 472, 473, 474, 478], "neglig": [38, 341, 423], "pyobject_delitem": [39, 48, 56, 62, 462], "pymapping_check": [39, 56, 62], "pymapping_s": [39, 56, 62], "pymapping_length": [39, 56], "pymapping_getitemstr": [39, 56], "pymapping_setitemstr": [39, 56], "pymapping_delitem": 39, "pymapping_delitemstr": 39, "pymapping_haskei": [39, 56], "pymapping_haskeystr": [39, 56], "pymapping_valu": [39, 56, 477], "pymapping_item": [39, 56, 477], "unmarshal": [40, 271, 416, 462, 464, 476], "py_marshal_vers": [40, 470], "pymarshal_writelongtofil": [40, 470], "pymarshal_writeobjecttofil": [40, 470], "pymarshal_writeobjecttostr": [40, 470], "pymarshal_readlongfromfil": 40, "pymarshal_readshortfromfil": 40, "pymarshal_readobjectfromfil": 40, "pymarshal_readlastobjectfromfil": 40, "aggress": [40, 77, 341, 386, 464], "pymarshal_readobjectfromstr": [40, 470], "aspect": [41, 71, 72, 79, 93, 100, 103, 107, 178, 180, 190, 233, 247, 265, 290, 315, 332, 391, 425, 446, 472, 476], "prealloc": 41, "room": [41, 54, 340, 386, 431, 443, 467], "polici": [41, 56, 67, 79, 100, 108, 120, 123, 128, 132, 191, 193, 197, 198, 200, 202, 203, 204, 210, 222, 240, 282, 290, 332, 335, 338, 396, 453, 458, 460, 463, 466, 469, 471, 474, 475, 476], "adapt": [41, 67, 84, 100, 119, 138, 173, 183, 188, 222, 227, 264, 294, 295, 329, 334, 338, 366, 381, 459, 460, 464, 466, 468, 469, 471, 476], "peculiar": [41, 84, 123, 252, 290, 437], "tradeoff": 41, "deleg": [41, 62, 67, 99, 100, 222, 223, 231, 264, 265, 266, 272, 286, 296, 321, 382, 385, 387, 425, 427, 429, 467, 470, 472, 476, 478, 479, 481], "corrupt": [41, 58, 92, 106, 143, 174, 181, 209, 212, 240, 267, 268, 280, 296, 313, 327, 337, 341, 355, 443, 458, 477, 478], "calloc": [41, 475], "bufsiz": [41, 72, 117, 123, 292, 334, 345, 355, 408, 409, 421, 463, 478], "exclus": [41, 46, 62, 67, 84, 103, 104, 115, 135, 146, 147, 174, 183, 212, 222, 255, 259, 266, 267, 268, 288, 289, 290, 316, 337, 340, 341, 355, 377, 379, 400, 419, 423, 425, 427, 437, 465, 473, 474, 475, 478, 479], "accur": [41, 51, 102, 173, 204, 242, 272, 289, 305, 349, 355, 363, 364, 366, 379, 398, 419, 441, 463, 465, 466, 471, 472, 474, 476, 477, 478], "footprint": [41, 91, 224, 453, 473, 476, 478], "procedur": [41, 67, 71, 79, 94, 101, 118, 148, 155, 173, 222, 291, 305, 332, 343, 359, 381, 415, 416, 433, 438, 448, 460, 461, 464, 472], "pythonmalloc": [41, 67, 185, 452, 453], "shutdown": [41, 86, 98, 100, 104, 123, 132, 133, 137, 163, 209, 210, 224, 245, 264, 266, 280, 281, 330, 334, 335, 338, 357, 362, 385, 399, 402, 425, 427, 452, 465, 472, 474, 475, 477, 479], "pymemallocatordomain": 41, "pyobject_malloc": [41, 56, 462, 464, 474, 476], "pymem_malloc": [41, 56, 63, 65, 462, 464, 474, 476], "nelem": 41, "elsiz": 41, "model": [41, 59, 61, 67, 83, 84, 86, 92, 95, 115, 123, 166, 180, 183, 191, 193, 202, 251, 270, 280, 290, 303, 315, 323, 332, 338, 340, 362, 365, 381, 392, 408, 409, 412, 424, 430, 458, 459, 461, 462, 463, 464, 470, 471, 472, 474, 475, 476, 477, 478, 481], "ansi": [41, 67, 86, 117, 142, 173, 263, 290, 349, 363, 458, 459, 471, 473, 476, 478], "pymem_calloc": [41, 56, 475], "pymem_realloc": [41, 56, 65, 462, 464, 474], "pymem_new": [41, 63, 460], "pymem_res": 41, "pymem_del": [41, 460], "intercept": [41, 100, 136, 340, 349, 476], "pyobject_calloc": [41, 56, 475], "pyobject_realloc": [41, 56, 462, 464], "pyobject_fre": [41, 56, 62, 462, 464, 476], "pymalloc_debug": [41, 452], "malloc_debug": [41, 452], "legend": 41, "pymemallocatorex": [41, 475], "new_siz": [41, 470], "pymemalloc": [41, 475], "pymem_domain_raw": [41, 452], "pymem_domain_mem": [41, 452, 476], "pymem_domain_obj": [41, 452, 476], "reinstal": [41, 82, 458], "contract": [41, 244, 341, 423], "ones": [41, 56, 62, 63, 72, 74, 84, 86, 88, 93, 100, 103, 109, 155, 157, 164, 187, 197, 227, 237, 240, 273, 289, 316, 327, 334, 337, 338, 341, 345, 355, 359, 363, 373, 386, 392, 397, 404, 429, 440, 446, 458, 459, 460, 461, 462, 463, 466, 468, 469, 473, 474, 475, 476], "impos": [41, 192, 259, 290, 291, 293, 296, 318, 319, 341, 383, 431, 452], "substitut": [41, 67, 77, 84, 86, 99, 100, 103, 109, 129, 140, 155, 157, 161, 164, 175, 180, 183, 190, 247, 258, 269, 271, 289, 290, 305, 316, 317, 318, 337, 341, 342, 356, 375, 383, 400, 423, 424, 425, 427, 433, 438, 442, 443, 445, 449, 458, 462, 464, 465, 466, 471, 472, 474, 475, 481], "setup": [41, 67, 72, 75, 91, 100, 107, 166, 190, 244, 293, 335, 338, 352, 359, 364, 381, 385, 386, 387, 450, 452, 453, 458, 459, 460, 461, 462, 464, 465, 466, 470, 471, 472, 473, 476, 478], "recogniz": [41, 77, 158, 183, 222, 291], "pattern": [41, 62, 67, 75, 84, 92, 99, 105, 106, 121, 139, 141, 157, 160, 166, 175, 186, 187, 188, 216, 219, 223, 244, 245, 251, 258, 261, 264, 272, 278, 280, 281, 285, 289, 290, 293, 294, 305, 313, 315, 316, 329, 341, 342, 359, 366, 368, 379, 383, 385, 386, 387, 399, 426, 427, 428, 432, 438, 440, 442, 447, 453, 458, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477], "0xcd": 41, "pymem_cleanbyt": 41, "0xdd": 41, "pymem_deadbyt": 41, "surround": [41, 78, 94, 103, 164, 172, 187, 222, 241, 244, 263, 342, 345, 371, 396, 424, 426, 427, 428, 432, 439, 447, 449, 453, 459, 464, 465, 466, 467, 468, 471, 476], "0xfd": 41, "pymem_forbiddenbyt": 41, "underflow": [41, 183, 185, 453, 476], "treatment": [41, 48, 100, 191, 280, 340, 391, 459, 467], "easier": [41, 75, 77, 83, 86, 91, 94, 96, 98, 102, 103, 105, 108, 112, 157, 158, 163, 166, 172, 190, 203, 247, 249, 256, 266, 290, 305, 310, 316, 341, 342, 350, 355, 359, 371, 385, 386, 387, 391, 404, 431, 437, 438, 439, 441, 446, 447, 448, 449, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476], "excess": [41, 84, 109, 119, 130, 143, 173, 183, 239, 264, 318, 363, 424, 427, 438, 469], "overwritten": [41, 100, 240, 266, 268, 293, 305, 329, 349, 383, 424, 466, 473], "pymem_debug_serialno": 41, "excel": [41, 84, 106, 172, 190, 197, 366, 381, 456, 462, 463, 467], "breakpoint": [41, 67, 78, 139, 141, 144, 182, 222, 244, 294, 349, 350, 452, 464, 469, 472], "captur": [41, 67, 91, 94, 100, 119, 166, 173, 180, 190, 262, 264, 290, 315, 316, 334, 338, 342, 345, 349, 354, 355, 359, 378, 383, 397, 426, 438, 463, 469, 470, 473, 474, 475, 477], "instant": [41, 67, 182, 381], "bumpserialno": 41, "obmalloc": [41, 460, 462, 464, 474, 479], "intact": [41, 100, 164, 180, 200, 202, 205, 215, 266, 342, 404, 463], "ve": [41, 75, 88, 93, 94, 96, 97, 100, 103, 104, 106, 111, 136, 149, 248, 268, 289, 293, 337, 366, 436, 439, 443, 447, 450, 459, 461, 462, 463, 465, 466, 468, 474], "provok": 41, "0xcb": [41, 476], "0xdb": [41, 476], "0xfb": [41, 476], "crt": [41, 67, 338, 466, 474], "512": [41, 128, 170, 232, 290, 325, 355, 421, 443, 464, 471, 472, 476, 478], "kib": [41, 112, 133, 267, 290, 329, 362, 379, 478], "mib": [41, 232, 267, 280, 329, 470, 478], "virtualalloc": [41, 474], "virtualfre": 41, "mmap": [41, 67, 139, 210, 251, 257, 459, 465, 470, 472, 475, 476], "munmap": 41, "pyobjectarenaalloc": 41, "pytracemalloc_track": [41, 477], "uintptr_t": 41, "pytracemalloc_untrack": [41, 477], "untrack": [41, 75, 468], "rewritten": [41, 132, 190, 191, 232, 280, 433, 459, 460, 461, 462, 465, 466, 468, 472, 473, 474, 476, 477, 478], "inde": [41, 75, 77, 85, 104, 134, 192, 338], "label": [41, 67, 77, 79, 80, 86, 93, 94, 155, 186, 188, 244, 268, 278, 289, 315, 328, 338, 342, 365, 366, 372, 383, 446, 458, 461, 462, 472, 474, 477], "buf1": 41, "buf2": 41, "buf3": 41, "aim": [41, 71, 74, 77, 80, 97, 102, 106, 107, 132, 267, 278, 340, 349, 383, 410, 458, 461, 463, 464, 474, 478], "pymemoryview_fromobject": [42, 56], "discret": [42, 67, 171, 258, 274, 287, 335, 340, 478], "pybuf_read": 42, "pymemoryview_frommemori": [42, 56, 473], "pymemoryview_getcontigu": [42, 56], "buffertyp": 42, "ortran": 42, "pymemoryview_check": 42, "pymemoryview_get_buff": 42, "mview": 42, "pymemoryview_get_bas": 42, "pymethod_new": 43, "pyinstancemethod_typ": 43, "pyinstancemethod_check": 43, "pyinstancemethod_new": 43, "pyinstancemethod_funct": 43, "im": [43, 84, 91, 341], "pyinstancemethod_get_funct": 43, "pymethod_typ": [43, 92], "methodtyp": [43, 92, 382], "pymethod_check": 43, "pymethod_funct": 43, "pymethod_get_funct": 43, "pymethod_self": 43, "pymethod_get_self": 43, "pymodule_typ": [44, 56], "moduletyp": [44, 247, 249, 382, 425, 429, 462, 471, 475], "pymodule_check": 44, "pymodule_checkexact": 44, "pymodule_newobject": [44, 56], "__doc__": [44, 62, 74, 79, 83, 86, 92, 93, 154, 157, 187, 190, 208, 222, 223, 252, 286, 310, 317, 320, 382, 424, 425, 432, 437, 438, 447, 460, 461, 462, 467, 469, 472, 474, 475, 479], "__package__": [44, 222, 247, 321, 382, 429, 447, 465, 469, 471, 473, 474, 476], "pymodule_new": [44, 56], "pymodule_getdict": [44, 56], "__dict__": [44, 48, 60, 62, 84, 87, 92, 98, 100, 113, 141, 145, 190, 222, 223, 247, 252, 264, 266, 294, 296, 305, 341, 382, 416, 424, 425, 429, 437, 460, 461, 466, 467, 469, 471, 475, 476], "pymodule_": 44, "pymodule_getnameobject": [44, 56], "pymodule_getnam": [44, 56], "m_size": [44, 75, 98, 479], "pymodule_getdef": [44, 56], "pymodule_getfilenameobject": [44, 56, 471], "pymodule_getfilenam": [44, 56, 471], "pymoduledef_bas": [44, 56], "m_base": [44, 75], "m_doc": [44, 75], "m_free": [44, 98, 479], "3121": [44, 467], "m_method": 44, "pymoduledef_slot": 44, "m_slot": 44, "m_reload": 44, "m_travers": [44, 98, 479], "py_mod_exec": [44, 479], "m_clear": [44, 98, 479], "collector": [44, 49, 62, 67, 72, 75, 77, 84, 86, 94, 98, 211, 251, 280, 289, 312, 349, 359, 399, 408, 425, 453, 459, 461, 464, 465, 466, 468, 469, 471, 473, 474, 477, 479], "pymodule_create2": [44, 56], "module_api_vers": 44, "python_api_vers": [44, 462], "pymodule_addobjectref": [44, 56, 75, 469], "split": [44, 63, 67, 77, 83, 84, 100, 105, 117, 138, 152, 155, 164, 183, 187, 188, 193, 197, 199, 205, 210, 225, 227, 245, 258, 278, 288, 289, 290, 291, 294, 300, 304, 315, 316, 318, 328, 332, 337, 338, 341, 342, 345, 361, 375, 383, 385, 391, 396, 404, 412, 432, 436, 437, 443, 447, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "__new__": [44, 60, 62, 67, 75, 79, 84, 92, 118, 139, 200, 208, 210, 222, 271, 275, 293, 296, 334, 379, 382, 386, 425, 471, 474, 476, 478], "__init__": [44, 60, 62, 67, 75, 77, 78, 79, 84, 86, 92, 99, 100, 104, 105, 111, 117, 125, 130, 136, 145, 157, 158, 164, 166, 169, 172, 173, 180, 181, 187, 191, 210, 211, 222, 223, 235, 238, 242, 247, 248, 249, 250, 258, 259, 264, 265, 266, 278, 280, 293, 296, 299, 305, 312, 317, 330, 337, 342, 355, 359, 362, 366, 379, 382, 383, 385, 386, 387, 396, 399, 404, 407, 411, 419, 425, 429, 437, 438, 447, 449, 459, 460, 461, 462, 464, 465, 469, 470, 471, 473, 476, 478], "pyinit_modulenam": [44, 70], "pymoduledef_init": [44, 56], "py_mod_cr": 44, "create_modul": [44, 247, 420, 429, 469, 475, 476], "451": [44, 67, 86, 157, 238, 247, 299, 321, 349, 429, 469, 471, 475], "symlink": [44, 139, 160, 228, 254, 289, 290, 291, 293, 308, 329, 355, 396, 447, 456, 457, 463, 465, 469, 472, 473, 474, 478], "exec_modul": [44, 98, 247, 420, 429, 469, 471, 474, 475, 476], "py_mod_multiple_interpreters_not_support": 44, "py_mod_multiple_interpreters_support": 44, "py_mod_per_interpreter_gil_support": 44, "hood": [44, 99, 100, 103, 359, 386, 387, 464, 465, 472], "pymodule_execdef": [44, 56, 475], "pymodule_fromdefandspec2": [44, 56, 475], "pymodule_setdocstr": [44, 56], "pymodule_addfunct": [44, 56], "lack": [44, 45, 77, 79, 84, 97, 157, 172, 210, 213, 244, 247, 280, 290, 291, 313, 332, 338, 344, 357, 419, 426, 427, 437, 458, 459, 460, 465, 467, 470, 473, 474, 475, 477], "add_spam": 44, "pymodule_addobject": [44, 56, 72, 75, 459, 469], "easi": [44, 62, 67, 72, 77, 82, 83, 84, 85, 88, 91, 97, 98, 100, 103, 104, 105, 107, 108, 117, 134, 148, 157, 164, 166, 172, 180, 183, 188, 190, 191, 201, 205, 223, 225, 265, 289, 290, 296, 315, 328, 334, 338, 340, 341, 355, 361, 385, 386, 387, 404, 408, 425, 427, 436, 437, 438, 439, 441, 442, 460, 461, 463, 464, 465, 466, 469, 472, 473, 474, 475, 476, 477, 481], "stole": 44, "pymodule_addintconst": [44, 56, 459], "pymodule_addstringconst": [44, 56, 459], "pymodule_addintmacro": [44, 465], "af_inet": [44, 100, 104, 123, 280, 334, 335, 338, 359, 465], "pymodule_addstringmacro": [44, 465], "pymodule_addtyp": [44, 56, 479], "tp_name": [44, 60, 62, 74, 75], "pystate_findmodul": [44, 56], "pystate_addmodul": [44, 56], "beforehand": [44, 429], "unnecessari": [44, 72, 79, 84, 99, 117, 130, 144, 224, 268, 280, 281, 285, 341, 349, 379, 383, 387, 391, 407, 433, 460, 461, 463, 466, 471, 475, 478], "harmless": [44, 72, 190, 373, 423], "pystate_removemodul": [44, 56], "suffici": [45, 62, 72, 78, 96, 97, 98, 99, 112, 119, 155, 180, 181, 183, 190, 222, 272, 290, 309, 323, 338, 341, 362, 385, 387, 396, 400, 412, 429, 433, 439, 457, 458, 472, 473, 476, 477], "pynone_check": 45, "pynumber_check": [46, 56, 478], "o1": [46, 48, 53, 77, 178], "o2": [46, 48, 53, 77, 178, 303, 399], "pynumber_subtract": [46, 54, 56], "subtract": [46, 138, 157, 180, 183, 256, 267, 272, 288, 305, 340, 341, 381, 416, 427, 459, 462, 465, 466, 470, 472, 477], "pynumber_multipli": [46, 56], "multipli": [46, 71, 75, 138, 163, 173, 180, 183, 196, 258, 266, 305, 315, 341, 342, 349, 416, 427, 441, 459, 462, 463, 465, 469, 470, 472], "pynumber_matrixmultipli": [46, 56, 475], "matrix": [46, 67, 84, 147, 222, 258, 288, 381, 399, 423, 427, 439, 460, 478], "pynumber_floordivid": [46, 56], "floor": [46, 84, 86, 102, 163, 180, 183, 190, 218, 222, 272, 286, 341, 381, 425, 427, 446, 461, 465, 478, 479], "divid": [46, 83, 91, 103, 138, 164, 180, 183, 188, 190, 191, 222, 244, 272, 281, 293, 305, 315, 340, 350, 364, 372, 416, 432, 440, 441, 465, 470, 472, 473, 474, 478], "pynumber_truedivid": [46, 56], "approxim": [46, 63, 67, 77, 78, 84, 151, 155, 157, 163, 174, 178, 183, 187, 190, 199, 210, 218, 244, 272, 277, 280, 287, 313, 323, 344, 345, 359, 378, 381, 385, 425, 427, 429, 441, 443, 458, 465, 466, 477], "mathemat": [46, 67, 77, 86, 94, 103, 157, 180, 183, 251, 258, 288, 315, 341, 425, 427, 439, 441, 442, 449, 463, 465, 475], "pynumber_remaind": [46, 56], "pynumber_divmod": [46, 56], "divmod": [46, 84, 180, 183, 222, 286, 341, 425, 427, 441, 447, 478], "pynumber_pow": [46, 56], "o3": [46, 71], "pow": [46, 84, 88, 119, 163, 166, 222, 258, 272, 280, 286, 288, 341, 417, 425, 427, 428, 447, 461, 470, 472, 478], "pynumber_neg": [46, 56], "pynumber_posit": [46, 56], "pynumber_absolut": [46, 56], "ab": [46, 62, 94, 103, 146, 151, 157, 180, 183, 187, 222, 231, 258, 267, 272, 286, 288, 289, 306, 316, 341, 378, 379, 381, 383, 414, 423, 425, 427, 432, 437, 439, 447, 459, 462, 470, 477], "pynumber_invert": [46, 56], "bitwis": [46, 57, 67, 91, 93, 94, 103, 174, 175, 190, 208, 212, 222, 279, 288, 290, 316, 326, 334, 337, 350, 403, 425, 428, 430, 462, 465, 466, 471, 476], "pynumber_lshift": [46, 56], "shift": [46, 67, 174, 175, 180, 183, 188, 244, 280, 288, 290, 341, 373, 404, 425, 430, 439, 459, 461, 463, 465, 466, 470, 473], "pynumber_rshift": [46, 56], "pynumber_and": [46, 54, 56], "pynumber_xor": [46, 54, 56], "pynumber_or": [46, 54, 56], "pynumber_inplaceadd": [46, 56], "pynumber_inplacesubtract": [46, 54, 56], "pynumber_inplacemultipli": [46, 56], "pynumber_inplacematrixmultipli": [46, 56, 475], "pynumber_inplacefloordivid": [46, 56], "pynumber_inplacetruedivid": [46, 56], "pynumber_inplaceremaind": [46, 56], "pynumber_inplacepow": [46, 56], "pynumber_inplacelshift": [46, 56], "pynumber_inplacershift": [46, 56], "pynumber_inplaceand": [46, 54, 56], "pynumber_inplacexor": [46, 54, 56], "pynumber_inplaceor": [46, 54, 56], "pynumber_long": [46, 56, 468, 478], "pynumber_float": [46, 56, 478], "pynumber_index": [46, 56, 78, 464, 469], "pynumber_tobas": [46, 56], "marker": [46, 67, 106, 114, 146, 155, 167, 188, 190, 222, 252, 255, 267, 294, 296, 337, 338, 374, 383, 397, 438, 453, 469, 473, 476, 477], "pynumber_asssize_t": [46, 56], "clip": [46, 55, 174, 433], "py_ssize_t_min": [46, 55], "pyindex_check": [46, 56, 479], "nb_index": [46, 62, 464], "tp_as_numb": [46, 62, 74, 479], "eas": [47, 62, 67, 77, 122, 327, 341, 362, 385, 433, 459, 473, 475, 477], "port": [47, 67, 77, 91, 95, 100, 104, 107, 123, 133, 139, 164, 220, 239, 240, 242, 244, 245, 254, 265, 266, 280, 285, 290, 302, 310, 330, 332, 334, 335, 337, 338, 339, 356, 359, 391, 392, 404, 416, 417, 441, 460, 461, 481], "act": [47, 62, 66, 74, 84, 94, 99, 102, 113, 119, 135, 141, 157, 173, 178, 180, 188, 193, 198, 202, 205, 222, 223, 241, 245, 247, 250, 256, 264, 290, 306, 308, 337, 341, 349, 362, 372, 381, 382, 383, 386, 423, 425, 432, 438, 446, 458, 459, 460, 465, 469, 473, 474, 478, 479], "pyobject_ascharbuff": [47, 56], "buffer_len": 47, "pyobject_asreadbuff": [47, 56], "pyobject_checkreadbuff": [47, 56], "pyobject_aswritebuff": [47, 56], "py_notimpl": [48, 62, 63, 74, 460], "notimpl": [48, 67, 93, 113, 165, 210, 223, 247, 286, 296, 382, 386, 427, 447, 466, 467, 469, 474, 479], "py_return_notimpl": 48, "pyobject_print": [48, 54, 72], "fp": [48, 58, 65, 77, 94, 117, 148, 183, 185, 193, 197, 198, 201, 204, 220, 227, 239, 259, 273, 290, 301, 352, 357, 376, 379, 390, 392, 423, 463], "pyobject_hasattr": [48, 56], "attr_nam": [48, 359, 461], "hasattr": [48, 86, 92, 100, 107, 222, 223, 252, 280, 317, 341, 349, 355, 364, 383, 385, 386, 424, 425, 429, 447, 462, 465, 471, 472, 474, 477], "__getattr__": [48, 57, 62, 74, 84, 92, 139, 173, 213, 222, 252, 296, 320, 341, 382, 386, 425, 427, 444, 461, 465, 471, 472, 473, 474, 477], "__getattribute__": [48, 62, 79, 86, 92, 222, 252, 296, 425, 427, 461, 465, 472, 477], "pyobject_getattr": [48, 56, 60, 62], "pyobject_hasattrstr": [48, 56], "pyobject_getattrstr": [48, 56, 71, 72, 78, 470], "pyobject_genericgetattr": [48, 56, 62, 92], "getter": [48, 49, 56, 67, 75, 92, 113, 164, 222, 223, 341, 362, 392, 465, 471, 474, 475], "tp_getattro": [48, 62, 74], "mro": [48, 60, 67, 84, 86, 113, 178, 194, 341, 382, 437, 477], "outlin": [48, 99, 100, 113, 132, 136, 164, 218, 241, 381, 425], "pyobject_setattr": [48, 56, 62], "favour": [48, 53, 77, 247, 252, 464, 473, 476, 477, 479], "pyobject_delattr": 48, "plan": [48, 102, 104, 110, 130, 296, 381, 383, 400, 459, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474], "pyobject_setattrstr": [48, 56, 78], "pyobject_delattrstr": 48, "pyobject_genericsetattr": [48, 56, 62], "setter": [48, 49, 56, 67, 75, 92, 113, 222, 223, 341, 362, 386, 392, 465, 474], "tp_setattro": [48, 62, 74], "del": [48, 53, 57, 67, 72, 75, 84, 87, 92, 98, 119, 141, 157, 175, 188, 193, 202, 222, 224, 227, 233, 244, 252, 268, 280, 281, 288, 289, 290, 293, 296, 327, 341, 386, 399, 424, 425, 426, 427, 428, 429, 430, 432, 437, 438, 442, 449, 459, 460, 462, 464, 465, 466, 472], "pyobject_genericgetdict": [48, 56, 62], "pyobject_genericsetdict": [48, 56], "_pyobject_getdictptr": 48, "pyobject_richcompar": [48, 56, 62, 74], "opid": 48, "py_lt": [48, 62, 63, 74], "py_l": [48, 62, 63, 74], "py_eq": [48, 62, 63, 74], "py_n": [48, 62, 63, 74], "py_gt": [48, 62, 63, 74], "py_g": [48, 62, 63, 74], "pyobject_richcomparebool": [48, 54, 56, 74], "pyobject_format": [48, 56, 188], "format_spec": [48, 119, 218, 222, 342, 425, 432, 465], "pyobject_repr": [48, 54, 56, 62, 63, 474, 475], "pyobject_ascii": [48, 56], "pyobject_str": [48, 56, 62, 63, 474], "pyobject_byt": [48, 56], "pyobject_issubclass": [48, 56, 60, 475], "cl": [48, 57, 60, 62, 76, 84, 92, 93, 113, 119, 158, 178, 188, 200, 208, 210, 222, 223, 252, 259, 293, 294, 296, 337, 359, 379, 382, 383, 385, 424, 425, 428, 433, 440, 461, 463, 465, 470, 472, 476, 477], "against": [48, 56, 71, 72, 74, 75, 77, 84, 85, 86, 93, 100, 102, 103, 109, 117, 119, 123, 133, 138, 170, 173, 178, 187, 188, 190, 232, 248, 252, 271, 275, 289, 290, 293, 300, 302, 304, 305, 308, 311, 316, 321, 323, 328, 330, 338, 339, 341, 355, 359, 362, 366, 372, 381, 382, 383, 385, 386, 387, 397, 406, 408, 409, 410, 411, 416, 417, 418, 423, 424, 425, 429, 438, 447, 452, 453, 459, 460, 461, 462, 463, 464, 469, 470, 471, 472, 474, 475, 477, 478], "__subclasscheck__": [48, 60, 113, 386, 425], "3119": [48, 67, 113, 158, 425, 467, 481], "indirect": [48, 60, 72, 84, 222, 252, 304, 423, 425, 427, 429], "__mro__": [48, 62, 84, 92, 113, 194, 222, 341, 383, 425], "__bases__": [48, 62, 75, 200, 222, 296, 341, 382, 425, 462], "pyobject_isinst": [48, 56, 62, 475], "inst": [48, 92, 433, 440], "__instancecheck__": [48, 386, 425], "__class__": [48, 79, 84, 86, 92, 93, 98, 180, 208, 222, 247, 296, 341, 386, 397, 425, 437, 461, 462, 465, 476], "py_hash_t": [48, 62, 74, 472], "pyobject_hash": [48, 54, 56, 62, 470, 471], "pyobject_hashnotimpl": [48, 56, 62, 465], "tp_hash": [48, 62, 74, 465], "pyobject_istru": [48, 54, 56], "pyobject_not": [48, 56], "pyobject_typ": [48, 56], "realli": [48, 62, 71, 74, 76, 77, 79, 84, 87, 91, 94, 103, 104, 106, 111, 180, 188, 197, 200, 202, 268, 280, 285, 290, 325, 341, 349, 362, 363, 381, 384, 410, 425, 432, 433, 436, 438, 439, 441, 443, 459, 460, 461, 462, 463, 464, 467, 471, 476], "py_typ": [48, 57, 60, 62, 74, 75, 98, 465, 470, 478, 479], "pyobject_typecheck": [48, 74], "pyobject_s": [48, 56, 62], "pyobject_lengthhint": [48, 474], "defaultvalu": [48, 265], "estim": [48, 67, 172, 183, 258, 285, 287, 288, 315, 359, 425], "__length_hint__": [48, 288, 425, 474], "length_hint": [48, 288, 425, 474], "pyobject_dir": [48, 56], "dir": [48, 67, 77, 79, 84, 93, 109, 111, 160, 181, 186, 207, 208, 220, 222, 263, 289, 290, 291, 293, 320, 341, 345, 355, 357, 366, 377, 386, 396, 419, 425, 442, 448, 453, 462, 465, 469, 470, 471, 472, 473], "pyobject_getait": [48, 56], "aiter": [48, 222, 425, 469, 476], "pyobject_gettypedata": [48, 56, 60, 471], "pytype_spec": [48, 56, 60, 62, 98, 471], "basics": [48, 57, 60, 471], "pytype_gettypedatas": [48, 56, 471], "memset": [48, 173], "pyobject_getitemdata": [48, 471], "py_tpflags_items_at_end": [48, 60, 62, 471], "tp": [49, 67, 334, 359, 381, 383], "tmp": [50, 75, 100, 106, 166, 220, 242, 268, 329, 357, 429, 453, 459, 462, 463, 464, 465, 466, 472, 478], "pyunstable_perfmapstate_init": 50, "pid": [50, 96, 123, 129, 134, 139, 164, 275, 280, 290, 296, 306, 319, 334, 345, 359, 464, 466, 479], "pyunstable_writeperfmapentri": 50, "code_addr": 50, "code_s": 50, "entry_nam": 50, "7f3529fcf759": 50, "Will": [50, 67, 71, 109, 173, 245, 252, 280, 316, 340, 373, 402, 471, 477], "pyunstable_perfmapstate_fini": 50, "shut": [50, 71, 86, 100, 104, 123, 242, 325, 330, 334, 335, 349, 381, 404, 449, 452, 462, 466, 475, 479], "shouldn": [50, 63, 67, 75, 87, 98, 103, 130, 207, 264, 269, 299, 324, 338, 342, 349, 385, 392, 446, 455, 460, 461, 463, 464, 465, 468, 476], "scenario": [50, 99, 100, 132, 183, 185, 264, 265, 291, 317, 385, 386, 387, 392, 429, 453, 469, 474, 476], "fork": [50, 58, 67, 72, 83, 100, 137, 139, 163, 210, 224, 254, 275, 280, 290, 306, 325, 329, 335, 338, 345, 392, 462, 466, 471, 474, 477, 478], "py_refcnt": [51, 57, 75, 465, 469], "py_set_refcnt": [51, 469], "refcnt": [51, 469], "counter": [51, 62, 67, 72, 75, 84, 86, 94, 135, 137, 179, 187, 188, 197, 224, 233, 280, 289, 290, 341, 362, 363, 383, 385, 427, 437, 461, 463, 464, 465, 466, 468, 472, 473, 478], "py_newref": [51, 56, 75, 86, 469], "aren": [51, 75, 77, 79, 83, 84, 87, 91, 92, 93, 94, 97, 103, 104, 106, 108, 109, 136, 151, 164, 173, 198, 214, 224, 252, 256, 265, 266, 289, 293, 335, 338, 344, 349, 366, 374, 386, 387, 416, 459, 460, 461, 462, 463, 464, 465, 466, 473, 474], "py_xincref": [51, 72, 470, 478], "py_xnewref": [51, 56, 469], "attr": [51, 62, 67, 78, 91, 119, 174, 188, 237, 241, 248, 252, 270, 278, 288, 289, 296, 311, 359, 366, 385, 386, 410, 412, 413, 414, 424, 425, 428, 433, 459, 460, 463, 470, 473], "py_clear": [51, 62, 72, 74, 75, 463, 471], "py_setref": [51, 75, 471], "dst": [51, 139, 173, 180, 290, 329, 337, 363, 473], "deadli": 51, "arrang": [51, 83, 85, 94, 99, 100, 123, 129, 130, 136, 190, 222, 233, 252, 265, 280, 338, 362, 366, 370, 372, 373], "_before_": 51, "torn": 51, "believ": [51, 77, 86, 94, 104, 233, 289, 323, 462], "py_xsetref": [51, 75, 471], "pyeval_getbuiltin": [52, 56], "pyeval_getloc": [52, 56], "pyeval_getglob": [52, 56], "pyeval_getfuncnam": [52, 56], "pyeval_getfuncdesc": [52, 56], "pysequence_check": [53, 56, 62], "pysequence_s": [53, 56, 62], "pysequence_concat": [53, 56, 62], "pysequence_repeat": [53, 56, 62], "pysequence_inplaceconcat": [53, 56, 62], "pysequence_inplacerepeat": [53, 56, 62], "th": [53, 147, 172, 188, 193, 222, 233, 263, 272, 280, 340, 341, 363, 381, 407, 425, 459, 462, 464], "pysequence_getslic": [53, 56, 62], "i1": [53, 187, 275, 416, 463], "i2": [53, 187, 275, 416, 463], "pysequence_delitem": [53, 56], "pysequence_setslic": [53, 56, 62], "pysequence_delslic": [53, 56, 62], "pysequence_count": [53, 56], "occurr": [53, 63, 84, 88, 99, 103, 118, 119, 137, 157, 164, 174, 183, 193, 202, 225, 268, 281, 288, 289, 315, 316, 325, 340, 341, 355, 369, 397, 410, 425, 426, 427, 428, 431, 432, 433, 443, 461, 463, 464, 467, 472], "pysequence_contain": [53, 56, 62], "pysequence_index": [53, 56], "pysequence_list": [53, 56], "pysequence_tupl": [53, 56], "pysequence_fast": [53, 56], "pysequence_fast_get_s": 53, "pysequence_fast_get_item": 53, "pysequence_fast_item": 53, "reloc": [53, 465], "pysequence_item": 53, "frozenset": [54, 67, 86, 119, 179, 222, 251, 271, 296, 349, 383, 385, 399, 424, 425, 427, 447, 463, 464, 465, 470, 472, 479], "pysetobject": 54, "medium": [54, 93, 175, 183, 423, 463, 464], "pyset_typ": [54, 56], "pyfrozenset_typ": [54, 56], "pyset_check": 54, "pyfrozenset_check": 54, "pyanyset_check": 54, "pyset_checkexact": [54, 469], "pyanyset_checkexact": 54, "pyfrozenset_checkexact": 54, "pyset_new": [54, 56, 464], "pyfrozenset_new": [54, 56, 464], "pyset_s": [54, 56, 464], "anyset": 54, "pyset_get_s": 54, "pyset_contain": [54, 56, 464], "__contains__": [54, 57, 62, 79, 84, 86, 93, 96, 158, 193, 202, 208, 258, 268, 288, 341, 386, 404, 413, 425, 427, 459, 462, 463, 465], "unhash": [54, 77, 178, 341, 385, 425, 427, 469, 479], "pyset_add": [54, 56, 464], "grow": [54, 59, 84, 88, 100, 104, 157, 190, 223, 233, 266, 315, 317, 373, 423, 447, 459, 463, 465, 466, 472], "pyset_discard": [54, 56, 464], "miss": [54, 67, 86, 102, 103, 119, 157, 167, 172, 173, 178, 183, 193, 196, 202, 208, 223, 232, 244, 247, 248, 252, 258, 264, 273, 276, 283, 286, 289, 290, 293, 316, 334, 338, 340, 342, 345, 349, 350, 359, 363, 364, 372, 377, 383, 386, 391, 392, 422, 424, 425, 427, 428, 429, 438, 440, 449, 451, 459, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "pyset_pop": [54, 56], "pyset_clear": [54, 56], "pyslice_typ": [55, 56], "pyslice_check": 55, "pyslice_new": [55, 56], "pyslice_getindic": [55, 56], "pysliceobject": 55, "pyslice_getindicesex": [55, 56, 471, 477], "slicelength": 55, "pyslice_unpack": [55, 56, 471, 477], "pyslice_adjustindic": [55, 56, 471, 477], "0x03050400": [55, 477], "0x03060000": [55, 477], "0x03060100": [55, 477], "boost": [55, 78, 223, 463], "py_ellipsi": [55, 428], "387": [56, 210], "seriou": [56, 77, 86, 99, 123, 190, 210, 264, 386], "forward": [56, 63, 77, 84, 92, 94, 103, 119, 144, 150, 152, 173, 174, 180, 188, 197, 223, 227, 255, 268, 286, 291, 293, 294, 337, 338, 341, 381, 383, 399, 404, 408, 424, 438, 439, 444, 451, 459, 460, 461, 463, 465, 468, 469, 470, 472, 477], "vice": [56, 71, 83, 138, 173, 247, 264, 290, 293, 316, 341, 373, 377, 383, 410, 446, 465, 471, 474], "versa": [56, 71, 83, 138, 173, 247, 264, 290, 293, 316, 341, 373, 377, 383, 410, 446, 465, 471, 474], "pyunstabl": 56, "subset": [56, 79, 94, 102, 104, 144, 155, 157, 164, 174, 232, 244, 245, 247, 250, 254, 259, 266, 268, 292, 296, 303, 311, 325, 329, 334, 341, 355, 362, 370, 385, 407, 410, 412, 419, 427, 462, 464, 466, 470, 475, 477], "_py_internalst": 56, "bugfix": [56, 79, 88, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "spend": [56, 319, 459, 470], "simplic": [56, 63, 74, 259, 337, 341, 459, 461, 469], "talk": [56, 63, 79, 84, 91, 100, 104, 106, 338, 340, 345, 425, 437, 438, 456, 464, 475], "recompil": [56, 71, 78, 86, 160, 247, 447, 457, 459, 462, 466, 472, 475, 476], "hardcod": [56, 173, 254, 264, 266, 457, 474], "0x030a0000": 56, "0x03020000": 56, "python39": 56, "abi3": [56, 473], "mymodul": [56, 78, 99, 227, 386, 387, 397, 466, 472], "goal": [56, 62, 74, 94, 98, 198, 222, 232, 317, 359, 410, 431, 460, 462, 464, 465, 472, 474, 475, 476], "penalti": [56, 100, 178, 213, 303, 459, 472], "prereleas": 56, "upcom": [56, 210, 223, 322], "guard": [56, 62, 67, 98, 100, 119, 123, 248, 310, 359, 362, 382, 383, 428, 429, 438, 478], "derefer": [56, 280, 355], "technic": [56, 67, 77, 79, 86, 94, 107, 109, 164, 179, 188, 210, 222, 249, 259, 289, 290, 316, 341, 397, 424, 429, 456, 458, 459, 466, 469, 477], "unintention": [56, 98, 100, 111, 264, 447, 470, 472], "stai": [56, 63, 67, 135, 340, 349, 471, 472, 473, 476, 481], "architectur": [56, 67, 101, 118, 128, 210, 269, 271, 276, 300, 330, 344, 352, 365, 407, 418, 425, 447, 453, 457, 458, 462, 463, 465, 473, 475, 479], "distributor": [56, 338, 422, 470, 476], "pybaseobject_typ": [56, 62], "pybytearrayiter_typ": 56, "pybytesiter_typ": 56, "pybytes_decodeescap": 56, "pybytes_repr": 56, "pycfunctionwithkeyword": [56, 57], "pycfunction_cal": 56, "pycfunction_getflag": 56, "pycfunction_getfunct": 56, "pycfunction_getself": 56, "pycfunction_new": [56, 57], "pycfunction_newex": [56, 57], "pycfunction_typ": 56, "pycmethod_new": [56, 57], "pycapsule_typ": 56, "pyclassmethoddescr_typ": 56, "pydictitems_typ": 56, "pydictiteritem_typ": 56, "pydictiterkey_typ": 56, "pydictitervalue_typ": 56, "pydictkeys_typ": 56, "pydictproxy_typ": 56, "pydictreviteritem_typ": 56, "pydictreviterkey_typ": 56, "pydictrevitervalue_typ": 56, "pydictvalues_typ": 56, "pyellipsis_typ": 56, "pyenum_typ": 56, "pyerr_displai": [56, 469, 471], "pyerr_programtext": 56, "pyeval_callfunct": [56, 479], "pyeval_callmethod": [56, 479], "pyeval_callobjectwithkeyword": [56, 479], "pyeval_evalcod": [56, 65, 101, 469], "pyeval_evalcodeex": [56, 65], "pyeval_evalfram": [56, 65], "pyeval_evalframeex": [56, 65, 474], "pyexc_baseexceptiongroup": 56, "pyexc_encodingwarn": 56, "pyexceptionclass_nam": [56, 478], "pyfilter_typ": 56, "pygetsetdescr_typ": 56, "pylistiter_typ": 56, "pylistreviter_typ": 56, "pylongrangeiter_typ": 56, "pylong_getinfo": 56, "pymap_typ": 56, "pymemberdescr_typ": 56, "pymember_geton": [56, 57, 92, 471], "pymember_seton": [56, 57, 471], "pymemoryview_typ": 56, "pymethoddescr_typ": 56, "pymoduledef_typ": 56, "pyos_afterfork": [56, 58, 471, 477], "pyos_afterfork_par": [56, 58, 290, 477], "pyos_beforefork": [56, 58, 290, 477], "pyos_fspath": [56, 58, 476], "pyos_inputhook": [56, 65, 471], "pyos_interruptoccur": 56, "pyos_getsig": [56, 58, 459], "pyos_mystricmp": 56, "pyos_mystrnicmp": 56, "pyos_setsig": [56, 58, 459], "pyos_sighandler_t": [56, 58], "ob_refcnt": [56, 62, 469], "ob_typ": [56, 62, 75, 470], "pyobject_clearweakref": [56, 62, 66, 74, 471], "pyobject_delitemstr": [56, 462], "pyobject_selfit": 56, "pyrangeiter_typ": 56, "pyrange_typ": [56, 464], "pyreversed_typ": 56, "pysequence_in": 56, "pysetiter_typ": 56, "pystructsequence_desc": [56, 59, 477], "pystructsequence_field": [56, 59, 477], "pystructsequence_getitem": [56, 59], "pystructsequence_new": [56, 59], "pystructsequence_newtyp": [56, 59], "pystructsequence_setitem": [56, 59], "pystructsequence_unnamedfield": [56, 59, 479], "pysuper_typ": 56, "pysys_addwarnoptionunicod": [56, 58, 470, 477], "pysys_formatstderr": [56, 58], "pysys_formatstdout": [56, 58], "pysys_getxopt": [56, 58], "pysys_haswarnopt": [56, 470], "pysys_setobject": [56, 58], "pysys_setpath": [56, 58, 470], "pysys_writestderr": [56, 58], "pysys_writestdout": [56, 58], "pythread_getinfo": 56, "pythread_acquire_lock": 56, "pythread_acquire_lock_tim": 56, "pythread_allocate_lock": 56, "pythread_exit_thread": 56, "pythread_free_lock": 56, "pythread_get_stacks": 56, "pythread_get_thread_id": [56, 477], "pythread_get_thread_native_id": 56, "pythread_init_thread": 56, "pythread_release_lock": 56, "pythread_set_stacks": 56, "pythread_start_new_thread": [56, 477], "pytraceback_her": 56, "pytraceback_print": [56, 476], "pytraceback_typ": 56, "pytupleiter_typ": 56, "pytuple_getitem": [56, 59, 72, 78], "pytuple_getslic": [56, 59], "pytuple_pack": [56, 59, 78, 463], "pytuple_s": [56, 59, 78], "pytuple_typ": [56, 59], "pytype_clearcach": [56, 60], "pytype_frommetaclass": [56, 60, 62, 471], "pytype_frommoduleandspec": [56, 60, 62, 98, 469, 471, 479], "pytype_genericalloc": [56, 60, 62, 478], "pytype_genericnew": [56, 60, 62, 75], "pytype_getflag": [56, 60], "pytype_getmodul": [56, 60, 98, 479], "pytype_getmodulest": [56, 60, 98, 479], "pytype_getnam": [56, 60, 470], "pytype_getqualnam": [56, 60, 470], "pytype_getslot": [56, 60, 469, 474], "pytype_issubtyp": [56, 60], "pytype_modifi": [56, 60, 62], "pytype_slot": [56, 57, 60], "pytype_typ": [56, 60, 62, 471], "pyunicodeiter_typ": 56, "pyunicode_append": 56, "pyunicode_appendanddel": 56, "pyunicode_asasciistr": [56, 63, 473], "pyunicode_ascharmapstr": [56, 63], "pyunicode_asdecodedobject": [56, 471, 476], "pyunicode_asdecodedunicod": [56, 471, 476], "pyunicode_asencodedobject": [56, 471, 473, 476], "pyunicode_asencodedstr": [56, 63], "pyunicode_asencodedunicod": [56, 471, 476], "pyunicode_aslatin1str": [56, 63, 473], "pyunicode_asmbcsstr": [56, 63, 473], "pyunicode_asrawunicodeescapestr": [56, 63, 473], "pyunicode_asucs4": [56, 63, 473], "pyunicode_asucs4copi": [56, 63, 469, 473], "pyunicode_asutf16str": [56, 63], "pyunicode_asutf32str": [56, 63], "pyunicode_asutf8ands": [56, 63, 469, 477], "pyunicode_asutf8str": [56, 63, 473], "pyunicode_asunicodeescapestr": [56, 63, 473], "pyunicode_aswidechar": [56, 63], "pyunicode_aswidecharstr": [56, 63, 469, 473, 477], "pyunicode_buildencodingmap": 56, "pyunicode_compar": [56, 63, 469, 473], "pyunicode_comparewithasciistr": [56, 63, 472], "pyunicode_concat": [56, 63, 473], "pyunicode_contain": [56, 63], "pyunicode_count": [56, 63], "pyunicode_decod": [56, 63], "pyunicode_decodeascii": [56, 63], "pyunicode_decodecharmap": [56, 63], "pyunicode_decodecodepagest": 56, "pyunicode_decodefsdefault": [56, 63, 71], "pyunicode_decodefsdefaultands": [56, 58, 63], "pyunicode_decodelatin1": [56, 63], "pyunicode_decodelocal": [56, 63], "pyunicode_decodelocaleands": [56, 58, 63, 477], "pyunicode_decodembc": [56, 63], "pyunicode_decodembcsst": [56, 63], "pyunicode_decoderawunicodeescap": [56, 63], "pyunicode_decodeutf16": [56, 63], "pyunicode_decodeutf16st": [56, 63], "pyunicode_decodeutf32": [56, 63], "pyunicode_decodeutf32st": [56, 63], "pyunicode_decodeutf7": [56, 63], "pyunicode_decodeutf7st": [56, 63], "pyunicode_decodeutf8": [56, 63], "pyunicode_decodeutf8st": [56, 63], "pyunicode_decodeunicodeescap": [56, 63], "pyunicode_encodecodepag": [56, 63, 473], "pyunicode_encodefsdefault": [56, 58, 63], "pyunicode_encodelocal": [56, 58, 63, 477], "pyunicode_fsdecod": [56, 63, 471, 476], "pyunicode_find": [56, 63], "pyunicode_findchar": [56, 63, 469, 473, 477], "pyunicode_format": [56, 63], "pyunicode_fromencodedobject": [56, 63], "pyunicode_fromformatv": [56, 58, 63, 471], "pyunicode_fromobject": [56, 63], "pyunicode_fromordin": 56, "pyunicode_fromstringands": [56, 63, 469], "pyunicode_fromwidechar": [56, 63, 473], "pyunicode_getdefaultencod": 56, "pyunicode_getlength": [56, 63, 469, 473], "pyunicode_internfromstr": [56, 63], "pyunicode_interninplac": [56, 63, 469], "pyunicode_isidentifi": [56, 63], "pyunicode_join": [56, 63, 473], "pyunicode_partit": 56, "pyunicode_rpartit": 56, "pyunicode_rsplit": 56, "pyunicode_readchar": [56, 63, 473], "pyunicode_replac": [56, 63], "pyunicode_res": 56, "pyunicode_richcompar": [56, 63], "pyunicode_split": [56, 63], "pyunicode_splitlin": [56, 63], "pyunicode_substr": [56, 63, 469, 473], "pyunicode_tailmatch": [56, 63, 469, 473, 479], "pyunicode_transl": [56, 63], "pyunicode_typ": [56, 62, 63], "pyunicode_writechar": [56, 63, 473], "ob_bas": [56, 57, 75], "ob_siz": [56, 57, 62, 470], "pyweakrefer": [56, 470], "pyweakref_getobject": [56, 66], "pyweakref_newproxi": [56, 66], "pywrapperdescr_typ": 56, "pyzip_typ": 56, "py_atexit": [56, 58], "py_bytesmain": [56, 65, 101, 478], "py_compilestr": [56, 65, 469], "py_exit": [56, 58, 476], "py_filesystemdefaultencodeerror": [56, 471], "py_filesystemdefaultencod": [56, 471], "py_genericalia": [56, 61], "py_genericaliastyp": [56, 61], "py_getrecursionlimit": 56, "py_hasfilesystemdefaultencod": [56, 471], "py_i": [56, 57, 469], "py_isfals": [56, 57, 469], "py_isnon": [56, 57, 469], "py_istru": [56, 57, 469], "py_makependingcal": 56, "py_setrecursionlimit": 56, "py_ucs4": [56, 63, 473], "py_utf8mod": [56, 471], "py_intptr_t": 56, "py_uintptr_t": 56, "allocfunc": [56, 62, 74], "binaryfunc": [56, 62], "descrgetfunc": [56, 62, 74], "descrsetfunc": [56, 62, 74], "getattrfunc": [56, 62, 74], "getattrofunc": [56, 62, 74], "getiterfunc": [56, 62, 74], "hashfunc": [56, 62, 74], "initproc": [56, 62, 74, 75], "iternextfunc": [56, 62, 74], "lenfunc": [56, 62], "newfunc": [56, 62, 74, 223], "objobjargproc": [56, 62], "objobjproc": [56, 62], "releasebufferproc": [56, 62], "reprfunc": [56, 62, 74], "richcmpfunc": [56, 62, 74], "setattrfunc": [56, 62, 74], "setattrofunc": [56, 62, 74], "ssizeargfunc": [56, 62], "ssizeobjargproc": [56, 62], "ssizessizeargfunc": 56, "ssizessizeobjargproc": 56, "symtabl": [56, 67, 251, 261, 466, 469, 471, 479], "ternaryfunc": [56, 62, 74], "unaryfunc": [56, 62], "ultim": [57, 86, 190, 222, 232, 289, 349, 425, 427, 429, 433, 461, 463], "expans": [57, 67, 216, 217, 231, 244, 251, 272, 291, 305, 311, 345, 361, 406, 419, 438, 463, 469, 473, 474], "notion": [57, 85, 180, 183, 187, 190, 222, 296, 341, 373, 407, 411, 427, 431, 434, 435, 472], "py_siz": [57, 465, 470], "pyobject_head": [57, 62, 75, 467], "pyobject_var_head": [57, 62, 74], "py_set_typ": [57, 470], "py_is_typ": 57, "py_set_s": [57, 470], "pyobject_head_init": [57, 62, 471], "_pyobject_extra_init": 57, "pyvarobject_head_init": [57, 62, 74, 75], "shall": [57, 291, 293, 296, 326, 412, 423, 458, 472], "meth_keyword": [57, 72, 98], "_pycfunctionfast": 57, "meth_fastcal": [57, 98, 477], "narg": [57, 67, 88, 98, 100, 115, 289, 306, 337, 396, 448, 466, 472], "_pycfunctionfastwithkeyword": 57, "pycmethod": [57, 60, 98, 470, 479], "meth_method": [57, 98, 479], "defining_class": [57, 98], "ml_name": [57, 74], "ml_meth": [57, 74], "ml_flag": [57, 74], "ml_doc": [57, 74], "bitfield": [57, 110, 222], "fourth": [57, 94, 110, 174, 191, 264, 304, 316, 363, 416, 438, 461, 469], "superclass": [57, 60, 62, 98, 113, 152, 178, 222, 223, 259, 265, 309, 335, 383, 425, 461, 462, 464, 471], "meth_o": [57, 61, 461], "meth_class": [57, 61, 462], "classmethod": [57, 86, 92, 93, 113, 157, 158, 173, 180, 183, 188, 190, 200, 208, 218, 222, 223, 247, 252, 258, 280, 293, 296, 340, 341, 355, 378, 379, 383, 385, 419, 422, 425, 447, 461, 463, 466, 469, 470, 471, 472, 473, 476, 477, 478], "meth_stat": [57, 462], "staticmethod": [57, 84, 86, 92, 93, 113, 190, 208, 222, 223, 265, 355, 417, 425, 447, 461, 463, 466, 469, 472, 473, 478], "meth_coexist": [57, 463], "sq_contain": [57, 62], "preclud": [57, 157, 286, 341, 478], "ml": [57, 94, 462], "unavail": [57, 77, 83, 107, 190, 226, 252, 267, 280, 290, 329, 383, 425], "tp_member": [57, 62, 74, 75, 470], "OR": [57, 67, 75, 91, 103, 174, 190, 208, 267, 279, 290, 293, 306, 316, 334, 337, 423, 427], "py_readonli": [57, 74, 471], "py_t_str": 57, "py_t_object_ex": [57, 75, 471], "t_object": [57, 471], "__vectorcalloffset__": [57, 60], "py_t_pyssizet": 57, "spam_type_memb": 57, "offsetof": [57, 75, 471], "spam_object": 57, "stddef": [57, 75, 471], "tp_dictoffset": [57, 60, 62, 74, 471], "tp_weaklistoffset": [57, 60, 62, 74, 471, 479], "__dictoffset__": 57, "__weaklistoffset__": 57, "strongli": [57, 72, 93, 99, 222, 340, 349, 412, 419, 425, 429, 453, 460, 461, 464, 469], "py_tpflags_managed_dict": [57, 60, 62, 471], "py_tpflags_managed_weakref": [57, 60, 62, 74, 471], "structmemb": [57, 92, 471], "obj_addr": 57, "py_audit_read": [57, 471], "py_relative_offset": [57, 471], "py_tp_memb": [57, 60], "mandatori": [57, 75, 83, 110, 133, 239, 245, 247, 265, 290, 338, 339, 438, 453, 462, 473, 477, 479], "read_restrict": [57, 471], "write_restrict": [57, 471], "py_": [57, 60, 458], "delattr": [57, 222, 437, 447], "py_t_byt": 57, "py_t_short": 57, "py_t_int": [57, 74, 75, 471], "py_t_long": 57, "py_t_longlong": 57, "py_t_ubyt": 57, "py_t_uint": 57, "py_t_ushort": 57, "py_t_ulong": 57, "py_t_ulonglong": 57, "py_t_float": 57, "py_t_doubl": [57, 74, 471], "py_t_bool": 57, "ro": [57, 84, 337], "py_t_string_inplac": 57, "py_t_char": 57, "t_int": [57, 471], "surpris": [57, 67, 77, 83, 84, 87, 100, 104, 115, 180, 183, 190, 222, 233, 244, 264, 272, 280, 305, 340, 355, 357, 366, 422, 429, 437, 441, 460, 461, 464, 468, 470, 471, 475, 477], "t_none": [57, 471], "tp_getset": [57, 62, 74, 75], "pathlik": [58, 63, 86, 160, 222, 249, 290, 291, 293, 341, 386, 422, 476], "__fspath__": [58, 290, 293, 359, 386, 476], "py_fdisinteract": 58, "deem": [58, 86, 119, 204, 227, 266, 341, 404, 423, 459, 460, 464, 466, 471, 472, 473, 474], "isatti": [58, 150, 222, 255, 290, 349, 443], "clone": [58, 198, 202, 205, 227, 232, 234, 280, 290, 298, 332, 373, 381, 407, 431, 457, 473, 478], "register_at_fork": [58, 290, 477], "reliabl": [58, 104, 121, 123, 129, 130, 136, 155, 158, 183, 185, 248, 280, 291, 300, 330, 345, 400, 412, 421, 424, 429, 437, 441, 449, 458, 462, 466, 469, 472, 473, 474, 475, 476, 477], "microsoft": [58, 67, 76, 85, 155, 164, 173, 251, 290, 347, 349, 395, 396, 404, 432, 445, 453, 455, 461, 462, 464, 465, 470, 475], "visual": [58, 76, 77, 84, 91, 102, 316, 338, 372, 381, 410, 438, 452, 453, 458, 459, 462, 465, 475], "sigact": 58, "dc80": [58, 106, 155, 222], "dcff": [58, 106, 155, 222], "surrog": [58, 63, 155, 222, 259, 290, 337, 343, 355, 407, 473, 474, 478], "error_po": 58, "0x80": [58, 106, 175, 341], "0xff": [58, 155, 222, 341], "implicit": [58, 62, 67, 72, 84, 100, 109, 111, 117, 136, 178, 187, 210, 222, 247, 252, 255, 294, 311, 316, 334, 337, 344, 357, 387, 399, 425, 429, 452, 466, 467, 472, 474, 475, 476, 477, 478, 481], "1000": [58, 84, 96, 100, 106, 146, 170, 174, 180, 218, 244, 256, 258, 272, 280, 281, 317, 326, 341, 342, 349, 366, 379, 381, 423, 437, 438, 441, 443, 446, 447, 459, 464, 465, 466, 472, 473, 478], "hundr": [58, 79, 100, 190, 232, 251, 451], "pysys_audit": [58, 96, 139, 349], "apart": [58, 75, 94, 99, 103, 119, 164, 187, 272, 280, 289, 299, 340, 346, 427, 432, 458, 462, 466, 468], "unavoid": [58, 94, 180, 463, 466, 468], "pysys_addaudithook": [58, 139, 349], "py_audithookfunct": 58, "578": [58, 67, 139, 349, 464, 465], "addaudithook": [58, 139, 349, 447], "kill": [58, 83, 104, 112, 127, 130, 134, 137, 139, 163, 174, 244, 254, 280, 290, 330, 345, 359, 399, 404, 419, 465, 466, 467, 472, 477], "120": [58, 71, 94, 152, 190, 223, 258, 349, 381, 466, 476, 478], "pytuple_check": [59, 78], "pytuple_checkexact": 59, "oo": [59, 77, 173, 349, 359, 447, 452, 468, 475], "pytuple_get_s": 59, "pytuple_get_item": 59, "pytuple_set_item": [59, 469], "_pytuple_res": [59, 461], "shrink": [59, 181, 463], "client": [59, 67, 72, 83, 92, 99, 100, 104, 107, 121, 123, 127, 139, 141, 148, 155, 161, 164, 167, 191, 193, 238, 241, 242, 248, 251, 253, 255, 256, 264, 266, 283, 290, 296, 325, 326, 334, 335, 337, 347, 359, 362, 381, 383, 391, 392, 404, 406, 407, 414, 417, 423, 437, 438, 448, 461, 463, 465, 471, 473, 478], "namedtupl": [59, 67, 86, 93, 114, 144, 179, 285, 296, 299, 300, 316, 326, 333, 337, 341, 344, 346, 349, 379, 382, 383, 398, 439, 465, 466, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479], "desc": [59, 92, 278, 285, 337, 468], "pystructsequence_inittyp": [59, 474], "pystructsequence_inittype2": [59, 474], "meta": [59, 67, 86, 109, 119, 148, 174, 175, 217, 228, 247, 248, 289, 349, 392, 425, 461, 471, 473, 474, 476], "n_in_sequ": 59, "pystructsequence_get_item": 59, "pystructsequence_set_item": 59, "pytype_check": [60, 72], "pytype_checkexact": 60, "primarili": [60, 73, 77, 84, 97, 99, 136, 138, 155, 157, 180, 191, 203, 222, 223, 249, 252, 264, 296, 301, 341, 345, 349, 383, 385, 397, 404, 408, 424, 426, 458, 460, 461, 463, 465, 466, 470, 473, 475, 477, 479], "pytype_getdict": [60, 62], "proxi": [60, 66, 67, 161, 164, 167, 184, 210, 222, 223, 239, 245, 254, 338, 341, 382, 385, 392, 399, 407, 416, 423, 425, 460, 465, 471, 472, 473, 475, 476, 478], "tp_dict": [60, 62, 74, 465], "adequ": [60, 62, 75, 84, 210, 441, 466, 473], "pytype_addwatch": [60, 471], "pytype_watchcallback": 60, "pytype_watch": [60, 471], "pytype_clearwatch": 60, "_pytype_lookup": [60, 92, 469], "pytype_hasfeatur": [60, 62], "pytype_is_gc": 60, "issubclass": [60, 77, 86, 113, 158, 222, 341, 382, 383, 397, 425, 437, 447, 459, 465, 469, 477], "nitem": [60, 62], "tp_alloc": [60, 62, 74, 75, 98], "kwd": [60, 62, 74, 75, 92, 134, 141, 166, 172, 200, 208, 222, 223, 252, 280, 294, 315, 342, 359, 377, 382, 385, 425, 428, 438, 464, 478], "qualifi": [60, 67, 86, 92, 188, 190, 194, 247, 252, 265, 266, 296, 300, 332, 334, 341, 345, 383, 385, 395, 397, 410, 413, 420, 425, 429, 433, 452, 458, 464, 470, 475, 478, 481], "pytype_getmodulebydef": [60, 98, 470], "shortcut": [60, 67, 104, 157, 190, 232, 244, 295, 316, 318, 341, 355, 382, 385, 425, 458, 463, 465, 477], "nb_add": [60, 62, 98], "pyunstable_type_assignversiontag": 60, "metaclass": [60, 67, 86, 92, 93, 109, 113, 119, 173, 208, 222, 223, 252, 341, 382, 383, 424, 465, 467, 470, 471, 472, 474, 475, 476, 477, 478], "py_tpflags_heaptyp": [60, 62, 98, 469, 479], "py_tp_bas": [60, 62], "pytype_from": [60, 471], "14": [60, 67, 84, 88, 94, 96, 103, 106, 118, 136, 138, 147, 155, 157, 158, 163, 173, 174, 180, 183, 188, 190, 206, 222, 233, 238, 244, 247, 250, 256, 258, 280, 290, 293, 299, 316, 319, 329, 334, 337, 340, 341, 342, 349, 355, 363, 375, 383, 395, 410, 425, 427, 429, 432, 439, 441, 443, 446, 449, 461, 463, 464, 466, 470, 472, 475, 476, 477, 478, 479], "__init_subclass__": [60, 208, 222, 425, 470, 476], "__set_name__": [60, 92, 178, 425, 471, 476], "tp_doc": [60, 62, 74, 75, 469], "overlap": [60, 63, 91, 103, 158, 163, 174, 187, 222, 256, 258, 279, 289, 293, 316, 340, 341, 369, 381, 433, 437, 460, 461], "mistak": [60, 72, 93, 102, 103, 104, 117, 122, 208, 210, 264, 268, 289, 341, 363, 366, 453, 463, 464, 466, 468, 469, 470, 471], "pynumbermethod": [60, 62, 74, 461, 464], "pysequencemethod": [60, 62, 74], "pymappingmethod": [60, 62, 74], "pyasyncmethod": [60, 62, 74], "py_tp_dealloc": 60, "py_nb_add": 60, "py_sq_length": 60, "sq_length": [60, 62], "tp_vectorcal": [60, 62, 74], "tp_mro": [60, 62, 74], "tp_cach": [60, 62, 74], "tp_subclass": [60, 62, 74, 471], "tp_weaklist": [60, 62, 74, 471], "unlimit": [60, 123, 134, 148, 199, 200, 205, 232, 244, 280, 317, 319, 341, 345, 362, 425, 432], "bf_getbuff": [60, 62, 470], "pfunc": [60, 71], "py_tp_doc": 60, "genericalia": [61, 67, 382, 383, 425, 427, 469, 479], "union": [61, 67, 87, 115, 157, 158, 208, 222, 223, 229, 249, 251, 330, 339, 343, 382, 383, 423, 425, 439, 462, 463, 465, 466, 470, 471, 475, 479], "__origin__": [61, 341], "__args__": [61, 341, 469, 479], "__parameters__": [61, 341, 383], "lazili": [61, 87, 163, 213, 240, 258, 341, 383, 385, 386, 424, 426, 427, 469, 470, 474], "my_obj_method": 61, "__class_getitem__": [61, 67, 341, 383, 427, 470, 477], "585": [61, 86, 158, 341, 382, 383, 470, 479], "pytype_": 62, "fairli": [62, 83, 86, 91, 95, 100, 104, 106, 190, 201, 205, 278, 300, 305, 327, 407, 408, 443, 453, 459, 461, 462, 464, 465], "examin": [62, 67, 71, 84, 87, 99, 106, 110, 178, 184, 224, 252, 261, 290, 294, 297, 305, 328, 329, 330, 332, 341, 349, 359, 407, 436, 460, 462, 464, 465, 469, 473], "glanc": [62, 100, 437, 462], "insight": 62, "tp_getattr": [62, 74], "tp_setattr": [62, 74], "__setattr__": [62, 74, 79, 84, 92, 139, 178, 296, 386, 425, 433, 461], "__delattr__": [62, 74, 79, 92, 139, 178, 425], "tp_as_async": [62, 74, 475], "__repr__": [62, 79, 92, 93, 105, 157, 178, 180, 192, 208, 222, 252, 280, 283, 304, 318, 337, 382, 383, 386, 416, 422, 425, 449, 461, 462, 469, 470, 472, 477, 478], "tp_as_sequ": [62, 74], "tp_as_map": [62, 74], "tp_str": [62, 74], "__str__": [62, 79, 93, 99, 100, 157, 180, 192, 193, 198, 199, 200, 202, 208, 252, 264, 280, 341, 342, 382, 386, 422, 425, 440, 461, 469, 470, 478], "tp_as_buff": [62, 74, 479], "tp_richcompar": [62, 74], "__lt__": [62, 74, 79, 93, 105, 144, 158, 165, 178, 222, 223, 288, 341, 382, 386, 425, 427, 460, 466, 467, 472], "__le__": [62, 79, 93, 158, 178, 223, 288, 341, 386, 425, 460, 466, 472], "__ne__": [62, 79, 158, 192, 199, 288, 386, 416, 425, 460, 470], "__gt__": [62, 79, 93, 105, 158, 178, 222, 223, 288, 341, 386, 425, 460, 466, 472], "__ge__": [62, 79, 93, 158, 178, 223, 288, 341, 386, 425, 460, 466, 472], "tp_iter": [62, 74, 341, 461], "__iter__": [62, 74, 79, 86, 93, 100, 113, 158, 208, 222, 255, 258, 268, 280, 341, 383, 385, 386, 387, 419, 424, 425, 427, 437, 461, 462, 465, 474, 476, 479], "tp_iternext": [62, 74, 341, 461], "__next__": [62, 74, 86, 94, 109, 158, 163, 172, 188, 210, 222, 255, 258, 280, 341, 419, 425, 427, 437, 467], "tp_method": [62, 74, 75], "tp_base": [62, 74, 75], "__base__": 62, "tp_descr_get": [62, 74], "__get__": [62, 86, 92, 178, 223, 252, 386, 425, 461, 476], "tp_descr_set": [62, 74], "__set__": [62, 86, 92, 178, 252, 386, 425, 461, 476], "__delete__": [62, 86, 92, 252, 386, 425, 461], "tp_free": [62, 67, 74, 75], "tp_is_gc": [62, 74], "__subclasses__": [62, 341, 386, 471], "tp_del": [62, 74, 224], "tp_version_tag": [62, 74], "tp_final": [62, 74, 475, 478], "tp_watch": [62, 74], "angl": [62, 103, 141, 151, 155, 206, 222, 272, 315, 381, 465, 466], "am_await": 62, "__await__": [62, 86, 158, 188, 382, 425, 475], "am_ait": 62, "__aiter__": [62, 86, 158, 188, 222, 386, 387, 424, 425, 475, 476, 477], "am_anext": 62, "__anext__": [62, 86, 158, 188, 210, 222, 386, 424, 425, 427], "am_send": 62, "sendfunc": 62, "__add__": [62, 79, 93, 98, 157, 165, 252, 286, 288, 386, 425, 427], "__radd__": [62, 286, 425, 427], "nb_inplace_add": 62, "__iadd__": [62, 79, 84, 158, 288, 425, 459], "nb_subtract": 62, "__sub__": [62, 158, 288, 386, 425, 427], "__rsub__": [62, 165, 425], "nb_inplace_subtract": 62, "__isub__": [62, 158, 288, 425, 459], "nb_multipli": 62, "__mul__": [62, 79, 157, 288, 386, 425, 427], "__rmul__": [62, 79, 425, 427], "nb_inplace_multipli": 62, "__imul__": [62, 79, 157, 165, 288, 425], "nb_remaind": 62, "__mod__": [62, 102, 288, 386, 425, 427, 469], "__rmod__": [62, 157, 425, 469, 475], "nb_inplace_remaind": 62, "__imod__": [62, 288, 425], "nb_divmod": 62, "__divmod__": [62, 386, 425, 469, 475], "__rdivmod__": [62, 425, 469], "nb_power": 62, "__pow__": [62, 288, 386, 425, 427, 469], "__rpow__": [62, 425, 469], "nb_inplace_pow": 62, "__ipow__": [62, 288, 425, 469], "nb_neg": 62, "__neg__": [62, 288, 386, 425, 427], "nb_posit": 62, "__pos__": [62, 288, 386, 425, 427], "nb_absolut": 62, "__abs__": [62, 222, 288, 383, 425], "nb_bool": [62, 467], "__bool__": [62, 93, 109, 208, 229, 288, 341, 364, 386, 402, 425, 427, 467], "nb_invert": 62, "__invert__": [62, 208, 288, 386, 425, 427], "nb_lshift": 62, "__lshift__": [62, 288, 386, 425, 427], "__rlshift__": [62, 425], "nb_inplace_lshift": 62, "__ilshift__": [62, 288, 425], "nb_rshift": 62, "__rshift__": [62, 288, 386, 425, 427], "__rrshift__": [62, 425], "nb_inplace_rshift": 62, "__irshift__": [62, 288, 425], "nb_and": 62, "__and__": [62, 158, 208, 288, 386, 425, 427], "__rand__": [62, 425, 427], "nb_inplace_and": 62, "__iand__": [62, 158, 165, 288, 425], "nb_xor": 62, "__xor__": [62, 158, 208, 288, 386, 425, 427], "__rxor__": [62, 425, 427], "nb_inplace_xor": 62, "__ixor__": [62, 158, 288, 425], "nb_or": 62, "__or__": [62, 158, 208, 288, 341, 386, 425, 427], "__ror__": [62, 425, 427], "nb_inplace_or": 62, "__ior__": [62, 158, 288, 425], "nb_int": 62, "nb_reserv": 62, "nb_float": 62, "nb_floor_divid": 62, "__floordiv__": [62, 102, 288, 386, 425, 427, 461, 469], "nb_inplace_floor_divid": 62, "__ifloordiv__": [62, 288, 425], "nb_true_divid": 62, "__truediv__": [62, 102, 247, 250, 288, 386, 425, 427, 461, 475], "nb_inplace_true_divid": 62, "__itruediv__": [62, 288, 425], "nb_matrix_multipli": 62, "__matmul__": [62, 288, 386, 425, 475], "__rmatmul__": [62, 425, 475], "nb_inplace_matrix_multipli": 62, "__imatmul__": [62, 288, 425, 475], "mp_length": 62, "__len__": [62, 79, 86, 113, 158, 193, 202, 208, 222, 268, 280, 288, 341, 383, 386, 407, 410, 424, 425, 462, 463, 478], "mp_subscript": 62, "mp_ass_subscript": 62, "__setitem__": [62, 79, 157, 158, 188, 193, 202, 205, 268, 280, 288, 296, 386, 387, 404, 407, 410, 425, 433, 462, 467], "__delitem__": [62, 79, 157, 158, 193, 202, 268, 288, 386, 404, 407, 410, 425, 462, 467], "sq_concat": 62, "sq_repeat": 62, "sq_item": 62, "sq_ass_item": 62, "sq_inplace_concat": 62, "sq_inplace_repeat": 62, "_typeobject": [62, 74], "formerli": [62, 74, 131, 157, 158, 163, 222, 241, 252, 272, 280, 313, 315, 340, 363, 468, 469, 471, 472, 473, 476, 477, 478, 479], "tp_compar": [62, 74], "tp_reserv": [62, 74, 475], "rich": [62, 63, 67, 74, 83, 109, 157, 194, 222, 223, 288, 366, 372, 385, 416, 425, 427, 429, 467, 472, 477, 479, 481], "stuff": [62, 74, 78, 99, 100, 119, 166, 173, 190, 304, 386, 467], "resolut": [62, 67, 74, 75, 77, 84, 86, 92, 98, 113, 115, 123, 128, 180, 211, 213, 222, 223, 229, 231, 242, 252, 290, 291, 292, 293, 296, 305, 334, 341, 363, 424, 425, 429, 437, 462, 464, 470, 473, 474, 475, 476, 478, 479], "bitset": [62, 74], "type_new": [62, 92], "metatyp": [62, 252], "But": [62, 72, 75, 77, 80, 83, 84, 88, 92, 93, 94, 100, 102, 103, 104, 107, 119, 151, 190, 191, 218, 255, 263, 268, 289, 296, 338, 341, 349, 363, 392, 402, 437, 438, 441, 461, 462, 464, 466, 468, 469, 474], "complain": [62, 75, 77, 88, 100, 166, 244, 460], "foo_typ": 62, "_ob_next": 62, "_ob_prev": 62, "getobject": [62, 453, 478], "subpackag": [62, 86, 247, 278, 349, 385, 419, 429, 447, 459], "pickl": [62, 67, 75, 83, 99, 100, 139, 153, 155, 157, 168, 173, 179, 180, 183, 223, 251, 259, 261, 264, 265, 266, 271, 280, 281, 295, 324, 327, 344, 376, 383, 386, 443, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 481], "pydoc": [62, 67, 75, 83, 153, 184, 222, 251, 417, 460, 461, 462, 463, 466, 468, 475], "meaning": [62, 103, 190, 195, 232, 247, 252, 256, 265, 268, 280, 290, 311, 316, 334, 338, 340, 349, 382, 392, 395, 425, 431, 433, 467, 472, 474, 475], "whichev": [62, 72, 74, 111, 180, 264, 344, 385, 450, 458, 473, 475], "align": [62, 67, 115, 142, 147, 150, 342, 359, 373, 381, 405, 443, 465, 466, 471], "py_tpflags_basetyp": [62, 75], "permiss": [62, 68, 79, 83, 84, 86, 99, 100, 107, 160, 209, 210, 213, 220, 245, 254, 283, 290, 291, 293, 308, 329, 330, 334, 337, 339, 352, 355, 357, 383, 392, 394, 402, 423, 435, 458, 466, 477], "foo_dealloc": [62, 478], "foo_object": 62, "tp_print": [62, 479], "inconsist": [62, 187, 210, 289, 290, 334, 386, 432, 435, 460, 471, 476], "group": [62, 67, 79, 83, 86, 88, 93, 97, 99, 100, 106, 108, 115, 121, 139, 148, 155, 157, 166, 172, 175, 183, 184, 187, 188, 190, 200, 208, 222, 245, 248, 251, 254, 256, 258, 263, 268, 278, 280, 285, 290, 293, 296, 307, 311, 316, 329, 331, 334, 336, 338, 339, 340, 341, 342, 345, 350, 355, 362, 372, 373, 378, 379, 383, 388, 391, 397, 402, 406, 412, 416, 425, 427, 428, 431, 432, 436, 440, 446, 449, 451, 458, 459, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478], "relev": [62, 67, 72, 74, 83, 84, 88, 91, 94, 97, 99, 100, 119, 142, 164, 168, 183, 184, 190, 191, 205, 212, 220, 222, 239, 242, 248, 259, 264, 265, 266, 285, 289, 290, 297, 299, 303, 338, 341, 345, 352, 353, 359, 360, 385, 404, 411, 420, 422, 458, 459, 461, 463, 471, 473, 474, 475, 476, 479], "await": [62, 67, 86, 120, 121, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 158, 166, 167, 185, 188, 222, 252, 261, 341, 374, 382, 383, 385, 386, 424, 426, 428, 430, 432, 459, 462, 469, 470, 476, 477, 478, 479], "eval": [62, 84, 87, 109, 118, 119, 141, 154, 156, 210, 222, 252, 265, 294, 296, 304, 324, 341, 372, 378, 426, 428, 432, 433, 434, 437, 441, 447, 459, 463, 465, 467, 468, 469, 470, 471, 472], "feasibl": [62, 72, 327, 469, 474], "deduc": [62, 172, 190, 280, 305, 351, 458, 472], "isinst": [62, 77, 84, 86, 87, 92, 93, 99, 100, 109, 113, 148, 158, 166, 178, 180, 208, 222, 247, 248, 252, 259, 286, 288, 296, 341, 382, 383, 385, 386, 387, 424, 425, 437, 447, 459, 462, 463, 465, 467, 469, 470, 471, 472, 476, 477], "among": [62, 105, 123, 138, 173, 178, 187, 190, 224, 229, 268, 280, 281, 290, 297, 325, 349, 355, 363, 366, 372, 385, 425, 432, 447, 456, 458, 472, 478], "mask": [62, 67, 173, 174, 208, 253, 290, 319, 326, 329, 330, 334, 339, 350, 353, 366, 373, 402, 425, 446, 463, 465, 472, 473, 479], "strictli": [62, 72, 93, 100, 104, 105, 106, 118, 130, 178, 180, 183, 215, 241, 259, 271, 341, 392, 424, 425, 426, 427, 429, 432, 437, 464], "xxx": [62, 99, 100, 117, 349, 429, 453, 465, 466, 468, 473, 474], "py_tpflags_default": [62, 75], "ORed": [62, 190, 212, 222, 290, 316, 366, 403], "decref": [62, 63], "java": [62, 67, 77, 79, 83, 84, 94, 100, 103, 104, 113, 115, 222, 290, 341, 362, 407, 411, 412, 425, 431, 436, 438, 441, 459, 463, 464, 465, 467, 469, 472], "py_tpflags_readi": 62, "bitmask": [62, 123, 190, 292, 325, 326], "py_tpflags_have_stackless_extens": 62, "py_tpflags_immutabletyp": [62, 98, 469, 470, 471], "weakli": [62, 66, 74, 399, 474], "py_tpflags_long_subclass": 62, "py_tpflags_list_subclass": 62, "py_tpflags_tuple_subclass": 62, "py_tpflags_bytes_subclass": 62, "py_tpflags_unicode_subclass": 62, "py_tpflags_dict_subclass": 62, "py_tpflags_base_exc_subclass": 62, "py_tpflags_type_subclass": 62, "quickli": [62, 67, 79, 83, 84, 85, 94, 100, 102, 103, 104, 157, 187, 210, 213, 215, 219, 222, 266, 315, 316, 330, 349, 366, 372, 385, 421, 436, 448, 460, 464, 468, 474], "ins": [62, 93, 94, 459, 461, 462, 463], "py_tpflags_have_fin": [62, 471, 478], "py_tpflags_disallow_instanti": [62, 98, 469, 471], "py_tpflags_map": [62, 188, 424], "abc": [62, 67, 72, 77, 79, 84, 86, 87, 92, 94, 102, 103, 106, 109, 123, 130, 133, 157, 164, 167, 173, 179, 181, 184, 188, 223, 225, 239, 248, 249, 251, 255, 256, 258, 264, 265, 277, 280, 287, 296, 312, 316, 318, 327, 328, 341, 342, 349, 359, 379, 382, 419, 420, 423, 424, 425, 427, 429, 432, 437, 439, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 476, 477, 478], "py_tpflags_sequ": [62, 188, 424], "634": [62, 67, 109, 424, 425], "py_tpflags_valid_version_tag": 62, "local_travers": 62, "_thread": [62, 67, 83, 139, 161, 251, 362, 462, 471, 473], "localobject": 62, "hand": [62, 72, 74, 77, 79, 83, 84, 86, 93, 94, 102, 103, 104, 119, 126, 173, 174, 178, 183, 193, 198, 203, 210, 222, 227, 244, 254, 255, 266, 296, 302, 316, 335, 363, 366, 381, 383, 386, 424, 427, 431, 433, 436, 437, 439, 442, 443, 446, 447, 448, 449, 459, 460, 461, 462, 464, 465, 467, 468, 473, 478], "aid": [62, 86, 101, 337, 448, 458, 462, 463, 466, 472, 473, 474], "get_refer": [62, 139, 224, 462, 469], "weakrefer": 62, "40217": [62, 479], "doubt": [62, 83, 91, 164, 180, 464], "prove": [62, 86, 94, 173, 258, 338, 424, 462, 467, 468], "compos": [62, 67, 86, 113, 170, 197, 198, 199, 200, 205, 269, 290, 332, 352, 353, 372, 379, 383, 384, 432, 473], "local_clear": 62, "trash": [62, 268], "reclam": 62, "weakref": [62, 67, 74, 84, 86, 178, 179, 210, 251, 280, 313, 341, 359, 449, 460, 461, 463, 464, 466, 470, 471], "py_return_richcompar": [62, 477], "val_a": 62, "val_b": 62, "pyweakref_": 62, "unari": [62, 67, 119, 157, 183, 188, 341, 386, 425, 430, 432, 473], "obvious": [62, 72, 100, 103, 164, 264, 289, 386, 437, 459], "overload": [62, 123, 223, 383, 392, 416, 425, 427, 460, 461, 470, 474], "reiniti": 62, "unrel": [62, 67, 72, 84, 93, 113, 147, 210, 268, 334, 442, 470], "defer": [62, 67, 72, 99, 123, 157, 190, 229, 243, 255, 266, 275, 337, 338, 353, 460, 465, 471], "presum": [62, 99, 158, 172, 180, 268, 280, 344, 345, 391, 427, 461, 466, 467], "mixtur": [62, 200, 428, 432, 437, 470, 475], "fresh": [62, 86, 94, 155, 163, 166, 280, 304, 321, 359, 429, 457, 458, 461, 462], "_pyobject_get_weakrefs_listptr": [62, 471], "sane": [62, 174, 180, 316], "trivial": [62, 67, 71, 72, 74, 77, 83, 94, 107, 134, 148, 191, 197, 205, 231, 280, 296, 316, 349, 387, 404, 437, 448, 462, 473, 474], "local_fin": 62, "error_typ": 62, "error_valu": 62, "error_traceback": 62, "442": [62, 67, 74, 224, 479], "tradition": [62, 92, 98, 305, 356, 462, 477], "ternari": [62, 425, 427], "operand": [62, 67, 88, 119, 155, 157, 180, 188, 190, 210, 222, 264, 287, 288, 341, 425, 427, 433, 440, 446, 461, 466, 467, 472, 473], "nb_long": 62, "augment": [62, 67, 84, 117, 119, 190, 265, 273, 328, 372, 425, 428, 432, 452, 472, 481], "root": [62, 67, 86, 87, 92, 99, 100, 108, 109, 111, 138, 139, 151, 157, 173, 183, 198, 202, 203, 204, 207, 228, 232, 233, 244, 245, 249, 258, 261, 264, 265, 272, 280, 286, 290, 291, 293, 299, 301, 311, 329, 336, 338, 339, 340, 345, 349, 355, 359, 363, 366, 368, 369, 372, 373, 383, 385, 407, 410, 412, 418, 419, 420, 425, 449, 452, 453, 457, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479], "react": [62, 91, 269, 366, 459, 465], "demonstr": [62, 72, 74, 88, 91, 93, 100, 103, 104, 111, 113, 117, 137, 146, 173, 183, 239, 241, 244, 275, 280, 281, 289, 304, 316, 317, 337, 340, 344, 366, 377, 378, 381, 385, 393, 410, 422, 427, 437, 438, 439, 446, 448, 458, 460, 472], "tricki": [62, 84, 86, 93, 144, 154, 289, 366, 438, 459, 460, 467], "tutori": [62, 67, 69, 73, 77, 91, 95, 100, 103, 104, 107, 111, 115, 157, 159, 174, 190, 208, 210, 219, 222, 223, 244, 264, 265, 266, 270, 287, 295, 315, 334, 341, 365, 366, 404, 424, 430, 431, 436, 438, 446, 450, 451, 456, 461, 463, 464, 465, 469, 472], "assort": [62, 67, 73, 190, 372], "topic": [62, 67, 71, 73, 75, 78, 79, 83, 88, 91, 95, 103, 152, 190, 208, 222, 264, 289, 304, 310, 334, 459, 462, 468], "myobject": [62, 74], "myobject_typ": 62, "mymod": 62, "my": [62, 67, 72, 77, 79, 81, 93, 94, 100, 104, 107, 148, 157, 190, 227, 233, 245, 265, 293, 338, 341, 342, 359, 366, 443, 459, 461, 462, 463, 464, 471], "myobj_new": 62, "myobj_dealloc": 62, "myobj_repr": 62, "myobj_travers": 62, "myobj_clear": 62, "myobj_hash": 62, "mystr": 62, "mystr_typ": 62, "393": [63, 67, 155, 349, 469, 479, 481], "65536": [63, 446], "1114112": [63, 155], "623": [63, 315, 469, 471], "py_ucs2": [63, 473], "py_ucs1": [63, 473], "narrow": [63, 315, 316, 334, 340, 341, 383, 453, 461, 469, 472, 473], "pyasciiobject": [63, 473], "pycompactunicodeobject": [63, 473], "pyunicode_check": [63, 75], "pyunicode_checkexact": 63, "pyunicode_readi": [63, 470, 471, 473], "pyunicode_get_length": [63, 469, 473], "canon": [63, 84, 86, 93, 141, 164, 180, 183, 192, 208, 232, 234, 289, 291, 293, 334, 343, 384, 410, 422, 427, 466, 470, 475], "pyunicode_1byte_data": [63, 473], "pyunicode_2byte_data": [63, 473], "pyunicode_4byte_data": [63, 473], "ucs1": 63, "ucs2": 63, "ucs4": [63, 461], "pyunicode_kind": [63, 473], "pyunicode_1byte_kind": [63, 473], "pyunicode_2byte_kind": [63, 473], "pyunicode_4byte_kind": [63, 473], "pyunicode_wchar_kind": [63, 470, 471, 473], "pyunicod": 63, "pyunicode_data": [63, 473], "pyunicode_writ": [63, 473], "saniti": [63, 453, 474], "pyunicode_read": [63, 473], "pyunicode_read_char": [63, 473], "pyunicode_max_char_valu": [63, 473], "py_unicode_isspac": 63, "ch": [63, 91, 99, 100, 155, 174, 187, 392, 459], "py_unicode_islow": 63, "lowercas": [63, 103, 106, 140, 152, 155, 164, 183, 193, 202, 222, 232, 234, 245, 256, 291, 302, 316, 323, 341, 342, 349, 361, 392, 395, 432, 467], "py_unicode_isupp": 63, "uppercas": [63, 84, 92, 106, 117, 145, 175, 222, 245, 256, 278, 289, 290, 323, 341, 342, 392, 432, 459, 466, 467, 471, 474, 476], "py_unicode_istitl": 63, "titlecas": [63, 341, 432], "py_unicode_islinebreak": 63, "linebreak": 63, "py_unicode_isdecim": [63, 472], "py_unicode_isdigit": 63, "py_unicode_isnumer": 63, "py_unicode_isalpha": 63, "alphabet": [63, 84, 88, 105, 140, 143, 170, 175, 183, 193, 196, 222, 259, 264, 265, 268, 300, 305, 323, 331, 341, 382, 458, 462, 463, 464, 465, 466, 469, 474, 475, 476, 477, 478], "py_unicode_isalnum": 63, "alphanumer": [63, 103, 148, 175, 190, 247, 265, 269, 296, 316, 323, 328, 341, 342, 363, 449, 462], "py_unicode_isprint": 63, "printabl": [63, 67, 140, 143, 155, 174, 175, 192, 193, 194, 195, 199, 200, 205, 222, 251, 279, 282, 341, 342, 343, 425, 460, 467, 472], "nonprint": [63, 314, 341], "databas": [63, 67, 71, 92, 103, 106, 120, 139, 155, 172, 174, 178, 180, 206, 222, 226, 240, 251, 258, 263, 273, 293, 295, 296, 305, 327, 341, 343, 347, 360, 362, 363, 366, 372, 373, 385, 388, 392, 422, 429, 432, 436, 440, 448, 449, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "0x20": [63, 140, 341, 425], "py_unicode_tolow": [63, 472], "py_unicode_toupp": 63, "upper": [63, 84, 91, 93, 94, 99, 100, 103, 119, 143, 145, 148, 157, 174, 187, 245, 280, 316, 334, 335, 337, 338, 341, 342, 372, 381, 385, 425, 427, 428, 433, 446, 462, 472, 478], "py_unicode_totitl": 63, "py_unicode_todecim": 63, "py_unicode_todigit": 63, "py_unicode_tonumer": 63, "py_unicode_is_surrog": 63, "0xd800": 63, "0xdfff": 63, "py_unicode_is_high_surrog": 63, "0xdbff": 63, "py_unicode_is_low_surrog": 63, "0xdc00": 63, "py_unicode_join_surrog": 63, "join": [63, 67, 76, 78, 79, 84, 94, 100, 104, 111, 117, 123, 131, 133, 148, 151, 155, 157, 163, 172, 183, 187, 197, 199, 200, 205, 222, 239, 240, 241, 244, 256, 258, 265, 267, 276, 280, 281, 290, 291, 293, 299, 313, 316, 317, 318, 323, 328, 329, 332, 334, 335, 339, 341, 342, 359, 361, 362, 364, 382, 383, 391, 396, 404, 407, 408, 410, 419, 422, 438, 446, 449, 459, 463, 464, 465, 471, 472, 473, 474, 475, 476, 477, 478], "pyunicode_new": [63, 469, 473], "maxchar": 63, "nearest": [63, 86, 180, 183, 218, 222, 272, 286, 315, 340, 349, 398, 426, 433, 437, 441, 449, 467, 468], "65535": [63, 419, 461], "1114111": [63, 349, 473], "pyunicode_fromkindanddata": [63, 473], "transform": [63, 67, 86, 92, 93, 94, 100, 102, 104, 105, 106, 109, 119, 136, 142, 144, 164, 172, 180, 183, 190, 193, 194, 198, 202, 205, 208, 210, 222, 223, 233, 252, 263, 264, 268, 296, 341, 375, 381, 382, 383, 410, 423, 424, 425, 427, 440, 446, 451, 459, 460, 465, 467, 474, 475, 477], "codepoint": [63, 244, 263], "width": [63, 74, 84, 91, 103, 114, 117, 138, 147, 155, 157, 173, 174, 178, 180, 183, 222, 244, 278, 289, 290, 304, 316, 340, 341, 342, 346, 349, 361, 363, 366, 369, 373, 378, 381, 383, 384, 398, 425, 432, 443, 446, 449, 459, 462, 464, 465, 466, 471, 472, 474, 476, 478], "asterisk": [63, 119, 245, 307, 341, 383, 403, 410, 424, 427, 433, 439, 477], "pad": [63, 67, 83, 119, 140, 143, 150, 174, 180, 183, 193, 196, 222, 231, 232, 256, 281, 334, 341, 342, 344, 346, 363, 366, 373, 392, 405, 443, 459, 462, 465, 466, 472, 476], "ll": [63, 72, 74, 75, 80, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 97, 99, 100, 103, 104, 106, 107, 109, 176, 190, 197, 233, 266, 269, 286, 289, 294, 315, 316, 328, 337, 338, 341, 366, 381, 387, 410, 429, 431, 432, 436, 437, 439, 441, 443, 445, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 478, 479], "intmax_t": [63, 471], "uintmax_t": 63, "ssize_t": [63, 67, 173, 344, 472, 473, 481], "ptrdiff_t": [63, 471], "octal": [63, 103, 109, 148, 181, 222, 256, 289, 290, 316, 341, 342, 432, 459, 460, 462, 463, 465, 467, 470, 471, 472, 478, 479], "hexadecim": [63, 98, 103, 143, 155, 175, 222, 232, 234, 237, 256, 289, 316, 323, 341, 342, 349, 395, 432, 441, 459, 463, 465, 470, 471, 472, 473, 474], "formatt": [63, 67, 115, 117, 265, 266, 289, 342, 462, 466, 469, 472, 474, 475, 477], "lld": [63, 453, 466], "llu": [63, 466], "li": [63, 151, 180, 239, 341, 383, 408, 425, 469, 475, 477], "lli": 63, "zi": 63, "ing": [63, 78, 103, 104, 190, 240, 466, 470, 473, 477], "pyunicode_copycharact": [63, 469, 470, 473], "to_start": 63, "from_start": 63, "how_mani": 63, "memcpi": [63, 470], "pyunicode_fil": [63, 470, 473], "fill_char": 63, "bigger": [63, 92, 272, 329, 341, 355, 458, 478], "contrast": [63, 86, 105, 157, 183, 223, 244, 305, 338, 341, 344, 366, 383, 409, 425, 426, 427, 429, 448, 461, 473, 476, 477], "substr": [63, 77, 94, 103, 106, 164, 190, 232, 234, 289, 291, 316, 341, 385, 427, 446, 459, 461, 462, 463, 464, 465, 469, 473, 475, 477], "buflen": [63, 334], "copy_nul": 63, "383": [63, 155, 334], "strlen": [63, 78, 104, 106], "parsetupl": 63, "wstr": [63, 469, 471], "wcslen": 63, "deviat": [63, 102, 315, 340, 345, 364, 391, 472, 473, 474], "pyunicode_asutf8": [63, 473, 477], "byteord": [63, 341, 344, 349, 447], "bom": [63, 67, 106, 142, 259, 375], "divis": [63, 65, 67, 84, 86, 100, 110, 119, 180, 183, 210, 222, 288, 294, 299, 330, 337, 340, 341, 425, 426, 427, 433, 440, 446, 462, 463, 465, 466, 470, 472, 479, 481], "ufeff": 63, "ufff": 63, "odd": [63, 67, 77, 91, 94, 150, 183, 232, 305, 340, 345, 357, 432, 438, 442, 446, 459, 462, 463, 464, 466], "ordin": [63, 93, 106, 155, 173, 174, 175, 180, 340, 341, 381, 473, 475], "unmap": [63, 373], "0xfffe": [63, 155], "dbc": [63, 155], "code_pag": [63, 473], "cp_acp": [63, 155, 473, 476], "sep": [63, 84, 94, 143, 180, 183, 222, 228, 241, 244, 290, 293, 338, 341, 342, 355, 404, 424, 438, 461, 464, 465, 466, 467, 470], "maxsplit": [63, 103, 316, 341], "keepend": [63, 155, 187, 197, 341], "crlf": [63, 220, 241, 242, 477], "tail": [63, 93, 148, 157, 187, 258, 291, 331, 410, 464, 471, 473, 476], "replstr": 63, "maxcount": 63, "iso": [63, 147, 155, 180, 187, 192, 193, 199, 202, 236, 239, 263, 285, 311, 334, 337, 349, 363, 395, 404, 414, 416, 459, 463, 470, 472, 475, 476, 478], "8859": [63, 106, 155, 187, 192, 193, 199, 202, 239, 285, 311, 337, 404, 414, 459, 472, 475], "accordingli": [63, 75, 88, 91, 94, 97, 144, 166, 215, 222, 223, 255, 258, 315, 341, 391, 392, 398, 425, 427, 429, 452, 461, 465, 472, 473, 474, 476, 477], "p_unicod": 63, "clarif": [63, 429], "lot": [63, 67, 72, 74, 76, 77, 78, 79, 83, 84, 88, 99, 103, 104, 106, 107, 148, 166, 167, 173, 181, 190, 197, 231, 242, 256, 264, 280, 289, 301, 305, 327, 335, 345, 371, 379, 386, 396, 406, 436, 437, 451, 459, 460, 461, 462, 463, 465, 466, 467, 474, 479], "neutral": [63, 72, 97, 251, 474], "grammar": [65, 67, 94, 109, 154, 222, 261, 342, 374, 424, 430, 431, 432, 434, 459, 460, 464, 467, 469, 471, 479], "py_eval_input": [65, 78, 428], "py_file_input": [65, 428, 469], "py_single_input": [65, 428], "incompat": [65, 86, 102, 110, 163, 173, 181, 208, 210, 252, 256, 263, 264, 268, 271, 285, 290, 296, 383, 421, 433, 453, 459, 462, 464, 467, 471, 472, 473, 475, 477, 478, 479], "pyrun_anyfil": 65, "pyrun_anyfileexflag": 65, "closeit": 65, "pyrun_anyfileflag": 65, "pycompilerflag": [65, 478], "pyrun_anyfileex": 65, "devic": [65, 67, 86, 97, 128, 155, 174, 175, 209, 222, 233, 244, 251, 255, 266, 290, 291, 293, 325, 326, 329, 330, 334, 339, 345, 347, 349, 355, 402, 410, 434, 445, 452, 459, 465], "pseudo": [65, 67, 93, 117, 173, 178, 188, 193, 251, 271, 283, 287, 290, 299, 319, 323, 338, 341, 349, 388, 429, 461, 462, 465, 471, 473, 476], "pyrun_interactiveloop": [65, 78], "pyrun_simplefil": [65, 71], "pyrun_simplefileexflag": 65, "pyrun_simplestringflag": 65, "pyrun_simplefileex": 65, "fopen": [65, 187, 473], "rb": [65, 83, 86, 100, 102, 114, 123, 146, 157, 197, 205, 215, 222, 231, 232, 247, 249, 250, 255, 267, 285, 296, 299, 341, 357, 375, 376, 383, 394, 398, 404, 416, 419, 432, 443, 449, 459, 462, 469, 473], "lf": [65, 175, 205, 432], "pyrun_interactiveon": 65, "pyrun_interactiveoneflag": 65, "ps1": [65, 154, 334, 349, 396, 435, 447, 452, 478], "ps2": [65, 154, 349, 435, 447, 452], "errcod": [65, 416], "pyrun_interactiveloopflag": 65, "eof": [65, 104, 123, 127, 130, 133, 134, 146, 152, 154, 165, 190, 210, 220, 222, 255, 267, 290, 306, 325, 328, 334, 337, 338, 356, 421, 452, 464, 469, 473], "prototyp": [65, 67, 77, 115, 152, 183, 337, 459, 464, 466], "idl": [65, 67, 78, 79, 84, 86, 163, 172, 173, 175, 226, 251, 331, 345, 365, 366, 381, 407, 408, 410, 456, 458, 461, 462, 481], "wait": [65, 67, 72, 84, 85, 91, 100, 104, 107, 112, 117, 119, 121, 122, 123, 126, 128, 129, 130, 131, 134, 135, 163, 174, 186, 204, 205, 242, 244, 251, 252, 254, 257, 266, 279, 280, 281, 290, 292, 313, 315, 319, 322, 326, 330, 332, 334, 335, 337, 338, 339, 345, 358, 359, 362, 367, 370, 381, 385, 392, 396, 400, 438, 446, 449, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "_tkinter": [65, 366, 381, 462, 470, 475, 479], "pyos_readlinefunctionpoint": [65, 78, 469, 471, 474], "edit": [65, 67, 79, 91, 94, 100, 103, 106, 152, 164, 174, 187, 222, 247, 248, 259, 268, 269, 290, 291, 300, 316, 317, 340, 355, 364, 365, 366, 373, 376, 442, 445, 449, 452, 458, 459, 460, 462, 463, 465, 467, 472, 473, 476, 477], "pyrun_str": [65, 78], "pyrun_stringflag": 65, "pyrun_fil": 65, "pyrun_fileexflag": 65, "pyrun_fileex": 65, "pyrun_fileflag": 65, "py_compilestringflag": 65, "py_compilestringexflag": 65, "py_compilestringobject": 65, "constrain": [65, 97, 118, 119, 205, 281, 383, 410, 424, 427, 429, 461, 464, 472, 478], "kwcount": 65, "defcount": 65, "kwdef": 65, "precompil": [65, 321, 341, 452], "unvarnish": 65, "thrown": [65, 94, 136, 180, 183, 265, 316, 461, 462, 473], "pyeval_mergecompilerflag": 65, "cf": [65, 103, 334], "arbitrarili": [65, 86, 119, 164, 166, 188, 265, 290, 315, 341, 385, 392, 427, 438, 443, 463, 469, 471, 478], "__future__": [65, 67, 86, 87, 102, 109, 156, 210, 222, 251, 252, 260, 312, 383, 424, 425, 433, 461, 462, 464, 465, 467, 469, 470, 474, 475, 477, 479, 481], "cf_flag": [65, 478], "cf_feature_vers": [65, 478], "pycf_only_ast": [65, 119, 464, 478], "co_future_divis": [65, 479], "238": [65, 67, 86, 110, 467, 481], "pyweakref_check": 66, "pyweakref_checkref": 66, "pyweakref_checkproxi": 66, "pyweakref_get_object": [66, 470], "summari": [67, 79, 83, 168, 190, 248, 289, 299, 304, 319, 377, 378, 383, 404, 423, 438, 441, 450, 458, 460, 461, 462, 463, 472, 481], "highlight": [67, 77, 79, 91, 174, 187, 244, 385, 391, 454, 459, 466, 472, 481], "695": [67, 99, 383, 426, 433], "701": 67, "syntact": [67, 77, 84, 86, 166, 199, 237, 247, 254, 283, 311, 337, 341, 375, 383, 386, 391, 397, 411, 424, 426, 427, 431, 432, 433, 437, 438, 440, 463, 464, 467], "formal": [67, 73, 190, 222, 232, 289, 316, 341, 342, 391, 411, 418, 425, 426, 427, 431, 433, 438, 442, 459, 461, 468, 470, 474, 475, 478, 479], "684": 67, "669": [67, 100, 157], "688": [67, 158, 425], "709": [67, 466], "692": [67, 383], "typeddict": [67, 382, 383, 469, 478], "698": [67, 383], "decor": [67, 86, 92, 93, 100, 113, 119, 137, 157, 158, 173, 178, 179, 184, 222, 223, 252, 312, 318, 341, 359, 385, 417, 424, 425, 426, 427, 428, 464, 466, 467, 469, 470, 472, 473, 474, 477, 478, 479, 481], "asyncio": [67, 83, 99, 100, 111, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 153, 161, 166, 185, 251, 257, 264, 280, 338, 345, 349, 362, 386, 387, 425, 427, 452], "calendar": [67, 153, 179, 180, 251, 363, 448, 459, 462, 470, 476], "csv": [67, 98, 157, 214, 251, 359, 448, 462, 464, 468, 476], "di": [67, 86, 91, 153, 180, 209, 251, 252, 261, 297, 349, 399, 464, 476, 478], "fraction": [67, 72, 79, 106, 157, 180, 183, 190, 222, 223, 251, 258, 263, 272, 286, 287, 305, 315, 316, 337, 338, 340, 341, 362, 363, 381, 427, 432, 441, 446, 461, 462, 463, 464, 466, 467, 468, 469, 475, 476, 478, 479], "itertool": [67, 86, 109, 157, 221, 222, 223, 233, 244, 247, 251, 272, 276, 288, 315, 340, 462, 463, 464, 465, 466, 467, 468], "math": [67, 86, 94, 151, 157, 163, 183, 190, 209, 218, 222, 251, 258, 280, 286, 287, 315, 340, 341, 344, 349, 381, 423, 425, 427, 439, 441, 443, 448, 453, 462, 463, 465, 466, 468], "pathlib": [67, 117, 139, 160, 216, 228, 247, 248, 249, 250, 251, 290, 291, 413, 419], "pdb": [67, 84, 111, 139, 141, 153, 182, 190, 211, 222, 251, 349, 378, 379, 452, 458, 462, 464, 465, 468, 470], "shutil": [67, 83, 100, 107, 116, 139, 163, 216, 222, 231, 251, 290, 293, 345, 355, 359, 399, 448, 462, 465, 466, 469, 477], "sqlite3": [67, 83, 92, 139, 153, 157, 251, 295, 296, 448, 453, 465, 466, 478], "tempfil": [67, 107, 139, 197, 216, 222, 251, 280, 290, 324, 359, 392, 399, 465, 467], "tkinter": [67, 79, 251, 365, 381, 456, 459, 462, 465, 467, 468], "unicodedata": [67, 103, 106, 251, 341, 360, 427, 432, 459, 464, 465, 466, 469, 472, 473], "unittest": [67, 77, 83, 109, 153, 184, 251, 359, 379, 397, 448, 462, 468, 479], "uuid": [67, 153, 251, 253, 278, 334, 464, 470, 478], "demo": [67, 88, 100, 219, 244, 404, 408, 417, 448, 462, 465, 472, 481], "13": [67, 94, 96, 100, 101, 106, 109, 114, 136, 138, 147, 148, 149, 150, 155, 157, 170, 173, 180, 190, 208, 223, 233, 238, 246, 256, 258, 263, 269, 275, 278, 284, 291, 292, 298, 319, 329, 333, 336, 337, 340, 341, 342, 346, 349, 356, 357, 375, 383, 394, 400, 405, 426, 438, 441, 443, 446, 447, 461, 462, 463, 464, 465, 466, 470, 472, 474, 475, 477, 478, 479, 481], "15": [67, 77, 84, 91, 94, 96, 99, 100, 105, 106, 128, 147, 155, 157, 164, 178, 180, 190, 200, 208, 212, 220, 233, 238, 244, 255, 256, 258, 263, 264, 265, 285, 290, 296, 315, 316, 319, 337, 338, 340, 341, 342, 345, 349, 363, 364, 375, 378, 384, 421, 422, 432, 443, 453, 460, 462, 463, 464, 465, 466, 468, 469, 470, 472, 475, 476, 477, 478, 479], "asynchat": [67, 423, 465, 470, 474], "asyncor": [67, 423, 463, 465, 470], "configpars": [67, 111, 214, 251, 265, 328, 459, 463, 466, 467, 468, 470, 474, 477], "distutil": [67, 70, 76, 108, 248, 460, 464, 465, 466, 470, 472, 478, 481], "ensurepip": [67, 108, 139, 153, 189, 251, 396, 453, 469], "ftplib": [67, 139, 153, 155, 251, 253, 392, 460, 462, 465, 466, 472, 474, 475, 476], "gzip": [67, 79, 86, 100, 116, 146, 153, 155, 197, 215, 251, 273, 329, 355, 359, 406, 423, 448, 459, 462, 466, 468, 469, 474, 476], "smtpd": [67, 470, 476, 479], "ssl": [67, 93, 107, 123, 130, 133, 220, 239, 245, 251, 257, 266, 285, 290, 302, 324, 332, 334, 383, 392, 404, 416, 423, 453, 457, 459, 462, 463, 466, 479], "webbrows": [67, 139, 153, 197, 251, 253, 459, 464, 470], "etre": [67, 251, 270, 406, 408, 448, 464, 466, 472, 476, 478, 479], "elementtre": [67, 251, 270, 406, 408, 448, 474, 476, 478, 479], "zipimport": [67, 173, 249, 251, 277, 299, 429, 462, 464, 468], "657": 67, "fine": [67, 72, 77, 83, 84, 85, 98, 100, 104, 106, 107, 164, 173, 174, 190, 198, 208, 222, 223, 240, 289, 290, 315, 316, 330, 338, 349, 366, 383, 386, 392, 425, 443, 448, 449, 458, 459, 460, 462, 464, 471], "grain": [67, 83, 99, 100, 174, 190, 208, 264, 290, 315, 349, 392, 425, 471, 481], "654": 67, "678": [67, 471], "enrich": [67, 71, 442], "launcher": [67, 108, 396, 418, 445, 455, 466, 474, 476, 477, 481], "646": [67, 155, 383], "655": [67, 383], "673": [67, 100, 383], "675": [67, 222, 383], "681": [67, 383], "563": [67, 110, 285, 383, 424, 433], "contextlib": [67, 77, 184, 251, 312, 337, 341, 379, 466, 467, 468, 478], "dataclass": [67, 157, 208, 233, 251, 304, 305, 312, 313, 337, 341, 383, 437, 438], "fcntl": [67, 139, 251, 334, 388, 461, 462, 463, 465], "functool": [67, 84, 86, 87, 92, 105, 109, 123, 126, 144, 157, 217, 221, 222, 248, 251, 252, 258, 341, 425, 464, 465, 466, 467, 468], "idlelib": [67, 153, 365, 366, 462], "sysconfig": [67, 71, 101, 153, 251, 290, 312, 379, 396, 422, 469, 474], "venv": [67, 86, 100, 108, 111, 153, 189, 248, 251, 352, 450, 458, 471, 473, 477], "zipfil": [67, 116, 153, 251, 321, 324, 329, 355, 397, 418, 429, 448, 449, 452, 459, 464, 465, 466, 468], "cheaper": [67, 378, 477], "lazi": [67, 77, 87, 94, 132, 222, 277, 338, 341, 349, 356, 383, 402, 424, 433, 464, 469, 471, 475, 477], "659": 67, "faq": [67, 81, 86, 91, 222, 232, 252, 287, 302, 341, 391, 426, 446, 451, 464, 466, 474], "workload": [67, 121, 131, 479], "jit": [67, 471, 476], "tarfil": [67, 111, 116, 153, 251, 329, 448, 462, 463, 464, 465, 466, 471, 476, 477], "openssl": [67, 232, 234, 338, 359, 453, 455, 459, 464, 465, 466, 469, 471, 472, 474, 475, 476, 477, 479], "wildcard": [67, 119, 186, 217, 228, 285, 328, 345, 385, 410, 432, 438, 440, 442, 477, 478], "604": [67, 87, 341, 383], "612": [67, 99, 383, 465], "613": [67, 383], "typealia": [67, 119, 383], "647": [67, 383], "argpars": [67, 84, 95, 100, 115, 157, 187, 197, 225, 251, 289, 306, 396, 448, 471, 481], "base64": [67, 143, 153, 155, 192, 193, 194, 195, 196, 199, 200, 203, 205, 232, 245, 248, 251, 282, 314, 323, 324, 332, 338, 379, 392, 394, 416, 461, 463, 479], "bdb": [67, 164, 182, 251, 294, 453, 466, 478], "bisect": [67, 179, 251, 449, 463], "curs": [67, 95, 115, 251, 459, 460, 463, 465], "__slots__": [67, 86, 157, 178, 222, 223, 252, 296, 382, 399, 461, 466, 478], "doctest": [67, 77, 83, 109, 153, 173, 180, 184, 251, 359, 375, 378, 379, 385, 448, 460, 462, 464, 466, 468, 472, 473], "fileinput": [67, 153, 216, 222, 251, 290, 349, 464, 470, 472, 478], "glob": [67, 100, 139, 141, 190, 216, 217, 251, 278, 291, 293, 294, 329, 345, 448, 465, 466, 470, 471, 472, 476], "hmac": [67, 170, 171, 232, 251, 266, 280, 296, 323, 334, 461, 466, 478], "metadata": [67, 83, 96, 107, 108, 178, 223, 227, 247, 251, 252, 277, 285, 290, 291, 308, 329, 339, 355, 383, 416, 419, 425, 429, 438, 450, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481], "linecach": [67, 216, 251, 379], "pprint": [67, 92, 144, 179, 187, 251, 294, 296, 338, 449, 460, 468, 472], "py_compil": [67, 84, 153, 160, 251, 261, 466, 471, 472, 474], "pyclbr": [67, 153, 251, 261], "shelv": [67, 83, 181, 251, 271, 295, 296, 324, 341, 459, 462, 472], "urllib": [67, 83, 95, 109, 133, 139, 148, 163, 166, 220, 223, 238, 239, 240, 251, 253, 266, 290, 304, 306, 379, 386, 396, 448, 459, 462, 464, 465, 467, 478], "652": 67, "zoneinfo": [67, 179, 180, 251, 363, 453], "graphlib": [67, 179, 251], "ast": [67, 153, 181, 222, 251, 261, 348, 374, 375, 464, 469, 470, 471, 473, 477], "compileal": [67, 84, 153, 251, 261, 308, 349, 447, 453, 458, 471, 472, 476], "imaplib": [67, 103, 139, 191, 251, 253, 302, 461, 462, 463, 466, 468, 471, 476], "ipaddress": [67, 95, 251, 253, 478], "multiprocess": [67, 83, 99, 104, 122, 123, 161, 163, 244, 251, 266, 313, 324, 338, 359, 362, 395, 404, 466, 467, 471, 481], "nntplib": [67, 139, 191, 198, 251, 347, 459, 463, 466, 468, 470, 471, 472], "poplib": [67, 139, 153, 191, 251, 253, 448, 463, 471, 473, 476], "smtplib": [67, 83, 100, 139, 191, 197, 198, 205, 251, 253, 266, 338, 448, 461, 465, 471, 472, 476], "sur": 67, "appl": [67, 92, 173, 187, 214, 244, 251, 266, 288, 344, 439, 448, 456, 462, 465, 466, 476], "silicon": 67, "mac": [67, 222, 232, 329, 338, 373, 395, 453, 455, 467, 469, 472, 474, 476, 477], "parallel": [67, 83, 86, 94, 98, 100, 121, 123, 126, 131, 134, 157, 160, 161, 162, 166, 204, 222, 229, 232, 251, 258, 349, 381, 385, 398, 400, 410, 440, 449, 452, 459, 466, 470, 472, 473, 474, 475, 479], "band": [67, 295, 325], "cprofil": [67, 153, 182, 464], "gettext": [67, 88, 100, 243, 251, 263, 408, 432, 448, 459, 463, 470], "json": [67, 99, 100, 117, 148, 153, 164, 248, 251, 255, 265, 266, 282, 295, 304, 344, 442, 448, 466, 468, 469, 472, 473, 474, 479], "plistlib": [67, 214, 251, 476, 477, 479], "shlex": [67, 111, 123, 134, 164, 219, 251, 294, 345, 471, 479], "xmlrpc": [67, 251, 253, 280, 296, 406, 423, 448, 461, 467, 474], "postpon": [67, 110, 174, 247, 383, 424, 425, 470], "553": 67, "562": [67, 425], "564": 67, "nanosecond": [67, 290, 363, 364, 402, 464, 470, 473, 478, 479], "565": [67, 210], "560": [67, 382, 425], "545": 67, "binascii": [67, 98, 140, 155, 251, 282, 394, 423, 466, 470, 474, 479], "crypt": [67, 171, 251, 307, 347, 423, 470, 471, 476], "dbm": [67, 83, 251, 295, 296, 327, 425, 453, 466, 467, 478], "server": [67, 79, 82, 83, 84, 91, 94, 99, 104, 107, 120, 121, 127, 148, 153, 164, 167, 173, 189, 191, 195, 197, 205, 220, 223, 232, 238, 239, 240, 241, 244, 245, 251, 253, 254, 256, 264, 265, 266, 280, 285, 290, 291, 293, 302, 310, 315, 324, 325, 326, 330, 332, 334, 337, 349, 352, 353, 356, 359, 362, 366, 379, 383, 385, 390, 392, 406, 423, 448, 449, 458, 460, 461, 462, 463, 464, 465, 466, 471, 473, 474, 475, 476, 478, 479, 481], "mimetyp": [67, 153, 194, 197, 251, 269, 282, 379, 404, 461, 465, 476], "msilib": [67, 251, 347, 464, 465, 470, 471], "queue": [67, 83, 99, 100, 104, 120, 123, 157, 161, 174, 179, 209, 229, 251, 258, 265, 266, 290, 315, 319, 322, 325, 334, 335, 341, 356, 358, 362, 366, 410, 442, 449, 459, 462, 463, 464, 465, 467, 472, 475, 478, 479], "socketserv": [67, 100, 238, 242, 251, 253, 334, 417, 465, 466, 467], "mock": [67, 184, 251, 379, 385, 470, 473, 474, 478, 479], "uu": [67, 143, 155, 251, 347, 423, 461, 470, 471], "zipapp": [67, 111, 153, 189, 251], "aifc": [67, 203, 251, 333, 346, 347, 398, 459, 470, 471, 479], "macpath": [67, 478], "sunau": [67, 251, 347, 470, 471, 479], "wave": [67, 150, 251, 274, 346, 459, 476, 479], "498": [67, 86, 432, 474], "526": [67, 86, 100, 119, 178, 383, 424, 433, 469, 477, 478], "515": [67, 218, 342, 470], "525": [67, 86, 158, 252, 349, 427], "530": [67, 427], "487": 67, "enhanc": [67, 77, 79, 86, 91, 94, 100, 104, 172, 223, 242, 251, 265, 280, 338, 345, 359, 373, 381, 383, 423, 427, 432, 444, 459, 460, 461, 463, 464, 467, 468, 469, 470, 472, 473, 474, 475, 481], "519": [67, 86, 379], "495": [67, 422], "520": 67, "468": [67, 157], "dtrace": [67, 95, 453], "systemtap": [67, 95, 453], "probe": [67, 474], "cmath": [67, 86, 251, 272, 287, 341, 463, 465, 474], "pickletool": [67, 153, 251, 261, 296, 379, 465], "rlcomplet": [67, 111, 251, 317, 331, 360, 464, 465], "telnetlib": [67, 139, 251, 347, 465, 470, 471], "timeit": [67, 84, 153, 166, 182, 251, 305, 448, 452, 462, 463, 465], "robotpars": [67, 251, 253, 389, 459, 467], "winreg": [67, 139, 251, 401, 447, 467], "winsound": [67, 76, 251, 401], "grp": [67, 251, 307, 336, 345, 388, 462, 479], "regen": [67, 453], "492": [67, 86, 158, 252, 424, 425, 427, 476], "465": [67, 332], "infix": [67, 77], "448": [67, 427], "461": [67, 341], "percent": [67, 83, 340, 342, 374, 391, 392, 423, 449, 458, 465, 467, 472], "484": [67, 86, 119, 341, 383, 424, 425, 433, 438, 469, 470, 471, 476, 477, 478], "471": [67, 157], "scandir": [67, 139, 228, 290, 293, 476, 477, 478], "475": [67, 210, 222, 290, 325, 326, 330, 334, 363], "retri": [67, 103, 107, 210, 222, 266, 290, 325, 326, 330, 334, 338, 345, 370, 392, 426, 438, 461, 462, 466, 470], "479": [67, 110, 210, 476, 477], "485": [67, 151, 272], "486": [67, 211, 473], "awar": [67, 76, 79, 82, 86, 97, 98, 103, 104, 105, 108, 136, 164, 176, 179, 191, 193, 197, 199, 200, 202, 203, 206, 222, 223, 227, 245, 263, 269, 290, 293, 337, 338, 342, 349, 363, 364, 366, 397, 410, 413, 441, 447, 448, 452, 453, 456, 458, 459, 461, 462, 463, 467, 468, 469, 471, 472, 473, 476, 477], "488": [67, 247, 308, 359, 452], "elimin": [67, 86, 92, 99, 102, 157, 183, 187, 247, 248, 258, 259, 268, 291, 293, 297, 381, 425, 437, 439, 449, 453, 463, 470, 473, 478], "pyo": [67, 160, 247, 379, 462, 465, 466, 474], "bz2": [67, 116, 155, 173, 215, 251, 267, 293, 329, 355, 359, 419, 448, 462, 466, 468, 469, 474, 479], "cgi": [67, 107, 242, 251, 324, 325, 347, 392, 393, 404, 417, 459, 465, 469, 470, 471, 472, 474, 476, 477, 478, 479], "difflib": [67, 142, 153, 190, 213, 251, 360, 460, 461, 463, 464, 465, 466, 474], "heapq": [67, 86, 179, 222, 223, 251, 313, 315, 449, 462, 463, 464, 465], "imghdr": [67, 251, 333, 347, 470, 471], "lzma": [67, 116, 146, 251, 329, 355, 359, 406, 419, 448, 469, 474], "selector": [67, 94, 122, 123, 128, 251, 257, 258, 325, 330, 335, 338, 358, 365, 392, 466, 468, 470, 477], "sndhdr": [67, 251, 347, 470, 471], "bio": [67, 285], "negoti": [67, 238, 338, 465, 473], "wsgiref": [67, 251, 253, 470, 472, 476, 478], "sax": [67, 251, 270, 406, 407, 408, 409, 448, 459, 460, 469, 478], "453": [67, 207], "bootstrap": [67, 108, 139, 189, 251, 315, 331, 396, 471], "pip": [67, 75, 102, 111, 189, 248, 251, 258, 396, 418, 442, 452, 458, 469, 471], "446": [67, 466], "audioop": [67, 251, 347, 464, 470, 471, 479], "colorsi": [67, 251, 274], "filecmp": [67, 153, 187, 216, 251, 459], "html": [67, 70, 77, 78, 79, 94, 99, 103, 107, 123, 133, 147, 148, 149, 155, 159, 187, 197, 202, 239, 240, 242, 244, 251, 258, 270, 290, 310, 337, 338, 366, 377, 391, 392, 393, 404, 408, 409, 410, 414, 416, 417, 421, 423, 425, 432, 449, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 475, 477, 478, 479, 481], "pty": [67, 139, 251, 290, 338, 388, 471], "stat": [67, 86, 106, 182, 187, 213, 216, 231, 247, 251, 255, 266, 285, 290, 291, 293, 302, 329, 338, 355, 379, 383, 429, 453, 461, 462, 464, 465, 469, 471, 472, 475, 476, 477, 478], "textwrap": [67, 117, 251, 360, 449, 462, 465], "445": 67, "456": [67, 72, 100, 183], "secur": [67, 84, 100, 115, 123, 161, 171, 173, 220, 234, 239, 240, 241, 245, 251, 253, 266, 267, 269, 271, 280, 282, 283, 285, 290, 296, 302, 311, 315, 328, 331, 332, 334, 341, 349, 355, 357, 392, 402, 404, 406, 408, 409, 410, 411, 416, 417, 421, 455, 459, 460, 461, 462, 464, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479], "interchang": [67, 100, 114, 140, 150, 165, 180, 181, 183, 210, 232, 259, 264, 333, 341, 344, 366, 383, 387, 425, 432, 443, 448, 459, 465, 472, 473], "436": [67, 316], "clinic": [67, 476, 478], "476": [67, 379], "certif": [67, 123, 130, 133, 220, 239, 245, 266, 302, 359, 392, 416, 465, 471, 477], "verif": [67, 116, 234, 265, 337, 338, 341, 391, 472], "405": [67, 107, 238, 396, 481], "420": [67, 86, 247, 429, 481], "3118": [67, 341, 467, 478, 481], "flexibl": [67, 72, 83, 86, 88, 92, 97, 100, 103, 109, 130, 148, 157, 166, 173, 187, 190, 193, 202, 205, 227, 264, 265, 280, 289, 292, 296, 337, 341, 345, 355, 363, 383, 386, 408, 410, 425, 436, 437, 449, 459, 460, 462, 464, 466, 467, 472, 475, 479, 481], "397": [67, 329, 458, 475, 481], "rework": [67, 210, 285, 460, 461, 462, 464, 466, 472, 476, 481], "380": [67, 350, 427, 481], "subgener": [67, 427, 481], "409": [67, 107, 238, 481], "414": [67, 107, 183, 238, 340, 379, 432, 462, 481], "3155": [67, 86, 481], "412": [67, 107, 223, 238, 481], "362": [67, 86, 96, 252, 481], "421": [67, 238, 349, 481], "simplenamespac": [67, 157, 304, 382, 396, 479], "finer": [67, 73, 86, 99, 123, 264, 290, 441, 471, 477, 478, 481], "framework": [67, 77, 80, 83, 100, 113, 120, 123, 130, 152, 164, 167, 173, 182, 184, 190, 238, 244, 251, 253, 331, 332, 338, 341, 349, 365, 383, 386, 392, 404, 417, 425, 440, 453, 456, 461, 462, 465, 466, 467, 472, 474, 475, 477, 478, 479, 481], "sched": [67, 161, 251, 465], "384": [67, 180, 464, 469, 471, 479, 481], "389": [67, 481], "391": [67, 481], "3148": [67, 163, 481], "repositori": [67, 79, 108, 247, 422, 457, 459, 460, 464, 466, 481], "3149": [67, 349, 481], "3333": [67, 404, 481], "gatewai": [67, 79, 107, 251, 253, 347, 451, 464, 481], "v1": [67, 334, 344, 481], "ftp": [67, 79, 107, 251, 253, 266, 283, 391, 392, 457, 459, 460, 465, 466, 473, 479], "popen": [67, 100, 123, 130, 134, 139, 148, 161, 205, 245, 290, 298, 303, 325, 334, 357, 359, 396, 425, 463, 465, 473, 474, 476, 477, 478], "nntp": [67, 191, 251, 347, 391, 463, 473, 479], "mailbox": [67, 84, 191, 198, 245, 251, 282, 302, 451, 464, 466, 476, 479], "turtledemo": [67, 153, 219, 244], "372": [67, 481], "378": [67, 342, 379, 481], "thousand": [67, 106, 232, 251, 263, 304, 305, 316, 342, 406, 438, 476, 477, 481], "stumbl": [67, 104, 481], "And": [67, 72, 84, 88, 93, 94, 99, 100, 102, 104, 117, 119, 163, 166, 172, 183, 188, 190, 222, 227, 233, 244, 254, 259, 288, 289, 316, 337, 338, 355, 373, 381, 386, 387, 419, 428, 438, 460, 464, 468, 472, 473], "3101": [67, 342, 481], "miscellan": [67, 115, 116, 152, 161, 188, 191, 214, 251, 282, 365, 404, 455, 481], "3106": [67, 481], "3137": [67, 481], "ttk": [67, 251, 365, 366, 372, 468, 476, 477, 478], "theme": [67, 244, 251, 365, 366, 462, 465, 468, 476, 477], "widget": [67, 80, 91, 92, 100, 115, 166, 178, 186, 244, 251, 289, 365, 368, 381, 385, 459, 462, 463, 468, 472, 476], "tk": [67, 244, 251, 368, 369, 381, 436, 456, 458, 459, 460, 465, 468, 469, 470, 472, 473, 475, 476, 477, 479], "freebsd": [67, 91, 112, 130, 209, 212, 275, 290, 292, 306, 319, 325, 334, 349, 359, 362, 363, 455, 464, 470, 474, 477, 479], "mainten": [67, 108, 207, 323, 432, 447, 458, 469, 471, 472, 473, 474, 477, 478, 479, 481], "434": [67, 244], "branch": [67, 77, 151, 188, 267, 300, 316, 350, 359, 372, 377, 437, 438, 459, 464, 465, 469, 479], "466": 67, "network": [67, 82, 99, 104, 106, 107, 120, 121, 122, 127, 130, 133, 138, 142, 181, 209, 244, 246, 251, 253, 254, 266, 280, 285, 290, 296, 300, 319, 325, 332, 338, 344, 352, 355, 359, 391, 392, 395, 402, 406, 411, 417, 429, 440, 443, 460, 461, 462, 465, 470, 473, 475, 477, 478], "477": [67, 471], "backport": [67, 102, 183, 244, 248, 249, 355, 383, 386, 419, 465, 469, 475, 476, 477, 478, 479], "493": [67, 96], "migrat": [67, 90, 248, 249, 252, 383, 397, 407, 433, 464, 465, 468, 469, 470, 471, 473, 474], "acknowledg": [67, 133, 164, 175, 243, 355, 481], "tracker": [67, 79, 108, 280, 359, 464, 466], "roundup": 67, "343": [67, 86, 110, 166, 424, 425, 443, 446, 467, 481], "366": [67, 93, 96, 180, 247, 321, 363, 429, 467, 473, 481], "370": [67, 331, 452, 467, 481], "371": [67, 467, 481], "3105": [67, 110, 467, 481], "3110": [67, 467, 481], "3112": [67, 110, 467, 481], "3116": [67, 86, 467, 468, 481], "3127": [67, 467, 481], "3129": [67, 424, 467, 481], "3141": [67, 113, 286, 467, 481], "future_builtin": [67, 109], "javascript": [67, 164, 237, 241, 254, 259, 296, 438, 443, 469], "notat": [67, 77, 86, 94, 97, 100, 103, 106, 157, 164, 183, 222, 256, 259, 275, 290, 296, 311, 334, 341, 342, 345, 360, 366, 386, 407, 410, 412, 424, 425, 427, 428, 430, 432, 437, 439, 441, 443, 447, 452, 462, 463, 464, 467, 472, 478, 479], "irix": [67, 467], "308": [67, 223, 238, 427, 481], "309": [67, 481], "314": [67, 84, 481], "328": [67, 110, 222, 247, 429, 467, 473, 481], "338": [67, 321, 429, 452, 481], "341": [67, 100, 481], "unifi": [67, 119, 155, 187, 190, 296, 384, 437, 474, 481], "342": [67, 94, 158, 364, 427, 481], "352": [67, 465, 467, 470, 481], "357": [67, 481], "218": [67, 223, 481], "237": [67, 341, 467, 481], "289": [67, 94, 223, 305, 481], "292": [67, 100, 264, 342, 481], "318": [67, 424, 481], "322": [67, 481], "324": [67, 84, 345, 481], "327": [67, 470, 481], "331": [67, 481], "cookielib": [67, 466, 467], "datatyp": [67, 74, 84, 173, 179, 183, 214, 251, 259, 296, 376, 449, 463, 465, 466, 468, 472, 481], "263": [67, 106, 247, 375, 464, 481], "273": [67, 155, 267, 281, 420, 481], "zip": [67, 84, 86, 94, 100, 109, 111, 116, 143, 155, 157, 163, 189, 222, 247, 248, 249, 250, 251, 258, 272, 277, 324, 329, 337, 341, 342, 351, 355, 359, 406, 429, 437, 439, 447, 449, 450, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 476, 477, 481], "archiv": [67, 83, 100, 102, 111, 189, 216, 248, 251, 268, 277, 339, 351, 359, 396, 423, 448, 451, 453, 459, 460, 464, 465, 466, 468, 470, 471, 472, 474, 477, 478, 481], "277": [67, 481], "nt": [67, 99, 107, 157, 266, 290, 300, 311, 312, 349, 396, 408, 410, 459, 472, 478, 481], "278": [67, 86, 481], "univers": [67, 86, 93, 172, 180, 222, 232, 245, 247, 255, 300, 341, 355, 363, 385, 391, 395, 419, 437, 453, 456, 463, 464, 465, 470, 474, 476, 477, 479, 481], "279": [67, 223, 481], "282": [67, 264, 329, 481], "285": [67, 86, 437, 481], "293": [67, 379, 481], "301": [67, 100, 107, 238, 392, 481], "302": [67, 86, 107, 222, 238, 239, 242, 247, 262, 299, 321, 349, 392, 420, 429, 464, 465, 468, 473, 481], "305": [67, 107, 172, 238, 481], "307": [67, 107, 238, 296, 392, 481], "optpars": [67, 88, 115, 251, 347, 463, 464, 466, 472, 476], "252": [67, 97, 425, 481], "253": [67, 97, 481], "diamond": [67, 93, 174, 222, 425, 437], "234": [67, 183, 342, 449, 468, 475, 481], "227": [67, 110, 481], "236": [67, 110, 433, 481], "207": [67, 238, 305, 481], "230": [67, 220, 472, 476, 481], "229": [67, 481], "205": [67, 107, 238, 242, 285, 399, 481], "232": [67, 481], "235": [67, 247, 481], "217": [67, 379, 481], "208": [67, 238, 481], "241": [67, 481], "sax2": [67, 251, 270, 406, 408, 412], "dom": [67, 251, 254, 270, 406, 412, 448, 460, 462, 464, 470, 478], "relationship": [67, 92, 101, 130, 157, 158, 180, 190, 233, 295, 340, 341, 349, 366, 377, 399, 407, 423, 425, 437, 464], "pyxml": [67, 460], "changelog": [67, 304, 466, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481], "whet": [67, 442, 461], "appetit": [67, 442, 461], "toward": [67, 84, 143, 183, 190, 193, 202, 215, 218, 219, 222, 264, 272, 341, 349, 361, 363, 381, 425, 437, 442, 460, 462, 464, 465, 474, 479], "recap": [67, 92, 442], "lambda": [67, 86, 100, 105, 119, 123, 130, 141, 144, 157, 164, 178, 187, 223, 232, 252, 258, 280, 296, 315, 337, 341, 355, 361, 364, 382, 385, 386, 387, 396, 417, 424, 425, 428, 430, 432, 439, 442, 459, 460, 461, 463, 464, 465, 467, 474, 475, 479], "intermezzo": [67, 73, 442], "intra": [67, 111, 187, 442], "fancier": [67, 83, 117, 187, 442, 463, 464, 466], "predefin": [67, 72, 84, 99, 103, 109, 152, 155, 173, 174, 244, 264, 278, 342, 366, 370, 395, 400, 402, 421, 425, 442], "remark": [67, 79, 268, 381, 387, 442, 459, 463], "brief": [67, 79, 107, 117, 190, 202, 222, 223, 265, 289, 299, 305, 316, 319, 341, 345, 377, 423, 439, 442, 459, 461, 463, 464, 467, 472], "tour": [67, 94, 442, 461, 462, 481], "internet": [67, 79, 95, 97, 104, 140, 191, 207, 220, 232, 237, 240, 244, 251, 269, 314, 332, 334, 335, 338, 359, 360, 363, 391, 392, 423, 438, 442, 458, 459, 460, 462, 469, 472, 474], "measur": [67, 91, 92, 102, 130, 136, 138, 151, 182, 183, 187, 219, 223, 251, 287, 296, 305, 319, 331, 335, 363, 366, 369, 379, 438, 442, 443, 459, 462, 463, 464, 465, 466, 470, 471, 473, 474, 477, 478, 479], "qualiti": [67, 114, 190, 290, 292, 302, 323, 425, 442, 472], "batteri": [67, 442], "templat": [67, 72, 84, 86, 99, 111, 157, 198, 264, 316, 341, 360, 364, 365, 370, 381, 442, 443, 461, 463, 465, 466, 470, 472, 473, 476, 477], "arithmet": [67, 165, 180, 210, 218, 222, 251, 253, 272, 287, 288, 315, 316, 340, 341, 349, 416, 422, 424, 425, 428, 430, 437, 438, 442, 446, 448, 462, 463, 464, 470, 472, 473, 475, 478], "histori": [67, 68, 79, 81, 100, 106, 137, 152, 180, 222, 233, 244, 268, 294, 331, 360, 362, 421, 442, 445, 452, 469, 474, 475, 476], "appendix": [67, 232, 423, 442, 445], "latest": [67, 70, 79, 84, 108, 148, 180, 183, 207, 223, 244, 396, 419, 450, 455, 456, 458, 464, 466, 468, 471, 472, 473, 474, 476], "openbsd": [67, 112, 220, 275, 290, 334, 362, 363, 455, 475, 477], "webassembli": [67, 120, 148, 160, 163, 170, 207, 220, 226, 239, 242, 245, 275, 280, 284, 285, 290, 302, 325, 326, 330, 332, 334, 335, 336, 338, 345, 349, 356, 362, 392, 396, 400, 416, 417, 422, 455, 470], "linker": [67, 71, 76, 85, 173, 455, 470], "cross": [67, 71, 75, 79, 80, 84, 100, 104, 115, 138, 180, 209, 241, 244, 290, 296, 315, 334, 355, 407, 422, 423, 432, 455, 456, 459, 460, 461, 462, 465, 466, 468, 470, 472, 473, 474, 475, 476, 478], "max_path": [67, 455, 476], "ui": [67, 100, 404, 455, 459], "download": [67, 74, 79, 84, 100, 293, 304, 372, 390, 392, 396, 423, 425, 437, 450, 451, 455, 456, 457, 464, 465, 466, 472, 473, 477, 478], "nuget": [67, 455, 477], "bundl": [67, 84, 108, 166, 198, 204, 207, 220, 245, 302, 338, 365, 366, 392, 418, 437, 453, 455, 456, 462, 466, 469, 471, 472, 474, 475, 477], "excursu": [67, 445, 455], "shebang": [67, 164, 396, 418, 445, 455, 457, 473, 476], "ini": [67, 214, 328, 455, 472], "dry": [67, 281, 289, 455], "pywin32": [67, 84, 455], "cx_freez": [67, 84, 280, 455], "macpython": [67, 455, 461], "gui": [67, 82, 83, 84, 94, 106, 244, 289, 337, 339, 349, 365, 366, 385, 436, 455, 465, 473], "editor": [67, 71, 77, 86, 103, 106, 247, 365, 432, 445, 446, 447, 455, 456, 459, 465, 469, 470, 471, 474, 475, 476, 477, 478, 479], "lexic": [67, 219, 237, 251, 252, 293, 354, 375, 412, 425, 427, 430, 431, 477], "blank": [67, 83, 84, 94, 117, 148, 152, 164, 172, 174, 183, 187, 190, 193, 202, 204, 205, 239, 242, 244, 265, 294, 297, 331, 338, 341, 351, 381, 391, 404, 410, 433, 434, 438, 443, 446, 463, 475, 477], "indent": [67, 79, 85, 86, 96, 103, 109, 117, 119, 164, 166, 190, 201, 210, 251, 252, 259, 261, 297, 304, 318, 361, 364, 365, 372, 374, 375, 386, 387, 408, 410, 424, 428, 436, 438, 444, 446, 449, 459, 469, 471, 472, 473, 474, 479], "soft": [67, 174, 244, 260, 319, 355, 359, 424, 428, 433, 469], "bodi": [67, 77, 83, 84, 86, 107, 109, 119, 132, 133, 136, 140, 166, 180, 186, 188, 192, 193, 194, 196, 197, 198, 202, 204, 205, 222, 237, 239, 242, 245, 252, 268, 269, 285, 314, 330, 332, 337, 341, 359, 364, 383, 385, 386, 387, 390, 392, 399, 404, 410, 424, 426, 427, 428, 433, 438, 446, 463, 464, 465, 471, 472, 473, 474, 475, 476, 477, 478], "versu": [67, 77, 180, 190, 247, 250, 264, 315, 427, 472, 478], "power": [67, 79, 84, 86, 88, 92, 93, 101, 138, 164, 170, 173, 183, 208, 222, 232, 258, 287, 289, 290, 294, 296, 316, 323, 334, 341, 350, 355, 381, 386, 387, 410, 423, 424, 428, 430, 437, 441, 442, 446, 449, 462, 463, 465, 466, 467, 469, 470, 472, 473, 478], "membership": [67, 91, 93, 97, 148, 157, 175, 208, 230, 290, 341, 386, 425, 439, 463, 472], "nonloc": [67, 84, 86, 119, 157, 222, 252, 348, 424, 426, 428, 430, 432, 437, 438, 467, 476], "irrefut": 67, "AS": [67, 337, 423], "servic": [67, 100, 104, 107, 119, 161, 222, 243, 251, 252, 259, 264, 266, 279, 280, 281, 290, 300, 315, 318, 325, 332, 334, 335, 338, 341, 355, 363, 406, 416, 425, 434, 452, 458, 459, 463, 466, 469, 470, 473], "mini": [67, 164, 218, 222, 341, 360, 425, 432, 443, 466, 468, 470], "scanf": [67, 360], "phonebook": [67, 360], "mung": [67, 360], "adverb": [67, 360], "sequencematch": [67, 360, 460, 464, 465, 474], "ndiff": [67, 190, 360, 460, 461], "stringprep": [67, 155, 251, 360, 462], "gnu": [67, 71, 96, 225, 231, 243, 251, 263, 289, 290, 295, 327, 329, 355, 360, 423, 425, 432, 435, 444, 445, 452, 453, 457, 459, 462, 463, 465, 466, 471, 475, 477, 478], "stateless": [67, 138, 142, 144], "streamreaderwrit": [67, 142], "streamrecod": [67, 106, 142], "idna": [67, 142, 200, 384, 391, 462], "internation": [67, 88, 106, 142, 191, 251, 279, 282, 332, 338, 342, 343, 363, 432, 448, 459, 462, 463, 475, 477], "codepag": [67, 117, 142, 349, 471], "utf_8_sig": [67, 142], "strftime": [67, 99, 100, 136, 179, 263, 264, 266, 268, 363, 416, 448, 449, 462, 464, 465, 472, 473, 476], "strptime": [67, 179, 264, 338, 363, 416, 461, 462, 464, 472], "iana": [67, 179, 180, 238, 251, 256, 273, 311, 338, 408, 410, 479], "chainmap": [67, 179, 341, 383, 471, 473, 474, 477], "recip": [67, 84, 93, 100, 107, 144, 171, 179, 187, 197, 221, 247, 272, 287, 290, 295, 312, 327, 341, 349, 410, 423, 451, 471, 472], "dequ": [67, 179, 258, 313, 341, 383, 399, 424, 427, 439, 449, 463, 464, 465, 466, 470, 472, 475, 476], "defaultdict": [67, 86, 179, 341, 383, 464, 472], "ordereddict": [67, 86, 164, 172, 179, 252, 341, 383, 466, 468, 470, 472, 475, 476, 478, 479], "userdict": [67, 179, 460, 462, 465], "userlist": [67, 179, 461], "userstr": [67, 179, 459, 475, 479], "deep": [67, 86, 100, 157, 179, 247, 251, 296, 304, 328, 349, 355, 407, 448], "pretti": [67, 75, 88, 91, 106, 119, 164, 179, 182, 187, 247, 251, 252, 259, 266, 289, 294, 305, 375, 386, 408, 410, 416, 427, 449, 459, 460, 461, 464, 465, 467, 469, 471, 479], "printer": [67, 103, 179, 244, 251, 366, 375, 402, 449], "prettyprint": [67, 179, 474], "__dunder__": [67, 179], "_sunder_": [67, 179], "graph": [67, 179, 251, 265, 289, 296, 340, 350, 381, 461, 474, 479], "tower": [67, 218, 287, 340, 381, 465, 467], "implementor": [67, 287, 461, 466, 476], "theoret": [67, 87, 94, 183, 234, 287], "logarithm": [67, 144, 183, 233, 287, 292, 315, 341, 421, 462, 465, 468, 472, 473], "trigonometr": [67, 287, 463], "angular": [67, 287, 431], "hyperbol": [67, 187, 287, 465], "polar": [67, 287, 465], "coordin": [67, 77, 84, 91, 93, 100, 108, 135, 159, 173, 174, 176, 180, 268, 272, 278, 287, 337, 342, 363, 366, 373, 375, 381, 449, 459, 465, 469, 471, 475], "classif": [67, 263, 287, 289, 432], "off": [67, 77, 83, 86, 91, 94, 99, 100, 102, 103, 107, 109, 117, 152, 164, 173, 174, 180, 187, 188, 197, 205, 206, 213, 222, 229, 233, 240, 244, 258, 264, 265, 266, 272, 287, 289, 291, 298, 302, 305, 312, 315, 328, 332, 341, 358, 359, 363, 364, 373, 381, 385, 386, 392, 417, 425, 429, 432, 433, 437, 438, 442, 445, 447, 449, 452, 459, 460, 461, 462, 463, 464, 465, 467, 472, 474, 475, 476, 478, 479], "ration": [67, 180, 183, 251, 286, 287, 341, 425, 441, 465, 466, 467, 472], "reproduc": [67, 84, 107, 119, 198, 231, 287, 340, 345, 359, 392, 414, 423, 449, 453, 472, 477, 478], "averag": [67, 77, 92, 138, 233, 258, 287, 290, 305, 315, 323, 341, 345, 364, 373, 379, 431, 448, 467, 469, 470, 474, 478], "central": [67, 155, 180, 191, 202, 222, 284, 287, 459, 460, 461, 462, 464, 472], "spread": [67, 77, 104, 132, 287, 366, 465], "normaldist": [67, 287, 478], "classic": [67, 94, 122, 164, 181, 200, 227, 268, 287, 366, 381, 387, 446, 461, 462, 464, 466, 467, 472], "mont": [67, 287], "carlo": [67, 287, 470], "binomi": [67, 272, 287, 315], "bayesian": [67, 287], "classifi": [67, 102, 224, 248, 287, 304, 462, 466], "kernel": [67, 91, 112, 123, 129, 254, 258, 275, 287, 290, 325, 329, 330, 334, 338, 349, 352, 357, 362, 459, 464, 469, 473, 474, 476, 478], "densiti": [67, 287], "pure": [67, 73, 83, 84, 94, 96, 98, 100, 102, 119, 157, 166, 173, 180, 183, 216, 220, 222, 227, 232, 258, 305, 330, 349, 352, 353, 359, 406, 424, 425, 437, 439, 452, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478], "dircmp": [67, 216, 459, 464, 474], "fnmatch": [67, 216, 228, 251, 293, 345, 379, 385], "copytre": [67, 83, 139, 216, 465, 466, 472, 478], "rmtree": [67, 83, 139, 216, 290, 293, 359, 399, 470, 471, 473, 477, 478], "base_dir": [67, 139, 216], "persist": [67, 181, 238, 242, 244, 251, 265, 266, 271, 278, 317, 387, 423, 448, 472, 474], "unpickl": [67, 75, 93, 100, 180, 264, 266, 280, 281, 295, 297, 422, 462, 465, 466, 468], "dispatch": [67, 77, 83, 84, 86, 99, 100, 104, 141, 152, 174, 194, 223, 242, 295, 305, 318, 385, 416, 468, 470, 472, 474, 478], "copyreg": [67, 168, 251, 276, 295, 296, 467], "ndbm": [67, 295, 327, 425, 453, 478], "dumb": [67, 104, 295, 356, 475, 476, 477, 478], "sqlite": [67, 251, 295, 440, 448, 453, 464, 466, 469, 470, 471, 472, 473, 474, 477], "connect": [67, 85, 91, 92, 97, 100, 104, 107, 115, 120, 121, 127, 133, 139, 148, 157, 161, 166, 204, 209, 210, 220, 238, 239, 240, 242, 244, 245, 255, 263, 264, 266, 281, 285, 289, 290, 295, 296, 302, 306, 324, 325, 329, 330, 332, 335, 338, 344, 345, 349, 356, 359, 362, 366, 372, 381, 383, 387, 392, 394, 402, 404, 406, 408, 411, 413, 416, 423, 427, 440, 443, 445, 446, 452, 453, 458, 459, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "cursor": [67, 91, 152, 157, 172, 174, 244, 295, 296, 317, 366, 372, 373, 387, 464, 465, 468, 472, 476, 478, 479], "blob": [67, 295, 338, 387, 470], "prepareprotocol": [67, 295], "placehold": [67, 92, 100, 188, 227, 233, 264, 266, 295, 318, 342, 355, 361, 391, 396, 402, 433, 443, 449, 464, 470, 471, 472, 474, 477], "sql": [67, 94, 106, 172, 258, 278, 289, 295, 383, 448, 464, 468, 470, 473], "uri": [67, 100, 107, 239, 240, 293, 295, 311, 338, 381, 391, 392, 404, 407, 410, 412, 413, 415, 416, 469, 471, 473, 474], "explan": [67, 77, 79, 103, 107, 163, 164, 180, 187, 219, 242, 263, 268, 280, 283, 290, 294, 295, 298, 301, 316, 334, 341, 349, 363, 366, 392, 438, 439, 443, 451, 459, 460, 461, 462, 463, 464, 465, 472], "transact": [67, 94, 157, 239, 240, 278, 295, 315, 362, 392, 462, 464, 465, 471, 472, 475, 476], "autocommit": [67, 295, 471], "isolation_level": [67, 295], "bzip2": [67, 116, 215, 251, 329, 355, 419, 470, 472, 473], "shot": [67, 116, 166, 325, 477], "decompress": [67, 116, 146, 155, 215, 231, 406, 421, 448, 464, 469, 472, 473, 475, 476], "pyzipfil": [67, 116, 474], "zipinfo": [67, 116, 465, 476], "tar": [67, 79, 116, 251, 273, 289, 293, 329, 396, 423, 450, 457, 459, 462, 463, 464, 465, 466, 470, 471, 472], "tarinfo": [67, 116, 466, 472], "dialect": [67, 214, 337, 462, 464, 472], "interpol": [67, 214, 340, 341, 427, 443, 472, 475, 476], "rawconfigpars": [67, 214, 265, 466, 470, 474], "tomllib": [67, 164, 214, 251, 470], "toml": [67, 75, 164, 214, 251, 255, 469, 470], "netrc": [67, 214, 220, 251, 285, 461, 474, 475], "plist": [67, 214, 251, 269, 456, 465, 474, 477, 478], "digest": [67, 88, 171, 193, 201, 202, 234, 251, 280, 302, 338, 392, 464, 466, 467, 472, 473, 474, 477, 478, 479], "shake": [67, 171, 453, 470, 476, 479], "blake2": [67, 171, 453, 470, 476, 479], "person": [67, 92, 94, 171, 244, 337, 338, 340, 352, 423, 458, 459, 461, 465], "credit": [67, 85, 120, 165, 171, 244, 258, 349, 424, 445, 447, 470, 478], "authent": [67, 161, 171, 220, 232, 238, 245, 251, 264, 266, 283, 285, 302, 323, 332, 338, 390, 392, 416, 421, 461, 466, 472, 473, 474, 475, 476, 478, 479], "reentranc": [67, 115, 166, 313], "clock": [67, 84, 115, 123, 128, 136, 180, 305, 319, 381, 465, 470, 473, 475, 476, 477, 478], "add_argu": [67, 88, 100, 115, 157, 187, 197, 225, 306, 396, 448, 466, 472], "argumentpars": [67, 88, 100, 115, 157, 187, 197, 225, 306, 396, 448, 466, 471, 472, 475, 477], "prog": [67, 88, 100, 115, 289, 316, 396, 448, 472], "epilog": [67, 115, 202, 289, 464, 472], "formatter_class": [67, 100, 115], "prefix_char": [67, 115], "fromfile_prefix_char": [67, 115, 471], "argument_default": [67, 115], "allow_abbrev": [67, 115, 475], "conflict_handl": [67, 115, 289], "add_help": [67, 115], "exit_on_error": [67, 115], "metavar": [67, 100, 115, 197, 289, 396, 466, 471, 472], "parse_arg": [67, 88, 100, 115, 157, 187, 197, 225, 289, 306, 396, 448, 462, 466, 472], "abbrevi": [67, 86, 106, 115, 147, 174, 180, 183, 263, 289, 294, 305, 345, 363, 378, 410, 449, 452, 474, 475, 476], "filetyp": [67, 115, 186, 333, 466, 474], "intermix": [67, 115, 225, 477], "upgrad": [67, 79, 86, 107, 108, 115, 127, 133, 207, 239, 244, 396, 450, 453, 458, 461, 462, 466, 470, 472, 474, 476, 477, 478], "getopt": [67, 88, 115, 187, 251, 289, 462, 466], "logger": [67, 115, 122, 166, 265, 266, 280, 329, 353, 383, 385, 462, 466, 468, 472, 473, 474, 475, 477, 478, 479], "logrecord": [67, 99, 115, 266, 385, 462, 474], "loggeradapt": [67, 115, 466], "schema": [67, 92, 115, 278, 337, 466], "queuehandl": [67, 99, 115], "queuelisten": [67, 115, 475], "streamhandl": [67, 99, 100, 115, 264, 265, 472, 477], "filehandl": [67, 99, 100, 107, 115, 253, 264, 265, 465], "nullhandl": [67, 99, 115, 468], "watchedfilehandl": [67, 99, 115, 465, 476], "baserotatinghandl": [67, 99, 115, 463], "rotatingfilehandl": [67, 99, 100, 115, 265, 463, 465, 466], "timedrotatingfilehandl": [67, 99, 115, 463, 465, 474], "sockethandl": [67, 99, 100, 115, 265, 470, 474], "datagramhandl": [67, 99, 115, 265, 474], "sysloghandl": [67, 99, 115, 265, 353, 466, 470, 473], "nteventloghandl": [67, 99, 115, 265], "smtphandler": [67, 99, 100, 115, 265], "memoryhandl": [67, 99, 100, 115, 265], "httphandler": [67, 99, 100, 107, 115, 253, 265, 475], "getpass": [67, 115, 170, 245, 251, 279, 290, 302, 356, 358, 465], "password": [67, 100, 107, 115, 220, 230, 232, 245, 251, 266, 280, 283, 285, 290, 291, 302, 323, 332, 338, 347, 356, 358, 388, 391, 392, 416, 419, 464, 465, 466, 473, 474, 475, 476], "textpad": [67, 91, 115, 251, 465], "textbox": [67, 91, 115, 465], "panel": [67, 82, 115, 174, 251, 403, 460], "foreign": [67, 115, 164, 251, 329, 337, 355], "rlock": [67, 161, 166, 280, 465, 469, 472, 475], "semaphor": [67, 83, 96, 112, 121, 161, 209, 280, 290, 349, 359, 449, 465, 472, 473, 478, 479], "timer": [67, 91, 96, 161, 182, 209, 211, 280, 325, 330, 363, 364, 366, 373, 381, 448, 461, 462, 465, 470, 473, 475, 476, 477], "barrier": [67, 121, 161, 280, 381, 470, 472], "exchang": [67, 71, 104, 123, 161, 173, 209, 232, 233, 234, 275, 290, 313, 338, 344, 355, 362, 441, 443, 465, 466, 472, 473], "synchron": [67, 112, 120, 136, 161, 166, 175, 181, 183, 209, 223, 247, 251, 255, 275, 290, 327, 330, 335, 338, 359, 362, 366, 386, 395, 425, 449, 465, 470, 471, 472, 475, 477], "pool": [67, 72, 83, 108, 121, 127, 157, 161, 163, 220, 258, 281, 290, 315, 460, 462, 465, 466, 472, 473, 474, 476], "worker": [67, 100, 131, 160, 161, 163, 229, 313, 362, 464, 465, 466, 475, 479], "pipe": [67, 86, 100, 103, 104, 122, 127, 128, 130, 134, 161, 187, 205, 209, 210, 212, 251, 255, 290, 325, 326, 329, 330, 339, 345, 347, 349, 355, 359, 396, 452, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477], "primit": [67, 74, 83, 84, 112, 120, 121, 132, 133, 161, 173, 174, 184, 255, 288, 296, 305, 316, 325, 326, 330, 338, 362, 447, 449, 469, 470, 473, 474, 477], "sharedctyp": [67, 161, 475], "remot": [67, 79, 99, 100, 118, 123, 127, 130, 161, 167, 209, 239, 242, 245, 263, 264, 265, 266, 285, 302, 332, 334, 338, 352, 356, 372, 392, 400, 402, 406, 411, 415, 416, 448, 461, 472, 475], "listen": [67, 83, 104, 123, 161, 242, 265, 266, 285, 310, 326, 332, 334, 335, 338, 340, 359, 381, 404, 416, 462, 465, 466, 474, 475], "spawn": [67, 100, 121, 127, 129, 134, 135, 139, 161, 163, 254, 290, 306, 335, 359, 362, 471, 474, 478, 479], "forkserv": [67, 161, 471, 474], "shared_memori": [67, 161, 251, 349, 478], "launch": [67, 86, 129, 161, 162, 183, 226, 251, 280, 290, 345, 349, 359, 395, 400, 445, 456, 458, 459, 470, 472, 473, 474, 478], "executor": [67, 100, 122, 123, 127, 132, 161, 470, 472, 475, 479], "threadpoolexecutor": [67, 83, 122, 123, 161, 280, 362, 470, 472, 475, 476, 477, 478, 479], "processpoolexecutor": [67, 83, 122, 123, 161, 280, 362, 472, 475, 477, 478, 479], "sh": [67, 83, 100, 161, 298, 306, 328, 453, 459], "pipelin": [67, 161, 251, 347, 459], "popen2": [67, 161, 463, 465], "popen3": [67, 161], "vfork": [67, 161], "posix_spawn": [67, 139, 161, 290, 478], "simplequeu": [67, 161, 266, 280, 341, 477, 479], "interprocess": [67, 130, 251, 280, 334], "runner": [67, 100, 120, 121, 190, 385, 397, 463, 466, 470], "keyboard": [67, 80, 85, 91, 174, 244, 330, 345, 373, 381, 385, 438, 465], "sleep": [67, 83, 94, 100, 120, 121, 122, 123, 126, 130, 131, 132, 134, 135, 163, 164, 174, 254, 280, 319, 322, 330, 337, 345, 359, 363, 465, 469, 470, 473, 475, 476, 477, 478], "eager": [67, 356, 424, 451, 471], "shield": [67, 121, 478], "timeout": [67, 100, 104, 107, 112, 121, 123, 126, 131, 132, 134, 135, 163, 166, 174, 182, 220, 239, 245, 265, 266, 280, 285, 294, 302, 313, 325, 326, 330, 332, 335, 337, 338, 345, 356, 359, 362, 363, 378, 383, 392, 453, 462, 465, 466, 469, 470, 472, 473, 475, 478, 479], "tcp": [67, 79, 83, 99, 100, 104, 121, 123, 127, 220, 254, 266, 280, 332, 334, 335, 338, 359, 465, 466, 476, 477], "echo": [67, 85, 88, 91, 111, 123, 127, 134, 138, 167, 174, 226, 244, 259, 279, 290, 296, 326, 328, 334, 345, 358, 380, 385, 427, 445, 447, 465], "boundedsemaphor": [67, 121, 280, 362, 473, 478], "lifo": [67, 121, 157, 313, 341, 385], "tl": [67, 127, 133, 174, 220, 239, 251, 257, 266, 290, 302, 324, 332, 334, 359, 453, 457, 461, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478], "dn": [67, 100, 125, 127, 155, 256, 266, 334, 338, 395, 475], "hello": [67, 72, 74, 78, 84, 85, 100, 109, 111, 118, 126, 130, 132, 133, 134, 136, 143, 148, 173, 181, 223, 227, 232, 237, 275, 280, 285, 288, 296, 298, 301, 334, 335, 337, 338, 341, 357, 359, 361, 362, 365, 375, 383, 385, 386, 404, 432, 437, 439, 440, 443, 458, 472, 474, 475, 478, 479], "world": [67, 72, 78, 84, 91, 97, 100, 104, 111, 126, 130, 133, 136, 143, 148, 166, 173, 180, 223, 227, 232, 245, 254, 275, 280, 288, 289, 296, 298, 307, 322, 334, 335, 337, 338, 341, 357, 359, 361, 362, 365, 375, 381, 385, 392, 404, 407, 423, 432, 437, 439, 440, 443, 445, 451, 467, 475, 476], "call_soon": [67, 122, 126, 127, 130, 133, 383, 477], "call_lat": [67, 127, 477], "sigterm": [67, 130, 134, 280, 330, 345, 465], "transport": [67, 120, 123, 126, 133, 134, 167, 191, 195, 198, 203, 209, 271, 314, 332, 338, 415, 416, 461, 475, 476, 477], "datagram": [67, 123, 127, 266, 335, 338, 449, 470], "udp": [67, 99, 123, 127, 266, 334, 335, 359, 466, 470, 476, 477, 478, 479], "subprocess_exec": [67, 123, 127, 128, 129, 134], "subprocessprotocol": [67, 123], "multithread": [67, 123, 134, 136, 232, 263, 280, 315, 345, 356, 404, 462, 471, 479], "ca": [67, 91, 103, 159, 258, 392, 423, 465, 466, 474], "session": [67, 84, 85, 92, 99, 100, 123, 152, 166, 190, 210, 220, 239, 240, 280, 290, 294, 302, 306, 317, 326, 332, 349, 392, 433, 435, 444, 447, 452, 458, 463, 471, 473, 474, 476, 478], "cipher": [67, 130, 164, 170, 232, 453, 466, 469, 472, 473, 475, 476, 477], "poll": [67, 83, 123, 129, 134, 280, 290, 326, 330, 335, 338, 339, 345, 463, 465, 472, 473, 475, 479], "edg": [67, 102, 173, 174, 190, 198, 222, 229, 359, 361, 381, 446, 473, 474], "epol": [67, 326, 465, 474, 475, 479], "kqueue": [67, 319, 326, 465, 475], "kevent": 67, "multiplex": [67, 104, 251, 257, 325, 338, 474], "sigpip": [67, 345], "madv_": 67, "map_": 67, "mime": [67, 86, 103, 140, 143, 148, 155, 193, 197, 199, 200, 201, 202, 204, 205, 242, 251, 269, 282, 349, 404, 429, 448, 461, 463, 466, 472, 474, 475, 476, 477], "feedpars": [67, 191, 196, 282, 463], "defect": [67, 191, 193, 200, 202, 204, 205, 282, 463, 473, 477], "headerregistri": [67, 191, 196, 197, 202, 205, 282], "contentmanag": [67, 191, 203, 282, 474], "compat32": [67, 191, 192, 195, 198, 199, 202, 203, 204, 205, 206, 282, 473, 475, 476], "scratch": [67, 88, 100, 125, 186, 191, 195, 198, 204, 282, 338, 396, 407, 473, 474], "charset": [67, 148, 180, 187, 191, 193, 194, 199, 202, 203, 205, 206, 227, 245, 282, 338, 392, 404, 472, 475], "complianc": [67, 183, 191, 200, 205, 282, 285, 404, 407, 473, 474], "interoper": [67, 93, 100, 113, 123, 126, 138, 205, 242, 256, 282, 296, 315, 338, 341, 419, 425, 443, 468, 472, 474], "maildir": [67, 282, 464, 466], "mbox": [67, 193, 198, 282, 464], "mh": [67, 282, 464], "babyl": [67, 282], "mmdf": [67, 282], "maildirmessag": [67, 282], "mboxmessag": [67, 202, 282], "mhmessag": [67, 282], "babylmessag": [67, 282], "mmdfmessag": [67, 282], "base16": [67, 251, 282, 463], "base32": [67, 251, 282, 463, 469], "base85": [67, 251, 282, 474], "quopri": [67, 143, 153, 155, 251, 282], "markup": [67, 214, 237, 251, 311, 407, 416, 465, 472, 473], "hypertext": [67, 107, 237, 238, 251, 270, 407], "xhtml": [67, 107, 235, 236, 251, 270, 311, 392, 407, 408, 410, 472], "htmlparser": [67, 270, 467, 469, 473, 474, 475, 479], "entiti": [67, 86, 103, 107, 235, 237, 239, 251, 265, 270, 311, 340, 392, 406, 407, 408, 409, 411, 412, 413, 414, 423, 462, 473, 478], "vulner": [67, 106, 123, 134, 190, 234, 270, 296, 311, 324, 328, 337, 345, 383, 408, 409, 410, 411, 416, 417, 421, 464], "defusedxml": [67, 270], "pull": [67, 72, 180, 183, 233, 270, 325, 381, 386, 409, 422, 459, 463, 466, 474, 477], "xpath": [67, 270, 406, 479], "xinclud": [67, 270], "qname": [67, 270, 407, 412, 413], "treebuild": [67, 270, 472, 478], "xmlparser": [67, 270, 466, 474, 478], "xmlpullpars": [67, 270, 474], "domimplement": [67, 270], "node": [67, 229, 232, 233, 237, 256, 261, 270, 290, 291, 293, 300, 334, 338, 349, 373, 374, 395, 408, 409, 410, 412, 449, 453, 459, 462, 464, 465, 466, 469, 470, 472, 476, 477, 478, 479], "nodelist": [67, 270, 408, 425], "documenttyp": [67, 270], "namednodemap": [67, 270], "cdatasect": [67, 270], "processinginstruct": [67, 270, 410, 412, 464], "minidom": [67, 251, 270, 406, 407, 409, 459, 460, 462, 478], "pulldom": [67, 251, 270, 406, 470, 478], "domeventstream": [67, 270, 470, 478], "saxexcept": [67, 270], "contenthandl": [67, 270, 409, 411, 413, 414, 459], "dtdhandler": [67, 270, 413], "entityresolv": [67, 270, 413], "errorhandl": [67, 270, 411, 413, 452, 465], "lexicalhandl": [67, 270, 463, 469], "saxutil": [67, 251, 270, 411], "xmlreader": [67, 251, 270, 409, 411, 412, 414, 475], "incrementalpars": [67, 270], "inputsourc": [67, 270, 411, 412, 414, 475], "attributesn": [67, 270, 411, 412], "expat": [67, 251, 270, 301, 406, 410, 412, 453, 459, 460, 462, 464, 466, 472], "expaterror": [67, 270, 472], "browser": [67, 94, 104, 106, 107, 148, 149, 187, 241, 242, 244, 251, 253, 254, 261, 269, 305, 310, 349, 391, 392, 437, 449, 450, 453, 459, 460, 462, 463, 464, 465, 470, 471, 472, 473, 476, 477], "wsgi": [67, 251, 253, 464, 470, 472], "simple_serv": [67, 253, 464, 476], "checker": [67, 84, 86, 102, 117, 174, 180, 190, 253, 289, 341, 383, 424, 425, 463, 464, 469, 470, 471, 475, 476, 478, 479], "url": [67, 84, 133, 139, 140, 147, 148, 163, 164, 220, 238, 239, 240, 242, 244, 248, 251, 253, 266, 273, 310, 323, 341, 359, 390, 393, 395, 396, 400, 404, 410, 413, 414, 416, 417, 423, 429, 448, 459, 462, 463, 464, 465, 466, 472, 474, 475], "openerdirector": [67, 107, 253, 474], "basehandl": [67, 253, 386, 404], "httpredirecthandl": [67, 107, 253], "httpcookieprocessor": [67, 240, 253, 463], "proxyhandl": [67, 107, 253], "httppasswordmgr": [67, 107, 253], "httppasswordmgrwithpriorauth": [67, 253, 475], "abstractbasicauthhandl": [67, 253, 386], "httpbasicauthhandl": [67, 107, 253], "proxybasicauthhandl": [67, 253], "abstractdigestauthhandl": [67, 253, 386], "httpdigestauthhandl": [67, 253], "proxydigestauthhandl": [67, 253], "httpshandler": [67, 253, 472], "datahandl": [67, 107, 253, 474], "ftphandler": [67, 107, 253], "cacheftphandl": [67, 253], "unknownhandl": [67, 107, 253], "httperrorprocessor": [67, 107, 253], "robot": [67, 251, 253, 381, 389, 459], "httpconnect": [67, 253, 416, 465, 466, 472, 474, 475, 476, 477], "httprespons": [67, 253, 392, 466, 473], "httpmessag": [67, 107, 242, 253], "ftp_tl": [67, 253, 466, 471, 472, 473, 479], "pop3": [67, 251, 253, 473, 474, 475, 479], "imap4": [67, 251, 253, 302, 472, 475, 476, 478, 479], "smtp": [67, 79, 83, 99, 100, 191, 197, 198, 200, 205, 251, 253, 266, 338, 448, 459, 461, 465, 472, 473, 474, 475, 479], "rfc": [67, 99, 100, 103, 107, 123, 140, 143, 148, 155, 172, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 220, 227, 232, 234, 238, 239, 240, 241, 242, 245, 251, 253, 256, 259, 263, 266, 268, 269, 285, 302, 314, 324, 332, 334, 338, 343, 344, 356, 363, 390, 391, 392, 404, 405, 416, 448, 459, 461, 462, 463, 464, 465, 466, 472, 473, 475, 477, 479], "4122": [67, 251, 253, 464], "tcpserver": [67, 100, 242, 253, 264, 417, 466], "udpserv": [67, 253], "mixin": [67, 93, 158, 166, 253, 255, 392], "cooki": [67, 107, 112, 232, 238, 251, 253, 255, 338, 362, 375, 392, 463, 465, 466, 467, 475, 477], "morsel": [67, 253, 465, 475, 477], "cookiejar": [67, 238, 241, 251, 253, 392], "filecookiejar": [67, 253], "cookiepolici": [67, 253], "defaultcookiepolici": [67, 253], "rpc": [67, 79, 244, 251, 253, 259, 271, 415, 423, 461, 462, 463, 464, 465, 466, 476], "serverproxi": [67, 253, 417, 475, 478], "protocolerror": [67, 253], "multical": [67, 253, 417], "simplexmlrpcserv": [67, 253, 416, 461, 463, 464, 465, 466, 467], "cgixmlrpcrequesthandl": [67, 253, 463], "docxmlrpcserv": [67, 253, 462, 464, 465, 467], "doccgixmlrpcrequesthandl": [67, 253], "ipv4": [67, 97, 104, 123, 242, 251, 253, 334, 338, 465, 473, 478, 479], "ipv6": [67, 97, 123, 242, 251, 253, 334, 338, 359, 391, 453, 461, 465, 466, 468, 472, 473, 475, 478, 479], "ip": [67, 79, 99, 100, 123, 144, 240, 242, 253, 264, 266, 334, 335, 338, 356, 359, 391, 392, 459, 465, 472, 473, 475, 477], "net": [67, 80, 83, 107, 180, 191, 232, 240, 253, 290, 316, 325, 421, 423, 431, 458, 459, 460, 461, 462, 463, 464, 465, 467, 473], "multimedia": [67, 251, 269, 292], "wav": [67, 138, 203, 251, 274, 333, 403, 447], "wave_read": [67, 274], "wave_writ": [67, 274], "color": [67, 84, 86, 93, 100, 152, 157, 174, 186, 208, 219, 237, 251, 274, 328, 365, 366, 372, 373, 375, 402, 425, 438, 439, 469, 470, 472, 476, 477], "multilingu": [67, 243, 244, 251], "nulltransl": [67, 243, 470], "gnutransl": [67, 243], "catalog": [67, 243, 459, 460, 462], "tip": [67, 84, 222, 243, 244, 447, 459, 466], "turtl": [67, 152, 219, 244, 251, 366, 465, 467, 470, 471, 472], "graphic": [67, 81, 84, 91, 106, 155, 170, 174, 219, 246, 251, 314, 366, 372, 385, 400, 436, 465], "draw": [67, 91, 152, 174, 219, 244, 315, 373, 465], "pen": [67, 219], "turtlescreen": [67, 219], "screen": [67, 77, 84, 91, 94, 96, 106, 152, 165, 174, 176, 219, 244, 317, 345, 366, 372, 373, 375, 440, 449, 459, 461, 462, 465, 469, 472, 475, 479], "rawturtl": [67, 219, 471], "motion": [67, 174, 219, 340, 368], "anim": [67, 93, 219, 227, 373, 443, 465, 475], "tcl": [67, 80, 244, 251, 365, 372, 373, 449, 456, 458, 459, 462, 465, 466, 469, 470, 472, 475, 476, 478, 479], "life": [67, 86, 102, 164, 223, 281, 296, 337, 355, 365, 407, 419, 438, 458, 459, 465, 478], "concept": [67, 79, 86, 91, 94, 97, 98, 99, 102, 106, 113, 136, 164, 183, 191, 241, 247, 255, 258, 280, 298, 306, 315, 337, 341, 355, 362, 365, 381, 383, 385, 387, 409, 410, 424, 429, 436, 442, 461, 462, 467, 469, 470, 473, 474, 475], "handi": [67, 84, 91, 92, 93, 102, 103, 104, 111, 147, 164, 173, 187, 289, 341, 365, 386, 435, 436, 438, 442, 447, 459, 463], "packer": [67, 365], "coupl": [67, 74, 84, 100, 104, 117, 123, 202, 205, 206, 264, 280, 289, 330, 365, 386, 387, 392, 406, 458, 474, 476, 477], "colorchoos": [67, 251, 365, 366], "choos": [67, 72, 74, 77, 83, 84, 88, 94, 100, 102, 103, 104, 106, 117, 155, 160, 190, 202, 222, 223, 232, 242, 247, 251, 254, 264, 272, 281, 289, 292, 296, 305, 315, 337, 338, 344, 349, 350, 362, 365, 366, 372, 386, 395, 410, 423, 429, 441, 456, 458, 461, 462, 466, 472, 473, 474, 477], "dialog": [67, 76, 91, 244, 251, 278, 289, 359, 365, 366, 370, 372, 381, 458, 469, 474, 475, 476, 477, 478, 479], "font": [67, 100, 106, 164, 209, 244, 251, 361, 365, 366, 370, 372, 373, 381, 445, 469, 476, 477, 479], "simpledialog": [67, 365, 366], "filedialog": [67, 365, 366], "commondialog": [67, 365, 366, 367], "messagebox": [67, 173, 186, 251, 365, 366], "scrolledtext": [67, 251, 365, 366], "scroll": [67, 91, 152, 174, 244, 251, 365, 366, 373], "dnd": [67, 251, 365, 366], "drag": [67, 251, 365, 366, 372, 373, 381, 456, 469], "scrollabl": [67, 244, 365, 372], "combobox": [67, 365, 372], "spinbox": [67, 365, 372, 477, 478], "notebook": [67, 365, 372, 478], "progressbar": [67, 365], "sizegrip": [67, 365], "treeview": [67, 365, 478], "tix": [67, 80, 251, 365, 366, 462, 476], "hierarch": [67, 99, 242, 264, 265, 365, 366, 373, 391, 409, 410, 417, 429, 447], "listbox": [67, 365, 373], "tabular": [67, 172, 365], "geometri": [67, 365, 366, 371, 373], "menu": [67, 85, 86, 91, 365, 366, 372, 381, 425, 456, 458, 464, 468, 469, 472, 476, 477, 478, 479], "calltip": [67, 365], "newtyp": [67, 184, 476], "nomin": [67, 119, 184, 340], "timelin": [67, 184], "onlin": [67, 79, 102, 184, 251, 366, 381, 396, 411, 438, 461, 465], "recogn": [67, 72, 84, 85, 86, 92, 97, 103, 117, 152, 155, 164, 174, 184, 188, 193, 200, 215, 220, 225, 232, 246, 247, 255, 259, 263, 273, 279, 289, 290, 294, 296, 300, 316, 328, 333, 342, 359, 363, 366, 374, 383, 386, 391, 392, 413, 432, 433, 438, 445, 447, 458, 459, 467, 472, 473, 474, 475], "doctestfind": [67, 184, 463], "doctestpars": [67, 184], "doctestrunn": [67, 184, 463], "outputcheck": [67, 184, 463], "soapbox": [67, 184], "discoveri": [67, 184, 190, 277, 332, 416, 470, 472, 474, 475], "organ": [67, 79, 83, 87, 94, 98, 99, 100, 103, 184, 190, 254, 255, 338, 423, 429, 462, 479], "subtest": [67, 184, 474], "load_test": [67, 184, 190, 359, 475], "fixtur": [67, 184, 466], "setupclass": [67, 184, 466, 478], "teardownclass": [67, 184, 466], "setupmodul": [67, 184, 466, 478], "teardownmodul": [67, 184, 466], "patcher": [67, 184, 387], "test_prefix": [67, 184], "magicmock": [67, 184, 475], "create_autospec": [67, 184], "filter_dir": [67, 184], "mock_open": [67, 184, 387, 474], "autospecc": [67, 184], "seal": [67, 184, 212, 472, 477], "side_effect": [67, 184, 386, 476], "cope": [67, 79, 184, 463], "2to3": [67, 86, 184, 251, 465, 466, 467, 470, 471, 472], "fixer": [67, 184], "lib2to3": [67, 86, 184, 470, 471, 479], "regress": [67, 77, 84, 184, 190, 251, 259, 340, 466, 474, 475], "socket_help": [67, 184, 251], "script_help": [67, 184, 251], "bytecode_help": [67, 184, 251], "threading_help": [67, 184, 251], "os_help": [67, 184, 251], "import_help": [67, 184, 251], "warnings_help": [67, 184, 251], "calibr": [67, 182], "programmat": [67, 71, 77, 110, 119, 164, 166, 182, 205, 207, 261, 263, 265, 277, 289, 296, 306, 317, 349, 375, 392, 466, 473, 474], "peak": [67, 138, 182, 464, 479], "domainfilt": [67, 182, 476], "snapshot": [67, 182, 254, 339, 474], "statisticdiff": [67, 182], "envbuild": [67, 189, 474], "standalon": [67, 77, 86, 119, 166, 189, 190, 249, 311, 381, 385, 408, 424, 438, 456, 465], "ancillari": [67, 312, 334, 473], "stop_iter": [67, 312], "posix_us": [67, 312, 472], "nt_user": [67, 312, 472], "osx_framework_us": [67, 312], "posix_hom": [67, 312, 472], "posix_prefix": [67, 312, 472], "idiomat": [67, 109, 312, 383, 437, 439], "post": [67, 79, 93, 94, 99, 100, 107, 140, 148, 173, 190, 191, 238, 239, 242, 266, 285, 292, 294, 312, 338, 349, 366, 391, 392, 396, 417, 437, 451, 453, 458, 459, 461, 465, 471, 472, 473, 478], "__enter__": [67, 86, 100, 188, 255, 280, 312, 330, 341, 355, 383, 385, 386, 402, 424, 425, 464, 465, 466, 470, 473, 476], "reusabl": [67, 111, 312, 383, 404, 474], "reentrant": [67, 255, 312, 313, 362, 474], "atexit": [67, 77, 83, 109, 163, 251, 264, 312, 317, 399, 459, 463, 469], "tracebackexcept": [67, 312, 470, 475], "stacksummari": [67, 312, 470, 475], "framesummari": [67, 312, 475], "sitecustom": [67, 312, 351, 435, 466, 474], "usercustom": [67, 312, 351, 435, 474], "codeop": [67, 78, 177, 251], "pkgutil": [67, 251, 277, 464, 465, 469, 470, 471, 473, 476, 477], "modulefind": [67, 251, 277], "runpi": [67, 111, 153, 251, 277, 379, 452, 464, 465, 466, 468, 469, 474], "import_modul": [67, 84, 100, 222, 265, 277, 321, 359, 425, 429, 433, 466, 471, 473], "tabnanni": [67, 85, 153, 251, 261, 459], "disassembl": [67, 251, 261, 297, 474, 477], "msvcrt": [67, 76, 85, 139, 173, 251, 401, 465, 466], "vc": [67, 173, 251, 401], "hkey_": [67, 401], "sound": [67, 71, 83, 114, 138, 174, 220, 251, 292, 346, 347, 352, 401, 447, 462, 465], "pwd": [67, 170, 220, 226, 230, 251, 290, 291, 336, 345, 388, 419, 462, 479], "termio": [67, 212, 251, 380, 388, 479], "tty": [67, 174, 226, 251, 255, 290, 388, 434, 435, 445, 452, 465], "ioctl": [67, 118, 139, 251, 292, 334, 388, 463, 465, 476], "syslog": [67, 99, 139, 251, 266, 388, 466, 471, 473], "cli": [67, 231, 248, 251, 337, 359, 452, 474, 477], "aiff": [67, 150, 203, 251, 333, 347, 447], "audio": [67, 114, 150, 203, 251, 333, 346, 347, 359, 398, 403, 459], "cgitb": [67, 148, 251, 347, 470, 471], "iff": [67, 187, 190, 251, 347], "mailcap": [67, 251, 347, 470, 471], "cab": [67, 464], "precomput": [67, 144], "ni": [67, 76, 230, 251, 304, 347, 391, 443, 464, 470, 471], "sun": [67, 106, 138, 147, 180, 242, 246, 251, 271, 292, 340, 347, 363, 405, 423, 470], "yellow": [67, 91, 93, 144, 157, 174, 251, 347, 381, 449, 463, 471], "terminologi": [67, 97, 198, 242, 271, 363, 373, 407, 437, 460, 461, 464, 465], "conflict": [67, 72, 77, 86, 100, 103, 107, 113, 117, 157, 164, 208, 210, 227, 238, 349, 381, 383, 402, 410, 423, 437, 445, 450, 452, 458, 469, 472, 474, 477], "ossaudiodev": [67, 251, 347, 462, 470, 471, 475], "oss": [67, 251, 345, 347, 462, 473], "mixer": 67, "spwd": [67, 230, 251, 307, 347, 464, 470, 471, 476], "shadow": [67, 84, 85, 170, 230, 251, 252, 307, 347, 355, 447, 448, 464, 470, 474, 479], "au": [67, 203, 251, 292, 333, 338, 347, 447], "au_read": 67, "au_writ": [67, 474], "telnet": [67, 139, 167, 251, 347, 391, 465, 476], "uuencod": [67, 140, 143, 155, 251, 347], "xdrlib": [67, 118, 251, 347, 470, 471], "xdr": [67, 118, 251, 296, 347], "ic": [67, 180, 281, 344, 465], "setuptool": [67, 73, 75, 76, 248, 299, 304, 352, 396, 450, 458, 466, 469, 471, 474, 476], "caution": [67, 72, 84, 125, 187, 265, 289, 290, 293, 345, 410, 464], "tss": [67, 477], "arena": [67, 428, 452, 464, 479], "scientif": [67, 183, 340, 342, 451, 458, 465], "howto": [67, 83, 84, 91, 117, 316, 334, 337, 392, 416, 459, 461, 466, 467, 472], "transit": [67, 93, 97, 98, 107, 180, 223, 258, 265, 327, 335, 392, 422, 427, 461, 463, 464, 466, 469, 473], "primer": 67, "thought": [67, 77, 79, 94, 98, 144, 280, 438, 459, 461, 462, 467, 469, 475], "super": [67, 84, 86, 93, 100, 103, 113, 117, 129, 157, 166, 178, 188, 200, 210, 222, 247, 280, 293, 296, 309, 319, 366, 379, 381, 387, 392, 396, 399, 425, 437, 447, 461, 465, 467, 469, 471, 474, 476], "orm": 67, "intenum": [67, 208, 238, 330, 334, 338, 341, 476], "strenum": [67, 208, 238, 469, 470], "intflag": [67, 208, 252, 316, 338, 341, 476], "_private__nam": 67, "minutia": 67, "aka": [67, 119, 190, 352, 406, 419, 425, 458, 470, 477], "orderedenum": 67, "duplicatefreeenum": 67, "planet": [67, 340, 464], "timeperiod": [67, 208], "enumtyp": [67, 208, 470], "provabl": [67, 458], "modular": [67, 83, 86, 99, 170, 222, 473, 478], "combinator": [67, 258, 315, 468, 478], "destin": [67, 99, 106, 174, 186, 205, 209, 239, 264, 265, 266, 268, 275, 289, 290, 329, 334, 341, 353, 355, 396, 463, 465, 470, 471, 473, 474, 478], "contextu": [67, 187, 264], "impart": [67, 264], "deploi": [67, 140, 199, 237, 345, 366, 404, 422, 456, 472, 478, 479], "gunicorn": 67, "uwsgi": [67, 345], "rotat": [67, 99, 157, 183, 266, 381, 463, 465, 466], "zeromq": 67, "namer": [67, 266], "elabor": [67, 77, 103, 222, 423, 432, 459, 462], "dictconfig": [67, 99, 265, 266, 466, 472], "condition": [67, 111, 264, 316, 359, 479], "gmt": [67, 99, 180, 206, 242, 264, 338, 363], "starter": 67, "qt": 67, "rfc5424": 67, "plagu": [67, 474], "metacharact": [67, 269, 316, 345, 463], "lookahead": [67, 316, 424, 428, 463], "greedi": [67, 155, 316, 356], "feedback": [67, 79, 227, 381, 423, 463], "ipc": [67, 120, 127, 130, 254, 334], "disconnect": [67, 302, 332, 337, 402, 478], "die": [67, 325], "TO": [67, 84, 86, 89, 94, 95, 100, 222, 223, 341, 423], "ascend": [67, 188, 305, 341], "descend": [67, 99, 113, 119, 160, 193, 202, 252, 264, 280, 293, 305, 339, 354, 366, 373, 385, 407, 408, 410, 437, 464, 466], "undecor": [67, 100, 223, 341], "urlerror": [67, 390, 392, 465], "httperror": [67, 223, 390, 392, 474], "geturl": [67, 239, 391, 392], "footnot": [67, 72, 75, 113, 148, 150, 158, 164, 172, 180, 190, 194, 195, 197, 198, 200, 202, 205, 206, 222, 227, 233, 236, 259, 271, 293, 294, 296, 311, 338, 341, 363, 384, 400, 408, 410, 416, 424, 425, 426, 427, 429, 432, 435, 437, 438, 439, 445, 446, 447, 451], "conclus": 67, "instrument": [67, 95, 123, 188, 223, 305, 453, 472, 476], "tapset": 67, "newer": [67, 70, 74, 79, 86, 99, 102, 114, 190, 240, 244, 254, 265, 266, 285, 290, 294, 296, 309, 311, 325, 337, 338, 341, 363, 366, 383, 405, 406, 419, 453, 456, 457, 458, 469, 470, 471, 474, 475, 476, 477, 478, 479], "un": [67, 197, 200, 252, 285, 433, 446, 469, 474], "stringiz": [67, 252, 469], "__annotations__": [67, 86, 92, 178, 188, 222, 223, 252, 383, 424, 425, 433, 438, 467, 469, 472, 474, 475, 476, 478, 479], "quirk": [67, 91, 341, 431, 437, 439, 456, 469, 474], "lossless": [67, 375], "am": [67, 99, 100, 180, 263, 296, 363, 431, 446, 476], "strang": [67, 84, 112, 233, 361, 391, 425, 438, 458, 460, 464, 465], "inaccur": [67, 222, 461, 463], "tradit": [67, 72, 75, 86, 155, 170, 263, 268, 272, 289, 290, 296, 307, 352, 359, 424, 428, 429, 448, 453, 458, 465, 472], "__builtin_new": 67, "__pure_virtu": 67, "pyd": [67, 70, 83, 266, 351, 420, 464, 472, 475, 478], "keypress": [67, 91, 279, 465], "l1": [67, 83, 155, 373], "toolkit": [67, 106, 258, 365, 366, 436, 456, 459], "glossari": [67, 106, 178, 442], "contributor": [67, 108, 119, 423, 467, 470], "licens": [67, 68, 79, 85, 108, 120, 165, 244, 248, 268, 304, 349, 445, 447, 450, 461, 478], "psf": [67, 79, 293], "agreement": [67, 340, 459, 478], "FOR": [67, 316], "beopen": [67, 68], "cnri": [67, 459], "cwi": [67, 79, 237, 334, 391], "bsd": [67, 83, 91, 104, 130, 174, 212, 319, 325, 330, 334, 339, 363, 380, 435, 453, 459, 461, 465, 471, 474], "IN": [67, 465, 476], "THE": [67, 198, 428], "incorpor": [67, 72, 79, 99, 103, 157, 183, 264, 338, 391, 410, 462, 464, 465, 466, 469, 472, 478], "mersenn": [67, 315, 462], "twister": [67, 315, 462], "uudecod": 67, "test_epol": 67, "siphash24": [67, 453, 470], "strtod": 67, "dtoa": [67, 453, 466], "libffi": [67, 466, 470, 477], "cfuhash": 67, "libmpdec": [67, 183, 453, 473], "w3c": [67, 107, 237, 239, 392, 407, 408, 412, 425, 460, 469, 476, 477, 478, 479], "c14n": [67, 410, 478], "2001": [68, 97, 100, 206, 256, 329, 355, 363, 410, 419, 423, 460, 461, 462, 465, 472, 478], "2023": [68, 100, 423, 471], "foundat": [68, 94, 108, 120, 166, 338, 366, 423, 456, 458, 462, 463, 465, 473], "2000": [68, 84, 99, 147, 155, 220, 266, 281, 363, 381, 423, 438, 441, 459, 462, 465, 472, 473, 474], "corpor": [68, 108, 423], "nation": [68, 423], "research": [68, 94, 423, 469], "guidanc": [69, 85, 102, 382, 438, 466, 470, 471], "pyinitu_": 70, "punycod": [70, 155, 462], "hyphen": [70, 117, 155, 225, 289, 316, 361, 383, 395, 452, 458, 462], "initfunc_nam": 70, "_": [70, 92, 100, 101, 117, 119, 131, 140, 143, 146, 178, 180, 218, 222, 223, 227, 241, 244, 247, 256, 258, 269, 280, 285, 296, 304, 316, 318, 319, 329, 330, 341, 342, 349, 359, 375, 381, 383, 391, 396, 399, 419, 424, 428, 431, 432, 433, 438, 446, 447, 469, 470, 476, 477, 478], "u_": 70, "readthedoc": [70, 248, 404, 464], "en": [70, 94, 106, 107, 157, 227, 232, 237, 285, 392, 457, 458, 464, 472, 473], "tailor": [71, 243, 337, 341, 359, 471], "occasion": [71, 77, 83, 85, 100, 117, 118, 166, 174, 183, 187, 198, 202, 227, 244, 268, 272, 289, 290, 362, 365, 433, 437, 449, 459, 464, 465, 472], "Then": [71, 77, 78, 83, 84, 91, 93, 100, 101, 148, 187, 188, 190, 191, 242, 248, 266, 269, 278, 286, 289, 331, 335, 338, 342, 370, 379, 425, 440, 446, 458, 467, 472], "identif": [71, 134, 280, 300, 343, 362, 469], "great": [71, 93, 99, 188, 233, 240, 316, 386, 439, 464, 470], "fprintf": [71, 72], "ctime": [71, 180, 290, 291, 339, 363, 462], "troubl": [71, 97, 104, 107, 210, 458, 463], "piec": [71, 79, 86, 94, 101, 103, 104, 130, 138, 143, 148, 166, 176, 187, 188, 190, 199, 240, 267, 289, 338, 355, 366, 383, 411, 426, 432, 437, 438, 461, 464, 474, 479], "cumbersom": [71, 98, 183, 366], "sai": [71, 72, 74, 76, 77, 84, 85, 88, 92, 97, 100, 102, 103, 104, 106, 113, 130, 136, 144, 172, 180, 190, 199, 223, 227, 233, 240, 244, 248, 263, 264, 265, 266, 268, 280, 288, 345, 352, 392, 410, 418, 425, 429, 431, 438, 441, 443, 451, 460, 461, 462, 464, 465, 466, 469, 470, 472, 474], "despit": [71, 84, 86, 100, 104, 232, 234, 259, 293, 322, 338, 345, 383, 429, 448, 465], "accommod": [71, 100, 105, 198, 247, 366, 439, 463], "pname": 71, "pmodul": [71, 72], "parg": 71, "pythonfil": 71, "atoi": [71, 263], "proce": [71, 135, 157, 183, 192, 202, 258, 268, 280, 305, 338, 357, 362, 370, 424, 427, 437], "subroutin": [71, 86, 94, 464], "glue": [71, 461, 463], "numarg": 71, "emb_numarg": 71, "embmethod": 71, "embmodul": 71, "pyinit_emb": 71, "particularli": [71, 77, 97, 103, 107, 117, 280, 289, 290, 294, 305, 335, 345, 352, 383, 385, 386, 391, 443, 446, 451, 459, 460, 462, 463, 466, 467, 472, 474, 475, 477], "cflag": [71, 101, 303, 358, 453, 462], "wsign": 71, "dndebug": 71, "fwrapv": 71, "wall": [71, 180, 305, 465, 471], "ldflag": [71, 453, 462], "x86_64": [71, 352, 453, 475, 478], "lpython3": [71, 478], "lpthread": 71, "ldl": 71, "lutil": 71, "lm": [71, 341, 432], "get_makefile_filenam": [71, 352], "get_config_var": [71, 290, 352, 422, 466, 472, 474], "linkforshar": 71, "xlinker": 71, "cffi": [72, 73, 90, 183], "favorit": [72, 79, 106, 439, 447], "food": [72, 86, 296, 443], "monti": [72, 164, 190, 222, 259, 290, 293, 337, 340, 341, 355, 419, 436, 451, 463, 465, 472], "fan": 72, "spammodul": 72, "spammifi": 72, "shortli": [72, 74, 135, 366, 449], "spam_system": 72, "st": [72, 83, 345, 381, 462, 463], "convention": [72, 240, 281, 289, 290, 396], "saw": [72, 439], "pyerr_": 72, "lost": [72, 88, 93, 99, 100, 106, 127, 130, 174, 180, 183, 198, 223, 244, 259, 264, 266, 280, 305, 329, 330, 332, 335, 423, 424, 441, 447, 459, 461, 472, 473, 474, 479], "pretend": [72, 102, 104, 174, 386, 425, 437, 461, 478], "went": [72, 88, 141, 210, 292, 332, 410, 459, 461, 464, 465, 479], "predeclar": 72, "cours": [72, 75, 77, 79, 85, 93, 94, 99, 100, 104, 113, 173, 183, 190, 197, 199, 204, 232, 254, 264, 265, 280, 286, 289, 290, 328, 335, 338, 340, 366, 381, 386, 387, 407, 416, 423, 425, 437, 438, 446, 452, 459, 460, 462, 467, 472, 473, 474], "wise": [72, 93, 178, 183, 265, 461, 477], "couldn": [72, 103, 107, 187, 255, 290, 330, 337, 383, 387, 420, 460, 461, 464, 466, 471, 476], "satisfi": [72, 107, 178, 218, 228, 231, 252, 255, 265, 272, 362, 425, 429, 439, 472], "spamerror": 72, "retain": [72, 87, 105, 117, 157, 164, 166, 174, 183, 187, 193, 202, 205, 210, 244, 247, 252, 258, 264, 268, 290, 328, 337, 338, 381, 391, 416, 423, 425, 427, 432, 473, 474, 476, 478], "unintend": [72, 84, 183, 280, 293, 355, 470], "sampl": [72, 74, 83, 87, 92, 93, 94, 100, 101, 103, 105, 109, 114, 138, 152, 172, 173, 190, 220, 244, 276, 292, 296, 304, 305, 315, 316, 333, 340, 346, 355, 364, 373, 392, 398, 410, 424, 438, 448, 458, 460, 461, 462, 465, 466, 470, 472, 474, 476, 477, 478], "genuin": [72, 190, 212, 466, 472], "seen": [72, 74, 83, 84, 86, 88, 93, 94, 100, 152, 188, 208, 227, 232, 252, 258, 266, 268, 289, 302, 328, 350, 366, 397, 399, 410, 412, 421, 437, 438, 440, 448, 452, 462, 465, 468, 471, 474, 477], "promis": [72, 93, 252, 472], "spammethod": 72, "obsolet": [72, 91, 148, 210, 240, 259, 264, 303, 311, 341, 349, 363, 386, 397, 400, 405, 416, 450, 459, 460, 461, 464, 466, 469, 471, 472, 474, 475, 476], "spam_doc": 72, "pyinit_nam": 72, "satisfactorili": 72, "pyimport_inittab": 72, "interven": [72, 100, 187, 190, 201, 449, 473], "exercis": [72, 77, 83, 99, 100, 104, 157, 184, 264, 289, 305, 359, 423, 465], "substanti": [72, 240, 258, 271, 311, 407, 423, 461, 463, 468, 470, 472, 473, 474, 476], "xxmodul": 72, "perman": [72, 107, 220, 224, 238, 245, 392, 449, 458, 475, 479], "rebuild": [72, 160, 472], "luckili": [72, 385, 404], "toplevel": [72, 157, 183, 222, 348, 366, 372, 373, 410], "subdirectori": [72, 75, 83, 84, 100, 160, 197, 213, 228, 244, 247, 249, 250, 268, 290, 293, 299, 331, 352, 377, 385, 396, 418, 419, 420, 447, 458, 459, 460, 462, 465, 466, 470, 475, 477, 478, 479], "lx11": 72, "far": [72, 75, 77, 79, 84, 88, 103, 104, 166, 180, 183, 187, 232, 233, 234, 240, 255, 272, 280, 289, 290, 291, 293, 316, 328, 329, 335, 356, 363, 372, 385, 392, 431, 443, 459, 460, 461, 462, 463, 465], "concentr": [72, 79, 103, 107, 232, 315, 366, 449, 465], "imagin": [72, 103, 111, 296, 381, 386, 387, 443], "fortun": [72, 75, 77, 91, 111, 148, 467], "dwell": 72, "somehow": [72, 77, 280, 340, 355, 447, 465, 466], "wherev": [72, 78, 91, 93, 100, 103, 106, 118, 157, 174, 244, 366, 383, 394, 423, 438, 461, 464, 470], "my_callback": [72, 74, 289], "my_set_callback": 72, "temp": [72, 280, 327, 337, 357, 408, 418, 427, 453, 458], "set_callback": 72, "rememb": [72, 77, 79, 82, 84, 86, 88, 91, 92, 94, 99, 100, 103, 156, 157, 190, 222, 244, 258, 280, 316, 337, 359, 366, 373, 392, 399, 407, 409, 433, 437, 438, 441, 446, 447, 456, 458, 459, 460, 464, 465, 466, 468, 472, 473], "boilerpl": [72, 75, 98, 286, 359, 386, 429, 475], "arglist": 72, "eventcod": 72, "placement": [72, 143, 366, 410, 471], "whoop": [72, 100], "si": [72, 175, 345], "wb": [72, 86, 100, 114, 117, 146, 197, 205, 220, 231, 267, 275, 296, 306, 317, 346, 383, 394, 398, 416, 418, 419, 459, 468, 472], "100000": [72, 222, 305, 364, 379, 462], "bottom": [72, 83, 94, 98, 117, 173, 174, 176, 188, 255, 264, 290, 293, 294, 338, 366, 373, 381, 383, 386, 387, 425, 432, 436, 458, 459, 461, 462, 469], "rectangl": [72, 91, 174, 178], "400": [72, 74, 100, 107, 114, 152, 220, 238, 280, 285, 332, 366, 381, 438, 449, 469], "300": [72, 91, 100, 107, 152, 238, 244, 381, 392, 424, 449, 472], "myfunct": [72, 78, 166], "2j": [72, 96, 222, 259], "kwlist": [72, 75, 187, 260], "geoff": 72, "philbrick": 72, "hk": [72, 473], "keywdarg_parrot": 72, "keywd": 72, "voltag": [72, 222, 438], "stiff": [72, 438], "voom": [72, 438], "norwegian": [72, 155, 438], "blue": [72, 91, 93, 100, 103, 105, 144, 152, 157, 159, 174, 208, 258, 315, 340, 341, 366, 373, 381, 399, 438, 439, 449, 462, 463, 468, 469, 471, 472, 476], "sss": [72, 74, 180], "parrot": [72, 222, 239, 304, 438, 465], "wouldn": [72, 77, 83, 102, 103, 264, 329, 340, 359, 385, 386, 424, 438, 459, 460, 461, 462, 463, 465], "volt": [72, 438], "love": [72, 77, 100, 144, 172, 241, 438, 468, 474], "keywdarg_method": 72, "skit": [72, 190, 436], "keywdargmodul": 72, "keywdarg": 72, "pyinit_keywdarg": 72, "counterpart": [72, 100, 174, 188, 222, 255, 258, 264, 285, 334, 341, 358, 424, 466, 468, 469, 470, 472, 477], "iii": [72, 423], "789": [72, 183, 465], "ss": [72, 106, 180, 245, 341, 363, 469, 473], "hell": 72, "forgotten": [72, 106, 122, 439], "occupi": [72, 106, 114, 280, 319, 369, 373, 474], "reus": [72, 75, 79, 104, 123, 125, 135, 155, 163, 166, 173, 181, 190, 211, 223, 233, 247, 290, 315, 316, 334, 335, 338, 344, 355, 359, 361, 362, 386, 399, 424, 429, 432, 436, 464, 471, 472, 479], "unusu": [72, 91, 100, 180, 210, 247, 292, 305, 319, 340, 345, 352, 357, 391, 427], "prematur": [72, 99, 239, 268, 467], "undetect": [72, 268, 362], "modern": [72, 96, 102, 111, 123, 128, 136, 140, 174, 175, 191, 232, 255, 307, 329, 334, 338, 355, 366, 394, 403, 443, 456, 459, 463, 465, 466, 472, 473, 476, 477, 478, 479], "plenti": [72, 104], "appar": [72, 82, 85, 91, 148, 330, 405, 438, 459, 463], "heavi": [72, 107, 164, 441, 451, 466, 473, 477], "somewher": [72, 83, 84, 100, 242, 244, 289, 299, 311, 340, 341, 407, 438, 458, 465, 469], "disadvantag": [72, 75, 83, 84, 103, 129, 155, 183, 338, 364, 461, 468], "reclaim": [72, 74, 247, 383, 399], "nobodi": [72, 148, 232, 242, 332], "seemingli": [72, 190, 427, 459], "popular": [72, 77, 83, 86, 92, 100, 104, 105, 108, 187, 190, 223, 245, 253, 268, 344, 377, 381, 431, 443, 445, 448, 456, 458, 470, 472, 473, 478], "pictur": [72, 164, 197, 430, 461, 463], "bet": 72, "therebi": [72, 84, 194, 200, 381, 474], "no_bug": 72, "someon": [72, 82, 84, 104, 180, 332, 357, 392, 410, 466, 471], "spent": [72, 136, 305, 319, 330, 464, 465], "redund": [72, 113, 267, 291, 316, 341, 383, 421, 433, 438, 461, 466, 469], "slowli": [72, 86, 100, 469], "ever": [72, 84, 92, 93, 104, 110, 119, 174, 196, 198, 247, 255, 258, 279, 280, 338, 345, 381, 383, 386, 458, 461, 462, 464, 465, 466, 467, 474], "enclos": [72, 86, 103, 108, 157, 174, 222, 239, 245, 252, 259, 285, 294, 316, 328, 342, 359, 362, 364, 383, 385, 407, 424, 426, 427, 431, 432, 433, 437, 438, 439, 446, 460, 461, 464, 469, 470, 471, 472, 478], "__cplusplu": 72, "recent": [72, 75, 83, 84, 85, 88, 92, 93, 94, 97, 98, 100, 106, 111, 117, 122, 129, 131, 141, 148, 157, 164, 166, 173, 183, 185, 190, 207, 208, 211, 222, 223, 231, 237, 244, 245, 252, 256, 264, 266, 280, 281, 290, 292, 293, 294, 296, 304, 311, 313, 316, 332, 334, 337, 338, 341, 342, 344, 345, 349, 359, 372, 378, 379, 381, 384, 385, 386, 387, 391, 397, 399, 419, 424, 425, 426, 427, 433, 437, 438, 439, 440, 443, 446, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "sight": [72, 138], "seem": [72, 75, 77, 78, 79, 85, 94, 99, 103, 117, 213, 268, 276, 290, 305, 337, 357, 429, 439, 459, 460, 461, 462, 464], "aix": [72, 112, 290, 303, 349, 362, 478, 479], "unic": [72, 292, 307, 457], "wish": [72, 74, 82, 87, 91, 94, 99, 103, 107, 117, 143, 155, 157, 164, 180, 190, 200, 205, 231, 247, 248, 249, 250, 256, 259, 264, 266, 268, 275, 289, 315, 316, 332, 338, 339, 345, 352, 373, 382, 396, 397, 399, 404, 425, 436, 440, 441, 444, 460, 463, 464, 465, 466, 474, 481], "clash": [72, 93, 100, 173, 244, 264, 265, 268, 427, 432, 437, 447, 450, 465, 475, 479], "publish": [72, 100, 103, 108, 183, 187, 189, 337, 359, 364, 393, 417, 423, 458, 460, 466, 472, 479], "degre": [72, 152, 174, 272, 340, 341, 381, 425, 462, 478], "certainti": [72, 402], "burden": [72, 466, 467, 471, 473, 475], "pyspam_system": 72, "realiti": [72, 180, 289, 334, 392, 424], "pyspam_api": 72, "pyspam_api_point": 72, "c_api_object": 72, "pyspam_system_num": 72, "_c_api": 72, "disappear": [72, 74, 85, 99, 104, 126, 136, 381, 461, 463], "bulk": [72, 183, 254, 474], "ifndef": 72, "py_spammodule_h": 72, "endif": [72, 237, 316, 453, 469, 470, 478, 479], "pyspam_system_return": 72, "pyspam_system_proto": 72, "import_spam": 72, "pyinit_cli": 72, "clientmodul": 72, "mention": [72, 74, 75, 76, 87, 94, 97, 100, 102, 103, 106, 111, 164, 173, 174, 188, 190, 210, 211, 212, 222, 259, 265, 268, 280, 289, 290, 328, 331, 335, 351, 359, 424, 425, 429, 431, 432, 433, 440, 459, 467, 470, 471, 473, 474, 477, 479], "metaphor": [72, 247, 249, 250, 372], "cython": [73, 77, 78, 84, 90, 474], "swig": [73, 78, 85], "numba": 73, "sophist": [73, 84, 130, 152, 166, 183, 264, 315, 338, 342, 410, 448, 449, 461, 464], "assist": [73, 94, 106, 261, 275, 281, 357, 382, 396, 423, 425, 461, 462, 463, 464, 465, 466, 477], "baggag": 74, "easiest": [74, 75, 78, 80, 83, 84, 104, 117, 183, 190, 240, 244, 255, 289, 290, 386], "dealt": [74, 104, 154, 208, 289], "newdatatype_dealloc": 74, "newdatatypeobject": 74, "obj_underlyingdatatypeptr": 74, "other_obj": 74, "unwound": [74, 264, 316, 425], "mislead": [74, 106, 119, 149, 165, 180, 392, 408, 461, 469, 472], "my_dealloc": [74, 98], "cbresult": 74, "err_typ": 74, "err_valu": 74, "err_traceback": 74, "textual": [74, 75, 84, 102, 106, 117, 173, 198, 264, 283, 285, 311, 316, 341, 355, 373, 385, 407, 408, 427, 433, 437, 461, 476], "newdatatype_repr": 74, "ified_newdatatyp": 74, "human": [74, 77, 99, 100, 106, 114, 187, 188, 195, 227, 240, 242, 264, 285, 296, 300, 330, 332, 338, 339, 346, 349, 374, 384, 398, 411, 427, 443, 450, 461, 468, 473, 474], "newdatatype_str": 74, "stringified_newdatatyp": 74, "sens": [74, 77, 84, 88, 93, 97, 99, 100, 109, 111, 117, 118, 180, 183, 187, 202, 203, 223, 244, 256, 268, 280, 289, 290, 305, 330, 335, 337, 338, 341, 342, 349, 364, 381, 391, 400, 423, 425, 429, 437, 438, 441, 458, 467, 472, 474, 475, 477], "flavor": [74, 86, 104, 190, 220, 232, 258, 290, 339, 341, 348, 385, 424, 427, 442, 453], "newdatatype_getattr": 74, "100": [74, 84, 91, 100, 106, 107, 114, 122, 123, 133, 144, 152, 178, 180, 183, 187, 198, 205, 211, 222, 238, 242, 258, 263, 272, 280, 281, 292, 315, 326, 334, 340, 341, 342, 355, 363, 364, 373, 381, 385, 392, 402, 404, 416, 424, 427, 438, 441, 443, 446, 447, 448, 449, 459, 462, 464, 465, 466, 469, 470, 472, 474, 475, 478], "newdatatype_setattr": 74, "newdatatype_richcmp": 74, "obj1": [74, 463], "obj2": [74, 463], "size1": 74, "size2": 74, "newdatatyp": 74, "unfil": [74, 427], "newdatatype_hash": 74, "some_s": 74, "32767": [74, 344], "some_numb": 74, "toi": [74, 296], "newdatatype_cal": 74, "arg3": [74, 84, 96, 113], "incur": [74, 157, 183, 258, 423, 472], "trivialtyp": 74, "trivial_dealloc": 74, "trivialobject": 74, "tp_": 74, "some_object": [74, 84, 252, 386], "mytyp": [74, 289, 470], "myth": 74, "www": [74, 78, 94, 104, 106, 107, 148, 155, 159, 163, 166, 180, 181, 197, 232, 237, 239, 240, 258, 311, 315, 316, 337, 338, 341, 349, 384, 391, 392, 393, 400, 408, 410, 421, 423, 425, 432, 437, 442, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 472, 473, 475, 477], "gentl": [75, 88, 97, 117, 461], "customobject": 75, "customtyp": 75, "custommodul": 75, "pyinit_custom": 75, "hopefulli": [75, 97, 99, 100, 474], "wari": [75, 351, 441], "accid": [75, 77, 117, 437, 465, 466, 467, 478], "ob_fval": 75, "mycustom": 75, "backend": [75, 155, 174, 181, 337, 349, 359, 387, 453], "build_meta": 75, "pyproject": [75, 376], "ext_modul": [75, 459], "fire": [75, 96, 100, 117, 136, 330, 471], "uninterest": [75, 187], "custom2": 75, "custom_dealloc": 75, "custom_new": 75, "custom_init": 75, "ooi": 75, "custom_memb": 75, "custom_nam": 75, "custom_method": 75, "pyinit_custom2": 75, "midwai": [75, 421], "polymorph": [75, 86, 414], "proceed": [75, 79, 88, 107, 290], "ourselv": [75, 93, 111, 383], "anyon": [75, 102, 338, 352, 359, 423, 460, 466, 474, 481], "riski": [75, 190], "paranoid": 75, "uui": 75, "custom_getfirst": 75, "custom_setfirst": 75, "custom_getlast": 75, "custom_setlast": 75, "custom_getsett": 75, "custom3": 75, "pyinit_custom3": 75, "unneed": [75, 77, 408, 466, 471, 474, 479], "some_attribut": [75, 386], "custom_travers": 75, "custom_clear": 75, "custom4": 75, "pyinit_custom4": 75, "subobject": [75, 84], "vret": 75, "nevertheless": [75, 100, 136, 155, 194, 210, 255, 289, 355, 365, 410, 447, 467], "prone": [75, 77, 111, 148, 180, 190, 296, 305, 341, 469, 471, 475], "micro": [75, 79, 84, 349, 459, 466, 468, 469, 477], "expens": [75, 77, 84, 86, 99, 144, 178, 185, 187, 223, 255, 263, 286, 305, 329, 335, 338, 349, 421, 429, 449, 452, 463, 470, 471, 473, 474, 476, 477, 478], "robust": [75, 148, 181, 252, 305, 330, 340, 365, 399, 448, 466, 472, 474, 475], "reimplement": [75, 385, 461, 474, 475, 476, 477], "difficult": [75, 79, 83, 91, 94, 99, 102, 103, 106, 117, 233, 265, 296, 333, 392, 410, 449, 459, 460, 461, 462, 463, 466, 469, 472, 478], "sublist": [75, 372, 459, 472], "sublistobject": 75, "sublist_incr": 75, "sublist_method": 75, "sublist_init": 75, "sublisttyp": 75, "sublistmodul": 75, "pyinit_sublist": 75, "resembl": [75, 93, 174, 222, 240, 290, 294, 328, 438, 452, 461, 465, 466, 469, 478], "explanatori": [76, 190, 311, 385], "materi": [76, 94, 103, 174, 187, 231, 254, 334, 338, 365, 372, 423, 451, 463, 466], "xy": [76, 258, 331, 352, 383], "studi": [76, 84, 94, 190, 233, 381, 438, 462, 465], "paradigm": [76, 79, 94], "reassur": 76, "pythonxi": [76, 458, 478], "_declspec": 76, "dllexport": [76, 85], "initspam": 76, "nigetspamdata": 76, "studio": [76, 84, 453, 458, 465, 475], "100k": 76, "rid": [76, 104, 460, 469], "xx": [76, 117, 242, 290, 316, 327, 391, 458], "guido": [77, 79, 84, 86, 92, 187, 276, 341, 383, 423, 439, 447, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479], "van": [77, 79, 84, 86, 157, 180, 420, 423, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479], "rossum": [77, 79, 84, 86, 420, 423, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479], "eleg": [77, 84, 86, 157, 164, 442, 472], "clariti": [77, 104, 111, 118, 288, 289, 357, 363, 424, 472], "disagr": 77, "perceiv": [77, 268], "fragment": [77, 94, 138, 311, 341, 391, 392, 409, 410, 464, 466, 472, 473], "experienc": 77, "stare": 77, "feel": [77, 88, 102, 186, 289, 365, 373, 387, 438, 461, 462, 465, 469], "uneasi": 77, "wast": [77, 100, 106, 467, 470], "valuabl": [77, 91, 111, 227, 334, 378, 473], "harder": [77, 84, 190, 289, 341, 387, 471], "20": [77, 84, 88, 91, 92, 94, 96, 99, 100, 103, 106, 131, 136, 147, 152, 173, 178, 180, 183, 190, 206, 208, 218, 232, 233, 244, 252, 256, 258, 264, 280, 290, 293, 305, 315, 316, 318, 319, 334, 338, 340, 341, 349, 355, 363, 364, 381, 383, 391, 393, 423, 432, 437, 446, 448, 452, 453, 459, 463, 464, 465, 466, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479], "30": [77, 83, 84, 91, 92, 94, 96, 99, 100, 123, 133, 147, 152, 157, 180, 183, 190, 233, 256, 258, 264, 266, 290, 313, 315, 318, 334, 340, 341, 342, 359, 362, 363, 364, 381, 420, 437, 438, 448, 449, 453, 462, 463, 464, 466, 468, 469, 470, 474, 475, 476, 477, 478, 479], "certainli": [77, 84, 91, 103, 104, 173, 269, 280, 459, 460, 461, 462, 466], "19999999999999996": 77, "concern": [77, 97, 99, 123, 130, 155, 164, 266, 296, 311, 338, 359, 387, 423, 460, 461, 466, 469, 470, 476, 477, 478, 479], "0011001100110011001100110011001100110011001100110011": 77, "1999999999999999555910790149937383830547332763671875": 77, "accuraci": [77, 180, 222, 258, 272, 305, 364, 441, 463, 471], "fuller": [77, 460], "eight": [77, 106, 174, 256, 323, 340, 341, 352, 366, 432, 459, 462, 463, 478], "modula": [77, 79, 271, 437], "heart": [77, 462, 471], "m_": 77, "baseclass": 77, "methodnam": [77, 280, 385, 416, 437, 438], "piti": 77, "nice": [77, 85, 88, 104, 117, 137, 141, 148, 166, 173, 190, 222, 233, 267, 290, 319, 332, 335, 340, 341, 357, 387, 400, 425, 438, 443, 444, 446, 459, 472, 473], "unqualifi": [77, 210, 345, 437, 474], "walru": [77, 119, 427, 439, 478], "200": [77, 84, 107, 152, 174, 183, 187, 220, 238, 239, 242, 334, 338, 341, 366, 381, 385, 392, 404, 424, 443, 449, 462, 476, 478], "572": [77, 424, 427, 471, 478], "postfix": 77, "mathematician": 77, "rewrit": [77, 98, 102, 119, 197, 215, 290, 375, 441, 459, 462, 464, 466, 467, 475, 478], "formula": [77, 180, 227, 341], "clumsi": [77, 86, 473], "me": [77, 79, 83, 104, 197, 223, 233, 237, 342, 359, 387, 450, 458, 465, 470, 471], "wit": [77, 467], "pipermail": [77, 451, 460, 462], "3000": [77, 86, 110, 382, 383, 424, 425, 465, 467], "2006": [77, 94, 180, 264, 311, 408, 410, 419, 423, 464, 479], "novemb": [77, 147, 180, 432], "004643": 77, "becam": [77, 94, 110, 146, 157, 210, 290, 332, 349, 363, 383, 459, 465, 466, 469, 475, 478, 479], "uncomfort": 77, "ugli": [77, 78, 111, 187, 366, 439, 459, 462], "sadli": [77, 88], "difficulti": [77, 102, 280, 459, 462], "adjac": [77, 103, 180, 187, 249, 267, 279, 316, 385, 407, 432, 438, 458, 474, 477], "obei": [77, 107, 328, 341, 345, 362, 425, 465], "mydict": [77, 84, 383, 463], "getvalu": [77, 78, 84, 148, 166, 193, 231, 255, 259, 296, 305, 359, 386, 413, 418, 472, 475], "cheap": [77, 84, 173, 296, 437], "elif": [77, 84, 88, 91, 94, 100, 107, 119, 180, 187, 197, 225, 247, 286, 316, 337, 339, 341, 349, 355, 424, 425, 428, 429, 432, 438, 464, 473], "function_1": [77, 96], "function_2": [77, 96], "method_1": 77, "myvisitor": 77, "visit_a": 77, "method_nam": [77, 78], "visit_": [77, 119], "untrust": [77, 106, 119, 187, 259, 265, 271, 280, 296, 297, 309, 311, 324, 327, 329, 338, 355, 406, 408, 409, 410, 411, 416, 417, 419, 443, 462, 465], "attack": [77, 106, 119, 123, 170, 222, 232, 234, 241, 259, 265, 323, 329, 337, 341, 355, 383, 406, 443, 464, 466, 470, 473, 474, 475], "unfortun": [77, 83, 87, 91, 94, 98, 100, 101, 102, 103, 107, 148, 155, 280, 302, 305, 323, 327, 334, 338, 355, 357, 366, 387, 441, 449, 458, 460, 463, 465, 468, 476, 479], "push": [77, 100, 154, 157, 166, 174, 176, 183, 188, 210, 233, 279, 280, 328, 362, 410, 432, 433, 438, 459, 465, 470, 473], "stackless": [77, 431], "redesign": [77, 465, 466, 474], "invent": [77, 104, 155, 268, 362, 431, 462, 466], "nuitka": [77, 84], "inaccess": [77, 251, 290, 291, 392, 425, 459, 462, 474], "jython": [77, 83, 86, 93, 300, 359, 404, 431, 446, 452, 460, 463, 465, 471, 472, 474], "pypi": [77, 83, 88, 99, 102, 148, 185, 300, 304, 338, 349, 386, 396, 406, 422, 431, 446, 451, 456, 462, 464, 466, 469, 471, 472, 474, 475, 476, 477, 478, 479], "blown": [77, 461], "very_long_list_of_fil": 77, "interv": [77, 94, 99, 174, 180, 244, 266, 290, 305, 315, 330, 340, 349, 359, 362, 363, 373, 381, 463, 465, 472, 476, 478], "boehm": 77, "assembl": [77, 84, 94, 106, 188, 337, 366, 425, 464], "transpar": [77, 85, 106, 117, 146, 155, 173, 174, 188, 199, 200, 215, 238, 244, 255, 267, 296, 355, 373, 381, 458, 460, 462, 463, 469, 470, 473, 474, 476, 477], "purifi": [77, 453], "pascal": [77, 79, 84, 94, 344, 437, 438, 439, 462, 466], "cartesian": [77, 151, 258, 337, 465, 468, 475], "listdir": [77, 92, 106, 139, 197, 210, 217, 227, 242, 290, 293, 329, 339, 396, 462, 463, 466, 467, 473, 477], "lisp": [77, 84, 94, 461], "clever": [77, 106, 148, 233, 296, 342, 461], "grown": [77, 190, 325], "539294296": 77, "1142331976": 77, "whoever": 77, "unaccept": [77, 223, 296, 334, 410, 433], "forgot": [77, 428, 469, 471], "invari": [77, 84, 93, 94, 183, 193, 233, 296, 383, 427, 429, 437, 441], "referenti": [77, 296], "resid": [77, 100, 197, 227, 268, 290, 310, 319, 339, 429, 459], "listwrapp": 77, "the_list": 77, "98767": 77, "555": 77, "el": [77, 140, 356, 391, 410, 428], "9999999": 77, "1001": [77, 155, 342], "7777777": 77, "333": [77, 84, 439, 441, 464], "ie": [77, 107, 202, 215, 237, 240, 245, 275, 289, 392, 416, 475], "meet": [77, 92, 94, 100, 137, 166, 172, 183, 187, 190, 296, 340, 341, 385, 392, 423, 425, 449, 450, 451, 459, 463, 469], "misbehav": [77, 136], "anomali": [77, 183], "matter": [77, 84, 88, 92, 93, 100, 106, 160, 190, 205, 244, 247, 250, 263, 289, 290, 293, 335, 337, 341, 349, 358, 373, 383, 385, 386, 387, 397, 425, 428, 437, 438, 441, 447, 458, 459, 461, 463, 464, 465, 466, 474], "fool": [77, 84, 459, 463], "unsort": 77, "mutablemap": [77, 86, 158, 164, 181, 327, 341, 383, 425, 465, 467, 473], "disciplin": [77, 205], "stub": [77, 152, 254, 255, 290, 349, 383, 386], "increasingli": [77, 381, 441, 465, 466], "driven": [77, 84, 161, 166, 273, 359, 366, 381, 385, 407, 409, 459, 472], "sloppi": 77, "1970": [77, 79, 144, 147, 180, 336, 363], "messi": [77, 94, 462, 466], "spaghetti": 77, "jump": [77, 100, 188, 190, 244, 267, 294, 350, 381, 425, 438, 462, 464, 467, 470, 471, 476, 477], "middl": [77, 84, 91, 123, 157, 166, 196, 294, 315, 318, 340, 361, 381, 413, 449, 464, 466, 476], "abus": [77, 355, 406, 433, 472], "sparingli": 77, "unpair": [77, 259], "untermin": [77, 84], "chiefli": 77, "engin": [77, 79, 83, 86, 94, 97, 103, 183, 263, 316, 337, 366, 373, 410, 412, 459, 461, 463, 465, 466, 470, 475], "unmatch": [77, 316, 342, 391, 475], "slash": [77, 103, 218, 222, 252, 256, 289, 290, 291, 293, 310, 355, 374, 391, 404, 419, 420, 438, 458], "mydir": 77, "entranc": 77, "delphi": 77, "volum": [77, 79, 83, 139, 157, 258, 290, 292, 324, 419, 463, 471, 474], "21": [77, 94, 96, 100, 106, 147, 180, 183, 187, 200, 220, 223, 232, 233, 316, 338, 340, 363, 375, 379, 438, 446, 447, 452, 461, 462, 464, 465, 472, 473, 476, 478, 479], "42": [77, 84, 93, 99, 117, 119, 122, 126, 136, 157, 166, 167, 173, 183, 190, 222, 223, 252, 265, 280, 281, 289, 293, 294, 315, 340, 341, 342, 364, 378, 381, 383, 385, 386, 417, 424, 426, 437, 438, 443, 446, 463, 464, 465, 472, 473, 476, 478, 479], "63": [77, 315, 337, 349], "2016": [77, 180, 338, 443, 450, 458, 476, 477], "040070": 77, "experiment": [77, 92, 238, 244, 268, 366, 368, 407, 431, 453, 462, 467, 468, 470, 471, 472, 477, 478], "english": [77, 84, 100, 103, 106, 147, 155, 238, 289, 337, 361, 363, 381, 431, 432, 466, 467, 475], "reorder": [77, 84, 93, 123, 157, 283, 300, 410], "diagnos": [77, 84, 99, 173, 244, 264, 385, 387], "fee": [77, 222, 423], "fie": 77, "fum": [77, 222], "fiefoo": 77, "book": [78, 90, 94, 102, 103, 147, 151, 157, 180, 268, 316, 337, 359, 365, 366, 442, 451, 472], "pyrex": 78, "sip": [78, 391], "cxx": [78, 352, 453], "weav": 78, "pythonrun": [78, 464], "al": [78, 94, 178, 334, 338, 343, 373, 465, 476], "pymap": 78, "arg_format": 78, "seek": [78, 83, 84, 106, 114, 146, 150, 172, 209, 212, 215, 222, 233, 255, 275, 290, 296, 337, 355, 357, 359, 419, 421, 443, 459, 465, 468], "print_error": [78, 472], "stringio": [78, 84, 86, 166, 193, 204, 255, 259, 305, 341, 349, 359, 386, 404, 408, 465, 466, 467, 472, 474, 475], "stdoutcatch": 78, "textiobas": [78, 222, 239, 255, 357, 366, 425, 465, 466, 467, 470], "attrnam": [78, 264, 407], "hackeri": 78, "worth": [78, 100, 114, 146, 190, 220, 258, 265, 266, 280, 381, 431, 432, 442, 456, 459, 460, 461, 464, 475], "gdb": [78, 84, 466], "gdbinit": [78, 466], "br": [78, 174, 432, 467, 473], "_pyimport_loaddynamicmodul": 78, "myscript": [78, 294, 305, 435, 452], "50": [78, 83, 84, 94, 99, 100, 102, 136, 152, 157, 180, 183, 244, 264, 276, 305, 315, 316, 334, 340, 349, 363, 364, 373, 381, 385, 387, 409, 410, 423, 446, 447, 448, 465, 466, 470, 472, 475, 476, 477, 478, 479], "python2": [78, 108, 109, 341, 352, 418, 458, 460, 465, 474], "red": [78, 79, 91, 93, 99, 100, 103, 105, 144, 147, 157, 159, 174, 208, 227, 237, 258, 315, 340, 341, 366, 373, 381, 399, 423, 438, 449, 462, 463, 468, 469, 470, 471, 476], "hat": [78, 79, 227, 423, 448], "devel": [78, 96, 285], "rpm": [78, 459, 462], "debian": [78, 220, 457, 459, 460, 477], "apt": [78, 96, 476], "tripl": [78, 86, 103, 106, 174, 187, 285, 290, 293, 297, 316, 325, 341, 361, 381, 424, 425, 432, 443, 446, 469, 471], "myreadlin": 78, "relink": 78, "linkcc": [78, 453], "bpl": 78, "beginn": [79, 82, 328], "introductori": [79, 82, 88, 103, 106, 334, 381, 464], "profit": [79, 423], "mission": [79, 289], "technologi": [79, 83, 91, 104, 253, 423], "donat": [79, 463], "tax": [79, 84, 316, 446, 449, 462], "exempt": [79, 466], "commerci": [79, 84, 91, 292, 423, 465], "sell": [79, 423, 464], "logo": [79, 237, 381, 423], "trademark": [79, 423], "consult": [79, 83, 84, 86, 91, 94, 99, 103, 151, 157, 164, 173, 180, 227, 264, 265, 268, 290, 292, 316, 319, 329, 332, 334, 337, 339, 349, 363, 365, 404, 421, 429, 443, 450, 458, 459, 461, 462, 463, 464, 465, 466, 467, 471, 479], "experi": [79, 83, 93, 94, 99, 101, 103, 120, 123, 173, 227, 290, 305, 337, 366, 381, 385, 407, 436, 442, 458, 459, 460, 461, 465, 466, 468, 469, 470, 475, 478], "gripe": [79, 187], "remedi": [79, 157, 478], "complaint": [79, 80, 88, 440, 460], "biggest": [79, 91, 102, 379, 467, 472, 473], "amoeba": 79, "bourn": [79, 298], "acut": [79, 106], "foolish": 79, "1989": [79, 180, 465], "christma": 79, "holidai": 79, "colleagu": 79, "februari": [79, 147, 180, 363, 432, 460, 471, 472], "usenet": [79, 83, 99], "imap": [79, 109, 191, 245, 280, 302, 391, 462, 463, 478], "earth": [79, 93, 337, 340, 438], "shatter": 79, "bn": 79, "rcn": [79, 92], "0an": 79, "0bn": 79, "0rcn": 79, "unreleas": 79, "a0": 79, "4a0": 79, "freeli": [79, 190, 341, 423, 442, 470], "pdf": [79, 99, 106, 232, 315, 340, 349, 478], "comp": [79, 83, 84, 99, 146, 285, 451, 460, 461, 464, 473, 474], "lang": [79, 83, 84, 99, 106, 227, 263, 337, 392, 451, 460, 461, 462, 464, 467], "subscrib": [79, 100, 245, 383, 425], "traffic": [79, 205, 334, 338, 340, 461, 472], "moder": [79, 84, 94, 103, 220, 285, 289, 302, 316, 461, 462], "five": [79, 86, 100, 144, 183, 266, 268, 289, 290, 316, 333, 335, 337, 338, 349, 391, 412, 459, 465, 473, 478], "rss": [79, 461], "feed": [79, 93, 155, 174, 175, 204, 205, 232, 237, 258, 280, 341, 386, 393, 404, 410, 413, 421, 449, 464, 472], "git": [79, 140, 345, 396, 474, 478], "cite": 79, "outdat": [79, 102, 173, 247, 365, 366, 465, 471, 472, 477], "jelk": 79, "boer": 79, "quarterli": 79, "decemb": [79, 147, 180, 432, 448, 461, 462, 467, 476], "pp": [79, 92, 294, 304, 315, 478], "283": [79, 180], "303": [79, 107, 238, 392], "wiki": [79, 80, 83, 84, 94, 157, 232, 337, 338, 349, 365, 456, 463, 464, 466, 472, 473], "moin": [79, 83, 456, 463], "pythonbook": 79, "bookstor": 79, "infrastructur": [79, 100, 108, 113, 155, 338, 397, 465, 466, 474, 477], "team": [79, 423, 458, 459, 460, 461, 466, 470, 472, 474, 479], "he": [79, 155, 233, 294, 316, 362, 423, 432, 451, 459, 476], "began": [79, 240, 247, 264, 359, 459, 460, 469], "bbc": [79, 163, 436, 475], "comedi": 79, "roughli": [79, 84, 92, 100, 104, 106, 223, 240, 249, 258, 272, 278, 280, 289, 290, 315, 341, 359, 362, 382, 424, 425, 433, 459, 465, 466, 477, 478, 479], "18": [79, 88, 94, 96, 106, 147, 180, 183, 190, 220, 223, 233, 293, 315, 316, 329, 338, 340, 341, 344, 349, 373, 443, 448, 462, 463, 466, 469, 470, 471, 472, 477, 478, 479], "602": [79, 479], "gradual": [79, 86, 460, 461], "million": [79, 106, 340, 364, 438], "sale": [79, 468, 472], "past": [79, 86, 100, 117, 119, 180, 190, 213, 244, 252, 290, 293, 296, 311, 342, 345, 363, 404, 421, 446, 448, 470, 472, 474, 475, 478, 479], "confer": [79, 340, 373, 451, 460, 464], "reveal": [79, 92, 180, 234, 383, 449, 465, 472], "compani": [79, 338, 458, 464, 465, 470], "mailman": [79, 461, 463, 470, 479], "zope": [79, 423, 460, 461, 472], "googl": [79, 82, 83, 99, 107, 400, 416, 464, 465, 466, 471, 473, 478], "yahoo": [79, 181, 464, 465], "lucasfilm": [79, 82], "ltd": [79, 82, 338, 423], "concis": [79, 86, 94, 97, 164, 289, 337, 425, 437, 438, 439, 459, 463, 470, 472, 476], "rational": [79, 86, 207, 210, 222, 232, 290, 325, 326, 330, 334, 355, 363, 399, 425, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 478], "publicli": [79, 123, 423, 459], "frown": [79, 447], "stroke": [79, 106, 461], "disrupt": [79, 129, 471], "student": [79, 105, 111, 172, 223, 340, 344, 381, 383, 437, 458, 470, 472], "importantli": [79, 98, 263, 387, 429], "skill": [79, 84, 381, 443], "decomposit": [79, 100, 384], "unnatur": 79, "master": [79, 103, 106, 186, 190, 289, 290, 292, 296, 306, 316, 366, 367, 370, 371, 373, 381, 465], "slow": [79, 91, 100, 104, 122, 123, 144, 157, 181, 232, 244, 255, 258, 266, 280, 327, 335, 341, 350, 359, 381, 383, 395, 419, 420, 436, 439, 459, 460, 462, 463, 465, 470, 479], "pace": [79, 340, 460, 465], "balanc": [79, 103, 105, 157, 233, 338, 474], "gain": [79, 83, 100, 141, 157, 164, 247, 255, 296, 349, 392, 429, 431, 462, 463, 464, 465, 466, 468, 471, 472, 473, 474, 475, 476, 477, 478], "satisfact": [79, 338], "realist": [79, 83, 94, 345, 386, 408, 421, 463, 464], "teach": [79, 101, 227, 337, 461, 478], "pygam": 79, "__dir__": [79, 93, 208, 222, 252, 386, 425, 465, 474, 477], "__format__": [79, 180, 208, 218, 222, 256, 342, 386, 425, 432, 465, 466, 470, 473, 474, 477], "__reduce__": [79, 208, 296, 386, 464, 478], "__reduce_ex__": [79, 93, 296, 386], "__reversed__": [79, 86, 157, 158, 208, 222, 386, 425, 476], "__sizeof__": [79, 349, 386, 465], "__subclasshook__": [79, 113, 158], "__": [79, 84, 100, 286, 359, 432], "emac": [79, 85, 91, 106, 152, 174, 268, 328, 432, 456, 465], "happi": [79, 93, 123, 462, 478], "educ": [79, 247, 258, 381], "edu": [79, 94, 392, 423, 461, 462], "sig": [79, 98, 106, 108, 123, 139, 155, 232, 252, 290, 330, 375, 456, 459, 460, 462, 466, 475], "ship": [80, 86, 123, 129, 181, 247, 250, 271, 366, 385, 406, 418, 450, 456, 458, 459, 462, 466, 468, 472, 474, 475, 479], "tcl_librari": 80, "tk_librari": 80, "sam": [80, 291, 423, 459, 470], "sourceforg": [80, 180, 423, 459, 460, 462, 465], "tclsam_init": 80, "tkappinit": 80, "libtclsam": 80, "libtksam": 80, "restructur": [80, 84, 104, 304, 459, 460, 465], "xt": [80, 146, 231, 267], "xtaddinput": 80, "mainloop": [80, 104, 244, 366, 373, 381], "heard": [80, 437], "focu": [80, 104, 180, 186, 205, 244, 355, 366, 373, 381, 391, 448, 466, 471, 473, 476], "takefocu": [80, 373], "school": [82, 183, 340, 344, 462], "colleg": 82, "profession": [82, 340, 436, 449, 458, 468], "nasa": 82, "hewlett": [82, 459], "packard": [82, 459], "compaq": 82, "hp": [82, 463], "came": [82, 94, 99, 100, 190, 199, 280, 435, 440, 460, 461, 462, 463, 464], "deliber": [82, 84, 86, 117, 289, 302, 331, 341, 382, 385, 423, 452, 474], "hurt": [82, 463], "icon": [82, 366, 370, 458, 461, 462], "uninstal": [82, 207, 211, 278, 379, 450, 456, 458, 474], "mathmodul": 83, "sl": [83, 281], "builtin_module_nam": [83, 247, 349, 447], "chmod": [83, 100, 139, 148, 290, 293, 329, 339, 355, 435, 457, 469, 473], "scriptfil": 83, "755": [83, 100], "env": [83, 100, 106, 139, 164, 197, 290, 293, 341, 345, 392, 396, 418, 435, 445, 450, 452, 457, 458, 462, 463, 470, 478], "alex": [83, 462, 465, 466, 469, 470, 471, 475, 476, 478, 479], "rezinski": 83, "ncurs": [83, 91, 174, 459, 460, 463, 469, 478], "sysv": [83, 459, 460], "colour": [83, 91, 103, 119, 459], "mous": [83, 91, 174, 345, 368, 373, 381, 459, 465], "os": [83, 255, 334, 459, 477], "smalltalk": [83, 94, 157, 385, 437, 460], "delight": 83, "main_log": 83, "tractabl": 83, "ters": [83, 300, 381, 430, 451, 458], "surprisingli": [83, 383], "pleasant": [83, 441, 459, 460, 464], "fun": [83, 164, 223, 381, 383, 385, 470, 476], "flaw": [83, 86, 87, 386, 461, 470, 472], "self_test": 83, "fake": [83, 289, 404, 425], "epydoc": 83, "thread_task": 83, "sequenti": [83, 100, 104, 122, 160, 215, 232, 255, 280, 296, 305, 341, 359, 386, 425, 449], "001": [83, 180, 222, 258, 268, 305, 363, 385, 432], "Or": [83, 84, 93, 94, 99, 100, 104, 119, 143, 144, 197, 233, 244, 286, 288, 289, 294, 329, 363, 375, 383, 391, 410, 427, 428, 429, 436, 462, 464, 465, 470, 473], "job": [83, 91, 99, 100, 103, 106, 117, 125, 147, 156, 163, 198, 204, 220, 227, 280, 290, 296, 342, 345, 372, 392, 429, 436, 439, 459, 465, 472], "current_thread": [83, 280, 335, 362, 469], "130283832797456": 83, "130283824404752": 83, "130283816012048": 83, "130283807619344": 83, "130283799226640": 83, "pvm": 83, "l2": [83, 155, 373], "d1": [83, 466, 479], "d2": [83, 466, 479], "mass": [83, 93, 180, 459], "mutex": [83, 112, 121, 135, 337, 349], "hindranc": 83, "deploy": [83, 99, 100, 290, 422, 458], "multiprocessor": [83, 281, 300], "insist": [83, 306, 366], "greg": [83, 459, 461, 462, 463, 464, 473, 475, 478], "stein": [83, 459], "adam": [83, 465, 466, 469, 471, 472, 473, 476, 477, 478, 479], "olsen": [83, 465, 466], "safethread": 83, "exhibit": [83, 244, 255, 290, 341, 437], "sharp": [83, 155], "compens": [83, 305, 476], "creativ": [83, 232, 333], "judici": [83, 178, 465], "tremend": [83, 438], "3rd": [83, 316, 331, 383, 443, 473], "rate": [83, 114, 138, 233, 286, 292, 305, 340, 346, 393, 398, 476], "unlink": [83, 210, 280, 281, 290, 293, 325, 357, 359, 373, 396, 407, 408, 473], "rmdir": [83, 139, 290, 293, 359, 473], "mkdir": [83, 139, 197, 290, 293, 419, 448, 470, 473, 475], "makedir": [83, 290, 293, 475, 477], "removedir": [83, 290], "old_path": 83, "new_path": 83, "ftruncat": [83, 290, 475], "copyfil": [83, 139, 329, 448, 466, 474, 478], "ntf": 83, "hf": 83, "copy2": [83, 329, 472, 473, 475, 478], "hhl": 83, "letter": [83, 85, 91, 103, 106, 140, 144, 155, 157, 174, 175, 183, 187, 190, 225, 263, 264, 289, 291, 293, 294, 298, 307, 316, 338, 341, 342, 361, 373, 384, 385, 391, 392, 419, 427, 432, 438, 439, 446, 449, 459, 461, 463, 464, 465, 466, 467, 470, 471, 473, 475, 476, 477], "homogen": [83, 341, 344, 405, 439, 449], "osx": [83, 173, 474, 477], "ironpython": [83, 86, 93, 300, 431, 465], "pyseri": 83, "mitch": 83, "chapman": [83, 463, 478], "selm": 83, "34a04430": 83, "cf9": 83, "ohioe": 83, "paul": [83, 311, 458, 459, 460, 461, 462, 464, 465, 466, 470, 471, 473, 474, 475, 477, 478, 479], "boddi": [83, 458], "webprogram": 83, "cameron": [83, 144], "laird": 83, "20210224183619": 83, "phaseit": 83, "claird": 83, "web_python": 83, "josephin": 83, "mi": [83, 146, 244, 464], "req": [83, 107, 338, 386, 392, 472], "urlopen": [83, 107, 163, 166, 223, 240, 304, 390, 391, 392, 448, 464, 465, 466, 472, 473, 474, 475], "hdr": [83, 285, 390, 392], "urlencod": [83, 107, 148, 239, 266, 391, 392, 472, 475], "steel": 83, "2c": [83, 366], "sender": [83, 100, 197, 200, 205, 268, 332], "fromaddr": [83, 100, 265, 266, 332, 338], "toaddr": [83, 100, 265, 266, 332], "localhost": [83, 100, 104, 107, 197, 239, 242, 244, 265, 266, 280, 302, 310, 326, 332, 335, 338, 356, 392, 416, 417, 448], "sendmail": [83, 100, 103, 198, 205, 316, 332, 448, 472, 475], "sbin": [83, 173, 316], "einprogress": [83, 209, 210], "progress": [83, 103, 148, 190, 209, 220, 229, 233, 280, 286, 290, 328, 337, 338, 355, 372, 373, 396, 397, 438, 458, 459, 461, 466], "connect_ex": [83, 334, 459], "eisconn": [83, 209], "twist": [83, 387, 423], "disk": [83, 86, 94, 99, 106, 166, 181, 191, 197, 205, 210, 216, 231, 233, 240, 244, 255, 262, 264, 266, 268, 275, 278, 281, 285, 290, 292, 295, 296, 319, 324, 327, 329, 337, 345, 349, 355, 357, 379, 402, 410, 419, 425, 443, 462, 464, 465, 467, 470, 473], "gdbm": [83, 181, 453, 467], "lightweight": [83, 157, 213, 223, 259, 337, 378, 396, 406, 458, 459, 464, 465, 475, 476], "databaseprogram": 83, "randrang": [83, 315, 448, 463, 469, 471, 472], "uniform": [83, 107, 131, 315, 340, 391, 395, 416, 447, 472], "normalvari": [83, 315], "sdev": 83, "gaussian": [83, 315, 472], "shuffl": [83, 315, 316, 470, 472, 479], "permut": [83, 94, 258, 315, 421, 432, 459, 465, 468, 478], "idle3": 84, "pythonwin": [84, 173, 458, 459], "cool": 84, "activepython": [84, 458], "eric": [84, 91, 172, 174, 293, 321, 410, 439, 459, 460, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "pyqt": [84, 456], "scintilla": 84, "trepan3k": 84, "wing": 84, "komodo": 84, "pycharm": [84, 476], "pylint": [84, 102], "pyflak": 84, "sooner": [84, 173, 408, 465], "mypi": [84, 102, 383, 425, 470, 475, 476], "pyre": 84, "pytyp": [84, 102, 476], "pyinstal": [84, 280], "pyoxid": 84, "py2app": [84, 456], "py2ex": [84, 280], "foobar": [84, 117, 217, 222, 265, 289, 316, 341, 387], "superfici": [84, 438], "clutter": [84, 100, 472], "defeat": [84, 103, 397, 425], "everywher": [84, 104, 359], "mod": [84, 100, 119, 222, 247, 276, 288, 377, 418, 428, 433, 465, 478], "basi": [84, 86, 99, 100, 155, 173, 237, 240, 259, 264, 268, 305, 349, 350, 355, 357, 419, 423, 429, 433, 436, 458, 461, 462, 469, 470, 477], "linter": [84, 119, 383], "dateutil": [84, 180], "gordon": [84, 104, 459, 462], "mcmillan": [84, 104, 462], "2nd": [84, 258, 316, 366], "1st": [84, 180, 258], "gone": [84, 86, 88, 97, 107, 238, 386, 459, 460, 462, 465, 467, 472, 478], "bite": [84, 103, 289, 387], "neophyt": 84, "memoiz": [84, 136, 223, 460, 476], "_cach": [84, 280, 460], "tast": 84, "3c": [84, 366], "somevar": 84, "wrote": [84, 94, 335, 423, 459, 461, 463, 474], "factor": [84, 102, 106, 138, 158, 190, 232, 258, 289, 311, 341, 383, 385, 427, 428, 438, 461, 466, 473, 477, 479], "mistakenli": [84, 474], "a_list": [84, 378], "some_tupl": 84, "some_int": 84, "se": [84, 240, 356, 366], "func1": [84, 383], "99": [84, 91, 104, 144, 173, 180, 183, 258, 263, 265, 316, 340, 341, 363, 463, 466, 467, 472], "clearest": [84, 462], "changeabl": 84, "func2": 84, "func3": 84, "setattr": [84, 86, 92, 117, 178, 222, 247, 289, 399, 437, 447, 459], "func4": 84, "linear": [84, 138, 144, 158, 166, 187, 229, 233, 258, 340, 341, 346, 381, 437, 451, 462, 474, 478], "10e6": 84, "inc": [84, 338, 405, 423, 459, 465], "dec": [84, 85, 94, 180, 218, 220, 448, 461, 462], "deepcopi": [84, 157, 168, 178, 316, 387, 421, 466, 471, 476, 477], "newdict": 84, "olddict": 84, "new_l": 84, "0x16d07cc": 84, "arguabl": [84, 338], "benefici": [84, 100, 136, 423, 475], "gave": [84, 106, 385, 466, 472], "analogi": [84, 429, 474], "cat": [84, 93, 100, 103, 157, 227, 284, 345, 438, 448, 450, 472, 475], "porch": 84, "neighbour": 84, "on_tru": 84, "on_fals": 84, "ulf": 84, "bartelt": 84, "prime": [84, 163, 190, 205, 222, 258, 280, 341, 349, 363, 438, 448, 472, 476, 478], "fibonacci": [84, 223, 438, 446, 447, 470], "mandelbrot": 84, "ru": [84, 215, 462], "iu": [84, 462], "sx": 84, "yc": 84, "xc": [84, 349], "chr": [84, 106, 222, 237, 311, 384, 425, 447, 464, 466], "80": [84, 96, 102, 104, 133, 144, 152, 155, 164, 205, 239, 240, 244, 258, 304, 305, 329, 334, 335, 340, 381, 385, 391, 392, 449, 463, 470, 472, 475, 476], "___": 84, "______": 84, "__________": 84, "_________________": 84, "axi": [84, 151, 272, 373, 438, 469], "____________________________": 84, "kid": 84, "div": [84, 119, 183, 237, 409, 428], "0o10": [84, 222], "0xa5": 84, "165": [84, 264, 340], "0xb2": 84, "178": 84, "ago": [84, 86, 461], "190": [84, 340, 461], "144": [84, 223, 258, 438, 446, 447, 478], "0144": 84, "0x144": 84, "significantli": [84, 97, 130, 163, 166, 255, 290, 338, 408, 425, 460, 462, 463, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "rm": [84, 88, 138, 293, 328], "rf": [84, 209, 328, 432], "eras": [84, 91, 100, 174, 341, 356, 443], "09": [84, 100, 151, 206, 264, 272, 329, 338, 445], "oct": [84, 94, 100, 180, 208, 220, 222, 338, 341, 342, 349, 364, 425, 447, 461, 465, 467], "fanci": [84, 91, 100, 438, 443, 462, 466], "04d": [84, 223], "3f": [84, 157, 443, 472, 478], "sio": 84, "yello": 84, "tounicod": [84, 118, 155], "paren": [84, 109, 119, 172, 244, 428, 464], "get_input": 84, "do_foo": [84, 152], "do_bar": [84, 152], "foo_inst": 84, "do_": [84, 152, 242], "opnam": [84, 188, 359, 474], "myfunc": [84, 100, 188, 316, 417], "fname": [84, 106, 166, 187, 265, 379, 474], "rstrip": [84, 130, 133, 134, 185, 244, 281, 341, 448, 462], "workaround": [84, 178, 190, 294, 338, 341, 387, 399, 419, 446, 470, 471, 473, 478], "tough": 84, "dive": 84, "focus": [84, 98, 107, 464, 470, 472, 474], "hot": [84, 244, 305, 470], "spot": [84, 292, 361], "benchmark": [84, 223, 305, 452, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 473, 474, 475, 478, 479], "sprinkl": [84, 431], "outweigh": 84, "detriment": 84, "confid": [84, 102, 148, 315], "devot": [84, 103, 455], "ineffici": [84, 255, 290, 350, 379, 470, 471, 475], "quadrat": [84, 158, 187, 341, 406, 466, 469], "accumul": [84, 86, 91, 94, 117, 183, 223, 258, 289, 296, 305, 315, 328, 377, 385, 438, 441, 460, 472, 473, 478], "my_str": [84, 471], "my_bytes_object": 84, "penultim": 84, "activest": [84, 451, 456, 459, 472], "52560": 84, "mylist": [84, 178, 318, 472], "variat": [84, 92, 93, 103, 157, 180, 190, 268, 290, 302, 338, 345, 351, 425, 447, 458, 464], "keep_funct": 84, "keep_condit": 84, "fastest": [84, 86, 231, 280, 316, 364, 381, 421, 448, 465, 472, 478], "con": [84, 337], "lisp_list": 84, "analogu": [84, 280], "car": [84, 340], "cdr": 84, "replic": [84, 94, 205, 280, 458, 463, 466], "suffic": [84, 222, 292, 385, 441], "exemplar": 84, "randal": [84, 105], "schwartz": [84, 105, 465], "metric": [84, 369], "isort": 84, "list1": 84, "list2": 84, "embodi": [84, 204, 407], "refin": [84, 477], "mboxmailbox": 84, "maildirmailbox": 84, "outlookmailbox": 84, "mere": [84, 85, 86, 166, 180, 190, 222, 281, 289, 330, 345, 349, 381, 423, 424, 467], "class1": [84, 386, 387, 461], "class2": [84, 386, 387, 461], "upperout": 84, "outfil": [84, 117, 137, 259, 289, 298, 377, 449, 468, 472], "_outfil": 84, "redefin": [84, 141, 158, 237, 247, 335, 425, 437, 462, 465], "trickier": [84, 289], "basealia": 84, "getcount": [84, 288, 479], "rebind": [84, 224, 433, 437, 463], "tightli": [84, 427, 431], "cout": 84, "mangl": [84, 193, 222, 318, 427, 432, 433, 437, 474], "_classname__spam": [84, 437], "privaci": [84, 338, 395], "bother": [84, 91, 100, 102, 106, 280, 460, 461, 471], "children": [84, 99, 101, 119, 129, 233, 264, 280, 290, 293, 309, 311, 319, 359, 366, 373, 381, 385, 386, 387, 407, 408, 409, 410, 419, 459, 466, 477], "vanish": [84, 155, 233, 383], "inconveni": [84, 240, 252, 387, 410], "patholog": [84, 441], "13901272": 84, "13891296": 84, "inadvis": 84, "500": [84, 107, 152, 180, 183, 211, 220, 238, 285, 340, 341, 395, 404, 447, 449, 462, 464, 469], "thon": [84, 446], "_sentinel": 84, "late": [84, 91, 102, 187, 300, 459], "firstofmonthd": 84, "namedint": 84, "xlat": 84, "titlestr": [84, 381], "isalnum": [84, 175, 316, 341], "2012": [84, 91, 106, 220, 473, 479], "blog": [84, 387, 464], "rock": [84, 106, 117], "princip": [84, 119, 240, 338, 341, 423, 449, 468, 472], "cached_properti": [84, 92, 223, 341, 471, 478], "lru_cach": [84, 157, 217, 223, 258, 472, 473, 475, 478], "maxsiz": [84, 92, 109, 131, 157, 217, 222, 223, 258, 280, 300, 313, 341, 349, 359, 366, 425, 447, 467, 472, 478], "ag": [84, 92, 105, 157, 223, 240, 241, 337, 338, 448, 461, 462, 463, 466, 472], "weather": 84, "govern": [84, 86, 100, 178, 183, 191, 391, 416, 423, 472], "websit": [84, 107, 181, 232, 392, 423, 431, 456, 472], "station_id": 84, "_station_id": 84, "current_temperatur": 84, "hourli": 84, "longitud": [84, 342], "latitud": [84, 342], "station": 84, "historic_rainfal": 84, "mm": [84, 180, 245, 275, 341, 363, 391], "rainfal": 84, "change_st": 84, "cm": [84, 136, 166, 359, 385], "__pycache__": [84, 247, 293, 308, 349, 447, 452, 470, 472, 478], "xyz": [84, 117, 264, 265, 341, 385, 472], "cfile": [84, 308], "bar_var": 84, "foo_var": 84, "jim": [84, 94, 100, 305, 431, 459, 463, 465, 472, 476], "roskind": [84, 305], "matthia": [84, 466, 469, 471, 473, 476, 477, 478], "urlich": 84, "modnam": [84, 437, 447, 464, 471, 476], "proof": [84, 94, 200, 280, 459, 478], "paradox": [84, 462], "0x7352a0": 84, "0x4198d0": 84, "yournam": 85, "recognis": [85, 172, 210, 265, 299, 328, 337, 386, 425], "hit": [85, 91, 141, 150, 173, 210, 223, 244, 294, 338, 356, 366, 377, 386, 398, 464, 469, 472], "v3": [85, 334], "d48eceb": 85, "19": [85, 88, 94, 99, 100, 103, 106, 136, 147, 157, 173, 180, 183, 190, 206, 220, 233, 258, 290, 338, 340, 341, 342, 420, 462, 463, 464, 465, 466, 469, 472, 473, 478, 479], "2017": [85, 291, 338, 432, 453], "06": [85, 100, 180, 242, 264, 329, 446, 464, 476], "04": [85, 88, 91, 180, 342, 344, 363, 422, 445, 464, 466, 469, 476, 477], "45": [85, 94, 143, 157, 164, 183, 264, 280, 315, 334, 381, 383, 462, 463, 464, 469, 478, 479], "1900": [85, 180, 363, 432, 465, 472], "strongest": [85, 170, 466], "hellohellohello": 85, "desktop": [85, 106, 400, 458], "pathext": [85, 329, 396, 458, 471, 474], "suddenli": 85, "puzzl": [85, 464], "misconfigur": [85, 99, 244], "viru": 85, "scanner": [85, 316, 354, 375, 474], "magnitud": [85, 180, 183, 222, 259, 272, 341, 342, 406, 441, 459, 470, 473], "mcafe": 85, "offend": [85, 426, 440, 460], "pyinit_foo": 85, "__declspec": 85, "app": [85, 100, 104, 244, 266, 349, 366, 396, 404, 458, 465, 466, 472], "undocu": [85, 152, 181, 223, 234, 264, 271, 294, 359, 385, 419, 469, 470, 471, 473, 474, 475, 476, 477, 479], "nn": 85, "33": [85, 144, 157, 173, 175, 258, 280, 281, 316, 349, 386, 441, 447, 448, 461, 462, 463, 472, 478, 479], "greatli": [85, 157, 345, 399, 448, 459, 460, 461, 462, 465, 466, 467, 471, 473, 475, 478], "loadlibraryex": [85, 173, 478], "getprocaddress": 85, "grungi": 85, "leo": [85, 146], "initleo": 85, "initleoc": 85, "initmyappc": 85, "myapp": [85, 99, 100, 164, 232, 366, 418, 475], "pythonnn": 85, "standpoint": 85, "_resultobj": 85, "mult": [85, 119, 428], "typemap": [85, 266], "newbi": [85, 464, 466], "wxpythonwindow": 85, "_any_": 85, "radio": [85, 278, 372], "batch": [85, 99, 103, 123, 258, 296, 345, 436, 449, 458, 471, 475], "kbhit": [85, 279], "getch": [85, 91, 174, 279], "curli": [86, 106, 278, 342, 384, 395, 427, 432, 439, 465, 466, 476], "complement": [86, 103, 316, 341, 381, 425, 469, 473, 477, 479], "duck": [86, 341, 383, 465, 474], "subtli": [86, 91, 104, 172, 193, 202, 429], "__aenter__": [86, 166, 188, 385, 386, 387, 424, 425], "__aexit__": [86, 136, 166, 188, 385, 386, 387, 424, 425], "bdfl": 86, "benevol": [86, 459], "bytesio": [86, 193, 204, 231, 232, 255, 268, 296, 341, 357, 375, 418, 422, 465, 467, 472, 475], "gzipfil": [86, 231, 355, 466, 468, 469, 471, 472, 475, 479], "argument1": 86, "argument2": 86, "argumentn": 86, "1j": [86, 151, 222, 259, 386], "__exit__": [86, 100, 166, 188, 255, 280, 330, 341, 355, 359, 385, 386, 402, 424, 425, 464, 465, 466, 476], "laid": [86, 108, 382], "multidimension": [86, 341], "sugar": [86, 100, 166, 222, 241, 247, 258, 337, 438, 467], "perl": [86, 94, 103, 105, 240, 316, 436, 441, 449, 459, 463, 464], "dictview": [86, 341, 478], "quack": [86, 100, 465], "emphas": [86, 94, 190, 281, 370, 424], "emploi": [86, 136, 148, 280, 290, 409, 429, 473], "eafp": [86, 290], "forgiv": [86, 459], "character": [86, 349], "lbyl": 86, "mediat": 86, "synonym": [86, 91, 100, 106, 112, 174, 222, 289, 296, 339, 366, 407, 432, 465], "75": [86, 91, 100, 187, 190, 280, 340, 381, 446, 448, 462, 463, 465, 466, 471, 476, 477, 478, 479], "downward": 86, "sum_two_numb": [86, 119], "_featur": [86, 110, 222], "8192": [86, 104, 220, 222, 239, 404], "81": [86, 101, 258, 280, 315, 340, 375, 439, 443, 446, 448, 478], "singledispatch": [86, 223, 470, 474, 477], "443": [86, 133, 239, 338, 474], "parameter": [86, 174, 190, 337, 341, 382, 383, 425, 469, 479], "483": [86, 383, 475], "afford": [86, 459], "computation": 86, "intens": [86, 122, 174, 267, 290, 291, 473], "granular": [86, 98, 100, 247, 290, 349, 448], "suffer": [86, 385, 386, 441, 460, 461, 462], "overcom": [86, 362, 472], "costlier": 86, "unequ": [86, 183, 293, 341, 425, 427, 463, 464, 467, 473], "blurri": 86, "shorter": [86, 103, 199, 222, 232, 258, 289, 297, 323, 344, 427, 436, 439, 443, 459, 460, 463, 465, 466, 471, 472], "collat": [86, 263, 337, 470], "strxfrm": [86, 105, 263], "nsmallest": [86, 222, 223, 233, 463, 464], "nlargest": [86, 222, 223, 233, 463, 464], "groupbi": [86, 94, 223, 258, 288, 463, 468], "attrgett": [86, 94, 105, 144, 288, 463, 464, 465, 472, 475], "itemgett": [86, 105, 144, 258, 288, 463, 464, 475, 478], "methodcal": [86, 105, 288, 465, 475], "leap": [86, 99, 103, 147, 180, 363], "setlocal": [86, 255, 263, 413, 449, 470, 475], "new_local": 86, "cp1252": [86, 155, 445], "getencod": [86, 91, 106, 155, 172, 174, 222, 255, 263, 413, 458, 470], "akin": [86, 249, 341, 429], "04x": [86, 106], "load_modul": [86, 247, 420, 429, 462, 469, 471, 474, 476], "metapathfind": [86, 247, 248, 349, 469, 470, 473, 474, 477], "organiz": [86, 338, 425], "localtim": [86, 99, 180, 200, 206, 245, 264, 363, 460, 461, 471, 473], "float_info": [86, 272, 341, 447, 465], "1024": [86, 106, 172, 183, 212, 232, 265, 306, 334, 335, 338, 341, 379, 432, 448], "max_exp": [86, 349], "islic": [86, 94, 157, 222, 258, 464, 477], "innermost": [86, 113, 166, 190, 311, 349, 383, 427, 437, 438, 474], "versatil": [86, 437, 446, 449], "position": [86, 119, 249, 386, 474, 478], "posonly1": 86, "posonly2": 86, "positional_or_keyword": [86, 252], "kw_only1": 86, "kw_only2": 86, "pathentryfind": [86, 247, 420, 429, 469, 470, 473, 474, 477], "fspath": [86, 231, 290, 293, 476], "fsencod": [86, 290, 293, 349, 359, 472, 476], "consensu": [86, 459], "dissent": [86, 459], "opinion": [86, 90, 459, 464], "gratuit": 86, "uncov": [86, 477], "resort": [86, 99, 144, 181, 263, 264, 357, 461], "evolv": [86, 98, 254, 265, 429, 437, 439], "411": [86, 107, 238, 264, 349, 379], "nicknam": [86, 164, 451], "coin": [86, 315], "distant": [86, 443], "unfamiliar": [86, 225, 264, 289, 464, 465], "cleaner": [86, 102, 341, 459, 468, 469, 473, 475], "getrefcount": [86, 349, 447], "richer": [86, 476], "abracadabra": [86, 92, 157, 280, 341, 342, 439, 463], "variable_nam": 86, "analyz": [86, 101, 102, 110, 172, 182, 276, 296, 297, 316, 328, 338, 379, 383, 423, 432, 464, 465, 466, 472], "0000": [86, 97, 106, 155, 180, 200, 206, 256, 341, 363, 425, 459, 472, 473], "10ffff": [86, 155, 425, 473], "recreat": [86, 93, 155, 187, 295, 334, 391, 396, 399, 425, 441, 473, 477], "datastream": 86, "quotat": [86, 155, 345, 443, 446, 465], "apostroph": [86, 341, 468], "unescap": [86, 103, 187, 235, 236, 285, 316, 391, 414, 432, 474, 479], "span": [86, 98, 103, 119, 147, 164, 172, 190, 217, 237, 275, 316, 341, 342, 424, 446, 464, 465, 471, 473, 475, 476], "remove_gray_shad": 86, "refactor": [86, 94, 109, 119, 385, 386, 387, 463, 470, 474, 475, 476, 477], "get_type_hint": [86, 383, 470, 477, 479], "macintosh": [86, 155, 432, 459, 462], "splitlin": [86, 152, 187, 197, 205, 341, 361, 378, 465, 472, 474], "interf": [86, 183, 280, 350, 364, 427, 474], "zen": [86, 111], "philosophi": [86, 183, 193, 448, 467], "larri": [87, 340, 466, 468, 469, 473, 474, 478, 479], "hast": [87, 466, 468, 469, 473, 474, 478, 479], "get_annot": [87, 252, 469], "viabl": 87, "inadvert": [87, 166, 252, 465, 474, 475], "ann": 87, "exot": [87, 98, 259, 390, 461], "malform": [87, 119, 155, 183, 196, 222, 239, 255, 268, 291, 342, 463, 465, 472], "nutshel": 87, "update_wrapp": [87, 92, 223, 252, 464, 474], "unwrap": [87, 252, 338, 391, 474], "__wrapped__": [87, 92, 222, 223, 252, 469, 470, 472, 474, 475], "__globals__": [87, 252, 425, 467, 469], "type_check": [87, 247, 289, 383, 476], "fn": [87, 100, 106, 163, 197, 264, 396, 404, 418, 419, 467, 475, 478], "paragraph": [87, 99, 136, 194, 244, 259, 289, 290, 293, 338, 341, 361, 410, 417, 423, 425, 438, 449, 459, 462], "tshepang": 88, "mbambo": 88, "fulfil": [88, 107, 238, 242, 338, 357, 460, 462, 472], "explor": [88, 99, 105, 107, 164, 188, 237, 244, 290, 381, 385, 396, 410, 425, 444, 458, 465, 470, 472], "devguid": [88, 474], "ctypes_configur": 88, "dotview": 88, "lib_pypi": 88, "drwxr": [88, 220], "xr": [88, 220, 329, 472], "wena": 88, "4096": [88, 104, 106, 112, 157, 170, 220, 222, 232, 334, 341, 362, 472], "feb": [88, 94, 180, 461], "51": [88, 100, 101, 315, 381, 439, 465, 469], "rwxr": [88, 329], "535": 88, "05": [88, 100, 131, 151, 180, 258, 272, 316, 338, 344, 363, 449, 464, 465, 476], "rw": [88, 93, 100, 220, 292, 329, 337, 345, 472, 475, 476, 477], "741": 88, "01": [88, 100, 104, 143, 180, 183, 206, 222, 232, 237, 264, 329, 334, 336, 338, 341, 363, 405, 419, 422, 427, 448, 458, 460, 462, 463, 464, 472, 473, 476, 477], "cftuvsux": 88, "cp": [88, 92, 155, 289, 290, 466, 475], "shorten": [88, 181, 318, 361, 469, 472, 473, 474, 479], "willing": [88, 289, 338, 441, 479], "helpfulli": 88, "store_tru": [88, 117, 187, 225, 289, 306, 396, 466, 472], "spirit": 88, "brought": [88, 104, 222, 296, 462], "vv": [88, 117, 452, 468, 476], "vvv": [88, 117, 392], "vvvv": 88, "nonetyp": [88, 165, 190, 223, 281, 316, 382, 383, 469, 470], "surfac": [88, 290, 381, 471], "greedili": 88, "add_mutually_exclusive_group": [88, 117], "opposit": [88, 94, 103, 106, 157, 206, 316, 381, 425, 459, 465, 467], "sake": [88, 91, 100, 125, 202, 233, 290, 328, 429, 462], "vq": 88, "conclud": [88, 94, 99, 103], "slight": [88, 100, 212, 240, 459, 462, 472], "babel": [88, 227], "pybabel": [88, 227], "thorough": [88, 316, 334, 472], "overwhelm": [88, 289], "py3c": 90, "kuchl": [91, 94, 103, 106, 174, 459, 460, 461, 462, 463, 464, 465, 466, 474], "raymond": [91, 92, 94, 105, 174, 344, 424, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "paint": [91, 174, 381, 461], "vt100": [91, 174], "nich": 91, "checkbox": [91, 148, 278, 458], "urwid": 91, "AT": [91, 374], "carri": [91, 92, 99, 155, 181, 183, 188, 262, 264, 272, 280, 289, 315, 337, 341, 385, 406, 407, 423, 426, 432, 433, 439, 464, 465, 466, 475, 478], "proprietari": [91, 340], "unicurs": 91, "addstr": [91, 174], "mvaddstr": 91, "mvwaddstr": 91, "initscr": [91, 174], "stdscr": [91, 174, 465], "noecho": [91, 174], "instantli": [91, 290, 381], "cbreak": [91, 174, 380], "multibyt": [91, 174, 205, 341, 473], "key_left": [91, 174], "keypad": [91, 174], "nocbreak": [91, 174], "endwin": [91, 174], "mess": [91, 117, 289, 437, 443, 461], "buggi": [91, 104, 459, 461, 471, 473, 474], "uncaught": [91, 149, 337, 349, 362, 427, 460, 478], "refresh": [91, 157, 174, 285, 366, 373, 464, 479], "getkei": [91, 174], "funni": [91, 138], "rectangular": [91, 151, 381], "redraw": 91, "newwin": [91, 174], "begin_x": [91, 174], "begin_i": [91, 174], "height": [91, 174, 178, 244, 278, 290, 316, 340, 366, 373, 381, 383, 446, 464], "40": [91, 92, 94, 99, 152, 157, 180, 190, 244, 264, 305, 315, 316, 318, 329, 340, 363, 372, 381, 421, 438, 448, 449, 469, 474, 477, 478, 479], "col": [91, 174, 244, 258, 342, 475], "baud": 91, "flurri": [91, 459], "paus": [91, 94, 127, 130, 134, 174, 292, 294, 330, 427, 463, 464], "redrawn": [91, 174, 381], "subsect": [91, 103, 118, 123, 134, 244, 341, 427, 438], "newpad": [91, 174], "addch": [91, 174], "ord": [91, 106, 117, 119, 173, 175, 222, 337, 341, 386, 425, 427, 447, 459, 465], "26": [91, 93, 99, 101, 147, 180, 233, 256, 280, 315, 329, 338, 363, 364, 375, 391, 420, 423, 462, 463, 466, 472, 476, 478, 479], "ordinari": [91, 99, 103, 118, 148, 166, 190, 222, 231, 297, 316, 327, 330, 337, 340, 354, 355, 386, 399, 410, 429, 432, 433, 437, 459, 469, 473], "annoi": [91, 148, 172, 233, 264, 386, 459, 465], "flicker": [91, 174], "noutrefresh": [91, 174], "doupdat": [91, 174, 176], "twisti": 91, "maze": 91, "waddstr": [91, 473], "hide": [91, 96, 106, 172, 176, 190, 191, 213, 244, 255, 289, 345, 359, 364, 373, 381, 383, 397, 424, 437, 446, 447, 458, 462, 466, 471, 472, 479], "boldfac": [91, 465], "underlin": [91, 174, 369, 373], "bytestr": [91, 158, 290, 334, 341, 383, 404, 410, 421, 465, 471], "acs_plminu": [91, 174], "acs_ulcorn": [91, 174], "border": [91, 174, 366, 373, 391], "flash": [91, 174], "distract": [91, 289], "blink": [91, 174, 478, 479], "curs_set": [91, 174], "invis": [91, 155, 174, 176, 381, 466, 468], "leaveok": [91, 174], "video": [91, 174, 258, 269, 272, 315, 451, 465], "viewer": [91, 244, 266, 381], "safest": [91, 173, 268], "stick": [91, 106, 267, 280, 359, 373, 381, 461, 462, 465], "a_blink": [91, 174], "a_bold": [91, 174, 465], "bright": 91, "bold": [91, 147, 174, 366, 369], "a_dim": [91, 174], "a_revers": [91, 174], "a_standout": [91, 174], "a_underlin": [91, 174], "xterm": [91, 174], "start_color": [91, 174], "has_color": [91, 174], "american": [91, 180], "spell": [91, 155, 180, 200, 222, 254, 264, 305, 341, 373, 432, 433, 445, 462, 467, 473], "canadian": [91, 155], "british": 91, "resign": 91, "misspel": [91, 92, 164, 386], "foreground": [91, 174, 244, 373, 449], "color_pair": [91, 174], "init_pair": [91, 174, 469], "wire": [91, 99, 155, 174, 264, 265, 266, 338, 343, 386, 416, 475], "black": [91, 93, 100, 106, 144, 157, 174, 208, 244, 315, 373, 381, 449, 462, 463, 469, 470, 471, 474, 478], "green": [91, 93, 119, 157, 159, 174, 208, 237, 315, 340, 381, 399, 438, 449, 462, 463, 468, 469, 472, 476], "magenta": [91, 93, 174, 449], "cyan": [91, 93, 174, 449], "color_black": [91, 174], "color_r": [91, 174], "color_whit": [91, 174], "alert": [91, 104, 237, 266, 338, 383, 397, 477], "rgb": [91, 93, 159, 174, 203, 246, 289, 366, 381, 474], "purpl": [91, 93, 100, 208], "unabl": [91, 94, 99, 100, 107, 252, 264, 268, 290, 325, 337, 345, 349, 361, 392, 440, 450, 458, 464], "can_change_color": [91, 174], "lucki": [91, 173], "talent": 91, "key_up": [91, 174], "nodelai": [91, 174], "err": [91, 174, 210, 225, 266, 311, 345, 385, 416, 423, 440, 473], "halfdelai": [91, 174], "tenth": [91, 138, 174, 206], "key_ppag": [91, 174], "key_hom": [91, 174], "printdocu": 91, "getstr": [91, 174, 278, 465], "backspac": [91, 103, 174, 175, 244, 316, 432, 445], "keybind": [91, 174, 244, 317], "gather": [91, 96, 117, 121, 131, 134, 136, 174, 208, 222, 224, 290, 305, 334, 377, 385, 453, 470, 475, 477, 478], "editwin": 91, "struck": 91, "brows": [91, 107, 254, 310, 373, 438, 450, 451, 465], "vendor": [91, 232, 300, 436, 457, 458, 469, 470], "acs_": 91, "lengthi": [91, 94, 103, 258, 297, 459, 460, 461, 462, 463, 472], "swear": 91, "pycon": [91, 106, 338, 464], "2013": [91, 100, 106, 180, 291, 338, 423], "hetting": [92, 94, 105, 424, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "gentli": 92, "curiou": [92, 148], "objtyp": 92, "directorys": 92, "dirnam": [92, 220, 268, 290, 291, 293, 299, 359, 385, 397, 453, 477], "song": [92, 471], "game": [92, 104, 117, 381, 436, 464, 465], "twenti": [92, 172], "chess": [92, 94, 106, 461, 462], "_age": 92, "basicconfig": [92, 99, 100, 122, 166, 264, 463, 472, 473, 478], "loggedageaccess": 92, "birthdai": [92, 448, 469], "mari": [92, 334, 438], "dave": [92, 105, 462, 463, 466, 472], "david": [92, 94, 96, 106, 227, 423, 458, 459, 460, 461, 462, 463, 465, 466, 468, 470, 472, 473, 474, 475, 476, 478], "hardwir": [92, 166, 305], "loggedaccess": 92, "public_nam": 92, "private_nam": 92, "_name": [92, 173, 178, 193, 202], "pete": 92, "peter": [92, 97, 111, 227, 315, 364, 459, 460, 461, 462, 463, 464, 465, 470, 473, 474, 475, 476, 479], "kate": 92, "catherin": 92, "some_class": 92, "descriptor_nam": 92, "notori": [92, 399], "abstractmethod": [92, 113, 223, 247, 248, 250, 286, 290, 326, 465, 473], "oneof": 92, "predic": [92, 94, 135, 252, 258, 361, 362, 410, 462, 465, 472, 477, 479], "minvalu": 92, "maxvalu": 92, "minsiz": 92, "isupp": [92, 175, 258, 323, 341, 385], "wood": [92, 117], "metal": 92, "plastic": 92, "quantiti": [92, 183, 272, 290, 316, 338, 443, 446, 449, 462, 466, 472], "metl": 92, "deeper": [92, 107, 157, 164, 180, 190, 304, 342, 349, 470], "behind": [92, 173, 190, 281, 306, 322, 352, 355, 381, 392, 425, 437, 443, 458, 460, 463, 469], "everydai": [92, 222, 251, 385], "lastli": [92, 122, 427, 433], "find_name_in_mro": 92, "object_getattribut": 92, "cls_var": 92, "descr_get": 92, "bypass": [92, 155, 222, 223, 232, 290, 342, 349, 351, 386, 422, 425, 427, 429, 471], "getattr_hook": 92, "slot_tp_getattr_hook": 92, "type_getattro": 92, "super_getattro": 92, "set_nam": [92, 123, 136, 478], "skeleton": 92, "conn": [92, 123, 157, 163, 166, 239, 280, 296, 326, 334, 338, 362, 464, 472, 475], "fetchon": [92, 296, 337, 464, 472], "commit": [92, 117, 278, 285, 302, 337, 345, 368, 428, 450, 464, 465, 466, 474, 476], "movi": [92, 144, 337, 383, 470, 471], "director": [92, 144, 392], "music": [92, 157], "artist": 92, "genr": 92, "entertain": [92, 148], "star": [92, 119, 157, 188, 355, 374, 410, 424, 428, 431, 433, 469, 470], "war": [92, 470], "georg": [92, 106, 258, 443, 464, 465, 466, 468, 469, 472, 473, 475, 476], "luca": [92, 232, 474, 475], "jaw": [92, 144], "1975": [92, 144, 259, 337, 340, 446, 478], "steven": [92, 460, 464, 466, 471, 472, 474, 475, 476, 478], "spielberg": [92, 144], "countri": [92, 240, 263, 338, 341, 410, 463], "road": [92, 241], "john": [92, 105, 107, 157, 172, 187, 366, 410, 437, 438, 439, 460, 463, 464, 465, 466, 469, 470, 473, 476], "denver": 92, "abram": 92, "excit": [92, 436, 459, 461], "prepackag": 92, "succinct": [92, 383, 448, 469], "fget": [92, 222, 382], "fset": [92, 222, 382], "fdel": [92, 222, 382], "getx": [92, 222], "__x": 92, "setx": [92, 222, 381, 458], "delx": [92, 222], "descrobject": 92, "prop": [92, 458, 471], "intervent": [92, 366, 422], "spreadsheet": [92, 172, 340, 448, 462], "b10": 92, "recalcul": [92, 113, 119, 264, 340, 422, 470], "recalc": 92, "_valu": [92, 193, 202], "seamlessli": 92, "classobject": [92, 470], "__func__": [92, 109, 252, 341, 425, 437, 465, 466], "__self__": [92, 252, 341, 425, 437, 465], "func_descr_get": 92, "funcobject": [92, 470], "0x00c45070": 92, "0x00b18c90": 92, "chart": [92, 106, 447], "median": [92, 315, 340, 448, 474], "conceptu": [92, 94, 99, 117, 138, 191, 193, 197, 202, 247, 250, 315, 342, 383, 397, 429, 438, 469, 477], "erf": [92, 272, 466, 472, 477], "dataset": [92, 105, 164, 223, 233, 340, 463, 478], "9332": 92, "unexcit": 92, "pystaticmethod_typ": 92, "fromkei": [92, 157, 341, 382, 462, 470, 472], "dict_fromkei": 92, "dictobject": [92, 464], "pyclassmethod_typ": 92, "vehicl": 92, "id_numb": 92, "id_nubm": 92, "vye483814lqex": 92, "_dept": 92, "dept": [92, 437, 468, 472], "botani": 92, "watnei": 92, "pirat": 92, "mar": [92, 93, 94, 180, 340, 431, 438, 461, 465], "48": [92, 232, 340, 341, 379, 395, 469], "152": 92, "flyweight": 92, "35": [92, 94, 183, 222, 315, 340, 400, 432, 462, 463, 464, 465, 471, 472, 476, 478, 479], "m1": [92, 258, 344, 470], "pi": [92, 151, 173, 174, 183, 218, 272, 294, 315, 381, 410, 439, 441, 443, 448, 472, 473, 478], "100_000": [92, 340], "faith": 92, "_slotvalu": 92, "clsname": 92, "descr_new": 92, "member_get": 92, "member_set": 92, "member_delet": 92, "member_repr": 92, "mcl": [92, 379], "pytypereadi": 92, "add_method": 92, "slot_nam": 92, "rough": [92, 172, 199, 299, 441, 459], "object_new": 92, "empty_slot": 92, "_pyobject_genericsetattrwithdict": 92, "0x7fb5d302f9d0": 92, "slot_valu": 92, "xz": [92, 267, 329, 355, 383, 472, 473, 475], "week": [93, 147, 180, 263, 363, 459, 471, 478], "weekdai": [93, 147, 180, 208, 266, 363, 478], "mondai": [93, 147, 180, 208, 263, 266, 363], "tuesdai": [93, 147, 180, 208, 266, 448], "wednesdai": [93, 147, 180, 208], "thursdai": [93, 147, 180, 208], "fridai": [93, 147, 208], "saturdai": [93, 147, 180, 208], "sundai": [93, 147, 180, 208, 263, 266, 363, 466], "upper_cas": 93, "isoweekdai": [93, 180, 208], "from_dat": 93, "plot": [93, 340, 463], "chore": [93, 459], "first_week_dai": 93, "weekend": 93, "96": [93, 97, 256, 341, 379, 476, 477, 478, 479], "chores_for_ethan": 93, "dish": [93, 341], "show_chor": 93, "circl": [93, 152, 272, 381, 465], "alias_for_squar": 93, "ONE": [93, 106, 117, 208, 341, 384, 470], "unimport": [93, 208], "_generate_next_value_": [93, 208], "autonam": 93, "north": [93, 180, 373, 381, 466, 468], "south": [93, 155, 316, 373, 381, 465, 468], "east": [93, 180, 363, 373, 381, 384, 437, 463], "west": [93, 180, 363, 373, 381, 437, 468], "__members__": [93, 208, 461, 467], "vast": [93, 327, 478, 479], "mood": 93, "funki": [93, 164], "favorite_mood": 93, "_ignore_": [93, 208, 477], "enumnam": 93, "morecolor": 93, "pink": [93, 381], "some_behavior": 93, "sad": [93, 467], "creaturedatamixin": 93, "leg": 93, "creatur": 93, "beetl": 93, "dog": [93, 103, 157, 316, 437, 472, 475], "test_enum": 93, "fruit": [93, 304, 425, 439], "tomato": [93, 337], "picklabl": [93, 163, 252, 280, 296, 475], "myenum": 93, "pickle_by_enum_nam": 93, "ant": [93, 146], "bee": 93, "somedata": [93, 232, 301], "newenumnam": 93, "chartreus": 93, "sea_green": 93, "rosemari": 93, "flagboundari": [93, 208, 470], "perm": [93, 220, 272, 432, 470, 477, 478], "rwx": [93, 329], "floatenum": 93, "_value_": [93, 208], "px": [93, 272], "km": [93, 340], "vx": 93, "vy": 93, "member_nam": [93, 208, 469], "_name_": [93, 208], "_missing_": [93, 208], "_order_": [93, 208], "sync": [93, 174, 181, 252, 280, 290, 292, 327, 366, 471, 473, 478], "enumclass": 93, "jupit": [93, 340], "mercuri": [93, 340, 472, 474], "neptun": [93, 340], "saturn": [93, 340], "uranu": [93, 340], "venu": [93, 340, 438], "radiu": [93, 152, 272, 337, 381], "surface_grav": 93, "compris": [93, 119, 285, 299, 345, 427, 432, 433, 465], "eject": [93, 208], "_convert_": 93, "some_enum_var": 93, "__getnewargs__": [93, 157, 296, 386, 462, 475], "renumb": [93, 245, 425], "autonumb": 93, "swatch": 93, "panton": 93, "auburn": 93, "3497": 93, "1246": 93, "bleached_cor": 93, "grade": [93, 105, 144, 222, 340, 341, 381, 462], "grene": 93, "303e": 93, "4397e6": 93, "869e": 93, "0518e6": 93, "976e": 93, "37814e6": 93, "421e": 93, "3972e6": 93, "9e": 93, "27": [93, 147, 180, 233, 254, 290, 316, 334, 338, 340, 364, 375, 432, 443, 446, 459, 462, 468, 469, 472, 473, 477, 478, 479], "1492e7": 93, "688e": 93, "0268e7": 93, "686e": 93, "5559e7": 93, "024e": 93, "4746e7": 93, "kilogram": 93, "meter": [93, 372], "gravit": [93, 381], "m3": [93, 363, 470], "kg": 93, "67300e": 93, "6378140": 93, "802652743337129": 93, "367": 93, "day_": 93, "day_0": 93, "day_1": [93, 263], "day_365": 93, "365": [93, 180, 338, 340, 363], "day_366": 93, "subclaus": 94, "ocaml": 94, "haskel": [94, 258, 438, 459, 462], "discourag": [94, 103, 136, 155, 178, 191, 222, 247, 285, 316, 331, 338, 341, 350, 355, 357, 359, 425, 461, 464, 469], "puriti": [94, 391], "constraint": [94, 119, 183, 188, 208, 229, 254, 264, 290, 296, 304, 341, 383, 391, 424, 426, 428, 429, 464, 465, 467, 470, 471], "rigor": [94, 222], "aros": 94, "impract": 94, "enorm": [94, 444], "daili": [94, 448, 461], "proven": [94, 190, 381, 462], "wrongli": 94, "clearli": [94, 102, 103, 117, 233, 252, 350, 383, 385, 449, 459, 461, 464, 473, 477], "synthes": [94, 190, 383], "perfectli": [94, 104, 148, 193, 289, 427, 458], "smallest": [94, 106, 118, 180, 183, 222, 233, 272, 315, 340, 341, 349, 359, 366, 379, 449, 462, 463, 464, 465], "jan": [94, 180, 338, 345, 402, 461, 466, 469, 470, 472, 475, 476, 477, 478, 479], "apr": [94, 452, 461, 464], "jun": [94, 220, 363, 461], "jul": [94, 220, 461, 472], "nov": [94, 180, 206, 220, 242, 338, 363, 461, 476], "itali": 94, "rome": 94, "franc": 94, "pari": [94, 103, 422, 446], "washington": [94, 245], "dc": [94, 258, 290, 410, 464], "listcomp": [94, 119, 428, 439], "genexp": [94, 428], "line_list": 94, "stripped_it": 94, "stripped_list": 94, "expr": [94, 119, 141, 337, 385, 426, 427, 433, 459, 463, 467, 478, 479], "sequence1": [94, 459], "condition1": 94, "expr2": [94, 427, 459], "sequence2": [94, 459], "condition2": 94, "expr3": [94, 427], "sequence3": 94, "condition3": 94, "exprn": [94, 459], "sequencen": [94, 459], "conditionn": 94, "obj_tot": 94, "list_all_object": [94, 463], "expr1": [94, 427, 459], "seq1": [94, 288, 459], "doubtless": [94, 460, 461, 462], "weren": [94, 103, 119, 232, 460, 461, 462, 463, 464, 466], "generate_int": [94, 461, 462], "gen": [94, 252, 258, 427, 461, 462, 472, 475], "messier": [94, 103, 461, 462, 466], "test_gener": [94, 461, 462], "inord": [94, 461, 462], "queen": [94, 315, 316, 461, 462], "nxn": [94, 461, 462], "board": [94, 98, 174, 461, 462], "threaten": [94, 461, 462], "knight": [94, 106, 304, 423, 439, 443, 461, 462, 478], "rout": [94, 104, 107, 209, 382, 404, 449, 461, 462, 466, 474], "chessboard": [94, 461, 462], "cumul": [94, 215, 223, 272, 305, 315, 340, 377, 379, 452, 464, 472, 474, 475], "itera": 94, "iterb": 94, "sentenc": [94, 103, 223, 316, 361, 446, 461, 462, 465], "is_even": [94, 416], "verb": [94, 104, 290, 438], "10000": [94, 305, 330, 364, 381, 462, 473], "rand_list": 94, "769": 94, "7953": 94, "9828": 94, "6431": 94, "8442": 94, "9878": 94, "6213": 94, "2207": 94, "shortest": [94, 192, 222, 258, 441, 459, 464, 466, 467, 468, 472], "broad": [94, 289, 391, 461, 464, 473], "evenli": [94, 258, 315], "elem": [94, 144, 157, 222, 223, 258, 341, 410, 439, 464, 466, 470, 472], "endlessli": [94, 258, 463], "tee": [94, 174, 258, 463], "ne": [94, 109, 288, 366], "starmap": [94, 222, 258, 272, 280, 473], "rubi": [94, 340, 449], "filterfals": [94, 109, 222, 258, 340], "takewhil": [94, 258], "less_than_10": 94, "dropwhil": [94, 258], "aba": 94, "combinations_with_replac": [94, 157, 258, 315, 466, 468], "relax": [94, 180, 241, 472, 479], "key_func": 94, "city_list": 94, "decatur": 94, "huntsvil": 94, "selma": 94, "anchorag": 94, "ak": 94, "nome": 94, "flagstaff": 94, "az": 94, "phoenix": 94, "tucson": 94, "get_stat": [94, 224, 474], "city_st": 94, "kwarg1": [94, 464], "value1": [94, 164, 464, 479], "kwarg2": [94, 464], "value2": [94, 164, 464, 479], "server_log": [94, 464], "initial_valu": [94, 255], "abbc": 94, "mul": [94, 109, 138, 183, 258, 272, 280, 288, 417], "clearer": [94, 190, 289, 341, 459, 460, 461, 462, 463, 465, 477], "floordiv": [94, 119, 288, 428], "not_": [94, 288], "and_": [94, 288], "or_": [94, 288], "eq": [94, 119, 178, 288, 383, 428], "lt": [94, 119, 288, 341, 381, 414, 428, 432, 460, 472, 477], "gt": [94, 119, 235, 236, 237, 288, 414, 428, 472, 473], "ge": [94, 288], "is_": [94, 288], "is_not": [94, 288], "stripped_lin": 94, "existing_fil": 94, "file_list": 94, "adder": 94, "print_assign": 94, "multiwai": 94, "overli": [94, 461], "disentangl": 94, "heck": 94, "essenc": [94, 135], "disagre": [94, 375, 392, 459], "draft": [94, 106, 148, 268, 293, 349, 407, 436, 459, 460, 461, 462, 463, 464, 465, 466, 476, 477], "ian": [94, 404, 470], "bick": [94, 404], "nick": [94, 97, 106, 321, 425, 461, 463, 464, 465, 466, 468, 472, 473, 474, 475, 476, 477], "coghlan": [94, 97, 106, 321, 463, 464, 465, 466, 468, 472, 473, 474, 475, 476, 477], "efford": 94, "jewett": [94, 463, 465], "mike": [94, 461, 463, 464, 465, 470], "krell": 94, "leandro": 94, "lameiro": 94, "jussi": 94, "salmela": 94, "collin": [94, 465, 466, 475], "winter": [94, 222, 465, 466], "blake": [94, 232], "winton": 94, "june": [94, 147, 405, 468, 477], "juli": [94, 147, 187, 423, 432, 461, 462, 466], "typo": [94, 148, 383, 386, 427, 461], "tutor": 94, "harold": [94, 342], "abelson": 94, "gerald": 94, "jai": [94, 460, 472], "sussman": 94, "mitpress": 94, "mit": [94, 248, 304, 423], "sicp": 94, "textbook": [94, 103, 233, 316, 464, 465], "scienc": [94, 103, 340, 362, 475], "defmacro": 94, "rambl": 94, "wikipedia": [94, 106, 157, 232, 268, 338, 340, 344, 381, 464, 472, 473], "functional_program": 94, "partial_appl": 94, "curri": 94, "gnosi": 94, "cx": [94, 258, 462], "tpip": 94, "mertz": 94, "ibm": [94, 155, 174, 183, 344, 419, 462, 464, 473], "developerwork": 94, "foster": [95, 470], "malcolm": [96, 316, 466, 472, 476], "\u0142ukasz": [96, 285, 472, 474, 475, 476, 477, 478, 479], "langa": [96, 285, 472, 474, 475, 476, 477, 478, 479], "incorrectli": [96, 100, 140, 165, 252, 268, 289, 290, 345, 386, 425, 470, 472, 473, 474], "yum": 96, "sdt": 96, "sudo": [96, 100], "29564": 96, "python18035": 96, "_pyeval_evalframedefault": [96, 101], "29565": 96, "dtrace_function_entri": 96, "29566": 96, "29567": 96, "dtrace_function_return": 96, "29568": 96, "29569": 96, "29570": 96, "29571": 96, "maybe_dtrace_lin": 96, "stapsdt": 96, "readelf": 96, "grep": [96, 100, 101, 244, 345, 459], "0000000000000000": 96, "00308d78": 96, "libpython3": 96, "3dm": 96, "00365b68": 96, "0x00000254": 96, "0x00000020": [96, 173], "0x00000010": 96, "nt_gnu_abi_tag": 96, "0x00000274": 96, "0x00000024": 96, "0x00000014": 96, "nt_gnu_build_id": 96, "bitstr": 96, "df924a2b08a7e89f6e11251d4602022977af2670": 96, "0x002d6c30": 96, "0x00000144": 96, "0x00000031": 96, "nt_stapsdt": 96, "gc__start": 96, "0x00000000004371c3": 96, "0x0000000000630ce2": 96, "0x00000000008d6bf6": 96, "ebx": 96, "0x00000030": 96, "gc__done": 96, "0x00000000004374e1": 96, "0x00000000008d6bf8": 96, "rax": 96, "0x00000045": 96, "function__entri": 96, "0x000000000053db6c": 96, "0x00000000008d6be8": 96, "rbp": 96, "r12": 96, "eax": 96, "0x00000046": 96, "function__return": 96, "0x000000000053dba8": 96, "0x00000000008d6bea": 96, "strateg": 96, "copyinstr": 96, "timestamp": [96, 100, 123, 147, 157, 160, 180, 200, 206, 231, 233, 242, 290, 308, 332, 337, 338, 355, 363, 377, 395, 419, 429, 452, 462, 466, 473, 475, 477], "probenam": 96, "basenam": [96, 100, 117, 181, 190, 289, 291, 293, 366, 372, 396, 419], "arg0": [96, 290, 350], "call_stack": 96, "156641360502280": 96, "156641360518804": 96, "156641360532797": 96, "function_3": 96, "156641360546807": 96, "156641360563367": 96, "156641360578365": 96, "156641360591757": 96, "156641360605556": 96, "156641360617482": 96, "156641360629814": 96, "156641360642285": 96, "156641360656770": 96, "156641360669707": 96, "156641360687853": 96, "function_4": 96, "156641360700719": 96, "156641360719640": 96, "function_5": 96, "156641360732567": 96, "156641360747370": 96, "user_str": 96, "thread_ind": 96, "stap": 96, "stp": 96, "11408": 96, "8274": 96, "_abcol": 96, "11414": 96, "425": [96, 238, 479], "11418": 96, "490": 96, "11424": 96, "11428": 96, "426": [96, 238], "11433": 96, "libpython": [96, 453, 469, 470, 478], "6dm": 96, "begun": [96, 362, 462, 463], "import__find__load__start": [96, 477], "import__find__load__don": [96, 477], "find_and_load": 96, "frameptr": 96, "arg4": 96, "probepoint": 96, "cleanli": [96, 98, 103, 338], "fn_call": 96, "033": [96, 174], "1h": [96, 466], "foreach": 96, "6d": [96, 100], "moodi": [97, 473, 474, 475], "ip_address": [97, 139, 256, 334], "192": [97, 100, 240, 256, 264, 342], "ipv4address": [97, 256, 475], "db8": [97, 256], "ipv6address": [97, 256, 475, 479], "3221225985": [97, 256], "42540766411282592856903984951653826561": 97, "ip_network": [97, 256], "ipv4network": [97, 256, 475, 477], "ipv6network": [97, 256, 475, 477], "3221225984": 97, "42540766411282592856903984951653826560": 97, "firewal": [97, 220, 244, 280, 406, 460, 473], "router": [97, 256, 334], "hybrid": [97, 180, 474], "ip_interfac": [97, 256], "ipv4interfac": [97, 256], "ipv6interfac": [97, 256], "ipv": 97, "intuit": [97, 98, 99, 103, 148, 183, 187, 258, 372, 427, 459, 460, 461, 470, 474], "addr4": 97, "addr6": [97, 475], "host4": 97, "host6": 97, "net4": 97, "num_address": [97, 256], "net6": 97, "4294967296": [97, 256, 467], "254": 97, "netmask": [97, 256, 475], "hostmask": [97, 256], "ffff": [97, 256, 459, 473], "explod": [97, 256, 459, 461], "0db8": 97, "0001": [97, 180, 432, 477], "explos": [97, 410], "lend": [97, 461], "agnost": [97, 341, 383], "addressvalueerror": [97, 256], "netmaskvalueerror": [97, 256], "168": [97, 100, 240, 256, 264, 342], "octet": [97, 197, 203, 256, 302, 342, 391, 395], "safer": [98, 190, 296, 297, 439, 462, 463, 471], "old_binascii": 98, "stringent": [98, 474], "unhexlifi": [98, 143], "qwertyuiop": 98, "boo": 98, "circuit": [98, 234, 341, 439], "led": [98, 164, 290, 460, 470, 473, 474, 476], "field_size_limit": [98, 172, 464], "price": [98, 157, 218, 316, 409, 446, 463, 464, 475, 478], "xxlimit": 98, "my_struct": 98, "pai": [98, 100, 103, 190, 438, 458, 471, 474], "myattribut": 98, "pickleabl": [98, 266], "blueprint": 98, "py_tp_travers": 98, "grew": [98, 468, 472], "awkward": [98, 144, 234, 357, 478], "0x03090000": [98, 479], "tediou": [98, 106, 119, 125, 148, 381, 386, 436, 459, 464, 478], "roadblock": 98, "get_defining_class": 98, "get_type_of_self": 98, "example_method": 98, "example_method_doc": 98, "my_method": 98, "module_def": 98, "capi": [98, 466], "iron": 98, "vinai": [99, 100, 462, 463, 465, 466, 468, 472, 473, 474, 475, 476, 477, 478, 479], "sajip": [99, 100, 462, 463, 465, 466, 468, 472, 473, 474, 475, 476, 477, 478, 479], "vinay_sajip": [99, 100], "dove": [99, 100], "ascrib": 99, "investig": [99, 341], "confirm": [99, 186, 264, 291, 294, 383, 392, 397, 458, 469, 470], "told": [99, 383, 396, 425, 462], "flexibli": [99, 397], "\u00f8resund": 99, "malm\u00f6": 99, "threshold": [99, 100, 224, 264, 341, 464], "loglevel": 99, "numeric_level": 99, "afresh": [99, 166, 264], "filemod": [99, 100, 264, 339, 355, 473, 478], "mylib": [99, 385], "do_someth": [99, 100, 148, 338, 385, 427], "levelnam": [99, 100, 264, 265, 266, 280, 463, 466, 472], "asctim": [99, 100, 264, 265, 306, 363, 460, 466, 472], "2010": [99, 100, 106, 264, 329, 342, 349, 387, 466, 472], "41": [99, 258, 304, 315, 316, 340, 416, 448, 465, 479], "iso8601": [99, 416], "3339": 99, "datefmt": [99, 100, 264, 265], "46": [99, 157, 315, 341, 449, 469, 478, 479], "invest": 99, "favourit": 99, "beverag": 99, "hereaft": [99, 305, 352, 439, 447], "getlogg": [99, 100, 122, 264, 385, 462, 466, 468, 479], "diagram": [99, 190, 222, 233, 335, 461], "threefold": 99, "setlevel": [99, 100, 122, 264, 280, 462], "addhandl": [99, 100, 264, 468], "removehandl": [99, 100, 264, 385, 466], "addfilt": [99, 100, 264], "removefilt": [99, 264], "baz": [99, 100, 101, 117, 164, 244, 247, 259, 264, 265, 280, 290, 308, 359, 382, 385, 386, 387, 404, 429, 433], "bam": [99, 264], "ancestor": [99, 100, 174, 264, 265, 280, 293, 338, 373, 386, 387, 410, 425, 462], "setformatt": [99, 100, 264, 266], "deconfigur": 99, "fmt": [99, 100, 180, 198, 256, 264, 292, 301, 359, 449, 465], "millisecond": [99, 122, 123, 128, 174, 180, 244, 264, 325, 373, 381, 403, 470, 472, 476, 479], "tack": 99, "gmtime": [99, 100, 147, 180, 206, 264, 268, 363, 461, 472, 473], "fileconfig": [99, 100, 265, 466, 474, 477], "simple_exampl": [99, 100], "simple_logging_modul": 99, "2005": [99, 100, 180, 268, 423, 463, 464, 465], "03": [99, 100, 180, 183, 264, 338, 342, 363, 448, 462, 464], "618": [99, 258, 469], "620": [99, 463], "697": [99, 471], "773": 99, "nearli": [99, 102, 104, 164, 181, 183, 266, 294, 425, 461, 462, 465, 466, 467, 470, 472, 475], "conf": [99, 100, 103, 293, 449, 462, 472], "simpleexampl": [99, 100], "consolehandl": 99, "simpleformatt": 99, "logger_root": [99, 265], "logger_simpleexampl": 99, "handler_consolehandl": 99, "formatter_simpleformatt": 99, "simple_logging_config": 99, "38": [99, 100, 187, 222, 264, 334, 379, 462, 469, 478, 479], "977": [99, 285], "979": 99, "56": [99, 101, 180, 183, 222, 255, 280, 334, 340, 439, 441, 472, 475], "054": 99, "055": 99, "130": [99, 256, 340, 466], "noncod": 99, "disable_existing_logg": [99, 100, 265], "mypackag": 99, "myhandl": [99, 100, 265], "superset": [99, 157, 303, 341, 427, 459, 462], "yaml": [99, 117, 248, 259, 265, 466, 469, 472], "ext": [99, 100, 155, 188, 197, 265, 273, 291, 294, 449, 462, 463, 472], "lastresort": [99, 264, 472], "raiseexcept": [99, 100, 264, 266, 472], "absenc": [99, 107, 112, 163, 165, 252, 262, 264, 316, 338, 362, 404, 425, 446], "organis": [99, 100, 108, 233, 264], "orgnam": 99, "prerog": 99, "audienc": [99, 304, 397, 431, 462, 467], "interfer": [99, 108, 129, 164, 223, 263, 294], "deliv": [99, 107, 130, 180, 222, 325, 330, 332, 373, 387, 392, 427, 438, 465], "notset": [99, 264, 265, 280], "desk": [99, 436, 446], "staff": [99, 329, 355], "convinc": [99, 263], "xp": [99, 266, 462, 475], "criteria": [99, 172, 245, 264, 305], "reopen": [99, 220, 266, 296, 337, 356, 357, 466, 476], "bufferingformatt": [99, 264], "provis": [99, 299, 338, 423, 427], "trailer": [99, 290, 421, 428], "swallow": [99, 100, 136, 449, 459, 466, 472, 478], "handleerror": [99, 264, 266], "altogeth": [99, 100, 148, 210, 419, 425, 470, 472], "isenabledfor": [99, 100, 264, 466], "expensive_func1": 99, "expensive_func2": 99, "deepli": [99, 168, 359, 386, 406, 432, 449, 459, 465, 470], "tight": [99, 132], "recomput": [99, 325, 326, 330, 363, 474], "_srcfile": 99, "_getfram": [99, 139, 349, 447, 460, 470], "logthread": 99, "getpid": [99, 123, 280, 290], "logprocess": 99, "logmultiprocess": 99, "logasynciotask": 99, "somelogg": 100, "auxiliary_modul": 100, "spam_appl": 100, "fh": 100, "auxiliari": [100, 258, 370, 472], "some_funct": [100, 386, 387], "module_logg": 100, "47": [100, 180, 206, 258, 315, 316, 421, 439, 448, 465, 469], "663": 100, "665": 100, "668": [100, 329], "670": [100, 470], "671": 100, "672": [100, 218], "relativecr": [100, 264], "threadnam": [100, 264], "mainthread": 100, "505": [100, 107, 238], "1007": 100, "1507": [100, 465], "1508": 100, "2258": 100, "2512": 100, "3009": 100, "3013": 100, "3515": 100, "3761": 100, "4017": 100, "4513": 100, "4518": 100, "interspers": [100, 222, 289], "quota": [100, 209, 245], "dormant": 100, "jackdaw": 100, "quartz": 100, "logger1": 100, "area1": 100, "logger2": 100, "area2": 100, "zephyr": 100, "blow": [100, 148, 289, 472], "vex": [100, 460], "daft": 100, "zebra": [100, 157, 296], "jail": 100, "zesti": 100, "vixen": 100, "wizard": [100, 461], "warnings_and_below": 100, "filter_mak": 100, "levelno": [100, 264], "9999": [100, 101, 130, 147, 180, 244, 335, 472, 477], "stoplisten": [100, 265], "data_to_send": 100, "sock_stream": [100, 104, 123, 266, 334, 335, 338, 359, 466, 477], "culprit": 100, "sluggish": 100, "poorli": [100, 146, 302, 447], "capac": [100, 174, 266, 290, 340, 362, 464, 466, 469], "precaut": [100, 113], "eat": [100, 272], "que": 100, "queue_handl": 100, "respect_handler_level": [100, 266, 475], "rootlogg": 100, "default_tcp_logging_port": [100, 265], "unformat": [100, 259, 316], "logrecordstreamhandl": 100, "streamrequesthandl": [100, 335, 476], "recv": [100, 104, 123, 280, 324, 326, 330, 334, 335, 338, 359, 366, 466, 475], "slen": 100, "makelogrecord": [100, 264, 266], "handlelogrecord": 100, "lognam": [100, 226, 290], "bandwidth": [100, 106, 340, 438, 466, 469], "logrecordsocketreceiv": 100, "threadingtcpserv": [100, 335], "allow_reuse_address": [100, 335, 417, 465], "serve_until_stop": 100, "rd": [100, 338, 341, 473], "wr": [100, 460], "handle_request": [100, 167, 330, 335, 404, 417, 466], "5d": 100, "69": [100, 363, 410, 469], "makepickl": [100, 266], "supervisor": 100, "gist": 100, "bone": [100, 456], "bash": [100, 152, 293, 328, 396, 444, 450], "ensure_app": 100, "log_listen": 100, "webapp": 100, "unzip": [100, 222, 418, 420, 462], "bottl": [100, 173, 465], "supervisorctl": 100, "tweak": [100, 289, 387, 460, 463, 476], "usernam": [100, 107, 148, 170, 197, 200, 220, 226, 245, 266, 290, 291, 302, 332, 391, 392, 472, 473, 475], "customadapt": 100, "connid": 100, "some_conn_id": 100, "threadloc": 100, "contextfilt": 100, "inject": [100, 123, 126, 134, 264, 269, 328, 337, 345, 355, 383, 392, 406, 452, 464, 470, 475], "sheila": 100, "231": 100, "a1": [100, 225], "a2": [100, 225, 316], "lvl": 100, "lvlname": 100, "getlevelnam": [100, 264], "webapplib": 100, "appnam": [100, 266], "ctx_request": 100, "ctx_appnam": 100, "injectingfilt": 100, "num_request": 100, "process_request": [100, 335], "splitext": [100, 197, 291, 293, 355, 449, 465, 476], "adhf": 100, "argumentdefaultshelpformatt": [100, 117], "ap": [100, 187], "aa": [100, 157, 258, 316, 439, 466], "app1": 100, "app2": 100, "49": [100, 242, 258, 264, 280, 379, 439, 443, 446, 469, 478, 479], "wc": 100, "153": 100, "147": [100, 478], "600": [100, 180, 476], "issue3770": 100, "listener_configur": 100, "mptest": 100, "processnam": [100, 264, 280], "listener_process": 100, "print_exc": [100, 364, 378], "worker_configur": 100, "worker_process": 100, "current_process": [100, 280], "orchestr": [100, 385], "put_nowait": [100, 131, 266, 280, 313], "logger_thread": 100, "qh": 100, "ham": [100, 157, 167, 187, 222, 252, 276, 318, 427, 429, 438, 475], "egg": [100, 157, 172, 187, 215, 222, 223, 248, 255, 293, 304, 316, 318, 327, 341, 345, 355, 378, 382, 383, 386, 387, 392, 410, 419, 429, 438, 440, 443, 446, 459], "mplog": 100, "foofil": 100, "wp": 100, "lp": [100, 267, 470], "max_work": [100, 123, 163, 472], "log_filenam": 100, "logging_rotatingfile_exampl": 100, "my_logg": 100, "mylogg": [100, 264], "maxbyt": [100, 265, 266, 466], "backupcount": [100, 265, 266, 466], "logfil": [100, 148], "backup": [100, 109, 215, 266, 337, 355, 465, 472, 477], "bf": [100, 316, 448], "df": [100, 466], "924": 100, "494": [100, 476], "833": 100, "recal": [100, 244, 383, 441], "bracemessag": 100, "dollarmessag": 100, "unwieldi": 100, "palat": 100, "brethren": 100, "2f": [100, 131, 218, 342, 391, 441, 465, 466, 468], "trip": [100, 119, 146, 240, 375, 465, 467, 468, 470], "styleadapt": 100, "_log": [100, 264], "makerecord": [100, 264], "setloggerclass": [100, 264], "setlogrecordfactori": [100, 264], "interrog": [100, 202, 387], "getlogrecordfactori": [100, 264], "old_factori": [100, 264], "record_factori": [100, 264], "custom_attribut": [100, 264], "0xdecafbad": [100, 264], "born": [100, 341], "zmq": 100, "pyzmq": 100, "sock": [100, 103, 104, 123, 130, 133, 239, 305, 326, 334, 335, 338, 359, 472, 475, 477], "pub": [100, 121, 220, 329, 457], "5556": 100, "zeromqsockethandl": 100, "enqueu": [100, 131, 163, 266, 280, 313], "send_json": 100, "socktyp": [100, 266, 334, 359, 466], "zeromqsocketlisten": 100, "setsockopt_str": 100, "dequeu": [100, 266], "recv_json": 100, "django": [100, 157, 294, 299, 386, 466, 473], "specialfilt": 100, "mail_admin": 100, "adminemailhandl": 100, "myproject": [100, 385], "runnabl": [100, 123, 396], "gz": [100, 215, 231, 273, 293, 329, 355, 396, 421, 423, 450, 457, 459, 464, 471, 472], "f_in": [100, 231], "f_out": [100, 231], "copyfileobj": [100, 107, 231, 329, 478], "rh": [100, 188, 473], "six": [100, 102, 169, 180, 222, 223, 296, 300, 315, 316, 337, 373, 391, 395, 419, 465, 472, 474, 477, 478], "zcat": 100, "02": [100, 101, 180, 183, 264, 280, 329, 363, 420, 448, 459, 461, 462, 463, 472, 473, 476], "767": [100, 403], "996": 100, "997": 100, "998": 100, "stop_ev": 100, "heterogen": [100, 118, 341, 439, 467], "bunch": [100, 125, 197, 204, 289, 436, 459, 460, 461, 462, 465], "config_initi": 100, "config_work": 100, "config_listen": 100, "hang": [100, 104, 107, 132, 280, 325, 330, 359, 462, 472], "5424": [100, 266], "compliant": [100, 109, 123, 143, 180, 191, 192, 193, 195, 198, 199, 200, 204, 205, 206, 212, 232, 259, 268, 308, 328, 337, 363, 391, 404, 406, 423, 427, 461, 464, 466, 471, 473, 476, 477], "ufeffunicod": 100, "feff": [100, 106, 155], "xef": [100, 143, 391, 432], "xbb": [100, 432], "xbf": [100, 432], "readili": [100, 255, 280, 340, 356, 469, 474], "parseabl": [100, 300, 328], "serialis": [100, 155, 321, 410], "structuredmessag": 100, "fnum": 100, "specialis": [100, 107, 337, 341, 383, 428], "jsonencod": [100, 259, 476], "unicode_escap": [100, 155], "set_valu": 100, "snowman": [100, 471], "u2603": 100, "chown": [100, 139, 290, 329, 473], "owned_file_handl": 100, "puls": 100, "chowntest": 100, "orthogon": 100, "getmessag": [100, 264, 411], "firstli": [100, 321, 341], "secondli": 100, "cater": [100, 190, 265, 266], "myfilt": [100, 472], "param": [100, 136, 148, 193, 194, 200, 202, 206, 239, 252, 278, 290, 302, 337, 385, 391, 392, 396, 416, 417, 428, 466, 472, 479], "noshow": 100, "onelineexceptionformatt": 100, "formatexcept": [100, 264], "exc_text": [100, 264, 266], "configure_log": 100, "2015": [100, 180, 323, 423, 453, 475], "07": [100, 180, 264, 268, 316, 342, 363, 375, 422, 464, 465, 476, 479], "logtest7": 100, "nzerodivisionerror": 100, "simplist": [100, 386], "render": [100, 106, 123, 186, 195, 198, 220, 303, 335, 373, 378, 408, 425, 440, 458, 462, 465, 466, 469, 478], "audibl": [100, 174], "speech": [100, 292], "tt": [100, 180], "frequenc": [100, 114, 224, 340, 346, 363, 398, 403, 412, 465], "swamp": 100, "spoken": 100, "espeak": 100, "ttshandler": 100, "femal": [100, 340], "voic": [100, 333, 461], "s150": 100, "ven": 100, "f3": [100, 117], "goodby": [100, 137, 220, 296, 366, 440], "parameteris": [100, 383, 470], "log_if_error": 100, "target_handl": 100, "flush_level": 100, "flushlevel": [100, 266], "write_lin": 100, "decorated_foo": 100, "bufferinghandl": [100, 266], "har": [100, 152, 385, 472, 474], "bufferingsmtphandl": 100, "mailhost": [100, 265, 266], "mailport": 100, "starttl": [100, 245, 266, 285, 332, 338, 465, 472, 473], "login": [100, 170, 220, 226, 245, 283, 285, 290, 307, 332, 336, 356, 392, 472], "nto": [100, 332], "nsubject": 100, "addresse": [100, 266], "102": [100, 183, 238, 258, 340, 466, 472, 478, 479], "eleven": 100, "eleventh": 100, "utcformatt": 100, "console1": 100, "console2": 100, "501": [100, 107, 238, 242, 290, 472], "sat": [100, 147, 180, 338, 340], "revert": [100, 167, 208, 220, 239, 240, 321, 355, 359, 452, 466, 473, 476], "loggingcontext": 100, "old_level": 100, "ev": [100, 338], "logctx": 100, "generalis": 100, "subcommand": [100, 117, 450, 466, 472], "scriptnam": 100, "subpars": [100, 117, 472, 477], "add_subpars": [100, 117, 472, 477], "start_cmd": 100, "add_pars": [100, 117, 472], "stop_cmd": 100, "restart_cmd": 100, "log_level": 100, "plural": [100, 227, 466, 477], "rfind": [100, 275, 341, 465, 472, 473, 475], "pyside2": 100, "pyqt5": 100, "qthandler": 100, "qthread": 100, "qtcore": 100, "qtgui": 100, "qtwidget": 100, "pyqtsign": 100, "pyqtslot": 100, "qobject": 100, "slotfunc": 100, "ctname": 100, "currentthread": [100, 187, 362, 469], "objectnam": 100, "kick": 100, "qthreadnam": 100, "isinterruptionrequest": 100, "1f": [100, 315, 379], "qwidget": 100, "orang": [100, 157, 288, 381, 439], "textedit": 100, "te": 100, "qplaintextedit": 100, "monospac": [100, 244, 361], "qfont": 100, "nosuchfont": 100, "setstylehint": 100, "setfont": 100, "setreadonli": 100, "pb": [100, 267], "qpushbutton": 100, "work_button": 100, "log_button": 100, "clear_button": 100, "update_statu": 100, "abouttoquit": 100, "force_quit": 100, "lai": [100, 212, 443], "qvboxlayout": 100, "addwidget": 100, "setfixeds": 100, "900": [100, 446], "manual_upd": 100, "clear_displai": 100, "start_thread": [100, 359], "seten": 100, "worker_thread": 100, "setobjectnam": 100, "workerthread": 100, "movetothread": 100, "kill_thread": 100, "requestinterrupt": 100, "isrun": 100, "appendhtml": 100, "qapplic": 100, "exec_": 100, "2009": [100, 180, 316, 337, 387, 423, 460, 466, 468], "3164": 100, "hail": 100, "2003": [100, 180, 264, 410, 420, 448, 462, 465], "widespread": [100, 199, 431, 460, 472], "sysloghandler5424": 100, "tz_offset": 100, "msgid": [100, 197, 206], "isoformat": [100, 180, 187, 337, 422, 462, 476, 477], "has_offset": 100, "hr": [100, 340], "hostnam": [100, 107, 123, 133, 139, 148, 155, 181, 206, 220, 239, 245, 256, 266, 280, 285, 290, 302, 310, 332, 334, 338, 391, 392, 416, 446, 459, 462, 466, 471, 472, 473, 474, 477], "gethostnam": [100, 104, 139, 290, 334], "procid": 100, "sdata": 100, "structured_data": 100, "sd": 100, "sdid": 100, "dv": [100, 359], "specir": 100, "12345": [100, 173, 222, 437, 439, 462, 468, 476], "bozz": [100, 265], "fizz": 100, "buzz": 100, "54321": [100, 439], "rab": 100, "zab": 100, "zzif": 100, "loggerwrit": 100, "info_fp": 100, "debug_fp": 100, "merci": [100, 425], "slghtly": 100, "bufferingloggerwrit": 100, "52": [100, 101, 103, 136, 180, 272, 315, 316, 338, 340, 342, 379, 439, 441, 463, 466], "unhelp": [100, 459], "garbl": 100, "unexpectedli": [100, 108, 167, 319, 330, 332, 385, 437, 461, 471, 475], "supposedli": [100, 390], "circumv": [100, 406], "pointless": 100, "pablo": [101, 466, 469, 470, 471, 475, 477, 478, 479], "galindo": [101, 469, 470, 471, 477, 478, 479], "vibrant": 101, "ecosystem": [101, 296], "interpos": 101, "have_perf_trampolin": 101, "1000000": [101, 164, 180, 218, 222, 280, 305, 364, 438, 466, 476], "hertz": [101, 403], "my_script": 101, "91": [101, 340], "08": [101, 180, 206, 242, 264, 338, 363, 422, 479], "_start": 101, "90": [101, 102, 144, 152, 258, 280, 315, 340, 381, 478], "71": [101, 379, 471], "__libc_start_main": 101, "88": [101, 180, 340, 379, 475], "pymain_run_python": 101, "constprop": 101, "_pyrun_anyfileobject": 101, "_pyrun_simplefileobject": 101, "run_mod": 101, "54": [101, 136, 315, 329, 340, 420, 462, 469, 470], "65": [101, 285, 315, 329, 340, 341, 446, 459, 465, 466, 475], "_pyeval_vector": 101, "_pylong_add": 101, "97": [101, 106, 119, 222, 275, 341, 466, 472], "_pyobject_malloc": 101, "58": [101, 155, 315, 340, 342], "89": [101, 144, 183, 223, 334, 340, 438, 446, 447, 468, 472], "86": [101, 170, 218, 340, 342, 379, 381], "43": [101, 157, 170, 180, 220, 338, 341, 364, 438, 472, 478, 479], "62": [101, 183, 235, 237, 379], "77": [101, 144, 183, 379, 381, 472], "activate_stack_trampolin": [101, 349, 471], "deactivate_stack_trampolin": [101, 349, 471], "do_profiled_stuff": 101, "non_profiled_stuff": 101, "fno": [101, 453, 469], "mno": 101, "leaf": [101, 232, 290, 374, 383], "dwarf": [101, 340, 425], "brett": [102, 305, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "cannon": [102, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "2020": [102, 341, 422, 423, 466, 470, 479], "caniusepython3": 102, "tox": 102, "worst": [102, 103, 104, 173, 185, 187, 233, 425, 429, 452, 463, 476, 477], "trove": [102, 462], "oldest": [102, 136, 224, 266, 362, 379, 399, 466, 472, 477], "implic": [102, 247, 280, 296, 391, 406, 427], "cheat": [102, 383], "sheet": [102, 147, 381, 383], "pariti": [102, 469], "conserv": [102, 460, 463], "diff": [102, 109, 140, 187, 190, 385, 460, 463, 466, 472], "2002": [102, 106, 180, 256, 423, 461, 462], "confluenc": 102, "brittl": 102, "pose": [102, 123, 459, 463], "isdecim": [102, 341, 342], "isnumer": [102, 341], "x00": [102, 173, 232, 255, 256, 281, 316, 334, 341, 344, 395], "indexbyt": 102, "inevit": 102, "importlib2": 102, "absolute_import": [102, 110, 433, 464], "print_funct": [102, 109, 110, 433, 465], "werror": [102, 452, 453], "lint": [102, 404, 471], "discov": [102, 104, 111, 180, 193, 202, 241, 359, 385, 412, 460, 461, 462, 466, 472, 474], "amk": [103, 316, 462, 465, 466], "gentler": [103, 316], "regex": [103, 160, 217, 263, 299, 316, 356, 385, 460, 464, 465, 472, 474, 477], "tex": 103, "automata": 103, "akm": 103, "za": [103, 106, 170, 316, 341, 432, 461], "z0": [103, 106, 170, 316, 342, 432], "9_": [103, 106, 316, 432], "dotal": [103, 316], "ct": [103, 104], "caaat": 103, "repetit": [103, 117, 146, 232, 258, 267, 272, 316, 341, 364, 378, 385, 387, 397, 425, 427, 431, 461], "bcd": [103, 258], "abcbd": 103, "abcb": 103, "bc": [103, 147, 157, 244, 258, 341, 459], "quantifi": [103, 258, 311, 316, 470], "brew": 103, "homebrew": 103, "reductionist": 103, "bent": 103, "ignorecas": [103, 316, 342], "bloat": 103, "latex": [103, 465, 479], "stage": [103, 362, 392, 397, 407, 459, 479], "findal": [103, 157, 316, 410, 448, 474], "findit": [103, 276, 316, 461], "tempo": 103, "clarifi": [103, 341, 386, 446, 464, 465, 472, 474], "drummer": 103, "drum": 103, "piper": 103, "lord": 103, "cook": [103, 174, 356], "callable_iter": 103, "fromag": 103, "1998": [103, 108, 315, 423], "multilin": [103, 155, 164, 244, 316, 332, 385, 471, 472, 479], "i\u0307": [103, 316], "0130": [103, 316], "capit": [103, 106, 183, 316, 341, 342, 383, 384, 424, 427, 438, 459, 477, 479], "\u0131": [103, 316], "0131": [103, 316], "dotless": [103, 316], "\u017f": [103, 316], "017f": [103, 316], "212a": [103, 316], "kelvin": [103, 316], "\u017fpam": 103, "french": [103, 106, 363, 475, 477], "\u00e9": 103, "\u00e7": 103, "unreli": [103, 174, 316], "cultur": [103, 105, 227, 263, 316, 449], "charref": 103, "9a": [103, 316], "fa": [103, 316], "crow": 103, "servo": 103, "cro": 103, "ervo": 103, "etern": [103, 136], "recit": 103, "bclass": 103, "declassifi": 103, "subtleti": [103, 180, 240], "collis": [103, 232, 286, 327, 438, 458, 469, 474, 479], "x08class": 103, "x08": [103, 344, 395], "dissect": [103, 254, 460, 461], "subgroup": [103, 188, 210, 316, 470, 472, 478], "822": [103, 106, 197, 199, 227, 239, 332, 363, 461], "agent": [103, 107, 268, 269, 332, 349, 392, 393, 461, 465], "thunderbird": 103, "x11": [103, 366, 373, 392, 400], "20061227": 103, "ababababab": 103, "upward": [103, 174, 293, 296, 381, 386], "parenthesi": [103, 109, 119, 244, 424, 428, 463], "abcd": [103, 106, 157, 187, 258, 462, 465, 469], "backrefer": [103, 316], "spring": [103, 180, 222, 437], "keystrok": [103, 152, 174, 330, 459, 466], "confusingli": [103, 107, 366, 432, 459], "chose": [103, 247, 290, 431, 464], "subexpress": 103, "punctuat": [103, 106, 328, 342, 432, 476], "groupdict": [103, 316], "jane": [103, 105], "internald": [103, 245], "mon": [103, 147, 180, 206, 462], "sec": [103, 363, 364, 475], "zonen": 103, "zoneh": 103, "zonem": 103, "rc": [103, 173, 205, 293, 345, 352, 359, 396, 408], "autoexec": 103, "bat": [103, 293, 316, 359, 396], "cut": [103, 151, 222, 244, 340, 363, 448, 463, 465, 469], "subn": [103, 316, 466, 468, 471, 475], "sweet": [103, 258], "p2": [103, 173, 258, 281, 345, 424, 438, 463, 469, 470, 475], "leftmost": [103, 144, 157, 187, 190, 223, 232, 316, 427, 463, 477, 478], "shoe": 103, "abxd": [103, 316, 477], "carriag": [103, 175, 204, 205, 255, 316, 328, 341, 361, 404, 416, 432, 462, 464], "hexrepl": 103, "65490": 103, "49152": 103, "0xffd2": 103, "0xc000": 103, "bbbb": 103, "deed": 103, "swordfish": 103, "sdeedfish": 103, "bword": 103, "superstit": 103, "insuper": 103, "resist": [103, 232, 329, 460, 466, 473], "temptat": [103, 385, 460], "backtrack": [103, 316], "pain": [103, 263, 459, 464], "dirti": 103, "terribli": 103, "neatli": [103, 166, 466], "pat": [103, 186, 217, 475], "unclear": [103, 471], "jeffrei": [103, 316, 338, 465, 466, 469, 470, 472], "friedl": [103, 316], "reilli": [103, 316, 364, 451, 461, 475], "flavour": [103, 106, 247, 293, 355, 387, 464], "misunderstood": 104, "000": [104, 157, 173, 180, 183, 232, 258, 279, 305, 385, 458, 471, 472, 473], "foot": [104, 316, 340, 448], "hope": [104, 210, 326, 383, 447, 458, 459, 460, 473, 476, 478], "decent": [104, 446], "inet": [104, 334], "endpoint": [104, 123, 130, 157, 209, 239, 334, 381, 472], "switchboard": 104, "town": 104, "berkelei": [104, 181, 467], "wildfir": 104, "unbeliev": 104, "repli": [104, 180, 200, 220, 242, 268, 280, 285, 332, 335, 392, 438], "serversocket": 104, "snmp": 104, "clientsocket": 104, "client_thread": 104, "chat": 104, "recycl": [104, 112, 362], "beast": 104, "peer": [104, 127, 130, 209, 210, 285, 325, 338], "etiquett": 104, "signon": 104, "forev": [104, 127, 136, 306, 325, 460, 461, 462, 463, 473], "eot": [104, 175], "yuck": [104, 447], "shrug": 104, "righter": 104, "mysocket": [104, 259], "mysend": 104, "totals": 104, "msglen": [104, 334], "myrec": 104, "bytes_recd": 104, "2048": [104, 338, 402], "onto": [104, 166, 172, 174, 188, 210, 233, 245, 296, 304, 328, 343, 381, 383, 385, 387, 429, 441, 459, 465, 471], "nasti": [104, 357], "competit": 104, "x86": [104, 173, 297, 344, 453, 458, 465, 470, 477], "amd64": [104, 300, 344, 352], "arm": [104, 475], "risc": 104, "ntohl": [104, 334], "htonl": [104, 334], "ntoh": [104, 334, 469, 477], "hton": [104, 334, 469, 477], "advisori": [104, 268, 425, 452, 459], "riddanc": 104, "neglect": [104, 402], "habit": [104, 227, 268, 438], "indefinit": [104, 147, 174, 180, 242, 258, 262, 266, 268, 330, 356, 466, 470, 474, 475], "dead": [104, 304, 399, 437, 438, 453, 462, 467, 472], "screw": 104, "setblock": [104, 290, 326, 334, 338], "o_nonblock": [104, 290, 473, 475], "indistinguish": [104, 280, 305], "o_ndelai": [104, 212, 290], "tcp_nodelai": [104, 123, 466, 476, 477], "nut": 104, "drive": [104, 228, 233, 244, 289, 290, 291, 293, 355, 359, 366, 385, 419, 423, 458, 471, 473, 474, 475], "crazi": 104, "suck": 104, "brain": [104, 463], "cake": 104, "ready_to_read": 104, "ready_to_writ": 104, "in_error": 104, "potential_read": 104, "potential_writ": 104, "potential_err": 104, "sensibl": [104, 107, 117, 123, 164, 180, 232, 252, 289, 362, 386, 387, 391, 427, 463, 466, 476, 477], "healthi": 104, "outbound": 104, "andrew": [105, 106, 174, 423, 459, 461, 462, 463, 464, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "dalk": [105, 423, 461, 462, 464], "student_tupl": 105, "student_object": 105, "secondari": [105, 123, 157, 244, 258, 305, 349, 435, 445, 446, 447, 466, 467, 469], "multisort": 105, "timsort": [105, 472], "dsu": 105, "lexicograph": [105, 258, 341, 427, 439, 464], "schwartzian": 105, "scale": [105, 129, 315, 325, 340, 373, 383, 459, 462, 465, 476, 477], "lighter": [105, 385], "heavier": 105, "cmp": [105, 213, 222, 341, 459, 460, 463, 467], "strcoll": [105, 223, 263, 472], "cmp_to_kei": [105, 222, 223, 341, 466, 472], "interestingli": [105, 316, 441], "standard_wai": 105, "double_revers": 105, "newgrad": 105, "japanes": [106, 155, 263, 463, 477], "hebrew": [106, 155], "russian": [106, 155], "emoji": [106, 472, 478], "\u00e8": 106, "\u00ed": 106, "roman": [106, 369, 384, 462], "\u2170": 106, "0x10ffff": [106, 222, 349, 473], "265e": 106, "0x265e": 106, "0061": 106, "0062": 106, "0063": 106, "007b": 106, "2167": 106, "\u2177": 106, "2168": 106, "\u2178": 106, "nine": [106, 183, 340, 352, 474], "265f": 106, "pawn": 106, "1f600": 106, "grin": 106, "1f609": 106, "wink": 106, "paper": [106, 117, 151, 315, 334, 381, 385, 462], "glyph": [106, 205, 244], "diagon": [106, 438, 469], "horizont": [106, 174, 175, 372, 373, 381, 432], "114": [106, 119, 222], "111": [106, 222, 258, 340, 342, 458], "0x50": 106, "79": [106, 379, 438], "74": [106, 340, 449, 478, 479], "68": [106, 183, 222, 315, 363, 410, 473, 478], "6f": 106, "6e": [106, 218], "0x00": [106, 175, 188], "ram": [106, 183, 464], "gigabyt": [106, 406], "intoler": 106, "strcpy": 106, "resynchron": [106, 473], "consortium": [106, 407], "chronologi": 106, "computerphil": 106, "youtub": [106, 258], "channel": [106, 114, 130, 138, 173, 198, 209, 220, 265, 280, 292, 333, 334, 338, 346, 398, 461, 473], "tom": [106, 376, 461, 464, 469, 472, 474], "scott": [106, 462, 464, 478], "jukka": [106, 475], "korpela": 106, "joel": [106, 476], "spolski": 106, "rudiment": 106, "fichier": 106, "trouv\u00e9": 106, "r\u00e9pertoir": 106, "greek": [106, 155], "u0394": 106, "u00000394": 106, "xnn": 106, "x80abc": 106, "ufffdabc": 106, "iso_8859_1": 106, "57344": 106, "ue000": 106, "xmlcharrefreplac": [106, 155, 222, 255, 341, 462], "unnnn": 106, "namereplac": [106, 155, 222, 255, 475], "40960": 106, "1972": [106, 337, 462, 463, 464], "xea": 106, "x80": [106, 297, 461], "x80abcd": 106, "xde": 106, "xb4": 106, "ua000": 106, "ua000abcd": 106, "u07b4": 106, "yi": 106, "syllabl": 106, "IT": 106, "comfort": [106, 190], "xac": 106, "u1234": [106, 155, 259], "u20ac": [106, 467, 475], "u00008000": 106, "172": [106, 473], "4660": 106, "8364": [106, 222], "32768": [106, 217, 338, 344, 421], "dose": 106, "annoy": [106, 461, 462, 467, 473, 478], "accent": [106, 328], "abcd\u00e9": 106, "inspir": [106, 164, 197, 258, 259, 385, 423, 424, 459, 460, 462, 465, 469, 470, 472, 473], "fifth": [106, 174, 244, 341, 363], "bidirect": [106, 123, 130, 159, 280, 341, 343, 384, 459], "233": [106, 223, 438, 446, 447], "0x0bf2": 106, "3972": [106, 466], "6000": [106, 232, 280], "13231": 106, "00e9": 106, "WITH": [106, 155, 335, 384, 423, 427], "0bf2": 106, "tamil": 106, "0f84": 106, "mn": [106, 432], "tibetan": 106, "halanta": 106, "1770": 106, "lo": [106, 144, 341, 383, 432, 468], "tagbanwa": 106, "sa": [106, 147, 180, 334, 340], "33af": 106, "rad": [106, 462], "subcategori": 106, "nonspac": [106, 432], "\u00ea": 106, "00ea": 106, "0065": 106, "0302": 106, "circumflex": [106, 374], "casefold": [106, 117, 140, 157, 258, 341, 473, 475, 478], "german": [106, 155, 263, 341, 381, 474], "\u00df": [106, 155, 341, 473], "00df": 106, "street": [106, 117, 316], "g\u00fcrzenichstra\u00df": 106, "g\u00fcrzenichstrass": 106, "inequ": [106, 183, 192, 199, 385, 427, 465, 472], "compare_str": 106, "nfd": [106, 384], "single_char": 106, "multiple_char": 106, "nfc": [106, 384, 478], "nfkc": [106, 343, 384, 391, 432], "nfkd": [106, 384], "caseless": [106, 341, 473], "compare_caseless": 106, "nd": [106, 222, 244, 252, 316, 341, 432], "57": [106, 462, 473, 478, 479], "thai": [106, 155, 423], "arab": [106, 155, 183, 341, 459, 466, 472], "u0e55": 106, "u0e57": 106, "pragmat": 106, "ned": [106, 466, 472, 474, 479], "batcheld": 106, "marc": [106, 227, 337, 459, 460, 461, 462, 464, 473], "andr\u00e9": [106, 227, 337, 459, 460, 461, 462, 464], "lemburg": [106, 227, 337, 459, 460, 461, 462, 464], "slide": [106, 408], "europython": 106, "transmiss": [106, 175, 205, 266, 297, 404], "gib": [106, 267, 303, 355, 359, 419, 459, 462, 464], "u4500": 106, "blah": [106, 267, 289], "autodetect": [106, 301, 355, 392, 460, 464], "converg": [106, 340], "u4500abc": 106, "xe4": 106, "x94": [106, 232], "occas": [106, 107, 294, 310, 330, 344, 359, 441, 464, 474], "bytestream": 106, "new_f": 106, "getdecod": [106, 155], "getread": [106, 155], "getwrit": [106, 155], "beazlei": [106, 461, 472], "gut": [106, 148], "benjamin": [106, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "peterson": [106, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478], "alexand": [106, 465, 466, 468, 471, 472, 475, 476, 477], "belopolski": [106, 465, 466, 468, 471, 472, 475, 476, 477], "brandl": [106, 464, 465, 466, 468, 472, 473, 475, 476], "ezio": [106, 466, 472, 473, 474, 475], "melotti": [106, 466, 472, 473, 474, 475], "\u00e9ric": [106, 470, 473, 474, 478], "araujo": [106, 470, 473, 474, 478], "nichola": [106, 462, 469], "bastin": [106, 463], "mariu": [106, 459], "gedmina": 106, "kent": [106, 338, 359, 385, 460, 464, 465], "johnson": [106, 464, 465], "ken": [106, 366, 469, 470, 471, 476, 477, 478, 479], "krugler": 106, "martin": [106, 227, 285, 459, 461, 462, 463, 464, 465, 466, 472, 473, 474, 475, 476, 478], "von": [106, 227, 315, 425, 459, 461, 462, 463, 464, 465, 466, 472, 473, 474, 478], "l\u00f6wi": [106, 227, 285, 459, 461, 462, 463, 464, 465, 466, 472, 473, 474, 478], "terri": [106, 439, 469, 470, 475, 476, 477, 478, 479], "reedi": [106, 462, 469, 470, 475, 476, 477, 478, 479], "serhii": [106, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "storchaka": [106, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "eryk": [106, 470], "chad": [106, 462, 464, 465], "whitacr": 106, "graham": [106, 439, 465, 470], "wideman": 106, "michael": [107, 438, 439, 460, 461, 462, 463, 464, 465, 466, 472, 473, 474, 475, 478, 479], "foord": [107, 466, 472], "2616": [107, 239, 390, 392, 404, 472], "supplementari": [107, 334], "namedtemporaryfil": [107, 197, 357, 465, 471], "tmp_file": 107, "the_pag": 107, "transmit": [107, 123, 130, 138, 239, 285, 332, 334, 358, 404, 406, 416, 463, 478], "someserv": 107, "northampton": 107, "upload": [107, 148, 460, 464, 466, 475, 477, 479], "hundredweight": 107, "tin": [107, 268], "door": [107, 117, 339], "somebodi": 107, "url_valu": 107, "full_url": [107, 392, 474], "dislik": [107, 386], "user_ag": 107, "win64": [107, 459, 475], "x64": [107, 465], "pretend_serv": 107, "getaddrinfo": [107, 123, 127, 139, 334, 423, 475, 476, 477], "404": [107, 148, 238, 239, 242, 259, 392, 404, 416, 417, 438, 469, 475], "403": [107, 238, 242, 438, 469], "401": [107, 238, 392, 438, 469, 475], "299": [107, 220, 238], "599": [107, 220, 238, 285], "basehttprequesthandl": [107, 239, 242, 390, 404, 472, 473], "shortmessag": [107, 242], "longmessag": [107, 242, 385, 466], "101": [107, 117, 238, 258, 315, 340, 342, 379, 386, 441, 458, 466, 472], "201": [107, 238, 258, 366, 459], "202": [107, 180, 232, 238], "203": [107, 238], "204": [107, 238, 242, 381], "206": [107, 238], "304": [107, 238, 242, 477], "unauthor": [107, 238], "402": [107, 238, 379], "payment": [107, 258], "charg": [107, 247, 423, 449], "406": [107, 238], "407": [107, 238], "408": [107, 238], "410": [107, 238], "precondit": [107, 338, 461, 472], "413": [107, 238], "415": [107, 238], "media": [107, 150, 278, 290, 316, 423], "416": [107, 238, 379], "417": [107, 238, 242], "502": [107, 238, 463], "503": [107, 238], "504": [107, 238, 341], "respond": [107, 220, 239, 242, 244, 266, 310, 334, 338, 349, 366, 386, 404, 416, 417, 466], "fish": [107, 296, 386, 387, 396, 450, 474], "doctyp": [107, 237, 239, 311, 392, 407, 410, 472, 478], "dtd": [107, 237, 311, 392, 406, 411, 412, 413, 478], "w3": [107, 237, 311, 392, 408, 410, 423], "tr": [107, 174, 237, 298, 311, 392, 408, 410, 423], "xhtml1": [107, 392], "someurl": 107, "lift": [107, 350, 381, 471, 476, 477, 478], "add_handl": [107, 392], "some_handler_inst": 107, "build_open": [107, 240, 392], "install_open": [107, 392], "realm": [107, 205, 392], "cpanel": 107, "httppasswordmgrwithdefaultrealm": [107, 392], "add_password": [107, 392], "password_mgr": [107, 392], "knew": [107, 286, 467], "top_level_url": 107, "a_url": 107, "http_proxi": [107, 392], "httpdefaulterrorhandl": [107, 392], "8080": [107, 239, 240, 334, 392, 416], "userinfo": [107, 392], "joe": [107, 148, 231, 381, 392, 475, 478], "proxy_support": 107, "request_method": [107, 392, 404], "getproxi": [107, 392], "setdefaulttimeout": [107, 334], "voidspac": [107, 466], "uk": [107, 163, 240, 341, 363, 466], "lee": [107, 463, 464, 466, 470, 472, 477], "snif": 107, "msie": [107, 241], "sv1": 107, "clr": 107, "4322": 107, "aspn": [107, 272], "collabor": [108, 462], "institut": [108, 423], "semi": [108, 280, 289, 374], "virtualenv": [108, 396, 458, 473], "predecessor": [108, 229, 462, 472], "evolut": [108, 459, 460], "somepackag": 108, "wheel": [108, 187, 248, 315, 453, 469, 470, 471, 478, 479], "diminish": 108, "greet": [109, 302, 332, 337, 383, 475], "raw_input": [109, 154, 467], "has_kei": [109, 174, 459, 460, 461, 462, 467], "beneath": [109, 370, 410], "py3": [109, 450, 468, 472], "mycod": 109, "failunlessequ": [109, 470, 471], "assertequ": [109, 359, 385, 386, 387, 448, 466, 470, 471, 472, 474, 478], "failifequ": [109, 470, 471], "assertnotequ": [109, 385, 470, 471, 472], "failunless": [109, 470, 471], "asserttru": [109, 385, 466, 470, 471, 472], "assert_": [109, 470, 471, 472], "failif": [109, 470, 471], "assertfals": [109, 385, 466, 470, 471], "failunlessrais": [109, 470, 471], "cal": [109, 147, 392, 393], "assertrais": [109, 385, 448, 466, 468, 470, 471, 473], "failunlessalmostequ": [109, 470, 471], "assertalmostequ": [109, 385, 466, 470, 471, 472], "failifalmostequ": [109, 470, 471], "assertnotalmostequ": [109, 385, 466, 470, 471, 472], "basestr": [109, 462, 467, 474], "iteritem": [109, 268, 461, 462, 463, 467], "iterkei": [109, 268, 461, 462, 463, 465, 467], "itervalu": [109, 268, 461, 462, 463, 467], "viewitem": [109, 466], "viewkei": [109, 466], "viewvalu": [109, 466], "execfil": [109, 462, 463, 467], "exitfunc": [109, 459, 463, 467], "funcattr": 109, "my_funct": [109, 438], "func_closur": [109, 467], "__closure__": [109, 425, 467], "new_featur": 109, "getcwdu": [109, 462], "getcwd": [109, 290, 291, 293, 359, 404, 448, 477], "someclass": [109, 296, 383, 386, 387, 459], "some_iter": 109, "imports2": 109, "itertools_import": 109, "ifilt": [109, 462], "izip": [109, 463], "ifilterfals": 109, "__metaclass__": [109, 461, 465, 467], "methodattr": 109, "im_func": [109, 465], "__nonzero__": [109, 467], "numliter": 109, "iscal": [109, 466, 467], "sequenceinclud": [109, 466, 467], "issequencetyp": 109, "ismappingtyp": 109, "isnumbertyp": 109, "irepeat": 109, "imul": [109, 288], "with_traceback": [109, 210, 433], "maxint": [109, 467], "backtick": [109, 143, 394, 467, 477], "set_liter": 109, "standarderror": [109, 465, 467], "sys_exc": 109, "exc_valu": [109, 337, 349, 359, 362, 378, 425, 466, 467, 470], "exc_typ": [109, 166, 330, 341, 349, 359, 362, 378, 387, 425, 467, 470], "exc_traceback": [109, 349, 359, 362, 378, 467, 470], "tuple_param": 109, "urllib2": [109, 392, 463, 465, 466, 467], "ws_comma": 109, "xrang": [109, 460, 461, 462, 463, 467], "xreadlin": [109, 460, 462, 463], "peg": [109, 428, 469, 470, 471, 479], "617": [109, 428, 469, 470, 479], "parsabl": [109, 473, 479], "libcst": [109, 119, 479], "parso": [109, 119, 479], "nested_scop": [110, 433, 460, 461], "0b1": 110, "0a1": 110, "0a2": 110, "with_stat": [110, 433, 464, 465], "unicode_liter": [110, 433, 465], "generator_stop": [110, 210, 433, 475], "tbd": 110, "featurenam": [110, 413], "optionalreleas": 110, "mandatoryreleas": 110, "compilerflag": 110, "0a3": 110, "getoptionalreleas": 110, "getmandatoryreleas": 110, "predict": [110, 138, 222, 255, 340, 349, 410, 425, 452, 458, 472, 479], "compiler_flag": [110, 222], "council": [110, 470], "649": [110, 426], "helloworld": [111, 432], "tim": [111, 342, 364, 458, 459, 460, 461, 462, 463, 464, 466, 470, 471, 474, 475, 476, 479], "beauti": [111, 187], "phrase": [111, 238, 239, 245, 269, 289, 392, 427, 431, 432, 462, 465, 469, 473, 475], "proactiv": 111, "exemplifi": [111, 265, 438], "hypothet": [111, 289, 334, 459], "bandclass": 111, "teacher": [111, 381], "search_stud": 111, "student_nam": 111, "fenc": 111, "did_user_define_their_nam": 111, "my_nam": [111, 386], "print_user_nam": 111, "dinsdal": 111, "uncom": [111, 197, 244, 461, 471], "jabberwocki": 111, "light": [112, 159, 173, 174, 465, 466, 468], "weight": [112, 157, 173, 199, 315, 340, 342, 369, 385, 476], "locktyp": 112, "start_new_thread": [112, 139], "interrupt_main": [112, 469], "raise_sign": [112, 330], "allocate_lock": 112, "unlock": [112, 135, 212, 268, 279, 280, 302, 359, 362, 425, 464], "get_id": [112, 330, 348, 362, 363, 473], "get_native_id": [112, 362, 478], "netbsd": [112, 290, 300, 334, 362, 363, 470, 477], "dragonflybsd": [112, 334, 362], "stack_siz": [112, 362, 464], "768": [112, 362], "timeout_max": [112, 362], "a_lock": 112, "surviv": [112, 173, 224, 399], "abcmeta": [113, 425, 465, 472, 473, 474], "myabc": 113, "get_cache_token": [113, 474], "get_iter": 113, "myiter": [113, 383], "update_abstractmethod": 113, "my_abstract_method": 113, "my_abstract_classmethod": 113, "my_abstract_staticmethod": 113, "my_abstract_properti": 113, "_get_x": 113, "_set_x": 113, "__isabstractmethod__": [113, 473], "_fget": 113, "_fset": 113, "_fdel": 113, "abstractclassmethod": [113, 472, 473], "abstractstaticmethod": [113, 472, 473], "abstractproperti": [113, 465, 473], "594": [114, 138, 148, 149, 150, 170, 246, 269, 278, 284, 285, 292, 298, 333, 336, 346, 356, 394, 405, 470, 471], "mono": [114, 138, 292, 346, 398], "stereo": [114, 138, 292, 346, 398, 447], "quadro": 114, "nchannel": [114, 138, 292, 333, 346, 398], "samples": 114, "framer": [114, 333, 346, 398], "cd": [114, 117, 187, 258, 292, 385, 414, 465], "44": [114, 157, 183, 281, 315, 325, 384, 469, 473, 478, 479], "44100": [114, 292], "176": 114, "seekabl": [114, 146, 255, 346, 398, 419, 465], "ahead": [114, 258, 356, 363, 400, 407, 428, 447, 463], "writeframesraw": [114, 346, 398, 474], "setnfram": [114, 346, 398], "getnchannel": [114, 346, 398], "getsampwidth": [114, 346, 398], "getframer": [114, 346, 398], "getnfram": [114, 346, 398], "getcomptyp": [114, 346, 398], "getcompnam": [114, 346, 398], "getparam": [114, 346, 398, 474], "sampwidth": [114, 333, 346, 398], "nframe": [114, 333, 346, 379, 398, 452], "comptyp": [114, 346, 398], "compnam": [114, 346, 398], "getmark": [114, 346, 398], "readfram": [114, 346, 398], "uncompress": [114, 146, 231, 267, 329, 355, 398, 418, 419, 421, 469, 472], "rewind": [114, 233, 255, 346, 398], "setpo": [114, 346, 381, 398], "writefram": [114, 346, 398, 474], "setnchannel": [114, 346, 398], "setsampwidth": [114, 346, 398, 474], "setframer": [114, 346, 398], "setcomptyp": [114, 346, 398], "ulaw": [114, 333, 346], "alaw": [114, 346], "g722": 114, "setparam": [114, 346, 398], "setmark": 114, "programnam": 117, "store_const": [117, 289], "append_const": [117, 289], "walk": [117, 119, 139, 193, 197, 201, 202, 204, 289, 290, 293, 345, 366, 378, 405, 461, 465, 467, 471, 473, 475], "helpformatt": [117, 289], "myprogram": 117, "subdir": [117, 213, 268, 359], "print_help": [117, 289], "parent_pars": 117, "foo_pars": 117, "bar_pars": 117, "yyi": [117, 429], "rawdescriptionhelpformatt": 117, "rawtexthelpformatt": 117, "metavartypehelpformatt": 117, "weird": 117, "dedent": [117, 244, 361, 374, 375, 424, 428, 432], "nbar": 117, "convert_arg_line_to_arg": 117, "getpreferredencod": [117, 255, 263, 290, 345, 470, 471, 477], "set_default": [117, 289], "foonlei": 117, "store_fals": [117, 289], "foon": 117, "argumenterror": [117, 173], "_storeact": 117, "option_str": 117, "f1": [117, 187, 213, 265, 280, 341, 424, 437], "f2": [117, 187, 213, 280, 341, 424], "f4": [117, 461], "booleanoptionalact": [117, 471], "format_usag": 117, "fooaction": 117, "yy": 117, "infil": [117, 119, 137, 188, 259, 298, 328, 377, 449, 468, 472], "_io": [117, 185, 472, 476], "argumenttypeerror": 117, "distanc": [117, 151, 152, 267, 272, 340, 366, 369, 381, 470, 478], "code_point": 117, "source_fil": 117, "dest_fil": 117, "datapath": 117, "short_titl": 117, "tale": 117, "citi": [117, 338, 393, 423], "downstream": [117, 422, 470], "jsondecodeerror": [117, 259, 475], "scissor": 117, "frobbl": 117, "infer": [117, 158, 190, 222, 223, 255, 265, 280, 299, 363, 378, 383, 449, 470, 476], "foo_bar": [117, 289, 387], "xyzz": 117, "badger": 117, "inher": [117, 118, 362, 396, 410], "cautiou": [117, 259, 268, 391], "bacon": [117, 157, 187, 247, 276, 341, 378, 392, 425], "bac": 117, "mmm": [117, 245], "ba": [117, 252, 258, 419, 469, 475], "parser_class": 117, "svn": [117, 160, 352, 391, 462, 464, 465, 466, 472], "checkout": [117, 458, 466], "cmd1": 117, "cmd2": 117, "parser_a": 117, "parser_b": 117, "parser_foo": 117, "parser_bar": 117, "xyzyx": 117, "subparser_nam": 117, "subparser1": 117, "subparser2": 117, "dat": [117, 181, 458], "add_argument_group": 117, "group1": [117, 316, 440], "group2": [117, 440], "exclusive_group": 117, "736": 117, "get_default": 117, "print_usag": [117, 289], "format_help": 117, "parse_known_arg": 117, "arg_lin": 117, "myargumentpars": 117, "errorcatchingargumentpars": 117, "parse_intermixed_arg": [117, 477], "parse_known_intermixed_arg": 117, "unpars": [117, 119, 196, 248, 311, 412, 479], "doit": 117, "monkei": [117, 383, 386, 387, 471], "optionpars": [117, 289, 462, 464], "add_opt": [117, 289, 462], "disable_interspersed_arg": [117, 289], "callback_": 117, "optionerror": [117, 289], "optionvalueerror": [117, 289], "compactli": [118, 436, 449, 462], "typecod": [118, 139, 280, 382, 449, 467], "frombyt": [118, 334, 472, 479], "fromunicod": 118, "buffer_info": 118, "byteswap": [118, 138, 474], "fromfil": [118, 187, 467], "fromstr": [118, 410, 472, 479], "unicodestr": 118, "enc": [118, 338], "tobyt": [118, 341, 466, 472, 479], "tofil": [118, 187, 467], "tostr": [118, 410, 466, 472, 474, 479], "tolist": [118, 341, 461, 466, 472], "u2641": 118, "asdl": [119, 464, 469, 479], "stmt": [119, 337, 364, 465], "type_ignor": [119, 374], "argtyp": [119, 173], "functiondef": 119, "decorator_list": 119, "type_com": [119, 374, 428, 478], "type_param": [119, 383, 424, 428, 433], "asyncfunctiondef": 119, "classdef": [119, 424], "augassign": [119, 428], "annassign": 119, "orels": [119, 465], "asyncfor": 119, "withitem": 119, "asyncwith": 119, "match_cas": 119, "excepthandl": 119, "finalbodi": 119, "trystar": 119, "importfrom": 119, "end_lineno": [119, 188, 210, 378, 428, 469, 478], "end_col_offset": [119, 188, 428, 478], "boolop": 119, "namedexpr": 119, "binop": [119, 465], "unaryop": 119, "ifexp": 119, "elt": 119, "setcomp": [119, 428], "dictcomp": [119, 428], "generatorexp": 119, "yieldfrom": 119, "cmpop": 119, "formattedvalu": 119, "joinedstr": 119, "expr_context": 119, "matmult": [119, 428], "lshift": [119, 288, 428], "rshift": [119, 288, 428], "bitor": [119, 428], "bitxor": [119, 428], "bitand": [119, 428], "uadd": [119, 428], "usub": [119, 428], "noteq": [119, 428], "lte": [119, 428], "gte": [119, 428], "isnot": [119, 428], "notin": [119, 428], "ifs": 119, "is_async": [119, 309], "posonlyarg": 119, "vararg": [119, 252], "kwonlyarg": [119, 252], "kw_default": 119, "asnam": 119, "context_expr": 119, "optional_var": 119, "matchvalu": 119, "matchsingleton": 119, "matchsequ": 119, "matchmap": 119, "matchclass": 119, "kwd_attr": 119, "kwd_pattern": 119, "matchstar": 119, "matcha": 119, "matchor": 119, "typeignor": 119, "typevar": [119, 188, 341, 348, 382, 383, 424, 470, 471], "paramspec": [119, 188, 341, 383, 424, 428, 469, 471], "typevartupl": [119, 188, 341, 383, 424, 428, 470, 471], "_ast": [119, 464, 472], "_field": [119, 157, 383, 465, 466], "source_lin": 119, "nameconst": [119, 471, 478], "extslic": [119, 479], "fantast": 119, "snake": [119, 157], "func_typ": [119, 428, 478], "115": [119, 258, 342, 379], "sin": [119, 151, 183, 272, 425, 462], "collaps": [119, 193, 256, 291, 293, 361, 474], "soc": 119, "otherexcept": [119, 210], "subpattern": [119, 424, 438, 469], "overal": [119, 172, 180, 191, 224, 233, 265, 281, 289, 305, 316, 342, 344, 364, 379, 425, 441, 466, 470, 474, 475], "point2d": [119, 383], "point3d": [119, 157, 383], "outermost": [119, 252, 341, 362, 437], "decorator1": 119, "decorator2": 119, "3115": [119, 382, 424, 425, 467, 473], "base1": [119, 437], "base2": [119, 437], "other_func": 119, "feature_vers": [119, 374, 478], "pycf_type_com": 119, "misplac": 119, "ast_obj": 119, "literal_ev": [119, 222, 465, 472, 477], "node_or_str": 119, "oneself": 119, "denial": [119, 222, 259, 341, 355, 406, 425, 452, 470], "get_docstr": 119, "cleandoc": [119, 252], "get_source_seg": [119, 478], "fix_missing_loc": 119, "increment_lineno": 119, "copy_loc": 119, "new_nod": 119, "old_nod": 119, "iter_field": 119, "fieldnam": [119, 157, 172, 465, 468], "iter_child_nod": 119, "nodevisitor": [119, 465, 478], "generic_visit": 119, "visit_const": [119, 478], "nodetransform": [119, 465], "visit_num": [119, 478], "visit_str": [119, 478], "visit_byt": [119, 478], "visit_nameconst": [119, 478], "visit_ellipsi": [119, 478], "rewritenam": 119, "visit_nam": 119, "new_tre": 119, "yourtransform": 119, "annotate_field": 119, "include_attribut": 119, "pycf_allow_top_level_await": [119, 222, 478, 479], "asttoken": 119, "leoast": 119, "codemod": 119, "recoveri": [119, 198, 245, 323, 392, 428], "bridg": [120, 126, 366, 472], "emscripten": [120, 148, 160, 163, 170, 207, 212, 220, 226, 230, 239, 242, 245, 254, 275, 280, 284, 285, 290, 302, 307, 319, 325, 326, 330, 332, 334, 335, 336, 338, 345, 349, 353, 356, 362, 392, 396, 400, 416, 417, 422, 453, 470], "wasi": [120, 148, 160, 163, 170, 207, 209, 210, 212, 220, 226, 230, 239, 242, 245, 254, 275, 280, 284, 285, 290, 302, 307, 319, 325, 326, 330, 332, 334, 335, 336, 338, 345, 349, 353, 356, 362, 392, 396, 400, 416, 417, 422, 453, 470], "wasm32": [120, 148, 160, 163, 170, 207, 220, 226, 239, 242, 245, 254, 275, 280, 284, 285, 290, 302, 325, 326, 330, 332, 334, 335, 336, 338, 345, 349, 356, 362, 392, 396, 400, 416, 417, 422, 453, 470], "taskgroup": [121, 136, 470], "create_task": [121, 122, 123, 125, 126, 127, 131, 135, 136, 470, 475, 477, 478], "current_task": [121, 125, 136, 471, 477, 479], "all_task": [121, 125, 136, 477, 479], "wait_for": [121, 131, 134, 135, 136, 280, 362, 470, 478, 479], "to_thread": [121, 136, 479], "run_coroutine_threadsaf": [121, 122, 136, 469, 475, 476], "as_complet": [121, 126, 136, 163, 471, 478], "amongst": [121, 271, 338, 396], "fifo": [121, 131, 157, 258, 280, 290, 293, 313, 326, 339, 355, 476, 477], "priorityqueu": [121, 131, 313, 341, 465], "lifoqueu": [121, 131, 313, 341, 465], "create_subprocess_exec": [121, 123, 129, 134, 345, 478], "create_subprocess_shel": [121, 123, 134, 478], "open_connect": [121, 123, 130, 133, 475, 477], "open_unix_connect": [121, 133], "start_serv": [121, 123, 130, 133, 167, 362, 477], "start_unix_serv": [121, 123, 133], "cancellederror": [121, 124, 126, 132, 135, 136, 163, 478], "brokenbarriererror": [121, 135, 362, 470, 472], "trap": [122, 166, 183, 364, 461, 463, 473], "pythonasynciodebug": [122, 123, 185, 452], "set_debug": [122, 123, 127, 224, 475], "threadsaf": [122, 223, 258, 264, 315], "call_at": [122, 123, 127, 477], "slow_callback_dur": [122, 123], "call_soon_threadsaf": [122, 123, 127, 477], "fut": [122, 126], "coro_func": 122, "run_in_executor": [122, 123, 127, 136, 479], "coro": [122, 123, 125, 132, 136, 475], "set_except": [122, 126, 136, 139, 163, 173, 476], "321": [122, 183], "source_traceback": 122, "base_ev": [123, 349, 427], "prefac": [123, 130, 446], "get_running_loop": [123, 126, 127, 130, 133, 136, 477], "get_event_loop": [123, 127, 129, 471, 475, 476, 477], "get_event_loop_polici": [123, 127, 129], "set_event_loop": [123, 127, 128, 129, 132, 478], "new_event_loop": [123, 127, 129, 132, 478], "timerhandl": 123, "create_serv": [123, 127, 130, 133, 334, 475, 476, 477, 478], "selectoreventloop": [123, 128, 129, 134, 470], "proactoreventloop": [123, 128, 129, 134, 470, 478], "showcas": [123, 130], "run_until_complet": [123, 127, 475, 476, 478], "run_forev": [123, 127], "is_run": [123, 127], "is_clos": [123, 127, 130, 133, 475, 476, 477], "idempot": [123, 130, 164, 223, 471, 477], "irrevers": [123, 323], "shutdown_asyncgen": [123, 127, 349, 427, 476], "aclos": [123, 158, 166, 427, 469, 479], "shutdown_default_executor": [123, 132, 479], "567": [123, 126, 167, 183, 342, 449, 468, 477], "monoton": [123, 128, 131, 166, 187, 322, 340, 363, 437, 462, 470, 473, 475], "create_futur": [123, 125, 126, 127, 130, 475, 476], "set_task_factori": [123, 127, 136, 475], "get_task_factori": [123, 127, 475], "create_connect": [123, 125, 127, 130, 133, 334, 338, 465, 466, 470, 472, 475, 477, 478], "protocol_factori": [123, 130], "proto": [123, 133, 297, 334, 383, 392], "local_addr": [123, 130, 133], "server_hostnam": [123, 133, 338, 472, 477], "ssl_handshake_timeout": [123, 133, 477], "ssl_shutdown_timeout": [123, 133], "happy_eyeballs_delai": [123, 133, 478], "interleav": [123, 133, 190, 280, 466, 472, 477, 478], "all_error": [123, 220, 334, 470], "af_inet6": [123, 334], "chronolog": [123, 476], "synopsi": [123, 310, 338], "connection_mad": [123, 127, 130], "sslcontext": [123, 130, 133, 220, 239, 245, 266, 285, 302, 332, 338, 392, 416, 466, 469, 471, 472, 473, 474, 475, 476, 477], "create_default_context": [123, 338, 392, 466, 474], "eyebal": [123, 478], "8305": 123, "250": [123, 220, 305, 332, 337, 381, 466], "local_host": 123, "local_port": 123, "handshak": [123, 133, 338, 469, 474, 475, 476, 477, 478], "60": [123, 133, 144, 152, 163, 180, 183, 193, 258, 304, 315, 338, 340, 363, 378, 379, 381, 395, 432, 462, 464, 470, 472, 476, 478], "dual": [123, 334, 338, 423, 432], "undesir": [123, 338, 460, 464, 470], "datatrack": 123, "ietf": [123, 232, 256, 338, 344], "rfc6555": 123, "create_datagram_endpoint": [123, 127, 130, 470, 476, 477, 478, 479], "remote_addr": [123, 130], "reuse_port": [123, 133, 334], "allow_broadcast": 123, "af_unix": [123, 128, 280, 334, 335], "sock_dgram": [123, 266, 334, 335, 466], "remote_host": 123, "remote_port": 123, "so_reuseport": [123, 334, 359], "broadcast": [123, 256, 334], "preexist": 123, "reuse_address": [123, 133, 470, 476, 477, 478, 479], "so_reuseaddr": [123, 334, 359, 470, 476, 477, 478, 479], "uid": [123, 139, 148, 242, 245, 290, 293, 301, 302, 307, 319, 329, 339, 355, 465, 466, 473, 475, 478], "incom": [123, 130, 210, 233, 242, 259, 280, 335, 338, 409, 471, 472], "packet": [123, 130, 138, 256, 266, 334, 335, 416, 466], "create_unix_connect": [123, 127, 128, 130, 133], "af_unspec": [123, 133, 334], "ai_pass": [123, 133, 334], "backlog": [123, 133, 280, 334, 475], "time_wait": [123, 334], "expir": [123, 136, 209, 240, 241, 280, 322, 326, 330, 332, 334, 336, 338, 345, 362, 363, 392, 473], "serve_forev": [123, 130, 133, 167, 242, 280, 330, 335, 404, 416, 417, 464, 465, 473, 477], "create_unix_serv": [123, 127, 128, 130, 133, 477], "connect_accepted_socket": [123, 127, 130, 469, 476], "sendfil": [123, 124, 127, 130, 290, 329, 334, 338, 404, 473, 475, 477], "sendfilenotavailableerror": [123, 124], "syscal": [123, 124, 210, 290, 319, 329, 469, 475, 476, 478], "start_tl": [123, 127, 133, 470, 477], "server_sid": [123, 338], "coder": [123, 138], "sporad": [123, 290], "add_read": [123, 127, 128, 130, 133], "remove_read": [123, 127], "add_writ": [123, 127, 128], "remove_writ": [123, 127], "sock_recv": [123, 127, 477], "nbyte": [123, 130, 139, 279, 281, 311, 323, 334, 341], "sock_recv_into": [123, 127, 477], "recv_into": [123, 334, 338, 464, 466], "sock_recvfrom": [123, 127, 470], "recvfrom": [123, 334, 366, 475], "sock_recvfrom_into": [123, 127, 470], "recvfrom_into": [123, 334, 464, 466], "sock_sendal": [123, 127, 477], "sendal": [123, 334, 335, 338, 475], "sock_sendto": [123, 127, 470], "sendto": [123, 127, 130, 139, 334, 335, 475], "sock_connect": [123, 127, 475], "inet_pton": [123, 256, 334, 474, 478, 479], "sock_accept": [123, 127, 477], "sock_sendfil": [123, 127, 477], "getnameinfo": [123, 127, 139, 334, 423, 477], "sockaddr": [123, 139, 334], "connect_read_pip": [123, 127, 128, 130, 134], "readtransport": [123, 130, 477], "connect_write_pip": [123, 127, 128, 130, 134], "writetransport": [123, 130], "subprocess_shel": [123, 127, 128, 130, 134], "add_signal_handl": [123, 127, 128], "uncatch": 123, "remove_signal_handl": [123, 127, 128], "blocking_io": [123, 136], "urandom": [123, 232, 280, 290, 315, 338, 463, 466, 470, 471, 474, 475, 476], "cpu_bound": 123, "set_default_executor": [123, 127, 470, 478], "set_exception_handl": [123, 127], "call_exception_handl": [123, 127], "get_exception_handl": [123, 127, 475, 476], "default_exception_handl": [123, 127], "asyncgen": 123, "get_debug": [123, 127, 224, 475], "devnul": [123, 134, 280, 290, 330, 345, 473], "universal_newlin": [123, 134, 345, 463, 477], "subprocesstransport": [123, 130], "get_context": [123, 136, 163, 280, 471, 474], "srv": [123, 167, 477], "wait_clos": [123, 133, 477], "get_loop": [123, 126, 132, 477], "client_connect": 123, "is_serv": [123, 477], "trsock": 123, "transportsocket": 123, "mypolici": [123, 473], "defaulteventlooppolici": [123, 129], "selectselector": [123, 128, 326], "set_event_loop_polici": [123, 127, 129], "iocp": 123, "msdn": [123, 290], "abstracteventloop": [123, 125, 129, 479], "purposefulli": 123, "hello_world": 123, "reschedul": [123, 136], "display_d": [123, 136], "end_tim": [123, 136], "socketpair": [123, 130, 133, 330, 334, 463, 477], "rsock": [123, 130, 133], "wsock": [123, 130, 133], "recept": [123, 130, 133], "ask_exit": 123, "signam": [123, 330], "3600": [123, 130, 136, 166, 180], "exceed": [124, 136, 183, 209, 210, 222, 266, 304, 319, 361, 378, 419, 421, 462, 463, 465, 476], "deadlin": [124, 136, 322], "invalidstateerror": [124, 126, 136, 163], "incompletereaderror": [124, 133], "limitoverrunerror": [124, 133], "baseeventloop": 125, "successor": [125, 229, 423], "_make_socket_transport": 125, "_register_task": 125, "_unregister_task": 125, "_enter_task": 125, "_leave_task": 125, "base_futur": 126, "isfutur": 126, "_asyncio_future_block": 126, "ensure_futur": [126, 136, 475, 476], "iscoroutin": [126, 136, 252, 471, 475], "isawait": [126, 158, 252, 386, 475], "mid": [126, 136], "wrap_futur": 126, "set_result": [126, 130, 136, 163], "add_done_callback": [126, 136, 163, 477], "remove_done_callback": [126, 136], "set_aft": 126, "mimic": [126, 180, 252, 264, 344, 378, 381, 466, 468], "lifecycl": [127, 399, 466, 474], "get_extra_info": [127, 130, 133, 167, 478], "set_protocol": [127, 130], "get_protocol": [127, 130], "is_read": [127, 130, 477], "pause_read": [127, 130, 477], "resume_read": [127, 130, 477], "writelin": [127, 130, 133, 155, 187, 255, 459], "can_write_eof": [127, 130, 133], "write_eof": [127, 130, 133, 338], "get_write_buffer_s": [127, 130], "get_write_buffer_limit": [127, 130, 475], "water": [127, 325, 475], "set_write_buffer_limit": [127, 130], "get_pid": [127, 130], "get_pipe_transport": [127, 130], "get_returncod": [127, 130], "send_sign": [127, 130, 134, 345, 465], "connection_lost": [127, 130], "pause_writ": [127, 130], "resume_writ": [127, 130], "drain": [127, 130, 133, 135, 338, 472], "data_receiv": [127, 130], "eof_receiv": [127, 130], "get_buff": [127, 130, 405], "buffer_upd": [127, 130], "datagram_receiv": [127, 130], "error_receiv": [127, 130], "pipe_data_receiv": [127, 130], "pipe_connection_lost": [127, 130], "process_exit": [127, 130], "abstracteventlooppolici": [127, 129, 471], "proactor_ev": 128, "windows_ev": 128, "windows_util": [128, 477], "hpet": 128, "set_child_watch": [128, 129, 471], "kqueueselector": [128, 326], "pollselector": [128, 326, 477], "get_child_watch": [129, 471], "abstractchildwatch": [129, 471], "windowsselectoreventlooppolici": [129, 477], "windowsproactoreventlooppolici": [129, 477], "threadedchildwatch": [129, 134, 471], "multiloopchildwatch": [129, 471], "safechildwatch": [129, 471], "fastchildwatch": [129, 471], "prohibit": [129, 190, 255, 259, 338, 404, 427, 469, 470, 477, 478, 479], "add_child_handl": 129, "returncod": [129, 130, 134, 345, 475, 478], "remove_child_handl": 129, "attach_loop": 129, "detach": [129, 139, 146, 255, 267, 290, 334, 338, 373, 399, 402, 427, 472, 473], "is_act": [129, 229], "inact": [129, 134, 438, 465], "sigchld": [129, 290, 330], "reap": 129, "waitpid": [129, 254, 290, 306, 464, 474, 475], "pidfdchildwatch": [129, 471, 479], "pidfd": [129, 330], "goldilock": 129, "linearli": [129, 138, 325, 340], "myeventlooppolici": 129, "eventloop": 129, "basetransport": [130, 133, 478], "datagramtransport": 130, "baseprotocol": 130, "bufferedprotocol": [130, 477, 478], "datagramprotocol": [130, 470], "outgo": [130, 197, 334, 338, 471, 472, 473], "getsockopt": [130, 334, 338, 466, 476], "peernam": [130, 133], "getpeernam": [130, 167, 334, 338], "socknam": 130, "getsocknam": [130, 133, 334, 338], "sslsocket": [130, 338, 466, 469, 474, 475, 477, 479], "peercert": 130, "getpeercert": [130, 338, 465, 474], "ssl_object": 130, "sslobject": [130, 338, 383, 475, 477], "watermark": [130, 133], "opportun": [130, 136, 155, 322, 387, 458], "list_of_data": 130, "addr": [130, 133, 148, 167, 256, 326, 334, 338, 359, 417, 472, 475], "sigkil": [130, 134, 280, 290, 330, 345, 357, 463, 477], "terminateprocess": [130, 134, 139, 280, 290, 345, 465, 466], "unidirect": [130, 280], "reassembl": 130, "sizehint": [130, 155, 325], "recipi": [130, 197, 205, 206, 332, 335, 423], "undeliver": 130, "enobuf": [130, 209], "echoserverprotocol": 130, "8888": [130, 133], "echoclientprotocol": 130, "on_con_lost": 130, "myprotocol": 130, "dateprotocol": 130, "exit_futur": 130, "pipe_clos": 130, "check_for_exit": 130, "get_dat": [130, 134, 268], "qsize": [131, 280, 313], "get_nowait": [131, 258, 280, 313], "queueempti": 131, "unfinish": [131, 240, 280, 313], "task_don": [131, 280, 313, 464, 475], "unblock": [131, 135, 229, 280, 313, 330], "queueful": 131, "priority_numb": [131, 313], "sleep_for": 131, "slept": 131, "total_sleep_tim": 131, "started_at": 131, "total_slept_for": 131, "return_except": [131, 136], "loop_factori": [132, 471], "tcp_echo_cli": 133, "client_connected_cb": 133, "feed_eof": 133, "readexactli": [133, 476], "readuntil": [133, 475, 476], "at_eof": 133, "handle_echo": 133, "print_http_head": 133, "urlsplit": [133, 391, 466, 476], "wait_for_data": 133, "base_subprocess": 134, "proc": [134, 237, 290, 345, 476], "zzz": [134, 429], "stdout_data": [134, 345, 463], "stderr_data": [134, 345, 463], "ctrl_c_event": [134, 290, 330, 345, 466], "ctrl_break_ev": [134, 290, 330, 345, 466], "creationflag": [134, 345, 463], "create_new_process_group": [134, 345], "fair": [135, 338, 366, 385, 391, 461, 476], "waiter": [135, 362], "waiter_task": 135, "awaken": [135, 362], "is_set": [135, 362, 469], "cond": [135, 141, 349, 383, 464], "wake": [135, 244, 325, 330, 362, 465], "notify_al": [135, 362, 469], "sem": 135, "example_barri": 135, "housekeep": [135, 362], "n_wait": [135, 362], "0x1053bb7c8": 136, "say_aft": 136, "task1": [136, 449], "task2": [136, 449], "tg": 136, "function_that_returns_a_future_object": 136, "some_python_coroutin": 136, "leverag": [136, 249, 280, 474, 479], "background_task": 136, "some_coro": 136, "robustli": [136, 466], "uncancel": [136, 470], "another_coro": 136, "bubbl": [136, 424], "baseexceptiongroup": [136, 166, 210, 378, 424, 470], "aw": 136, "aggreg": [136, 258, 337, 385, 470], "stronger": [136, 387], "subtask": 136, "eager_task_factori": [136, 471], "create_eager_task_factori": [136, 471], "custom_task_constructor": 136, "long_running_task": 136, "overdu": 136, "new_deadlin": 136, "timeout_at": 136, "yai": [136, 446], "return_when": [136, 163], "all_complet": [136, 163], "first_complet": [136, 163], "first_except": [136, 163], "earliest": [136, 147, 180, 187, 363, 440], "earliest_result": 136, "took": [136, 166, 305, 364, 459], "eager_start": 136, "eagerli": [136, 396, 477], "get_stack": [136, 141], "newest": 136, "print_stack": [136, 264, 378, 475], "get_coro": [136, 478], "get_nam": [136, 348, 478], "deni": [136, 209, 335, 425, 462], "cancel_m": 136, "ineffect": [136, 474], "make_request_with_timeout": 136, "make_request": 136, "make_another_request": 136, "unrelated_cod": 136, "fashion": [136, 163, 165, 167, 231, 259, 280, 305, 316, 334, 378, 383, 410, 424, 425, 427, 438, 463, 466, 473, 474], "suppres": 136, "_exit": [137, 210, 211, 290], "unregistr": [137, 326], "counterfil": 137, "_count": 137, "incrcount": 137, "savecount": 137, "adject": [137, 443], "donni": 137, "sector": 137, "law": [138, 232, 333, 340, 346, 363, 423, 464], "dvi": 138, "adpcm": 138, "fragment1": 138, "fragment2": 138, "adpcm2lin": 138, "adpcmfrag": 138, "lin2adpcm": 138, "newstat": 138, "alaw2lin": 138, "avg": 138, "avgpp": 138, "bia": [138, 305, 472], "findfactor": 138, "proport": [138, 164, 315, 340], "findfit": 138, "findmax": 138, "energi": 138, "maxim": [138, 187, 188, 193, 222, 224, 232, 244, 359, 437], "getsampl": 138, "wherebi": [138, 148, 265, 296], "ima": 138, "lin2alaw": 138, "lin2lin": 138, "newwidth": 138, "new_fram": 138, "old_width": 138, "lin2ulaw": 138, "maxpp": 138, "minmax": 138, "ratecv": 138, "inrat": 138, "outrat": 138, "weighta": 138, "weightb": 138, "newfrag": 138, "sqrt": [138, 151, 163, 183, 272, 340, 463, 464, 465, 472, 478], "s_i": [138, 339], "tomono": 138, "lfactor": 138, "rfactor": 138, "tostereo": 138, "ulaw2lin": 138, "recombin": [138, 473], "mul_stereo": 138, "lsampl": 138, "rsampl": 138, "toler": [138, 151, 181, 256, 272, 475, 477], "loss": [138, 183, 222, 240, 255, 268, 272, 363, 392, 418, 423, 427, 441, 461, 463, 465, 469, 472, 476, 477, 478], "misinterpret": 138, "energet": 138, "echocancel": 138, "outputdata": 138, "inputdata": 138, "800": [138, 232, 267, 464, 466, 469, 472, 476], "out_test": 138, "in_test": 138, "ipo": 138, "prefil": 138, "postfil": 138, "breakpointhook": [139, 222, 349, 447, 452, 477], "run_fil": [139, 452], "run_interactivehook": [139, 349], "run_startup": [139, 452], "run_stdin": [139, 452], "addressof": [139, 173], "call_funct": [139, 173, 470, 476], "func_point": 139, "cdata": [139, 173, 311, 407, 412, 413], "create_string_buff": [139, 173, 464], "create_unicode_buff": [139, 173], "dlopen": [139, 173, 290, 349, 453, 461, 464], "dlsym": [139, 173], "get_errno": [139, 173, 465], "get_last_error": [139, 173, 465], "set_errno": [139, 173, 465], "set_last_error": [139, 173, 465], "string_at": [139, 173, 211, 473], "wstring_at": [139, 173], "code_object": 139, "flock": [139, 212, 268], "lockf": [139, 212, 268, 290, 461, 465, 473], "whenc": [139, 150, 212, 255, 275, 290, 443, 461], "sendcmd": [139, 220], "get_object": [139, 224, 469, 478], "get_referr": [139, 224, 379, 469], "root_dir": [139, 228, 329, 469, 471], "dir_fd": [139, 222, 228, 290, 329, 469, 470, 473], "get_osfhandl": [139, 279], "open_osfhandl": [139, 279], "putlin": [139, 285, 302], "add_dll_directori": [139, 290, 478], "chdir": [139, 166, 290, 329, 349, 448, 470, 472, 473, 479], "chflag": [139, 290, 329, 339, 465, 473], "gid": [139, 230, 290, 293, 307, 355, 465, 466, 473, 475], "forkpti": [139, 290], "fwalk": [139, 290, 473, 477], "topdown": [139, 290], "onerror": [139, 290, 299, 329, 471, 477], "follow_symlink": [139, 290, 293, 329, 469, 473], "getxattr": [139, 290, 473], "killpg": [139, 290, 462], "pgid": [139, 290], "src_dir_fd": [139, 290], "dst_dir_fd": [139, 290], "listdriv": [139, 290, 471], "listmount": [139, 290, 471], "listvolum": [139, 290, 471], "listxattr": [139, 290, 473], "putenv": [139, 290, 303, 479], "removexattr": [139, 290, 473], "setxattr": [139, 290, 473], "startfil": [139, 290], "cwd": [139, 220, 290, 293, 345, 359, 396, 463, 478], "show_cmd": [139, 290], "unsetenv": [139, 290, 465, 479], "utim": [139, 290, 329, 473], "followlink": [139, 290, 465], "rglob": [139, 293, 470, 471], "find_class": [139, 296], "prlimit": [139, 319, 474], "setrlimit": [139, 319, 359], "copymod": [139, 329], "copystat": [139, 329, 473], "make_arch": [139, 329, 466, 471, 472, 475, 478], "base_nam": [139, 329], "unpack_arch": [139, 329, 470, 471, 472], "extract_dir": [139, 329], "pthread_kil": [139, 290, 330, 473], "thread_id": [139, 330, 363], "signalnum": [139, 330], "gethostbyaddr": [139, 290, 334], "gethostbynam": [139, 334], "getservbynam": [139, 334], "servicenam": [139, 334], "protocolnam": [139, 334], "getservbyport": [139, 334, 463], "sendmsg": [139, 334, 471, 473, 475], "sethostnam": [139, 334, 473], "connection_handl": [139, 337], "enable_load_extens": [139, 337, 453, 466, 469, 472], "load_extens": [139, 337, 466, 469, 471, 472], "_current_except": [139, 349, 471], "_current_fram": [139, 349, 447, 464], "_getframemodulenam": [139, 349], "excepthook": [139, 149, 349, 359, 362, 447, 460, 469, 478, 479], "set_asyncgen_hooks_fin": [139, 349], "set_asyncgen_hooks_firstit": [139, 349], "closelog": [139, 353, 471], "openlog": [139, 353, 471], "logopt": [139, 353], "setlogmask": [139, 353], "maskpri": [139, 353], "mkdtemp": [139, 290, 357, 359, 399, 471], "fullpath": [139, 357], "mkstemp": [139, 280, 357], "fullurl": [139, 392], "connectregistri": [139, 402], "computer_nam": [139, 402], "createkei": [139, 402], "sub_kei": [139, 402], "deletekei": [139, 402], "deletevalu": [139, 402], "disablereflectionkei": [139, 402, 465, 466], "enablereflectionkei": [139, 402, 465, 466], "enumkei": [139, 402], "enumvalu": [139, 402], "expandenvironmentstr": [139, 402, 465], "loadkei": [139, 402], "file_nam": [139, 402], "openkei": [139, 402], "pyhkei": [139, 402], "queryinfokei": [139, 402], "queryreflectionkei": [139, 402, 465, 466], "queryvalu": [139, 402], "value_nam": [139, 402], "savekei": [139, 402], "setvalu": [139, 402], "_winapi": 139, "createfil": 139, "desired_access": 139, "share_mod": 139, "creation_disposit": 139, "flags_and_attribut": 139, "createjunct": 139, "src_path": 139, "dst_path": 139, "createnamedpip": 139, "open_mod": 139, "pipe_mod": 139, "createpip": 139, "createprocess": [139, 345], "application_nam": 139, "command_lin": [139, 345], "current_directori": 139, "openprocess": 139, "process_id": [139, 334], "exit_cod": [139, 210], "pyobj_fromptr": 139, "4648": [140, 324], "facto": [140, 174, 240, 249, 355, 391, 416, 443], "ascii85": [140, 474], "76": [140, 199, 340, 379, 381, 416], "2045": [140, 191, 193, 199, 200, 202, 416], "b64encod": [140, 232], "altchar": 140, "b64decod": [140, 232, 473], "a2b_base64": [140, 143], "standard_b64encod": 140, "standard_b64decod": 140, "urlsafe_b64encod": 140, "urlsafe_b64decod": 140, "b32encod": 140, "b32decod": [140, 474], "map01": 140, "oh": 140, "ey": [140, 183, 187, 438, 464, 471, 475, 478], "b32hexencod": [140, 469], "b32hexdecod": [140, 469], "b16encod": 140, "b16decod": 140, "a85encod": [140, 474], "foldspac": 140, "wrapcol": 140, "adob": [140, 474], "btoa": 140, "a85decod": [140, 474], "ignorechar": 140, "x0b": [140, 341, 395], "b85encod": [140, 474], "b85decod": [140, 474], "decodebyt": [140, 155, 479], "encodebyt": [140, 155, 479], "zgf0ysb0bybizsblbmnvzgvk": 140, "1521": [140, 314], "multipurpos": [140, 314], "bdbquit": 141, "bpbynumb": 141, "bplist": 141, "deletem": 141, "bpformat": 141, "bpprint": 141, "botfram": 141, "stopfram": 141, "returnfram": 141, "trace_dispatch": 141, "c_call": [141, 349], "c_return": [141, 349, 350], "c_except": [141, 349], "dispatch_lin": 141, "user_lin": 141, "dispatch_cal": 141, "user_cal": 141, "dispatch_return": 141, "user_return": 141, "dispatch_except": 141, "user_except": 141, "is_skipped_lin": 141, "module_nam": [141, 247, 280, 359, 469, 477], "stop_her": 141, "break_her": 141, "break_anywher": 141, "argument_list": [141, 424, 427], "return_valu": [141, 188, 386, 387, 472, 474, 476], "do_clear": 141, "set_step": 141, "set_next": 141, "set_return": 141, "set_until": 141, "set_trac": [141, 190, 222, 294, 349, 452, 477], "set_continu": 141, "set_quit": 141, "dispatch_": 141, "set_break": 141, "clear_break": 141, "clear_bpbynumb": 141, "clear_all_file_break": 141, "clear_all_break": 141, "get_bpbynumb": 141, "get_break": 141, "get_file_break": 141, "get_all_break": 141, "format_stack_entri": 141, "frame_lineno": 141, "lprefix": 141, "runev": [141, 294], "runctx": [141, 305, 377], "runcal": [141, 294, 305, 478], "checkfuncnam": 141, "a2b_": [143, 473], "a2b_uu": 143, "b2a_uu": [143, 477], "strict_mod": 143, "3548": [143, 463], "b2a_base64": [143, 476], "a2b_qp": 143, "b2a_qp": 143, "quotetab": [143, 155, 314], "istext": 143, "1522": [143, 314], "linefe": [143, 205, 328, 342, 432, 462], "crc_hqx": [143, 470], "crc": [143, 419, 421], "ccitt": [143, 346], "polynomi": [143, 258, 272], "0x1021": 143, "binhex4": [143, 479], "crc32": [143, 232, 421, 448, 449], "checksum": [143, 334, 355, 419, 421], "010x": 143, "b2a_hex": [143, 155], "bytes_per_sep": [143, 341], "hexlifi": 143, "xb9": 143, "x01": [143, 255, 256, 281, 334, 344, 395], "b901ef": 143, "b9": 143, "ef": [143, 157, 258, 391, 414], "b9_01ef": 143, "b901": 143, "a2b_hex": [143, 155, 474], "hexstr": 143, "invers": [143, 147, 151, 180, 183, 198, 206, 208, 222, 241, 256, 272, 288, 296, 315, 328, 337, 340, 341, 363, 427, 428, 465, 471, 478], "liber": [143, 190], "fromhex": [143, 341, 441, 465, 470, 476, 477], "85": [143, 150, 285, 340, 475], "bisect_left": 144, "partit": [144, 258, 315, 329, 334, 341, 464, 475, 478], "bisect_right": 144, "insort_left": 144, "domin": [144, 240], "insort_right": 144, "insort": [144, 449], "sortedcollect": 144, "straight": [144, 199, 203, 222, 280, 349, 385, 399, 408, 438, 441, 459, 467, 478], "find_lt": 144, "find_l": 144, "find_gt": 144, "find_g": 144, "exam": [144, 340], "score": [144, 187, 337, 340, 449], "70": [144, 180, 183, 315, 340, 361, 379, 438, 448, 449], "fdcba": 144, "titan": 144, "bird": 144, "1963": 144, "hitchcock": 144, "alien": [144, 362], "1986": [144, 180], "1960": 144, "by_year": 144, "romanc": 144, "hiller": 144, "_f": 145, "bz2file": [146, 267, 466, 468, 469, 473, 474, 479], "bz2compressor": 146, "bz2decompressor": [146, 475], "compresslevel": [146, 231, 355, 419, 477, 479], "xb": [146, 231, 267], "rt": [146, 222, 231, 267, 359, 381], "wt": [146, 222, 231, 267, 340], "bufferediobas": [146, 222, 231, 239, 242, 255, 267, 296, 335, 357, 366, 404, 465, 466, 470, 472, 473, 475, 476], "peek": [146, 157, 231, 255, 267, 399, 472], "read1": [146, 231, 255], "compressor": [146, 267, 421], "decompressor": [146, 267, 421], "max_length": [146, 267, 421, 475], "needs_input": [146, 267], "unused_data": [146, 267, 421], "donec": 146, "rhoncu": 146, "qui": 146, "sapien": 146, "sit": [146, 372, 414], "amet": 146, "molesti": 146, "fusc": 146, "scelerisqu": 146, "vel": 146, "augu": 146, "nec": 146, "ullamcorp": 146, "nam": 146, "rutrum": 146, "pretium": 146, "placerat": 146, "aliquam": 146, "tristiqu": 146, "lorem": 146, "cursu": 146, "interdum": 146, "laoreet": 146, "ultric": 146, "puru": 146, "pulvinar": 146, "gravida": 146, "euismod": 146, "magna": 146, "variu": 146, "justo": 146, "tincidunt": 146, "feugiat": 146, "pharetra": 146, "lacu": 146, "risu": 146, "vehicula": 146, "maecena": 146, "feli": 146, "pellentesqu": 146, "semper": 146, "nunc": 146, "nibh": 146, "ac": [146, 155, 157, 174, 258, 315, 316, 423, 453, 462], "elementum": 146, "dolor": 146, "luctu": 146, "curabitur": 146, "lacinia": 146, "ornar": 146, "consectetur": 146, "vestibulum": 146, "ratio": [146, 187, 218, 272, 340, 341, 381, 441, 473], "513595166163142": 146, "gen_data": 146, "chunksiz": [146, 163, 280, 300, 475], "nonrandom": 146, "myfil": [146, 255, 290, 385, 419, 437, 440, 449], "european": [147, 155, 466], "setfirstweekdai": 147, "gregorian": [147, 180], "prolept": [147, 180], "dershowitz": [147, 180], "reingold": [147, 180], "calendr": [147, 180], "prescrib": [147, 434], "8601": [147, 180, 187, 263, 337, 416, 470, 476], "firstweekdai": 147, "iterweekdai": 147, "itermonthd": [147, 477], "itermonthdai": 147, "itermonthdays2": 147, "itermonthdays3": [147, 477], "itermonthdays4": [147, 477], "monthdatescalendar": 147, "seven": [147, 183, 241, 387, 472], "monthdays2calendar": 147, "monthdayscalendar": 147, "yeardatescalendar": 147, "yeardays2calendar": 147, "yeardayscalendar": 147, "textcalendar": 147, "formatmonth": 147, "theyear": 147, "themonth": 147, "center": [147, 152, 174, 183, 245, 252, 341, 342, 366, 373, 381, 423, 425, 443, 463, 465, 473], "prmonth": 147, "formatyear": 147, "pryear": 147, "htmlcalendar": [147, 477], "withyear": 147, "formatyearpag": 147, "css": [147, 237, 472, 477], "cascad": 147, "formatmonthnam": 147, "cssclass": 147, "tue": [147, 180], "wed": [147, 180, 363], "fri": [147, 206, 472, 473], "cssclass_nodai": 147, "cssclasses_weekday_head": 147, "cssclass_month_head": 147, "cssclass_month": 147, "cssclass_year": 147, "cssclass_year_head": 147, "singular": [147, 227], "customhtmlc": 147, "nowrap": 147, "ital": [147, 174, 369], "localetextcalendar": [147, 470], "localehtmlcalendar": [147, 470], "formatweekdai": 147, "lc_time": [147, 263], "isleap": 147, "leapdai": 147, "y1": [147, 427, 438, 469, 471], "y2": [147, 222, 438, 469, 471], "centuri": [147, 180, 363, 472], "weekhead": 147, "monthrang": 147, "monthcalendar": 147, "prcal": 147, "timegm": [147, 363], "epoch": [147, 206, 240, 245, 268, 285, 291, 337, 338, 355, 363, 416, 460], "day_nam": 147, "day_abbr": 147, "month_nam": [147, 432], "januari": [147, 150, 180, 315, 363, 423, 432, 460, 471], "month_abbr": 147, "march": [147, 180, 341, 363, 381, 423, 448, 459, 463, 474], "april": [147, 180, 432, 445, 459, 460], "august": [147, 464], "septemb": [147, 432, 459, 464, 473, 475], "octob": [147, 180, 423, 459, 461, 462, 465, 469, 470, 471, 478, 479], "illegalmontherror": 147, "illegalweekdayerror": 147, "mo": [147, 180, 227, 316, 341, 462, 476, 478], "tu": [147, 462], "fr": [147, 227, 268, 315, 432, 462, 477], "su": 147, "centr": 147, "stylesheet": [147, 466], "fieldstorag": [148, 474, 475, 477], "parse_qsl": [148, 391, 465, 469, 476, 477, 478, 479], "multipart": [148, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204], "maxlen": [148, 157, 258, 383, 465, 466], "isindex": 148, "goodi": 148, "h1": [148, 232, 237, 239, 265, 417], "logdir": [148, 149], "keep_blank_valu": [148, 391], "minifieldstorag": 148, "getlist": [148, 475], "fileitem": 148, "userfil": 148, "linecount": 148, "getfirst": 148, "strict_pars": [148, 391], "parse_q": [148, 391, 465, 469, 476, 477, 478, 479], "parse_multipart": [148, 469, 476, 477, 478, 479], "pdict": 148, "megabyt": 148, "emailmessag": [148, 191, 193, 194, 197, 198, 199, 202, 204, 205, 239, 392, 474, 476], "parse_head": [148, 239, 242], "get_content_typ": [148, 193, 197, 202], "print_environ": 148, "print_form": 148, "print_directori": 148, "print_environ_usag": 148, "hole": [148, 224, 290, 328, 357, 466, 469], "hacker": [148, 315], "exploit": [148, 267, 290, 355, 406, 425, 452, 474], "gullibl": 148, "trust": [148, 265, 280, 296, 299, 302, 338, 345, 355, 391, 392, 457, 458, 465, 466, 474, 478], "dash": [148, 155, 174, 193, 202, 316, 328, 404], "0o755": 148, "0755": 148, "0o644": 148, "0o666": [148, 181, 290, 293, 394], "privileg": [148, 285, 290, 334, 336, 339, 363, 402, 437, 473, 476], "everybodi": [148, 241], "cryptic": 148, "yourhostnam": 148, "suspect": [148, 459], "userid": [148, 266, 383, 476], "suexec": 148, "liabil": [148, 423], "excerpt": [149, 183, 478], "ea": 150, "rmff": 150, "bigendian": 150, "inclhead": 150, "getnam": [150, 355, 362, 413, 469], "getsiz": [150, 290, 291], "ioerror": [150, 187, 210, 212, 215, 222, 227, 240, 252, 255, 279, 280, 292, 329, 330, 390, 420, 447, 465, 466, 467, 473], "jerri": 150, "morrison": [150, 474], "electron": [150, 338, 423], "art": [150, 151, 157, 190, 233], "1985": [150, 337], "kahan": 151, "elementari": [151, 174, 381], "annex": [151, 272, 384, 432, 465], "4142135623730951j": 151, "modulu": [151, 286, 341, 349, 465, 472, 478], "phi": [151, 272], "counterclockwis": [151, 381], "radian": [151, 183, 272, 315, 381, 462, 478], "atan2": [151, 272], "\u03c0": [151, 272], "141592653589793": [151, 441, 472], "rect": [151, 173, 465], "log10": [151, 183, 272, 465], "aco": [151, 272], "arc": [151, 272, 381, 465, 466, 468, 472], "cosin": [151, 183, 272], "asin": [151, 272], "sine": [151, 183, 272], "atan": [151, 272, 465], "tangent": [151, 272, 381], "tan": [151, 272], "acosh": [151, 272, 465], "asinh": [151, 272, 465], "atanh": [151, 272, 465], "cosh": [151, 272], "sinh": [151, 272], "tanh": [151, 272], "isfinit": [151, 272, 472], "isinf": [151, 272, 341, 465], "isnan": [151, 272, 340, 341, 439, 465], "isclos": [151, 272, 441, 475], "rel_tol": [151, 272, 475], "1e": [151, 222, 272, 342, 344, 427, 475], "abs_tol": [151, 272, 475], "tau": [151, 272, 476], "\u03c4": [151, 272, 476], "infj": [151, 476], "nanj": [151, 476], "curv": [151, 338, 381, 473], "enlighten": 151, "ado": 151, "iserl": 151, "powel": 151, "clarendon": 151, "1987": [151, 155, 180, 405], "pp165": 151, "211": [151, 285, 473], "completekei": [152, 294], "use_rawinput": 152, "cmdloop": 152, "intro": [152, 338, 456, 466], "banner": [152, 154], "do_help": 152, "do_shel": 152, "postcmd": 152, "complete_foo": 152, "begidx": 152, "endidx": 152, "help_bar": 152, "help_": 152, "onecmd": 152, "precmd": 152, "emptylin": 152, "nonempti": [152, 188, 316, 341, 381, 400, 425], "completedefault": 152, "complete_": 152, "displaywidth": 152, "preloop": 152, "postloop": 152, "solicit": 152, "identchar": 152, "lastcmd": 152, "cmdqueue": 152, "doc_head": 152, "misc_head": 152, "undoc_head": 152, "ruler": 152, "drawn": [152, 174, 264, 290, 381], "do_forward": 152, "playback": [152, 292], "do_playback": 152, "turtleshel": 152, "do_right": 152, "do_left": 152, "do_goto": 152, "do_hom": 152, "do_circl": 152, "do_posit": 152, "do_head": [152, 242], "do_color": 152, "do_undo": 152, "do_reset": 152, "do_by": 152, "bye": [152, 167, 245, 285, 381, 473], "do_record": 152, "rose": [152, 258, 476], "spiral": 152, "180": [152, 232, 340, 381, 472], "rot_13": [153, 155], "pstat": [153, 305, 448, 460, 464], "interactiveinterpret": [154, 475], "__console__": 154, "interactiveconsol": [154, 317], "readfunc": 154, "exitmsg": 154, "compile_command": [154, 156], "runsourc": [154, 337], "showsyntaxerror": 154, "runcod": 154, "showtraceback": [154, 475], "stuf": 154, "resetbuff": 154, "codecinfo": [155, 464], "getincrementalencod": [155, 473], "getincrementaldecod": 155, "wider": [155, 180, 271, 383, 463, 474], "encodedfil": 155, "data_encod": 155, "file_encod": 155, "transcod": [155, 404, 472], "iterencod": [155, 259], "base64_codec": 155, "iterdecod": 155, "bom_b": 155, "bom_l": 155, "bom_utf8": 155, "bom_utf16": 155, "bom_utf16_b": 155, "bom_utf16_l": 155, "bom_utf32": 155, "bom_utf32_b": 155, "bom_utf32_l": 155, "xdf": [155, 232, 301], "u266c": 155, "223": 155, "9836": 155, "strict_error": 155, "ignore_error": [155, 329], "replace_error": 155, "hh": [155, 180, 245, 363, 432, 459], "xxxx": [155, 290, 432], "xxxxxxxx": [155, 290, 432], "backslashreplace_error": 155, "xmlcharrefreplace_error": 155, "namereplace_error": 155, "d800": 155, "dfff": 155, "register_error": [155, 222, 255, 341, 462], "error_handl": [155, 411], "lookup_error": [155, 462], "getstat": [155, 315], "setstat": [155, 315], "utf_8": 155, "rescan": [155, 299], "recov": [155, 187, 210, 218, 349, 394, 412, 466, 471, 472], "firstlin": [155, 185], "huge": [155, 255, 459, 474], "reposit": [155, 157, 255], "resp": [155, 263, 285, 304, 475], "frontend": 155, "adher": [155, 164, 242, 259, 266, 280, 431, 438], "0x0": 155, "00ff": [155, 472, 473], "charmap": 155, "BE": [155, 242, 423], "fffe": 155, "NO": [155, 190, 245, 370, 423], "ligatur": 155, "2060": [155, 245], "joiner": [155, 475], "payload": [155, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 239, 248, 466], "00000000": 155, "0000007f": 155, "0xxxxxxx": 155, "00000080": 155, "000007ff": 155, "110xxxxx": 155, "10xxxxxx": 155, "00000800": 155, "0000ffff": 155, "1110xxxx": 155, "00010000": 155, "0010ffff": 155, "11110xxx": 155, "notepad": [155, 432], "0xef": 155, "0xbb": 155, "0xbf": 155, "improb": 155, "diaeresi": 155, "iso8859": 155, "utf16": 155, "utf32": 155, "euro": [155, 222, 466, 467], "ebcdic": [155, 474], "pc": [155, 174, 271, 403, 419, 432, 453, 458, 465, 470], "big5": [155, 463], "tw": 155, "csbig5": 155, "chines": [155, 463], "big5hksc": [155, 463], "hksc": 155, "cp037": 155, "ibm037": 155, "ibm039": 155, "cp273": [155, 474], "ibm273": 155, "csibm273": 155, "cp424": 155, "ibm424": 155, "cp437": [155, 419], "437": 155, "ibm437": 155, "cp500": 155, "ibm500": 155, "western": [155, 363], "europ": [155, 163, 363, 422, 466], "cp720": [155, 466, 472], "cp737": 155, "cp775": 155, "ibm775": 155, "baltic": 155, "cp850": 155, "850": [155, 466], "ibm850": 155, "cp852": 155, "852": 155, "ibm852": 155, "eastern": [155, 180, 363, 476], "cp855": 155, "855": [155, 218], "ibm855": 155, "bulgarian": 155, "byelorussian": 155, "macedonian": 155, "serbian": 155, "cp856": 155, "cp857": 155, "857": 155, "ibm857": 155, "turkish": 155, "cp858": [155, 466], "858": 155, "ibm858": 155, "cp860": 155, "860": 155, "ibm860": 155, "portugues": 155, "cp861": 155, "861": [155, 293], "ibm861": 155, "iceland": [155, 464], "cp862": 155, "862": 155, "ibm862": 155, "cp863": 155, "863": 155, "ibm863": 155, "cp864": 155, "ibm864": 155, "cp865": 155, "865": 155, "ibm865": 155, "danish": 155, "cp866": 155, "866": [155, 187, 478], "ibm866": 155, "cp869": 155, "869": [155, 471], "gr": 155, "ibm869": 155, "cp874": 155, "cp875": 155, "cp932": [155, 463], "932": 155, "ms932": 155, "mskanji": 155, "kanji": 155, "cp949": [155, 463], "949": 155, "ms949": 155, "uhc": 155, "korean": [155, 463, 477], "cp950": [155, 463], "950": 155, "ms950": 155, "cp1006": 155, "urdu": 155, "cp1026": 155, "ibm1026": 155, "cp1125": [155, 474], "1125": 155, "ibm1125": 155, "cp866u": 155, "ruscii": 155, "ukrainian": [155, 474, 477], "cp1140": 155, "ibm1140": 155, "cp1250": [155, 164], "1250": 155, "cp1251": 155, "1251": 155, "1252": [155, 445, 449], "cp1253": 155, "1253": 155, "cp1254": 155, "1254": [155, 316], "cp1255": 155, "1255": 155, "cp1256": 155, "1256": 155, "cp1257": 155, "1257": 155, "cp1258": 155, "1258": 155, "vietnames": 155, "euc_jp": 155, "eucjp": 155, "uji": 155, "ji": [155, 463], "euc_jis_2004": 155, "jisx0213": [155, 463], "eucjis2004": 155, "euc_jisx0213": 155, "eucjisx0213": 155, "euc_kr": 155, "euckr": 155, "ksc5601": 155, "ks_c": 155, "5601": 155, "ksx1001": 155, "ks_x": 155, "gb2312": [155, 384, 463, 473], "csiso58gb231280": 155, "euc": [155, 192, 463], "cn": 155, "euccn": 155, "eucgb2312": 155, "1980": [155, 187, 419, 465], "ir": 155, "gbk": [155, 463], "936": 155, "cp936": 155, "ms936": 155, "gb18030": [155, 463], "hz": [155, 463, 473], "hzgb": 155, "gb": [155, 338], "2312": 155, "iso2022_jp": 155, "csiso2022jp": 155, "iso2022jp": 155, "2022": [155, 180, 192, 232, 445, 448, 463, 470], "jp": [155, 192, 423, 463], "iso2022_jp_1": 155, "iso2022_jp_2": 155, "iso2022_jp_2004": 155, "2004": [155, 180, 373, 423, 463], "iso2022_jp_3": 155, "iso2022_jp_ext": 155, "iso2022_kr": 155, "csiso2022kr": 155, "iso2022kr": 155, "kr": [155, 463], "latin_1": [155, 192], "cp819": 155, "iso8859_2": 155, "latin2": [155, 337], "iso8859_3": 155, "latin3": 155, "l3": 155, "esperanto": 155, "maltes": 155, "iso8859_4": 155, "latin4": 155, "l4": 155, "iso8859_5": 155, "cyril": 155, "iso8859_6": 155, "iso8859_7": 155, "greek8": 155, "iso8859_8": 155, "iso8859_9": 155, "latin5": 155, "l5": 155, "iso8859_10": 155, "latin6": 155, "l6": [155, 473], "nordic": 155, "iso8859_11": 155, "iso8859_13": 155, "latin7": 155, "l7": 155, "iso8859_14": 155, "latin8": 155, "l8": 155, "celtic": 155, "iso8859_15": 155, "latin9": 155, "l9": 155, "iso8859_16": 155, "latin10": 155, "l10": 155, "johab": [155, 463], "cp1361": 155, "ms1361": 155, "koi8_r": 155, "koi8_t": [155, 475], "tajik": [155, 475], "koi8_u": 155, "kz1048": [155, 475], "kz_1048": 155, "strk1048_2002": 155, "rk1048": 155, "kazakh": [155, 475], "mac_cyril": 155, "maccyril": 155, "mac_greek": 155, "macgreek": 155, "mac_iceland": 155, "maciceland": 155, "mac_latin2": 155, "maclatin2": 155, "maccentraleurop": 155, "mac_centeuro": 155, "mac_roman": 155, "macroman": 155, "mac_turkish": 155, "macturkish": 155, "ptcp154": 155, "csptcp154": 155, "pt154": 155, "cp154": 155, "asian": [155, 384, 463], "shift_ji": 155, "csshiftji": 155, "shiftji": 155, "sji": 155, "s_ji": 155, "shift_jis_2004": 155, "shiftjis2004": 155, "sjis_2004": 155, "sjis2004": 155, "shift_jisx0213": 155, "shiftjisx0213": 155, "sjisx0213": 155, "s_jisx0213": 155, "utf_32": 155, "u32": 155, "utf_32_b": 155, "32be": 155, "utf_32_l": 155, "32le": 155, "utf_16": 155, "u16": 155, "utf_16_b": 155, "16be": 155, "utf_16_l": 155, "16le": 155, "utf_7": 155, "u7": 155, "u8": 155, "cp65001": [155, 473], "asymmetr": 155, "3490": [155, 462], "oem": [155, 476], "cp_oemcp": [155, 476], "palmo": 155, "3492": [155, 462], "raw_unicode_escap": 155, "bewar": [155, 210, 218, 259, 280, 327, 337, 338, 357, 429, 448, 467], "unicode_intern": [155, 473, 478], "base_64": 155, "bz2_codec": [155, 474], "hex_codec": [155, 474], "quopri_codec": 155, "quotedprint": 155, "quoted_print": 155, "uu_codec": 155, "zlib_codec": 155, "rot13": [155, 474], "caesar": 155, "cypher": 155, "encrypt": [155, 170, 230, 245, 265, 285, 302, 307, 323, 332, 336, 338, 419, 459, 461, 462, 466, 472, 473, 474], "nameprep": [155, 343], "idn": [155, 338, 477], "5891": 155, "5895": 155, "alliancefran\u00e7ais": [155, 462], "nu": [155, 462], "xn": [155, 338, 462, 477], "alliancefranais": [155, 462], "npb": [155, 462], "allowunassign": 155, "toascii": 155, "usestd3asciirul": 155, "outcom": [156, 164, 288, 383, 385, 386, 424, 439], "commandcompil": 156, "subcontext": 157, "new_child": [157, 474], "baselin": [157, 364, 369], "bach": 157, "rembrandt": 157, "gogh": 157, "opera": [157, 400, 464], "carmen": 157, "584": [157, 290, 382, 399, 479], "multicontext": 157, "enthought": [157, 458], "codetool": 157, "pylookup": 157, "guest": [157, 334], "command_line_arg": 157, "flatten": [157, 193, 198, 199, 200, 202, 205, 258, 296, 341, 383, 439, 469, 471, 474, 475, 479], "deepchainmap": 157, "inner": [157, 166, 188, 232, 234, 252, 316, 337, 341, 381, 383, 410, 424, 426, 439, 463, 466, 472, 473], "eleph": 157, "lion": 157, "topmost": [157, 349, 464], "rapid": [157, 442, 478], "talli": [157, 466, 472, 473], "cnt": 157, "hamlet": [157, 459], "most_common": [157, 466], "1143": 157, "966": 157, "762": 157, "631": 157, "546": [157, 379], "514": [157, 266, 458, 462, 470], "bag": [157, 197, 424, 437], "multiset": [157, 472], "gallahad": [157, 439, 468], "sausag": [157, 222, 341], "list_of_pair": 157, "intersect": [157, 341, 381, 425, 439, 462, 463, 465, 466], "minu": [157, 174, 183, 222, 224, 272, 329, 341, 342, 344, 362, 374, 427, 433, 443, 477], "unnecessarili": [157, 290], "knuth": [157, 183], "donald": [157, 338, 466, 474], "cc": [157, 200, 206, 258, 268, 332, 338, 358, 453, 462, 471, 473], "pronounc": [157, 472], "deck": [157, 315], "movement": [157, 174, 233, 381, 465, 472], "appendleft": [157, 463], "extendleft": 157, "popleft": [157, 258, 313, 439, 449, 463], "ghi": [157, 173, 264, 328, 463], "jkl": 157, "pyshel": [157, 183, 244, 316, 476, 477, 478], "moving_averag": 157, "39": [157, 180, 190, 280, 290, 363, 453, 463, 469, 473, 478, 479], "robin": [157, 290, 410, 439, 478], "roundrobin": [157, 258], "delete_nth": 157, "bring": [157, 180, 244, 258, 329, 342, 372, 386, 469, 470, 474, 475, 478, 479], "dup": [157, 290, 334], "rot": [157, 461], "roll": [157, 180, 266, 337, 357, 359, 385, 437, 464, 465], "default_factori": [157, 178, 383], "__missing__": [157, 341, 386, 424, 425, 464, 472], "mississippi": [157, 341], "constant_factori": 157, "ran": [157, 190, 210, 345, 385, 465, 466, 471], "typenam": [157, 304, 337, 465], "field_nam": [157, 342], "_1": [157, 466, 468], "_3": 157, "_sourc": [157, 477], "_field_default": [157, 383], "employeerecord": 157, "depart": [157, 222, 341], "paygrad": 157, "emp": 157, "_make": [157, 337, 344], "employe": [157, 383, 437], "companydata": 157, "fetchal": [157, 337, 464], "somenamedtupl": 157, "_asdict": [157, 465, 466, 468, 478], "_replac": [157, 391, 465], "partnum": 157, "inventori": [157, 178, 288], "newpric": 157, "pixel": [157, 366, 369, 373, 381], "premium": 157, "hypot": [157, 272, 478], "714": 157, "018": 157, "hardcov": 157, "isbn": [157, 366, 451], "writeabl": [157, 173, 222, 255, 271, 338, 345], "part_numb": 157, "lru": [157, 223], "k1": [157, 399], "k2": [157, 399], "popitem": [157, 158, 164, 258, 268, 285, 341, 425, 460, 462, 466], "od": [157, 466, 472], "move_to_end": [157, 472], "rearrang": [157, 341, 436, 449, 459, 462, 464, 466, 469, 479], "acdeb": 157, "bacd": 157, "od1": [157, 466], "od2": [157, 466], "lastupdatedordereddict": 157, "timeboundedlru": 157, "maxag": 157, "multihitlrucach": 157, "maxrequest": 157, "cache_aft": 157, "uncached_kei": 157, "request_count": 157, "cached_kei": 157, "function_result": 157, "uncach": [157, 290, 472], "supplant": 157, "initialdata": 157, "compli": [157, 183, 259, 268, 311, 423, 465], "format_map": [157, 341, 472, 475], "isprint": [157, 175, 341, 475], "maketran": [157, 341, 468, 472, 475], "_collections_abc": 158, "mutablesequ": [158, 341, 383, 467, 473, 475], "isdisjoint": [158, 341], "mutableset": [158, 341, 383], "mappingview": [158, 341, 383], "itemsview": [158, 341, 383], "keysview": [158, 341, 383], "valuesview": [158, 341, 383], "asyncgener": [158, 341, 383, 476], "asend": [158, 427, 479], "athrow": [158, 427, 479], "__buffer__": [158, 252, 425, 471], "gencoro": 158, "myvar": 158, "listbasedset": 158, "favor": [158, 222, 239, 285, 290, 338, 341, 359, 383, 392, 463, 465, 467, 469, 470, 471, 472, 474, 475, 476, 478], "lst": [158, 294], "abcdef": [158, 173, 255, 258, 316, 466, 474], "defghi": [158, 258], "_from_iter": 158, "_hash": 158, "orderedset": 158, "yiq": [159, 474], "hl": 159, "hue": [159, 470], "satur": [159, 472], "hsv": 159, "poynton": 159, "colorfaq": 159, "cambridgeincolour": 159, "htm": [159, 180, 242, 461, 462, 463, 464, 465, 466, 467], "rgb_to_yiq": 159, "yiq_to_rgb": 159, "rgb_to_hl": 159, "hls_to_rgb": 159, "rgb_to_hsv": 159, "hsv_to_rgb": 159, "qq": 160, "destdir": 160, "strip_prefix": 160, "prepend_prefix": 160, "coexist": [160, 447], "cpu_count": [160, 163, 280, 290, 469, 474], "uncheck": [160, 429, 452, 477], "source_date_epoch": [160, 308, 477], "hardlink": [160, 355, 479], "dupe": [160, 479], "consolid": [160, 281, 462, 473, 476], "multilevel": 160, "getrecursionlimit": [160, 210, 244, 349, 447, 459, 471], "compile_dir": [160, 475, 477], "maxlevel": [160, 304, 318], "ddir": 160, "rx": [160, 316], "invalidation_mod": [160, 308, 477], "stripdir": [160, 479], "prependdir": [160, 479], "limit_sl_dest": [160, 479], "hardlink_dup": [160, 479], "pycinvalidationmod": [160, 308], "compile_fil": [160, 475], "fullnam": [160, 247, 249, 250, 299, 420, 462], "compile_path": [160, 475], "skip_curdir": 160, "multitask": [161, 366], "preemptiv": 161, "323": [163, 476], "1235": 163, "chop": [163, 280, 291, 459, 463, 467], "cancel_futur": [163, 479], "src1": [163, 472], "dest1": [163, 472], "src2": [163, 472], "dest2": [163, 472], "src3": [163, 472], "dest3": [163, 472], "src4": 163, "dest4": [163, 472], "wait_on_b": 163, "wait_on_a": 163, "wait_on_futur": 163, "thread_name_prefix": [163, 476], "initarg": [163, 280, 477], "gracefulli": [163, 316, 330, 362, 427, 446, 466, 472], "brokenthreadpool": 163, "foxnew": 163, "cnn": [163, 181], "wsj": 163, "nonexist": [163, 404], "subdomain": 163, "load_url": 163, "promptli": [163, 280, 316, 440], "future_to_url": 163, "mp_context": [163, 280, 477], "max_tasks_per_child": 163, "61": [163, 341, 363, 463], "brokenprocesspool": 163, "abruptli": [163, 338, 357, 362], "start_method": 163, "112272535095293": 163, "112582705942171": 163, "115280095190773": 163, "115797848077099": 163, "1099726899285419": 163, "is_prim": 163, "sqrt_n": 163, "set_running_or_notify_cancel": 163, "woken": [163, 465], "not_don": 163, "brokenexecutor": 163, "serveraliveinterv": 164, "compressionlevel": 164, "forwardx11": 164, "forg": 164, "hg": [164, 293, 338, 462, 466, 472], "topsecret": 164, "50022": 164, "configfil": 164, "another_config": 164, "read_str": [164, 472, 475], "nport": 164, "48484": 164, "read_dict": [164, 472, 477, 478, 479], "21212": 164, "getboolean": 164, "getint": 164, "getfloat": 164, "3de": [164, 338, 476], "cbc": [164, 334], "monster": [164, 361], "batchmod": 164, "sectcr": 164, "14159265359": [164, 441, 443], "choru": 164, "lumberjack": [164, 304, 378], "night": 164, "key_without_valu": 164, "harm": [164, 223, 289, 472], "can_values_be_as_wel": 164, "does_that_mean_anything_speci": 164, "multiline_valu": 164, "preprocess": [164, 172, 255, 391], "basicinterpol": [164, 470], "home_dir": 164, "my_dir": 164, "my_pictur": 164, "extendedinterpol": [164, 470, 472], "zc": 164, "buildout": [164, 472], "library_dir": 164, "system_dir": 164, "macports_dir": 164, "arthur": [164, 341, 478], "shed": 164, "last_nam": [164, 172, 316], "jackson": [164, 474], "twosh": 164, "python_dir": 164, "optionxform": 164, "defaultsect": 164, "visibli": [164, 244], "section_nam": 164, "section_proxi": 164, "dict_typ": [164, 301], "section1": 164, "key1": [164, 424, 479], "key2": [164, 424, 479], "key3": [164, 479], "value3": [164, 479], "section2": 164, "keya": 164, "valuea": 164, "keyb": 164, "valueb": 164, "keyc": 164, "valuec": 164, "section3": 164, "allow_no_valu": [164, 466], "sample_config": [164, 466], "mysqld": [164, 466], "mysql": [164, 220, 466], "old_password": 164, "acid": [164, 471], "innodb": 164, "space_around_delimit": 164, "comment_prefix": 164, "inline_comment_prefix": 164, "enabled_extens": 164, "another_extens": 164, "disabled_by_com": 164, "yet_another_extens": 164, "read_fil": [164, 265, 471], "empty_lines_in_valu": 164, "gotcha": 164, "she": 164, "default_sect": 164, "parser_inst": 164, "getdecim": 164, "boolean_st": 164, "nope": [164, 438], "unsuit": [164, 315, 324, 410, 449, 460, 466], "anotherkei": 164, "larch": 164, "optcr": 164, "downright": 164, "counterintuit": 164, "add_sect": [164, 472], "an_int": 164, "a_bool": 164, "a_float": 164, "1415": [164, 183, 465], "evil": [164, 466], "nooptionerror": [164, 466], "remove_opt": [164, 289], "duplicatesectionerror": [164, 472], "duplicateoptionerror": [164, 472], "has_sect": 164, "has_opt": [164, 289], "expandus": [164, 228, 240, 283, 291, 293, 317, 329, 345, 475, 478], "readfp": [164, 273, 466, 470, 471], "nosectionerror": 164, "fileobject": [164, 469], "remove_sect": 164, "cfgparser": 164, "max_interpolation_depth": 164, "interpolationerror": 164, "interpolationdeptherror": 164, "interpolationmissingoptionerror": 164, "interpolationsyntaxerror": 164, "missingsectionheadererror": 164, "parsingerror": [164, 470, 471], "notimplementedtyp": [165, 382, 469], "ellipsistyp": [165, 382, 469], "pager": [165, 310], "abstractcontextmanag": [166, 341, 383, 476], "abstractasynccontextmanag": [166, 341, 383, 477], "contextmanag": [166, 341, 383, 464, 465, 472, 476], "managed_resourc": 166, "acquire_resourc": 166, "release_resourc": 166, "contextdecor": [166, 472], "asynccontextmanag": [166, 383, 387, 425, 477], "get_connect": 166, "acquire_db_connect": 166, "release_db_connect": 166, "get_all_us": 166, "my_gener": 166, "nullcontext": [166, 469, 477], "enter_result": 166, "ignore_except": 166, "process_fil": 166, "file_or_path": 166, "send_http": 166, "aiohttp": 166, "clientsess": 166, "somefil": [166, 201, 227, 290, 328, 377], "someotherfil": 166, "redirect_stdout": [166, 474, 475], "new_target": [166, 368], "redirect_stderr": [166, 475], "relinquish": [166, 281, 290, 362, 363], "mycontext": 166, "contextbaseclass": 166, "asynccontextdecor": [166, 469], "exitstack": [166, 470, 473, 477, 478], "enter_context": [166, 470], "pop_al": 166, "close_fil": 166, "asyncexitstack": [166, 470, 477, 478], "enter_async_context": [166, 470], "push_async_exit": 166, "push_async_callback": [166, 478], "need_special_resourc": 166, "acquire_special_resourc": 166, "release_special_resourc": 166, "acquisit": [166, 212, 264, 362, 472], "resourcemanag": 166, "check_resource_ok": 166, "_cleanup_on_error": 166, "exc_detail": 166, "cleanup_need": 166, "perform_oper": 166, "cleanup_resourc": 166, "cb": [166, 258, 341], "track_entry_and_exit": [166, 472], "exc_tb": [166, 330, 341], "load_widget": [166, 472], "singleus": 166, "write_to_stream": 166, "outer_stack": 166, "inner_stack": 166, "copy_context": 167, "bleed": 167, "old_valu": 167, "client_addr_var": 167, "client_addr": 167, "render_goodby": 167, "8081": 167, "memo": [168, 296, 297, 428, 476], "copied_list": 168, "original_list": 168, "__copy__": [168, 471], "__deepcopy__": 168, "constructor_ob": 169, "dispatch_t": [169, 296, 473], "pickler": [169, 296, 297, 468, 473, 478], "pickle_c": 169, "passlib": 170, "crack": [170, 187], "method_sha512": 170, "salt": [170, 232, 323, 425, 452, 472, 473], "sha": [170, 232, 395, 464, 465, 469, 472, 473, 476], "method_sha256": 170, "method_blowfish": 170, "blowfish": [170, 477], "method_md5": 170, "md5": [170, 232, 234, 245, 332, 337, 338, 395, 453, 464, 465, 466, 467, 471, 472, 474, 478, 479], "method_crypt": [170, 476], "weakest": 170, "method_": 170, "mksalt": [170, 473, 477], "perturb": 170, "999_999_999": 170, "5000": [170, 183], "2_147_483_648": 170, "exposur": [170, 473], "compare_digest": [170, 232, 234, 323, 466, 473], "compare_hash": 170, "cryptedpasswd": 170, "getpwnam": [170, 307, 345], "cleartext": [170, 266], "plaintext": [170, 220, 245, 473], "4180": 172, "dictread": [172, 476, 478], "dictwrit": [172, 472], "csvfile": 172, "fmtparam": 172, "list_dialect": 172, "quote_nonnumer": 172, "unquot": [172, 193, 202, 206, 237, 300, 391, 392], "spamread": 172, "quotechar": 172, "bake": [172, 316], "bean": [172, 316], "stringifi": [172, 378, 470], "spamwrit": 172, "quote_minim": 172, "writerow": [172, 472, 475], "register_dialect": 172, "unregister_dialect": 172, "get_dialect": 172, "new_limit": [172, 464], "restkei": 172, "restval": 172, "first_nam": [172, 316], "clees": [172, 410, 438, 478], "extrasact": 172, "writehead": [172, 472], "doublequot": 172, "excel_tab": 172, "unix_dialect": [172, 472], "sniffer": [172, 334], "sniff": 172, "has_head": [172, 240, 392], "heurist": [172, 187, 194, 200, 222, 468, 472], "quote_al": 172, "linetermin": 172, "quote_non": 172, "escapechar": 172, "quote_notnul": [172, 471], "quote_str": [172, 471], "quote_": 172, "skipinitialspac": 172, "csvreader": 172, "line_num": [172, 316, 464], "csvwriter": 172, "passwd": [172, 220, 293, 307, 358, 385, 392, 463, 464, 465], "someiter": 172, "unixpwd": 172, "linend": 172, "c_int": [173, 280, 464], "c_long": [173, 341], "cdll": [173, 464, 478], "windll": [173, 465], "oledl": [173, 465], "cdecl": 173, "stdcall": 173, "hresult": 173, "kernel32": [173, 349], "libc": [173, 254, 290, 300, 345, 453, 464], "loadlibrari": 173, "_funcptr": 173, "getmodulehandlea": 173, "myownfunct": 173, "239": 173, "_stdcallfuncptr": 173, "user32": 173, "getmodulehandl": 173, "hmodul": 173, "lpcstr": 173, "lpmodulenam": 173, "getmodulehandlew": 173, "lpcwstr": 173, "yapaxi": 173, "310": 173, "rand": [173, 338], "1804289383": 173, "0x1d000000": 173, "erron": [173, 271, 289, 381, 406, 422, 459, 474, 475, 477, 479], "c_bool": [173, 465], "_bool": [173, 344, 465], "c_char": [173, 280], "c_wchar": 173, "c_byte": 173, "c_ubyt": 173, "c_short": [173, 280], "c_ushort": 173, "c_uint": 173, "c_ulong": 173, "c_longlong": 173, "__int64": 173, "c_ulonglong": 173, "c_size_t": 173, "c_ssize_t": [173, 472], "c_time_t": 173, "time_t": 173, "c_float": [173, 464], "c_doubl": [173, 280, 464], "c_longdoubl": 173, "c_char_p": [173, 464], "c_wchar_p": 173, "c_void_p": 173, "140018365411392": 173, "65533": 173, "c_": 173, "139966785747344": 173, "139966783348904": 173, "x00lo": 173, "c_buffer": 173, "beer": 173, "1234": [173, 183, 256, 310, 326, 341, 375, 395, 439, 465, 469, 475], "140000": [173, 342], "arm64": [173, 479], "inhibit": [173, 247, 311], "_as_parameter_": 173, "200000": [173, 364], "37": [173, 242, 315, 341, 342, 379, 403, 448, 463, 466, 468, 469, 470, 477, 478, 479], "000000": [173, 180, 461], "from_param": 173, "typecheck": [173, 383], "restyp": [173, 464], "1150640792": 173, "strchr": 173, "8059983": 173, "validhandl": 173, "winerror": [173, 210], "486539264": 173, "silli": [173, 289, 387], "126": [173, 256, 379, 478], "errcheck": 173, "byref": [173, 465], "sscanf": 173, "1400001049": 173, "_fields_": [173, 280, 341], "upperleft": 173, "lowerright": 173, "ofs": 173, "_pack_": 173, "pragma": 173, "bigendianstructur": [173, 341], "littleendianstructur": 173, "bigendianunion": 173, "littleendianunion": 173, "first_16": 173, "second_16": 173, "tenpointsarraytyp": 173, "artifici": [173, 350, 410, 425, 447, 471, 474], "mystruct": [173, 280], "point_arrai": 173, "arr": [173, 280, 441], "pt": 173, "teninteg": 173, "c_long_array_10": 173, "oor": 173, "scene": [173, 381, 437, 443, 458], "lp_c_long": 173, "null_ptr": 173, "c_byte_array_4": 173, "c1": [173, 341], "c2": 173, "cfunctyp": 173, "winfunctyp": 173, "qsort": 173, "intarray5": 173, "ia": 173, "cmpfunc": 173, "py_cmp_func": 173, "cmp_func": 173, "in_dll": 173, "pythonapi": [173, 464], "0x30c00a0": 173, "struct_frozen": 173, "get_cod": [173, 247, 420, 474], "frozent": 173, "_pyimport_frozenbootstrap": 173, "_frozen_importlib": [173, 280], "31764": 173, "_frozen_importlib_extern": 173, "41499": 173, "__hello__": 173, "p1": [173, 258, 281, 345, 424, 463, 470, 475], "hm": 173, "temp0": 173, "temp1": 173, "short_arrai": 173, "find_librari": [173, 476], "dylib": 173, "ldconfig": 173, "objdump": 173, "ld_library_path": [173, 476], "libm": [173, 453], "libbz2": 173, "agl": 173, "default_mod": 173, "use_errno": [173, 465], "use_last_error": [173, 465], "winmod": [173, 478], "dumpbin": 173, "succeed": [173, 246, 333, 334, 385, 424, 440, 463], "pydll": 173, "manpag": [173, 290, 334, 476], "rtld_now": [173, 290, 473], "setlasterror": 173, "hijack": 173, "rtld_global": [173, 290, 349, 473, 478], "rtld_local": [173, 290, 473, 478], "_handl": 173, "prefabr": 173, "libraryload": 173, "dlltype": 173, "pyfunctyp": 173, "func_spec": 173, "paramflag": 173, "name_or_ordin": 173, "vtbl_index": 173, "iid": [173, 373], "messageboxw": 173, "winuserapi": 173, "winapi": [173, 329, 345], "hwnd": 173, "lptext": 173, "lpcaption": 173, "uint": 173, "utyp": 173, "wintyp": 173, "caption": 173, "getwindowrect": 173, "lprect": 173, "obj_or_typ": 173, "init_or_s": 173, "dllcanunloadnow": 173, "_ctype": [173, 423, 466, 477], "dllgetclassobject": 173, "find_msvcrt": 173, "formaterror": [173, 268], "lasterror": [173, 465], "memmov": [173, 465], "enlarg": 173, "_cdata": 173, "_object": 173, "from_buff": [173, 465], "from_buffer_copi": [173, 465], "from_address": 173, "_b_base_": 173, "_b_needsfree_": 173, "_simplecdata": 173, "c_int8": 173, "c_int16": 173, "c_int32": 173, "c_int64": 173, "c_uint8": 173, "c_uint16": 173, "c_uint32": 173, "c_uint64": 173, "py_object": [173, 464], "wparam": 173, "dword": 173, "pnext": 173, "_anonymous_": 173, "_u": 173, "lptdesc": 173, "typedesc": 173, "lpadesc": 173, "arraydesc": 173, "hreftyp": 173, "vt": [173, 175, 383, 432], "vartyp": 173, "td": [173, 180], "vt_ptr": 173, "some_typ": 173, "_length_": 173, "_type_": 173, "_pointer": 173, "a_norm": 174, "baudrat": 174, "beep": [174, 403, 445, 476], "driver": [174, 190, 209, 227, 290, 292, 334, 359, 402, 403, 413, 462], "color_cont": [174, 469], "color_numb": 174, "pair_numb": 174, "a_": 174, "def_prog_mod": 174, "reset_prog_mod": 174, "def_shell_mod": 174, "reset_shell_mod": 174, "delay_output": 174, "ground": 174, "erasechar": 174, "cup": 174, "cud": 174, "cud1": 174, "cuu1": 174, "cuu": 174, "vpa": 174, "cr": [174, 175, 205, 432, 477], "confin": [174, 190], "bell": [174, 175, 366, 432, 464], "flushinp": 174, "typeahead": 174, "getmous": 174, "key_mous": 174, "bstate": 174, "buttonn_press": 174, "buttonn_releas": 174, "buttonn_click": 174, "buttonn_double_click": 174, "buttonn_triple_click": 174, "button_shift": 174, "button_ctrl": 174, "button_alt": 174, "button5_": [174, 469], "getsyx": 174, "getwin": 174, "putwin": 174, "has_extended_color_support": [174, 469], "256color": 174, "has_ic": 174, "has_il": 174, "region": [174, 244, 275, 279, 281, 290, 316, 366, 373, 381, 437, 465, 468, 470], "init_color": [174, 469], "fg": [174, 258, 341, 366, 373], "bg": [174, 366, 373, 381], "use_default_color": [174, 463], "is_term_res": 174, "nline": [174, 185], "ncol": 174, "resize_term": 174, "isendwin": 174, "deiniti": 174, "keynam": 174, "alt": [174, 175, 237, 244, 373, 459], "killchar": 174, "longnam": [174, 355], "terminfo": 174, "mouseinterv": 174, "elaps": [174, 266, 280, 290, 305, 326, 334, 362, 363, 385, 472], "mousemask": 174, "availmask": 174, "oldmask": 174, "napm": 174, "pminrow": 174, "pmincol": 174, "sminrow": 174, "smincol": 174, "smaxrow": 174, "smaxcol": 174, "nl": [174, 175, 237, 334, 374, 375, 391, 423, 432, 465], "nonl": 174, "vertic": [174, 175, 229, 244, 294, 341, 342, 361, 366, 369, 371, 372, 373, 381, 424, 431, 432], "noqiflush": 174, "intr": 174, "susp": 174, "noraw": 174, "pair_cont": [174, 469], "putp": 174, "tput": 174, "putchar": 174, "qiflush": 174, "resetti": 174, "savetti": 174, "resizeterm": 174, "sigwinch": [174, 330], "get_escdelai": [174, 479], "set_escdelai": [174, 479], "get_tabs": [174, 479], "set_tabs": [174, 479], "setsyx": 174, "setupterm": 174, "termattr": 174, "termnam": 174, "tigetflag": 174, "capnam": 174, "tigetnum": 174, "tigetstr": 174, "tparm": 174, "4h": [174, 344], "breakout": 174, "unctrl": [174, 175], "ungetch": [174, 279], "update_lines_col": [174, 475], "unget_wch": [174, 473], "get_wch": [174, 473], "ungetmous": 174, "use_env": 174, "newterm": 174, "subwindow": 174, "addnstr": 174, "segfault": [174, 463, 464, 476, 477], "20190511": 174, "stuck": 174, "attroff": 174, "attron": 174, "attrset": 174, "bkgd": 174, "bkgdset": 174, "bl": 174, "acs_vlin": 174, "acs_hlin": 174, "acs_urcorn": 174, "acs_llcorn": 174, "acs_lrcorn": 174, "vertch": 174, "horch": 174, "chgat": [174, 465], "touchlin": 174, "redisplai": [174, 317, 462], "repaint": 174, "clearok": 174, "clrtobot": 174, "clrtoeol": 174, "cursyncup": 174, "delch": 174, "deleteln": 174, "derwin": 174, "subwin": 174, "echochar": 174, "getbegyx": 174, "getbkgd": 174, "getmaxyx": 174, "getparyx": 174, "getyx": 174, "hline": 174, "idcok": 174, "idlok": 174, "immedok": 174, "degrad": [174, 472], "wrefresh": 174, "inch": [174, 366], "insch": 174, "insdelln": 174, "insertln": 174, "insnstr": 174, "insstr": 174, "instr": [174, 188, 359, 474], "is_linetouch": 174, "is_wintouch": 174, "new_i": 174, "new_x": 174, "mvderwin": 174, "mvwin": 174, "notimeout": 174, "overlai": 174, "destwin": 174, "dminrow": 174, "dmincol": 174, "dmaxrow": 174, "dmaxcol": 174, "redrawln": 174, "beg": 174, "redrawwin": 174, "rendit": 174, "scrollok": 174, "setscrreg": 174, "standend": 174, "standout": 174, "subpad": 174, "syncdown": 174, "syncok": 174, "syncup": 174, "touchwin": 174, "untouchwin": 174, "vline": 174, "__version__": [174, 187, 242, 385, 473, 475, 479], "ncurses_vers": [174, 478], "a_altcharset": 174, "dim": 174, "a_invi": 174, "a_ital": 174, "a_protect": 174, "a_horizont": 174, "a_left": 174, "a_low": 174, "a_right": 174, "a_top": 174, "a_vert": 174, "a_attribut": 174, "a_chartext": 174, "a_color": 174, "key_": 174, "keycap": 174, "key_min": 174, "key_break": 174, "key_down": 174, "arrow": [174, 244, 294, 372, 373, 381, 440], "key_right": 174, "key_backspac": 174, "key_f0": 174, "key_fn": 174, "key_dl": 174, "key_il": 174, "key_dc": 174, "key_ic": 174, "key_eic": 174, "key_clear": 174, "key_eo": 174, "key_eol": 174, "key_sf": 174, "key_sr": 174, "key_npag": 174, "key_stab": 174, "key_ctab": 174, "key_catab": 174, "key_ent": 174, "key_sreset": 174, "key_reset": 174, "key_print": 174, "key_ll": 174, "key_a1": 174, "key_a3": 174, "key_b2": 174, "key_c1": 174, "key_c3": 174, "key_btab": 174, "key_beg": 174, "key_cancel": 174, "key_clos": 174, "key_command": 174, "key_copi": 174, "key_creat": 174, "key_end": 174, "key_exit": 174, "key_find": 174, "key_help": 174, "key_mark": 174, "key_messag": 174, "key_mov": 174, "key_next": 174, "key_open": 174, "key_opt": 174, "key_previ": 174, "prev": [174, 373], "key_redo": 174, "redo": [174, 244], "key_refer": 174, "key_refresh": 174, "key_replac": 174, "key_restart": 174, "key_resum": 174, "key_sav": 174, "key_sbeg": 174, "key_scancel": 174, "key_scommand": 174, "key_scopi": 174, "key_screat": 174, "key_sdc": 174, "key_sdl": 174, "key_select": 174, "key_send": 174, "key_seol": 174, "key_sexit": 174, "key_sfind": 174, "key_shelp": 174, "key_shom": 174, "key_sic": 174, "key_sleft": 174, "key_smessag": 174, "key_smov": 174, "key_snext": 174, "key_sopt": 174, "key_sprevi": 174, "key_sprint": 174, "key_sredo": 174, "key_sreplac": 174, "key_sright": 174, "key_srsum": 174, "key_ssav": 174, "key_ssuspend": 174, "key_sundo": 174, "key_suspend": 174, "key_undo": 174, "key_res": 174, "key_max": 174, "key_f1": 174, "key_f2": 174, "key_f3": 174, "key_f4": 174, "twelv": [174, 373], "crude": 174, "acs_bbss": 174, "acs_block": 174, "solid": [174, 473, 474], "acs_board": 174, "acs_bsb": 174, "acs_bssb": 174, "acs_bsss": 174, "acs_bte": 174, "acs_bullet": 174, "bullet": [174, 296], "acs_ckboard": 174, "stippl": 174, "acs_darrow": 174, "acs_degre": 174, "acs_diamond": 174, "acs_gequ": 174, "acs_lantern": 174, "lantern": 174, "acs_larrow": 174, "acs_lequ": 174, "acs_lte": 174, "acs_nequ": 174, "acs_pi": 174, "acs_plu": 174, "acs_rarrow": 174, "acs_rte": 174, "acs_s1": 174, "acs_s3": 174, "acs_s7": 174, "acs_s9": 174, "acs_sbb": 174, "acs_sbsb": 174, "acs_sbss": 174, "acs_ssbb": 174, "acs_ssb": 174, "acs_sssb": 174, "acs_ssss": 174, "crossov": 174, "acs_sterl": 174, "pound": [174, 187, 435], "sterl": 174, "acs_tte": 174, "acs_uarrow": 174, "color_blu": 174, "color_cyan": 174, "greenish": 174, "color_green": 174, "color_magenta": 174, "purplish": 174, "color_yellow": 174, "netscap": [174, 240, 268, 400, 460, 463, 465, 471], "bbedit": [174, 456], "framemak": 174, "uli": 174, "ulx": 174, "lry": 174, "lrx": 174, "stripspac": 174, "do_command": 174, "land": [174, 286], "soh": 175, "stx": 175, "etx": 175, "enq": 175, "enquiri": 175, "bel": [175, 432], "ht": [175, 340, 381], "ff": [175, 187, 222, 316, 432], "dle": 175, "dc1": 175, "xon": 175, "dc2": 175, "dc3": 175, "xoff": 175, "dc4": 175, "nak": 175, "syn": 175, "etb": 175, "em": [175, 316], "esc": 175, "sp": [175, 232, 237], "mnemon": [175, 265, 338, 373, 461], "teleprint": 175, "predat": [175, 187, 280, 391], "isalpha": [175, 341], "isdigit": [175, 323, 341], "islow": [175, 323, 341], "isascii": [175, 341, 477], "isblank": 175, "iscntrl": 175, "0x1f": [175, 469, 471], "0x7f": [175, 341], "isgraph": 175, "ispunct": 175, "isspac": [175, 341], "isxdigit": 175, "hexdigit": [175, 278, 342, 432], "isctrl": 175, "ismeta": 175, "anded": 175, "ored": 175, "controlnam": 175, "thirti": [175, 313], "bottom_panel": 176, "new_panel": 176, "top_panel": 176, "update_panel": 176, "set_userptr": 176, "userptr": 176, "557": [178, 379, 477], "inventoryitem": 178, "unit_pric": 178, "quantity_on_hand": 178, "total_cost": 178, "unsafe_hash": [178, 383], "match_arg": [178, 383], "kw_onli": [178, 383, 469], "weakref_slot": 178, "dunder": [178, 432, 478], "nonetheless": [178, 245], "__match_args__": [178, 424, 425, 438, 469], "__weakref__": [178, 399, 425], "class_or_inst": 178, "classvar": [178, 383, 470, 476], "initvar": 178, "asdict": 178, "dict_factori": [178, 337], "astupl": 178, "tuple_factori": 178, "make_dataclass": 178, "cls_name": [178, 208], "add_on": 178, "__post_init__": 178, "forewarn": 178, "is_dataclass": 178, "is_dataclass_inst": 178, "frozeninstanceerror": 178, "databasetyp": 178, "my_databas": 178, "intconversiondescriptor": 178, "_default": 178, "datetyp": 180, "differenti": [180, 183, 317, 392, 469, 472, 473, 476, 479], "categor": [180, 289, 316, 397, 427], "polit": [180, 220, 459], "daylight": [180, 206, 363, 422, 479], "metr": 180, "mile": 180, "est": [180, 363, 472, 476], "edt": [180, 363, 473, 476], "minyear": 180, "maxyear": 180, "customiz": [180, 366, 442, 466], "utcoffset": 180, "29000": 180, "29156": 180, "tiebreak": 180, "t1": [180, 183, 258, 383, 396], "t2": [180, 183, 258, 383, 396], "t3": [180, 183, 289, 383], "uuuuuu": 180, "68400": 180, "total_second": [180, 466], "270": [180, 381], "another_year": 180, "84": [180, 340, 476, 478], "31536000": 180, "ten_year": 180, "3650": 180, "nine_year": 180, "3285": 180, "three_year": 180, "1095": [180, 285], "2038": [180, 363], "fromordin": [180, 477], "toordin": 180, "fromisoformat": [180, 337, 470, 477], "date_str": 180, "yyyi": [180, 245], "yyyyyi": 180, "dd": [180, 245, 258, 289], "ooo": [180, 432], "2019": [180, 340, 452, 478], "20191204": 180, "2021": [180, 423, 465, 469], "w01": 180, "fromisocalendar": [180, 478], "isocalendar": [180, 478, 479], "date2": 180, "date1": 180, "timetupl": 180, "struct_tim": [180, 245, 268, 363, 476], "ydai": 180, "isocalendard": 180, "mktime": [180, 206, 363, 472], "2007": [180, 366, 423, 465], "my_birthdai": 180, "time_to_birthdai": 180, "730920": 180, "730920th": 180, "70th": 180, "tz": [180, 359, 363, 422, 471], "gettimeofdai": [180, 363], "utcnow": [180, 471], "utcfromtimestamp": [180, 338, 471], "2011": [180, 200, 338, 410, 423, 425, 452, 472], "20111104": 180, "04t00": 180, "23z": 180, "20111104t000523": 180, "2t00": 180, "283000": 180, "14400": 180, "datetime2": 180, "datetime1": 180, "comparand": 180, "timetz": 180, "astimezon": [180, 187, 422, 473, 476, 478], "astz": 180, "dt": [180, 206, 416, 422, 479], "fromutc": 180, "tm_isdst": [180, 363], "utctimetupl": 180, "spill": 180, "timespec": [180, 476], "ddthh": 180, "ffffff": [180, 381], "132263": 180, "18t15": 180, "27t00": 180, "000100": 180, "25t00": 180, "01t12": 180, "79043": 180, "79060": 180, "325": [180, 183, 464], "30pm": 180, "kabul": 180, "afghanistan": 180, "1945": 180, "thereaft": [180, 244, 263, 392, 445], "kabultz": 180, "utc_move_d": 180, "1944": 180, "pep495": 180, "tz1": 180, "dt1": 180, "dt2": 180, "dt3": 180, "midnight": [180, 266, 465, 472, 475], "obscur": [180, 190, 386, 465, 474, 475, 477], "13936": [180, 475], "time_str": 180, "t04": 180, "t042301": 180, "000384": 180, "01z": 180, "123456": 180, "geograph": 180, "dston": 180, "dstoff": 180, "america": [180, 422, 423, 466, 479], "york": 180, "straddl": 180, "dtoff": 180, "dtdst": 180, "tzinfo_exampl": 180, "_time": 180, "stdoffset": 180, "dstoffset": 180, "altzon": [180, 363], "dstdiff": 180, "localtimezon": 180, "stamp": [180, 381, 437, 462, 463], "dst_diff": 180, "_isdst": 180, "first_sunday_on_or_aft": 180, "days_to_go": 180, "olson": 180, "pytz": 180, "twinsun": 180, "2am": 180, "dststart_2007": 180, "dstend_2007": 180, "dststart_1987_2006": 180, "dstend_1987_2006": 180, "1967": [180, 381, 466], "dststart_1967_1986": 180, "dstend_1967_1986": 180, "us_dst_rang": 180, "dststart": 180, "dstend": 180, "1966": 180, "ustimezon": 180, "reprnam": 180, "stdname": [180, 305], "dstname": [180, 329], "gap": [180, 266, 268, 472], "std_time": 180, "dst_time": 180, "cst": 180, "cdt": 180, "mountain": [180, 423], "mst": 180, "mdt": 180, "pacif": [180, 422], "pst": [180, 422, 479], "pdt": [180, 422, 479], "0500": [180, 206], "u0": [180, 476], "tzdata": [180, 422, 479], "globe": 180, "civil": 180, "59pm": 180, "en_u": [180, 475], "de_d": [180, 263, 475], "sonntag": 180, "montag": 180, "samstag": 180, "dez": 180, "januar": 180, "februar": 180, "dezemb": 180, "0002": 180, "2014": [180, 338, 465, 466, 474], "9998": [180, 476], "pm": [180, 190, 263, 294, 349, 363], "000001": 180, "hhmm": [180, 245, 363], "0400": [180, 473], "1030": 180, "063415": 180, "030712": 180, "345216": 180, "002": [180, 305, 341], "1988": [180, 187, 355, 465], "c89": [180, 465], "broadli": [180, 383, 466], "01t00": 180, "0330": 180, "japan": [180, 263], "jst": 180, "gent": 180, "oracl": [181, 337, 464, 473], "whichdb": [181, 467], "unread": [181, 296, 392, 468, 475], "cabl": 181, "open_flag": 181, "firstkei": 181, "nextkei": 181, "reorgan": [181, 191, 460, 465, 468, 470, 476, 478], "unwritten": 181, "pag": 181, "dumbdbm": [181, 467], "breakdown": [182, 183], "bottleneck": [182, 223, 468], "intrus": 182, "paramount": 183, "3000000000000003": 183, "5511151231257827e": 183, "017": 183, "customari": [183, 361, 423, 447, 452], "monetari": [183, 263, 464, 477], "schoolbook": 183, "multiplicand": [183, 449], "5600": 183, "getcontext": [183, 449, 463], "prec": [183, 449, 463, 464, 465], "142857": [183, 190], "1428571428571428571428571429": [183, 463], "modest": [183, 448], "inexact": [183, 290, 441, 473], "prejudic": 183, "unround": 183, "coeffici": [183, 258, 272, 340, 341, 342, 462, 474], "round_ceil": [183, 463], "round_down": [183, 463], "round_floor": 183, "round_half_down": 183, "round_half_even": [183, 463], "round_half_up": 183, "round_up": 183, "round_05up": 183, "clamp": [183, 472, 473], "invalidoper": [183, 463, 465, 466, 473], "divisionbyzero": [183, 463], "subnorm": 183, "floatoper": [183, 473], "sticki": [183, 339, 355, 373], "emin": [183, 473], "emax": [183, 473], "140000000000000124344978758017532527446746826171875": 183, "4142135623730951": 183, "414213562373095048801688724": 183, "1415926535": 183, "7182818285": 183, "85987": 183, "85988": 183, "1e9999999999999999999": 183, "circu": [183, 222, 436], "87": [183, 245, 340, 345], "5058": 183, "718281828459045235360287471": [183, 465], "ln": [183, 244, 465, 473], "302585092994045684017991455": 183, "quantiz": [183, 473], "setcontext": 183, "basiccontext": [183, 473], "extendedcontext": [183, 473], "myothercontext": 183, "142857142857142857142857142857142857142857142857142857142857": 183, "142857143": [183, 463], "143": [183, 245, 379, 381, 461], "clear_flag": 183, "355": [183, 218], "113": [183, 218, 446], "14159292": 183, "112": [183, 340, 379, 469, 478, 479], "snan": [183, 466], "devan\u0101gar\u012b": 183, "fullwidth": 183, "uff10": 183, "uff19": 183, "losslessli": [183, 187, 425, 441, 471, 472], "100000000000000088817841970012523233890533447265625": [183, 468, 472], "00000": 183, "321e": 183, "as_integer_ratio": [183, 218, 341, 441, 465, 476, 478], "denomin": [183, 218, 286, 341, 441, 465, 476, 478], "157": [183, 476], "as_tupl": [183, 465], "decimaltupl": 183, "compare_sign": 183, "compare_tot": 183, "unaffect": [183, 329, 363, 425, 433, 452, 462, 465, 476], "compare_total_mag": 183, "copy_ab": 183, "conjug": [183, 286, 341, 465], "copy_neg": 183, "copy_sign": 183, "561702493119680037517373933e": 183, "139": [183, 379, 461], "from_float": [183, 218, 441, 466, 468, 472], "0x1": [183, 341, 441, 465, 468, 469, 471], "999999999999ap": 183, "1000000000000000055511151231257827021181583404541015625": [183, 441, 466], "fma": 183, "fuse": 183, "is_canon": [183, 466], "is_finit": 183, "is_infinit": 183, "is_nan": 183, "is_norm": [183, 384, 478], "is_qnan": 183, "is_sign": 183, "is_snan": 183, "is_subnorm": 183, "is_zero": 183, "logb": 183, "logical_and": 183, "logical_invert": 183, "logical_or": 183, "logical_xor": 183, "max_mag": 183, "min_mag": 183, "next_minu": 183, "next_plu": 183, "next_toward": 183, "closest": [183, 218, 222, 272, 424, 441, 465, 466, 471], "321000e": 183, "number_class": 183, "41421356": 183, "etini": 183, "remainder_near": 183, "same_quantum": 183, "scaleb": 183, "to_eng_str": [183, 463], "123e": 183, "23e": 183, "to_integr": 183, "to_integral_valu": 183, "to_integral_exact": 183, "localcontext": [183, 341, 464, 465], "calculate_someth": 183, "halt": [183, 209, 289, 293, 385, 438, 474], "defaultcontext": [183, 473], "max_prec": [183, 473], "min_emin": [183, 473], "max_emax": [183, 473], "02e": 183, "weaker": [183, 460], "999": [183, 281], "create_decim": [183, 465, 473], "23e999": 183, "23000e": 183, "clear_trap": 183, "copy_decim": 183, "4445": 183, "0023": 183, "create_decimal_from_float": 183, "etop": 183, "recount": 183, "divide_int": 183, "qnan": 183, "msd": 183, "xor": [183, 208, 288, 341, 427], "to_sci_str": [183, 463], "425000000": [183, 473], "999999999999999999": [183, 473], "min_etini": 183, "849999999": 183, "1999999999999999997": 183, "have_thread": [183, 473], "have_contextvar": [183, 453], "decimalexcept": 183, "inward": 183, "outward": 183, "stricter": [183, 386, 459, 460, 464, 470, 473, 475, 477], "amplifi": 183, "seminumer": 183, "11111113": 183, "11111111": [183, 341], "51111111": 183, "5111111": 183, "20000": [183, 364], "0000003": 183, "0060000": 183, "affin": 183, "indetermin": [183, 349, 373, 397, 405, 440], "854": [183, 356], "accustom": 183, "0e": 183, "1000026": 183, "applicationwid": 183, "moneyfmt": 183, "curr": 183, "dp": 183, "trailneg": 183, "monei": [183, 345], "currenc": [183, 263, 464], "1234567": [183, 218, 449, 468], "8901": [183, 479], "568": 183, "123456789": 183, "141592653589793238462643383": 183, "na": [183, 323, 469, 470, 471, 478, 479], "da": [183, 258, 316, 475, 476], "389056098930650227230427461": 183, "38905609893": 183, "0j": [183, 222, 341, 416], "taylor": [183, 465], "8775825618903727161162815826": 183, "87758256189": 183, "4794255386042030002732879352": 183, "479425538604": 183, "twoplac": 183, "214": [183, 305], "72": [183, 244, 258, 340, 381, 463, 464], "105": [183, 340], "4314": 183, "2e2": 183, "2e": 183, "1416": [183, 439], "00005": 183, "remove_expon": 183, "5e": [183, 344], "141592653589793115997963468544185161590576171875": 183, "spuriou": [183, 293, 330, 468], "ill": [183, 301, 472, 477], "104": [183, 340, 472, 478, 479], "23456789": 183, "2345678": 183, "2345": 183, "pypy3": 183, "karatsuba": [183, 462], "bignum": [183, 341, 473], "904625697166532776746648320380374280103671755200316906558262375061821325312": 183, "overalloc": [183, 341, 478], "8gb": 183, "500mb": 183, "maxdigit": [183, 349], "getsizeof": [183, 349, 359, 379, 447, 465, 470], "524288112": 183, "tighter": [183, 424, 463, 473], "sigsegv": [185, 211, 330, 452, 473], "sigfp": [185, 211, 330, 452, 473], "sigabrt": [185, 211, 290, 330, 452, 473], "sigbu": [185, 211, 330, 452, 473], "sigil": [185, 211, 330, 452, 473], "iobas": [185, 187, 210, 212, 255, 375, 452, 478], "readm": [185, 220, 244, 255, 293, 453, 457, 458, 459, 472, 476, 477], "269": 185, "unclos": [185, 244, 337, 469, 472, 476], "rst": [185, 293, 453, 457, 477], "18748": [185, 478], "modal": [186, 367, 370], "askfloat": 186, "askinteg": 186, "askstr": 186, "buttonbox": [186, 372], "initialdir": 186, "initialfil": 186, "defaultextens": 186, "askopenfil": 186, "asksaveasfil": 186, "savea": 186, "askopenfilenam": 186, "asksaveasfilenam": 186, "askdirectori": 186, "mustexist": 186, "cancel_command": 186, "dirs_double_ev": 186, "dirs_select_ev": 186, "files_double_ev": 186, "files_select_ev": 186, "filter_command": 186, "get_filt": 186, "get_select": 186, "dir_or_fil": 186, "curdir": [186, 213, 290, 291, 329, 366], "ok_ev": 186, "set_filt": 186, "set_select": 186, "loadfiledialog": 186, "ok_command": 186, "savefiledialog": 186, "ratcliff": 187, "obershelp": 187, "gestalt": 187, "longest": [187, 233, 256, 258, 291, 432, 461, 464, 475], "junk": [187, 280, 285, 345], "cubic": 187, "autojunk": 187, "intralin": 187, "htmldiff": [187, 463, 475], "tabsiz": [187, 341, 361], "wrapcolumn": 187, "linejunk": 187, "charjunk": 187, "is_character_junk": 187, "make_fil": [187, 475], "fromlin": 187, "tolin": 187, "fromdesc": 187, "todesc": 187, "numlin": 187, "hyperlink": 187, "make_t": 187, "context_diff": 187, "fromfiled": 187, "tofiled": 187, "lineterm": 187, "uniformli": [187, 252, 315], "eggi": 187, "hamster": 187, "get_close_match": 187, "cutoff": 187, "appel": 187, "peach": 187, "puppi": 187, "pineappl": 187, "is_line_junk": 187, "constitut": [187, 256, 328, 391, 423, 469], "nois": [187, 289, 290, 340], "ntwo": 187, "nthree": 187, "ore": 187, "ntree": 187, "nemu": 187, "emu": 187, "unified_diff": 187, "diff_byt": [187, 475], "dfunc": 187, "metzen": 187, "dr": [187, 220, 361, 472], "dobb": 187, "journal": 187, "isjunk": 187, "synch": 187, "bjunk": [187, 474], "bpopular": [187, 474], "b2j": 187, "set_seq": 187, "set_seq2": 187, "set_seq1": 187, "find_longest_match": 187, "alo": 187, "ahi": 187, "blo": 187, "bhi": 187, "get_matching_block": [187, 464], "abxcd": 187, "get_opcod": 187, "j1": [187, 457], "j2": 187, "qabxcd": 187, "abycdf": 187, "get_grouped_opcod": 187, "cluster": [187, 222, 334, 340, 452, 465], "quick_ratio": 187, "real_quick_ratio": 187, "tide": [187, 372], "diet": 187, "bcde": [187, 258, 466], "volatil": [187, 281], "text1": 187, "text2": 187, "flat": [187, 198, 201, 366, 373, 409], "interlin": 187, "file_mtim": 187, "st_mtime": [187, 231, 290, 293, 339, 355, 462], "fromdat": 187, "todat": 187, "tf": [187, 472], "file1": [187, 387, 466], "file2": [187, 387, 466], "r1": [187, 239, 381, 391], "r2": [187, 239, 381, 391], "ndiff_output": 187, "file1_or_file2": 187, "sed": 187, "sprai": 187, "fcompar": 187, "f1name": 187, "f2name": 187, "qr": 187, "noisi": [187, 289], "qseen": 187, "rseen": 187, "whichfil": 187, "show_cach": 188, "alist": [188, 301, 425], "disassembli": [188, 261, 297, 359, 477], "load_glob": [188, 478], "load_fast": [188, 474], "reciev": 188, "first_lin": 188, "current_offset": [188, 474], "analys": 188, "get_instruct": [188, 474], "from_traceback": [188, 474], "codeobj": 188, "code_info": [188, 472], "show_cod": [188, 472, 474], "distb": [188, 474], "lasti": 188, "disco": 188, "findlinestart": 188, "co_lin": [188, 425, 469], "co_firstlineno": [188, 252, 425], "co_lnotab": [188, 252, 425, 469, 471, 476], "findlabel": 188, "stack_effect": [188, 474], "oparg": [188, 471], "argval": [188, 359], "argrepr": 188, "starts_lin": 188, "is_jump_target": 188, "nop": [188, 356, 438], "pop_top": 188, "end_for": 188, "end_send": [188, 471], "quicken": [188, 470], "unary_neg": 188, "unary_not": 188, "unary_invert": 188, "get_it": 188, "get_yield_from_it": 188, "binary_op": [188, 470], "lh": 188, "binary_subscr": 188, "store_subscr": 188, "delete_subscr": 188, "binary_slic": [188, 471], "store_slic": [188, 471], "get_await": 188, "co_iterable_coroutin": [188, 252], "get_ait": 188, "get_anext": 188, "end_async_for": [188, 478], "cleanup_throw": [188, 471], "before_async_with": 188, "set_add": 188, "list_append": [188, 463], "map_add": [188, 478], "return_const": [188, 471], "consti": 188, "co_const": [188, 252, 425], "yield_valu": 188, "setup_annot": [188, 476], "pop_except": 188, "push_exc_info": [188, 470], "check_exc_match": [188, 470], "check_eg_match": [188, 470], "with_except_start": 188, "context_manag": 188, "load_assertion_error": [188, 479], "load_build_class": 188, "__build_class__": [188, 447], "before_with": [188, 470], "get_len": 188, "match_map": 188, "match_sequ": 188, "match_kei": [188, 470], "store_nam": [188, 338], "namei": 188, "co_nam": [188, 252, 378, 425, 475], "store_fast": 188, "store_glob": 188, "delete_nam": 188, "unpack_sequ": 188, "unpack_ex": 188, "leftov": [188, 289], "extended_arg": 188, "store_attr": 188, "delete_attr": 188, "delete_glob": 188, "load_const": [188, 472, 474], "load_nam": [188, 472], "load_loc": [188, 471], "load_from_dict_or_deref": [188, 471], "load_from_dict_or_glob": [188, 471], "build_tupl": 188, "build_list": 188, "build_set": 188, "build_map": 188, "build_const_key_map": [188, 476], "build_str": [188, 476], "list_extend": 188, "set_upd": 188, "dict_upd": 188, "dict_merg": 188, "load_attr": [188, 469, 471], "load_super_attr": [188, 471], "compare_op": [188, 472, 479], "cmp_op": 188, "is_op": [188, 479], "contains_op": [188, 479], "import_nam": [188, 428], "import_from": [188, 428], "jump_forward": 188, "jump_backward": [188, 470], "jump_backward_no_interrupt": [188, 470], "pop_jump_if_tru": [188, 470], "pop_jump_if_fals": [188, 470, 472], "pop_jump_if_not_non": 188, "pop_jump_if_non": 188, "for_it": 188, "var_num": 188, "load_fast_check": [188, 471], "load_fast_and_clear": [188, 471], "delete_fast": 188, "make_cel": [188, 470], "load_closur": 188, "co_fastlocalnam": 188, "load_deref": 188, "load_classderef": [188, 471, 474], "store_deref": 188, "delete_deref": 188, "copy_free_var": [188, 470], "raise_vararg": 188, "kw_name": [188, 470], "call_function_ex": [188, 476], "push_nul": [188, 470], "load_method": [188, 471, 477], "make_funct": [188, 469, 476], "0x02": [188, 476], "0x08": [188, 425], "build_slic": 188, "format_valu": [188, 476], "fmt_spec": 188, "match_class": [188, 470], "return_gener": [188, 470], "have_argu": [188, 471], "hasarg": [188, 471], "call_intrinsic_1": [188, 471], "intrinsic_1_invalid": 188, "intrinsic_print": 188, "intrinsic_import_star": 188, "intrinsic_stopiteration_error": 188, "intrinsic_async_gen_wrap": 188, "aync": 188, "intrinsic_unary_posit": 188, "intrinsic_list_to_tupl": 188, "intrinsic_typevar": 188, "intrinsic_paramspec": 188, "intrinsic_typevartupl": 188, "intrinsic_subscript_gener": 188, "intrinsic_typealia": 188, "typealiastyp": [188, 383, 424, 433, 471], "call_intrinsic_2": [188, 471], "intrinsic2": 188, "intrinsic_2_invalid": 188, "intrinsic_prep_reraise_star": 188, "intrinsic_typevar_with_bound": 188, "intrinsic_typevar_with_constraint": 188, "intrinsic_set_function_type_param": 188, "__type_params__": [188, 341, 383, 424, 425, 426], "setup_fin": [188, 470], "setup_cleanup": 188, "setup_with": [188, 470], "pop_block": [188, 470], "jump_no_interrupt": 188, "undirect": 188, "min_pseudo_opcod": 188, "min_instrumented_opcod": 188, "opmap": 188, "hasconst": 188, "hasfre": 188, "hasnam": 188, "hasjrel": 188, "hasjab": 188, "hasloc": 188, "hascompar": 188, "hasexc": [188, 471], "expositori": 190, "265252859812191058636308480000000": 190, "ridicul": 190, "1e100": [190, 272, 427, 432], "1e300": 190, "testmod": [190, 448, 463, 468], "test_doctest": 190, "testfil": [190, 464], "giant": 190, "720": [190, 472, 478], "__test__": 190, "blanklin": [190, 463], "normalize_whitespac": 190, "trial": [190, 315, 340, 364, 462], "crumb": 190, "your_dict": 190, "rapidli": [190, 305], "verbatim": [190, 345, 406, 423], "ndetail": 190, "transcript": 190, "ignore_exception_detail": [190, 466], "tild": [190, 228, 291, 374], "dont_accept_true_for_1": 190, "dont_accept_blanklin": 190, "oop": [190, 440], "comparison_flag": 190, "report_udiff": [190, 463], "report_cdiff": [190, 463], "report_ndiff": [190, 463], "mismatch": [190, 210, 213, 264, 316, 331, 338, 410, 424, 460, 462, 464, 466, 475], "report_only_first_failur": 190, "fail_fast": [190, 474], "reporting_flag": 190, "register_optionflag": 190, "my_flag": 190, "directive_opt": 190, "on_or_off": 190, "directive_option_nam": 190, "hermion": 190, "harri": [190, 464], "7948648": 190, "0x00ac18f0": 190, "14285714285714285": [190, 443], "142857142857": 190, "contriv": 190, "utterli": [190, 467], "module_rel": 190, "optionflag": 190, "extraglob": 190, "raise_on_error": 190, "failure_count": 190, "test_count": 190, "slate": [190, 355, 429, 469, 470, 474, 475], "mortem": [190, 294, 349, 437, 471], "exclude_empti": 190, "run_docstring_exampl": 190, "nonam": [190, 419], "compileflag": 190, "systemat": 190, "my_module_with_doctest": 190, "addtest": [190, 385], "doctestsuit": [190, 385, 462, 475], "testsuit": [190, 359, 385, 462, 474, 475], "docfilesuit": [190, 464], "teardown": [190, 359, 385, 386, 387, 466], "failureexcept": [190, 385], "tear": [190, 385], "set_unittest_reportflag": 190, "test_find": 190, "doctestcas": 190, "testcas": [190, 359, 385, 386, 387, 423, 448, 466, 468, 470, 471, 472, 473, 474, 478], "docfilecas": 190, "runtest": [190, 385], "revolv": [190, 233], "exc_msg": 190, "format_exception_onli": [190, 378, 469], "get_doctest": 190, "get_exampl": 190, "report_start": 190, "report_success": 190, "report_unexpected_except": 190, "report_failur": 190, "clear_glob": 190, "report_": 190, "testresult": [190, 385, 466, 468, 473], "check_output": [190, 345, 466, 474], "output_differ": 190, "debugrunn": 190, "cont": 190, "script_from_exampl": 190, "testsourc": 190, "post_mortem": [190, 294, 465], "debug_src": 190, "sketch": [190, 240, 438, 451, 464, 465, 469], "unexpectedexcept": 190, "doctestfailur": 190, "invalu": [190, 316], "amaz": [190, 461], "skimp": 190, "prose": 190, "attitud": 190, "coher": [190, 223], "narr": 190, "blur": [190, 258], "_regrtest_top": 190, "2821": 191, "5322": [191, 193, 196, 198, 200, 202, 204, 205, 332], "6532": [191, 202, 204, 205, 475, 477], "2046": [191, 194, 199], "2047": [191, 199, 200, 205, 206, 232, 472], "2183": [191, 193, 202], "2231": [191, 193, 199, 202, 206], "subcompon": 191, "forego": [191, 423], "promot": [191, 233, 423, 438, 465, 470], "emailpolici": [191, 194, 200, 205, 473, 475], "offic": [191, 423], "input_charset": [192, 193], "default_charset": 192, "outright": 192, "header_encod": 192, "qp": 192, "body_encod": 192, "output_charset": [192, 193, 466, 470, 478], "input_codec": 192, "output_codec": 192, "get_body_encod": 192, "7bit": [192, 194, 195, 198, 200, 205, 268, 472, 473], "get_output_charset": 192, "header_encode_lin": 192, "maxlength": [192, 280], "add_charset": 192, "header_enc": 192, "body_enc": 192, "add_codec": 192, "add_alia": 192, "codecnam": 192, "rfc822": [193, 194, 201, 202, 203, 204, 245, 461, 463], "envelop": [193, 198, 202, 204, 245, 268, 332], "from_": [193, 268, 373], "as_str": [193, 198, 199, 202, 474], "unixfrom": [193, 198, 202, 474], "maxheaderlen": [193, 198, 202, 474], "max_line_length": [193, 202, 205, 473], "mangle_from_": [193, 198, 205, 475], "as_byt": [193, 197, 198, 202, 205, 248, 474], "bytesgener": [193, 194, 198, 202, 205, 332, 472], "__bytes__": [193, 198, 202, 341, 383, 425, 470, 474, 475], "is_multipart": [193, 196, 202, 204], "cte": [193, 194, 195, 200, 202, 205, 337], "get_content_maintyp": [193, 197, 202], "set_unixfrom": [193, 202], "get_unixfrom": [193, 202], "set_payload": [193, 203], "set_cont": [193, 194, 195, 197, 202, 204, 205], "get_payload": [193, 197, 201, 203, 472], "invalidbase64paddingdefect": [193, 196], "invalidbase64charactersdefect": [193, 196], "8bit": [193, 194, 195, 198, 199, 200, 204, 205, 472, 473], "get_cont": [193, 194, 197, 202, 205], "iter_part": [193, 202, 204], "set_charset": 193, "get_charset": [193, 202], "2822": [193, 199, 206, 239, 242, 268, 363, 448, 461], "bias": [193, 202, 315, 340, 462], "contravent": 193, "mymessag": [193, 202], "get_al": [193, 202, 206, 404], "extant": [193, 202], "roolz": [193, 202], "failobj": [193, 202], "add_head": [193, 202, 203, 386, 392, 404], "_param": [193, 202, 203, 404], "disposit": [193, 194, 200, 202, 245, 290, 330, 397, 404, 475], "bud": [193, 202, 404], "gif": [193, 202, 203, 228, 246, 366, 381, 404, 464], "fu\u00dfbal": [193, 202], "ppt": [193, 202], "fu": 193, "dfballer": 193, "replace_head": [193, 202], "maintyp": [193, 194, 197, 198, 200, 201, 202], "get_default_typ": [193, 202], "mandat": [193, 202, 245, 259, 316, 363, 476], "get_content_subtyp": [193, 202], "subpart": [193, 195, 196, 198, 201, 202, 203, 204], "set_default_typ": [193, 202], "get_param": [193, 206], "collapse_rfc2231_valu": [193, 206], "rawparam": 193, "set_param": [193, 202, 474], "requot": [193, 202], "del_param": [193, 202], "set_typ": 193, "make_": 193, "add_": [193, 194], "get_filenam": [193, 197, 202, 247, 420, 474], "get_boundari": [193, 202], "set_boundari": [193, 196, 202], "headerparseerror": [193, 196, 202], "get_content_charset": [193, 202], "get_content_disposit": [193, 202, 475], "deliveri": [193, 197, 202, 204, 268, 290, 315, 330, 334], "_structur": [193, 201, 202], "preambl": [193, 197, 202, 297], "armor": [193, 202], "epilogu": [193, 202], "clear_cont": [194, 202], "typ": [194, 245, 383, 471], "mimepart": [194, 202, 474], "add_get_handl": 194, "add_set_handl": 194, "typekei": 194, "raw_data_manag": [194, 205], "content_manag": [194, 202, 205, 474], "cid": [194, 197, 334], "headernam": 194, "headervalu": 194, "mimetext": [195, 203, 475], "_subtyp": [195, 203], "_charset": [195, 203, 227], "mimeaudio": [195, 203], "mimeimag": [195, 196, 197, 203], "encode_quopri": 195, "unprint": 195, "encode_base64": [195, 203], "drawback": [195, 249, 289, 477], "encode_7or8bit": 195, "encode_noop": 195, "messageerror": 196, "messageparseerror": [196, 268], "boundaryerror": 196, "multipartconversionerror": [196, 203], "add_payload": 196, "mimenonmultipart": [196, 203], "messagedefect": 196, "headerdefect": [196, 200], "noboundaryinmultipartdefect": 196, "startboundarynotfounddefect": 196, "closeboundarynotfounddefect": 196, "firstheaderlineiscontinuationdefect": 196, "misplacedenvelopeheaderdefect": 196, "missingheaderbodyseparatordefect": 196, "malformedheaderdefect": 196, "multipartinvariantviolationdefect": [196, 204], "invalidbase64lengthdefect": 196, "invaliddatedefect": 196, "textfil": 197, "send_messag": [197, 205, 332, 472, 475], "bytespars": [197, 198, 204, 472], "messagefil": 197, "uncommon": [197, 247, 337, 441, 464], "parsestr": [197, 204, 408, 409, 411, 459, 475], "someone_els": 197, "display_nam": [197, 200, 473], "reunion": 197, "pngfile": 197, "img_data": 197, "add_attach": [197, 202], "png": [197, 203, 237, 246, 366, 373], "abspath": [197, 291, 293, 396, 466], "isfil": [197, 291, 293, 355, 435, 472, 478], "guess_typ": [197, 242, 273, 404], "msgfile": 197, "message_from_binary_fil": [197, 204, 205, 472], "sanit": [197, 453], "guess_extens": [197, 273], "03d": [197, 264, 341], "make_msgid": [197, 206], "ayon": 197, "asperg": 197, "pour": 197, "d\u00e9jeuner": 197, "pep\u00e9": 197, "pew": 197, "pepe": 197, "penelop": 197, "pussycat": 197, "fabrett": 197, "salut": 197, "cela": 197, "ressembl": 197, "\u00e0": [197, 264], "yummli": 197, "roast": 197, "asparagu": 197, "epicuri": 197, "203718": 197, "asparagus_cid": 197, "add_altern": [197, 202], "href": [197, 235, 237, 239, 410, 466], "img": [197, 237], "peel": 197, "jpg": [197, 255, 291, 416, 449, 464], "add_rel": [197, 202], "jpeg": [197, 203, 246, 366, 443, 465], "magic_html_pars": 197, "html_text": 197, "partfil": 197, "preview": [197, 254], "useless": [197, 220, 386, 408, 469, 478], "get_bodi": [197, 202, 204], "preferencelist": [197, 202], "richest": 197, "content_typ": [197, 200], "iter_attach": [197, 202], "matthew": [197, 470, 474], "dixon": 197, "cowl": 197, "regener": [198, 308, 429, 453, 466, 471, 475, 476], "necess": 198, "smime": 198, "outfp": 198, "refold": [198, 205, 473], "rewrap": [198, 223], "manheaderlen": 198, "linesep": [198, 199, 200, 205, 222, 255, 290, 332, 345, 473], "cte_typ": [198, 200, 205, 473], "craft": [198, 296, 429, 443, 472], "amessag": 198, "transfer_encod": 198, "decodedgener": [198, 476], "part_info": 198, "_mangle_from_": 198, "refold_sourc": [198, 205, 473], "worldwid": [199, 232, 423], "slew": 199, "xf6stal": 199, "f6stal": 199, "maxlinelen": 199, "header_nam": [199, 392, 404], "continuation_w": 199, "splitchar": 199, "decode_head": [199, 285, 473], "decoded_str": 199, "make_head": [199, 473], "decoded_seq": 199, "header_factori": [200, 205, 473], "basehead": [200, 202], "unstructuredhead": 200, "max_count": [200, 205], "_myattr": 200, "myattr": 200, "unstructur": 200, "datehead": 200, "wild": [200, 433], "format_datetim": [200, 206, 473], "addresshead": 200, "singleaddresshead": 200, "uniqueunstructuredhead": 200, "mimeversionhead": 200, "parameterizedmimehead": 200, "supplement": [200, 210, 224, 290, 458, 465, 474], "contenttypehead": 200, "contentdispositionhead": 200, "content_disposit": 200, "contenttransferencod": 200, "base_class": 200, "default_class": 200, "use_default_map": 200, "uniquedatehead": 200, "resent": [200, 206, 268, 332], "uniquesingleaddresshead": 200, "uniqueaddresshead": 200, "bcc": [200, 332], "contenttransferencodinghead": 200, "messageidhead": 200, "map_to_typ": 200, "addr_spec": [200, 473], "5321": [200, 473], "body_line_iter": 201, "typed_subpart_iter": 201, "include_default": 201, "message_from_fil": [201, 204], "addtion": 202, "6531": [202, 205, 332, 475], "is_attach": 202, "make_rel": 202, "make_altern": 202, "make_mix": 202, "ordinarili": [203, 328], "dice": 203, "mimebas": 203, "_maintyp": 203, "nonmultipart": 203, "mimemultipart": 203, "_subpart": 203, "mimeappl": 203, "_data": [203, 223], "_encod": 203, "_audiodata": 203, "_imagedata": 203, "tiff": [203, 246, 366, 464], "pbm": [203, 246], "pgm": [203, 246, 366], "ppm": [203, 246, 366, 372], "rast": [203, 246], "xbm": [203, 246, 366, 372], "bmp": [203, 244, 246, 366, 473, 474, 477, 478], "webp": [203, 246, 366, 475], "exr": [203, 246], "mimemessag": 203, "_msg": 203, "thereof": [203, 222, 265, 266, 290, 359, 362, 423, 426, 440], "_text": 203, "cloth": 204, "bytesfeedpars": [204, 472], "conduc": 204, "_factori": 204, "message_factori": [204, 205, 476], "stitch": 204, "fed": [204, 232, 237, 280, 311, 410, 464], "bytesheaderpars": [204, 473], "headerpars": [204, 473], "_class": 204, "headersonli": 204, "parsebyt": 204, "message_from_byt": [204, 472], "message_from_str": [204, 473], "mybyt": 204, "dispar": 205, "settabl": [205, 244, 397, 459, 461], "mymsg": [205, 474], "compat_smtp": 205, "compat_strict": 205, "raise_on_defect": [205, 473], "compat_strict_smtp": 205, "commut": [205, 258, 471], "policy100": 205, "policy80": 205, "apolici": 205, "78": [205, 281, 473], "fold_binari": 205, "register_defect": 205, "handle_defect": 205, "header_max_count": 205, "faithfulli": [205, 342, 349], "header_source_pars": 205, "sourcelin": 205, "unfold": 205, "header_store_pars": 205, "header_fetch_pars": 205, "smtputf8": [205, 332, 475], "stype": 205, "rejoin": 205, "refold_head": 205, "somepolici": 205, "isdst": [206, 471], "idstr": 206, "strengthen": 206, "parseaddr": 206, "constitu": [206, 248, 407], "realnam": 206, "formataddr": [206, 473], "email_address": 206, "getaddress": 206, "fieldvalu": 206, "tos": 206, "resent_to": 206, "resent_cc": 206, "all_recipi": 206, "parsed": 206, "mailer": 206, "parsedate_tz": 206, "greenwich": [206, 363], "parsedate_to_datetim": [206, 473], "mktime_tz": 206, "formatd": [206, 463], "timev": 206, "usegmt": 206, "decode_rfc2231": 206, "encode_rfc2231": 206, "fallback_charset": 206, "decode_param": 206, "pipx": [207, 466, 474], "altinstal": [207, 453, 457, 466, 472, 474], "default_pip": 207, "nomenclatur": [208, 349], "reprenum": [208, 470], "enumcheck": [208, 470], "named_flag": 208, "nonmemb": [208, 470], "global_enum": [208, 470], "show_flag_valu": 208, "some_var": 208, "enummeta": [208, 425, 470, 471], "powersofthre": 208, "otherstyl": 208, "something_els": 208, "AND": [208, 256, 337, 423, 427], "_numeric_repr_": 208, "crimson": 208, "neon": 208, "0x18": 208, "strictflag": 208, "0b0": 208, "10100": 208, "00111": 208, "conformflag": 208, "ejectflag": 208, "keepflag": 208, "regexflag": [208, 316, 470, 477], "myintenum": 208, "errorcod": [209, 311], "eperm": [209, 210, 473], "enoent": [209, 210, 325, 473], "esrch": [209, 210], "eio": 209, "enxio": 209, "e2big": 209, "enoexec": 209, "ebadf": [209, 325, 476, 479], "echild": [209, 210], "eagain": [209, 210, 212, 290], "enomem": 209, "eacc": [209, 210, 212, 247, 473], "efault": 209, "enotblk": 209, "ebusi": 209, "eexist": [209, 210, 290], "exdev": [209, 290], "enodev": 209, "enotdir": [209, 210], "eisdir": [209, 210], "einval": [209, 290], "enfil": 209, "emfil": 209, "enotti": 209, "typewrit": 209, "etxtbsi": 209, "efbig": 209, "enospc": 209, "espip": 209, "erof": 209, "emlink": 209, "epip": [209, 210, 330], "edeadlk": 209, "enametoolong": 209, "enolck": 209, "enosi": 209, "enotempti": 209, "eloop": 209, "ewouldblock": [209, 210], "enomsg": 209, "eidrm": 209, "echrng": 209, "el2nsync": 209, "el3hlt": 209, "el3rst": 209, "elnrng": 209, "eunatch": 209, "enocsi": 209, "csi": 209, "el2hlt": 209, "ebad": 209, "ebadr": 209, "exful": 209, "enoano": 209, "anod": 209, "ebadrqc": 209, "ebadslt": 209, "edeadlock": 209, "ebfont": 209, "enostr": 209, "enodata": [209, 290], "etim": 209, "enosr": 209, "enonet": 209, "enopkg": 209, "eremot": 209, "enolink": 209, "eadv": 209, "advertis": [209, 285, 332, 338, 423, 465, 474, 475, 478], "esrmnt": 209, "srmount": 209, "ecomm": 209, "eproto": 209, "emultihop": 209, "multihop": 209, "edotdot": 209, "ebadmsg": 209, "eoverflow": 209, "enotuniq": 209, "ebadfd": 209, "eremchg": 209, "elibacc": 209, "elibbad": 209, "elibscn": 209, "elibmax": 209, "elibexec": 209, "eilseq": 209, "erestart": 209, "estrpip": 209, "euser": 209, "enotsock": 209, "edestaddrreq": 209, "emsgsiz": 209, "eprototyp": 209, "enoprotoopt": 209, "eprotonosupport": 209, "esocktnosupport": 209, "eopnotsupp": 209, "enotsup": 209, "epfnosupport": 209, "eafnosupport": 209, "eaddrinus": 209, "eaddrnotavail": 209, "enetdown": 209, "enetunreach": 209, "enetreset": 209, "econnabort": [209, 210], "econnreset": [209, 210], "enotconn": [209, 474], "eshutdown": [209, 210], "etoomanyref": 209, "splice": [209, 290, 469], "etimedout": [209, 210, 465], "econnrefus": [209, 210], "ehostdown": 209, "ehostunreach": 209, "ealreadi": [209, 210], "estal": 209, "stale": [209, 247, 474], "nf": [209, 290], "euclean": 209, "enotnam": 209, "xenix": 209, "enavail": 209, "eisnam": 209, "eremoteio": 209, "edquot": 209, "eqful": 209, "enotcap": [209, 210], "ecancel": 209, "eownerdead": 209, "enotrecover": 209, "recover": [209, 323, 412], "inappropri": [210, 335, 343, 425], "new_exc": 210, "original_exc": 210, "3134": [210, 467], "someexcept": [210, 385, 467], "add_not": [210, 440, 470], "__notes__": [210, 378], "rescu": 210, "perror": 210, "environmenterror": [210, 447, 473], "end_offset": [210, 378, 469], "abandon": [210, 366, 412, 472], "characters_written": 210, "dubiou": [210, 397], "mygroup": [210, 338], "eg": [210, 240, 245, 290, 338, 424], "apport": 211, "sigaltstack": 211, "catastroph": [211, 472], "dump_traceback": [211, 475], "all_thread": 211, "print_tb": [211, 378, 475], "is_en": 211, "dump_traceback_lat": [211, 475], "cancel_dump_traceback_lat": 211, "watchdog": 211, "dup2": [211, 290, 330, 470, 475, 477], "0x00007fb899f39700": [211, 473], "f_add_seal": 212, "f_get_seal": 212, "f_seal_": 212, "memfd_creat": [212, 290, 478], "f_getpath": 212, "f_ofd_getlk": [212, 479], "f_ofd_setlk": [212, 479], "f_ofd_setlkw": [212, 479], "f_getpipe_sz": 212, "f_setpipe_sz": 212, "f_dup2fd": [212, 470], "f_dup2fd_cloexec": [212, 470], "fd_cloexec": [212, 470], "ficlon": 212, "ficlonerang": 212, "reflink": [212, 290], "btrf": [212, 290], "ocfs2": 212, "xf": [212, 289, 290, 437], "mutate_flag": 212, "simplif": 212, "getpgrp": [212, 290], "13341": 212, "tiocgpgrp": 212, "lock_un": 212, "lock_sh": 212, "lock_ex": 212, "lock_nb": 212, "seek_set": [212, 255, 275, 290, 337, 464, 468], "seek_cur": [212, 255, 275, 290, 337, 464, 468], "seek_end": [212, 255, 275, 290, 337, 464, 468], "svr4": 212, "f_setfl": 212, "lockdata": 212, "hhllhh": 212, "f_wrlck": 212, "f_setlkw": 212, "o_shlock": [212, 290, 464], "o_exlock": [212, 290, 464], "clear_cach": [213, 422, 474], "cmpfile": 213, "dir1": 213, "dir2": 213, "mtime": [213, 231, 247, 290, 355, 393, 478], "default_ignor": [213, 474], "pardir": [213, 290], "report_partial_closur": 213, "report_full_closur": 213, "left_list": 213, "right_list": 213, "left_onli": 213, "right_onli": 213, "common_dir": 213, "common_fil": 213, "common_funni": 213, "same_fil": 213, "diff_fil": 213, "funny_fil": 213, "mydircmp": 213, "print_diff_fil": 213, "dcmp": 213, "sub_dcmp": 213, "openhook": [215, 464], "hook_compress": [215, 469], "inplac": 215, "filelineno": 215, "isfirstlin": 215, "isstdin": 215, "nextfil": 215, "bak": 215, "fi": [215, 222], "hook_encod": [215, 476], "fnmatchcas": [217, 385], "normcas": [217, 291], "reobj": 217, "other_fract": 218, "limit_denomin": 218, "414213": 218, "1414213": 218, "125": [218, 258, 443, 446, 465], "7e": 218, "2476979795053773": [218, 472], "2251799813685248": [218, 472], "gcd": [218, 272, 475, 479], "supportsint": [218, 383, 470, 478], "is_integ": [218, 341], "flt": 218, "from_decim": [218, 472], "max_denomin": 218, "1415926535897932": 218, "4503599627370497": 218, "9007199254740992": 218, "__floor__": [218, 272, 386, 425], "greatest": [218, 272, 341], "__ceil__": [218, 272, 386, 425], "ceil": [218, 272, 286, 319, 341, 425, 465, 478], "__round__": [218, 222, 383, 386, 425, 467], "ndigit": [218, 222, 425, 441], "40g": 218, "1428571428571428571428571428571428571429": 218, "1_234_567": 218, "141593e": 218, "old_pric": 218, "new_pric": 218, "499": [218, 220, 238, 285], "959": 220, "2640": [220, 479], "retrlin": 220, "1176": 220, "1063": 220, "sr": 220, "226": [220, 238], "retrbinari": 220, "retr": [220, 302], "221": 220, "acct": 220, "source_address": [220, 239, 332, 334, 466, 472, 473], "ftp1": [220, 472], "proftpd": [220, 472], "154": [220, 281, 379, 463, 472], "cento": [220, 470, 472, 477], "fedora": [220, 349, 453, 457, 469, 472, 479], "set_debuglevel": [220, 239, 285, 302, 332, 356, 475], "getwelcom": [220, 285, 302], "disclaim": [220, 285, 346, 398, 423], "voidcmd": 220, "error_repli": 220, "blocksiz": [220, 239, 290, 355, 477], "stor": 220, "transfercmd": 220, "nlst": [220, 473], "set_pasv": [220, 460], "passiv": [220, 252, 458, 460], "storbinari": [220, 465, 466], "storlin": [220, 465], "eprt": 220, "epsv": 220, "pasv": 220, "ntransfercmd": 220, "mlsd": [220, 473], "3659": 220, "fromnam": 220, "tonam": 220, "error_perm": 220, "mkd": 220, "rmd": 220, "unilater": 220, "4217": 220, "prot_p": 220, "check_hostnam": [220, 239, 245, 285, 302, 332, 338, 392, 471, 476], "has_sni": [220, 239, 245, 285, 302, 332, 338, 392], "keyfil": [220, 245, 266, 278, 302, 332, 338, 459, 471, 476], "certfil": [220, 245, 302, 332, 338, 459, 471, 476], "pureftpd": 220, "6jack": 220, "antilink": 220, "blogbench": 220, "bsdcam": 220, "clockspe": 220, "djbdn": 220, "jedi": 220, "eacceler": 220, "favicon": 220, "ico": 220, "francoton": 220, "fugu": 220, "libpuzzl": 220, "metalog": 220, "minidentd": 220, "udf": 220, "php": [220, 416, 459, 461], "jenkin": [220, 385], "skein": [220, 232], "webdav": [220, 238], "phpaudit": 220, "phpbench": 220, "pincast": 220, "ping": [220, 459, 460, 461, 464], "posto": 220, "public_kei": 220, "ftpd": 220, "qscan": 220, "qtc": 220, "shared": 220, "skycach": 220, "ucarp": 220, "ssl_version": [220, 338, 471], "protocol_sslv23": [220, 338, 469], "auth": [220, 245, 266, 332, 338, 462, 475], "ccc": [220, 344, 373, 473], "nat": [220, 334, 473], "prot_c": 220, "error_temp": 220, "error_proto": [220, 302, 473], "anext": [222, 469], "async_iter": 222, "0b11": 222, "0b1010": [222, 467], "0b1110": 222, "1110": 222, "pythonbreakpoint": [222, 349, 452, 477], "dont_inherit": [222, 474], "pycf_": 222, "__all__": [222, 244, 276, 316, 359, 433, 447, 460, 476], "__initializing__": 222, "_clearcach": 222, "pack_into": [222, 344, 464], "unpack_from": [222, 344, 464], "perimet": 222, "season": 222, "summer": [222, 363, 464, 465], "complementari": [222, 272, 315, 405, 466, 472], "floatvalu": 222, "digitpart": [222, 432], "floatnumb": [222, 427, 432], "003": [222, 425, 443, 452, 471], "1e6": 222, "0x2a": [222, 342], "__trunc__": [222, 272, 386, 425, 470], "010": [222, 258, 359], "classinfo": 222, "mydata": [222, 362, 408, 449, 472], "process_block": 222, "keyfunc": [222, 258], "featureless": 222, "0o70": 222, "0o12": 222, "write_through": [222, 255, 473], "reconfigur": [222, 255, 477], "default_buffer_s": [222, 255, 345], "nnn": [222, 237, 392], "untransl": [222, 255], "somedir": 222, "o_rdonli": [222, 279, 280, 290], "spamspam": 222, "bufferedread": [222, 255, 355, 465, 466, 472], "bufferedwrit": [222, 255, 465, 472], "bufferedrandom": [222, 255, 465], "rawiobas": [222, 255, 465, 473, 475], "3j": [222, 286, 466], "inv_bas": 222, "forcibli": [222, 473, 474], "_x": [222, 256, 465, 476], "_voltag": 222, "displayhook": [222, 349, 447, 460], "salari": [222, 341, 437], "argn": 222, "regular_funct": 222, "fsum": [222, 272, 340, 441, 465], "summat": [222, 272, 441, 471], "object_or_typ": 222, "type2": [222, 383], "spice": 222, "transpos": [222, 258, 439, 463], "fo": [222, 225, 461], "manifest": [222, 359, 466], "zip_longest": [222, 258, 467], "x2": [222, 427, 438, 469, 471], "attain": 222, "till": [222, 280, 305, 338, 356, 479], "sau": 222, "_temp": 222, "pythoncaseok": [222, 452, 460, 479], "user_funct": 223, "evict": 223, "3628800": 223, "479001600": 223, "sequence_of_numb": [223, 478], "stdev": [223, 340, 470, 478], "count_vowel": 223, "vowel": 223, "aeiouaeiou": 223, "cache_paramet": 223, "cache_info": [223, 472], "currsiz": [223, 472], "cache_clear": [223, 472], "predictor": 223, "impur": 223, "get_pep": 223, "290": 223, "320": [223, 385], "9991": 223, "cacheinfo": [223, 472], "fib": [223, 438, 447], "377": [223, 438, 446, 447], "610": [223, 438, 446, 447], "total_ord": [223, 425, 427, 466, 472, 474], "_is_valid_operand": 223, "lastnam": [223, 337, 472, 478], "firstnam": [223, 337, 472], "unrecognis": [223, 265, 473], "farg": 223, "fkeyword": 223, "newkeyword": 223, "basetwo": 223, "10010": 223, "partialmethod": [223, 341, 474, 478], "_aliv": 223, "set_stat": 223, "set_dead": 223, "strength": [223, 340, 470], "eh": [223, 470], "uniontyp": [223, 341, 382, 383, 470], "fun_num": 223, "615": [223, 422, 479], "0x1035a2840": 223, "0x103fe0000": 223, "dict_kei": [223, 466], "singledispatchmethod": [223, 478], "wrapper_assign": 223, "wrapper_upd": 223, "17482": 223, "my_decor": [223, 464], "debug_leak": 224, "debug_saveal": 224, "uncollect": [224, 472], "set_threshold": 224, "threshold0": 224, "threshold1": 224, "threshold2": 224, "sweep": [224, 464], "youngest": 224, "get_count": [224, 464], "count0": 224, "count1": 224, "count2": 224, "get_threshold": 224, "referr": 224, "lazaru": 224, "gc_ref": 224, "unfreez": [224, 477], "get_freeze_count": [224, 477], "debug_uncollect": [224, 472], "debug_stat": 224, "debug_collect": 224, "shortopt": 225, "longopt": 225, "frob": [225, 387], "getopterror": 225, "gnu_getopt": [225, 462], "posixly_correct": 225, "cfoo": 225, "optlist": 225, "ho": 225, "getpasswarn": 226, "getus": [226, 245, 290, 302], "lname": 226, "getlogin": [226, 290], "i18n": [227, 342, 459, 466], "l10n": [227, 459], "monolingu": 227, "bindtextdomain": [227, 263], "localedir": 227, "lc_messag": [227, 263], "lc_all": [227, 263, 359, 449, 452, 470, 477], "textdomain": [227, 263], "dgettext": [227, 263], "ngettext": 227, "dngettext": 227, "pgettext": [227, 478], "dpgettext": 227, "npgettext": 227, "dnpgettext": 227, "dcgettext": [227, 263], "unimpl": [227, 240], "myapplic": 227, "class_": 227, "_info": 227, "_fallback": 227, "add_fallback": 227, "_pars": 227, "albeit": [227, 383, 438], "gnome": [227, 340, 463, 473], "jame": [227, 420, 423, 459, 462, 464, 466, 470, 471, 477], "henstridg": [227, 459, 466], "mylog": [227, 468, 472], "xgettext": 227, "fran\u00e7oi": [227, 473, 474, 475], "pinard": 227, "xpot": 227, "pygettext": [227, 475], "msgfmt": [227, 466], "lang1": 227, "lang2": 227, "lang3": 227, "language1": 227, "mollusk": 227, "albatross": 227, "rat": 227, "penguin": [227, 424], "n_": 227, "markthisstringfortransl": 227, "funk": [227, 459], "juan": [227, 466], "ib\u00e1\u00f1ez": 227, "palomar": 227, "barri": [227, 459, 460, 461, 463, 464, 465, 471, 472, 473, 474, 475, 476, 477, 478], "warsaw": [227, 459, 460, 461, 463, 464, 465, 471, 472, 473, 474, 475, 477, 478], "gustavo": [227, 461, 462, 463, 464], "niemey": [227, 461, 462, 463, 464], "concert": [228, 469, 472], "subshel": [228, 290], "expandvar": [228, 291, 345, 465], "include_hidden": 228, "altsep": [228, 244, 290, 293, 470], "inordin": [228, 293], "iglob": [228, 469, 475, 476], "unc": [228, 290, 291, 293, 419], "sharepoint": [228, 291, 419], "quo": 228, "vadi": 228, "card": [228, 292, 315, 316, 433], "topologicalsort": [229, 479], "topolog": [229, 462, 479], "vertex": [229, 381], "acycl": 229, "get_readi": 229, "static_ord": 229, "topological_sort": 229, "task_queu": [229, 280], "finalized_tasks_queu": 229, "cycleerror": 229, "node_group": 229, "ts2": 229, "gr_name": [230, 462], "gr_passwd": 230, "gr_gid": [230, 345, 462], "gr_mem": 230, "yp": 230, "getgrnam": [230, 345, 462], "getgrgid": [230, 476], "getgral": 230, "gunzip": 231, "badgzipfil": [231, 478], "fileobj": [231, 232, 326, 330, 355, 473], "discern": 231, "slowest": [231, 359, 381, 385, 421, 471], "unseek": [231, 398, 419, 472, 474, 475], "wbit": [231, 421], "file_cont": [231, 267], "s_in": 231, "s_out": 231, "fip": [232, 338], "sha1": [232, 453, 464, 466, 471, 472], "sha224": [232, 464, 466, 472], "sha256": [232, 248, 334, 338, 453, 464, 466, 472], "sha384": [232, 338, 464, 466, 472], "sha512": [232, 453, 464, 466, 472], "rsa": [232, 338, 469], "1321": 232, "adler32": [232, 421], "hexdigest": [232, 234, 337, 464], "sha3_224": [232, 476], "sha3_256": [232, 476], "sha3_384": [232, 476], "sha3_512": [232, 476], "shake_128": [232, 476], "shake_256": [232, 476], "blake2b": [232, 470, 476, 479], "algorithms_guarante": [232, 466, 472], "algorithms_avail": [232, 466, 472], "seealso": 232, "sha3": [232, 453, 470, 471, 479], "keccak": [232, 470, 476], "usedforsecur": [232, 324], "insecur": [232, 283, 324, 327, 337, 338, 443, 464, 471, 472], "sha2": [232, 338, 471, 479], "hacl": [232, 471], "spammish": 232, "x03": [232, 281, 334, 341, 344, 395], "x1e": [232, 341], "xdd": 232, "ae": [232, 334, 338, 462], "x15": [232, 344], "x93": 232, "xc5": 232, "xfe": 232, "x00o": 232, "xa5u": 232, "xfd": 232, "xf7": 232, "xbcn": 232, "x84": [232, 465], "xa6": 232, "xaf": [232, 465], "x0c": [232, 341, 395], "x95": 232, "x0fk": 232, "x06": [232, 395], "031edd7d41651593c5fe5c006fa5752b37fddff7bc4e843aa6af0c950f4b9406": 232, "condens": [232, 265, 464], "upstream": [232, 337, 478], "digest_s": [232, 234, 474], "block_siz": [232, 234, 474], "incept": 232, "length_in_bit": 232, "44709d6fcb83d92a76dcb0b668c98e1b1d3dafe7": 232, "file_digest": [232, 470], "socketio": 232, "mac1": 232, "digestmod": [232, 234, 474, 478], "mac2": 232, "stretch": [232, 244, 373, 381, 407, 477], "brute": [232, 323], "tunabl": [232, 290, 472], "pbkdf2_hmac": [232, 466, 469, 471, 474], "hash_nam": 232, "dklen": 232, "pkc": [232, 338, 474], "pseudorandom": [232, 315, 338], "nist": [232, 462], "132": 232, "stackexchang": 232, "pbkdf2": [232, 469], "our_app_it": 232, "500_000": [232, 341], "dk": 232, "15530bba69924174860db778f2c6f8104d3aaf9d26241840c8c4a641c8d000a9": 232, "scrypt": [232, 476], "maxmem": 232, "7914": 232, "7693": 232, "fanout": 232, "leaf_siz": 232, "node_offset": 232, "node_depth": 232, "inner_s": 232, "last_nod": 232, "salt_siz": 232, "person_s": 232, "max_key_s": 232, "max_digest_s": 232, "6ff843ba685842aa82031d3f53c48b66326df7639a63d128974c5c14f31a0f33343a8c65551134ed1ae0f2b0dd2bb495dc81039e3eeb0aa1bb0388bbeac29183": 232, "d24f26cf8de66472d58d4e1b1774b4c9158b1f4c": 232, "6fa1d8fcfd719046d762": 232, "eb6ec15daf9546254f0809": 232, "1bf21a98c78a1c376ae9": 232, "567004bf96e4a25773ebf4": 232, "indifferenti": 232, "3d363ff7401e02026f4a4687d4863c": 232, "symmetr": [232, 281, 315, 338, 341, 425, 427, 439, 459, 461, 462, 463, 473], "tamper": [232, 296], "secret_kei": 232, "pseudorandomli": 232, "auth_siz": 232, "good_sig": 232, "alic": 232, "43b3c982cf697e0c5ab22172d1ca7421": 232, "bob": [232, 280, 383, 456, 464, 465, 466, 468, 473], "0102030405060708090a0b0c0d0e0f00": 232, "e3c8102868d28b5ff85fc35dda07329970d1a01e273c37481326fe0c861c8142": 232, "signer": 232, "likelihood": [232, 340, 478], "106": [232, 258, 340, 458, 461], "salt1": 232, "salt2": 232, "h2": [232, 239, 265, 408], "serious": 232, "summarili": 232, "files_hash_person": 232, "block_hash_person": 232, "20d9cd024d4fb086aae819a1432dd2466de12947831b75c5a30cf2676095d3b4": 232, "cf68fb5761b9c44e7878bfb2c4c9aea52264a80b75005e65619778de59f383a3": 232, "orig_kei": 232, "rm5epjai72qck3rgbpw3vpnfzy5ozothi": 232, "khy6h21km": 232, "enc_kei": 232, "kencrypt": 232, "mac_kei": 232, "kmac": 232, "rbpb15": 232, "z9t": 232, "agffno5wuhb77vbri6f9iv2qixu7whw": 232, "g9gthfe1yluxy1zwplyk1": 232, "nwfu0wseb0krcjhdep": 232, "h00": 232, "h01": 232, "h10": 232, "3ad2a9b37c6070e374c7a8c508fe20ca86b6ed54e286e93a0318e95e881db5aa": 232, "jean": [232, 423, 465, 466, 473], "philipp": [232, 423, 464, 469], "aumasson": [232, 423], "samuel": [232, 334, 423, 462, 464, 476, 479], "neve": [232, 423, 476], "zooko": [232, 423], "wilcox": 232, "hearn": 232, "christian": [232, 423, 459, 463, 465, 469, 470, 471, 473, 474, 476, 477, 478, 479], "winnerlein": 232, "finalist": 232, "henzen": 232, "willi": 232, "meier": 232, "raphael": 232, "phan": 232, "chacha": 232, "daniel": [232, 462, 465, 466, 469, 470, 472, 474, 475, 476], "bernstein": [232, 423, 465], "pyblake2": 232, "dmitri": [232, 463, 475, 476], "chestnykh": [232, 476], "heim": [232, 423, 465, 469, 470, 471, 473, 474, 476, 477, 478, 479], "neighbor": [232, 410, 461, 462], "warranti": [232, 423, 478], "cc0": 232, "creativecommon": 232, "publicdomain": 232, "alexandr": [232, 465, 466, 468, 472, 474], "sokolovskii": 232, "nvlpub": 232, "gov": [232, 240, 462], "nistpub": 232, "csrc": 232, "cryptographic_hash_funct": 232, "rfc8018": 232, "cryptographi": [232, 234, 323, 334], "nistspecialpublication800": 232, "heapifi": [233, 315, 449], "heappush": [233, 449, 462, 465], "heappop": [233, 258, 449, 462, 465], "heappushpop": [233, 465], "heapreplac": [233, 315], "heapsort": 233, "alongsid": [233, 351, 372, 418, 423, 432, 458], "tie": 233, "breaker": [233, 471], "prioritizeditem": [233, 313], "pq": [233, 316], "entry_find": 233, "add_task": 233, "remove_task": 233, "pop_task": 233, "tournament": 233, "sport": 233, "winner": [233, 315], "oppon": 233, "loser": 233, "percol": 233, "midi": 233, "speedi": 233, "terribl": 233, "cleverli": 233, "fuzzili": 233, "melt": 233, "nowadai": [233, 355], "tape": [233, 355], "spectacular": 233, "2104": [234, 461], "digest_con": 234, "crypto_memcmp": 234, "x3e": [235, 237], "lenient": 235, "html5": [236, 473, 474], "name2codepoint": [236, 237], "codepoint2nam": 236, "entitydef": 236, "html4": [236, 237], "whatwg": [236, 391], "multipag": 236, "convert_charref": [237, 474, 475], "myhtmlpars": 237, "handle_starttag": 237, "handle_endtag": 237, "handle_data": 237, "insofar": [237, 268, 433], "unprocess": 237, "getpo": 237, "get_starttag_text": 237, "handle_startendtag": 237, "handle_entityref": 237, "handle_charref": 237, "handle_com": 237, "condcom": 237, "ie9": 237, "handle_decl": 237, "decl": 237, "handle_pi": 237, "sgml": [237, 270, 414, 465], "unknown_decl": 237, "ent": 237, "startswith": [237, 290, 341, 349, 385, 396, 419, 448, 459, 462, 464, 465, 468, 473, 475, 478], "buff": 237, "er": 237, "pan": 237, "soup": 237, "httpstatu": [238, 475, 479], "switching_protocol": 238, "7231": 238, "2518": 238, "103": [238, 258, 340, 341, 379, 458, 466, 472, 479], "early_hint": [238, 479], "8297": 238, "non_authoritative_inform": 238, "no_cont": 238, "reset_cont": 238, "partial_cont": 238, "7233": 238, "multi_statu": 238, "4918": 238, "already_report": 238, "5842": 238, "im_us": 238, "3229": 238, "multiple_choic": 238, "moved_perman": [238, 463], "see_oth": 238, "not_modifi": 238, "7232": [238, 466], "use_proxi": 238, "temporary_redirect": 238, "permanent_redirect": 238, "7238": 238, "bad_request": 238, "7235": 238, "payment_requir": 238, "not_found": [238, 239], "method_not_allow": 238, "not_accept": 238, "proxy_authentication_requir": 238, "request_timeout": 238, "length_requir": 238, "precondition_fail": 238, "request_entity_too_larg": 238, "request_uri_too_long": 238, "unsupported_media_typ": 238, "requested_range_not_satisfi": 238, "expectation_fail": 238, "418": [238, 438, 469, 473, 479], "im_a_teapot": [238, 479], "htcpcp": 238, "2324": 238, "misdirected_request": 238, "7540": 238, "422": 238, "unprocessable_ent": 238, "423": 238, "424": [238, 474], "failed_depend": 238, "too_earli": [238, 479], "8470": 238, "upgrade_requir": 238, "428": [238, 293, 474], "precondition_requir": 238, "6585": 238, "429": [238, 474], "too_many_request": 238, "431": 238, "request_header_fields_too_larg": 238, "unavailable_for_legal_reason": 238, "obstacl": 238, "7725": 238, "internal_server_error": 238, "not_impl": 238, "bad_gatewai": 238, "service_unavail": 238, "gateway_timeout": 238, "http_version_not_support": 238, "506": [238, 323, 476], "variant_also_negoti": 238, "2295": 238, "507": 238, "insufficient_storag": 238, "508": 238, "loop_detect": 238, "510": 238, "not_extend": 238, "2774": 238, "511": [238, 419, 476], "network_authentication_requir": 238, "is_inform": 238, "199": 238, "is_success": 238, "is_redirect": 238, "399": 238, "is_client_error": 238, "is_server_error": 238, "httpmethod": 238, "5789": 238, "h3": 239, "h4": 239, "httpsconnect": [239, 392, 465, 466, 472, 474, 477], "unverifi": [239, 240, 392], "_create_unverified_context": [239, 466, 474], "post_handshake_auth": [239, 338, 478], "cert_fil": [239, 392, 471], "alpn": [239, 338, 392, 469, 475], "set_alpn_protocol": [239, 338, 392, 475], "key_fil": [239, 392, 471], "debuglevel": [239, 332, 356, 392, 475], "httpexcept": 239, "notconnect": 239, "invalidurl": 239, "unknownprotocol": 239, "unknowntransferencod": 239, "unimplementedfilemod": 239, "incompleteread": 239, "improperconnectionst": 239, "cannotsendrequest": 239, "cannotsendhead": 239, "responsenotreadi": 239, "badstatuslin": 239, "linetoolong": 239, "remotedisconnect": [239, 475], "getrespons": [239, 475], "http_port": 239, "https_port": 239, "encode_chunk": 239, "reconnect": [239, 475], "set_tunnel": [239, 416, 472], "tunnel": [239, 472], "get_proxy_response_head": 239, "putrequest": 239, "skip_host": 239, "skip_accept_encod": 239, "puthead": 239, "endhead": [239, 476], "message_bodi": 239, "7230": [239, 392], "amt": 239, "gethead": 239, "getcod": [239, 392], "data1": [239, 387], "data2": [239, 387], "12524": 239, "issue12524": 239, "filecont": 239, "2965": [240, 392], "2109": [240, 241], "cookie2": 240, "loaderror": 240, "delayload": 240, "blocked_domain": 240, "allowed_domain": 240, "rfc2965": 240, "rfc2109_as_netscap": 240, "hide_cookie2": 240, "strict_domain": 240, "strict_rfc2965_unverifi": 240, "strict_ns_unverifi": 240, "strict_ns_domain": 240, "domainliber": 240, "strict_ns_set_initial_dollar": 240, "strict_ns_set_path": 240, "secure_protocol": 240, "wss": [240, 391], "websocket": [240, 254], "downgrad": 240, "make_cooki": 240, "curl": [240, 457, 458], "cookie_spec": 240, "kristol": 240, "errata": [240, 259], "2964": 240, "add_cookie_head": 240, "get_full_url": [240, 392], "get_head": [240, 383, 392], "header_item": [240, 392], "add_unredirected_head": [240, 392], "origin_req_host": [240, 392], "get_origin_req_host": [240, 392, 474], "extract_cooki": 240, "set_ok": 240, "approv": [240, 285, 304, 392, 458, 459, 466], "set_polici": 240, "set_cookie_if_ok": 240, "set_cooki": 240, "clear_session_cooki": 240, "ignore_discard": 240, "ignore_expir": 240, "wipe": 240, "mozillacookiejar": 240, "lynx": [240, 400, 463], "clobber": [240, 289], "lwpcookiejar": 240, "libwww": [240, 463], "cookie3": 240, "return_ok": 240, "domain_return_ok": 240, "path_return_ok": 240, "mycookiepolici": 240, "i_dont_want_to_store_this_cooki": 240, "tighten": [240, 459, 466, 472], "loos": [240, 362], "benign": 240, "blocklist": 240, "allowlist": [240, 391], "set_blocked_domain": 240, "coyot": 240, "193": [240, 381, 467], "is_block": 240, "set_allowed_domain": 240, "is_not_allow": 240, "nz": 240, "domainstrictnodot": 240, "domainstrictnondomain": 240, "domainrfc2965match": 240, "domainstrict": 240, "acm": [240, 315], "rocket_launch": 240, "expiri": 240, "is_expir": 240, "comment_url": 240, "rfc2109": 240, "port_specifi": 240, "domain_specifi": 240, "domain_initial_dot": 240, "has_nonstandard_attr": 240, "get_nonstandard_attr": 240, "set_nonstandard_attr": 240, "cj": 240, "serializ": [241, 259], "2068": [241, 363], "ascii_lett": [241, 323, 342, 461, 467], "cookieerror": 241, "basecooki": 241, "simplecooki": 241, "value_decod": 241, "value_encod": 241, "real_valu": 241, "coded_valu": [241, 475, 477], "js_output": 241, "rawdata": 241, "http_cooki": 241, "httponli": [241, 465], "samesit": 241, "csrf": 241, "lax": [241, 464], "isreservedkei": 241, "outputstr": 241, "fig": 241, "newton": [241, 316], "wafer": 241, "rocki": [241, 465], "chip": [241, 466], "ahoi": 241, "vienna": 241, "finger": [241, 467], "keebler": 241, "fudg": 241, "012": [241, 258, 341, 460], "oreo": 241, "doublestuff": 241, "twix": 241, "httpserver": [242, 330, 404], "server_class": [242, 404], "handler_class": [242, 404], "server_address": [242, 335, 404], "8000": [242, 292, 330, 404, 416, 417, 464, 478], "httpd": [242, 273, 330, 404, 464], "requesthandlerclass": [242, 335, 404], "server_nam": [242, 404, 417], "server_port": [242, 404], "threadinghttpserv": [242, 477], "threadingmixin": [242, 335, 477], "client_address": [242, 335, 404], "do_spam": 242, "close_connect": 242, "handle_one_request": 242, "requestlin": 242, "3986": [242, 391, 466, 475, 477], "hier": 242, "request_vers": 242, "messageclass": 242, "rfile": [242, 335], "wfile": [242, 335, 476], "server_vers": 242, "basehttp": 242, "sys_vers": 242, "version_str": 242, "error_message_format": [242, 474], "send_error": [242, 474], "error_content_typ": 242, "protocol_vers": [242, 245], "send_head": 242, "send_response_onli": 242, "handle_expect_100": 242, "send_respons": 242, "date_time_str": 242, "end_head": [242, 473], "flush_head": [242, 473], "log_request": 242, "log_error": 242, "log_messag": 242, "1994": [242, 423], "log_date_time_str": 242, "address_str": 242, "simplehttprequesthandl": [242, 330, 477], "do_get": 242, "simplehttp": 242, "extensions_map": 242, "list_directori": 242, "webserv": 242, "index_pag": 242, "9000": [242, 383, 427], "cgihttprequesthandl": 242, "empt": 242, "cgi_directori": 242, "htbin": 242, "do_post": 242, "scrub": 242, "nefari": 242, "smart": [244, 461], "namag": 244, "aqua": [244, 456], "unsav": 244, "undon": [244, 381, 386, 387], "clipboard": [244, 366, 476, 477, 478], "reformat": [244, 268, 289, 462], "tabifi": 244, "untabifi": 244, "toggl": [244, 334, 373, 446, 478, 479], "chitespac": 244, "autosav": 244, "pane": [244, 372, 373], "zoom": 244, "momentarili": [244, 268], "deiconifi": 244, "idlerc": 244, "squeez": [244, 476, 477, 478], "dicuss": 244, "leftarrow": 244, "rightarrow": 244, "pageup": 244, "pagedown": 244, "popup": [244, 359], "100000000": 244, "attemp": 244, "uncolor": 244, "idlestartup": 244, "pythonstartup": [244, 317, 331, 349, 435, 452, 474], "masquerad": [244, 386, 457], "tcpconnect": 244, "irv": [244, 439], "6543": 244, "tcplisten": 244, "antiviru": [244, 359], "taught": [244, 340], "admin": 244, "zombi": [244, 280, 335, 359, 464, 473], "pythonw": [244, 280, 331, 349, 456, 458, 461, 476, 477], "dismiss": [244, 381], "glitch": 244, "active_count": [244, 280, 362, 465, 469], "__stdin__": [244, 349, 447], "__stdout__": [244, 329, 349, 447], "__stderr__": [244, 349, 359, 447], "pyw": [244, 435, 458, 461], "setrecursionlimit": [244, 296, 349, 447, 459, 470, 471], "plane": [244, 272, 469], "x02": [244, 256, 281, 334, 344, 395], "x07": [244, 281, 395], "x08c": 244, "loopback": [244, 256, 359], "transient": [244, 265, 337], "f5": [244, 459], "mousewheel": 244, "scrollbar": [244, 366, 371, 373, 381], "toc": 244, "dock": 244, "zzdummi": 244, "imap4_ssl": [245, 473, 479], "imap4_stream": [245, 479], "imap4rev1": 245, "1730": 245, "imap4_port": 245, "logout": [245, 475, 478], "noop": [245, 280, 302, 332], "d25if65hy903weo": 245, "imap4_ssl_port": 245, "ssl_context": [245, 285, 471], "993": 245, "internaldate2tupl": 245, "datestr": 245, "int2ap": 245, "parseflag": 245, "flagstr": 245, "time2internald": 245, "date_tim": [245, 419], "expung": 245, "uw": 245, "message_set": 245, "authobject": [245, 332], "checkpoint": [245, 349], "new_mailbox": 245, "deleteacl": [245, 463], "acl": [245, 329], "5161": [245, 475], "6855": [245, 475], "message_part": 245, "getacl": [245, 461], "cyru": 245, "getannot": 245, "getquota": 245, "rfc2087": 245, "getquotaroot": 245, "folder": [245, 268, 396, 456, 458], "login_cram_md5": 245, "cram": [245, 332], "lsub": 245, "myright": [245, 463], "2342": [245, 461], "message_num": 245, "proxyauth": 245, "authoris": 245, "oldmailbox": 245, "newmailbox": 245, "criterion": [245, 296, 425, 459], "msgnum": 245, "ldj": 245, "inbox": [245, 268], "setacl": [245, 461], "setannot": 245, "setquota": 245, "sort_criteria": 245, "search_criterion": 245, "flag_list": 245, "3501": 245, "gmail": 245, "threading_algorithm": 245, "unsubscrib": 245, "unselect": [245, 479], "xatom": 245, "utf8_en": [245, 475], "sgi": 246, "imglib": 246, "87a": 246, "89a": 246, "bitmap": [246, 252, 278, 325, 366, 372, 373], "graymap": 246, "pixmap": [246, 372], "raster": 246, "jfif": 246, "exif": 246, "openexr": [246, 475], "bass": [246, 333], "comprehend": 247, "3120": [247, 432, 467], "anchor": [247, 249, 293, 338, 351, 366, 373, 466, 471, 474], "subpkg": 247, "invalidate_cach": [247, 420, 469, 473, 477], "rebound": [247, 426, 433, 437], "redefinit": [247, 425], "resourceload": [247, 477], "inspectload": [247, 474, 475], "executionload": 247, "fileload": [247, 473, 474], "sourceload": [247, 473, 474], "find_spec": [247, 299, 349, 420, 429, 469, 471, 474, 475, 477], "spec_from_load": [247, 469], "pathfind": [247, 429, 469, 470, 474, 477], "get_resource_read": [247, 249, 250, 477], "resourceread": [247, 249, 250, 471, 477], "get_data": [247, 299, 392, 420, 465, 474], "get_sourc": [247, 262, 420, 474], "source_to_cod": [247, 474, 475], "sourceless": [247, 473, 475], "path_stat": [247, 473], "path_mtim": [247, 473], "set_data": 247, "traversableresourc": [247, 250, 471], "perspect": [247, 250, 404], "artifact": [247, 249, 250, 292, 473], "correl": [247, 250, 340, 469, 470, 471], "open_resourc": [247, 250], "resource_path": [247, 250], "is_resourc": [247, 249, 250, 470, 471], "priori": [247, 250], "as_fil": [247, 249, 250, 471], "iterdir": [247, 249, 250, 293, 419], "is_dir": [247, 250, 290, 293, 419, 476, 478], "is_fil": [247, 249, 250, 290, 293, 419, 475, 478], "joinpath": [247, 249, 250, 293, 419], "read_byt": [247, 249, 250, 275, 293, 419, 475], "read_text": [247, 248, 249, 250, 255, 293, 419, 470, 471, 475], "source_suffix": [247, 471], "debug_bytecode_suffix": 247, "bytecode_suffix": [247, 471], "optimized_bytecode_suffix": 247, "extension_suffix": [247, 471], "all_suffix": [247, 252], "getmodulenam": [247, 252, 476], "builtinimport": [247, 280, 469, 470, 476], "allevi": [247, 459], "frozenimport": [247, 469, 470, 474], "windowsregistryfind": [247, 458, 469, 470, 476], "filefind": [247, 299, 469, 470, 473], "loader_detail": 247, "sourcelessfileload": [247, 473, 476], "extensionfileload": [247, 473, 474, 476], "namespaceload": [247, 474], "path_find": 247, "my_namespac": 247, "loader_st": 247, "submodule_search_loc": [247, 249, 429], "has_loc": [247, 429], "magic_numb": [247, 471, 474], "cache_from_sourc": [247, 471, 472, 474, 475, 476], "debug_overrid": [247, 475], "get_tag": [247, 471, 472], "decode_sourc": [247, 474], "source_byt": 247, "resolve_nam": [247, 299, 479], "module_from_spec": [247, 382, 471, 475], "spec_from_file_loc": [247, 471, 476], "source_hash": [247, 477], "_incompatible_extension_module_restrict": 247, "disable_check": 247, "ly": [247, 266, 316, 443], "lazyload": [247, 475, 476], "lazy_load": 247, "file_path": 247, "lazy_import": 247, "lazy_typ": 247, "spammetapathfind": 247, "spampathentryfind": 247, "absolute_nam": 247, "parent_nam": 247, "child_nam": 247, "rpartit": [247, 341, 464, 466, 472], "parent_modul": 247, "pkg_resourc": [248, 249, 471], "discover": [248, 309, 458, 474], "dist": [248, 267, 272, 293, 381, 464, 472, 475, 478], "package_distribut": 248, "importlib_metadata": [248, 469, 479], "entrypoint": [248, 337, 469, 471], "console_script": 248, "entry_point": 248, "ep": 248, "setup_keyword": [248, 462], "egg_info": 248, "0x103528488": 248, "entry_points_select": 248, "wheel_metadata": 248, "packagemetadata": 248, "566": 248, "requires_python": [248, 304], "quickest": [248, 445], "packagepath": [248, 478], "purepath": [248, 290, 293, 469, 470, 471, 479], "859": 248, "_hook": 248, "pathdistribut": 248, "0x101e0cef0": 248, "filehash": 248, "bykw5omccfazvcoyqwkkkemovymafor34mmkbx8r1ni": 248, "text_typ": 248, "posixpath": [248, 291, 293], "gustav": 248, "always_iter": 248, "pytest": [248, 385], "cov": 248, "packages_distribut": [248, 469], "pyyaml": [248, 466, 468], "jaraco": 248, "find_distribut": 248, "distributionfind": 248, "pycach": [249, 349], "importlib_resourc": [249, 477, 479], "open_binari": [249, 470, 471], "binaryio": [249, 383], "open_text": [249, 470, 471], "textio": [249, 383], "read_binari": [249, 470, 471], "getmemb": [252, 355, 475], "set_coroutine_origin_tracking_depth": [252, 349, 447, 477], "__code__": [252, 341, 425, 467, 478], "__defaults__": [252, 425, 467], "__kwdefaults__": [252, 425, 474], "tb_frame": [252, 382, 425], "tb_lasti": [252, 382, 425], "tb_lineno": [252, 378, 382, 425], "tb_next": [252, 378, 382, 425, 477], "f_back": [252, 378, 425, 470], "f_code": [252, 378, 425, 462, 470], "f_lineno": [252, 425, 462, 469, 470, 476], "f_trace": [252, 349, 425, 470], "co_argcount": [252, 425], "co_flag": [252, 425], "co_": 252, "co_posonlyargcount": [252, 425, 478], "co_kwonlyargcount": [252, 425], "co_nloc": [252, 425], "co_stacks": [252, 425], "gi_fram": [252, 464], "gi_run": 252, "gi_cod": [252, 465, 475], "gi_yieldfrom": [252, 475], "cr_await": 252, "cr_frame": 252, "cr_run": 252, "cr_code": 252, "cr_origin": [252, 349], "getmembers_stat": [252, 470], "ismodul": 252, "isclass": [252, 425], "ismethod": 252, "isfunct": 252, "isgeneratorfunct": [252, 465], "isgener": [252, 465], "iscoroutinefunct": [252, 386, 471, 475], "markcoroutinefunct": [252, 471], "gen_coro": 252, "isasyncgenfunct": 252, "agen": [252, 427], "isasyncgen": 252, "istraceback": 252, "isfram": 252, "iscod": 252, "isbuiltin": 252, "ismethodwrapp": [252, 470], "methodwrappertyp": [252, 382, 470, 477], "isroutin": 252, "isabstract": [252, 465], "ismethoddescriptor": 252, "isdatadescriptor": 252, "isgetsetdescriptor": 252, "ismemberdescriptor": 252, "getdoc": [252, 425, 475, 478], "getcom": [252, 310], "getfil": 252, "getmodul": 252, "getsourcefil": 252, "getsourcelin": 252, "getsourc": 252, "follow_wrap": [252, 475], "eval_str": 252, "__signature__": [252, 474], "return_annot": 252, "boundargu": [252, 473, 475, 479], "bind_parti": 252, "omiss": [252, 311, 334], "new_sig": 252, "anno": 252, "from_cal": [252, 469, 470, 475], "mysignatur": 252, "implicit0": [252, 476], "keyword_onli": 252, "positional_onli": 252, "var_posit": 252, "var_keyword": 252, "apply_default": [252, 475], "getclasstre": 252, "getfullargspec": [252, 310, 470, 474, 475, 476], "fullargspec": 252, "varkw": 252, "kwonlydefault": 252, "getargspec": [252, 470, 474, 475, 476], "getargvalu": [252, 475], "arginfo": 252, "formatargvalu": [252, 475], "formatarg": 252, "formatvararg": 252, "formatvarkw": 252, "formatvalu": 252, "getmro": 252, "getcallarg": [252, 466, 475], "getclosurevar": [252, 473], "closurevar": 252, "conting": 252, "frameinfo": [252, 470], "code_context": 252, "lifespan": 252, "handle_stackframe_without_leak": 252, "currentfram": [252, 470], "getframeinfo": [252, 470], "getouterfram": [252, 470, 475], "getinnerfram": [252, 470, 475], "getattr_stat": [252, 383, 471, 472], "_foo": 252, "slot_descriptor": 252, "getset_descriptor": 252, "wrapper_descriptor": [252, 463], "descriptor_typ": 252, "getgeneratorst": [252, 472], "gen_creat": [252, 472], "gen_run": 252, "gen_suspend": [252, 472], "gen_clos": [252, 472], "getcoroutinest": [252, 475], "coro_cr": 252, "coro_run": 252, "coro_suspend": 252, "coro_clos": 252, "getasyncgenst": [252, 471], "ag_run": [252, 479], "ag_fram": 252, "agen_cr": 252, "agen_run": 252, "agen_suspend": 252, "agen_clos": 252, "getgeneratorloc": [252, 473], "getcoroutineloc": [252, 475], "getasyncgenloc": [252, 471], "co_optim": 252, "co_newloc": 252, "co_vararg": 252, "co_varkeyword": 252, "co_nest": 252, "co_gener": 252, "co_coroutin": [252, 478], "co_async_gener": 252, "bufferflag": [252, 425, 471], "c_contigu": [252, 341], "f_contigu": [252, 341], "any_contigu": 252, "contig_ro": 252, "strided_ro": 252, "records_ro": 252, "full_ro": 252, "bore": [254, 438, 466], "novel": [254, 281, 461, 462, 464], "enjoi": [254, 383, 410, 471], "glibc": [254, 256, 290, 319, 470, 474, 478, 479], "sandbox": [254, 321, 349], "sdk": [254, 453, 479], "wasm": [254, 453], "nodej": 254, "wasmtim": 254, "pyodid": [254, 470], "pyscript": 254, "xmlhttprequest": 254, "markdown": [255, 469], "md": 255, "long_descript": 255, "686": [255, 290], "597": [255, 469], "pythonwarndefaultencod": [255, 452, 469], "text_encod": 255, "blksize": [255, 404], "stacklevel": [255, 264, 397, 464], "unsupportedoper": 255, "unoptim": [255, 475], "bufferedrwpair": [255, 465], "readal": [255, 469, 474], "readinto1": [255, 475], "seek_": 255, "seek_hol": [255, 290, 473], "seek_data": [255, 290, 473], "immin": 255, "latenc": [255, 266, 290, 438, 466, 469, 476], "initial_byt": 255, "getbuff": [255, 472], "ab56ef": 255, "buffer_s": [255, 311, 465], "line_buff": 255, "nsecond": [255, 446], "incrementalnewlinedecod": 255, "reconstruct": [255, 296, 304, 375, 404, 441, 443], "subnet": [256, 473, 475], "downsid": [256, 458, 473, 477], "3232235521": [256, 342], "xc0": [256, 461], "xa8": 256, "max_prefixlen": 256, "reverse_point": [256, 475], "arpa": [256, 356, 475], "ip6": [256, 475], "is_multicast": 256, "multicast": [256, 334, 359, 395], "3171": 256, "2373": 256, "is_priv": 256, "is_glob": [256, 348, 474], "is_unspecifi": 256, "5735": 256, "is_reserv": [256, 293], "is_loopback": 256, "3330": 256, "is_link_loc": 256, "3927": 256, "0b11000000101010000000000000000001": 256, "2001_0db8_0000_0000_0000_0000_0000_1000": 256, "_n": 256, "0x2001_0db8_0000_0000_0000_0000_0000_1000": 256, "longhand": 256, "4291": 256, "0abc": 256, "0007": 256, "0def": 256, "scope_id": [256, 334, 479], "4007": 256, "fe80": 256, "ff02": 256, "5678": [256, 395], "is_site_loc": 256, "3879": 256, "4193": 256, "ipv4_map": 256, "sixtofour": 256, "6to4": 256, "3056": 256, "teredo": 256, "4380": 256, "nbit": 256, "ff00": 256, "cisco": 256, "network_address": 256, "broadcast_address": 256, "with_prefixlen": 256, "with_netmask": 256, "with_hostmask": 256, "prefixlen": 256, "wholli": [256, 410], "address_exclud": 256, "n1": 256, "n2": 256, "prefixlen_diff": 256, "new_prefix": 256, "supernet": [256, 475], "subnet_of": [256, 477], "supernet_of": [256, 477], "compare_network": 256, "db00": 256, "anycast": 256, "v4_int_to_pack": 256, "v6_int_to_pack": 256, "summarize_address_rang": [256, 475], "ipaddr": 256, "collapse_address": [256, 475], "get_mixed_type_kei": 256, "sortabl": [256, 266], "apl": [258, 468, 472], "sml": 258, "recast": [258, 472], "algebra": [258, 451, 465], "succinctli": [258, 437], "tabul": [258, 341, 408], "vec1": 258, "vec2": [258, 383], "p0": 258, "plast": 258, "p_n": 258, "abcdefg": [258, 288, 470], "q0": 258, "q1": 258, "from_iter": [258, 465], "pred": [258, 396], "pairwis": [258, 381, 469], "it1": 258, "it2": 258, "itn": 258, "fillvalu": [258, 318, 465], "ax": 258, "bd": 258, "addabl": 258, "110": [258, 302, 340, 342, 438], "amort": 258, "1296": 258, "loan": 258, "annual": [258, 479], "account_upd": 258, "bal": 258, "pmt": 258, "1_000": 258, "960": 258, "918": 258, "874": 258, "828": 258, "779": [258, 379], "728": [258, 301], "674": 258, "559": 258, "497": 258, "flattened_data": 258, "violet": [258, 381], "unflatten": 258, "013": 258, "023": 258, "uniq": [258, 463], "BY": [258, 337, 423], "uniquekei": 258, "aaaabbbccdaabbb": 258, "aaaabbbccd": 258, "aaaa": [258, 316, 466], "bbb": 258, "tgtkei": 258, "currkei": 258, "currvalu": 258, "_grouper": 258, "nexti": 258, "021": 258, "210": [258, 471], "odomet": 258, "ai": [258, 316], "bx": 258, "cy": 258, "dx": [258, 340], "dy": 258, "011": 258, "prod": [258, 272, 478], "mydequ": 258, "newval": 258, "uneven": [258, 315], "num_act": 258, "incub": 258, "sliding_window": 258, "iter_index": 258, "superior": 258, "repeatfunc": 258, "list_of_list": 258, "ncycl": 258, "all_equ": 258, "first_tru": 258, "unique_everseen": 258, "abbccad": 258, "unique_justseen": 258, "aabcadeaf": 258, "seq_index": 258, "cdef": 258, "defg": 258, "grouper": 258, "gxx": 258, "sakki": [258, 466], "is_odd": 258, "subslic": [258, 315], "getitem": [258, 288, 387, 461], "iter_except": 258, "before_and_aft": 258, "abcdefghi": 258, "all_upp": 258, "true_iter": 258, "powerset": 258, "sum_of_squar": 258, "1400": 258, "sumprod": [258, 272, 471], "reshap": 258, "matmul": [258, 288, 475], "m2": [258, 461, 466, 470, 473], "matric": [258, 285, 460], "convolv": 258, "convolut": 258, "betterexplain": 258, "kuxjwb4lzsa": 258, "padded_sign": 258, "windowed_sign": 258, "polynomial_from_root": 258, "x\u00b3": 258, "4x\u00b2": 258, "17x": [258, 469], "polynomial_ev": 258, "horner": 258, "polynomial_deriv": 258, "3x\u00b2": 258, "8x": 258, "siev": 258, "isqrt": [258, 272, 478], "1_000_000_000_000_007": 258, "360620266859": 258, "1_000_000_000_000_403": 258, "1000000000000403": 258, "totient": 258, "coprim": [258, 341], "mathworld": 258, "wolfram": 258, "totientfunct": 258, "7159": [259, 475], "4627": 259, "ecma": 259, "sort_kei": [259, 301, 472], "x08ar": 259, "as_complex": 259, "dct": 259, "object_hook": 259, "parse_float": [259, 376], "complexencod": 259, "unord": [259, 280, 341, 425, 439], "skipkei": [259, 301], "ensure_ascii": [259, 475], "check_circular": 259, "allow_nan": 259, "item_separ": 259, "key_separ": 259, "parse_int": 259, "parse_const": 259, "object_pairs_hook": [259, 466, 468], "deseri": [259, 281, 296, 337, 422, 443, 466, 470, 474, 476], "num_str": [259, 376], "jsondecod": [259, 466, 476], "raw_decod": 259, "extran": [259, 305, 366], "bigobject": 259, "colno": [259, 316, 475], "forbid": [259, 296, 338, 341, 370, 406, 466], "weird_json": 259, "voluntarili": [259, 290], "mp_film": 259, "1971": [259, 337, 340], "holi": [259, 337, 342, 439], "grail": [259, 337, 400, 439, 471], "2028": 259, "2029": 259, "ecmascript": [259, 407], "iskeyword": [260, 341], "issoftkeyword": 260, "softkwlist": 260, "detect_encod": [262, 375], "getlin": [262, 379, 475], "module_glob": [262, 397], "clearcach": 262, "checkcach": 262, "lazycach": [262, 475], "_local": [263, 479], "localeconv": [263, 341, 449, 476, 477], "lc_numer": [263, 341, 475, 476, 477], "decimal_point": [263, 341], "thousands_sep": [263, 341], "char_max": 263, "lc_monetari": 263, "int_curr_symbol": 263, "currency_symbol": [263, 449], "p_cs_preced": 263, "n_cs_preced": 263, "p_sep_by_spac": 263, "n_sep_by_spac": 263, "mon_decimal_point": 263, "frac_digit": [263, 449], "int_frac_digit": 263, "mon_thousands_sep": 263, "mon_group": 263, "positive_sign": 263, "negative_sign": 263, "p_sign_posn": 263, "n_sign_posn": 263, "d_t_fmt": 263, "d_fmt": 263, "t_fmt": 263, "t_fmt_ampm": 263, "day_2": 263, "day_3": 263, "day_4": 263, "day_5": 263, "day_6": 263, "day_7": 263, "abday_1": 263, "abday_2": 263, "abday_3": 263, "abday_4": 263, "abday_5": 263, "abday_6": 263, "abday_7": 263, "mon_1": 263, "mon_2": 263, "mon_3": 263, "mon_4": 263, "mon_5": 263, "mon_6": 263, "mon_7": 263, "mon_8": 263, "mon_9": 263, "mon_10": 263, "mon_11": 263, "mon_12": 263, "abmon_1": 263, "abmon_2": 263, "abmon_3": 263, "abmon_4": 263, "abmon_5": 263, "abmon_6": 263, "abmon_7": 263, "abmon_8": 263, "abmon_9": 263, "abmon_10": 263, "abmon_11": 263, "abmon_12": 263, "radixchar": 263, "thousep": 263, "yesexpr": 263, "noexpr": 263, "crncystr": 263, "era": [263, 464], "emperor": 263, "reign": 263, "era_d_t_fmt": 263, "era_d_fmt": 263, "era_t_fmt": 263, "alt_digit": 263, "getdefaultlocal": [263, 452, 470, 471], "envvar": [263, 359], "1766": 263, "getlocal": [263, 470], "lc_": 263, "do_setlocal": [263, 290], "localenam": 263, "resetlocal": [263, 470, 471], "string1": [263, 337, 439], "string2": [263, 337, 439], "lc_collat": 263, "format_str": [263, 342, 449, 464, 471, 475, 477], "deloc": [263, 475], "atof": [263, 463, 464], "ssh": [263, 285, 328, 329, 391], "pyctyp": [263, 469], "py_tolow": [263, 466], "loc": 263, "xe4n": 263, "umlaut": 263, "bind_textdomain_codeset": [263, 463, 470, 478], "grip": [264, 373], "geteffectivelevel": 264, "getchild": [264, 466], "getchildren": [264, 466, 472, 478, 479], "stack_info": 264, "clientip": 264, "fblogg": 264, "hdlr": 264, "findcal": 264, "lno": 264, "sinfo": 264, "hashandl": 264, "createlock": [264, 266], "tidi": [264, 385, 462, 464, 465], "emiss": [264, 359], "formattim": 264, "preparatori": 264, "formatstack": 264, "uuu": 264, "default_time_format": 264, "default_msec_format": 264, "print_except": [264, 266, 378, 469], "linefmt": 264, "formathead": 264, "formatfoot": 264, "footer": [264, 338], "tracebacktyp": [264, 378, 382, 425, 477], "msec": [264, 364, 475], "0f": [264, 472], "004": 264, "896": [264, 340], "la": [264, 464], "tasknam": 264, "entrant": 264, "getloggerclass": 264, "throttl": 264, "28524": 264, "addlevelnam": 264, "getlevelnamesmap": [264, 470], "reinstat": [264, 437], "gethandlerbynam": [264, 265], "gethandlernam": 264, "attrdict": 264, "reconstitut": [264, 296], "orderli": 264, "klass": 264, "capturewarn": [264, 397], "formatwarn": [264, 397, 465], "inabl": [265, 290, 423], "dictconfigur": 265, "dictconfigclass": 265, "uncustom": 265, "default_logging_config_port": 265, "decrypt": [265, 338, 419], "victim": 265, "customis": [265, 315, 381], "allow_foo": 265, "logconfig": 265, "compel": [265, 466], "customformatterfactori": 265, "_after_": 265, "my_app": 265, "tld": 265, "support_team": 265, "dev_team": 265, "houston": 265, "mykei": 265, "config_dict": 265, "baseconfigur": 265, "qhand": 265, "queue_factori": 265, "customlisten": 265, "hand_name_1": 265, "hand_name_2": 265, "log01": 265, "logger_log01": 265, "hand01": 265, "handler_hand01": 265, "form01": 265, "formatter_form01": 265, "log02": 265, "log03": 265, "log04": 265, "log05": 265, "log06": 265, "log07": 265, "hand02": 265, "hand03": 265, "hand04": 265, "hand05": 265, "hand06": 265, "hand07": 265, "hand08": 265, "hand09": 265, "form02": 265, "form03": 265, "form04": 265, "form05": 265, "form06": 265, "form07": 265, "form08": 265, "form09": 265, "logger_pars": 265, "_defaultformatt": 265, "handler_hand02": 265, "handler_hand03": 265, "handler_hand04": 265, "default_udp_logging_port": 265, "handler_hand05": 265, "syslog_udp_port": [265, 266], "log_us": [265, 266, 353], "handler_hand06": 265, "handler_hand07": 265, "user1": [265, 470], "user2": [265, 470], "handler_hand08": 265, "handler_hand09": 265, "9022": 265, "typifi": 265, "customfield": 265, "setstream": [266, 278, 477], "42378": 266, "newsyslog": 266, "logrot": 266, "inod": [266, 290, 339], "st_ino": [266, 290, 339, 471], "reopenifneed": [266, 476], "precursor": 266, "rotation_filenam": 266, "rollov": [266, 357, 474], "getfilestodelet": 266, "default_nam": [266, 425], "predetermin": 266, "dorollov": 266, "attim": [266, 474], "w0": 266, "w6": 266, "w1": [266, 437], "d_": 266, "makesocket": 266, "record_attr_dict": 266, "datalen": 266, "createsocket": [266, 470], "retrystart": 266, "retryfactor": 266, "retrymax": 266, "rsyslog": 266, "monterei": 266, "gh": [266, 281, 316, 345, 383, 453, 469, 470, 471], "91070": 266, "12168": 266, "append_nul": [266, 473], "12419": 266, "encodeprior": 266, "log_": 266, "log_alert": [266, 353], "crit": 266, "log_crit": [266, 353], "log_debug": [266, 353], "emerg": [266, 438, 459], "panic": [266, 462], "log_emerg": [266, 353], "log_err": [266, 353], "log_info": [266, 353], "log_notic": [266, 353], "log_warn": [266, 353], "log_auth": [266, 353], "authpriv": 266, "log_authpriv": [266, 353], "cron": 266, "log_cron": [266, 353], "log_daemon": [266, 353], "log_ftp": 266, "kern": 266, "log_kern": [266, 353], "lpr": 266, "log_lpr": [266, 353], "log_mail": [266, 353], "log_new": [266, 353], "log_syslog": [266, 353], "uucp": 266, "log_uucp": [266, 353], "local0": 266, "log_local0": [266, 353], "local1": 266, "log_local1": 266, "local2": 266, "log_local2": 266, "local3": 266, "log_local3": 266, "local4": 266, "log_local4": 266, "local5": 266, "log_local5": 266, "local6": 266, "log_local6": 266, "local7": 266, "log_local7": [266, 353], "mapprior": 266, "hammond": [266, 458, 459, 461, 462, 473], "dllname": [266, 478], "logtyp": 266, "win32servic": 266, "slimmer": 266, "geteventcategori": 266, "geteventtyp": 266, "getmessageid": 266, "credenti": [266, 285, 334, 392, 458, 475], "getsubject": 266, "shouldflush": 266, "flushonclos": 266, "settarget": 266, "maplogrecord": 266, "enqueue_sentinel": 266, "lzmafil": [267, 474], "lzmaerror": 267, "preset": [267, 294, 300, 355], "lzmadecompressor": [267, 475], "lzmacompressor": 267, "format_xz": 267, "format_alon": 267, "format_raw": 267, "format_auto": 267, "check_non": 267, "check_crc32": 267, "check_crc64": 267, "check_sha256": 267, "preset_extrem": 267, "preset_default": 267, "memlimit": 267, "check_unknown": 267, "is_check_support": 267, "liblzma": [267, 470], "filter_lzma1": 267, "filter_lzma2": 267, "filter_delta": 267, "bcj": 267, "filter_x86": 267, "filter_ia64": 267, "filter_arm": 267, "filter_armthumb": 267, "filter_powerpc": 267, "filter_sparc": 267, "dict_siz": 267, "lc": 267, "mode_fast": 267, "mode_norm": 267, "nice_len": 267, "mf": 267, "mf_hc3": 267, "mf_hc4": 267, "mf_bt2": 267, "mf_bt3": 267, "mf_bt4": 267, "start_offset": 267, "data_in": 267, "data_out": 267, "lzc": 267, "out1": 267, "out2": 267, "out3": 267, "out4": 267, "lzf": 267, "my_filt": 267, "noteworthi": [268, 442, 459, 460], "get_messag": 268, "get_byt": [268, 472], "get_str": [268, 472], "get_fil": [268, 472], "externalclasherror": 268, "qmail": 268, "cur": [268, 337], "courier": [268, 366, 369], "exclam": [268, 294, 342, 373, 374, 403, 432], "list_fold": 268, "get_fold": 268, "nosuchmailboxerror": 268, "add_fold": 268, "remove_fold": 268, "notemptyerror": 268, "deserv": [268, 447, 459], "inventor": [268, 366], "shortcom": [268, 462], "mboxo": 268, "mh_sequenc": 268, "mh_profil": 268, "get_sequ": 268, "set_sequ": 268, "correspondingli": [268, 316, 459], "nmh": 268, "gpl": [268, 423, 461], "rmail": 268, "037": 268, "014": 268, "abridg": 268, "attract": [268, 465, 467], "get_label": 268, "multichannel": 268, "memorandum": 268, "newsread": 268, "composit": [268, 349, 373, 384, 429, 439, 470], "bounc": [268, 459], "get_subdir": 268, "get_flag": 268, "set_subdir": 268, "set_flag": 268, "add_flag": 268, "remove_flag": 268, "set_dat": 268, "get_info": 268, "set_info": 268, "unseen": 268, "mua": [268, 338, 477], "get_from": 268, "set_from": 268, "time_": 268, "add_sequ": 268, "remove_sequ": 268, "set_label": 268, "add_label": 268, "remove_label": 268, "get_vis": 268, "set_vis": 268, "update_vis": 268, "list_nam": 268, "list_id": 268, "mpeg": 269, "xmpeg": 269, "1524": 269, "findmatch": 269, "cap": 269, "showparti": 269, "getcap": [269, 285], "tmp1223": 269, "unmarsh": [271, 470], "unauthent": [271, 311, 338, 406, 408, 409, 410, 411, 416, 417], "therein": [271, 296], "stem": [271, 293, 419, 466, 470], "comb": [272, 340, 439, 470, 478], "\u207f": 272, "copysign": [272, 465], "fab": 272, "fmod": [272, 427], "frexp": 272, "mantissa": [272, 315, 463, 465], "\u00b2": 272, "lcm": [272, 479], "ldexp": [272, 315], "modf": 272, "nextaft": [272, 471, 479], "ulp": [272, 315, 349, 465, 479], "halfwai": [272, 467], "trunc": [272, 286, 341, 425, 465], "denorm": [272, 349], "epsilon": [272, 349, 465], "cbrt": [272, 340, 470], "cube": [272, 340, 443, 446, 470], "718281": 272, "exp2": [272, 470], "expm1": [272, 466, 472], "0000050000069649e": 272, "0000050000166668e": 272, "log1p": [272, 465], "log2": [272, 472, 473], "bit_length": [272, 315, 341, 466, 468], "quadrant": 272, "euclidean": [272, 478], "qx": 272, "norm": [272, 432], "hypotenus": 272, "triangl": [272, 381], "pythagorean": 272, "theorem": [272, 340, 341], "hyperbola": 272, "erfc": [272, 466, 472, 477], "gamma": [272, 315, 466, 472], "lgamma": [272, 466, 472], "141592": 272, "283185": 272, "circumfer": 272, "vi": [272, 317], "hart": 272, "celebr": 272, "pie": [272, 337], "guess_all_extens": 273, "knownfil": 273, "rebuilt": [273, 473, 475], "read_mime_typ": 273, "add_typ": 273, "suffix_map": 273, "recognit": 273, "tgz": [273, 457], "encodings_map": 273, "types_map": [273, 465], "common_typ": 273, "types_map_inv": 273, "read_windows_registri": 273, "access_read": 275, "access_writ": 275, "access_copi": 275, "access_default": 275, "prot": 275, "tagnam": [275, 373, 407, 408, 409], "allocationgranular": 275, "map_shar": 275, "prot_writ": 275, "prot_read": 275, "map_priv": 275, "lieu": [275, 423], "pages": 275, "madvis": [275, 478], "advic": [275, 290, 458, 471], "pagefil": 275, "write_byt": [275, 293, 475], "madv_norm": 275, "madv_random": 275, "madv_sequenti": 275, "madv_willne": 275, "madv_dontne": 275, "madv_remov": 275, "madv_dontfork": 275, "madv_dofork": 275, "madv_hwpoison": 275, "madv_merg": 275, "madv_unmerg": 275, "madv_soft_offlin": 275, "madv_hugepag": 275, "madv_nohugepag": 275, "madv_dontdump": 275, "madv_dodump": 275, "madv_fre": 275, "madv_nosync": 275, "madv_autosync": 275, "madv_nocor": 275, "madv_cor": 275, "madv_protect": 275, "madv_free_reus": 275, "map_denywrit": 275, "map_execut": 275, "map_anon": 275, "map_anonym": 275, "map_popul": 275, "map_stack": 275, "map_aligned_sup": 275, "map_conc": 275, "addpackagepath": 276, "pkg_name": [276, 359, 379], "replacepackag": 276, "oldnam": 276, "newnam": [276, 449], "replace_path": 276, "run_script": 276, "oldpath": 276, "newpath": 276, "baconhamegg": 276, "globalnam": 276, "badmodul": 276, "_type": 276, "_inverted_registri": 276, "_slotnam": 276, "_compil": [276, 305], "isstr": 276, "_sre": [276, 475], "_optimize_unicod": 276, "_constant": [276, 341], "repeat_on": 276, "makedict": 276, "at_end_lin": 276, "_expand": 276, "_parser": [276, 305], "_patternend": 276, "sre_flag_unicod": 276, "inttyp": 276, "typetyp": 276, "msi": [278, 458, 464, 475, 477], "cabinet": 278, "fcicreat": 278, "cabnam": 278, "mszip": 278, "uuidcreat": 278, "uuidtostr": 278, "opendatabas": 278, "msiopendatabas": 278, "msidbopen_createdirect": 278, "msidbopen_cr": 278, "msidbopen_direct": 278, "msidbopen_readonli": 278, "msidbopen_transact": 278, "msidbopen_patchfil": 278, "createrecord": 278, "msicreaterecord": 278, "init_databas": 278, "productnam": 278, "productcod": 278, "productvers": 278, "manufactur": 278, "_validation_record": 278, "add_data": [278, 392, 474], "add_tabl": 278, "add_stream": 278, "_stream": 278, "gen_uuid": 278, "openview": 278, "msidatabaseopenview": 278, "msidatabasecommit": 278, "getsummaryinform": 278, "msigetsummaryinform": 278, "msiclosehandl": 278, "msiviewexecut": 278, "getcolumninfo": 278, "msiviewgetcolumninfo": 278, "msicolinfo_nam": 278, "msicolinfo_typ": 278, "msiviewfetch": 278, "msiviewmodifi": 278, "msimodify_seek": 278, "msimodify_refresh": 278, "msimodify_insert": 278, "msimodify_upd": 278, "msimodify_assign": 278, "msimodify_replac": 278, "msimodify_merg": 278, "msimodify_delet": 278, "msimodify_insert_temporari": 278, "msimodify_valid": 278, "msimodify_validate_new": 278, "msimodify_validate_field": 278, "msimodify_validate_delet": 278, "msiviewclos": 278, "summaryinform": 278, "getproperti": [278, 413], "msisummaryinfogetproperti": 278, "pid_codepag": 278, "pid_titl": 278, "pid_subject": 278, "pid_author": 278, "pid_keyword": 278, "pid_com": 278, "pid_templ": 278, "pid_lastauthor": 278, "pid_revnumb": 278, "pid_lastprint": 278, "pid_create_dtm": 278, "pid_lastsave_dtm": 278, "pid_pagecount": 278, "pid_wordcount": 278, "pid_charcount": 278, "pid_appnam": 278, "pid_secur": 278, "getpropertycount": 278, "msisummaryinfogetpropertycount": 278, "setproperti": [278, 412, 413], "msisummaryinfosetproperti": 278, "msisummaryinfopersist": 278, "getfieldcount": 278, "msirecordgetfieldcount": 278, "getinteg": [278, 465], "setstr": 278, "msirecordsetstr": 278, "msirecordsetstream": 278, "setinteg": 278, "msirecordsetinteg": 278, "cleardata": 278, "msirecordcleardata": 278, "msierror": 278, "basedir": 278, "componentflag": 278, "start_compon": 278, "defaultdir": 278, "keypath": 278, "add_fil": 278, "remove_pyc": 278, "featurecompon": 278, "set_curr": 278, "dlg": 278, "controlev": 278, "eventmap": 278, "controlcondit": 278, "radiobuttongroup": 278, "control_next": 278, "pushbutton": 278, "next_control": 278, "radiogroup": 278, "radiobutton": [278, 372, 373], "adminexecutesequ": 278, "adminuisequ": 278, "advtexecutesequ": 278, "installexecutesequ": 278, "installuisequ": 278, "uitext": 278, "actiontext": 278, "lk_": 279, "lk_lock": 279, "lk_rlck": 279, "lk_nblck": 279, "lk_nbrlck": 279, "lk_unlck": 279, "setmod": 279, "o_append": [279, 290], "fdopen": [279, 290, 334, 425], "xe0": 279, "keycod": [279, 366], "getwch": [279, 465], "putch": 279, "putwch": [279, 465], "unicode_char": 279, "ungetwch": 279, "heapmin": 279, "getppid": [280, 290], "set_start_method": [280, 471, 474], "preload": [280, 453], "33725": [280, 478], "sharedmemori": [280, 281], "reboot": [280, 293, 474], "mp": [280, 462], "duplex": [280, 292], "parent_conn": 280, "child_conn": 280, "liabl": [280, 399, 423], "1415927": 280, "offload": 280, "imap_unord": 280, "apply_async": [280, 465], "multiple_result": 280, "patienc": 280, "poolwork": 280, "is_al": [280, 362, 465, 479], "orphan": 280, "authkei": [280, 281], "waitforsingleobject": 280, "waitformultipleobject": 280, "processerror": 280, "buffertooshort": 280, "recv_bytes_into": 280, "authenticationerror": 280, "joinablequeu": [280, 475], "infinitesim": 280, "cancel_join_thread": 280, "conn1": 280, "conn2": 280, "feeder": [280, 383], "sem_getvalu": 280, "join_thread": [280, 359], "allow_exit_without_flush": 280, "3770": 280, "active_children": 280, "sched_getaffin": [280, 290, 473], "parent_process": 280, "freeze_support": 280, "get_all_start_method": [280, 474], "get_start_method": [280, 474], "allow_non": [280, 416, 417, 462], "set_execut": 280, "set_forkserver_preload": 280, "send_byt": 280, "recv_byt": 280, "arr1": 280, "arr2": 280, "solitari": 280, "unown": 280, "sem_timedwait": 280, "typecode_or_typ": 280, "get_lock": 280, "size_or_initi": 280, "rawarrai": 280, "rawvalu": 280, "get_obj": 280, "875": 280, "375": [280, 340], "1111111111111111": 280, "515625": 280, "0625": [280, 446], "640625": 280, "syncmanag": 280, "basemanag": [280, 281], "shutdown_timeout": 280, "get_serv": 280, "xmlrpclib": [280, 461, 462, 463, 464, 465, 466, 467], "50000": [280, 364], "typeid": [280, 478], "proxytyp": [280, 399], "method_to_typeid": 280, "create_method": 280, "baseproxi": 280, "_callmethod": 280, "_exposed_": 280, "_method_to_typeid_": 280, "_z": 280, "mathsclass": 280, "mymanag": 280, "queuemanag": 280, "get_queu": 280, "listproxi": 280, "l_outer": 280, "d_first_inn": 280, "lproxi": 280, "remoteerror": 280, "_getvalu": 280, "deregist": 280, "maxtasksperchild": [280, 466], "apach": [280, 338, 416, 423, 450, 459, 476], "mod_wsgi": [280, 345], "error_callback": 280, "asyncresult": 280, "map_async": [280, 465, 473], "lazier": 280, "starmap_async": [280, 473], "outstand": [280, 423], "deliver_challeng": 280, "answer_challeng": 280, "af_pip": 280, "last_accept": 280, "object_list": 280, "waitabl": [280, 290, 325, 363, 470], "1729": 280, "pipenam": 280, "servernam": 280, "get_logg": 280, "log_to_stderr": 280, "doom": [280, 464], "mainprocess": 280, "pymp": 280, "threadpool": 280, "_bootstrap": [280, 379], "collid": [280, 316, 392, 433], "_pid": 280, "5155": 280, "5313": 280, "5331": 280, "_h": 280, "generatorproxi": 280, "get_operator_modul": 280, "foo1": [280, 316], "foo2": [280, 316], "94": [280, 315, 466], "calculatestar": 280, "pow3": 280, "imap_it": 280, "imap_unordered_it": 280, "tgot": 280, "imapiter": 280, "applyresult": 280, "number_of_process": 280, "tasks1": 280, "tasks2": 280, "done_queu": 280, "multicor": 281, "smp": 281, "sharedmemorymanag": 281, "shm_a": 281, "shm_b": 281, "howdi": 281, "ndarrai": 281, "np": [281, 473], "shm": 281, "dtype": [281, 383], "psm_21467_46075": 281, "existing_shm": 281, "int64": 281, "888": 281, "shareablelist": 281, "smm": 281, "psm_6572_7512": 281, "raw_shm": 281, "another_sl": 281, "psm_6572_12221": 281, "depict": 281, "do_work": [281, 290], "total_result": 281, "storabl": 281, "10m": 281, "106939": 281, "nul_bug_demo": 281, "deserialized_sl": 281, "netrcparseerror": 283, "mapnam": 284, "default_domain": 284, "joi": [284, 381], "get_default_domain": 284, "poster": 285, "3977": 285, "2980": 285, "newsgroup": [285, 451, 463], "gmane": [285, 473], "committ": [285, 473], "1096": 285, "1087": 285, "1088": 285, "1089": 285, "1090": 285, "1091": 285, "1092": 285, "1093": 285, "1094": 285, "fellow": 285, "240": [285, 381], "119": [285, 340, 379, 478], "readermod": 285, "usenetrc": 285, "authinfo": 285, "nntppermanenterror": 285, "1755": [285, 473], "nntp_ssl": [285, 472, 479], "4642": 285, "nntperror": 285, "nntpreplyerror": 285, "nntptemporaryerror": 285, "nntpprotocolerror": 285, "nntpdataerror": 285, "nntp_version": 285, "nntp_implement": 285, "newgroup": 285, "groupinfo": 285, "tor": 285, "newnew": 285, "group_pattern": [285, 424, 428], "offlin": [285, 379, 458], "grouppattern": 285, "wildmat": 285, "295": [285, 471], "biopython": 285, "elid": 285, "message_spec": 285, "xover": 285, "article_numb": 285, "art_num": 285, "117216": 285, "xref": 285, "ik1hcnrpbib2libmw7z3axmi": 285, "loewi": 285, "message_id": 285, "9099": 285, "20030112190404": 285, "ge29873": 285, "metaslash": 285, "neal": [285, 462, 464, 465], "norwitz": [285, 462, 464, 465], "ihav": 285, "slave": [285, 290, 306, 366], "xhdr": 285, "header_str": 285, "e9buter_en_python": 285, "d\u00e9buter": 285, "chjvymzdqg1ligrlig1hdhjpy2u": 285, "probl\u00e8m": 285, "poor": [286, 302, 305, 316, 460, 461], "myfoo": 286, "myintegr": 286, "do_my_adding_stuff": 286, "othertypeiknowabout": 286, "do_my_other_adding_stuff": 286, "intellig": [286, 289, 291, 292, 294], "_operator_fallback": 286, "monomorphic_oper": 286, "fallback_oper": 286, "__r": 286, "_add": 286, "__not__": 288, "inv": [288, 475], "__inv__": 288, "truediv": 288, "66": [288, 386, 439, 460, 465], "__concat__": 288, "countof": [288, 479], "delitem": 288, "indexof": [288, 479], "setitem": [288, 387], "extractor": [288, 463], "resolve_attr": 288, "cdefg": 288, "soldier": 288, "rank": [288, 340, 410, 471], "captain": [288, 476], "dotterbart": 288, "banana": [288, 341, 439, 448], "pear": [288, 439, 448], "iadd": 288, "iand": 288, "iconcat": 288, "__iconcat__": 288, "ifloordiv": 288, "ilshift": 288, "imod": 288, "imatmul": [288, 475], "ior": 288, "ipow": 288, "irshift": 288, "isub": 288, "itruediv": 288, "ixor": 288, "yourscript": 289, "foutfil": 289, "qfoutfil": 289, "acquaint": 289, "execl": [289, 290], "pf": [289, 373], "ffoo": 289, "controversi": [289, 461], "contradictori": 289, "whatsoev": [289, 322, 423], "mutant": 289, "oddbal": 289, "rightli": 289, "humbl": 289, "opt_str": 289, "jam": 289, "n42": 289, "vewwi": 289, "wabbit": 289, "novic": 289, "bland": [289, 464, 465], "clue": 289, "optiongroup": 289, "optioncontain": 289, "add_option_group": 289, "get_option_group": 289, "print_vers": 289, "get_vers": 289, "4x": [289, 469, 471, 473, 474, 476], "suppress_usag": 289, "option_list": 289, "standard_option_list": 289, "option_class": 289, "indentedhelpformatt": 289, "titledhelpformatt": 289, "add_help_opt": 289, "make_opt": 289, "irrelev": [289, 466], "callback_arg": 289, "callback_kwarg": 289, "suppress_help": 289, "fbar": 289, "mypkg": [289, 385], "check_choic": 289, "poke": 289, "enable_interspersed_arg": 289, "get_opt": 289, "set_conflict_handl": 289, "optionconflicterror": 289, "whittl": 289, "set_usag": 289, "get_usag": 289, "overkil": 289, "rarg": 289, "optionvalu": 289, "record_foo_seen": 289, "saw_foo": 289, "check_ord": 289, "moon": 289, "check_moon": 289, "is_moon_ful": 289, "store_valu": 289, "hairi": 289, "intricaci": 289, "stab": 289, "vararg_callback": 289, "floatabl": 289, "vararg_attr": 289, "check_mytyp": 289, "wind": 289, "sillier": 289, "check_complex": 289, "myoption": 289, "store_act": 289, "typed_act": 289, "always_typed_act": 289, "take_act": 289, "ding": [289, 479], "dong": 289, "ensure_valu": 289, "optparse_pars": 289, "valv": 289, "badoptionerror": 289, "ambiguousoptionerror": 289, "threat": 290, "getuid": 290, "unam": [290, 300, 349, 352, 355, 472, 473], "device_encod": 290, "nonsens": [290, 474], "ctermid": 290, "environb": [290, 345, 472], "supports_bytes_environ": [290, 472], "fchdir": [290, 475], "getenvb": [290, 472], "get_exec_path": 290, "getegid": 290, "geteuid": 290, "getgid": 290, "getgrouplist": [290, 473], "getgroup": 290, "setgroup": [290, 345], "macosx_deployment_target": 290, "getpwuid": [290, 307], "getpgid": [290, 462], "getprior": [290, 473], "prio_process": 290, "prio_pgrp": 290, "prio_us": 290, "setprior": [290, 473], "prio_darwin_thread": 290, "prio_darwin_process": 290, "prio_darwin_bg": 290, "prio_darwin_nonui": 290, "getresuid": [290, 466], "ruid": 290, "euid": 290, "suid": 290, "getresgid": [290, 466], "rgid": 290, "egid": 290, "sgid": 290, "initgroup": [290, 466], "setegid": 290, "seteuid": 290, "setgid": [290, 355], "superus": 290, "setn": 290, "nstype": 290, "reassoci": 290, "clone_new": 290, "pidfd_open": [290, 471, 479], "clone_newut": 290, "clone_newpid": 290, "clone_newnet": 290, "unshar": [290, 319], "setpgrp": 290, "setpgid": [290, 345], "pgrp": 290, "setregid": [290, 345], "setresgid": [290, 466], "setresuid": [290, 466], "setreuid": [290, 345], "getsid": [290, 463], "setsid": [290, 345], "setuid": [290, 355], "umask": [290, 293, 345, 359, 477], "sysnam": [290, 300], "nodenam": [290, 300, 407], "disassoci": 290, "clone_": 290, "clone_fil": 290, "clone_f": 290, "clone_newcgroup": 290, "clone_newipc": 290, "clone_newn": 290, "clone_newtim": 290, "clone_newus": 290, "clone_sighand": 290, "clone_sysvsem": 290, "clone_thread": 290, "clone_vm": 290, "decept": [290, 462], "closerang": [290, 465], "fd_low": 290, "fd_high": 290, "copy_file_rang": 290, "offset_src": 290, "offset_dst": 290, "procf": 290, "sysf": 290, "fd2": 290, "fchmod": [290, 465, 475], "fchown": [290, 465, 475], "fdatasync": [290, 475], "filedescriptor": 290, "fpathconf": 290, "95": [290, 311, 315, 340, 379, 462, 465], "98": [290, 334, 341, 402, 465, 466, 472], "pathconf_nam": 290, "pathconf": [290, 473], "fstat": [290, 291, 339, 461, 473, 475], "stat_result": [290, 293, 355, 462, 475, 478], "fstatvf": [290, 461, 475], "statvf": [290, 461, 465, 473], "fsync": [290, 475], "_commit": 290, "get_block": [290, 475], "set_block": [290, 475], "f_lock": 290, "f_tlock": 290, "f_ulock": 290, "f_test": 290, "login_tti": 290, "leader": [290, 328], "lseek": [290, 464, 473], "0o777": [290, 293], "o_wronli": [290, 330], "o_rdwr": [290, 330], "o_creat": 290, "o_excl": [290, 357], "o_trunc": 290, "o_dsync": 290, "o_rsync": 290, "o_sync": 290, "o_noctti": 290, "o_cloexec": [290, 473], "o_noinherit": 290, "o_short_liv": 290, "o_temporari": [290, 357], "o_random": 290, "o_sequenti": 290, "o_evtonli": [290, 469], "o_fsync": [290, 469], "o_symlink": [290, 469], "o_nofollow_ani": [290, 469], "o_async": 290, "o_direct": 290, "o_directori": 290, "o_nofollow": 290, "o_noatim": 290, "o_path": [290, 474], "o_tmpfil": [290, 357, 474], "openpti": [290, 306], "pipe2": [290, 473], "ORing": [290, 338], "posix_falloc": [290, 473, 475], "posix_fadvis": [290, 473, 475], "posix_fadv_norm": 290, "posix_fadv_sequenti": 290, "posix_fadv_random": 290, "posix_fadv_noreus": 290, "posix_fadv_willne": 290, "posix_fadv_dontne": 290, "pread": [290, 473, 475, 477], "preadv": [290, 477], "rwf_hipri": 290, "rwf_nowait": 290, "sysconf": [290, 334], "sc_iov_max": [290, 334], "readv": [290, 473, 475, 477], "pwrite": [290, 473, 475, 477], "pwritev": [290, 477], "rwf_dsync": 290, "rwf_sync": 290, "rwf_append": 290, "writev": [290, 473, 475, 477], "out_fd": 290, "in_fd": 290, "sf_nodiskio": 290, "sf_mnowait": 290, "sf_sync": 290, "sf_nocach": 290, "splice_f_mov": 290, "splice_f_nonblock": 290, "splice_f_mor": 290, "tcgetpgrp": 290, "tcsetpgrp": 290, "pg": 290, "ttynam": 290, "get_terminal_s": [290, 329, 473], "stdout_fileno": 290, "terminal_s": [290, 329], "close_fd": [290, 345, 463, 472, 477, 478], "get_inherit": [290, 334, 474], "set_inherit": [290, 325, 334, 474], "get_handle_inherit": [290, 474], "set_handle_inherit": [290, 345, 474], "supports_fd": [290, 473], "faccessat": 290, "supports_dir_fd": [290, 473], "supports_follow_symlink": [290, 329], "effective_id": [290, 473], "f_ok": [290, 329], "r_ok": 290, "w_ok": 290, "x_ok": [290, 329], "supports_effective_id": [290, 473], "uf_nodump": [290, 339], "uf_immut": [290, 339, 465], "uf_append": [290, 339, 465], "uf_opaqu": [290, 339], "uf_nounlink": [290, 339], "uf_compress": [290, 339], "uf_hidden": [290, 339], "sf_archiv": [290, 339], "sf_immut": [290, 339], "sf_append": [290, 339], "sf_nounlink": [290, 339], "sf_snapshot": [290, 339], "s_isuid": [290, 339], "s_isgid": [290, 339], "s_enfmt": [290, 339], "s_isvtx": [290, 339], "s_iread": [290, 339], "s_iwrit": [290, 329, 339], "s_iexec": [290, 339], "s_irwxu": [290, 339], "s_irusr": [290, 339, 355], "s_iwusr": [290, 339, 355], "s_ixusr": [290, 339, 355], "s_irwxg": [290, 339], "s_irgrp": [290, 339], "s_iwgrp": [290, 339, 355], "s_ixgrp": [290, 339, 355], "s_irwxo": [290, 339], "s_iroth": [290, 339], "s_iwoth": [290, 339, 355], "s_ixoth": [290, 339, 355], "chroot": 290, "getcwdb": [290, 467, 478], "lchflag": [290, 465], "lchmod": [290, 293, 465], "lchown": [290, 462], "xxxxxxxxxxxx": 290, "lstat": [290, 291, 293, 339, 359, 471, 473, 478], "vista": 290, "repars": [290, 478], "junction": [290, 291, 293, 329, 471, 478], "exist_ok": [290, 293, 475], "21082": 290, "mkfifo": [290, 473, 475], "rendezv": [290, 472], "mknod": [290, 462, 473, 475], "0o600": 290, "s_ifreg": [290, 339], "s_ifchr": [290, 339], "s_ifblk": [290, 339], "s_ififo": [290, 339], "makedev": [290, 462], "st_dev": [290, 339, 471], "st_rdev": [290, 471], "readlink": [290, 293, 473, 478, 479], "realpath": [290, 291, 293, 458, 469, 478], "prune": [290, 293], "direntri": [290, 471, 475, 476], "opendir": 290, "readdir": [290, 475], "findfirstfilew": 290, "findnextfilew": 290, "scandir_path": 290, "s_isdir": [290, 339], "dirent": 290, "d_type": 290, "dt_unknown": 290, "is_symlink": [290, 293, 478], "islink": [290, 291, 293, 478], "is_junct": [290, 293, 471], "isjunct": [290, 291, 471], "st_nlink": [290, 339], "st_ctime": [290, 339, 471], "st_birthtim": [290, 464, 471], "statinfo": 290, "st_mode": [290, 293, 339, 474, 478], "33188": 290, "7876932": 290, "234881026": 290, "st_uid": [290, 339], "st_gid": [290, 339], "st_size": [290, 293, 339, 461], "264": [290, 344, 461], "st_atim": [290, 339], "1297230295": 290, "1297230027": 290, "st_atime_n": 290, "st_mtime_n": 290, "st_ctime_n": 290, "st_birthtime_n": 290, "fat32": 290, "st_block": 290, "st_blksize": 290, "st_flag": [290, 464], "st_gen": [290, 464], "st_fstype": [290, 477], "st_rsize": 290, "st_creator": 290, "st_type": 290, "st_file_attribut": [290, 339, 475], "dwfileattribut": [290, 475], "by_handle_file_inform": [290, 475], "getfileinformationbyhandl": [290, 475], "file_attribute_": 290, "file_attribute_arch": [290, 339], "st_reparse_tag": [290, 339, 478], "file_attribute_reparse_point": [290, 339], "io_reparse_tag_": 290, "f_bsize": 290, "f_frsize": 290, "f_block": 290, "f_bfree": 290, "f_bavail": 290, "f_file": 290, "f_ffree": 290, "f_favail": 290, "f_flag": 290, "f_namemax": 290, "f_fsid": 290, "st_rdonli": 290, "st_nosuid": 290, "st_nodev": 290, "st_noexec": 290, "st_synchron": 290, "st_mandlock": 290, "st_write": 290, "st_append": 290, "st_immut": 290, "st_noatim": 290, "st_nodiratim": 290, "st_relatim": 290, "atim": 290, "target_is_directori": [290, 293, 473], "morph": [290, 293], "unprivileg": 290, "secreatesymboliclinkprivileg": 290, "unelev": 290, "atime_n": 290, "mtime_n": 290, "dirpath": [290, 293], "resumpt": [290, 350, 476], "cv": [290, 362, 381, 459, 460, 461, 462, 463, 464], "dirfd": 290, "rootfd": 290, "mfd_cloexec": 290, "mfd_": 290, "memfd": 290, "mfd_allow_s": 290, "mfd_hugetlb": 290, "mfd_huge_shift": 290, "mfd_huge_mask": 290, "mfd_huge_64kb": 290, "mfd_huge_512kb": 290, "mfd_huge_1mb": 290, "mfd_huge_2mb": 290, "mfd_huge_8mb": 290, "mfd_huge_16mb": 290, "mfd_huge_32mb": 290, "mfd_huge_256mb": 290, "mfd_huge_512mb": 290, "mfd_huge_1gb": 290, "mfd_huge_2gb": 290, "mfd_huge_16gb": 290, "mfd_huge": 290, "eventfd": [290, 469], "initv": 290, "efd_cloexec": 290, "efd_nonblock": 290, "efd_semaphor": 290, "eventfd_read": 290, "eventfd_writ": 290, "efc_cloexec": 290, "xattr_replac": 290, "xattr_creat": 290, "xattr_size_max": 290, "adddlldirectori": 290, "execlp": 290, "execvp": [290, 345], "ex_ok": 290, "exit_success": 290, "ex_usag": 290, "ex_dataerr": 290, "ex_noinput": 290, "ex_nous": 290, "ex_nohost": 290, "ex_unavail": 290, "ex_softwar": 290, "ex_oserr": 290, "ex_osfil": 290, "ex_cantcreat": 290, "ex_ioerr": 290, "ex_tempfail": 290, "retryabl": 290, "ex_protocol": 290, "ex_noperm": 290, "ex_config": 290, "ex_notfound": 290, "cygwin": [290, 349, 357, 458, 460, 462, 478], "longstand": [290, 471, 473], "pidfd_nonblock": [290, 471], "waitid": [290, 473, 475], "plock": 290, "waitstatus_to_exitcod": [290, 306, 479], "file_act": 290, "setpgroup": 290, "resetid": 290, "setsigmask": 290, "setsigdef": 290, "posix_spawnp": 290, "posix_spawn_open": 290, "posix_spawn_clos": 290, "posix_spawn_dup2": 290, "new_fd": 290, "posix_spawn_file_actions_addopen": 290, "posix_spawn_file_actions_addclos": 290, "posix_spawn_file_actions_adddup2": 290, "posix_spawn_setpgroup": 290, "posix_spawn_resetid": 290, "posix_spawn_setsid": 290, "posix_spawn_setsid_np": 290, "posix_spawn_setsigmask": 290, "sigdef": 290, "posix_spawn_setsigdef": 290, "sched_param": 290, "posix_spawn_setschedparam": 290, "posix_spawn_setschedul": 290, "after_in_par": 290, "after_in_child": 290, "spawnl": 290, "spawnlp": [290, 345], "spawnv": 290, "spawnvp": [290, 345], "p_nowait": [290, 345], "p_wait": [290, 345], "p_nowaito": 290, "p_detach": 290, "p_overlai": 290, "shellexecut": 290, "normpath": [290, 291, 466], "comspec": [290, 345, 473, 474], "children_us": 290, "children_system": 290, "getprocesstim": 290, "idtyp": 290, "p_pid": 290, "p_pgid": 290, "p_all": 290, "p_pidfd": [290, 479], "wexit": 290, "wstop": 290, "wcontinu": 290, "wnohang": 290, "wnowait": 290, "siginfo_t": [290, 330], "si_pid": [290, 330], "si_uid": [290, 330], "si_signo": [290, 330], "si_statu": [290, 330], "si_cod": [290, 330, 479], "cld_exit": 290, "wuntrac": 290, "wait3": [290, 464, 475], "getrusag": [290, 319, 464], "wait4": [290, 464, 475], "cld_kill": [290, 479], "cld_dump": 290, "cld_trap": 290, "cld_stop": [290, 479], "cld_continu": 290, "wifexit": 290, "wexitstatu": 290, "wifsign": 290, "wtermsig": 290, "wifstop": 290, "wstopsig": 290, "wcoredump": 290, "wifcontinu": 290, "sigcont": [290, 330], "ptrace": 290, "sched_oth": 290, "sched_batch": 290, "sched_idl": 290, "sched_sporad": 290, "sched_fifo": 290, "sched_rr": 290, "sched_reset_on_fork": 290, "sched_prior": 290, "sched_setparam": [290, 473], "sched_setschedul": [290, 473], "sched_getparam": [290, 473], "sched_get_priority_min": [290, 473], "sched_get_priority_max": [290, 473], "sched_getschedul": [290, 473], "sched_rr_get_interv": [290, 473], "quantum": 290, "sched_yield": [290, 473], "sched_setaffin": [290, 473], "confstr": 290, "confstr_nam": 290, "undetermin": 290, "getloadavg": 290, "unobtain": 290, "sysconf_nam": 290, "sc_minsigstksz": 290, "extsep": 290, "defpath": [290, 329], "rtld_lazi": [290, 349, 473], "rtld_nodelet": [290, 473], "rtld_noload": [290, 473], "rtld_deepbind": [290, 473], "setdlopenflag": [290, 349, 447, 461, 473], "getdlopenflag": [290, 349, 447, 461], "getrandom": [290, 475, 476], "entropi": [290, 338, 476], "environment": [290, 392, 452], "grnd_random": 290, "grnd_nonblock": 290, "524": [290, 476], "bcryptgenrandom": [290, 470], "systemrandom": [290, 315, 323], "getentropi": [290, 475], "cryptgenrandom": [290, 470], "ntpath": [291, 477], "lexist": [291, 463, 478], "isdir": [291, 293, 299, 355, 478], "ismount": [291, 474, 478], "unrepresent": [291, 293, 478], "commonpath": [291, 475], "commonprefix": [291, 475], "userprofil": [291, 478], "homepath": 291, "homedr": 291, "getatim": 291, "getmtim": 291, "getctim": 291, "isab": [291, 293], "getvolumepathnam": 291, "isdevdr": 291, "std": [291, 349, 363, 464], "1003": 291, "relpath": [291, 293, 465, 471], "filepath": 291, "samefil": [291, 293, 474, 475], "path1": 291, "path2": 291, "sameopenfil": 291, "fp1": 291, "fp2": 291, "samestat": [291, 293, 474], "stat1": 291, "stat2": 291, "splitdriv": [291, 477], "splitroot": [291, 471], "cshrc": [291, 456], "supports_unicode_filenam": [291, 462], "soundcard": 292, "ossaudioerror": 292, "audiodev": [292, 465], "dsp": 292, "player": [292, 316, 342, 381], "linuxaudiodev": [292, 459, 462, 465], "openmix": 292, "mixerdev": 292, "setfmt": 292, "setparamet": 292, "oss_audio_devic": 292, "writeal": 292, "sndctl_dsp_setfmt": 292, "sndctl_dsp_sync": 292, "nonblock": 292, "getfmt": 292, "afmt_mu_law": 292, "afmt_a_law": 292, "afmt_ima_adpcm": 292, "afmt_u8": 292, "afmt_s16_l": 292, "afmt_s16_b": 292, "68k": 292, "powerpc": [292, 463, 464, 465], "afmt_s8": 292, "afmt_u16_l": 292, "afmt_u16_b": 292, "afmt_queri": 292, "monophon": 292, "stereophon": 292, "sampler": 292, "11025": 292, "22050": 292, "96000": 292, "dvd": 292, "obufcount": 292, "obuffre": 292, "oss_mixer_devic": 292, "mixabl": 292, "sound_mixer_pcm": 292, "sound_mixer_synth": 292, "sound_mixer_": 292, "pcm": [292, 398], "sound_mixer_volum": 292, "gravi": 292, "ultrasound": 292, "stereocontrol": 292, "reccontrol": 292, "left_volum": 292, "right_volum": 292, "get_recsrc": 292, "set_recsrc": 292, "microphon": 292, "setrecsrc": 292, "sound_mixer_m": 292, "windowspath": 293, "purewindowspath": 293, "test_pathlib": 293, "pathseg": 293, "pureposixpath": 293, "lib64": [293, 349, 351, 453, 479], "na\u00efv": [293, 460], "apache2": 293, "an_absolute_path": 293, "regroup": 293, "gar": 293, "as_posix": 293, "as_uri": 293, "is_absolut": 293, "is_relative_to": 293, "case_sensit": [293, 471], "relative_to": [293, 471], "walk_up": [293, 471], "941": 293, "error_messag": 293, "subpath": [293, 420], "with_nam": 293, "antoin": [293, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "751": 293, "with_stem": 293, "851": 293, "with_suffix": 293, "with_seg": [293, 471], "mypath": 293, "session_id": 293, "798": 293, "is_mount": [293, 477, 478], "is_block_devic": [293, 478], "is_char_devic": [293, 478], "is_fifo": [293, 478], "is_socket": [293, 478], "956": 293, "1327883547": 293, "852554": 293, "33277": 293, "0o444": 293, "33060": 293, "nonexistentfil": 293, "film": [293, 340, 383], "_templat": 293, "_build": 293, "_static": 293, "top_down": 293, "on_error": [293, 383], "mimick": 293, "my_binary_fil": 293, "my_text_fil": 293, "write_text": [293, 475], "mylink": 293, "symlink_to": [293, 469, 478], "other_path": 293, "hardlink_to": [293, 469, 478], "missing_ok": 293, "abnorm": [294, 349, 391, 472], "pdbrc": [294, 470, 472, 476, 479], "nosigint": [294, 472], "readrc": [294, 476], "elp": 294, "hel": 294, "_frame": 294, "_retval": 294, "_except": 294, "reak": 294, "tbreak": 294, "ear": 294, "bpnumber": 294, "uncondit": [294, 350, 387, 432], "some_vari": 294, "tep": 294, "unt": 294, "il": [294, 338, 431, 474], "eturn": 294, "ont": 294, "inu": 294, "ump": 294, "ist": 294, "longlist": 294, "rg": 294, "whati": 294, "undisplai": [294, 472], "classinst": 294, "unalia": 294, "list_opt": 294, "uit": 294, "retval": [294, 350, 460], "tackl": [296, 459], "3154": [296, 474], "574": [296, 379, 478], "highest_protocol": [296, 462], "default_protocol": [296, 327, 469], "fix_import": [296, 468], "buffer_callback": 296, "pickleerror": 296, "picklingerror": 296, "unpicklingerror": 296, "picklebuff": 296, "persistent_id": 296, "persistent_load": 296, "reducer_overrid": [296, 478], "superflu": [296, 334, 337], "elig": [296, 427, 472], "__getstate__": [296, 386, 462, 470], "picklestr": [296, 297], "worthwhil": [296, 464, 473], "__setstate__": [296, 386, 462, 478], "__getnewargs_ex__": 296, "list_of_item": 296, "sixth": [296, 461, 478], "memorecord": 296, "dbpickler": 296, "dbunpickl": 296, "type_tag": 296, "key_id": 296, "fight": [296, 472], "INTO": [296, 337], "italian": [296, 381], "disturb": 296, "reduce_someclass": 296, "mypickl": 296, "textread": 296, "endswith": [296, 341, 396, 459, 462, 464, 465, 475], "new_read": 296, "myclass": [296, 425, 437], "my_attribut": 296, "unpickled_class": 296, "massiv": [296, 463, 464, 475], "eschew": 296, "reconstructor": 296, "zerocopybytearrai": 296, "_reconstruct": 296, "unseri": [296, 472], "new_b": 296, "nsystem": 296, "ntr": 296, "inoffens": 296, "safe_builtin": 296, "restrictedunpickl": 296, "restricted_load": 296, "cbuiltin": [296, 468], "neval": 296, "4j": [296, 424, 432, 439, 465], "intim": [297, 300], "binint1": 297, "tuple2": 297, "binput": 297, "indentlevel": 297, "genop": 297, "opcodeinfo": 297, "pipefil": 298, "moduleinfo": [299, 476], "module_find": 299, "ispkg": 299, "extend_path": 299, "pth": [299, 331, 349, 351, 452, 459, 476], "find_load": [299, 420, 429, 469, 470, 471, 473, 474, 477], "get_import": 299, "path_item": 299, "get_load": [299, 471], "module_or_nam": 299, "iter_import": [299, 473], "iter_modul": [299, 473, 476], "walk_packag": [299, 473, 476, 477], "12915": 299, "pyramid": 299, "is_64bit": 300, "system_alia": 300, "mac_ver": 300, "amdk6": 300, "python_build": 300, "buildno": 300, "builddat": 300, "python_compil": 300, "python_branch": 300, "scm": 300, "python_implement": 300, "python_revis": 300, "python_vers": 300, "python_version_tupl": 300, "market": [300, 464], "dega": 300, "java_v": 300, "vminfo": 300, "osinfo": 300, "vm_name": 300, "vm_releas": 300, "vm_vendor": 300, "os_nam": 300, "os_vers": 300, "os_arch": 300, "win32_ver": 300, "csd": 300, "uniprocessor": 300, "win32_edit": 300, "enterpris": 300, "iotuap": 300, "serverstandard": 300, "nanoserv": 300, "win32_is_iot": 300, "iot": 300, "versioninfo": 300, "dev_stag": 300, "non_release_vers": 300, "libc_ver": 300, "16384": 300, "freedesktop_os_releas": [300, 469], "freedesktop": [300, 469, 473], "pretty_nam": 300, "id_lik": 300, "version_id": 300, "variant_id": 300, "get_like_distro": 300, "nskeyedarchiv": [301, 478], "nskeyedunarchiv": 301, "fmt_xml": [301, 474], "fmt_binari": [301, 474], "invalidfileexcept": 301, "pl": 301, "astr": 301, "doodah": 301, "afloat": 301, "anint": 301, "adict": 301, "anotherstr": 301, "athirdstr": 301, "xe4ssig": 301, "ma": [301, 469, 470], "atruevalu": 301, "afalsevalu": 301, "gunk": 301, "somemoredata": 301, "adat": 301, "1939": 302, "stl": [302, 474], "2595": 302, "pop3_ssl": [302, 472, 479], "obsolesc": 302, "mailserv": [302, 448], "pop3_port": 302, "pop3_ssl_port": 302, "995": [302, 476], "fetchmail": 302, "noncompli": 302, "capa": [302, 474], "2449": 302, "pass_": 302, "apop": 302, "rpop": 302, "mesg_num": 302, "dele": 302, "eudora": 302, "qpop": 302, "rset": [302, 332], "signoff": 302, "howmuch": 302, "uidl": 302, "mesgnum": 302, "6856": [302, 466, 472, 475], "nummessag": 302, "thinli": 303, "disguis": [303, 316, 425], "off_t": 303, "getconf": 303, "lfs_cflag": 303, "d_largefile64_sourc": 303, "d_file_offset_bit": 303, "sort_dict": [304, 478], "underscore_numb": [304, 469], "tup": [304, 381, 383], "pformat": [304, 474], "isread": 304, "isrecurs": 304, "saferepr": 304, "sampleproject": 304, "project_info": 304, "author_email": 304, "pypa": [304, 396], "googlegroup": 304, "bugtrack_url": 304, "osi": 304, "webpag": 304, "description_content_typ": 304, "docs_url": 304, "download_url": [304, 464], "last_dai": 304, "last_month": 304, "last_week": 304, "home_pag": 304, "maintainer_email": 304, "package_url": 304, "project_url": 304, "homepag": [304, 372], "release_url": 304, "requires_dist": 304, "lsprof": 305, "rosen": 305, "ted": 305, "czotter": 305, "imit": [305, 465], "ncall": 305, "tottim": 305, "percal": 305, "cumtim": 305, "759": 305, "937": 305, "598": 305, "_code": 305, "435": [305, 474], "_parse_sub": 305, "induc": [305, 422], "subfunct": [305, 473], "restat": 305, "output_fil": 305, "sort_ord": 305, "sort_stat": 305, "sortkei": 305, "strip_dir": 305, "print_stat": 305, "cull": 305, "print_cal": 305, "print_calle": 305, "timeunit": 305, "subcal": 305, "pr": [305, 459], "sortbi": 305, "create_stat": 305, "dump_stat": 305, "coalesc": 305, "printout": 305, "pcall": 305, "nfl": 305, "reverse_ord": 305, "percentag": [305, 340, 342, 443, 465], "get_stats_profil": 305, "statsprofil": 305, "functionprofil": 305, "tick": [305, 319, 363], "lag": 305, "probabilist": 305, "exception": 305, "god": 305, "alarm": [305, 330, 474], "8ghz": 305, "i5": 305, "process_tim": [305, 363, 364, 473, 478], "04e": 305, "your_computed_bia": 305, "your_time_func": 305, "lone": [305, 332, 427], "cleanest": 305, "your_integer_time_func": 305, "_lsprof": 305, "perf_count": [305, 363, 364, 473, 478], "thoroughli": [306, 341, 444], "master_read": 306, "stdin_read": 306, "baffl": 306, "pseudotermin": 306, "typescript": 306, "use_python": 306, "pw_name": 307, "pw_passwd": 307, "pw_uid": [307, 345], "pw_gid": 307, "pw_geco": 307, "pw_dir": 307, "pw_shell": 307, "getpwal": 307, "pycompileerror": 308, "dfile": 308, "dorais": 308, "checked_hash": 308, "unchecked_hash": 308, "filen": 308, "readmodul": [309, 469], "readmodule_ex": [309, 469], "pagin": 310, "pythondoc": 310, "pyexpat": [311, 406, 423, 453, 459, 462, 464, 465, 466], "xmlparsertyp": 311, "parsercr": 311, "errorstr": 311, "namespace_separ": 311, "repertoir": [311, 332, 372, 465], "startelementhandl": 311, "endelementhandl": 311, "xmln": [311, 392, 410, 466], "elem1": [311, 464], "elem2": [311, 464], "isfin": 311, "parsefil": 311, "setbas": 311, "externalentityrefhandl": 311, "notationdeclhandl": 311, "unparsedentitydeclhandl": 311, "getbas": 311, "getinputcontext": 311, "externalentityparsercr": 311, "ordered_attribut": 311, "specified_attribut": 311, "setparamentitypars": 311, "xml_param_entity_parsing_nev": 311, "xml_param_entity_parsing_unless_standalon": 311, "xml_param_entity_parsing_alwai": 311, "useforeigndtd": 311, "startdoctypedeclhandl": 311, "enddoctypedeclhandl": 311, "xml_error_cant_change_feature_once_pars": 311, "buffer_text": [311, 462], "characterdatahandl": 311, "buffer_us": 311, "errorbyteindex": 311, "errorcolumnnumb": 311, "errorlinenumb": 311, "currentbyteindex": 311, "currentcolumnnumb": 311, "currentlinenumb": 311, "handlernam": 311, "xmldeclhandl": 311, "doctypenam": 311, "systemid": [311, 407, 412], "publicid": [311, 407, 412], "has_internal_subset": 311, "elementdeclhandl": 311, "attlistdeclhandl": 311, "elnam": 311, "attnam": 311, "idref": 311, "processinginstructionhandl": 311, "startcdatasectionhandl": 311, "endcdatasectionhandl": 311, "entitynam": 311, "notationnam": 311, "ndata": [311, 412], "entitydeclhandl": 311, "is_parameter_ent": 311, "startnamespacedeclhandl": 311, "endnamespacedeclhandl": 311, "commenthandl": 311, "defaulthandl": 311, "defaulthandlerexpand": 311, "notstandalonehandl": 311, "xml_error_not_standalon": 311, "xml_error_external_entity_handl": 311, "some_xml_docu": 311, "start_el": [311, 409], "end_el": [311, 409], "char_data": 311, "child1": [311, 386], "child2": [311, 386], "xml_ctype_ani": 311, "xml_ctype_choic": 311, "xml_ctype_empti": 311, "xml_ctype_mix": 311, "xml_ctype_nam": 311, "xml_ctype_seq": 311, "xml_cquant_non": 311, "xml_cquant_opt": 311, "xml_cquant_plu": 311, "xml_cquant_rep": 311, "xml_error_": 311, "constant_nam": 311, "xml_error_async_ent": 311, "xml_error_attribute_external_entity_ref": 311, "xml_error_bad_char_ref": 311, "xml_error_binary_entity_ref": 311, "xml_error_duplicate_attribut": 311, "xml_error_incorrect_encod": 311, "xml_error_invalid_token": 311, "xml_error_junk_after_doc_el": 311, "xml_error_misplaced_xml_pi": 311, "xml_error_no_el": 311, "xml_error_no_memori": 311, "xml_error_param_entity_ref": 311, "xml_error_partial_char": 311, "xml_error_recursive_entity_ref": 311, "xml_error_syntax": 311, "xml_error_tag_mismatch": 311, "xml_error_unclosed_token": 311, "xml_error_undefined_ent": 311, "xml_error_unknown_encod": 311, "xml_error_unclosed_cdata_sect": 311, "xml_error_unexpected_st": 311, "xml_error_entity_declared_in_p": 311, "xml_error_feature_requires_xml_dtd": 311, "xml_error_unbound_prefix": 311, "undeclar": 311, "xml_error_undeclaring_prefix": 311, "xml_error_incomplete_p": 311, "xml_error_xml_decl": 311, "xml_error_text_decl": 311, "xml_error_publicid": 311, "xml_error_suspend": 311, "xml_error_not_suspend": 311, "xml_error_abort": 311, "xml_error_finish": 311, "xml_error_suspend_p": 311, "xml_error_reserved_prefix_xml": 311, "xml_error_reserved_prefix_xmln": 311, "xml_error_reserved_namespace_uri": 311, "xml_error_invalid_argu": 311, "xml_error_no_buff": 311, "xml_error_amplification_limit_breach": 311, "amplif": 311, "breach": [311, 423], "rec": [311, 408, 410], "xml11": [311, 408, 410], "20060816": [311, 408, 410], "encodingdecl": [311, 408, 410], "compet": [313, 472], "upperbound": 313, "uninterrupt": [313, 330], "decodestr": [314, 479], "encodestr": [314, 479], "lognorm": 315, "mise": 315, "19937": 315, "devis": 315, "matsumoto": [315, 423], "nishimura": [315, 423], "equidistribut": 315, "vol": 315, "randbyt": [315, 479], "token_byt": [315, 323], "randint": [315, 472], "getrandbit": [315, 463, 474], "cum_weight": 315, "2080": 315, "raffl": 315, "grand": [315, 410], "prize": 315, "10000000": 315, "binomialvari": [315, 340, 471], "equat": [315, 478], "triangular": [315, 340, 465], "midpoint": [315, 340], "betavari": 315, "expovari": [315, 471], "lambd": [315, 471], "gammavari": 315, "gauss": 315, "mu": [315, 340, 478], "sigma": [315, 340, 478], "lognormvari": 315, "vonmisesvari": 315, "kappa": 315, "paretovari": 315, "pareto": 315, "weibullvari": 315, "weibul": 315, "seeder": 315, "37444887175646646": 315, "1800146073117523": 315, "148957571865031": 315, "roulett": 315, "spin": 315, "jack": [315, 316, 341, 394, 423, 439, 443, 461, 462, 464, 468], "king": [315, 316, 459, 478], "settl": [315, 465], "10_000": [315, 340], "4169": 315, "quartil": [315, 340, 478], "2_500": 315, "7_500": 315, "7958": 315, "resampl": 315, "thoughtco": 315, "3126155": 315, "fmean": [315, 340, 478], "73": [315, 379, 449, 463, 478, 479], "drug": 315, "placebo": 315, "denni": [315, 469, 470, 471, 479], "shasha": 315, "manda": 315, "wilson": [315, 462, 463, 475, 479], "observed_diff": 315, "new_diff": 315, "reshuffl": 315, "4f": 315, "hypothesi": 315, "multiserv": 315, "quantil": [315, 340, 478], "average_arrival_interv": 315, "average_service_tim": 315, "stdev_service_tim": 315, "num_serv": 315, "arrival_tim": 315, "1_000_000": [315, 476], "next_server_avail": 315, "service_dur": 315, "service_complet": 315, "jake": [315, 466, 468, 478], "vanderpla": 315, "econom": 315, "marketplac": 315, "norvig": 315, "random_product": 315, "random_permut": 315, "random_combin": 315, "random_combination_with_replac": 315, "\u2075\u00b3": 315, "05954861408025609": 315, "2\u2075\u00b2": 315, "2\u2075\u00b3": 315, "geometr": [315, 340, 381, 470], "fullrandom": 315, "0x10_0000_0000_0000": 315, "87925541791544": 315, "\u00b9\u2070\u2077\u2074": 315, "allen": [315, 338, 472], "downei": 315, "frie09": 316, "nfoo2": 316, "possess": [316, 341, 402, 470], "aaaab": 316, "aaab": 316, "aaaaaa": 316, "ailmsux": 316, "imsx": 316, "x7f": 316, "isaac": 316, "asimov": 316, "lookbehind": [316, 475], "theth": 316, "atla": 316, "athen": 316, "attornei": 316, "typographi": 316, "\u00fc": 316, "noflag": 316, "nicer": [316, 387, 469], "fullmatch": [316, 474], "0a3b9": 316, "fell": [316, 438, 448, 460, 461, 462], "z_": [316, 432], "z_0": 316, "npy_": 316, "npy_myfunc": 316, "dashrepl": 316, "matchobj": 316, "pro": 316, "gram": [316, 428], "sand": 316, "new_str": 316, "number_of_subs_mad": 316, "legal_char": 316, "ascii_lowercas": [316, 342, 461], "abcdefghijklmnopqrstuvwxyz0123456789": 316, "digits_r": 316, "purg": 316, "endpo": 316, "ogr": 316, "doggi": 316, "og": [316, 359], "groupindex": 316, "groupn": 316, "physicist": 316, "reynold": 316, "a1b2c3": 316, "c3": [316, 391, 425, 462, 473], "1632": 316, "cba": 316, "remove_thi": 316, "toni": [316, 465], "tiremove_thisg": 316, "tiger": 316, "lastindex": 316, "lastgroup": 316, "displaymatch": 316, "poker": [316, 381], "9tjqk": 316, "akt5q": 316, "akt5": 316, "akt": 316, "727ak": 316, "717ak": 316, "717": 316, "718ak": 316, "354aa": 316, "5c": 316, "ee": [316, 341, 468], "nb": [316, 467], "nx": 316, "ross": [316, 466, 468, 473, 479], "mcfluff": 316, "834": 316, "345": [316, 463, 468, 473], "155": 316, "elm": 316, "ronald": [316, 464, 465, 466, 472, 474, 479], "heathmor": 316, "892": 316, "3428": 316, "finlei": 316, "avenu": [316, 423, 461], "frank": 316, "burger": 316, "925": 316, "541": 316, "7625": 316, "662": 316, "dogwood": 316, "heather": 316, "albrecht": 316, "548": 316, "326": 316, "4584": 316, "919": 316, "park": 316, "telephon": 316, "hous": [316, 476], "inner_word": 316, "professor": [316, 340], "abdolmalek": 316, "poefsrosr": 316, "aealmlobdk": 316, "pslaee": 316, "reorpt": 316, "abnsec": 316, "plmrptoi": 316, "pofsros": 316, "aodlambelk": 316, "plase": 316, "reoprt": 316, "yuor": 316, "asnebc": 316, "potlmrpi": 316, "polic": 316, "02d": 316, "IF": [316, 423], "THEN": 316, "gosub": 316, "token_specif": 316, "tok_regex": 316, "line_start": 316, "inputrc": 317, "libedit": 317, "editlin": [317, 453], "editrc": 317, "ON": [317, 423], "rl_complet": 317, "parse_and_bind": [317, 320], "rl_parse_and_bind": 317, "read_init_fil": [317, 320], "rl_read_init_fil": 317, "get_line_buff": [317, 320], "rl_line_buff": 317, "insert_text": [317, 320], "rl_insert_text": 317, "rl_redisplai": 317, "read_history_fil": 317, "read_histori": 317, "write_history_fil": 317, "write_histori": 317, "append_history_fil": [317, 475], "nelement": 317, "append_histori": 317, "get_history_length": 317, "set_history_length": 317, "history_truncate_fil": 317, "clear_histori": 317, "get_current_history_length": [317, 462], "get_history_item": [317, 462], "history_get": 317, "remove_history_item": 317, "remove_histori": 317, "replace_history_item": 317, "replace_history_entri": 317, "add_histori": 317, "set_auto_histori": [317, 476], "set_startup_hook": 317, "rl_startup_hook": 317, "set_pre_input_hook": 317, "rl_pre_input_hook": 317, "set_complet": [317, 320], "entry_func": 317, "rl_completion_match": 317, "rl_attempted_completion_funct": 317, "get_complet": 317, "get_completion_typ": 317, "rl_completion_typ": 317, "get_begidx": 317, "get_endidx": 317, "libreadlin": 317, "set_completer_delim": 317, "get_completer_delim": 317, "rl_completer_word_break_charact": 317, "set_completion_display_matches_hook": 317, "rl_completion_display_matches_hook": 317, "longest_match_length": 317, "python_histori": [317, 331, 444], "histfil": 317, "unruli": 317, "h_len": 317, "prev_h_len": 317, "new_h_len": 317, "historyconsol": 317, "init_histori": 317, "save_histori": 317, "maxtupl": 318, "maxlist": 318, "maxarrai": 318, "maxdict": 318, "maxset": 318, "maxfrozenset": 318, "maxdequ": 318, "maxstr": 318, "maxlong": 318, "maxoth": 318, "arepr": 318, "repr1": 318, "repr_typ": 318, "subobj": 318, "myrepr": 318, "repr_textiowrapp": 318, "getrlimit": 319, "rlim_infin": 319, "rlimit_nofil": 319, "cap_sys_resourc": 319, "rlimit_cor": [319, 359], "rlimit_cpu": 319, "sigxcpu": 319, "rlimit_fs": 319, "rlimit_data": 319, "rlimit_stack": 319, "rlimit_rss": 319, "rlimit_nproc": 319, "rlimit_ofil": 319, "rlimit_memlock": 319, "rlimit_vmem": 319, "rlimit_a": 319, "rlimit_msgqueu": [319, 474], "rlimit_nic": [319, 474], "rlim_cur": 319, "rlimit_rtprio": [319, 474], "rlimit_rttim": [319, 474], "rlimit_sigpend": [319, 474], "rlimit_sbs": [319, 474], "mbuf": 319, "rlimit_swap": [319, 474], "overcommit": 319, "sysctl": 319, "rlimit_npt": [319, 474], "rlimit_kqueu": 319, "rusage_": 319, "rusage_self": 319, "ru_utim": 319, "ru_stim": 319, "ru_maxrss": 319, "ru_ixrss": 319, "ru_idrss": 319, "ru_isrss": 319, "ru_minflt": 319, "ru_majflt": 319, "ru_nswap": 319, "ru_inblock": 319, "ru_oublock": 319, "ru_msgsnd": 319, "ru_msgrcv": 319, "ru_nsign": 319, "ru_nvcsw": 319, "voluntari": 319, "ru_nivcsw": 319, "involuntari": 319, "getpages": 319, "rusage_children": 319, "rusage_both": 319, "rusage_thread": 319, "mod_nam": 321, "init_glob": 321, "run_nam": 321, "alter_si": 321, "run_path": [321, 452, 466], "path_nam": 321, "snow": [321, 470, 471, 473, 474, 475, 476, 477, 478], "timefunc": [322, 473], "delayfunc": 322, "print_tim": 322, "print_some_tim": 322, "enterab": [322, 473], "1_650_000_000": 322, "1652342830": 322, "3640375": 322, "3642538": 322, "3643398": 322, "1652342835": 322, "3694863": 322, "3696074": 322, "1652342840": 322, "369612": 322, "3697174": 322, "soonest": [322, 473], "randbelow": 323, "randbit": 323, "xebr": 323, "x17d": 323, "xae": 323, "xd4": 323, "xe3": [323, 465], "xb6": 323, "xe2": [323, 465], "xebp1": 323, "x8b": 323, "token_hex": 323, "f9bf78b9a18ce6d46a0cd2b0b86df9da": 323, "token_urlsaf": 323, "drmhze6epcv0fn_81bj": 323, "token_": 323, "xkcd": 323, "passphras": 323, "mktemp": [324, 357, 392], "devpol": [325, 326, 473, 474, 475], "epoll_create1": 325, "epoll_cloexec": 325, "kq_filter_read": 325, "kq_ev_add": 325, "fflag": 325, "udata": 325, "rlist": 325, "wlist": 325, "xlist": 325, "parameterless": [325, 437], "winsock": [325, 334], "pipe_buf": [325, 472], "eventmask": [325, 465], "pollin": 325, "pollpri": 325, "pollout": 325, "epollin": 325, "epollout": 325, "epollpri": 325, "urgent": 325, "epollerr": 325, "assoc": 325, "epollhup": 325, "epollet": 325, "epolloneshot": 325, "epollexclus": 325, "epollrdhup": 325, "epollrdnorm": 325, "epollrdband": 325, "epollwrnorm": 325, "epollwrband": 325, "epollmsg": 325, "fromfd": [325, 334], "maxev": 325, "scalabl": [325, 459], "pollerr": 325, "pollhup": 325, "hung": 325, "pollrdhup": 325, "pollnval": 325, "changelist": 325, "max_ev": 325, "eventlist": 325, "sektion": 325, "kq_filter_writ": 325, "kq_filter_aio": 325, "aio": 325, "kq_filter_vnod": 325, "kq_filter_proc": 325, "kq_filter_netdev": 325, "kq_filter_sign": 325, "kq_filter_tim": 325, "kq_ev_delet": 325, "kq_ev_en": 325, "permitscontrol": 325, "kq_ev_dis": 325, "disablesev": 325, "kq_ev_oneshot": 325, "kq_ev_clear": 325, "kq_ev_sysflag": 325, "kq_ev_flag1": 325, "kq_ev_eof": 325, "kq_ev_error": 325, "kq_note_lowat": 325, "kq_note_delet": 325, "kq_note_writ": 325, "kq_note_extend": 325, "kq_note_attrib": 325, "kq_note_link": 325, "kq_note_renam": 325, "kq_note_revok": 325, "revok": 325, "kq_note_exit": 325, "kq_note_fork": 325, "kq_note_exec": 325, "kq_note_pctrlmask": 325, "kq_note_pdatamask": 325, "kq_note_track": 325, "kq_note_child": 325, "note_track": 325, "kq_note_trackerr": 325, "kq_note_linkup": 325, "kq_note_linkdown": 325, "kq_note_linkinv": 325, "baseselector": 326, "epollselector": [326, 477], "defaultselector": [326, 330], "devpollselector": [326, 475, 477], "event_read": [326, 330], "event_writ": 326, "selectorkei": 326, "get_kei": 326, "get_map": 326, "sel": [326, 330], "shelf": [327, 341, 472, 474], "writeback": 327, "handier": 327, "keyencod": 327, "bsddbshelf": [327, 341], "set_loc": 327, "bsddb": [327, 462, 465, 466], "pybsddb": [327, 462, 465, 466, 467], "hashopen": 327, "btopen": 327, "rnopen": 327, "dbfilenameshelf": [327, 341], "klist": 327, "BUT": [327, 423], "minilanguag": 328, "split_command": 328, "boom": [328, 386, 387], "plug": 328, "remote_command": 328, "instream": 328, "punctuation_char": [328, 476], "wordchar": 328, "get_token": 328, "push_token": 328, "read_token": 328, "pushback": 328, "sourcehook": 328, "push_sourc": 328, "pop_sourc": 328, "newstream": 328, "newfil": 328, "lexer": 328, "error_lead": 328, "whitespace_split": 328, "escapedquot": 328, "donotsepar": 328, "fsrc": 329, "fdst": 329, "uncontrol": 329, "samefileerror": [329, 474], "ignore_pattern": [329, 465], "copy_funct": [329, 472, 475], "ignore_dangling_symlink": [329, 472], "dirs_exist_ok": [329, 478], "onexc": [329, 471], "suscept": [329, 458], "avoids_symlink_attack": 329, "excinfo": 329, "mv": [329, 473], "disk_usag": [329, 473], "needcurrentdirectoryforexepathw": [329, 471], "nodefaultcurrentdirectoryinexepath": 329, "python33": 329, "srcname": 329, "33671": [329, 478], "userspac": [329, 473, 478], "outfd": [329, 478], "infd": [329, 478], "fcopyfil": 329, "_logpath": 329, "reattempt": 329, "remove_readonli": 329, "xztar": [329, 475], "dry_run": [329, 359], "gztar": [329, 472, 476], "bztar": [329, 472], "register_archive_format": [329, 472], "pax": [329, 355, 465, 478], "get_archive_format": [329, 472], "extra_arg": [329, 472], "supports_root_dir": 329, "unregister_archive_format": 329, "register_unpack_format": 329, "get_unpack_format": 329, "unregister_unpack_format": 329, "archive_nam": 329, "myarchiv": [329, 449, 472], "tarek": [329, 352, 465, 466, 472, 475], "tzvf": 329, "drwx": 329, "609": 329, "authorized_kei": 329, "id_dsa": 329, "1675": 329, "id_rsa": 329, "37192": 329, "known_host": 329, "please_add": 329, "do_not_add": 329, "my_arch": 329, "air": 330, "sigmask": 330, "sig_block": 330, "sig_unblock": 330, "sig_setmask": 330, "getsign": 330, "pthread_sigmask": [330, 473], "sigpend": [330, 473], "sigwait": [330, 473], "ctrl_": 330, "sigprocmask": 330, "sigquit": [330, 345], "sigalrm": 330, "sigbreak": 330, "bu": [330, 402], "sigcld": 330, "sighup": 330, "hangup": 330, "death": [330, 473], "sigstkflt": 330, "coprocessor": 330, "sigusr1": 330, "sigusr2": 330, "nsig": 330, "valid_sign": 330, "itimer_r": 330, "itimer_virtu": 330, "sigvtalrm": 330, "itimer_prof": 330, "sigprof": 330, "itimererror": 330, "setitim": [330, 465], "getitim": [330, 465], "strsignal": 330, "sigwaitinfo": [330, 473, 475], "sigtimedwait": [330, 473, 475], "pidfd_send_sign": [330, 479], "siginfo": 330, "sigstop": 330, "warn_on_full_buff": [330, 477], "wakeup": [330, 473, 477], "siginterrupt": [330, 465, 473], "sigset": 330, "si_errno": 330, "si_band": 330, "ttys0": 330, "spamcontext": 330, "exc_val": [330, 341], "interrupt_read": 330, "interrupt_writ": 330, "subsubdirectori": 331, "bletch": 331, "enable_user_sit": 331, "__interactivehook__": [331, 349, 447, 452, 474], "user_sit": [331, 352], "getusersitepackag": [331, 435, 466, 472], "appdata": [331, 458, 465], "user_bas": [331, 352, 466], "getuserbas": [331, 466, 472], "pythonuserbas": [331, 452, 465], "addsitedir": 331, "sitedir": 331, "known_path": 331, "getsitepackag": [331, 466, 472], "esmtp": 332, "821": 332, "1869": 332, "local_hostnam": 332, "fqdn": 332, "helo": 332, "ehlo": [332, 473], "getfqdn": [332, 334], "smtpconnecterror": 332, "smtp_ssl": [332, 465, 473, 479], "lmtp": [332, 465, 473, 479], "lmtp_port": 332, "smtpexcept": [332, 474], "smtpserverdisconnect": 332, "smtpresponseexcept": 332, "smtp_code": 332, "smtp_error": 332, "smtpsenderrefus": 332, "smtprecipientsrefus": 332, "smtpdataerror": 332, "smtpheloerror": 332, "smtpnotsupportederror": 332, "smtpauthenticationerror": 332, "docmd": 332, "helo_resp": 332, "has_extn": 332, "ehlo_resp": 332, "does_esmtp": 332, "esmtp_featur": 332, "ehlo_or_helo_if_need": 332, "vrfy": 332, "foil": 332, "spammer": 332, "initial_response_ok": 332, "4954": 332, "auth_cram_md5": 332, "auth_plain": 332, "auth_login": 332, "from_addr": [332, 472], "to_addr": [332, 472], "mail_opt": [332, 475], "rcpt_option": 332, "8bitmim": [332, 475], "dsn": 332, "rcpt": 332, "smtpnotsupport": 332, "hcom": 333, "sndr": 333, "sndt": 333, "voc": 333, "8svx": 333, "sb": [333, 356], "ub": 333, "ul": [333, 408, 461], "sampling_r": 333, "bits_per_sampl": 333, "whathdr": [333, 475], "sndtool": 333, "lab": [333, 423, 437, 459, 461, 462], "waveform": [333, 398, 403], "transliter": 334, "dare": 334, "inaddr_ani": 334, "inaddr_broadcast": 334, "flowinfo": 334, "sin6_flowinfo": 334, "sin6_scope_id": 334, "sockaddr_in6": 334, "af_netlink": [334, 464], "tipc": [334, 465], "af_tipc": 334, "addr_typ": 334, "v2": [334, 344, 423, 464, 465], "tipc_addr_nameseq": 334, "tipc_addr_nam": 334, "tipc_addr_id": 334, "tipc_zone_scop": 334, "tipc_cluster_scop": 334, "tipc_node_scop": 334, "af_can": 334, "can0": 334, "can_isotp": 334, "rx_addr": 334, "tx_addr": 334, "can_j1939": [334, 479], "pgn": 334, "ecu": 334, "sysproto_control": 334, "pf_system": [334, 473], "af_bluetooth": 334, "btproto_l2cap": 334, "bdaddr": 334, "psm": 334, "bluetooth": 334, "btproto_rfcomm": 334, "btproto_hci": 334, "device_id": 334, "btproto_sco": 334, "af_alg": [334, 476], "feat": 334, "aead": [334, 338], "skcipher": 334, "rng": 334, "drbg_nopr_ctr_aes256": 334, "32bit": [334, 461], "af_vsock": [334, 477], "vsock": 334, "af_packet": 334, "ifnam": 334, "pkttype": 334, "hatyp": 334, "ethernet": 334, "eth_p_al": 334, "ethertype_": 334, "packet_host": 334, "packet_broadcast": 334, "packet_multicast": 334, "packet_otherhost": 334, "promiscu": 334, "packet_outgo": 334, "arp": 334, "af_qipcrtr": 334, "qualcomm": 334, "ipproto_udplit": 334, "setsockopt": [334, 338, 466, 476], "udplite_send_cscov": 334, "udplite_recv_cscov": 334, "af_hyperv": 334, "hyper": 334, "vm_id": 334, "service_id": 334, "vmid": 334, "hv_guid_zero": 334, "hv_guid_broadcast": 334, "hv_guid_wildcard": 334, "hv_guid_children": 334, "hv_guid_loopback": 334, "hv_guid_par": 334, "v6": 334, "nondeterminist": 334, "settimeout": [334, 338, 392, 462], "herror": 334, "h_errno": 334, "gethostbyname_ex": 334, "hstrerror": 334, "gaierror": 334, "gai_strerror": 334, "eai_": 334, "af_": [334, 474], "sock_": [334, 474], "addressfamili": 334, "socketkind": 334, "sock_raw": 334, "sock_rdm": 334, "sock_seqpacket": 334, "sock_cloexec": [334, 477], "sock_nonblock": [334, 477], "so_": 334, "somaxconn": [334, 475], "msg_": 334, "sol_": 334, "scm_": 334, "ipproto_": 334, "ipport_": 334, "inaddr_": 334, "ip_": 334, "ipv6_": 334, "ai_": 334, "ni_": 334, "tcp_": 334, "so_domain": [334, 476], "so_protocol": [334, 476], "so_peersec": [334, 476], "so_passsec": [334, 476], "tcp_user_timeout": [334, 476, 477], "tcp_congest": [334, 476, 477], "tcp_fastopen": 334, "tcp_keepcnt": 334, "tcp_notsent_lowat": [334, 477], "tcp_keepidl": 334, "tcp_keepintvl": 334, "ip_recvto": [334, 469], "tcp_keepal": 334, "tcp_connection_info": 334, "tcp_info": 334, "so_rtabl": 334, "so_user_cooki": 334, "so_mark": 334, "tcp_md5sig": 334, "tcp_thin_linear_timeout": 334, "tcp_thin_dupack": 334, "tcp_repair": 334, "tcp_repair_queu": 334, "tcp_queue_seq": 334, "tcp_repair_opt": 334, "tcp_timestamp": 334, "tcp_cc_info": 334, "tcp_save_syn": 334, "tcp_saved_syn": 334, "tcp_repair_window": 334, "tcp_fastopen_connect": 334, "tcp_ulp": 334, "tcp_md5sig_ext": 334, "tcp_fastopen_kei": 334, "tcp_fastopen_no_cooki": 334, "tcp_zerocopy_rec": 334, "tcp_inq": 334, "tcp_tx_delai": 334, "ip_pktinfo": 334, "ip_unblock_sourc": 334, "ip_block_sourc": 334, "ip_add_source_membership": 334, "ip_drop_source_membership": 334, "pf_can": [334, 473], "sol_can_": 334, "can_": 334, "can_bcm": [334, 474], "can_bcm_": 334, "bcm": 334, "can_bcm_can_fd_fram": 334, "can_raw_fd_fram": [334, 475], "can_raw": 334, "can_raw_join_filt": [334, 479], "15765": 334, "sae": 334, "j1939": 334, "af_divert": 334, "pf_divert": 334, "divert": 334, "pf_packet": 334, "packet_": 334, "af_rd": 334, "pf_rd": [334, 473], "sol_rd": 334, "rds_": 334, "sio_rcval": 334, "sio_keepalive_v": 334, "sio_loopback_fast_path": [334, 476], "rcvall_": 334, "wsaioctl": [334, 465], "tipc_": 334, "sol_alg": [334, 476], "alg_": [334, 476], "ioctl_vm_sockets_get_local_cid": 334, "vmaddr": 334, "so_vm": 334, "af_link": [334, 474], "has_ipv6": 334, "bdaddr_ani": 334, "bdaddr_loc": 334, "hci_filt": 334, "hci_time_stamp": 334, "hci_data_dir": 334, "scm_creds2": 334, "local_cr": 334, "local_creds_persist": 334, "so_passcr": 334, "so_incoming_cpu": 334, "hv_protocol_raw": 334, "hvsocket_connect_timeout": 334, "hvsocket_connect_timeout_max": 334, "hvsocket_connected_suspend": 334, "hvsocket_address_flag_passthru": 334, "ethertype_arp": 334, "ethertype_ip": 334, "ethertype_ipv6": 334, "ethertype_vlan": 334, "802": 334, "overrul": 334, "ipproto_mptcp": [334, 469], "global_default": 334, "getdefaulttimeout": 334, "dualstack_ipv6": 334, "has_dualstack_ipv6": [334, 478], "fromshar": [334, 477], "sockettyp": 334, "ai_numerichost": 334, "canonnam": 334, "ai_canonnam": 334, "ipproto_tcp": 334, "2606": 334, "2800": 334, "220": [334, 338, 438], "248": 334, "1893": 334, "25c8": 334, "1946": 334, "93": [334, 478, 479], "184": 334, "216": [334, 443, 446], "aliaslist": 334, "ipaddrlist": 334, "getprotobynam": 334, "icmp": 334, "inet_aton": [334, 478, 479], "ip_str": 334, "quad": [334, 461], "in_addr": 334, "inet_ntoa": 334, "packed_ip": 334, "inet_ntop": [334, 474], "address_famili": [334, 335], "in6_addr": 334, "5aef": 334, "2b": [334, 476], "cmsg_len": 334, "recvmsg": [334, 473, 475], "3542": 334, "cmsg_space": 334, "if_nameindex": [334, 478], "fb605b73": 334, "aac2": 334, "49a6": 334, "9a2f": 334, "25416aea0573": 334, "ethernet_32770": 334, "vethernet": 334, "if_nametoindex": [334, 478], "if_nam": 334, "if_indextonam": [334, 478], "if_index": 334, "send_fd": [334, 479], "scm_right": 334, "recv_fd": [334, 479], "maxfd": 334, "optnam": [334, 476], "getblock": [334, 477], "gettimeout": [334, 338], "ancbufs": 334, "ancdata": 334, "msg_flag": 334, "cmsg_level": 334, "cmsg_type": 334, "cmsg_data": 334, "unconnect": [334, 465], "sol_socket": 334, "recvmsg_into": [334, 473], "scatter": [334, 461, 462, 466], "b1": [334, 381], "b2": [334, 381], "0123456789": [334, 341, 342], "b3": 334, "lamb": [334, 438], "sendmsg_afalg": [334, 476], "iv": 334, "assoclen": 334, "optlen": [334, 476], "optval": 334, "halv": [334, 463, 466], "shut_rd": 334, "shut_wr": 334, "shut_rdwr": [334, 338], "50007": 334, "af": 334, "ipproto_ip": 334, "ip_hdrincl": 334, "rcvall_on": 334, "65565": 334, "rcvall_off": 334, "can_fram": 334, "can_frame_fmt": 334, "ib3x8": 334, "can_frame_s": 334, "build_can_fram": 334, "can_id": 334, "can_dlc": 334, "ljust": [334, 341, 443, 463, 473], "dissect_can_fram": 334, "vcan0": 334, "3bsd": 334, "stuart": 334, "sechrest": 334, "leffler": 334, "3493": 334, "bind_and_activ": [335, 417, 465], "server_bind": [335, 417, 465], "server_activ": [335, 417, 465], "baseserv": [335, 473], "unixstreamserv": 335, "unixdatagramserv": 335, "infrequ": 335, "forkingmixin": [335, 473, 477], "baserequesthandl": 335, "server_clos": [335, 404, 477], "abrupt": 335, "daemon_thread": 335, "autonom": [335, 423], "threadingudpserv": 335, "block_on_clos": [335, 477], "forkingtcpserv": 335, "forkingudpserv": 335, "forkingunixstreamserv": 335, "forkingunixdatagramserv": 335, "threadingunixstreamserv": 335, "threadingunixdatagramserv": 335, "datagramrequesthandl": 335, "deaf": [335, 472], "get_request": 335, "verify_request": 335, "handle_error": [335, 476], "handle_timeout": [335, 465, 466], "poll_interv": 335, "service_act": [335, 473], "request_queue_s": 335, "socket_typ": 335, "finish_request": 335, "mytcphandl": 335, "tcpclient": 335, "myudphandl": 335, "threadedtcprequesthandl": 335, "cur_thread": 335, "threadedtcpserv": 335, "server_thread": 335, "sp_namp": 336, "sp_pwdp": 336, "sp_lstchg": 336, "sp_min": 336, "sp_max": 336, "sp_warn": 336, "sp_inact": 336, "sp_expir": 336, "sp_flag": 336, "getspnam": [336, 476], "getspal": 336, "nonstandard": [337, 448, 453, 464], "postgresql": [337, 464], "gerhard": [337, 461, 464, 465, 466], "h\u00e4ring": [337, 461, 464, 465, 466], "249": [337, 464, 471], "w3school": 337, "sqlite_mast": 337, "executemani": 337, "hollywood": 337, "bowl": 337, "1982": [337, 340, 363], "1983": [337, 340], "brian": [337, 431, 459, 462, 463, 465, 466, 472, 473, 474, 477], "1979": [337, 340], "new_con": 337, "new_cur": 337, "detect_typ": 337, "check_same_thread": 337, "cached_stat": 337, "legacy_transaction_control": 337, "operationalerror": 337, "register_convert": 337, "parse_decltyp": 337, "parse_colnam": 337, "programmingerror": [337, 470, 471], "threadsafeti": [337, 470], "complete_stat": 337, "enable_callback_traceback": 337, "evil_trac": 337, "set_trace_callback": [337, 473], "register_adapt": 337, "sqlite_ok": 337, "sqlite_deni": 337, "sqlite_ignor": 337, "authorizer_callback": 337, "set_author": [337, 470], "apilevel": 337, "paramstyl": 337, "qmark": 337, "sqlite_vers": 337, "sqlite_version_info": 337, "sqlite_threadsaf": 337, "pysqlit": [337, 464, 466, 472], "sqlite_dbconfig_defens": 337, "sqlite_dbconfig_dqs_ddl": 337, "sqlite_dbconfig_dqs_dml": 337, "sqlite_dbconfig_enable_fkei": 337, "sqlite_dbconfig_enable_fts3_token": 337, "sqlite_dbconfig_enable_load_extens": 337, "sqlite_dbconfig_enable_qpsg": 337, "sqlite_dbconfig_enable_trigg": 337, "sqlite_dbconfig_enable_view": 337, "sqlite_dbconfig_legacy_alter_t": 337, "sqlite_dbconfig_legacy_file_format": 337, "sqlite_dbconfig_no_ckpt_on_clos": 337, "sqlite_dbconfig_reset_databas": 337, "sqlite_dbconfig_trigger_eqp": 337, "sqlite_dbconfig_trusted_schema": 337, "sqlite_dbconfig_writable_schema": 337, "setconfig": [337, 471], "getconfig": [337, 471], "c3ref": 337, "c_dbconfig_defens": 337, "blobopen": [337, 470], "rowid": 337, "zeroblob": 337, "rollback": [337, 464, 465, 470], "executescript": 337, "sql_script": 337, "create_funct": 337, "notsupportederror": 337, "md5sum": 337, "acbd18db4cc2f85cedef654fccc4a4d8": 337, "create_aggreg": 337, "n_arg": 337, "aggregate_class": 337, "mysum": 337, "create_window_funct": [337, 470], "num_param": 337, "windowfunct": 337, "udfwinfunc": 337, "windowsumint": 337, "sumint": 337, "sum_i": 337, "create_col": [337, 470], "collate_revers": 337, "4th": 337, "5th": 337, "set_progress_handl": 337, "progress_handl": 337, "databaseerror": 337, "trace_callback": 337, "fulltext": [337, 472], "fts3": 337, "ingredi": 337, "broccoli": 337, "stew": 337, "pepper": 337, "chees": [337, 438, 451], "pumpkin": 337, "onion": 337, "garlic": 337, "celeri": 337, "flour": 337, "butter": 337, "iterdump": 337, "getlimit": [337, 470], "1000000000": 337, "sqlite_limit_sql_length": 337, "setlimit": [337, 470], "sqlite_limit_attach": 337, "sqlite_dbconfig": 337, "in_transact": 337, "uncommit": [337, 472], "row_factori": 337, "text_factori": 337, "total_chang": 337, "dml": 337, "row1": 337, "row2": 337, "fetchmani": 337, "arrays": 337, "setinputs": 337, "setoutputs": 337, "lastrowid": [337, 476], "rowcount": 337, "blob_col": 337, "246": [337, 465], "sqlite_errorcod": [337, 470], "sqlite_errornam": [337, 470], "interfaceerror": [337, 470], "dataerror": 337, "integrityerror": 337, "internalerror": 337, "stock": [337, 464, 472], "first_appear": 337, "1957": 337, "__conform__": 337, "adapt_point": 337, "convert_point": 337, "adapt_date_iso": 337, "adapt_datetime_iso": 337, "adapt_datetime_epoch": 337, "convert_d": 337, "convert_datetim": 337, "convert_timestamp": 337, "1984": 337, "varchar": 337, "nosuchdb": 337, "mem1": 337, "con1": 337, "con2": 337, "6378": 337, "namedtuple_factori": 337, "czech": 337, "ddl": [337, 476], "tlsv1": [338, 474], "wrap_socket": [338, 465, 466, 469, 471, 472, 477], "644": [338, 469, 471], "ssock": 338, "protocol_tls_cli": [338, 469], "cert": [338, 457, 466, 474], "load_verify_loc": [338, 392, 474], "cabundl": 338, "pem": [338, 457, 474], "protocol_tls_serv": [338, 469], "load_cert_chain": [338, 392, 473], "certchain": 338, "8443": 338, "server_auth": [338, 474], "cafil": [338, 392, 466, 474], "capath": [338, 392, 474], "cadata": [338, 474], "op_no_sslv2": [338, 469, 472], "op_no_sslv3": [338, 469], "rc4": 338, "verify_mod": 338, "cert_requir": 338, "load_default_cert": [338, 474], "keylog_filenam": 338, "sslkeylogfil": 338, "ssl3": 338, "client_auth": [338, 474], "chacha20": [338, 476], "poly1305": [338, 476], "protocol_tl": [338, 469], "sslerror": [338, 472], "superimpos": 338, "x509": [338, 392], "certificate_verify_fail": 338, "sslzeroreturnerror": 338, "sslwantreaderror": [338, 475], "sslwantwriteerror": [338, 475], "sslsyscallerror": 338, "ssleoferror": 338, "sslcertverificationerror": [338, 477], "verify_cod": 338, "verify_messag": 338, "certificateerror": 338, "rand_byt": [338, 471, 473], "prng": 338, "rand_statu": 338, "rand_add": 338, "csprng": 338, "rand_egd": [338, 469], "1750": 338, "cert_time_to_second": [338, 475], "cert_tim": 338, "notbefor": 338, "notaft": 338, "2018": [338, 470, 477], "1515144883": 338, "5280": [338, 475], "get_server_certif": [338, 469, 473], "ca_cert": 338, "protocol_sslv3": [338, 469], "der_cert_to_pem_cert": 338, "der_cert_byt": 338, "der": [338, 395, 465, 474], "pem_cert_to_der_cert": 338, "pem_cert_str": 338, "get_default_verify_path": [338, 474], "set_default_verify_path": [338, 474], "defaultverifypath": 338, "openssl_cafile_env": 338, "openssl_cafil": 338, "openssl_capath_env": 338, "openssl_capath": 338, "enum_certif": [338, 474], "cert_byt": 338, "encoding_typ": 338, "x509_asn": 338, "509": [338, 465, 474], "asn": 338, "pkcs_7_asn": 338, "oid": [338, 395, 399], "trustworthi": 338, "enum_crl": [338, 474], "crl": [338, 474], "cert_non": 338, "cert_opt": 338, "verifymod": 338, "cert_": 338, "verify_default": [338, 474], "verify_flag": [338, 474], "revoc": [338, 474], "verify_crl_check_leaf": [338, 474], "issuer": 338, "verify_crl_check_chain": [338, 474], "verify_x509_strict": [338, 474], "verify_allow_proxy_cert": 338, "verify_x509_trusted_first": 338, "verify_x509_partial_chain": [338, 469], "verifyflag": 338, "verify_": 338, "minimum_vers": [338, 469, 477], "maximum_vers": [338, 469, 477], "protocol_tlsv1": [338, 469], "protocol_tlsv1_1": [338, 469, 474], "protocol_tlsv1_2": [338, 469, 474], "op_al": 338, "ssl_op_al": 338, "sslv2": [338, 472], "sslv3": [338, 473, 475], "op_no_tlsv1": [338, 469], "op_no_tlsv1_1": [338, 469], "op_no_tlsv1_2": [338, 469], "op_no_tlsv1_3": [338, 469], "op_no_renegoti": 338, "renegoti": [338, 466], "hellorequest": 338, "clienthello": 338, "0h": 338, "op_cipher_server_prefer": [338, 473], "op_single_dh_us": 338, "dh": [338, 469], "secreci": [338, 469], "op_single_ecdh_us": 338, "ecdh": 338, "op_enable_middlebox_compat": 338, "op_no_compress": [338, 473], "op_": 338, "op_no_ticket": 338, "ticket": 338, "op_ignore_unexpected_eof": [338, 469], "op_enable_ktl": 338, "op_legacy_server_connect": 338, "unpatch": [338, 386, 419], "has_alpn": [338, 475], "7301": [338, 466, 472, 475], "has_never_check_common_nam": 338, "hostname_checks_common_nam": [338, 477], "has_ecdh": 338, "ellipt": [338, 473], "diffi": [338, 473], "hellman": [338, 473], "6066": 338, "has_npn": 338, "set_npn_protocol": [338, 469, 473], "has_sslv2": 338, "has_sslv3": 338, "has_tlsv1": 338, "has_tlsv1_1": [338, 477], "has_tlsv1_2": 338, "has_tlsv1_3": 338, "channel_binding_typ": 338, "get_channel_bind": [338, 473], "openssl_vers": [338, 466, 472], "2k": 338, "openssl_version_info": [338, 466, 472], "openssl_version_numb": [338, 466, 472], "268443839": 338, "0x100020bf": 338, "alert_description_handshake_failur": 338, "alert_description_internal_error": 338, "alert_description_": 338, "5246": 338, "set_servername_callback": [338, 474], "alertdescript": 338, "sslerrornumb": 338, "ssl_error_": 338, "tlsversion": 338, "minimum_support": 338, "maximum_support": 338, "tlsv1_1": 338, "tlsv1_2": 338, "tlsv1_3": 338, "atop": [338, 464, 465], "diverg": [338, 461], "ssl_read_ex": 338, "ssl_write_ex": 338, "unencrypt": 338, "do_handshak": [338, 474, 475], "match_hostnam": [338, 469, 471, 472, 474, 475, 477], "binary_form": 338, "3280": 338, "subjectaltnam": 338, "rdn": 338, "countrynam": 338, "organizationnam": 338, "startcom": 338, "organizationalunitnam": 338, "commonnam": 338, "serialnumb": 338, "95f0": 338, "571208": 338, "sle257ohy9fvq07z": 338, "stateorprovincenam": 338, "california": [338, 423], "localitynam": 338, "san": [338, 393], "francisco": [338, 393], "frontier": 338, "eff": 338, "emailaddress": 338, "hostmast": 338, "x509v3": [338, 474], "crldistributionpoint": [338, 474], "caissuer": 338, "ocsp": [338, 474], "shared_ciph": [338, 475], "cb_type": 338, "5929": 338, "selected_alpn_protocol": [338, 475], "selected_npn_protocol": [338, 469], "npn": [338, 469], "verify_client_post_handshak": [338, 478], "pha": 338, "certificaterequest": 338, "pythn": [338, 477], "pyth\u00f6n": [338, 477], "sslsession": [338, 476], "session_reus": 338, "protocol_": 338, "sslv23": 338, "ecc": [338, 469], "224": [338, 464], "cert_store_stat": [338, 474], "x509_ca": 338, "get_ca_cert": [338, 474], "get_ciph": [338, 476], "set_ciph": 338, "aesgcm": 338, "ecdsa": [338, 472], "alg_bit": 338, "aes256": 338, "gcm": 338, "kx": 338, "50380848": 338, "kea": 338, "strength_bit": 338, "aes128": 338, "50380847": 338, "spdy": 338, "agre": [338, 344, 423], "sni_callback": 338, "openssl_no_tlsext": 338, "server_name_callback": 338, "load_dh_param": [338, 473], "dhfile": 338, "set_ecdh_curv": [338, 473], "curve_nam": 338, "prime256v1": 338, "vincent": [338, 470, 475, 476], "bernat": 338, "do_handshake_on_connect": 338, "suppress_ragged_eof": 338, "sslsocket_class": 338, "sni": [338, 471, 474, 477], "wrap_bio": [338, 475, 477], "sslobject_class": 338, "session_stat": 338, "ssl_sock": 338, "verisign": 338, "keylog": 338, "nss": 338, "wireshark": 338, "num_ticket": 338, "2197947391": 338, "op_no_ssl": 338, "op_no_tl": 338, "1k": 338, "security_level": 338, "1422": 338, "agenc": [338, 423], "bui": [338, 464], "keyout": 338, "provinc": 338, "mystat": 338, "widgit": 338, "myserv": 338, "myorgan": 338, "digicert": 338, "cacert": 338, "digicertsha2extendedvalidationserverca": 338, "crl3": 338, "g1": [338, 381], "crl4": 338, "01bb6f00122b177f36cab49cea8b6b26": 338, "businesscategori": 338, "311": 338, "delawar": 338, "3359300": 338, "streetaddress": 338, "postalcod": 338, "03894": 338, "4801": 338, "nh": 338, "wolfeboro": 338, "testpypi": 338, "pythonhost": 338, "nhost": 338, "linuxfr": 338, "nginx": 338, "sameorigin": 338, "45679": 338, "varnish": 338, "2188": 338, "lcy1134": 338, "lcy": 338, "63072000": 338, "includesubdomain": 338, "mycertfil": 338, "mykeyfil": 338, "bindsocket": 338, "myaddr": 338, "10023": 338, "newsocket": 338, "connstream": 338, "deal_with_cli": 338, "memorybio": [338, 475], "ticket_lifetime_hint": 338, "has_ticket": 338, "client_context": 338, "disjunct": [338, 428], "rekei": 338, "steve": [338, 460, 465, 471, 475, 476, 477, 478, 479], "4086": 338, "schiller": 338, "dierk": 338, "eastlak": 338, "7525": 338, "dtl": 338, "s_ischr": 339, "s_isblk": 339, "s_isreg": 339, "s_isfifo": 339, "s_islnk": 339, "s_issock": 339, "s_isdoor": 339, "s_isport": 339, "s_iswht": 339, "whiteout": 339, "s_imod": 339, "s_ifmt": 339, "walktre": 339, "visitfil": 339, "rwxrwxrwx": [339, 473], "s_ifdoor": [339, 474], "s_ifport": [339, 474], "s_ifwht": [339, 474], "s_ifsock": 339, "s_iflnk": [339, 478], "s_ifdir": 339, "v7": [339, 355], "file_attribute_compress": 339, "file_attribute_devic": 339, "file_attribute_directori": 339, "file_attribute_encrypt": 339, "file_attribute_hidden": 339, "file_attribute_integrity_stream": 339, "file_attribute_norm": 339, "file_attribute_not_content_index": 339, "file_attribute_no_scrub_data": 339, "file_attribute_offlin": 339, "file_attribute_readonli": 339, "file_attribute_sparse_fil": 339, "file_attribute_system": 339, "file_attribute_temporari": 339, "file_attribute_virtu": 339, "io_reparse_tag_symlink": 339, "io_reparse_tag_mount_point": 339, "io_reparse_tag_appexeclink": 339, "competitor": 340, "scipi": [340, 441, 448, 451, 458], "statistician": 340, "minitab": 340, "matlab": 340, "input_data": 340, "median_low": 340, "median_high": 340, "median_group": 340, "multimod": [340, 478], "geometric_mean": [340, 478], "harmonic_mean": [340, 476], "harmon": 340, "50th": 340, "percentil": [340, 478], "pstdev": 340, "pvarianc": 340, "varianc": [340, 383, 448, 470, 471, 474, 476, 478], "covari": [340, 383, 469], "pearson": [340, 469], "spearman": [340, 471], "linear_regress": [340, 469], "slope": 340, "statisticserror": 340, "625": [340, 441, 478], "5625": [340, 446], "outlier": 340, "tendenc": 340, "unbias": 340, "\u03bc": 340, "quizz": 340, "homework": 340, "midterm": 340, "92": [340, 478, 479], "83": [340, 379, 448, 474], "reciproc": 340, "travel": [340, 381], "journei": 340, "frederick": 340, "gravett": 340, "wallnau": 340, "8th": 340, "ssmedian": 340, "gnumer": 340, "aabbbbccddddeeffffgg": 340, "986893273527251": 340, "dispers": 340, "815": 340, "\u03c3\u00b2": 340, "s\u00b2": 340, "freedom": [340, 410, 433], "xbar": 340, "0810874155219827": 340, "3720238095238095": [340, 448], "01875": 340, "108": [340, 379, 458], "bessel": 340, "decil": [340, 478], "0th": 340, "100th": 340, "empir": 340, "129": 340, "109": [340, 379, 458], "121": [340, 466], "107": [340, 458], "joint": [340, 423], "kepler": 340, "planetari": 340, "orbital_period": 340, "225": [340, 381, 459], "687": 340, "4331": [340, 474], "10_756": 340, "30_687": 340, "60_190": 340, "dist_from_sun": 340, "150": [340, 381, 385, 462, 466], "228": 340, "778": 340, "1_400": 340, "2_900": 340, "4_500": 340, "imperfect": [340, 361], "9882": 340, "orbit": 340, "period_squar": 340, "dist_cub": 340, "films_tot": 340, "pluto": 340, "eri": 340, "makemak": 340, "haumea": 340, "cere": 340, "90_560": 340, "204_199": 340, "111_845": 340, "103_410": 340, "1_680": 340, "predicted_dist": 340, "5912": 340, "10166": 340, "6806": 340, "6459": 340, "5_906": 340, "10_152": 340, "6_796": 340, "6_450": 340, "5906": 340, "10152": 340, "6796": 340, "6450": 340, "from_sampl": [340, 478], "cdf": [340, 478], "inv_cdf": 340, "zscore": 340, "temperature_februari": 340, "celsiu": 340, "fahrenheit": [340, 478], "birth_weight": 340, "drug_effect": 340, "1060": [340, 478], "195": [340, 476], "1100": [340, 468], "1200": [340, 453], "928": 340, "1192": 340, "810": 340, "958": 340, "1011": [340, 342], "1109": 340, "1162": 340, "1224": 340, "1310": 340, "analyt": 340, "3652260728": 340, "4582495471": 340, "6582483453": 340, "4591308524824727": 340, "8035946855390597": 340, "175091447274739": 340, "750": 340, "attende": 340, "8402": [340, 474], "8675309": 340, "8406": 340, "gender": 340, "train": 340, "height_mal": 340, "height_femal": 340, "weight_mal": 340, "170": [340, 381], "weight_femal": 340, "foot_size_mal": 340, "foot_size_femal": 340, "male": 340, "posterior": 340, "prior_mal": 340, "prior_femal": 340, "posterior_mal": 340, "posterior_femal": 340, "posteriori": 340, "smooth": 340, "kde_norm": 340, "kernel_h": 340, "x_i": 340, "f_hat": 340, "xarr": 340, "yarr": 340, "unadorn": 341, "widen": 341, "0b100101": [341, 466, 468], "lstrip": [341, 462], "100101": 341, "bit_count": [341, 469], "0b10011": 341, "x04": [341, 395, 461], "xff": [341, 473], "xfc": 341, "xe8": 341, "x10": [341, 461], "64512": 341, "16711680": 341, "little_ord": 341, "tohexstr": 341, "0x3": 341, "a7p10": 341, "3740": 341, "d380000000000p": 341, "hash_info": [341, 349, 425, 447, 472, 474], "invmod": 341, "hash_fract": 341, "hash_valu": 341, "fermat": 341, "hash_float": 341, "hash_complex": 341, "breadth": [341, 381, 449], "gg": 341, "haunt": 341, "economi": 341, "subrang": 341, "linspac": 341, "zoot": 341, "digraph": 341, "fillchar": 341, "expandtab": [341, 361], "t012": 341, "t0123": 341, "t01234": 341, "0123": 341, "01234": 341, "ideograph": 341, "007f": [341, 432], "0660": [341, 459], "superscript": 341, "kharosthi": 341, "numeric_typ": 341, "isidentifi": 341, "2155": 341, "vulgar": 341, "istitl": 341, "uncas": 341, "justifi": [341, 366, 373, 443, 465], "spaciou": 341, "cmowz": 341, "removeprefix": [341, 479], "testhook": 341, "basetestcas": 341, "removesuffix": [341, 479], "misctest": 341, "tmpdirmixin": 341, "rindex": [341, 466, 472, 473], "rjust": [341, 443, 463, 473], "rsplit": [341, 463, 466, 472], "ipz": 341, "mississ": 341, "x1c": 341, "x1d": 341, "x85": 341, "u2028": 341, "u2029": 341, "nde": 341, "rkl": 341, "kl": 341, "comment_str": 341, "swapcas": 341, "bill": [341, 443, 459, 465], "capword": [341, 342], "zfill": [341, 443, 462], "00042": 341, "0042": 341, "sprintf": [341, 459, 461], "parenthesis": 341, "somenam": 341, "1e50": 341, "ieee754": 341, "emphasis": 341, "usefulli": [341, 466], "2ef0": 341, "f1f2": 341, "xf0": 341, "xf1": 341, "xf2": 341, "f0f1f2": 341, "f0": 341, "f0_f1f2": 341, "uuddlrlrab": 341, "55554444": 341, "4c524c52": 341, "4142": 341, "aeiou": 341, "shrt": 341, "fillbyt": 341, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": [341, 466], "abcabc1": 341, "abc1": 341, "abcabc": 341, "abcdefghijklmnopqrstuvwxyz": [341, 342, 466], "subview": 341, "abcefg": 341, "0x7f3ddc9f4350": 341, "bce": 341, "22222222": 341, "33333333": 341, "44444444": 341, "zbcefg": 341, "z123fg": 341, "rvalu": 341, "z1spam": 341, "ce": [341, 458, 459], "bepoint": 341, "616263": 341, "toreadonli": 341, "byte_length": 341, "new_items": 341, "1d": 341, "zyz": 341, "ayz": 341, "3d": [341, 443], "2d": [341, 443], "32000": 341, "32001": 341, "32002": 341, "sjoerd": [341, 443, 459, 465], "cardin": 341, "disjoint": 341, "issubset": [341, 462], "issuperset": [341, 462], "symmetric_differ": [341, 462], "intersection_upd": [341, 462, 465], "difference_upd": [341, 465, 479], "symmetric_difference_upd": [341, 462], "4098": [341, 439, 443], "4127": [341, 439, 443], "salad": 341, "juic": 341, "mappingproxi": 341, "synchronis": [341, 473], "send_post_request": 341, "weakkeydictionari": [341, 399, 464], "weakmethod": [341, 399, 474], "weakset": [341, 399, 466, 470], "weakvaluedictionari": [341, 399, 449, 464], "__unpacked__": 341, "union_object": 341, "whoami": 341, "_namedintconst": 341, "10735": [341, 470], "set_int_max_str_digit": [341, 349, 359], "5432": 341, "i_squar": 341, "7144": 341, "578966293710682886880994035146873798396722250538762761564": 341, "9252925514383915483333812743580549779436104706260696366600": 341, "571186405732": 341, "get_int_max_str_digit": [341, 349], "upper_bound": [341, 427], "68000": 341, "lower_bound": [341, 427], "4004": 341, "current_limit": 341, "ascii_uppercas": [342, 461], "0123456789abcdefabcdef": 342, "octdigit": [342, 432], "01234567": 342, "formfe": [342, 361, 432], "vformat": 342, "repack": 342, "literal_text": 342, "get_field": 342, "used_kei": 342, "get_valu": 342, "check_unused_arg": 342, "used_arg": 342, "format_field": 342, "convert_field": 342, "arg_nam": 342, "attribute_nam": 342, "element_index": 342, "index_str": 342, "thou": [342, 472], "shalt": [342, 472], "quest": [342, 439], "ton": 342, "grouping_opt": 342, "000000120": 342, "682": [342, 470], "insignific": 342, "significand": [342, 349], "abra": 342, "cad": 342, "24n": 342, "81w": 342, "coord": [342, 471], "5j": [342, 446], "test1": [342, 424], "test2": [342, 424], "2a": 342, "101010": 342, "0o52": [342, 465], "0b101010": 342, "1234567890": [342, 465], "890": 342, "02x": 342, "c0a80001": 342, "dxob": 342, "1010": [342, 478], "flufl": 342, "noun": 342, "ific": 342, "safe_substitut": [342, 449, 463], "is_valid": [342, 470], "get_identifi": [342, 348, 470], "kung": 342, "pao": 342, "idpattern": 342, "_a": 342, "braceidpattern": 342, "unbrac": 342, "3454": [343, 462], "mkstringprep": [343, 462], "in_table_a1": 343, "tablea": 343, "in_table_b1": 343, "tableb": 343, "map_table_b2": 343, "map_table_b3": 343, "in_table_c11": 343, "tablec": 343, "in_table_c12": 343, "in_table_c11_c12": 343, "in_table_c21": 343, "in_table_c22": 343, "in_table_c21_c22": 343, "in_table_c3": 343, "in_table_c4": 343, "in_table_c5": 343, "in_table_c6": 343, "in_table_c7": 343, "in_table_c8": 343, "in_table_c9": 343, "in_table_d1": 343, "in_table_d2": 343, "iter_unpack": [344, 474], "1700": 344, "10c": 344, "cccccccccc": 344, "0c": 344, "hhhh": [344, 459], "bhl": 344, "99999": 344, "x32": 344, "x12": [344, 395], "serialnum": 344, "gradelevel": 344, "10shhb": 344, "4658": 344, "ci": [344, 458, 477, 478], "0x12131415": 344, "x14": 344, "x13": 344, "llh0l": 344, "lhl": 344, "llh": 344, "revisit": 344, "qh6xq": 344, "qqh": 344, "qqh6x": 344, "capture_output": [345, 477], "other_popen_kwarg": 345, "completedprocess": [345, 475], "timeoutexpir": 345, "calledprocesserror": [345, 466, 475], "crw": [345, 475], "systemroot": 345, "system32": [345, 458], "check_returncod": 345, "subprocesserror": 345, "symmetri": [345, 459], "check_cal": 345, "preexec_fn": [345, 463, 478], "startupinfo": [345, 463, 477], "restore_sign": 345, "start_new_sess": [345, 478], "pass_fd": [345, 478], "extra_group": 345, "pipes": 345, "process_group": 345, "lpapplicationnam": 345, "lpcommandlin": 345, "vike": 345, "unintent": 345, "seldom": 345, "handle_list": 345, "lpattributelist": [345, 477], "sigxfz": 345, "sigxfsz": 345, "assembli": [345, 431], "create_new_consol": 345, "above_normal_priority_class": 345, "below_normal_priority_class": 345, "high_priority_class": 345, "idle_priority_class": 345, "normal_priority_class": 345, "realtime_priority_class": 345, "create_no_window": 345, "detached_process": 345, "create_default_error_mod": 345, "create_breakaway_from_job": 345, "ifconfig": 345, "qemu": [345, 478], "hadn": 345, "dwflag": 345, "hstdinput": 345, "hstdoutput": 345, "hstderror": 345, "wshowwindow": 345, "startf_usestdhandl": 345, "startf_useshowwindow": 345, "ncmdshow": 345, "showwindow": 345, "sw_showdefault": 345, "sw_hide": 345, "startupinfoex": 345, "updateprocthreadattribut": 345, "error_invalid_paramet": 345, "std_input_handl": 345, "conin": 345, "std_output_handl": 345, "conout": 345, "std_error_handl": 345, "realtim": 345, "non_existent_fil": 345, "mycmd": 345, "myarg": 345, "dmesg": 345, "hda": 345, "retcod": 345, "child_stdin": 345, "child_stdout": 345, "child_stderr": 345, "child_stdout_and_stderr": 345, "popen4": 345, "somestr": 345, "capturestderr": 345, "getstatusoutput": [345, 474], "getoutput": 345, "_use_vfork": 345, "nnnnnn": 345, "_use_posix_spawn": 345, "knob": 345, "snd": 346, "audio_file_mag": 346, "audio_file_encoding_mulaw_8": 346, "audio_file_encoding_linear_8": 346, "audio_file_encoding_linear_16": 346, "audio_file_encoding_linear_24": 346, "audio_file_encoding_linear_32": 346, "audio_file_encoding_alaw_8": 346, "audio_file_encoding_float": 346, "audio_file_encoding_doubl": 346, "audio_file_encoding_adpcm_g721": 346, "audio_file_encoding_adpcm_g722": 346, "audio_file_encoding_adpcm_g723_3": 346, "audio_file_encoding_adpcm_g723_5": 346, "711": 346, "compile_typ": 348, "symbolt": [348, 479], "get_typ": [348, 392, 474], "get_lineno": 348, "is_optim": 348, "is_nest": 348, "has_children": 348, "get_children": [348, 373], "get_symbol": 348, "get_paramet": 348, "get_loc": 348, "get_glob": 348, "get_nonloc": 348, "get_fre": 348, "get_method": [348, 392, 473], "is_referenc": 348, "is_import": 348, "is_paramet": 348, "is_nonloc": 348, "is_declared_glob": [348, 466], "is_loc": 348, "is_annot": 348, "is_fre": 348, "is_assign": 348, "is_namespac": 348, "some_func": 348, "get_namespac": 348, "abiflag": [349, 447, 453, 472, 478], "unobserv": 349, "__cantrace__": 349, "stdlib_module_nam": [349, 469], "call_trac": [349, 447], "_clear_type_cach": [349, 447], "_debugmallocstat": [349, 447], "dllhandl": 349, "_emscripten_info": 349, "emscripten_vers": 349, "v14": 349, "__breakpointhook__": [349, 447], "__displayhook__": [349, 447], "__excepthook__": [349, 362, 447, 469], "__unraisablehook__": [349, 447], "dynload": [349, 351, 453], "underdevelop": 349, "no_user_sit": [349, 472], "ignore_environ": [349, 472], "hash_random": 349, "division_warn": [349, 472, 473], "1999": [349, 363, 392, 423], "iec": 349, "dbl_epsilon": 349, "dig": 349, "dbl_dig": 349, "mant_dig": [349, 465], "dbl_mant_dig": 349, "dbl_max_exp": 349, "max_10_exp": 349, "dbl_max_10_exp": 349, "min_exp": 349, "dbl_min_exp": 349, "min_10_exp": 349, "dbl_min_10_exp": 349, "flt_radix": 349, "flt_round": 349, "14159265358979": 349, "15g": 349, "9876543211234567": 349, "16g": 349, "9876543211234568": 349, "float_repr_styl": [349, 447, 466], "getallocatedblock": [349, 447, 474], "getunicodeinterneds": [349, 471], "getandroidapilevel": [349, 477], "getdefaultencod": [349, 447], "rtld_": 349, "_enablelegacywindowsfsencod": [349, 452, 476], "getswitchinterv": [349, 447, 479], "unidentifi": 349, "getprofil": [349, 362, 447, 465, 469], "gettrac": [349, 362, 447, 465, 469], "getwindowsvers": [349, 466, 476], "service_pack": [349, 466], "service_pack_minor": [349, 466], "service_pack_major": [349, 466], "suite_mask": [349, 466], "product_typ": [349, 466], "platform_vers": [349, 476], "ver_platform_win32_nt": 349, "ver_nt_workst": 349, "workstat": 349, "ver_nt_domain_control": 349, "ver_nt_serv": 349, "getversionex": 349, "osversioninfoex": 349, "get_asyncgen_hook": [349, 447], "asyncgen_hook": 349, "firstit": 349, "get_coroutine_origin_tracking_depth": [349, 447, 477], "hash_bit": 349, "seed_bit": 349, "0x010502f0": 349, "bits_per_digit": [349, 453, 466, 468], "sizeof_digit": [349, 466, 468], "engag": 349, "maxunicod": [349, 447, 473], "0xffff": [349, 473], "find_modul": [349, 420, 429, 462, 469, 470, 471, 473, 474, 477], "freebsd8": 349, "linux2": [349, 473], "linux3": [349, 473], "aix5": 349, "aix7": [349, 478], "coarser": 349, "suse": [349, 453, 479], "profilefunc": 349, "timeslic": 349, "tracefunc": 349, "lnotab_not": [349, 476], "set_asyncgen_hook": [349, 427, 447], "is_stack_trampoline_act": [349, 471], "thread_info": [349, 447, 473], "tracebacklimit": 349, "api_vers": [349, 447, 462], "releaselevel": [349, 466, 468], "winver": 349, "xa": 349, "2a3": 349, "citat": 349, "9899": 349, "jtc1": 349, "sc22": 349, "wg14": 349, "n1256": 349, "use_tool_id": 350, "tool_id": 350, "free_tool_id": 350, "get_tool": 350, "debugger_id": 350, "coverage_id": 350, "profiler_id": 350, "optimizer_id": 350, "oblig": [350, 423, 459], "c_rais": 350, "exception_handl": 350, "py_resum": 350, "py_return": 350, "py_start": 350, "py_throw": 350, "py_unwind": 350, "py_yield": 350, "no_ev": 350, "explict": 350, "comparis": 350, "get_ev": 350, "set_ev": 350, "event_set": 350, "get_local_ev": 350, "codetyp": [350, 382, 478], "set_local_ev": 350, "restart_ev": 350, "register_callback": 350, "instruction_offset": 350, "line_numb": 350, "destination_offset": 350, "untaken": 350, "nuanc": 351, "landmark": [351, 458, 476], "majorvers": 351, "minorvers": 351, "python311": 351, "py_enable_shar": 352, "libdir": [352, 457], "posix_venv": [352, 470], "nt_venv": [352, 470], "platstdlib": [352, 472], "platlib": [352, 472], "purelib": [352, 396, 472], "platinclud": [352, 472], "userbas": [352, 472], "stash": 352, "trifl": 352, "mnt": 352, "get_scheme_nam": 352, "get_default_schem": 352, "_get_default_schem": 352, "get_preferred_schem": [352, 470], "get_path": [352, 466, 472], "_get_preferred_schem": 352, "redistributor": [352, 466], "_install_schem": 352, "get_path_nam": 352, "get_python_vers": [352, 472], "get_platform": [352, 472], "i586": [352, 472], "sun4u": 352, "64bit": [352, 471], "intel64": 352, "em64t": 352, "macosx": [352, 400, 456, 470, 471, 472], "ppc": [352, 456, 465, 472], "ppc64": 352, "i386": [352, 457, 458, 475], "fat": [352, 402], "is_python_build": [352, 466], "parse_config_h": 352, "get_config_h_filenam": 352, "ac_apple_universal_build": 352, "aix_genuine_cplusplu": 352, "arflag": 352, "log_mask": 353, "pri": 353, "log_upto": 353, "log_pid": 353, "log_con": 353, "log_ndelai": 353, "log_odelai": 353, "log_nowait": 353, "log_perror": 353, "file_or_dir": 354, "filename_onli": 354, "nannynag": 354, "process_token": 354, "ustar": [355, 465], "longlink": 355, "10240": 355, "readerror": 355, "compressionerror": 355, "is_tarfil": 355, "tarerror": 355, "streamerror": 355, "extracterror": 355, "errorlevel": 355, "headererror": 355, "frombuf": 355, "filtererror": 355, "absolutepatherror": 355, "outsidedestinationerror": 355, "specialfileerror": [355, 466], "absolutelinkerror": 355, "linkoutsidedestinationerror": 355, "regtyp": 355, "aregtyp": 355, "lnktype": 355, "symtyp": 355, "chrtype": 355, "blktype": 355, "dirtyp": 355, "fifotyp": 355, "conttyp": 355, "gnutype_longnam": 355, "gnutype_longlink": 355, "gnutype_spars": 355, "ustar_format": 355, "gnu_format": 355, "pax_format": [355, 465], "default_format": [355, 476], "ignore_zero": 355, "pax_head": 355, "extractal": [355, 419, 464, 465, 475], "numeric_own": [355, 475], "set_attr": 355, "extractfil": 355, "extraction_filt": 355, "fully_trust": 355, "arcnam": [355, 419], "addfil": 355, "gettarinfo": 355, "fromtarfil": 355, "tobuf": 355, "linknam": 355, "gname": 355, "chksum": 355, "devmajor": 355, "devminor": 355, "offset_data": 355, "new_tarinfo": 355, "old_tarinfo": 355, "isreg": 355, "issym": 355, "islnk": 355, "ischr": 355, "isblk": 355, "isfifo": 355, "isdev": 355, "706": [355, 470, 471], "tar_filt": 355, "data_filt": 355, "fully_trusted_filt": 355, "crucial": [355, 429, 459], "tinker": 355, "my_tarfil": 355, "warn_the_us": 355, "statefulfilt": 355, "filter_func": 355, "file_count": 355, "brian_1979": [355, 419], "source1": [355, 419], "sourcen": [355, 419], "output_dir": [355, 419], "filternam": 355, "py_fil": 355, "quux": 355, "bsdtar": 355, "libarch": 355, "unmaintain": [355, 372, 472, 474, 476], "ancient": [355, 464], "seventh": 355, "miscalcul": 355, "telopt_": 356, "iac": 356, "dont": 356, "wont": 356, "WILL": [356, 423], "subnegoti": 356, "dm": 356, "brk": 356, "ao": 356, "ayt": 356, "ec": 356, "ga": 356, "read_": 356, "tn": 356, "read_until": 356, "read_al": 356, "read_som": 356, "read_very_eag": 356, "midst": 356, "read_eag": 356, "read_lazi": 356, "read_very_lazi": 356, "read_sb_data": 356, "subopt": 356, "get_socket": 356, "mt_interact": 356, "uncompil": 356, "set_option_negotiation_callback": 356, "temporaryfil": 357, "temporarydirectori": [357, 472], "spooledtemporaryfil": [357, 465, 470, 473], "delete_on_clos": [357, 471], "max_siz": [357, 383], "spool": 357, "_file": 357, "ignore_cleanup_error": 357, "gettempprefix": 357, "gettempprefixb": 357, "tmpdir": 357, "searchabl": [357, 429], "gettempdir": 357, "tempdir": [357, 399], "gettempdirb": 357, "unsuspect": 357, "tmpdirnam": [357, 472], "beaten": 357, "punch": 357, "tmptjujjt": 357, "tcgetattr": [358, 380], "iflag": 358, "oflag": 358, "lflag": 358, "ispe": 358, "ospe": 358, "vmin": 358, "vtime": 358, "tcsetattr": [358, 380], "tcsanow": 358, "tcsadrain": 358, "tcsaflush": [358, 380], "tcsendbreak": 358, "tcdrain": 358, "tcflush": 358, "tciflush": 358, "tcoflush": 358, "tcioflush": 358, "tcflow": 358, "tcooff": 358, "tcoon": 358, "tcioff": 358, "tcion": 358, "tcgetwins": 358, "ws_row": 358, "ws_col": 358, "tiocgwinsz": 358, "tiocgsiz": 358, "tcsetwins": 358, "winsiz": 358, "tiocswinsz": 358, "tiocssiz": 358, "regrtest": [359, 379, 462, 466], "test_": [359, 419], "pyunit": [359, 460], "mytestcase1": 359, "test_feature_on": 359, "test_feature_two": 359, "mytestcase2": 359, "whitebox": 359, "blackbox": 359, "improp": [359, 425, 471], "crop": 359, "anomal": 359, "testfuncacceptssequencesmixin": 359, "mysuperwhammyfunct": 359, "test_func": 359, "acceptlist": 359, "acceptstr": 359, "accepttupl": 359, "beck": [359, 385, 460], "test_main": 359, "testload": [359, 385, 386, 466, 470, 471, 475], "loadtestsfrommodul": [359, 385, 470, 471, 475], "test_spam": 359, "uall": [359, 462], "largefil": 359, "pcbuild": [359, 458, 465], "testfail": 359, "resourcedeni": 359, "skiptest": [359, 385, 466, 474], "is_jython": 359, "is_android": 359, "unix_shel": 359, "loopback_timeout": 359, "internet_timeout": 359, "transient_internet": 359, "short_timeout": 359, "buildbot": [359, 385, 453], "long_timeout": 359, "pipe_max_s": 359, "sock_max_s": 359, "test_support_dir": 359, "test_home_dir": 359, "test_data_dir": 359, "max_py_ssize_t": 359, "max_memus": 359, "set_memlimit": 359, "real_max_memus": 359, "missing_c_docstr": 359, "with_doc_str": [359, 453], "have_docstr": 359, "test_http_url": 359, "always_eq": 359, "never_eq": 359, "busy_retri": 359, "sleeping_retri": 359, "init_delai": 359, "max_delai": 359, "backoff": 359, "is_resource_en": 359, "python_is_optim": 359, "o0": 359, "with_pymalloc": 359, "_testcapi": [359, 453], "sortdict": 359, "findfil": 359, "get_pages": 359, "check_impl_detail": 359, "record_original_stdout": 359, "get_original_stdout": 359, "args_from_interpreter_flag": 359, "optim_args_from_interpreter_flag": 359, "captured_stdin": 359, "captured_stdout": 359, "captured_stderr": 359, "disable_faulthandl": 359, "gc_collect": 359, "disable_gc": 359, "swap_attr": 359, "new_val": 359, "swap_item": 359, "flush_std_stream": 359, "print_warn": 359, "wait_process": 359, "calcobjs": 359, "calcvobjs": 359, "checksizeof": 359, "anticipate_failur": 359, "expectedfailur": [359, 385, 468], "system_must_validate_cert": 359, "run_with_local": 359, "catstr": 359, "run_with_tz": 359, "requires_freebsd_vers": 359, "min_vers": 359, "requires_linux_vers": 359, "requires_mac_vers": 359, "requires_ieee_754": 359, "requires_zlib": 359, "requires_gzip": 359, "requires_bz2": 359, "requires_lzma": 359, "requires_resourc": 359, "requires_docstr": 359, "requires_limited_api": 359, "cpython_onli": 359, "impl_detail": 359, "no_trac": 359, "refcount_test": 359, "bigmemtest": 359, "memus": 359, "bigmem": 359, "_4g": 359, "bigaddrspacetest": 359, "check_syntax_error": 359, "errtext": 359, "open_urlresourc": 359, "reap_children": 359, "hog": 359, "refleak": [359, 471], "get_attribut": 359, "catch_unraisable_except": 359, "load_package_test": 359, "pkg_dir": 359, "standard_test": [359, 385], "detect_api_mismatch": 359, "ref_api": 359, "other_api": 359, "test_inst": 359, "object_to_patch": 359, "run_in_subinterp": 359, "check_free_after_iter": 359, "missing_compiler_execut": 359, "cmd_name": 359, "check__all__": 359, "test_cas": [359, 385], "name_of_modul": 359, "not_export": 359, "_csv": 359, "misctestcas": 359, "test__all__": 359, "othertestcas": 359, "bar_const": 359, "foo_const": 359, "_bar": 359, "skip_if_broken_multiprocessing_synchron": 359, "check_disallow_instanti": 359, "adjust_int_max_str_digit": 359, "max_digit": 359, "suppresscrashreport": 359, "seterrormod": 359, "coredump": 359, "savesign": 359, "matcher": [359, 387], "match_valu": 359, "ipv6_en": 359, "find_unused_port": 359, "elicit": 359, "ephemer": [359, 399], "bind_port": 359, "s_server": 359, "so_exclusiveaddrus": 359, "bind_unix_socket": 359, "skip_unless_bind_unix_socket": 359, "resource_nam": 359, "interpreter_requires_environ": 359, "skipif": [359, 385], "assert_python": 359, "pythonusersit": 359, "run_python_until_end": 359, "env_var": 359, "__isol": 359, "__cleanenv": 359, "__cwd": 359, "assert_python_ok": 359, "assert_python_failur": 359, "spawn_python": 359, "kill_python": 359, "make_script": 359, "script_dir": 359, "script_basenam": 359, "omit_suffix": 359, "make_zip_script": 359, "zip_dir": 359, "zip_basenam": 359, "script_nam": [359, 404], "name_in_zip": 359, "make_pkg": 359, "init_sourc": 359, "make_zip_pkg": 359, "bytecodetestcas": 359, "get_disassembly_as_str": 359, "assertinbytecod": 359, "_unspecifi": 359, "assertnotinbytecod": 359, "reap_thread": 359, "threading_cleanup": 359, "original_valu": 359, "threading_setup": 359, "wait_threads_exit": 359, "catch_threading_except": 359, "fs_nonascii": 359, "savedcwd": 359, "testfn": 359, "testfn_nonascii": 359, "testfn_unencod": 359, "testfn_undecod": 359, "testfn_unicod": 359, "environmentvarguard": [359, 465], "fakepath": 359, "can_symlink": 359, "can_xattr": 359, "xattr": 359, "change_cwd": 359, "create_empty_fil": 359, "fd_count": 359, "fs_is_case_insensit": 359, "make_bad_fd": 359, "skip_unless_symlink": 359, "skip_unless_xattr": 359, "temp_cwd": 359, "tempcwd": 359, "temp_dir": 359, "temp_umask": 359, "import_fresh_modul": 359, "reinsert": [359, 373, 466, 468], "py_warn": 359, "_warn": [359, 469], "c_warn": 359, "required_on": 359, "modules_setup": 359, "modules_cleanup": 359, "oldmodul": 359, "make_legacy_pyc": 359, "cleanimport": 359, "dirsonsyspath": 359, "ignore_warn": 359, "catch_warn": [359, 397, 465, 470, 471], "simplefilt": [359, 397, 465, 466, 470], "warning_help": 359, "test_suppress_warn": 359, "check_no_resource_warn": 359, "check_syntax_warn": 359, "check_warn": [359, 465], "regexp": [359, 472], "warningcategori": 359, "warningrecord": 359, "hei": 359, "warningsrecord": 359, "textwrapp": [361, 462, 474], "initial_ind": 361, "subsequent_ind": 361, "expand_tab": 361, "replace_whitespac": 361, "fix_sentence_end": 361, "break_long_word": 361, "drop_whitespac": [361, 465], "break_on_hyphen": 361, "max_lin": [361, 474], "thello": 361, "nworld": 361, "frankenstein": 361, "insec": 361, "camelcas": 362, "activecount": [362, 465, 469], "main_thread": [362, 474], "settrace_all_thread": [362, 471], "setprofile_all_thread": [362, 471], "_threading_loc": 362, "threadgroup": 362, "setnam": [362, 469], "native_id": [362, 478], "tid": 362, "isdaemon": [362, 465, 469], "setdaemon": [362, 465, 469], "an_item_is_avail": 362, "get_an_available_item": 362, "make_an_item_avail": 362, "notifyal": [362, 469], "dutch": [362, 432], "scientist": 362, "edsger": 362, "dijkstra": 362, "awoken": 362, "maxconnect": 362, "pool_sema": 362, "connectdb": 362, "isset": [362, 469], "accept_connect": 362, "process_server_connect": 362, "make_connect": [362, 416], "process_client_connect": 362, "awri": 362, "some_lock": 362, "1969": 363, "acronym": 363, "compromis": [363, 395, 421, 438], "wisdom": 363, "tm_gmtoff": [363, 476], "tm_zone": [363, 476], "tm": [363, 372], "1993": 363, "pthread_getcpuclockid": [363, 477], "clk_id": 363, "clock_getr": [363, 473], "clock_gettim": [363, 473, 479], "clock_gettime_n": [363, 477], "clock_settim": [363, 473], "clock_realtim": [363, 470], "clock_settime_n": [363, 477], "get_clock_info": [363, 473], "thread_tim": [363, 477, 479], "ntp": 363, "monotonic_n": [363, 477], "perf_counter_n": [363, 364, 477], "process_time_n": [363, 477], "suspens": [363, 425, 427], "clock_nanosleep": [363, 470], "nanosleep": [363, 470], "tm_year": [363, 461], "tm_mon": 363, "tm_mdai": 363, "tm_hour": 363, "tm_min": 363, "tm_sec": 363, "tm_wdai": 363, "tm_ydai": 363, "335": 363, "tm_dai": 363, "time_n": [363, 477], "thread_time_n": [363, 477], "clock_thread_cputime_id": [363, 479], "tzset": 363, "meridian": 363, "julian": [363, 474, 475], "05edt": 363, "m4": [363, 453], "m10": 363, "aest": 363, "10aedt": 363, "tzfile": 363, "datafil": [363, 462], "australia": 363, "melbourn": 363, "egypt": 363, "eet": 363, "eest": 363, "clock_boottim": [363, 477], "clock_monoton": [363, 470, 477], "discontinu": [363, 392], "settimeofdai": 363, "clock_highr": 363, "nonadjust": 363, "clock_monotonic_raw": 363, "clock_process_cputime_id": 363, "clock_prof": [363, 477], "clock_tai": 363, "ptp": 363, "clock_uptim": [363, 477], "uptim": [363, 477], "clock_uptime_raw": [363, 478], "asleep": 363, "1123": [363, 468], "usec": [364, 475], "3018611848820001": 364, "2727368790656328": 364, "23702679807320237": 364, "19665591977536678": 364, "default_tim": 364, "autorang": [364, 476], "time_taken": 364, "wallclock": 364, "nsec": 364, "5000000": 364, "0877": 364, "41440500499993504": 364, "7246671520006203": 364, "3955516149999312": 364, "40183617287970225": 364, "37027556854118704": 364, "38344867356679524": 364, "3712595970846668": 364, "37866875250654886": 364, "9138244460009446": 364, "5829014980008651": 364, "04215312199994514": 364, "08588060699912603": 364, "stupid": 364, "chief": [365, 441], "virtu": [365, 418], "famou": 365, "vastli": 365, "woefulli": 366, "tkdoc": 366, "roseman": [366, 469, 479], "978": 366, "1999149567": 366, "alan": [366, 464, 465, 471, 477], "moor": [366, 461, 462, 465, 474, 475, 477], "1788835886": 366, "lutz": 366, "0596158101": 366, "ousterhout": 366, "jone": [366, 462, 464, 474, 475], "0321336330": 366, "xlib": 366, "cocoa": [366, 456, 472], "gdi": 366, "screennam": [366, 372], "usetk": 366, "argv0": 366, "winfo_id": 366, "winfo_par": 366, "loadtk": 366, "frm": 366, "grid": [366, 371, 373], "lbl": 366, "btn": [366, 373, 381], "winfo_x": 366, "winfo_height": 366, "winfo_view": 366, "winfo": 366, "reenter": 366, "idiosyncrat": 366, "relief": [366, 373], "groov": 366, "placer": 366, "qualit": 366, "183": 366, "parcel": [366, 373], "ipadx": 366, "ipadi": 366, "padx": 366, "padi": 366, "textvari": [366, 373], "onvalu": 366, "offvalu": 366, "stringvar": [366, 373], "intvar": 366, "doublevar": 366, "booleanvar": 366, "entrythingi": 366, "print_cont": 366, "wm": 366, "_root": 366, "compass": 366, "sw": 366, "nw": 366, "gray25": 366, "gray50": 366, "hourglass": 366, "questhead": 366, "contrib": 366, "gumbi": 366, "print_it": 366, "rrggbb": 366, "rrrgggbbb": 366, "rrrrggggbbbb": 366, "160": [366, 379, 381, 423], "cursorfont": 366, "xc_": 366, "xc_hand2": 366, "hand2": 366, "179": 366, "centimetr": 366, "millimetr": 366, "5i": 366, "widthxheight": 366, "200x100": 366, "3i": 366, "2i": 366, "4c": 366, "43c": 366, "sunken": 366, "ridg": 366, "scrollcommand": [366, 373], "3tk": 366, "turn_r": 366, "activeforeground": 366, "send_ev": 366, "keysym": 366, "keysym_num": 366, "x_root": 366, "y_root": 366, "entryconfig": 366, "bitmapimag": 366, "photoimag": [366, 373, 478], "pillow": [366, 447], "createfilehandl": 366, "deletefilehandl": 366, "maxbytecount": 366, "chooser": 367, "picker": 367, "askcolor": 367, "buttonpress": 368, "dnd_start": 368, "dnd_accept": 368, "old_target": 368, "dnd_leav": 368, "dnd_enter": 368, "dnd_commit": 368, "dnd_end": 368, "dndhandler": 368, "buttonreleas": 368, "on_mot": 368, "on_releas": 368, "slant": [369, 459], "emphasi": 369, "overstrik": 369, "strikeout": 369, "displayof": 369, "cget": [369, 373], "ascent": 369, "descent": 369, "linespac": 369, "nametofont": 369, "showinfo": 370, "showwarn": [370, 397, 465], "showerror": 370, "askquest": 370, "yesno": 370, "askokcancel": 370, "askretrycancel": 370, "askyesno": 370, "askyesnocancel": 370, "abortretryignor": 370, "okcancel": 370, "retrycancel": 370, "yesnocancel": 370, "vbar": [371, 374], "hlist": 372, "fileentri": 372, "panedwindow": [372, 373], "tixinspect": 372, "inspector": 372, "balloon": 372, "combo": [372, 373], "subwidget": 372, "labelentri": 372, "mega": 372, "labelfram": [372, 373], "optionmenu": 372, "popupmenu": 372, "tk_popup": 372, "stdbuttonbox": 372, "motif": 372, "dirlist": 372, "dirtre": 372, "dirselectdialog": 372, "dirselectbox": 372, "exfileselectbox": 372, "tixexfileselectdialog": 372, "fileselectbox": 372, "checklist": 372, "checkbutton": [372, 373], "tlist": 372, "listnotebook": 372, "tixnotebook": 372, "xpm": 372, "inputonli": 372, "tixcommand": 372, "tix_configur": 372, "cnf": [372, 457], "tix_cget": 372, "tix_getbitmap": 372, "tix_addbitmapdir": 372, "tix_getimag": 372, "tix_librari": 372, "tix_filedialog": 372, "dlgclass": 372, "fileselectdialog": 372, "monochrom": 372, "tix_option_get": 372, "tix_resetopt": 372, "newschem": 372, "newfontset": 372, "newscmprio": 372, "fontset": 372, "resetopt": 372, "tix_config": 372, "anti": [373, 381, 387], "menubutton": 373, "tile": [373, 381, 466], "monograph": 373, "bw": 373, "tlabel": 373, "ttkstyle": 373, "bindtag": 373, "viewabl": 373, "xscrollcommand": 373, "yscrollcommand": 373, "statespec": 373, "instat": 373, "inquir": [373, 475], "bbox": 373, "icursor": 373, "xview": 373, "exportselect": 373, "selection_get": 373, "postcommand": 373, "dropdown": 373, "comboboxselect": 373, "newindex": 373, "enable_travers": 373, "tab_id": 373, "notebooktabchang": 373, "unmanag": 373, "autoincr": 373, "recur": 373, "southeast": 373, "displaycolumn": 373, "yview": 373, "selectmod": 373, "treeviewselect": 373, "treeviewopen": 373, "treeviewclos": 373, "offscreen": 373, "set_children": 373, "newchildren": 373, "minwidth": 373, "imagenam": 373, "identify_row": 373, "identify_column": 373, "identify_region": 373, "identify_el": 373, "reattach": 373, "selection_set": [373, 478], "selection_add": 373, "selection_remov": 373, "selection_toggl": 373, "tag_bind": 373, "tag_configur": 373, "tag_ha": 373, "winfo_class": 373, "somewidget": 373, "query_opt": 373, "tbutton": 373, "colored_btn": 373, "layoutspec": 373, "tmenubutton": 373, "mbtn": 373, "element_cr": 373, "elementnam": 373, "etyp": [373, 378, 469], "imagespec": 373, "interior": [373, 381, 460, 461], "img1": 373, "img2": 373, "img3": 373, "themenam": 373, "element_nam": 373, "element_opt": 373, "theme_cr": 373, "theme_set": 373, "tcombobox": 373, "green2": 373, "green4": 373, "fieldbackground": 373, "green3": 373, "olivedrab1": 373, "olivedrab2": 373, "theme_nam": 373, "theme_us": 373, "themechang": 373, "caviti": 373, "whichsid": 373, "nswe": 373, "sublayout": 373, "tok_nam": 374, "istermin": 374, "isnontermin": 374, "iseof": 374, "endmark": [374, 375, 428], "lpar": [374, 375], "rpar": [374, 375], "lsqb": 374, "rsqb": 374, "amper": 374, "lbrace": 374, "rbrace": [374, 428], "eqequ": 374, "notequ": 374, "lessequ": 374, "greaterequ": 374, "leftshift": 374, "rightshift": 374, "doublestar": 374, "plusequ": 374, "minequ": 374, "starequ": 374, "slashequ": 374, "percentequ": 374, "amperequ": 374, "vbarequ": 374, "circumflexequ": 374, "leftshiftequ": 374, "rightshiftequ": 374, "doublestarequ": 374, "doubleslash": 374, "doubleslashequ": 374, "atequ": 374, "rarrow": 374, "colonequ": 374, "soft_keyword": [374, 428], "fstring_start": [374, 428, 471], "fstring_middl": [374, 428, 471], "fstring_end": [374, 428, 471], "errortoken": [374, 471], "n_token": 374, "nt_offset": 374, "exact_typ": 375, "srow": 375, "scol": 375, "erow": 375, "ecol": 375, "generate_token": [375, 467, 471], "untoken": 375, "tokenerror": [375, 471], "decistmt": 375, "3e": 375, "007": 375, "13th": 375, "21716034272e": 375, "217160342717258261933904529e": 375, "toknum": 375, "tokval": 375, "say_hello": 375, "tomli": 376, "kit": [376, 469], "tomldecodeerror": 376, "toml_str": 376, "listfunc": 377, "coverdir": 377, "trackcal": 377, "countfunc": 377, "countcal": 377, "ignoremod": 377, "ignoredir": 377, "runfunc": [377, 478], "coverageresult": 377, "write_result": 377, "show_miss": 377, "tracer": [377, 381, 465], "print_last": 378, "extract_tb": 378, "extract_stack": 378, "format_list": 378, "extracted_list": 378, "format_except": [378, 469], "format_exc": 378, "format_tb": [378, 379], "format_stack": 378, "clear_fram": [378, 474], "walk_stack": [378, 475], "walk_tb": [378, 475], "lookup_lin": 378, "capture_loc": 378, "max_group_width": 378, "max_group_depth": 378, "from_except": 378, "frame_gen": 378, "from_list": 378, "format_frame_summari": [378, 470], "frame_summari": 378, "run_user_cod": 378, "envdir": 378, "bright_side_of_lif": 378, "formatted_lin": 378, "another_funct": 378, "lumberstack": 378, "an_error": 378, "take_snapshot": 379, "top_stat": 379, "716": 379, "4855": 379, "39328": 379, "284": 379, "521": 379, "3199": 379, "167": 379, "368": 379, "244": 379, "2315": 379, "381": 379, "185": [379, 468], "243": [379, 460], "133": 379, "347": [379, 464], "262": 379, "1446": 379, "911": 379, "1454": 379, "2131": 379, "148": 379, "344": 379, "snapshot1": 379, "snapshot2": 379, "compare_to": 379, "8173": 379, "4428": 379, "71332": 379, "39369": 379, "117": [379, 460], "940": 379, "8106": 379, "571": 379, "298": 379, "589": [379, 383, 478], "1005": 379, "166": 379, "7423": 379, "1526": 379, "1334": 379, "848": 379, "1465": 379, "784": 379, "491": 379, "969": 379, "903": 379, "870": 379, "1036": 379, "934": 379, "1068": 379, "619": 379, "1581": 379, "1614": 379, "938": 379, "1728": 379, "test_pickletool": 379, "run_doctest": 379, "1276": 379, "test_runn": 379, "976": 379, "display_failur": 379, "761": 379, "match_test": 379, "1563": 379, "main_in_temp_cwd": 379, "run_glob": 379, "display_top": 379, "key_typ": 379, "filter_trac": 379, "419": [379, 468], "_b85chars2": 379, "_b85char": 379, "306": 379, "_a85chars2": 379, "_a85char": 379, "class_definit": 379, "testmethod": 379, "_hexdig": 379, "_weakrefset": 379, "142": [379, 439, 443], "_b32tab2": 379, "_b32tab": 379, "6220": 379, "3602": 379, "5303": 379, "get_traced_memori": 379, "reset_peak": [379, 479], "large_sum": 379, "first_siz": 379, "first_peak": 379, "small_sum": 379, "second_s": 379, "second_peak": 379, "664": 379, "3592984": 379, "804": 379, "29704": 379, "optimis": [379, 425], "clear_trac": 379, "get_object_traceback": 379, "get_traceback_limit": 379, "meaningfulli": 379, "get_tracemalloc_memori": 379, "is_trac": 379, "total_nfram": 379, "filename_pattern": 379, "all_fram": 379, "traceback_limit": [379, 404], "old_snapshot": 379, "size_diff": 379, "count_diff": 379, "most_recent_first": [379, 477], "cfmakeraw": 380, "cfmakecbreak": 380, "icanon": 380, "icrnl": 380, "stty": 380, "setcbreak": 380, "setraw": 380, "walli": 381, "feurzeig": 381, "seymour": 381, "papert": 381, "cynthia": 381, "solomon": 381, "intric": 381, "learner": 381, "classroom": 381, "clockwis": 381, "anew": [381, 429, 479], "clearscreen": 381, "fillcolor": 381, "begin_fil": 381, "end_fil": 381, "whom": [381, 423], "360": 381, "bgcolor": 381, "bk": 381, "setposit": 381, "teleport": 381, "seti": 381, "sethead": 381, "seth": 381, "clearstamp": 381, "xcor": 381, "ycor": 381, "pendown": 381, "pd": 381, "penup": 381, "pu": 381, "pensiz": 381, "isdown": 381, "pencolor": 381, "showturtl": 381, "hideturtl": 381, "isvis": 381, "resizemod": 381, "shapes": 381, "turtles": 381, "shearfactor": 381, "settiltangl": [381, 470, 471], "tiltangl": [381, 470], "tilt": 381, "shapetransform": 381, "get_shapepoli": 381, "onclick": 381, "onreleas": 381, "ondrag": 381, "begin_poli": 381, "end_poli": 381, "get_poli": 381, "getturtl": 381, "getpen": 381, "getscreen": 381, "setundobuff": 381, "undobufferentri": 381, "bgpic": 381, "resetscreen": 381, "screensiz": 381, "setworldcoordin": 381, "onkei": 381, "onkeyreleas": 381, "onkeypress": 381, "onscreenclick": 381, "ontim": 381, "colormod": 381, "getcanva": 381, "getshap": 381, "register_shap": 381, "addshap": 381, "window_height": 381, "window_width": 381, "textinput": 381, "numinput": 381, "exitonclick": 381, "337": 381, "vec2d": 381, "fill_gap": 381, "polygon": 381, "to_angl": 381, "inscrib": 381, "semicircl": 381, "colorstr": 381, "diamet": 381, "canva": [381, 465, 471, 478], "stamp_id": 381, "stampid": 381, "astamp": 381, "unused_stamp_id": 381, "undobuff": 381, "speedstr": 381, "speedvalu": 381, "440": 381, "27876": 381, "60254": 381, "fullcircl": 381, "grad": 381, "gon": 381, "gradian": 381, "5707963267948966": 381, "thick": 381, "turtleshap": 381, "pendict": 381, "nores": 381, "stretchfactor": 381, "penstat": 381, "33cc8c": 381, "brown": [381, 465], "5490196078431373": 381, "140": [381, 466], "32c18f": 381, "colorstring1": 381, "colorstring2": 381, "g2": 381, "285078": 381, "a0c8f0": 381, "fillstat": 381, "arial": 381, "fontnam": 381, "fontsiz": 381, "fonttyp": 381, "shapenam": 381, "rmode": 381, "outlinewidth": 381, "stretch_wid": 381, "stretch_len": 381, "perpendicular": 381, "shear": 381, "t11": 381, "t12": 381, "t21": 381, "t22": 381, "myturtl": 381, "glow": 381, "unglow": 381, "handdraw": 381, "myfavouriteshap": 381, "mick": [381, 459, 462, 464], "pet": 381, "_screen": 381, "addcompon": 381, "poly1": 381, "poly2": 381, "shapelist": 381, "myshap": 381, "800080": 381, "picnam": 381, "nopic": 381, "backgroundimag": 381, "landscap": [381, 465], "canvwidth": 381, "canvheight": 381, "canvaswidth": 381, "canvasheight": 381, "1500": 381, "llx": 381, "lly": 381, "urx": 381, "distort": 381, "octagon": 381, "acceler": [381, 459, 460, 464, 467, 473, 474], "xdummi": 381, "ydummi": 381, "nim": 381, "minval": 381, "maxval": 381, "stake": 381, "cmode": 381, "turtlegraphicserror": 381, "scrolledcanva": 381, "thusli": 381, "480": 381, "turtlegraph": 381, "using_idl": 381, "_cfg": 381, "startx": 381, "leftright": 381, "starti": 381, "topbottom": 381, "200x200": 381, "titlebar": 381, "zoo": [381, 424], "rawpen": 381, "playground": 381, "type_": 381, "poli": [381, 459], "tooltip": 381, "backgroundcolor": 381, "write_docstringdict": 381, "turtle_docstringdict": 381, "turtle_docstringdict_german": 381, "glingl": 381, "aon": 381, "undobuffers": 381, "exampleturtl": 381, "examplescreen": 381, "docstringdict": 381, "turtle_docstringdict_italian": 381, "bytedesign": 381, "sourcecod": 381, "chao": 381, "verhulst": 381, "colormix": 381, "forest": 381, "fractalcurv": 381, "hilbert": 381, "koch": 381, "lindenmay": 381, "ethnomathemat": 381, "indian": 381, "kolam": 381, "minimal_hanoi": 381, "hanoi": 381, "disc": 381, "nimstick": 381, "minimalist": 381, "peac": 381, "penros": 381, "aperiod": 381, "kite": 381, "dart": 381, "planet_and_moon": 381, "rosett": 381, "round_danc": 381, "danc": [381, 439], "sorting_anim": 381, "two_canvas": 381, "canvas": 381, "yinyang": 381, "tdemo_nim": 381, "tdemo_round_d": 381, "new_class": [382, 473], "exec_bodi": 382, "prepare_class": [382, 473], "__prepare__": [382, 386, 425, 474, 476], "resolve_bas": [382, 425, 477], "__mro_entries__": [382, 425, 477], "get_original_bas": [382, 425, 471], "__orig_bases__": [382, 471], "listiter": 382, "lambdatyp": 382, "generatortyp": 382, "coroutinetyp": [382, 475], "asyncgeneratortyp": 382, "celltyp": 382, "builtinfunctiontyp": 382, "builtinmethodtyp": 382, "wrapperdescriptortyp": [382, 477], "methoddescriptortyp": [382, 477], "classmethoddescriptortyp": [382, 477], "t_origin": 382, "t_arg": 382, "getsetdescriptortyp": 382, "memberdescriptortyp": 382, "dynamicclassattribut": [382, 470, 474], "gen_func": 382, "typing_extens": 383, "standardis": 383, "544": [383, 478], "runtime_check": [383, 469, 471, 478], "586": [383, 469, 478, 479], "591": [383, 478], "593": [383, 479], "typeguard": [383, 469], "notrequir": [383, 470], "literalstr": [383, 470], "dataclass_transform": [383, 470, 471], "new_vector": 383, "connectionopt": 383, "broadcast_messag": 383, "some_id": [383, 476], "524313": [383, 476], "get_user_nam": 383, "user_id": 383, "user_a": 383, "42351": 383, "user_b": 383, "23413": 383, "54341": 383, "some_valu": 383, "adminuserid": 383, "prouserid": 383, "get_next_item": 383, "async_queri": 383, "on_success": 383, "on_upd": 383, "batch_proc": 383, "cb_result": 383, "good_cb": 383, "bad_cb": 383, "maxitem": 383, "paramspecvari": 383, "returntyp": 383, "arg1typ": 383, "arg2typ": 383, "notify_by_email": 383, "prouser": 383, "teamus": 383, "make_new_us": 383, "user_class": 383, "new_non_team_us": 383, "basicus": 383, "loggedvar": 383, "zero_all_var": 383, "weirdtrio": 383, "oldt": 383, "contravari": 383, "oldb": 383, "oldweirdtrio": 383, "linkedlist": 383, "vec": [383, 439], "inproduct": 383, "type1": 383, "aesthet": 383, "legacy_pars": 383, "hatch": [383, 466], "hash_a": 383, "hash_b": 383, "typesaf": 383, "unpython": 383, "bucket": [383, 425], "unconstrain": 383, "anystr": 383, "greet_bad": 383, "greet_prop": 383, "run_queri": [383, 470], "arbitrary_str": [383, 470], "literal_str": 383, "never_call_m": 383, "int_or_str": 383, "noreturn": 383, "reveal_typ": [383, 470], "return_self": 383, "subclassoffoo": 383, "returns_egg": 383, "boxofstr": 383, "make_box_of_str": 383, "with_lock": 383, "my_lock": 383, "sum_threadsaf": 383, "validate_simpl": 383, "open_help": 383, "starship": [383, 464, 476], "enterprise_d": 383, "fastconnector": 383, "__metadata__": 383, "no_type_check": [383, 470], "valuerang": 383, "ann1": 383, "include_extra": [383, 479], "is_str": 383, "is_str_list": 383, "typea": 383, "typeb": 383, "kt": 383, "lookup_nam": 383, "infer_vari": 383, "strsequenc": 383, "strorbytessequ": 383, "print_capit": 383, "stringsubclass": 383, "print_ab": 383, "supportsab": 383, "__covariant__": 383, "__contravariant__": 383, "__infer_variance__": 383, "__bound__": [383, 424, 426], "__constraints__": [383, 424], "move_first_element_to_last": 383, "get_shap": 383, "happili": 383, "array2": 383, "float_array_1d": 383, "int_array_2d": 383, "yup": 383, "intfunc": [383, 471], "add_log": 383, "add_two": 383, "paramspecarg": [383, 469], "paramspeckwarg": [383, 469], "get_origin": [383, 478], "listorset": [383, 424], "notgener": 383, "__value__": [383, 426, 433], "_field_typ": [383, 478, 479], "first_us": 383, "__supertype__": 383, "genproto": 383, "poni": 383, "closabl": 383, "checkabl": [383, 471], "__total__": 383, "__required_keys__": 383, "__optional_keys__": 383, "supportsbyt": [383, 470], "supportscomplex": [383, 470], "supportsfloat": 383, "supportsindex": [383, 478], "supportsround": 383, "assert_typ": [383, 470], "complex_funct": 383, "assert_nev": [383, 470], "eq_default": 383, "order_default": 383, "kw_only_default": 383, "frozen_default": [383, 471], "field_specifi": 383, "create_model": [383, 470], "customermodel": [383, 470], "modelbas": 383, "modelmeta": 383, "__dataclass_transform__": 383, "meanwhil": 383, "get_overload": [383, 470], "clear_overload": [383, 470], "__final__": [383, 470], "no_type_check_decor": 383, "log_statu": 383, "__override__": 383, "type_check_onli": 383, "fetch_respons": 383, "globaln": 383, "localn": 383, "unsubscript": 383, "get_arg": [383, 469, 470, 478, 479], "is_typeddict": [383, 469], "forwardref": 383, "expensive_mod": 383, "sometyp": [383, 475], "local_var": 383, "anothertyp": 383, "other_fun": 383, "count_word": 383, "keep_posit": 383, "abstractset": 383, "t_co": 383, "ct_co": 383, "add_unicode_checkmark": 383, "u2713": 383, "kt_co": 383, "vt_co": 383, "get_position_in_index": 383, "word_list": 383, "_vt_co": 383, "yieldtyp": 383, "sendtyp": 383, "echo_round": 383, "contravariantli": 383, "infinite_stream": 383, "covariantli": 383, "invariantli": 383, "38291": [383, 469], "undecid": 383, "91896": [383, 471], "92332": [383, 470, 471], "94309": [383, 471], "ucd": [384, 432, 473, 474], "east_asian_width": 384, "unistr": [384, 459], "00c7": [384, 427], "cedilla": [384, 427], "0043": [384, 427], "0327": [384, 427], "2160": 384, "0049": 384, "kd": 384, "kc": 384, "unidata_vers": 384, "ucd_3_2_0": [384, 464], "solidu": 384, "etter": 384, "ppercas": 384, "u0660": [384, 459], "rabic": 384, "umber": 384, "namealias": [384, 432], "namedsequ": 384, "junit": [385, 460], "taxonomi": 385, "unittestgui": 385, "appveyor": 385, "teststringmethod": 385, "test_upp": 385, "test_isupp": 385, "test_split": 385, "crux": 385, "test_module1": 385, "test_module2": 385, "test_modul": [385, 387], "testclass": 385, "test_method": 385, "test_someth": [385, 386, 387, 477], "failfast": [385, 466], "foo_test": [385, 477], "sometest": [385, 477], "bar_test": [385, 477], "test_foo": [385, 387, 477], "footest": [385, 477], "project_directori": 385, "_test": [385, 472], "proj": 385, "test_mypkg": 385, "functiontestcas": 385, "defaultwidgetsizetestcas": 385, "test_default_widget_s": 385, "widgettestcas": 385, "test_widget_res": 385, "texttestrunn": 385, "test_widget": 385, "testsometh": 385, "makesometh": 385, "makesomethingdb": 385, "deletesomethingdb": 385, "mytestcas": 385, "test_noth": 385, "test_format": 385, "skipunless": [385, 468], "test_windows_support": 385, "test_maybe_skip": 385, "external_resource_avail": 385, "005": 385, "myskippedtestcas": 385, "test_not_run": 385, "expectedfailuretestcas": 385, "test_fail": 385, "skipunlesshasattr": 385, "numberstest": [385, 474], "test_even": [385, 474], "defaulttestresult": 385, "asserti": [385, 387, 466], "assertisnot": [385, 466], "assertisnon": [385, 466, 468], "assertisnotnon": [385, 466, 468], "assertin": [385, 466], "assertnotin": [385, 466], "assertisinst": [385, 466], "assertnotisinst": [385, 466], "assertraisesregex": [385, 470, 471, 473], "assertwarn": [385, 472, 473], "assertwarnsregex": [385, 472, 473], "addtypeequalityfunc": [385, 466], "assertmultilineequ": [385, 466], "assertlog": [385, 469, 474], "assertnolog": [385, 469], "the_except": 385, "error_cod": 385, "assertraisesregexp": [385, 466, 468, 470, 471], "somewarn": 385, "legacy_funct": [385, 472], "frobnic": [385, 399], "assertgreat": [385, 466], "assertgreaterequ": [385, 466], "assertless": [385, 466], "assertlessequ": [385, 466], "assertregex": [385, 470, 471, 472], "assertnotregex": [385, 470, 471], "assertcountequ": [385, 472], "assertregexpmatch": [385, 466, 470, 471, 472], "assertsequenceequ": [385, 466, 468], "assertlistequ": [385, 466, 468], "asserttupleequ": [385, 466, 468], "assertsetequ": [385, 466, 468], "assertdictequ": [385, 466, 468], "seq_typ": 385, "assertxyi": 385, "maxdiff": [385, 472], "counttestcas": 385, "shortdescript": 385, "texttestresult": [385, 471], "addcleanup": [385, 386, 387, 466, 478], "entercontext": [385, 470], "docleanup": [385, 466], "addclasscleanup": [385, 478], "enterclasscontext": [385, 470], "doclasscleanup": 385, "isolatedasynciotestcas": [385, 470, 478], "asyncsetup": [385, 478], "asyncteardown": [385, 478], "addasynccleanup": 385, "enterasynccontext": [385, 470], "_async_connect": 385, "asyncconnect": [385, 478], "test_respons": 385, "status_cod": [385, 478], "on_cleanup": 385, "testfunc": 385, "_removetestatindex": [385, 474], "testrunn": 385, "defaulttestload": 385, "synthet": [385, 471], "loadtestsfromtestcas": [385, 470], "testcaseclass": 385, "gettestcasenam": [385, 470, 471], "unoffici": [385, 475], "use_load_test": [385, 471, 475], "loadtestsfromnam": [385, 466], "sampletest": 385, "sampletestcas": 385, "test_on": [385, 387], "test_two": [385, 387], "test_thre": 385, "start_dir": 385, "top_level_dir": 385, "testmethodprefix": 385, "loadtestsfrom": 385, "sorttestmethodsus": 385, "suiteclass": [385, 466], "testnamepattern": 385, "unexpectedsuccess": 385, "collecteddur": 385, "shouldstop": 385, "testsrun": 385, "starttest": 385, "stoptest": 385, "tb_local": 385, "wassuccess": 385, "starttestrun": [385, 466], "stoptestrun": [385, 466], "adderror": 385, "formatted_err": 385, "addfailur": 385, "addsuccess": 385, "addskip": 385, "addexpectedfailur": 385, "addunexpectedsuccess": 385, "addsubtest": 385, "adddur": 385, "resultclass": 385, "wd": [385, 397, 464, 466, 474, 476], "_makeresult": 385, "defaulttest": [385, 474], "catchbreak": 385, "testprogram": [385, 470, 471], "testcase1": 385, "testcase2": 385, "testcase3": 385, "test_class": 385, "this_dir": 385, "package_test": 385, "basetestsuit": 385, "_errorhold": 385, "_connect": [385, 416], "createexpensiveconnectionobject": 385, "createconnect": 385, "closeconnect": 385, "addmodulecleanup": [385, 478], "entermodulecontext": [385, 470], "domodulecleanup": 385, "installhandl": 385, "registerresult": 385, "removeresult": 385, "test_signal_handl": 385, "replai": 386, "productionclass": [386, 387], "assert_called_with": [386, 387], "classname2": [386, 387], "classname1": [386, 387], "mockclass1": [386, 387], "mockclass2": [386, 387], "mock_method": [386, 387], "assert_called_once_with": [386, 387], "newkei": [386, 387], "newvalu": [386, 387], "foobarbaz": 386, "wheeeeee": 386, "specc": [386, 387], "autospec": [386, 387], "mock_funct": 386, "fishi": 386, "noncallablemock": 386, "noncallablemagicmock": 386, "new_cal": 386, "spec_set": [386, 387], "assret": 386, "asert": 386, "aseert": 386, "assrt": 386, "configure_mock": [386, 387], "assert_cal": [386, 476], "assert_called_onc": [386, 476], "wow": 386, "assert_any_cal": 386, "assert_has_cal": [386, 387], "any_ord": [386, 387], "mock_cal": [386, 387], "assert_not_cal": [386, 475], "reset_mock": [386, 476], "mock_add_spec": 386, "attach_mock": [386, 387], "method_cal": [386, 387], "some_mock": 386, "_get_child_mock": [386, 387], "call_count": [386, 387], "call_arg": [386, 387], "w00t": 386, "call_args_list": [386, 387], "140161580456576": [386, 387], "propertymock": 386, "mock_foo": [386, 387], "mockiti": 386, "this_foo": 386, "asyncmock": [386, 387, 478], "async_func": 386, "asyncmockmixin": 386, "_mock_cal": 386, "exampleclass": 386, "sync_foo": 386, "async_foo": 386, "a_mock": 386, "assert_await": 386, "coroutine_mock": 386, "assert_awaited_onc": [386, 387], "assert_awaited_with": 386, "assert_awaited_once_with": 386, "assert_any_await": 386, "assert_has_await": 386, "await_args_list": 386, "assert_not_await": 386, "await_count": 386, "await_arg": 386, "bang": 386, "not_a_child": 386, "thing1": 386, "thing2": 386, "normal_argu": 386, "mock_class": 386, "mockclass": 386, "mock_th": 386, "mock_stdout": 386, "non_existing_attribut": 386, "honour": 386, "class_method": 386, "in_dict": 386, "testsampl": 386, "test_sampl": 386, "patched_foo": 386, "first_patch": 386, "second_patch": 386, "test_funct": 386, "mock_exit": 386, "new_mock": [386, 387], "mytest": [386, 387], "patcher1": 386, "patcher2": 386, "fiddlier": [386, 387], "bonu": [386, 460], "stopal": 386, "mock_ord": 386, "foo_on": 386, "foo_two": 386, "static_method": [386, 387], "mock1": 386, "mock2": 386, "foobl": [386, 387], "__getinitargs__": 386, "__getformat__": 386, "call_list": [386, 387], "kall": [386, 463], "abstracthttphandl": [386, 476], "_noncallablemock__get_return_valu": 386, "_noncallablemock__get_side_effect": 386, "_noncallablemock__return_value_doc": 386, "_noncallablemock__set_return_valu": 386, "_noncallablemock__set_side_effect": 386, "my_mock": 386, "irrespect": 386, "read_data": [386, 387, 443], "deplet": 386, "rewound": 386, "fiddli": 386, "bibbl": 386, "assret_called_once_with": 386, "dandi": 386, "assret_called_with": 386, "has_data": [386, 392, 474], "mock_request": 386, "thankfulli": 386, "somethingfortest": 386, "submock": 386, "attribute1": 386, "not_submock": 386, "sample_nam": 386, "new_attribut": 386, "attribute2": 386, "mock_inst": 387, "some_method": [387, 416], "old_method": 387, "data_dict": 387, "open_side_effect": 387, "file3": 387, "file_handl": 387, "testabl": 387, "backendprovid": 387, "get_endpoint": 387, "create_cal": 387, "start_cal": 387, "mock_backend": 387, "mock_respons": 387, "mock_dat": 387, "mocksomeclass": 387, "not_a_test": 387, "whilst": 387, "nuisanc": 387, "grob": 387, "mock_frob": 387, "copy_call_arg": 387, "copyingmock": 387, "mock_bar": 387, "mock_spam": 387, "create_patch": 387, "my_dict": 387, "mymock": 387, "has_been_cal": 387, "adaptor": 387, "blip": 387, "expected_cal": 387, "fifti": [387, 423], "some_obj": 387, "match_foo": 387, "match_wrong": 387, "pyhamcrest": 387, "hamcrest": 387, "match_equ": 387, "contenttooshorterror": [390, 392], "urlretriev": [390, 392, 396], "gopher": 391, "hdl": [391, 423], "mailto": [391, 423], "prospero": 391, "rsync": 391, "rtsp": 391, "rtspu": 391, "sftp": 391, "shttp": 391, "snew": 391, "urlpars": [391, 396, 465, 466, 467, 472, 476], "urlstr": 391, "allow_frag": 391, "netloc": [391, 466, 472], "parseresult": [391, 466, 472], "1808": [391, 475], "7eguido": 391, "max_num_field": 391, "doseq": 391, "urlunpars": 391, "2396": [391, 466, 475, 477], "c0": 391, "urlunsplit": 391, "urljoin": [391, 475], "urldefrag": [391, 472], "defens": 391, "improperli": [391, 425, 459, 474], "splitresult": 391, "defragresult": [391, 472], "defragresultbyt": 391, "parseresultbyt": [391, 472], "splitresultbyt": 391, "unreserv": 391, "quote_from_byt": 391, "ni\u00f1o": 391, "20ni": 391, "b1o": 391, "quote_plu": [391, 472], "2fel": 391, "unquote_plu": 391, "unquote_to_byt": 391, "quote_via": [391, 475], "std66": 391, "2732": [391, 466, 472], "urn": [391, 395], "2368": 391, "1738": 391, "no_proxi": 392, "cadefault": 392, "addinfourl": 392, "fancyurlopen": 392, "_proxi": 392, "handler_ord": 392, "pathname2url": 392, "url2pathnam": 392, "spoof": 392, "firefox": [392, 400, 464, 471], "i686": 392, "gecko": 392, "20071127": 392, "camel": [392, 465, 472], "request_host": 392, "cern": 392, "ncsa": 392, "uiuc": 392, "is_authent": 392, "basicauth": 392, "passwd_mgr": 392, "update_authent": 392, "40x": 392, "unredirect": 392, "remove_head": [392, 474], "set_proxi": [392, 416, 474], "header_valu": 392, "get_host": [392, 474], "get_selector": [392, 474], "is_unverifi": [392, 474], "http_respons": 392, "http_error_404": 392, "_open": 392, "http_error_": 392, "_error": 392, "_request": 392, "_respons": 392, "default_open": 392, "unknown_open": 392, "add_par": 392, "adopt": [392, 429, 438, 460, 461, 462, 465, 479], "http_error_default": 392, "redirect_request": 392, "newurl": 392, "http_error_30": 392, "http_error_301": 392, "http_error_302": 392, "http_error_303": 392, "http_error_307": 392, "http_error_308": 392, "find_user_password": 392, "authuri": 392, "http_error_auth_req": 392, "authreq": 392, "http_error_401": 392, "http_error_407": 392, "http_open": 392, "https_open": 392, "file_open": 392, "data_open": 392, "2397": 392, "ftp_open": 392, "setmaxconn": 392, "https_respons": 392, "equiv": 392, "xhtm": 392, "ngot": 392, "auth_handl": 392, "pdq": 392, "mahler": 392, "8092": 392, "klem": 392, "kadidd": 392, "ehopp": 392, "proxy_handl": 392, "3128": 392, "proxy_auth_handl": 392, "addhead": 392, "musi": [392, 393], "requestb": 392, "xrbl82xr": 392, "reporthook": 392, "local_filenam": 392, "urlcleanup": 392, "open_unknown": 392, "30x": [392, 473], "maxtri": 392, "prompt_user_passwd": 392, "550": 392, "_urlopen": 392, "robotfilepars": [393, 476], "robotstxt": 393, "set_url": 393, "can_fetch": 393, "userag": 393, "spider": [393, 459], "crawl_delai": 393, "crawl": [393, 476], "request_r": 393, "requestr": 393, "site_map": 393, "sitemap": 393, "rp": 393, "rrate": 393, "lanc": [394, 423], "ellinghous": [394, 423], "jansen": [394, 423, 461, 462, 475], "in_fil": 394, "out_fil": [394, 410], "badli": [394, 474], "uuid1": [395, 464, 477], "uuid3": [395, 464], "uuid4": [395, 464], "uuid5": [395, 464], "is_saf": [395, 477], "relai": [395, 477], "safeuuid": 395, "bytes_l": 395, "time_low": 395, "time_mid": 395, "time_hi_vers": 395, "clock_seq_hi_vari": 395, "clock_seq_low": 395, "12345678": 395, "567812345678": 395, "12345678123456781234567812345678": 395, "x34": 395, "x56": [395, 459], "x78": 395, "0x12345678": 395, "0x1234": 395, "0x5678": 395, "0x12": 395, "0x34": 395, "0x567812345678": 395, "0x12345678123456781234567812345678": 395, "clock_seq": 395, "reserved_nc": 395, "rfc_4122": 395, "reserved_microsoft": 395, "reserved_futur": 395, "getnod": [395, 477], "administ": [395, 459, 465, 477], "namespace_dn": [395, 464], "namespace_url": 395, "namespace_oid": 395, "namespace_x500": 395, "nc": 395, "x500": 395, "a8098c1a": [395, 464], "f86e": [395, 464], "11da": [395, 464], "bd1a": [395, 464], "00112444be1e": [395, 464], "6fa459ea": [395, 464], "ee8a": [395, 464], "3ca4": [395, 464], "894e": [395, 464], "db77e160355": [395, 464], "16fd2706": [395, 464], "8baf": [395, 464], "433b": [395, 464], "82eb": [395, 464], "8c7fada847da": [395, 464], "886313e1": [395, 464], "3b8a": [395, 464], "5372": [395, 464], "9b90": [395, 464], "0c9aee199e5d": [395, 464], "00010203": 395, "0405": 395, "0607": 395, "0809": 395, "0a0b0c0d0e0f": 395, "x05": 395, "x0e": 395, "x0f": 395, "movabl": 396, "copyabl": 396, "python35": [396, 450], "myenv": 396, "dep": 396, "env_dir": 396, "powershel": [396, 458, 478], "executionpolici": 396, "remotesign": 396, "currentus": 396, "zsh": 396, "csh": [396, 450, 474], "tcsh": [396, 463], "virtual_env": [396, 475], "system_site_packag": 396, "with_pip": [396, 474], "upgrade_dep": 396, "builder": [396, 407, 408, 410], "ensure_directori": 396, "create_configur": 396, "setup_python": 396, "setup_script": 396, "post_setup": 396, "holder": [396, 423, 438, 466], "__venv_dir__": 396, "install_script": 396, "env_nam": 396, "__venv_name__": [396, 479], "__venv_prompt__": [396, 479], "inc_path": 396, "lib_path": 396, "bin_path": 396, "bin_nam": 396, "__venv_bin_name__": 396, "env_ex": 396, "__venv_python__": 396, "env_exec_cmd": 396, "upgrade_depend": 396, "redirector": [396, 477], "extendedenvbuild": 396, "easy_instal": [396, 471], "nodist": 396, "nopip": 396, "install_setuptool": 396, "install_pip": 396, "binpath": 396, "distpath": 396, "ez_setup": 396, "system_sit": 396, "use_symlink": 396, "warrant": [397, 467], "filterwarn": [397, 452, 460, 462], "resetwarn": [397, 472], "user_n": 397, "fxn": 397, "skip_file_prefix": 397, "deprecated_api": 397, "_warn_skip": 397, "one_wai": 397, "r_luxury_yacht": 397, "t_wobbler_mangrov": 397, "another_wai": 397, "__warningregistry__": 397, "wave_format_extens": 398, "ksdataformat_subtype_pcm": 398, "__callback__": [399, 474], "callableproxytyp": 399, "getweakrefcount": 399, "getweakref": 399, "keyref": [399, 464], "valueref": [399, 464], "0x7fc859830220": 399, "referencetyp": 399, "do_something_us": 399, "extendedref": 399, "__counter": 399, "_id2obj_dict": 399, "id2obj": 399, "kenni": [399, 474], "newobj": 399, "_final": 399, "unloading_modul": 399, "autorais": [400, 464], "open_new": [400, 464], "open_new_tab": [400, 464], "epiphani": 400, "kfmclient": 400, "konqueror": [400, 464], "kfm": 400, "genericbrows": 400, "elink": [400, 464], "w3m": 400, "windowsdefault": 400, "macosxosascript": 400, "safari": 400, "chrome": [400, 473], "chromium": [400, 473], "kde": 400, "kdedir": 400, "mosaic": [400, 471], "galeon": [400, 471], "skipston": [400, 471], "iceap": [400, 471], "closekei": 402, "hkei": 402, "computernam": 402, "createkeyex": [402, 466], "key_writ": 402, "subkei": [402, 458], "deletekeyex": [402, 466], "key_wow64_64kei": 402, "wow64": 402, "setvalueex": 402, "reg_expand_sz": 402, "windir": 402, "flushkei": 402, "flusher": 402, "hkey_us": 402, "se_restore_privileg": 402, "regloadkei": 402, "key_read": 402, "openkeyex": 402, "1601": 402, "queryvalueex": 402, "sebackupprivileg": 402, "security_attribut": 402, "reg_sz": 402, "key_set_valu": 402, "hkey_classes_root": 402, "subordin": [402, 466], "hkey_performance_data": 402, "hkey_current_config": 402, "hkey_dyn_data": 402, "key_all_access": 402, "standard_rights_requir": 402, "key_query_valu": 402, "key_create_sub_kei": 402, "key_enumerate_sub_kei": 402, "key_notifi": 402, "key_create_link": 402, "standard_rights_writ": 402, "standard_rights_read": 402, "key_execut": 402, "key_wow64_32kei": 402, "reg_binari": 402, "reg_dword": 402, "reg_dword_little_endian": 402, "reg_dword_big_endian": 402, "reg_link": 402, "reg_multi_sz": 402, "reg_non": 402, "reg_qword": [402, 476], "reg_qword_little_endian": 402, "reg_resource_list": 402, "reg_full_resource_descriptor": 402, "reg_resource_requirements_list": 402, "speaker": 403, "playsound": [403, 476], "messagebeep": [403, 476], "mb_ok": 403, "mb_iconasterisk": 403, "mb_iconexclam": 403, "mb_iconhand": 403, "mb_iconquest": 403, "snd_filenam": 403, "snd_alia": 403, "snd_nodefault": 403, "systemasterisk": 403, "systemexclam": 403, "systemhand": 403, "systemquest": 403, "snd_loop": 403, "snd_async": 403, "snd_memori": 403, "snd_purg": 403, "snd_nostop": 403, "snd_nowait": 403, "systemdefault": 403, "wsgienviron": 404, "guess_schem": 404, "url_schem": 404, "fastcgi": 404, "request_uri": 404, "include_queri": 404, "application_uri": 404, "path_info": 404, "query_str": [404, 470], "shift_path_info": 404, "setup_testing_default": 404, "http_host": 404, "make_serv": [404, 464], "simple_app": 404, "start_respons": [404, 472], "ret": 404, "is_hop_by_hop": 404, "hop": 404, "filewrapp": [404, 470, 478], "filelik": 404, "wsgiserv": 404, "wsgirequesthandl": 404, "demo_app": 404, "set_app": 404, "get_app": 404, "get_environ": 404, "base_environ": 404, "get_stderr": 404, "middlewar": 404, "nonconform": 404, "validator_app": 404, "cgihandl": 404, "basecgihandl": 404, "run_onc": 404, "iiscgihandl": 404, "allowpathinfo": 404, "metabas": 404, "allowpathinfoforscriptmap": 404, "path_transl": 404, "vhost": 404, "iis7": 404, "simplehandl": [404, 459], "scgi": 404, "get_stdin": 404, "add_cgi_var": 404, "_write": 404, "_flush": 404, "inputstream": 404, "errorstream": 404, "wsgi_multithread": 404, "wsgi_multiprocess": 404, "wsgi_run_onc": 404, "os_environ": 404, "server_softwar": 404, "origin_serv": 404, "get_schem": 404, "setup_environ": 404, "wsgi_file_wrapp": 404, "log_except": 404, "retarget": 404, "error_output": 404, "error_statu": 404, "error_head": 404, "error_bodi": 404, "spit": 404, "file_wrapp": 404, "http_version": 404, "read_environ": [404, 472], "startrespons": 404, "wsgiapplic": 404, "hello_world_app": 404, "mime_typ": 404, "1014": 405, "microsystem": [405, 423], "1832": 405, "pack_typ": 405, "pack_uint": 405, "pack_int": 405, "pack_enum": 405, "pack_bool": 405, "pack_uhyp": 405, "pack_hyp": 405, "pack_float": 405, "pack_doubl": 405, "pack_fstr": 405, "pack_fopaqu": 405, "pack_str": 405, "pack_opaqu": 405, "pack_byt": 405, "pack_list": 405, "pack_item": 405, "pack_farrai": 405, "pack_arrai": 405, "get_posit": 405, "set_posit": 405, "unpack_typ": 405, "unpack_float": 405, "unpack_doubl": 405, "unpack_fstr": 405, "unpack_fopaqu": 405, "unpack_str": 405, "unpack_opaqu": 405, "unpack_byt": 405, "unpack_list": 405, "unpack_item": 405, "unpack_farrai": 405, "unpack_arrai": 405, "conversionerror": 405, "billion": 406, "laugh": [406, 473], "blowup": 406, "bomb": [406, 419], "relianc": 406, "expat_vers": 406, "parseerror": [406, 410, 466, 472], "unexpand": 406, "countermeasur": 406, "luck": 407, "getdomimplement": [407, 408], "omg": [407, 408], "registerdomimplement": 407, "python_dom": 407, "hasfeatur": 407, "empty_namespac": 407, "namespaceuri": [407, 413], "xml_namespac": 407, "xmlns_namespac": 407, "xhtml_namespac": 407, "nodetyp": [407, 408], "createdocu": [407, 408], "qualifiednam": 407, "createdocumenttyp": 407, "element_nod": 407, "attribute_nod": 407, "text_nod": [407, 408], "cdata_section_nod": 407, "entity_nod": 407, "processing_instruction_nod": [407, 408], "comment_nod": 407, "document_nod": 407, "document_type_nod": 407, "notation_nod": 407, "parentnod": 407, "previouss": 407, "nextsibl": 407, "childnod": [407, 408, 459], "firstchild": 407, "lastchild": 407, "localnam": [407, 412, 413], "nodevalu": 407, "hasattribut": 407, "haschildnod": 407, "issamenod": 407, "uncontroversi": 407, "appendchild": [407, 408, 459], "newchild": 407, "insertbefor": [407, 459], "refchild": 407, "removechild": [407, 459], "oldchild": 407, "replacechild": 407, "clonenod": 407, "getelementsbytagnam": [407, 408, 459], "getelementsbytagnamen": 407, "internalsubset": 407, "documentel": [407, 408, 459], "createel": 407, "createelementn": 407, "createtextnod": [407, 408], "createcom": 407, "createprocessinginstruct": 407, "createattribut": 407, "setattributenod": 407, "createattributen": 407, "hasattributen": 407, "getattribut": [407, 409, 425], "getattributenod": 407, "getattributen": 407, "getattributenoden": 407, "removeattribut": 407, "notfounderr": 407, "removeattributenod": 407, "oldattr": 407, "removeattributen": 407, "setattribut": 407, "newattr": [407, 461], "inuseattributeerr": 407, "setattributenoden": 407, "setattributen": 407, "domexcept": [407, 408], "domstringsizeerr": 407, "hierarchyrequesterr": 407, "indexsizeerr": 407, "invalidaccesserr": 407, "invalidcharactererr": 407, "invalidmodificationerr": 407, "invalidstateerr": 407, "namespaceerr": 407, "removenameditem": 407, "notsupportederr": 407, "nodataallowederr": 407, "nomodificationallowederr": 407, "syntaxerr": 407, "wrongdocumenterr": 407, "domstring_size_err": 407, "hierarchy_request_err": 407, "index_size_err": 407, "inuse_attribute_err": 407, "invalid_access_err": 407, "invalid_character_err": 407, "invalid_modification_err": 407, "invalid_state_err": 407, "namespace_err": 407, "not_found_err": 407, "not_supported_err": 407, "no_data_allowed_err": 407, "no_modification_allowed_err": 407, "syntax_err": 407, "wrong_document_err": 407, "domstr": [407, 408], "somevalu": 407, "anothervalu": 407, "_get_somevalu": 407, "_get_anothervalu": 407, "_set_anothervalu": 407, "corba": 407, "profici": 408, "dom1": 408, "datasourc": 408, "dom2": 408, "dom3": 408, "myxml": 408, "filename_or_fil": 408, "grasp": 408, "impl": 408, "newdoc": 408, "some_tag": 408, "top_el": 408, "writexml": [408, 478], "addind": 408, "newl": 408, "subnod": 408, "prologu": 408, "toxml": [408, 409, 459, 462, 478], "toprettyxml": [408, 462, 478], "slideshow": 408, "handleslideshow": 408, "handleslideshowtitl": 408, "handletoc": 408, "handleslid": 408, "handleslidetitl": 408, "handlepoint": 408, "_get_foo": 408, "_set_foo": 408, "domtimestamp": 408, "entityrefer": 408, "make_pars": [409, 411, 413, 459], "feature_external_g": [409, 411, 412], "setfeatur": [409, 411, 413], "sales_item": 409, "expandnod": 409, "start_docu": 409, "end_docu": 409, "processing_instruct": 409, "ignorable_whitespac": 409, "documentfactori": 409, "sax2dom": 409, "stream_or_str": 409, "default_bufs": 409, "getev": 409, "celementtre": [410, 464, 472, 473], "liechtenstein": 410, "gdppc": 410, "141100": 410, "austria": 410, "switzerland": 410, "singapor": 410, "59900": 410, "malaysia": 410, "panama": 410, "13600": 410, "costa": 410, "rica": 410, "colombia": 410, "country_data": 410, "getroot": [410, 464], "country_data_as_str": 410, "attrib": [410, 464], "read_ev": 410, "mytag": 410, "sometext": 410, "0x7fa66db2be58": 410, "iterpars": [410, 474], "new_rank": 410, "subel": [410, 472], "sometag": 410, "fiction": 410, "actor": [410, 438, 478], "lancelot": [410, 439], "archi": 410, "leach": 410, "sir": [410, 438, 468, 478], "gunther": 410, "clement": [410, 476], "xml_text": 410, "real_person": 410, "countrydata": 410, "dublin": 410, "purl": 410, "grandchildren": 410, "canonic": [410, 478], "xml_data": 410, "from_fil": [410, 419, 422, 476], "normalis": 410, "c14n_output": 410, "inputfil": 410, "with_com": 410, "strip_text": 410, "rewrite_prefix": 410, "qname_aware_tag": 410, "qname_aware_attr": 410, "exclude_attr": 410, "exclude_tag": 410, "fromstringlist": [410, 472], "isel": 410, "register_namespac": [410, 466, 472], "xml_declar": [410, 466], "default_namespac": [410, 466], "short_empty_el": [410, 414, 474], "tostringlist": [410, 472, 474], "xmlid": 410, "elementinclud": [410, 464], "xi": 410, "xpointer": 410, "para": 410, "default_load": 410, "base_url": 410, "max_depth": 410, "itertext": [410, 466, 472], "unprefix": 410, "findtext": 410, "iterfind": [410, 472], "makeel": 410, "convei": 410, "perceptu": 410, "reorder_attribut": 410, "_setroot": 410, "0xb77e6fac": 410, "0xb77ec26c": 410, "0xb77ec2ac": 410, "0xb77ec1cc": 410, "text_or_uri": 410, "element_factori": 410, "comment_factori": 410, "pi_factori": 410, "insert_com": 410, "insert_pi": 410, "pubid": 410, "start_n": [410, 478], "end_n": [410, 478], "c14nwritertarget": 410, "attrs_dict": 410, "maxdepth": 410, "examplexml": 410, "parser_list": 411, "create_pars": [411, 413], "filename_or_stream": 411, "saxparseexcept": [411, 412], "saxnotrecognizedexcept": [411, 413], "saxnotsupportedexcept": [411, 413], "focal": 411, "getexcept": 411, "feature_namespac": 412, "feature_namespace_prefix": 412, "feature_string_intern": 412, "feature_valid": 412, "feature_external_p": 412, "all_featur": 412, "property_lexical_handl": 412, "property_declaration_handl": 412, "sax2lib": 412, "declhandl": 412, "property_dom_nod": 412, "property_xml_str": 412, "all_properti": 412, "setdocumentloc": 412, "documenthandl": [412, 413], "startdocu": 412, "enddocu": 412, "unrecover": 412, "startprefixmap": 412, "endprefixmap": 412, "startel": [412, 413, 459], "endel": [412, 459], "startelementn": [412, 413], "endelementn": 412, "ignorablewhitespac": 412, "skippedent": 412, "notationdecl": 412, "unparsedentitydecl": 412, "resolveent": [412, 413], "fatalerror": 412, "startdtd": [412, 463], "public_id": 412, "system_id": [412, 413], "enddtd": 412, "startcdata": 412, "endcdata": 412, "attributesimpl": 413, "attributesnsimpl": 413, "getcontenthandl": 413, "setcontenthandl": [413, 459], "getdtdhandl": 413, "setdtdhandl": 413, "getentityresolv": 413, "setentityresolv": 413, "geterrorhandl": 413, "seterrorhandl": 413, "getfeatur": 413, "propertynam": 413, "formed": 413, "getcolumnnumb": 413, "getlinenumb": 413, "getpublicid": 413, "getsystemid": 413, "setpublicid": 413, "setsystemid": 413, "setencod": 413, "setbytestream": 413, "bytefil": 413, "getbytestream": 413, "setcharacterstream": 413, "charfil": 413, "getcharacterstream": 413, "getlength": 413, "gettyp": [413, 464], "getvaluebyqnam": 413, "getnamebyqnam": 413, "getqnamebynam": 413, "getqnam": 413, "amp": [414, 472], "quoteattr": 414, "xmlgener": 414, "xmlfilterbas": 414, "prepare_input_sourc": 414, "use_datetim": [416, 464], "use_builtin_typ": [416, 417, 479], "safetransport": 416, "ontosi": 416, "i4": 416, "i8": [416, 465], "biginteg": 416, "2147483648": 416, "2147483647": [416, 432, 464], "nil": [416, 462], "bigdecim": 416, "listmethod": [416, 417], "methodsignatur": [416, 417], "methodhelp": [416, 417], "register_funct": [416, 417, 477], "python_logo": 416, "fetched_python_logo": 416, "faultcod": 416, "faultstr": 416, "errmsg": 416, "boxcar": 416, "register_multicall_funct": [416, 417], "methodrespons": 416, "betti": 416, "userland": 416, "getstatenam": 416, "proxiedtransport": 416, "proxy_head": 416, "requesthandl": 417, "simplexmlrpcrequesthandl": [417, 463, 466], "logrequest": 417, "register_inst": 417, "allow_dotted_nam": 417, "_dispatch": 417, "intrud": 417, "register_introspection_funct": 417, "rpc_path": [417, 464], "rpc2": [417, 464], "adder_funct": 417, "exampleservic": 417, "getdata": 417, "currenttim": 417, "getcurrenttim": 417, "nkeyboard": 417, "request_text": 417, "docxmlrpcrequesthandl": 417, "set_server_titl": 417, "server_titl": 417, "set_server_nam": 417, "set_server_document": 417, "server_document": 417, "pyz": [418, 475], "mainfn": 418, "deflat": [418, 421], "create_arch": [418, 477], "get_interpret": 418, "old_arch": 418, "new_arch": 418, "pyzw": 418, "pkzip": [419, 420, 459], "zip64": [419, 464], "badzipfil": 419, "largezipfil": 419, "getinfo": 419, "infolist": 419, "is_zipfil": [419, 466], "zip_stor": 419, "zip_defl": [419, 449], "zip_bzip2": 419, "zip_lzma": 419, "phil": [419, 420, 465], "katz": [419, 420], "allowzip64": [419, 474], "strict_timestamp": 419, "metadata_encod": 419, "2107": 419, "myzip": 419, "namelist": 419, "force_zip64": 419, "zipextfil": [419, 472], "file_s": [419, 461], "appreci": [419, 423, 437], "printdir": 419, "setpassword": 419, "testzip": 419, "compress_typ": [419, 466], "writestr": [419, 466], "zinfo_or_arcnam": 419, "zinfo_or_directori": 419, "grandchild": 419, "zipp": 419, "writepi": [419, 474], "filterfunc": [419, 474], "zf": 419, "myprog": 419, "notest": 419, "testal": [419, 465], "bogu": [419, 466], "create_system": 419, "create_vers": 419, "extract_vers": 419, "flag_bit": 419, "internal_attr": 419, "external_attr": 419, "header_offset": 419, "compress_s": 419, "ahlstrom": [420, 459, 462], "zipimporterror": 420, "archivepath": 420, "8467": [420, 462], "jwzthread": [420, 462], "adler": [421, 423], "max_wbit": 421, "z_best_spe": 421, "z_best_compress": 421, "z_no_compress": 421, "z_default_compress": 421, "compressobj": 421, "memlevel": 421, "def_mem_level": 421, "z_default_strategi": 421, "zdict": 421, "z_filter": 421, "z_huffman_onli": 421, "z_rle": 421, "z_fix": 421, "def_buf_s": 421, "decompressobj": 421, "z_no_flush": 421, "z_partial_flush": 421, "z_sync_flush": 421, "z_full_flush": 421, "z_block": 421, "z_finish": 421, "unconsumed_tail": 421, "unconsum": 421, "zlib_vers": 421, "zlib_runtime_vers": [421, 473], "los_angel": [422, 479], "dt_add": 422, "dt_utc": 422, "zoneinfonotfounderror": 422, "tzpath": [422, 453], "reset_tzpath": 422, "pythontzpath": 422, "invalidtzpathwarn": 422, "fobj": [422, 435], "no_cach": 422, "only_kei": 422, "new_york": 422, "asia": 422, "tokyo": 422, "cldr": 422, "kwajalein": 422, "01t03": 422, "europe_berlin_pkl": 422, "berlin": 422, "europe_berlin_pkl_nc": 422, "available_timezon": 422, "posixrul": 422, "cautionari": [422, 463], "1990": [423, 465], "netherland": 423, "reston": 423, "virginia": 423, "pythonlab": [423, 459, 461], "intellectu": 423, "sponsor": 423, "opensourc": 423, "thru": 423, "license": 423, "herebi": 423, "nonexclus": 423, "royalti": 423, "herein": 423, "OF": [423, 428], "merchant": 423, "THAT": 423, "infring": 423, "consequenti": 423, "partnership": 423, "ventur": 423, "saratoga": 423, "santa": 423, "clara": 423, "95051": 423, "1895": 423, "preston": [423, 477], "20191": 423, "1013": 423, "feder": 423, "commonwealth": 423, "notwithstand": [423, 459], "tortiou": 423, "_random": 423, "sci": 423, "hiroshima": 423, "mat": [423, 466], "mt": 423, "mt2002": 423, "emt19937ar": 423, "mt19937": 423, "takuji": 423, "makoto": 423, "init_genrand": 423, "init_by_arrai": 423, "init_kei": 423, "key_length": 423, "redistribut": 423, "exemplari": 423, "procur": 423, "tort": 423, "SUCH": 423, "emt": 423, "1996": 423, "rush": [423, 459], "timothi": 423, "mallei": [423, 462], "timo": 423, "alum": 423, "industri": 423, "whielacronx": 423, "mojam": 423, "montanaro": [423, 459, 462, 463, 464, 465], "bioreason": 423, "automatrix": 423, "cathedr": 423, "republ": 423, "laboratori": 423, "sublicens": 423, "furnish": 423, "noninfring": 423, "doug": 423, "pyhash": [423, 453], "marek": 423, "majkowski": 423, "dan": [423, 463, 464, 472, 473, 474, 475, 479], "popcount": 423, "majek": 423, "csiphash": 423, "supercop": 423, "crypto_auth": 423, "djb": 423, "little2": 423, "131002": 423, "siphash": [423, 474], "gai": [423, 466, 468], "20220517033456": 423, "netlib": 423, "lucent": 423, "BEING": 423, "ITS": 423, "reproduct": 423, "licensor": 423, "authorship": 423, "editori": [423, 459], "verbal": 423, "conspicu": 423, "perpetu": [423, 474], "irrevoc": 423, "patent": 423, "litig": 423, "counterclaim": 423, "lawsuit": 423, "alleg": 423, "contributori": 423, "promin": [423, 467], "addendum": 423, "constru": 423, "grossli": 423, "goodwil": 423, "stoppag": 423, "malfunct": 423, "indemn": 423, "indemnifi": 423, "defend": 423, "clark": [423, 473], "loup": 423, "gailli": 423, "misrepres": 423, "plainli": 423, "jloup": 423, "madler": 423, "alumni": 423, "caltech": 423, "owen": 423, "_decim": [423, 453, 473], "stefan": [423, 466, 470, 473, 474, 475, 476, 477, 478, 479], "krah": [423, 466, 473, 476], "xmltestdata": 423, "c14n2": 423, "ercim": 423, "keio": 423, "beihang": 423, "g771": 423, "sox": 423, "revenu": 423, "2550": 423, "garcia": [423, 470, 471], "94043": 423, "uvloop": [423, 475, 476], "magicstack": 423, "incarn": 424, "if_stmt": [424, 428], "while_stmt": [424, 428], "for_stmt": [424, 428], "try_stmt": [424, 428], "with_stmt": [424, 428], "match_stmt": [424, 428], "funcdef": 424, "async_with_stmt": 424, "async_for_stmt": 424, "async_funcdef": 424, "stmt_list": [424, 434], "compound_stmt": [424, 428, 434], "simple_stmt": [424, 428], "assignment_express": [424, 427, 428], "target_list": [424, 427, 433], "starred_list": [424, 427], "try1_stmt": 424, "try2_stmt": 424, "try3_stmt": 424, "with_stmt_cont": 424, "with_item": [424, 428], "hit_except": 424, "subject_expr": [424, 428], "case_block": [424, 428], "star_named_express": [424, 428], "named_express": [424, 428], "prerequisit": [424, 467], "636": [424, 438, 469], "ebnf": [424, 428], "open_sequence_pattern": [424, 428], "as_pattern": [424, 428], "or_pattern": [424, 428], "literal_pattern": [424, 428], "capture_pattern": [424, 428], "wildcard_pattern": [424, 428], "value_pattern": [424, 428], "sequence_pattern": [424, 428], "mapping_pattern": [424, 428], "class_pattern": [424, 428], "closed_pattern": [424, 428], "signed_numb": [424, 428], "name_or_attr": [424, 428], "name1": [424, 464], "name2": [424, 464], "maybe_sequence_pattern": [424, 428], "maybe_star_pattern": [424, 428], "star_pattern": [424, 428], "p3": 424, "items_pattern": [424, 428], "key_value_pattern": [424, 428], "double_star_pattern": [424, 428], "pattern_argu": 424, "positional_pattern": [424, 428], "keyword_pattern": [424, 428], "parameter_list": [424, 427], "defparamet": 424, "parameter_list_no_posonli": 424, "parameter_list_stararg": 424, "614": [424, 479], "whats_on_the_telli": 424, "570": [424, 478], "3107": [424, 438, 467, 475, 477], "param1": 424, "param2": 424, "do_stuff": 424, "some_coroutin": 424, "suite2": 424, "aenter": 424, "aexit": 424, "amax": 424, "overly_gener": 424, "simpletypevar": 424, "typevarwithbound": 424, "typevarwithconstraint": 424, "simpletypevartupl": 424, "simpleparamspec": 424, "type_params_of_func": 424, "liberti": 424, "some_default": 424, "default_of_arg": 424, "bound_of_t": 424, "type_params_of_bag": 424, "type_params_of_listorset": 424, "value_of_listorset": 424, "neumann": 425, "illus": [425, 441, 472], "affix": 425, "cell_cont": 425, "codeobject": [425, 470], "0x2000": 425, "0x10": 425, "0x1000": 425, "co_posit": [425, 470], "precari": 425, "parentclass": 425, "ocert": [425, 452], "asymmetri": 425, "verbosemodul": 425, "__objclass__": 425, "unlist": 425, "philosoph": 425, "australianphilosoph": 425, "bruce": 425, "mysubclass": 425, "__classcell__": [425, 476, 478], "3135": [425, 466, 467], "boundless": 425, "class_of_obj": 425, "breakfast": 425, "__rtruediv__": 425, "__rfloordiv__": [425, 469], "a_tupl": 425, "__release_buffer__": 425, "unbind": 426, "simpleexpr": 426, "repair": [426, 458], "bnf": [427, 431, 460], "othernam": [427, 459], "enclosur": 427, "parenth_form": 427, "list_displai": 427, "dict_displai": 427, "set_displai": 427, "generator_express": 427, "yield_atom": 427, "__spam": [427, 437], "_ham__spam": 427, "stringliter": 427, "bytesliter": 427, "imagnumb": 427, "starred_express": [427, 428, 433], "unparenthes": [427, 469, 479], "comp_for": 427, "or_test": 427, "comp_it": 427, "comp_if": 427, "dict_item_list": 427, "dict_comprehens": 427, "dict_item": 427, "or_expr": [427, 432], "prevail": 427, "yield_express": [427, 432, 433], "expression_list": [427, 433, 434], "yield_from": [427, 470], "subiter": [427, 473], "attributeref": [427, 433], "slice_list": 427, "slice_item": 427, "proper_slic": 427, "positional_argu": 427, "starred_and_keyword": 427, "keywords_argu": 427, "positional_item": 427, "keyword_item": 427, "x1": [427, 438, 469, 471], "x3": 427, "x4": 427, "ym": 427, "await_expr": 427, "u_expr": 427, "m_expr": 427, "a_expr": 427, "shift_expr": [427, 428], "and_expr": 427, "xor_expr": 427, "comp_oper": 427, "op1": 427, "op2": 427, "opn": 427, "reflex": 427, "and_test": 427, "not_test": 427, "conditional_express": [427, 432], "lambda_expr": 427, "starred_item": 427, "expr4": 427, "expr5": 427, "roundoff": 427, "0041": 427, "precompos": 427, "u00c7": 427, "u0043": 427, "u0327": 427, "_pypegen_pars": 428, "reserved_keyword": 428, "n_keyword_list": 428, "start_rul": 428, "file_rul": 428, "interactive_rul": 428, "eval_rul": 428, "py_func_type_input": 428, "func_type_rul": 428, "grammat": 428, "invalid_": 428, "rule_nam": 428, "return_typ": 428, "e1": [428, 472], "e2": 428, "first_alt": 428, "second_alt": 428, "mod_ti": [428, 469], "_pypegen_make_modul": 428, "statement_newlin": 428, "_pyast_interact": 428, "_pyast_express": 428, "type_express": 428, "_pyast_functiontyp": 428, "asdl_stmt_seq": 428, "_pypegen_seq_flatten": 428, "_pypegen_singleton_seq": 428, "stmt_ty": 428, "_pyast_pass": 428, "_pypegen_interactive_exit": 428, "type_alia": 428, "star_express": 428, "_pyast_expr": 428, "return_stmt": [428, 433], "import_stmt": [428, 433], "raise_stmt": [428, 433], "del_stmt": [428, 433], "yield_stmt": [428, 433], "assert_stmt": [428, 433], "_pyast_break": 428, "_pyast_continu": 428, "global_stmt": [428, 433], "nonlocal_stmt": [428, 433], "function_def": 428, "class_def": 428, "annotated_rh": 428, "yield_expr": 428, "check_vers": 428, "_pyast_annassign": 428, "expr_ti": 428, "_pypegen_set_expr_context": 428, "single_target": 428, "single_subscript_attribute_target": 428, "asdl_expr_seq": 428, "star_target": 428, "tc": 428, "_pyast_assign": 428, "new_type_com": 428, "_pyast_augassign": 428, "invalid_assign": 428, "augoper": 428, "_pypegen_augoper": 428, "_pyast_return": 428, "_pyast_rais": 428, "_pyast_glob": 428, "asdl_identifier_seq": 428, "_pypegen_map_names_to_id": 428, "_pyast_nonloc": 428, "del_target": 428, "_pyast_delet": 428, "invalid_del_stmt": 428, "_pyast_assert": 428, "invalid_import": 428, "dotted_as_nam": 428, "_pyast_import": 428, "dotted_nam": 428, "import_from_target": 428, "_pyast_importfrom": 428, "_pypegen_seq_count_dot": 428, "asdl_alias_seq": 428, "import_from_as_nam": 428, "alias_ti": 428, "_pypegen_alias_for_star": 428, "invalid_import_from_target": 428, "_pyast_alia": 428, "_pypegen_join_names_with_dot": 428, "invalid_block": 428, "class_def_raw": 428, "_pypegen_class_def_decor": 428, "invalid_class_def_raw": 428, "_pyast_classdef": 428, "function_def_raw": 428, "_pypegen_function_def_decor": 428, "invalid_def_raw": 428, "func_type_com": 428, "_pyast_functiondef": 428, "arguments_ti": 428, "_pypegen_empty_argu": 428, "_pyast_asyncfunctiondef": 428, "invalid_paramet": 428, "slash_no_default": 428, "asdl_arg_seq": 428, "param_no_default": 428, "param_with_default": 428, "star_etc": 428, "_pypegen_make_argu": 428, "slash_with_default": 428, "slashwithdefault": 428, "_pypegen_slash_with_default": 428, "staretc": 428, "invalid_star_etc": 428, "param_maybe_default": 428, "_pypegen_star_etc": 428, "param_no_default_star_annot": 428, "arg_ti": 428, "invalid_kwd": 428, "_pypegen_add_type_comment_to_arg": 428, "param_star_annot": 428, "namedefaultpair": 428, "_pypegen_name_default_pair": 428, "_pyast_arg": 428, "star_annot": 428, "invalid_default": 428, "invalid_if_stmt": 428, "elif_stmt": 428, "_pyast_if": 428, "else_block": 428, "invalid_elif_stmt": 428, "invalid_else_stmt": 428, "invalid_while_stmt": 428, "_pyast_whil": 428, "invalid_for_stmt": 428, "_pyast_for": 428, "_pyast_asyncfor": 428, "invalid_for_target": 428, "invalid_with_stmt_ind": 428, "asdl_withitem_seq": 428, "_pyast_with": 428, "_pyast_asyncwith": 428, "invalid_with_stmt": 428, "withitem_ti": 428, "_pyast_withitem": 428, "invalid_with_item": 428, "invalid_try_stmt": 428, "finally_block": 428, "_pyast_tri": 428, "asdl_excepthandler_seq": 428, "except_block": 428, "except_star_block": 428, "_pyast_trystar": 428, "excepthandler_ti": 428, "invalid_except_stmt_ind": 428, "_pyast_excepthandl": 428, "invalid_except_stmt": 428, "invalid_except_star_stmt_ind": 428, "invalid_finally_stmt": 428, "asdl_match_case_seq": 428, "_pyast_match": 428, "invalid_match_stmt": 428, "_pyast_tupl": 428, "_pypegen_seq_insert_in_front": 428, "match_case_ti": 428, "invalid_case_block": 428, "_pyast_match_cas": 428, "pattern_ti": 428, "asdl_pattern_seq": 428, "_pyast_matchsequ": 428, "pattern_capture_target": 428, "_pyast_matcha": 428, "invalid_as_pattern": 428, "asdl_seq_len": 428, "asdl_seq_get": 428, "_pyast_matchor": 428, "_pyast_matchvalu": 428, "complex_numb": 428, "_pyast_matchsingleton": 428, "literal_expr": 428, "_pyast_const": 428, "signed_real_numb": 428, "imaginary_numb": 428, "_pyast_binop": 428, "_pyast_unaryop": 428, "real_numb": 428, "_pypegen_ensure_r": 428, "_pypegen_ensure_imaginari": 428, "_pyast_attribut": 428, "asdl_seq": 428, "_pyast_matchstar": 428, "_pyast_matchmap": 428, "_pypegen_get_pattern_kei": 428, "_pypegen_get_pattern": 428, "keypatternpair": 428, "_pypegen_key_pattern_pair": 428, "_pyast_matchclass": 428, "invalid_class_pattern": 428, "_pyast_typealia": 428, "asdl_type_param_seq": 428, "type_param_seq": 428, "type_param_ti": 428, "type_param_bound": 428, "_pyast_typevar": 428, "raise_syntax_error_starting_from": 428, "tuple_kind": 428, "_pyast_typevartupl": 428, "_pyast_paramspec": 428, "invalid_express": 428, "invalid_legacy_express": 428, "_pyast_ifexp": 428, "lambdef": 428, "_pyast_yieldfrom": 428, "_pyast_yield": 428, "bitwise_or": 428, "_pyast_star": 428, "_pyast_namedexpr": 428, "invalid_named_express": 428, "_pyast_boolop": 428, "compare_op_bitwise_or_pair": 428, "_pyast_compar": 428, "asdl_int_seq": 428, "_pypegen_get_cmpop": 428, "_pypegen_get_expr": 428, "cmpopexprpair": 428, "eq_bitwise_or": 428, "noteq_bitwise_or": 428, "lte_bitwise_or": 428, "lt_bitwise_or": 428, "gte_bitwise_or": 428, "gt_bitwise_or": 428, "notin_bitwise_or": 428, "in_bitwise_or": 428, "isnot_bitwise_or": 428, "is_bitwise_or": 428, "_pypegen_cmpop_expr_pair": 428, "tok": 428, "_pypegen_check_barry_as_flufl": 428, "bitwise_xor": 428, "bitwise_and": 428, "await_primari": 428, "_pyast_await": 428, "_pyast_cal": 428, "_pyast_subscript": 428, "_pyast_slic": 428, "invalid_group": 428, "lambda_param": 428, "_pyast_lambda": 428, "invalid_lambda_paramet": 428, "lambda_paramet": 428, "lambda_slash_no_default": 428, "lambda_param_no_default": 428, "lambda_param_with_default": 428, "lambda_star_etc": 428, "lambda_slash_with_default": 428, "invalid_lambda_star_etc": 428, "lambda_param_maybe_default": 428, "lambda_kwd": 428, "invalid_lambda_kwd": 428, "fstring_replacement_field": 428, "_pypegen_constant_from_token": 428, "debug_expr": 428, "fstring_convers": 428, "fstring_full_format_spec": 428, "_pypegen_formatted_valu": 428, "invalid_replacement_field": 428, "resulttokenwithmetadata": 428, "conv_token": 428, "conv": [428, 449, 475], "_pypegen_check_fstring_convers": 428, "fstring_format_spec": 428, "_pypegen_setup_full_format_spec": 428, "_pypegen_decoded_constant_from_token": 428, "fstring": 428, "_pypegen_joined_str": 428, "_pypegen_constant_from_str": 428, "_pypegen_concatenate_str": 428, "_pyast_list": 428, "_pyast_set": 428, "double_starred_kvpair": 428, "_pyast_dict": 428, "_pypegen_get_kei": 428, "_pypegen_get_valu": 428, "invalid_double_starred_kvpair": 428, "keyvaluepair": 428, "_pypegen_key_value_pair": 428, "kvpair": 428, "for_if_claus": 428, "asdl_comprehension_seq": 428, "comprehension_ti": 428, "_pyast_comprehens": 428, "_pyast_listcomp": 428, "invalid_comprehens": 428, "_pyast_setcomp": 428, "_pyast_generatorexp": 428, "_pyast_dictcomp": 428, "invalid_dict_comprehens": 428, "invalid_argu": 428, "_pypegen_collect_call_seq": 428, "_pypegen_dummy_nam": 428, "check_null_allow": 428, "_pypegen_seq_extract_starred_expr": 428, "asdl_keyword_seq": 428, "_pypegen_seq_delete_starred_expr": 428, "kwarg_or_star": 428, "kwarg_or_double_star": 428, "_pypegen_join_sequ": 428, "invalid_starred_express": 428, "keywordorstar": 428, "invalid_kwarg": 428, "_pypegen_keyword_or_star": 428, "keyword_ti": 428, "_pyast_keyword": 428, "star_targets_list_seq": 428, "star_targets_tuple_seq": 428, "target_with_star_atom": 428, "t_primari": 428, "t_lookahead": 428, "star_atom": 428, "del_t_atom": 428, "_pypegen_seq_append_to_end": 428, "invalid_double_type_com": 428, "raise_syntax_error_known_loc": 428, "raise_syntax_error_known_rang": 428, "_pypegen_get_last_comprehension_item": 428, "pypegen_last_item": 428, "_pypegen_nonparen_genexp_in_cal": 428, "_pypegen_arguments_parsing_error": 428, "_without_invalid": 428, "expression_without_invalid": 428, "_pypegen_check_legacy_stmt": 428, "kf": 428, "dsfsdf": 428, "_pypegen_get_expr_nam": 428, "invalid_ann_assign_target": 428, "raise_syntax_error_invalid_target": 428, "raise_indentation_error": 428, "invalid_parameters_help": 428, "raise_syntax_error": 428, "invalid_lambda_parameters_help": 428, "for_target": 428, "invalid_class_argument_pattern": 428, "pypegen_first_item": 428, "invalid_kvpair": 428, "raise_error_known_loc": 428, "raise_syntax_error_on_next_token": 428, "invalid_conversion_charact": 428, "immateri": 429, "reinitialis": 429, "rerun": [429, 467], "mpf": 429, "_init_module_attr": 429, "atyp": 429, "module_repr": [429, 469, 470, 471, 474], "subpackage1": 429, "modulex": 429, "modulei": 429, "subpackage2": 429, "modulez": 429, "modulea": 429, "lloyd": 431, "hugunin": 431, "backu": 431, "naur": 431, "lc_letter": 431, "vim": [432, 456, 474], "fileencod": 432, "bram": [432, 461], "moolenaar": 432, "2100": 432, "maart": 432, "mei": 432, "juni": 432, "augustu": 432, "oktob": 432, "unwis": 432, "uax": 432, "3131": [432, 467], "xid_start": 432, "xid_continu": 432, "other_id_start": 432, "id_start": 432, "mc": 432, "other_id_continu": 432, "id_continu": 432, "connector": 432, "proplist": 432, "derivedcoreproperti": 432, "breakag": [432, 459, 460, 462, 471, 477], "stringprefix": 432, "shortstr": 432, "longstr": 432, "shortstringitem": 432, "longstringitem": 432, "shortstringchar": 432, "stringescapeseq": 432, "longstringchar": 432, "bytesprefix": 432, "shortbyt": 432, "longbyt": 432, "shortbytesitem": 432, "longbytesitem": 432, "shortbyteschar": 432, "bytesescapeseq": 432, "longbyteschar": 432, "ur": [432, 467], "reintroduc": [432, 469], "codebas": [432, 470, 474, 475], "0o377": [432, 470, 471], "mistyp": 432, "literal_char": 432, "replacement_field": 432, "f_express": 432, "abc5": 432, "34567": [432, 476], "0x400": 432, "mill": 432, "decinteg": 432, "bininteg": 432, "octinteg": 432, "hexinteg": 432, "nonzerodigit": 432, "bindigit": 432, "0o177": 432, "0b100110111": 432, "79228162514264337593543950336": 432, "0xdeadbeef": 432, "100_000_000_000": 432, "0b_1110_0101": 432, "pointfloat": 432, "exponentfloat": 432, "077e010": 432, "77e10": 432, "14e": 432, "0e0": 432, "14_15_93": 432, "14j": 432, "10j": 432, "001j": 432, "1e100j": 432, "14_15_93j": 432, "expression_stmt": 433, "assignment_stmt": 433, "augmented_assignment_stmt": 433, "annotated_assignment_stmt": 433, "pass_stmt": 433, "break_stmt": 433, "continue_stmt": 433, "future_stmt": 433, "type_stmt": 433, "3132": [433, 467], "augtarget": 433, "augop": 433, "expression1": 433, "expression2": 433, "tracebackobj": 433, "relative_modul": 433, "fbb": 433, "subpkg2": 433, "subpkg1": 433, "3104": [433, 467], "value_of_point": 433, "ish": 435, "qualif": [435, 452, 474], "pythonrc": 435, "startup_fil": 435, "photo": [436, 449], "awk": [436, 459], "reptil": 436, "invit": [436, 456, 474], "mundan": 436, "partak": 437, "neat": [437, 461], "the_answ": 437, "scope_test": 437, "do_loc": 437, "do_nonloc": 437, "do_glob": 437, "realpart": 437, "imagpart": 437, "canin": 437, "fido": 437, "buddi": 437, "mistaken": [437, 459, 472], "add_trick": 437, "priorit": 437, "warehous": [437, 472], "w2": 437, "headach": 437, "addtwic": 437, "legitim": 437, "worthi": 437, "derivedclassnam": 437, "baseclassnam": 437, "base3": 437, "bottommost": 437, "_spam": 437, "intraclass": 437, "items_list": 437, "__updat": 437, "mappingsubclass": 437, "_mapping__upd": 437, "_mappingsubclass__upd": 437, "pervad": 437, "str_iter": 437, "0x10c90e650": 437, "rev": 437, "0x00a1db50": 437, "golf": 437, "xvec": 437, "yvec": 437, "260": [437, 458, 466, 476], "unique_word": 437, "valedictorian": 437, "gpa": 437, "graduat": [437, 475, 478], "pun": 438, "defenestr": 438, "han": [438, 462, 469], "\u00e9l\u00e9onor": 438, "\u666f\u592a\u90ce": 438, "active_us": 438, "myemptyclass": 438, "initlog": 438, "rust": 438, "http_error": [438, 469], "teapot": [438, 469], "where_i": 438, "grass": [438, 469], "987": [438, 446, 447], "1597": 438, "10042ed0": 438, "fib2": [438, 447], "f100": 438, "ask_ok": 438, "vooooom": 438, "bereft": 438, "daisi": 438, "cheeseshop": 438, "sorri": 438, "limburg": 438, "runni": 438, "shopkeep": 438, "palin": 438, "shop": [438, 451], "pos1": 438, "pos2": 438, "pos_or_kwd": 438, "kwd1": 438, "kwd2": 438, "standard_arg": 438, "pos_only_arg": 438, "kwd_only_arg": 438, "combined_exampl": 438, "pos_onli": 438, "kwd_onli": 438, "write_multiple_item": 438, "scoop": [438, 467], "bleedin": 438, "demis": 438, "make_incrementor": 438, "uppercamelcas": 438, "lowercase_with_underscor": 438, "slightest": 438, "kiwi": 439, "tangerin": 439, "grape": 439, "7j": 439, "freshfruit": 439, "loganberri": 439, "passion": 439, "weapon": 439, "14159": [439, 441], "3x4": 439, "transposed_row": 439, "88888": 439, "basket": 439, "crabgrass": 439, "alacazam": [439, 463], "tel": 439, "sape": 439, "4139": 439, "brave": 439, "tic": 439, "tac": 439, "toe": 439, "raw_data": 439, "filtered_data": 439, "string3": 439, "trondheim": 439, "hammer": [439, 459], "non_nul": 439, "lesser": 439, "this_fail": 440, "hither": 440, "flew": 440, "bool_return": 440, "undertaken": 440, "0001100110011001100110011001100110011001100110011": 441, "3602879701896397": 441, "10000000000000001": 441, "12g": [441, 459], "beget": 441, "peril": 441, "unduli": 441, "casual": 441, "3537115888337719": 441, "1125899906842624": 441, "921f9f01b866ep": 441, "10430216751806065": 441, "266310978": 441, "67179024": 441, "143401161448607": 441, "143401161400469": 441, "266262841": 441, "31058735": 441, "003244936839808227": 441, "042173697819788e": 441, "042178034628478e": 441, "0051575902860057365": 441, "strive": [441, 466], "7205759403792794": 441, "17f": 441, "36028797018963968": 441, "referendum": 443, "yes_vot": 443, "42_572_654": 443, "no_vot": 443, "43_132_495": 443, "vote": [443, 459, 464, 472], "42572654": 443, "40000": 443, "dcab": 443, "7678": 443, "phone": [443, 449, 472], "10d": 443, "eel": 443, "hovercraft": 443, "roach": [443, 476, 478], "horribl": 443, "manfr": 443, "8637678": 443, "tidili": 443, "4d": 443, "729": 443, "00012": 443, "workfil": 443, "0123456789abcdef": 443, "6th": 443, "constantli": [443, 475], "korn": 444, "ipython": [444, 465, 469], "bpython": 444, "guru": 445, "entireti": 445, "the_world_is_flat": 445, "666666666666667": 446, "rabbit": 446, "thingi": 446, "glu": 446, "ium": 446, "unununium": 446, "tho": 446, "supercalifragilisticexpialidoci": [446, 449], "fibo": 447, "itemnam": 447, "utilis": 447, "uf": 447, "_framework": 447, "_git": 447, "_home": 447, "callstat": [447, 477, 479], "wavread": 447, "wavwrit": 447, "aiffread": 447, "aiffwrit": 447, "auread": 447, "auwrit": 447, "vocod": 447, "karaok": 447, "echofilt": 447, "atten": 447, "contrarili": 447, "subitem": 447, "subsubitem": 447, "specific_submodul": 447, "dozen": [448, 465, 472], "python312": [448, 449], "accesslog": 448, "installdir": [448, 453], "tea": 448, "70710678118654757": 448, "17970987693706186": 448, "6071428571428572": 448, "worldtimeapi": 448, "01t01": 448, "689215": 448, "soothsay": 448, "jcaesar": 448, "1964": 448, "14368": 448, "witch": 448, "wrist": 448, "226805979": 448, "57535828626024577": 448, "54962537085770791": 448, "effortless": 448, "teststatisticalfunct": 448, "test_averag": 448, "english_unit": 449, "villag": 449, "folk": 449, "nottingham": 449, "ditch": 449, "fund": [449, 459, 464, 470], "nottinghamfolk": 449, "unladen": [449, 472], "elect": [449, 472], "photofil": 449, "img_1074": 449, "img_1076": 449, "img_1077": 449, "batchrenam": 449, "seqnum": 449, "ashley_": 449, "ashley_0": 449, "ashley_1": 449, "ashley_2": 449, "iiihh": 449, "comp_siz": 449, "uncomp_s": 449, "filenames": 449, "decoupl": [449, 470, 475, 477], "asynczip": 449, "4000": 449, "700": 449, "22222": 449, "26932": 449, "task3": 449, "task4": 449, "unsearch": 449, "starting_nod": 449, "breadth_first_search": 449, "gen_mov": 449, "is_goal": 449, "lua": 449, "financi": 449, "regulatori": 449, "cent": 449, "09999999999999995": 449, "142857142857142857142857142857142857": 449, "nova": 450, "136kb": 450, "py2": [450, 472], "whl": 450, "kenneth": 450, "reitz": 450, "kennethreitz": 450, "akuchl": 450, "reinforc": 451, "skim": 451, "sizabl": [451, 460, 461], "596": [451, 479], "00797": 451, "pyvideo": 451, "fourier": 451, "solver": 451, "clerk": 451, "bbdehiioqssuvvwx": 452, "0b2": 452, "0c076caaa8": 452, "20161005": 452, "wdefault": [452, 466, 472], "walwai": [452, 462], "wmodul": 452, "wonc": 452, "wignor": 452, "wi": 452, "frozen_modul": 452, "importlib_bootstrap": 452, "importlib_bootstrap_extern": 452, "showalloccount": [452, 476, 479], "oldpars": [452, 479], "selftest": 452, "4294967295": [452, 476], "encodingnam": 452, "pythondumprefsfil": 452, "c11": [453, 470, 473], "stdint": 453, "acloc": [453, 471], "ubuntu": [453, 470, 477], "autoreconf": 453, "ivf": 453, "autoconf": [453, 471], "_sqlite": 453, "pylong_bits_in_digit": [453, 470], "dbmlibord": [453, 466], "py_coerce_c_local": 453, "freelist": [453, 470], "_bundl": [453, 469], "pystat": 453, "py_stat": 453, "summarize_stat": 453, "memf": 453, "noderawf": 453, "eprefix": 453, "bolt": [453, 471], "profile_task": [453, 479], "clang": [453, 471, 474, 476], "llvm": [453, 476], "profdata": 453, "interposit": [453, 469], "testtimeout": 453, "gold": 453, "thinlto": [453, 470, 471], "fdata": 453, "bolt_instrument_flag": 453, "bolt_apply_flag": 453, "gprof": [453, 463], "fstrict": 453, "gettotalrefcount": 453, "__lltrace__": 453, "_pyobject_assert": 453, "ndebug": 453, "py_safe_downcast": 453, "valgrind": [453, 466, 472, 476], "addresssanit": 453, "asan": 453, "memorysanit": 453, "msan": 453, "undefinedbehaviorsanit": 453, "ubsan": 453, "libpythonmajor": [453, 469], "lib1": 453, "mpdec": 453, "with_editlin": 453, "have_libreadlin": 453, "rpath": [453, 457, 469], "fnv": [453, 474], "siphash13": [453, 470], "universalsdk": [453, 464, 479], "sdkdir": 453, "arch": [453, 465], "universal2": [453, 479], "config_sit": 453, "aarch64": 453, "ac_cv_buggy_getaddrinfo": 453, "ac_cv_file__dev_ptmx": 453, "ac_cv_file__dev_ptc": 453, "makesetup": [453, 470], "buildbottest": 453, "distclean": 453, "py_build_core_builtin": 453, "_asyncio": 453, "py_build_core_modul": 453, "pyapi_data": [453, 462], "py_exported_symbol": 453, "py_imported_symbol": 453, "configure_cppflag": 453, "cppflag": [453, 462], "include_dir": [453, 459], "basecppflag": 453, "py_cppflag": 453, "srcdir": [453, 472], "cflags_nodist": 453, "65320": 453, "harden": 453, "heighten": 453, "compileall_opt": [453, 471], "j0": [453, 471], "extra_cflag": 453, "configure_cflag": 453, "configure_cflags_nodist": 453, "basecflag": 453, "cflags_alias": 453, "ccshare": 453, "fpic": 453, "cflagsforshar": 453, "py_cflag": 453, "py_cflags_nodist": 453, "py_stdmodule_cflag": 453, "py_core_cflag": 453, "dpy_build_cor": 453, "py_builtin_module_cflag": 453, "dpy_build_core_builtin": 453, "_testemb": 453, "configure_ldflag": 453, "stomp": 453, "ldflags_nodist": 453, "configure_ldflags_nodist": 453, "lib_dir": 453, "lrt": 453, "ldshare": 453, "py_ldflag": 453, "bldshare": 453, "py_core_ldflag": 453, "py_ldflags_nodist": 453, "savag": 456, "bobsavag": 456, "pythonlaunch": 456, "textwrangl": 456, "barebon": 456, "textmat": [456, 474], "macrom": 456, "gvim": 456, "macvim": 456, "aquamac": 456, "qa1067": 456, "hashcollis": 456, "hkn": 456, "idle_intro": 456, "pyobjc": 456, "wxpython": 456, "riverbankcomput": 456, "pythonmac": 456, "preinstal": 457, "distro": [457, 469], "maint": 457, "opensus": 457, "portal": 457, "fedoraproject": 457, "packaging_tutorial_gnu_hello": 457, "slackbook": 457, "slackwar": 457, "pkg_add": 457, "1p2": 457, "pki": 457, "install_sw": 457, "xzf": 457, "pushd": 457, "openssldir": 457, "j8": 457, "popd": 457, "longpathsen": 458, "currentcontrolset": 458, "installallus": 458, "targetdir": 458, "defaultalluserstargetdir": 458, "programfil": 458, "defaultjustformetargetdir": 458, "localappdata": 458, "defaultcustomtargetdir": 458, "associatefil": 458, "prependpath": [458, 470], "appendpath": [458, 470], "include_doc": 458, "include_debug": 458, "include_dev": 458, "include_ex": 458, "include_launch": 458, "installlauncherallus": 458, "include_lib": 458, "include_pip": 458, "include_symbol": 458, "include_tcltk": 458, "include_test": 458, "include_tool": 458, "launcheronli": 458, "simpleinstal": 458, "simpleinstalldescript": 458, "elev": 458, "unattend": 458, "pythonsoftwarefound": 458, "8_qbz5n2kfra8p0": 458, "localcach": 458, "windowsapp": 458, "package_nam": 458, "vf": 458, "systemx86": 458, "test_fil": 458, "hklm": 458, "msix": 458, "uwp": 458, "nugetclidl": 458, "excludevers": 458, "outputdirectori": 458, "pythonx86": 458, "msbuild": 458, "python37": 458, "ucrtbas": 458, "anaconda": 458, "panda": 458, "conda": 458, "canopi": 458, "winpython": 458, "prebuilt": 458, "my_python_lib": 458, "procthread": 458, "set_1": 458, "wsl": 458, "pythoncor": [458, 470], "insenit": 458, "oneith": 458, "pylauncher_no_search_path": 458, "xpython": 458, "py_python": 458, "py_python3": 458, "pylauncher_debug": 458, "pylauncher_dryrun": 458, "pylauncher_allow_instal": 458, "pylauncher_always_instal": 458, "rc_bad_venv_cfg": 458, "rc_create_process": 458, "rc_instal": 458, "rc_internal_error": 458, "rc_no_commandlin": 458, "rc_no_python": 458, "rc_no_venv_cfg": 458, "hive": 458, "hkcu": 458, "apploc": 458, "mfc": 458, "golden": [458, 474], "ongo": [458, 477], "mosh": [459, 460, 461, 463], "zadka": [459, 460, 461, 463], "steadi": 459, "paid": 459, "contractu": 459, "6final": 459, "0beta1": 459, "fourfold": 459, "schneider": 459, "kamp": 459, "checkin": 459, "submitt": 459, "ka": [459, 460, 461, 464], "yee": [459, 460, 461, 464], "scraper": 459, "indiffer": 459, "him": 459, "lockstep": 459, "elementwis": [459, 460], "objectwis": 459, "536": 459, "countless": 459, "stormi": 459, "01ff": 459, "777": [459, 475], "setdefaultencod": 459, "unichr": [459, 461, 464], "encode_func": 459, "decode_func": 459, "stream_read": 459, "stream_writ": 459, "ustr": 459, "file_obj": [459, 462], "u2000ab": 459, "utf8_encod": 459, "utf8_decod": 459, "utf8_streamread": 459, "utf8_streamwrit": 459, "sre": [459, 461], "workhors": 459, "ew": [459, 473], "argu": [459, 461, 466], "endless": [459, 461, 464], "lengthier": [459, 460], "thoma": [459, 460, 463, 464, 465, 466, 469, 470, 471, 474, 475, 476, 477], "wouter": [459, 460, 463, 464, 465, 466, 475, 478], "strop": 459, "hlinuxtnam": 459, "joke": 459, "jpython": 459, "realis": 459, "myself": 459, "tobi": 459, "kelsei": 459, "tiedemann": 459, "neil": [459, 460, 461, 462, 464, 466, 472, 475, 476, 477, 478], "schemenau": [459, 460, 461, 462, 464, 466, 472, 475, 478], "overrod": 459, "tismer": [459, 474], "rewrot": [459, 462], "jeremi": [459, 460, 461, 462, 463, 464, 465, 466], "hylton": [459, 460, 461, 462, 463, 464, 465, 466], "isomorph": 459, "trashcan": [459, 470, 479], "__cmp__": [459, 460, 462, 465, 466, 467], "itanium": [459, 475], "trent": [459, 462, 464, 474], "pythonc": 459, "dyld": 459, "wart": [459, 467], "291": 459, "1beta1": 459, "runawai": 459, "gpf": 459, "find_recursionlimit": 459, "listobject": 459, "no_strict_list_append": 459, "0alpha1": 459, "gvr": [459, 461, 462, 463, 466, 476], "reaction": [459, 460], "x123456": 459, "3l": 459, "abcabcabc": 459, "4l": 459, "18446744073709551616": [459, 466], "subtlest": 459, "longval": 459, "17g": [459, 468], "0999999999999996": 459, "fulton": [459, 463, 476], "extensionclass": 459, "myextensionclass": 459, "importdl": 459, "reorganis": 459, "dynload_": 459, "pyport": 459, "vladimir": [459, 460, 462, 469, 471, 478], "marangozov": [459, 460, 462], "pymem": [459, 464], "objimpl": 459, "gusi": 459, "yakov": 459, "markovitch": 459, "charl": [459, 466, 471, 473, 474, 475, 476, 477], "waldman": 459, "affair": 459, "arduou": 459, "ritual": 459, "wildli": 459, "shepherd": [459, 462], "ward": [459, 461, 462, 463, 464, 475], "tarbal": 459, "py_modul": 459, "module1": 459, "module2": 459, "expat_extens": 459, "define_macro": 459, "xml_n": 459, "xmltok": 459, "xmlpars": 459, "xmlrole": 459, "sdist": [459, 460, 464, 466, 476, 477], "bdist_rpm": 459, "bdist_wininst": [459, 469, 478, 479], "xmllib": 459, "mullend": [459, 465], "tag1": 459, "perslist": 459, "persona": 459, "claudiu": [459, 474, 475], "denmark": 459, "son": 459, "nephew": 459, "20th": 459, "4dom": 459, "fourthought": 459, "xmlproc": 459, "lar": [459, 462, 463, 464, 465, 466, 472, 473], "garshol": 459, "sgmlop": 459, "gallew": 459, "httplib": [459, 462, 463, 465, 466, 467], "create_lin": 459, "create_polygon": 459, "oliv": 459, "andrich": 459, "cmpcach": 459, "macmillan": 459, "twin": 459, "sunaudiodev": [459, 465], "bosch": 459, "prescod": [459, 460, 461, 464], "fetchabl": 459, "browsercontrol": 459, "_winreg": [459, 465, 466, 467], "tutt": 459, "imputil": [459, 462, 466], "ihook": [459, 462, 465, 466], "vanilla": 459, "stdwin": 459, "packmail": 459, "whatsound": 459, "zmod": 459, "bolen": [459, 461], "gregg": 459, "hauser": 459, "detlef": [459, 462], "lannert": [459, 462], "aahz": [459, 463, 464], "maruch": 459, "tobia": 459, "polzin": 459, "russ": 459, "schmidt": 459, "clumsier": [460, 461], "list_attribut": [460, 461], "unknow": [460, 461], "compulsori": [460, 461, 462], "crunch": 460, "tp_richcmp": 460, "ascher": 460, "spare": 460, "toolbox": [460, 461, 462], "aycock": 460, "spark": 460, "135143996": 460, "py_tpflags_checktyp": 460, "middleton": 460, "vault": 460, "parnassu": 460, "retir": 460, "wayback": 460, "catalogu": 460, "bdist_": 460, "sean": [460, 462, 463, 464, 466], "reifschneid": [460, 462, 463, 464, 466], "addict": 460, "purcel": 460, "gellekum": 460, "ninth": 460, "edward": [460, 461, 463, 464], "136": 460, "underestim": [460, 461, 462, 463, 464, 465], "afoul": [460, 462], "getc": 460, "jeff": [460, 462, 474, 476], "epler": 460, "preliminari": [460, 469, 477], "ben": [460, 464, 470, 475], "wolfson": 460, "vestigi": 460, "ancestri": 460, "shrunk": 460, "340k": 460, "majewski": 460, "jason": [460, 462, 465, 471, 474, 478, 479], "tishler": [460, 462], "risco": [460, 467], "dietmar": 460, "schwertberg": 460, "unixwar": 460, "billi": 460, "alli": 460, "graem": 460, "goodger": [460, 461, 463], "grave": 460, "hudson": [460, 461, 462, 464], "irregular": 461, "dark": 461, "safeguard": 461, "esoter": [461, 464], "lockablefil": 461, "posixfil": [461, 465], "__methods__": [461, 467], "defstat": 461, "eiffel": 461, "postcondit": 461, "eiffelmethod": 461, "pre_f": 461, "post_f": 461, "zodb": 461, "get_par": 461, "__coerce__": [461, 466], "get_siz": 461, "set_siz": 461, "new_attr": 461, "corp": 461, "0x8116870": 461, "crew": [461, 462, 464], "0x8117f90": [461, 462], "www2": [461, 462], "arizona": [461, 462], "ipd266": [461, 462], "harbor": [461, 462], "magnu": [461, 462], "hetland": [461, 462], "1234567890123": 461, "1234567890123l": 461, "18446744073709551616l": 461, "herald": 461, "erupt": 461, "storm": 461, "acidli": 461, "sarcast": 461, "110000": 461, "261": 461, "x9c": 461, "xc9": 461, "xc1": 461, "nand": 461, "666": 461, "5r92": 461, "qe": 461, "ee8v4": 461, "v8": 461, "f5d": 461, "6yd86yt": 461, "f5r": 461, "f5r8f": 461, "s92p": 461, "86yd": 461, "5t": 461, "71i": 461, "5x": [461, 471, 476, 477], "sheesh": 461, "furrfu": 461, "__unicode__": [461, 466], "headlin": 461, "oreillynet": 461, "meerkat": 461, "getchannel": 461, "freshmeat": 461, "4549": 461, "3dgamer": 461, "52719": 461, "xsl": 461, "html2fo": 461, "memberst_mtim": 461, "mathewson": 461, "ichiro": 461, "itojun": 461, "hagino": 461, "bigcharset": 461, "2487": 461, "pier": [461, 462], "lauder": [461, 462], "anthoni": [461, 463, 464, 477, 478, 479], "baxter": [461, 463, 464], "michel": [461, 462, 473, 474, 475, 476, 477, 478, 479], "pelleti": 461, "rfc2822": 461, "grunt": 461, "generator": 461, "itamar": [461, 471], "shtull": 461, "traur": 461, "py_tpflags_gc": 461, "pyobject_gc_init": 461, "pyobject_gc_fini": 461, "pygc_head_s": 461, "pyobject_as_gc": 461, "pyobject_from_gc": 461, "untyp": 461, "vsprintf": 461, "overrun": [461, 466], "527": 461, "683": [461, 471], "82": 461, "osa": 461, "quicktim": 461, "cleanfutur": 461, "gpled": 461, "ftpmirror": 461, "romberg": 461, "pyrange_new": [461, 464], "sneakili": 461, "rhythm": 461, "borland": 461, "stephen": [461, 470], "hansen": [461, 479], "installermast": 461, "0a": 461, "stolk": 461, "bremmer": 461, "keith": 461, "brigg": 461, "carel": 461, "felling": 461, "mclai": 461, "donnel": 461, "joona": 461, "paalasma": 461, "jen": 461, "reinhardt": 461, "welbourn": 461, "polish": 462, "berkeleydb": [462, 465, 466], "immutableset": [462, 463], "union_upd": 462, "ungainli": 462, "martelli": [462, 465], "suzuki": 462, "hisao": 462, "nyman": 462, "inadequ": 462, "hodgson": 462, "irrit": 462, "__builtin__": [462, 467, 468], "walter": [462, 463, 464, 465, 478], "d\u00f6rwald": [462, 463, 464, 478], "quixot": 462, "richard": [462, 464, 465, 473, 474], "toss": 462, "sundri": 462, "kevin": [462, 463, 465, 466, 471, 472], "alti": 462, "cole": [462, 463, 472], "mcnamara": [462, 464], "cliff": [462, 466], "cpickl": [462, 464, 466, 467], "fanciest": 462, "__safe_for_unpickling__": 462, "rip": 462, "dcba": 462, "innocu": 462, "welter": 462, "fakeseq": 462, "calc_item": 462, "underw": [462, 463, 464, 465], "dylan": 462, "simionato": 462, "029035": 462, "pedroni": [462, 464], "setcheckinterv": [462, 479], "getcheckinterv": [462, 479], "_socket": 462, "u4000": 462, "u4001abc": 462, "simon": 462, "brun": 462, "0045": 462, "goofi": 462, "0goofi": 462, "oren": [462, 471, 473, 477], "tirosh": [462, 473], "christoph": [462, 475], "craig": 462, "set_lineno": 462, "idiosyncrasi": 462, "hotspot": 462, "pyston": [462, 463, 464, 467], "orendorff": [462, 465], "bsddb185": 462, "db2pickl": 462, "pickle2db": 462, "bsddb3": [462, 467], "sampmodul": 462, "samp": 462, "cpp": 462, "robert": [462, 464, 465, 466, 475, 477], "weber": [462, 475], "\u00e5strand": [462, 463], "xlinux": 462, "dad": 462, "priorityqu": 462, "connor": [462, 474, 476], "idlefork": 462, "tino": 462, "deg": 462, "loadavg": 462, "geert": [462, 475], "otkidach": 462, "stat_float_tim": [462, 464, 473, 477], "1034791200": 462, "6335014": 462, "fitzroi": 462, "dale": [462, 473], "sn": 462, "nos": 462, "3407": 462, "3805": 462, "1505": 462, "7023": 462, "2401": 462, "2267": 462, "9733": 462, "8083": 462, "9195": 462, "rexec": 462, "bastion": 462, "rotor": [462, 463], "gilfix": 462, "exc_clear": [462, 467], "gust\u00e4bel": [462, 463, 464, 465, 466, 472, 473], "whit": 462, "defi": 462, "auguri": 462, "sparrow": 462, "dummy_thread": [462, 477, 479], "timer1": 462, "timer2": 462, "laptop": 462, "36831796169281006": 462, "37441694736480713": 462, "35304892063140869": 462, "17574405670166016": 462, "18193507194519043": 462, "17565798759460449": 462, "031107": 462, "tcl_obj": 462, "wantobject": 462, "tkapp": 462, "dictmixin": 462, "seqdict": 462, "lookalik": 462, "keylist": [462, 463], "valuelist": 462, "quinlan": [462, 463, 466, 472], "3491": 462, "30t21": 462, "994956": 462, "827738": 462, "optik": [462, 463, 464], "0x400cad4c": 462, "0x400cad2c": 462, "iinput": 462, "llength": 462, "undistinguish": 462, "pymemcompat": 462, "libpython2": 462, "ondrej": 462, "palkovski": 462, "dl_export": 462, "dl_import": 462, "pyarg_noarg": 462, "pystring_new": 462, "test_bufio": 462, "emx": 462, "macintyr": [462, 464], "weaklink": [462, 479], "atheo": 462, "hurd": 462, "openvm": 462, "mist": 462, "nifti": 462, "richi": 462, "hindl": 462, "0xffffffff": [462, 476], "0xffffffffl": 462, "get_distutil_opt": 462, "bauer": 462, "chermsid": 462, "fraser": 462, "kelli": [462, 473, 474], "gerber": 462, "chri": [462, 464, 465, 473, 475, 476], "lambert": [462, 474], "lalo": 462, "netzer": 462, "nowak": 462, "francesco": 462, "ricciardi": 462, "suzi": 462, "radic": 463, "481": 463, "arbcd": 463, "wxy": 463, "unif": 463, "8589934592": 463, "svensson": 463, "get_all_link": 463, "jiwon": [463, 473], "seo": [463, 473], "hye": [463, 464], "shik": [463, 464], "untrain": 463, "deco": 463, "0x402ef0d4": 463, "require_int": 463, "_deco": 463, "bend": 463, "func_nam": [463, 467], "smith": [463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "979728": 463, "russel": 463, "pythondecoratorlibrari": 463, "dpkg": 463, "deb": 463, "unawar": 463, "0001100110011": 463, "inaccuraci": [463, 466], "1000000000000001": [463, 468], "magnifi": 463, "dodg": 463, "12f": 463, "100000000000": 463, "7956": 463, "64739884393063583815028902": 463, "1275": 463, "9184": 463, "123456789012": 463, "351364": 463, "18288201344": 463, "18288201344j": 463, "1828820134592177245001": 463, "facundo": [463, 465], "batista": [463, 465], "lahei": 463, "speleotrov": 463, "cowlishaw": 463, "rexx": 463, "resolve_dotted_attribut": 463, "dima": 463, "dorfman": 463, "gtk": [463, 465], "pyos_ascii_strtod": [463, 466, 468], "pyos_ascii_atof": [463, 466, 468], "pyos_ascii_formatd": 463, "buf_len": 463, "glib": 463, "kindli": [463, 465], "relicens": 463, "rei": 463, "carneiro": 463, "colormap": 463, "overflowwarn": 463, "method_descriptor": 463, "armin": [463, 464, 465, 466, 468, 472, 473, 474], "rigo": [463, 464, 465], "vasiliev": 463, "cjkcodec": 463, "prc": 463, "roc": 463, "roman8": 463, "iso_8859": 463, "pctp": 463, "belmont": [463, 469, 470], "j\u00f6rg": 463, "lehmann": 463, "gass": 463, "tenfold": 463, "eland": 463, "yve": [463, 470], "dionn": 463, "arnaud": [463, 473], "mazin": 463, "key_val": 463, "0x402c2080": 463, "0x402c2090": 463, "bookmark": 463, "j\u00fcrgen": 463, "erhard": 463, "cryptoapi": 463, "trevor": 463, "perrin": [463, 469], "beni": 463, "cherniavski": 463, "raynor": 463, "hector": 463, "urtubia": 463, "30000": 463, "sidestep": 463, "unlucki": 463, "quietli": 463, "elegantli": 463, "mpz": 463, "jar": 463, "loper": 463, "ambiti": 463, "objn": 463, "py_is_nan": 463, "tsc": 463, "pentium": 463, "misnam": [463, 472], "tracebackobject": 463, "pytracebackobject": 463, "dircach": [463, 465], "korai": 463, "dyck": 463, "hamish": 463, "lawson": 463, "sadruddin": 463, "rejeb": 463, "356": 464, "458": 464, "true_valu": 464, "false_valu": 464, "voter": 464, "true_v": 464, "false_v": 464, "rarer": 464, "pygtk": 464, "open_item": 464, "open_func": 464, "item_path": 464, "popup_menu": 464, "pypackag": 464, "numarrai": 464, "oldpackag": 464, "gpg": 464, "unclean": 464, "holger": 464, "krekel": 464, "tidier": 464, "pylib": 464, "pycheck": 464, "exception1": 464, "exception2": 464, "hackish": 464, "trivia": 464, "phillip": [464, 465, 468, 472, 476], "ebi": [464, 465, 468, 472], "288": 464, "20160321211320": 464, "sidh": 464, "000178": 464, "sugalski": 464, "db_connect": [464, 465], "databaseconnect": [464, 465], "flawlessli": [464, 465], "db_transact": [464, 465], "mgr1": [464, 465], "mgr2": [464, 465], "version2": 464, "whatsnew": 464, "lp64_wp": 464, "unreason": 464, "travi": [464, 465, 466], "oliph": [464, 465, 466], "zerodict": 464, "is_image_fil": 464, "lynn": 464, "bethard": [464, 466, 472, 475], "needforspe": 464, "sprint": [464, 465], "reykjavik": 464, "ewt": 464, "llc": 464, "ccp": 464, "mcintyr": [464, 465], "ippolito": [464, 465, 466, 468], "diederich": [464, 468], "immisch": 464, "nel": 464, "mezzo": 464, "cammin": 464, "nostra": 464, "vita": 464, "ritrovai": 464, "una": 464, "selva": 464, "oscura": 464, "che": 464, "diritta": 464, "smarrita": 464, "init_lett": 464, "hotshot": 464, "josh": [464, 465, 475, 476, 478, 479], "spoerri": 464, "bjorn": 464, "tilleniu": 464, "gregori": [464, 465, 466, 468, 469, 470, 471, 474, 476, 477, 478], "schroeder": 464, "antti": 464, "louko": 464, "diego": [464, 478], "petten\u00f2": 464, "gr\u00e9goir": 464, "pybench": 464, "regsub": 464, "statcach": 464, "tzpars": 464, "whrandom": 464, "kiendl": 464, "biondi": 464, "netlink": 464, "linuxjourn": 464, "7356": 464, "group_mask": 464, "getfamili": 464, "getproto": 464, "ih3": 464, "187": 464, "blai": 464, "subvers": [464, 465, 466, 472, 477], "trunk": [464, 465], "45313": 464, "45315": 464, "45355": 464, "45356m": 464, "iterkeyref": 464, "itervalueref": 464, "oleg": [464, 471], "broytmann": 464, "oussoren": [464, 465, 466, 472, 474, 479], "atle": 464, "heller": [464, 465, 466], "dl": [464, 465], "strfry": 464, "71828": 464, "1783957616": 464, "20180410025338": 464, "theller": 464, "elementpath": [464, 477], "20201124024954": 464, "effbot": [464, 466], "textnod": 464, "rss10": 464, "svg": 464, "10px": 464, "320px": 464, "tran": 464, "qty": 464, "rhat": 464, "msoft": 464, "140000000000001": 464, "wsgi_app": 464, "20160331090247": 464, "supervis": 464, "for_loop": 464, "339": 464, "pyparser_astfromstr": [464, 469], "pyparser_astfromfil": [464, 469], "pyast_compil": [464, 469], "ehresman": 464, "kurt": 464, "kaiser": 464, "evan": [464, 479], "256k": 464, "py_loc": 464, "py_local_inlin": 464, "py_local_aggress": 464, "pyerr_warn": 464, "lll": 464, "2573": 464, "pymem_": 464, "_malloc": 464, "_free": 464, "ralf": [464, 465], "gross": 464, "kunstlev": 464, "iain": 464, "pryor": 464, "rovner": 464, "weikart": 464, "361": 465, "259": 465, "py3kwarn": 465, "py_py3kwarningflag": 465, "3100": 465, "committe": 465, "jira": 465, "launchpad": 465, "trac": 465, "upfront": 465, "stellenbosch": 465, "africa": 465, "ream": 465, "python26": 465, "39916800": 465, "51090942171709440000": 465, "8222838654177922817725562880000000": 465, "33452526613163807108170062053440751665152000000000": 465, "mgr": 465, "15511187532873822802242430164693032110632597200169861120000": 465, "jess": [465, 468, 475, 476, 477], "noller": [465, 468], "oudkerk": [465, 473, 474], "last_login": 465, "npython": 465, "6a1": 465, "61261m": 465, "5367": 465, "mp4": 465, "banquet": 465, "invoic": 465, "750000e": 465, "6564": 465, "talin": 465, "u751f": 465, "u3080": 465, "u304": 465, "u3000": 465, "u3054": 465, "u3081": 465, "u305f": 465, "u307": 465, "pystringobject": 465, "u21ef": 465, "u3244": 465, "x87": 465, "x89": 465, "u31ef": 465, "cstringio": [465, 467], "stutzbach": [465, 466, 472], "verdon": 465, "doerwald": 465, "lownd": 465, "pybuf_lock": 465, "carl": [465, 466, 471, 472, 473, 478, 479], "bank": 465, "vagu": 465, "printabletyp": 465, "drawabl": 465, "draw_doubl": 465, "aranguren": 465, "0o21": 465, "0b101111": 465, "052": 465, "173": 465, "0b10101101": 465, "1101": 465, "0b1101": 465, "patrick": [465, 469], "maupin": 465, "undergo": 465, "yasskin": [465, 466, 472], "guil": 465, "r5r": 465, "66666666666666663": 465, "40000000000000002": 465, "7074029114692207l": 465, "2251799813685248l": 465, "6004799503160661l": 465, "18014398509481984l": 465, "andi": [465, 468], "chu": [465, 468], "1739468": [465, 468, 475], "2196": 465, "ud": 465, "1686487": 465, "amauri": [465, 466, 468, 472], "forgeot": [465, 466, 468, 472], "3473": 465, "2719": 465, "abc123": 465, "cdf246": 465, "1635": 465, "1640": 465, "3008": 465, "e000000000000p": 465, "5555555555555p": 465, "niceti": 465, "dickinson": [465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "2235": 465, "austin": 465, "1537": 465, "1473257": 465, "1444529": 465, "cplx": 465, "1491866": 465, "bengt": 465, "richter": 465, "1193128": 465, "1591665": 465, "im_self": 465, "1631171": 465, "jacob": [465, 470, 471], "1700288": 465, "py_tpflags_have_version_tag": 465, "1878": 465, "pitrou": [465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479], "1819": 465, "jvm": 465, "josiah": [465, 473], "carlson": [465, 473], "1736190": 465, "jes\u00fa": [465, 466, 473, 476, 477], "cea": [465, 466, 473, 476, 477], "avi\u00f3n": [465, 466, 473, 476, 477], "jcea": [465, 466, 467], "programacion": [465, 467], "dbshelv": 465, "barn": [465, 477], "fiori": 465, "nubi": 465, "1817": 465, "600362": 465, "1381": 465, "var_typ": 465, "amplitud": 465, "dq": 465, "arvin": 465, "schnell": 465, "1638033": 465, "fabian": 465, "kreutz": 465, "insert_mod": 465, "1158": 465, "7182818": 465, "9999999895305022877376682436": 465, "1221598": 465, "1739906": 465, "1001604": 465, "iter1": 465, "iter2": 465, "getmoduleinfo": [465, 476], "getarg": 465, "izip_longest": 465, "2n": 465, "2138": 465, "brouwer": 465, "2819": 465, "711019": 465, "lenton": 465, "wine": 465, "petrosyan": 465, "inst_nam": 465, "_helper": 465, "levinson": 465, "1663329": 465, "horcicka": 465, "1181": 465, "1273829": 465, "1115886": 465, "barran": 465, "1339796": 465, "957650": 465, "1393667": 465, "1106316": 465, "exception_hierarchi": 465, "2439": 465, "achim": 465, "gaedk": 465, "1137": 465, "shawn": 465, "ligocki": 465, "1727780": 465, "wladmir": 465, "laan": 465, "1681432": 465, "hoyt": [465, 475], "schmitt": 465, "846388": 465, "3487": 465, "lorenz": 465, "2250": 465, "1861": 465, "pollobj": 465, "1657": 465, "ziad\u00e9": [465, 466, 472, 475], "2663": 465, "1583": 465, "guilherm": [465, 466, 468, 474, 476, 477], "polo": [465, 466, 468, 474, 476, 477], "2240": 465, "2033": 465, "leif": 465, "hedstrom": 465, "957003": 465, "3207": 465, "fenner": 465, "829951": 465, "alberto": [465, 473], "bertogli": 465, "1646": 465, "pomran": 465, "pedro": 465, "werneck": 465, "742598": 465, "1193577": 465, "remahl": 465, "1534": 465, "schuppeni": 465, "2898": 465, "1648": 465, "damien": [465, 474], "miller": [465, 474], "1537850": 465, "dustin": 465, "mitchel": [465, 470], "test_support": [465, 467], "transientresourc": 465, "sf": 465, "3781": 465, "wrec": 465, "dwayn": 465, "bailei": 465, "1581073": 465, "2871": 465, "erik": [465, 470, 471, 477], "demain": 465, "1533909": 465, "2906": 465, "gregor": 465, "lingl": 465, "1513695": 465, "ftpwrapper": 465, "3811": 465, "1599845": 465, "_send_traceback_head": 465, "1330538": 465, "riku": 465, "lindblad": 465, "2985": 465, "251": 465, "sysmodul": 465, "467924": 465, "horler": 465, "1775025": 465, "alexei": [465, 474, 475], "borzenkov": 465, "1734346": 465, "ronach": [465, 466, 468, 472, 473, 474], "abcdefghijklm": 465, "stararg": 465, "iterable1": 465, "__hex__": [465, 467], "__oct__": [465, 467], "in_json": 465, "simplejson": [465, 466], "data_struct": 465, "lastaccess": 465, "plist_str": 465, "writeplisttostr": 465, "new_struct": 465, "readplistfromstr": 465, "writeplist": [465, 474], "readplist": [465, 474, 477], "1649190": 465, "outset": 465, "1798": 465, "janssen": 465, "bgenloc": 465, "buildtool": 465, "bundlebuild": 465, "fpformat": 465, "gensuitemodul": 465, "imageop": 465, "imgfil": 465, "mhlib": 465, "mimetool": 465, "multifil": 465, "toaiff": 465, "gopherlib": [465, 467], "mimewrit": 465, "mimifi": 465, "rgbimg": 465, "duncan": 465, "grisbi": 465, "pyfile_incusecount": 465, "pyfile_decusecount": 465, "1675423": 465, "1629": 465, "1530959": 465, "free_list": 465, "numfre": 465, "_maxfreelist": 465, "patchcheck": 465, "nt4": 465, "sp4": 465, "1753245": 465, "flori": 465, "bruynoogh": 465, "2125": 465, "macf": 465, "macostool": 465, "1490190": 465, "_builtinsuit": 465, "aepack": 465, "aetool": 465, "aetyp": 465, "applesingl": 465, "appletrawmain": 465, "appletrunn": 465, "argvemul": 465, "audio_mac": 465, "autogil": 465, "carbon": [465, 472], "cfmfile": 465, "codewarrior": 465, "colorpick": 465, "easydialog": 465, "findertool": 465, "icglu": 465, "icopen": 465, "macerror": 465, "macresourc": 465, "miniaefram": 465, "nav": 465, "osaterminologi": 465, "pimp": 465, "pixmapwrapp": 465, "stdsuit": 465, "systemev": 465, "terminalcommand": 465, "cddb": 465, "cdplayer": 465, "fl": 465, "flp": 465, "fm": 465, "glw": 465, "gl": 465, "panelpars": 465, "readcd": 465, "sv": 465, "torgb": 465, "videoread": 465, "1683368": 465, "conversionsyntax": 465, "1706815": 465, "dict1": 465, "dict2": 465, "ralph": 465, "corderoi": 465, "lambach": 465, "michlmayr": 465, "warner": 465, "373": 466, "7319": 466, "reenabl": 466, "qwarn": 466, "744": 466, "073": 466, "551": 466, "616": [466, 479], "is_verbos": 466, "1mb": 466, "configdict": 466, "netlog": 466, "netlogg": 466, "vk": 466, "revamp": [466, 472], "vassalotti": [466, 468, 472, 474], "0x37f850": 466, "0x37f080": 466, "122": [466, 476], "mb": 466, "2335": 466, "aaa": 466, "aaaaa": 466, "2333": 466, "codereview": 466, "appspot": [466, 468, 472], "53094": [466, 468, 472], "icc": [466, 468], "suncc": 466, "7117": 466, "295147905179352891391": 466, "9514790517935283e": 466, "65535l": 466, "9514790517935289e": 466, "3166": 466, "1811": 466, "meador": [466, 473], "5211": 466, "5237": [466, 468], "1588": 466, "7988": 466, "3382": 466, "7994": [466, 474], "124": [466, 468, 472, 474], "johansson": [466, 468], "victor": [466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "stinner": [466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "3439": [466, 468], "7902": 466, "1583863": 466, "4759": 466, "5982": 466, "7604": 466, "belchenko": 466, "1616979": [466, 472], "8016": 466, "kaliszewski": 466, "4764": 466, "5677": 466, "lingard": 466, "7362": 466, "8268": 466, "7140": 466, "curtin": [466, 472, 473, 474, 477], "survivor": 466, "4074": 466, "4688": [466, 468], "long_info": 466, "4258": [466, 468, 478], "5260": 466, "5512": 466, "1087418": 466, "5176": 466, "4715": 466, "gawain": [466, 472], "bolton": [466, 472], "6713": [466, 472], "florent": [466, 472], "xicluna": [466, 472], "7462": [466, 472], "7622": [466, 472], "mcguir": [466, 468], "5084": [466, 468], "5670": 466, "maru": 466, "senthil": [466, 469, 472, 474, 475, 476, 477, 478, 479], "kumaran": [466, 469, 472, 474, 475, 476, 477, 478, 479], "5142": 466, "7703": 466, "2devel9": 466, "8156": 466, "hagen": 466, "f\u00fcrstenau": 466, "3860": 466, "1696199": [466, 468], "field1": 466, "field2": 466, "_2": [466, 468], "1818": [466, 468], "8729": 466, "kindahl": 466, "7005": 466, "3924": 466, "1515": 466, "4606": 466, "klose": [466, 473, 476], "8142": 466, "5788": 466, "4796": 466, "2531": [466, 472], "8257": [466, 472], "6595": 466, "jos\u00e9": 466, "conti": 466, "7633": 466, "6857": 466, "7279": 466, "anatoli": 466, "techtonik": 466, "7585": 466, "8688": 466, "lennart": 466, "regebro": 466, "7490": 466, "murrai": [466, 472, 474, 475, 476], "1368247": 466, "5812": 466, "8294": [466, 472], "oversight": [466, 473, 475, 477], "giampaolo": [466, 471, 472, 473, 475, 477, 478], "rodola": [466, 471, 472, 475, 477], "2054": 466, "mouzo": 466, "6845": 466, "5479": 466, "nir": [466, 472, 473, 477], "7471": [466, 472], "jacqu": 466, "frechet": 466, "4272": 466, "tadek": 466, "pietraszek": 466, "2846": [466, 472], "chenet": [466, 472], "7418": [466, 472], "kristj\u00e1n": [466, 472, 474], "valur": [466, 472, 474], "j\u00f3nsson": [466, 472, 474], "4879": 466, "eldon": 466, "ziegler": 466, "derek": [466, 468], "morr": [466, 468], "1655": [466, 468], "_pyio": [466, 468, 471], "4991": 466, "chambon": 466, "6939": 466, "5032": 466, "4816": 466, "4136": [466, 468], "5381": 466, "1607951": 466, "6896": 466, "nirina": 466, "raseliarison": 466, "3366": 466, "lekma": 466, "5585": 466, "cazabon": 466, "6963": 466, "1664": [466, 468], "6508": 466, "calderon": [466, 473], "7333": 466, "zsolt": 466, "cserna": 466, "7242": 466, "matt": [466, 474, 475], "giuca": 466, "5827": 466, "3426": 466, "laban": [466, 468], "4739": [466, 468], "6816": 466, "3002": 466, "francoi": 466, "natali": [466, 473, 474, 475], "8354": 466, "6693": [466, 472], "8104": 466, "nagl": 466, "disable_nagle_algorithm": 466, "6192": 466, "6267": 466, "7133": 466, "ssl_mode_auto_retri": 466, "8222": 466, "8322": [466, 472], "beda": 466, "kosata": 466, "8484": [466, 472], "8321": [466, 472], "bbhhiillqq": 466, "1523": 466, "8300": 466, "disk0s2": 466, "52g": 466, "49g": 466, "0g": 466, "1068268": 466, "8451": 466, "4285": [466, 468], "7766": 466, "unnot": 466, "7357": 466, "lesher": 466, "1674032": 466, "unihan": 466, "ander": [466, 469, 477], "chrigstr\u00f6m": 466, "1571184": 466, "8024": 466, "2987": [466, 472], "1080": 466, "200c": 466, "417a": 466, "ampersand": 466, "style1": 466, "muller": 466, "2746": 466, "encode_threshold": 466, "5511": 466, "kuba": 466, "wieczorek": 466, "4710": 466, "7610": [466, 472], "gabriel": [466, 470], "genellina": 466, "4756": 466, "6003": 466, "anydbm": [466, 467], "file_util": 466, "distutils2": 466, "tck": 466, "tcl8": 466, "tkcmd": 466, "ttk_intro": 466, "screenshot": 466, "2983": [466, 468], "franklin": 466, "walzer": [466, 472], "2618": 466, "unittest2": 466, "nose": 466, "6001": 466, "impati": 466, "dyer": 466, "8074": 466, "1034053": 466, "5663": 466, "4444": 466, "5679": 466, "2578": 466, "7031": 466, "assertnotregexpmatch": [466, 470, 471], "8038": 466, "assertitemsequ": 466, "assertdictcontainssubset": [466, 468, 471, 472], "roddi": 466, "6866": 466, "fern\u00e1ndez": 466, "3379": 466, "5728": 466, "awkwardli": 466, "20210619163128": 466, "shtml": 466, "getiter": [466, 472, 478, 479], "childless": 466, "20200703234532": 466, "6472": [466, 472], "bt": 466, "8032": 466, "3632": 466, "4293": 466, "7033": [466, 472], "horsen": 466, "7528": 466, "7767": [466, 472], "trojan": 466, "hors": 466, "5753": [466, 472], "py_isalnum": 466, "py_isalpha": 466, "py_isdigit": 466, "py_islow": 466, "py_isspac": 466, "py_isupp": 466, "py_isxdigit": 466, "py_toupp": 466, "5793": 466, "pyeval_callobject": [466, 472, 479], "8276": [466, 472], "pystring_fromformat": 466, "pystring_fromformatv": 466, "7228": 466, "1590864": 466, "_shutdown": 466, "1722344": 466, "t_string_inplac": 466, "3102": [466, 467], "arfrev": [466, 472], "freht": [466, 472], "taifersar": [466, 472], "arahesi": [466, 472], "7609": 466, "2422": [466, 472], "6491": 466, "x87_double_round": 466, "2937": 466, "ldcxxshare": 466, "1222585": 466, "clinton": 466, "roi": 466, "3585": 466, "6094": 466, "ucnhash_capi": [466, 469], "pycobject": [466, 468, 472], "vtabl": 466, "pycobject_asvoidptr": 466, "5630": [466, 468], "crtassem": 466, "crt_assembly_vers": 466, "vc_assembly_publickeytoken": 466, "libraries_assembly_name_prefix": 466, "cournapeau": 466, "4365": 466, "7347": 466, "_beginthreadex": 466, "3582": 466, "miki": [466, 472], "tebeka": [466, 472], "1220212": 466, "hirokazu": [466, 473], "yamamoto": [466, 473, 477], "5913": 466, "mimelib": 466, "4969": 466, "4865": 466, "28440": 466, "so_setfib": 466, "kyle": [466, 469, 476, 477, 478, 479], "vanderbeek": 466, "8235": 466, "iobench": 466, "ccbench": 466, "throughput": [466, 477], "5464": 466, "ziga": 466, "seilnacht": 466, "1180193": 466, "randse": 466, "6152": [466, 475], "7312": 466, "piotr": 466, "o\u017carowski": 466, "8233": 466, "1533": 466, "5920": 466, "6101": 466, "7853": 466, "leander": 466, "anand": [466, 472], "pillai": [466, 472], "7150": 466, "7348": 466, "5080": 466, "pythonshowrefcount": 466, "31733": 466, "count_alloc": [466, 476, 479], "pythonshowalloccount": 466, "31692": 466, "gaynor": [466, 469, 475], "21306": 466, "1g": 466, "zachari": [466, 474, 475, 477], "ware": [466, 474, 475, 477], "21462": 466, "21304": 466, "21671": 466, "0224": 466, "tls1": 466, "reid": [466, 472], "21308": 466, "21305": 466, "21307": 466, "stufft": [466, 474], "deili": [466, 472, 474, 479], "pythonhttpsverifi": 466, "_https_verify_certif": 466, "autotool": [466, 475, 476], "pregener": [466, 475, 476], "23404": [466, 475, 476], "philip": [466, 471, 472, 476], "jenvei": [466, 472], "ryan": [466, 473, 474, 476, 477], "lovett": 466, "hugh": 466, "secker": 466, "walker": 466, "cruft": 467, "wealth": 467, "softspac": 467, "retrain": 467, "corollari": 467, "incompar": 467, "0720": 467, "0o720": 467, "loudli": 467, "unixi": 467, "3138": 467, "some_sequ": 467, "274": 467, "vindic": 467, "3109": 467, "crutch": 467, "item1": 467, "item2": 467, "3113": 467, "b_c": 467, "3108": 467, "beo": 467, "instabl": 467, "disobei": 467, "copy_reg": 467, "markupbas": 467, "_markupbas": [467, 469], "dbhash": 467, "htmlentitydef": 467, "basehttpserv": 467, "cgihttpserv": 467, "simplehttpserv": 467, "acquire_lock": [467, 471], "release_lock": [467, 471], "jumpahead": 467, "tmpnam": 467, "tempnam": 467, "tmpfile": 467, "secondaryexcept": 467, "primary_except": 467, "__getslice__": 467, "__setslice__": 467, "__delslice__": 467, "3114": 467, "func_x": 467, "__x__": 467, "func_cod": 467, "func_default": 467, "func_dict": 467, "func_doc": 467, "func_glob": 467, "3111": 467, "tru64": 467, "3123": 467, "pynumber_coerc": 467, "pynumber_coerceex": 467, "pymember_get": 467, "pymember_set": 467, "nb_nonzero": 467, "with_cycle_gc": 467, "contort": 467, "8901234": 468, "12j": 468, "600000": 468, "901": 468, "120000j": 468, "underwai": 468, "camelot": 468, "5675": [468, 472], "mattia": [468, 472], "br\u00e4ndstr\u00f6m": [468, 472], "4707": 468, "199999999999ap": 468, "1580": 468, "namesak": 468, "lv": 468, "ov": 468, "oe": 468, "_0": 468, "query_field": 468, "userqueri": 468, "4384": 468, "vajda": 468, "4195": 468, "4201": 468, "5228": 468, "testgizmo": 468, "test_gizmo_on_window": 468, "test_gimzo_without_required_librari": 468, "builtout": 468, "test_division_by_zero": 468, "confound": 468, "remap": 468, "c__builtin__": 468, "nset": 468, "np0": 468, "lp1": 468, "nl1l": 468, "nal2l": 468, "nal3l": 468, "natp2": 468, "nrp3": 468, "6137": 468, "sunpro": 468, "4753": 468, "4868": 468, "roger": [468, 479], "serwi": 468, "5150": [468, 472], "lisandro": 468, "dalcrin": 468, "5175": 468, "pynumber_int": 468, "4910": 468, "5914": 468, "7182818284590451": 468, "718281828459045": 468, "salgado": [469, 470, 475, 478, 479], "635": 469, "12782": 469, "632": [469, 471], "624": [469, 470], "ctxmanag": 469, "ctxmanager1": 469, "ctxmanager2": 469, "example1": 469, "example2": 469, "ctxmanager3": 469, "example3": 469, "lysandro": [469, 471, 479], "nikola": [469, 471, 479], "40334": [469, 479], "some_other_cod": 469, "eol": 469, "42864": 469, "batuhan": [469, 470, 471, 479], "taskaya": [469, 470, 471, 479], "40176": 469, "43914": 469, "rocket": 469, "event_horizon": 469, "42997": 469, "unparenthesis": 469, "43017": 469, "43822": 469, "build_dyson_spher": 469, "notenoughscienceerror": 469, "notenoughresourceserror": 469, "43149": 469, "43823": 469, "44305": 469, "43797": 469, "all_black_hol": 469, "revel": 469, "41064": 469, "lel": 469, "namedtoplo": 469, "38530": 469, "schwarzschild_black_hol": 469, "schwarschild_black_hol": 469, "pattern_1": 469, "action_1": 469, "pattern_2": 469, "action_2": 469, "pattern_3": 469, "action_3": 469, "action_wildcard": 469, "scala": 469, "elixir": 469, "imper": 469, "insur": 469, "test_vari": 469, "maggi": [469, 478], "moss": 469, "prado": 469, "41428": 469, "yurii": [469, 470, 479], "karaba": [469, 470, 479], "44490": 469, "jin": [469, 470, 471, 476, 477, 478, 479], "41559": 469, "jell": [469, 470, 471, 476, 477], "zijlstra": [469, 470, 471, 476, 477], "43783": 469, "mendoza": [469, 470], "unannot": 469, "strcach": 469, "log_prefix": 469, "mikhail": 469, "golubev": 469, "41923": 469, "43766": 469, "traut": [469, 470, 471], "nikla": [469, 470], "fieka": 469, "29882": 469, "sweenei": [469, 470, 471, 479], "40890": 469, "37999": 469, "shkop": 469, "38302": 469, "shannon": [469, 470, 471, 473, 477, 478, 479], "42990": 469, "joshua": [469, 475], "bronson": [469, 478], "pope": 469, "justin": [469, 473], "wang": [469, 471, 477], "31861": 469, "43682": 469, "42737": 469, "43901": 469, "42725": 469, "effectless": 469, "43475": 469, "donghe": [469, 470, 471, 478, 479], "45000": 469, "gr\u00f6nholm": [469, 470, 478], "41332": 469, "9694": 469, "lorentsen": [469, 477], "zackeri": [469, 470, 478, 479], "spytz": [469, 470, 478, 479], "31956": 469, "clearbreakpoint": 469, "irit": [469, 470, 471], "katriel": [469, 470, 471], "24160": 469, "4356": 469, "hai": [469, 470], "shi": [469, 470], "41842": 469, "42195": [469, 479], "joongi": 469, "kim": 469, "41229": 469, "gringauz": 469, "41543": 469, "kintscher": 469, "petter": [469, 478], "jansson": 469, "36982": 469, "39273": 469, "42269": 469, "43532": 469, "bdist_wheel": [469, 470, 478, 479], "42802": 469, "42133": 469, "normalize_encod": [469, 479], "39337": 469, "enum_nam": 469, "ethan": [469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "furman": [469, 471, 473, 474, 475, 476, 477], "40066": 469, "41816": 469, "inada": [469, 470, 471, 475, 476, 477, 478, 479], "naoki": [469, 470, 471, 475, 476, 477, 478, 479], "43712": 469, "5758": 469, "44466": 469, "43439": 469, "38144": 469, "43669": 469, "38820": 469, "43880": 469, "40645": 469, "hilton": [469, 470, 471, 479], "43008": [469, 479], "40468": [469, 479], "33962": [469, 479], "sidebar": 469, "tal": [469, 475, 476, 477, 478], "einat": [469, 475, 476, 477, 478], "37903": 469, "37892": 469, "44010": 469, "pyi": [469, 470, 479], "waygood": [469, 470, 471, 479], "45447": [469, 470, 479], "95191": [469, 470], "relatedli": 469, "from_funct": [469, 470, 475], "43817": 469, "38200": 469, "rto": 469, "peix": 469, "xin": 469, "41440": 469, "eventfd2": 469, "41001": 469, "41625": 469, "43106": 469, "barnei": [469, 471], "gale": [469, 471], "43757": 469, "35498": 469, "yaroslav": 469, "pankovych": 469, "21041": 469, "link_to": [469, 470, 478], "39950": 469, "39906": 469, "28468": 469, "sblondon": 469, "42914": 469, "lewi": 469, "gaul": 469, "43080": 469, "schevchenko": 469, "38731": 469, "avir": 469, "srivastava": 469, "38307": 469, "34204": 469, "tymoteusz": 469, "wo\u0142od\u017ako": 469, "38490": 469, "42413": 469, "mptcp": 469, "rui": 469, "cunha": 469, "43571": 469, "ToS": 469, "dscp": 469, "ecn": 469, "sauthoff": 469, "44077": 469, "43794": 469, "43788": 469, "43791": 469, "43799": 469, "43920": 469, "43789": 469, "43811": 469, "hynek": [469, 473, 474], "schlawack": [469, 473, 474], "43998": 469, "31870": 469, "42333": 469, "l0x": 469, "40849": 469, "erlend": [469, 470, 471], "aasland": [469, 470, 471], "43762": 469, "23427": 469, "42955": 469, "43356": 469, "mario": [469, 477], "corchero": [469, 477], "42251": 469, "42308": 469, "bussonni": [469, 477, 478], "26389": 469, "beek": 469, "41810": 469, "42345": [469, 479], "41792": 469, "38908": 469, "sebastian": [469, 470], "rittau": [469, 470], "yan": 469, "choi": 469, "39385": 469, "goldschmidt": [469, 476, 477, 478, 479], "42967": [469, 476, 477, 478, 479], "jonathan": [469, 473, 475, 478], "gossag": 469, "35018": 469, "42131": 469, "desmond": 469, "cheong": 469, "14678": 469, "41334": 469, "41006": 469, "41718": 469, "yuri": [469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "selivanov": [469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "42093": 469, "42927": 469, "micropython": 469, "38980": 469, "_compress": 469, "decompressread": 469, "09x": 469, "20x": [469, 471], "32x": 469, "11x": 469, "18x": 469, "lin": [469, 470], "41486": 469, "42202": 469, "str1": 469, "str2": 469, "crochemor": 469, "41972": 469, "dino": [469, 476, 479], "viehland": [469, 476, 479], "43452": 469, "jeroen": [469, 476, 478, 479], "demey": [469, 476, 478, 479], "43575": 469, "43287": 469, "41922": 469, "41873": 469, "41870": 469, "43785": 469, "0in": [469, 471], "1or": [469, 471], "0if": [469, 471], "1els": [469, 471], "0x1for": [469, 471], "43833": 469, "37319": 469, "26131": 469, "zimport": 469, "42134": 469, "43672": 469, "42135": 469, "set_package_wrapp": [469, 470], "set_loader_wrapp": [469, 470], "module_for_load": [469, 470, 471, 474], "impimport": [469, 470, 471], "impload": [469, 470, 471], "43720": 469, "42137": 469, "frozenload": [469, 470], "builtinload": [469, 470], "42136": 469, "optimizedunicod": [469, 470, 471], "42264": 469, "enable_shared_cach": [469, 470, 471], "24464": 469, "87889": 469, "41139": 469, "sslsslcontext": 469, "protocol_sslv2": 469, "rand_pseudo_byt": [469, 471, 473], "pythonthreaddebug": [469, 470], "44584": 469, "41974": 469, "parserbas": 469, "berker": [469, 474, 475, 476, 477, 478], "peksag": [469, 474, 475, 476, 477, 478], "31844": 469, "_pyunicode_name_capi": 469, "42157": 469, "graminit": 469, "pyparser_simpleparsestringflag": [469, 479], "pyparser_simpleparsestringflagsfilenam": [469, 479], "pyparser_simpleparsefileflag": [469, 479], "pynode_compil": [469, 479], "42299": 469, "pymodule_getwarningsmodul": 469, "42599": 469, "37324": 469, "multifold": 469, "svetlov": [469, 470, 474, 477, 478, 479], "stanlei": [469, 476, 477, 478, 479], "42392": 469, "42639": 469, "42393": 469, "_node": 469, "io_modul": 469, "import_importmodul": 469, "source_bytes_object": 469, "source_buf": 469, "wordcod": [469, 476], "36020": 469, "sergei": [469, 470, 479], "fedoseev": [469, 479], "40744": 469, "40810": 469, "xavier": [469, 474, 476, 477], "gay": [469, 474, 476, 477], "petazzoni": 469, "27640": 469, "42856": 469, "43103": 469, "tcltk": [469, 470, 472, 479], "manoli": 469, "stamatogiannaki": 469, "42603": 469, "43466": 469, "petr": [469, 470, 471, 475, 477, 478, 479], "viktorin": [469, 470, 471, 475, 478, 479], "43795": 469, "40792": 469, "30155": 469, "matveev": [469, 471, 478], "41756": 469, "41784": 469, "1635741": 469, "42262": 469, "42423": 469, "41832": 469, "41073": 469, "43277": 469, "36465": [469, 478], "43688": 469, "43753": 469, "43916": 469, "43908": [469, 470], "40943": 469, "new_refcnt": 469, "0x030900a4": [469, 470], "39573": [469, 470], "40839": 469, "pyunicode_fromunicod": [469, 470, 471, 473, 479], "36346": [469, 479], "42260": 469, "30459": 469, "odictobject": 469, "parser_interfac": 469, "picklebufobject": 469, "pyarena": 469, "pyfp": [469, 479], "pytim": 469, "sim": 469, "35134": [469, 470, 478], "py_frozenmain": 469, "26241": 469, "pyunicode_internimmort": [469, 470, 471], "41692": 469, "py_unicode_str": 469, "41123": [469, 470], "py_unicode_strlen": [469, 473], "py_unicode_strcat": [469, 473], "py_unicode_strcpi": [469, 473], "py_unicode_strncpi": [469, 473], "py_unicode_strcmp": [469, 473], "py_unicode_strncmp": [469, 473], "py_unicode_strchr": [469, 473], "py_unicode_strrchr": [469, 473], "pyunicode_getmax": [469, 473], "41103": 469, "pylong_fromunicod": 469, "pyunicode_asunicodecopi": [469, 473], "_py_checkrecursionlimit": [469, 479], "ceval": 469, "recursion_limit": [469, 470], "41834": 469, "py_allow_recurs": 469, "py_end_allow_recurs": 469, "recursion_crit": 469, "41936": 469, "pyos_initinterrupt": 469, "41713": 469, "pyast_valid": 469, "43244": 469, "pyst_getscop": 469, "pysymtable_build": 469, "pysymtable_buildobject": 469, "pysymtable_fre": 469, "py_symtablestr": 469, "py_symtablestringobject": 469, "43868": 469, "winbas": 469, "_mod": 469, "pyast_compileex": 469, "pyast_compileobject": 469, "pyfuture_fromast": 469, "pyfuture_fromastobject": 469, "pyparser_astfromfileobject": 469, "pyparser_astfromfilenam": 469, "pyparser_astfromstringobject": 469, "pyarena_new": 469, "pyarena_fre": 469, "pyarena_malloc": 469, "pyarena_addpyobject": 469, "use_trac": [469, 470], "43760": [469, 470], "25x": 470, "680": 470, "manhattan_dist": 470, "point_1": 470, "point_2": 470, "magic_arithmet": 470, "add_count": 470, "query_us": 470, "query_count": 470, "ammar": [470, 476, 477, 478], "askar": [470, 476, 477, 478], "43950": 470, "45292": 470, "45607": 470, "zac": 470, "hatfield": 470, "dodd": 470, "otherpython": 470, "tensorflow": 470, "rahtz": 470, "43224": 470, "pradeep": 470, "kumar": [470, 471], "srinivasan": 470, "sile": 470, "panther": 470, "47087": 470, "mylock": 470, "myint": 470, "balf": [470, 471], "46534": 470, "table_nam": 470, "47088": 470, "bleanei": 470, "91860": 470, "bont": [470, 471], "46725": 470, "33346": 470, "12022": 470, "44471": 470, "70766": 470, "26579": 470, "57684": 470, "90153": 470, "broke": 470, "grainger": 470, "91181": 470, "24234": 470, "29410": 470, "45711": 470, "_pyerr_stackitem": 470, "bastian": 470, "neuburg": 470, "44934": 470, "46142": 470, "tane": 470, "hukkinen": 470, "40059": 470, "42012": 470, "90908": 470, "90927": 470, "91218": 470, "duprat": 470, "87518": 470, "34975": 470, "46805": 470, "filip": [470, 473, 474, 478], "la\u00edn": 470, "25625": 470, "44674": 470, "kabir": 470, "kwatra": 470, "91973": 470, "ganssl": [470, 471, 477, 478, 479], "80010": 470, "aflag": 470, "kirpichev": 470, "44258": 470, "some_fract": 470, "44547": 470, "46014": 470, "libb2": 470, "47095": 470, "_sha3": 470, "tiny_sha3": 470, "47098": 470, "89313": 470, "weipeng": [470, 478], "hong": [470, 478], "30533": 470, "hakan": 470, "\u00e7elik": 470, "29418": 470, "88116": 470, "andrei": 470, "kulakovin": 470, "88024": 470, "kiril": 470, "pinchuk": 470, "88457": 470, "gideon": 470, "45917": 470, "ajith": 470, "ramachandran": 470, "44357": 470, "44339": 470, "46917": 470, "antoni": 470, "44019": 470, "44611": 470, "eisuk": 470, "kawasima": 470, "22276": 470, "33392": 470, "433030": 470, "46245": 470, "klausner": 470, "30512": 470, "29980": 470, "44491": 470, "44688": 470, "aviv": [470, 476, 478], "palivoda": [470, 476, 478], "shahaf": [470, 475], "16379": 470, "24139": 470, "45243": 470, "45613": 470, "45828": 470, "44092": 470, "41930": 470, "34916": 470, "24905": 470, "keho": 470, "90465": 470, "46328": 470, "miro": 470, "hron\u010dok": 470, "45413": 470, "carei": 470, "metcalf": 470, "70363": 470, "sem_clockwait": 470, "41710": 470, "sz\u0151ke": 470, "21302": 470, "45429": 470, "info_patchlevel": 470, "91827": 470, "44569": 470, "33809": 470, "90633": 470, "90572": 470, "90638": 470, "samodya": 470, "abeysiriwardan": 470, "89026": 470, "43923": 470, "shantanu": [470, 471], "jain": [470, 471], "91154": 470, "90500": 470, "89263": 470, "adrian": [470, 471, 477], "badarasco": 470, "88970": 470, "91137": 470, "loosen": 470, "_type_check": 470, "beauregard": 470, "90802": 470, "rosenstein": 470, "85542": 470, "nikita": [470, 471], "sobolev": [470, 471], "90353": 470, "90711": 470, "90729": 470, "45190": 470, "45046": 470, "47074": 470, "turnbul": 470, "28080": 470, "ezeh": 470, "49083": 470, "miguel": 470, "brito": 470, "88261": 470, "28307": 470, "90564": 470, "behnel": [470, 474, 475, 477, 478], "68264": 470, "91165": 470, "272": 470, "46845": 470, "msoxzw": 470, "91487": 470, "37295": 470, "90415": 470, "44987": 470, "pyperform": 470, "aditya": [470, 471], "sped": [470, 472, 475, 478, 479], "44590": 470, "7x": 470, "45256": 470, "outperform": 470, "superinstruct": 470, "brunthal": 470, "brandt": [470, 471, 479], "bucher": [470, 471, 479], "45947": 470, "45340": 470, "40116": 470, "40222": 470, "91404": 470, "2x": [470, 471, 473, 476], "bloomberg": 470, "async_gen_wrap": 470, "prep_reraise_star": 470, "binary_": 470, "inplace_": 470, "call_function_kw": [470, 476], "call_method": [470, 477], "precal": [470, 471], "dup_top": 470, "dup_top_two": 470, "rot_two": 470, "rot_thre": 470, "rot_four": [470, 478], "rot_n": 470, "jump_if_not_exc_match": [470, 479], "jump_absolut": 470, "pop_jump_backward_if_": 470, "pop_jump_forward_if_": 470, "not_non": 470, "setup_async_with": 470, "jump_if_true_or_pop": [470, 471], "jump_if_false_or_pop": [470, 471], "89874": [470, 471], "copy_dict_without_kei": 470, "gen_start": 470, "19072": 470, "89519": [470, 471], "81548": 470, "44977": 470, "47061": 470, "68966": 470, "hugo": [470, 471, 474, 479], "kemenad": [470, 471, 479], "47022": 470, "40360": [470, 479], "sre_compil": 470, "sre_const": [470, 475], "sre_pars": 470, "47152": 470, "safeconfigpars": [470, 471, 472], "45173": 470, "legacyinterpol": [470, 471], "46607": 470, "90817": [470, 471], "91760": [470, 471], "92728": 470, "45837": 470, "unplan": 470, "jingchen": 470, "90224": 470, "untest": 470, "42255": 470, "findtestcas": [470, 471], "makesuit": [470, 471], "5846": 470, "usageexit": [470, 471], "dam\u00e1zio": 470, "67048": [470, 471], "illia": 470, "volochii": 470, "43216": 470, "corowrapp": 470, "45129": 470, "binhex": [470, 479], "a2b_hqx": [470, 479], "b2a_hqx": [470, 479], "rlecode_hqx": [470, 479], "rldecode_hqx": 470, "45085": 470, "bdist_msi": [470, 479], "45124": 470, "45132": 470, "lgettext": [470, 478], "ldgettext": [470, 478], "lngettext": [470, 478], "ldngettext": [470, 478], "set_output_charset": [470, 478], "44235": 470, "formatargspec": [470, 475], "from_builtin": [470, 475], "45320": 470, "46483": 470, "mailmanproxi": [470, 479], "35800": [470, 479], "tkapptyp": [470, 479], "38371": [470, 479], "23882": 470, "__set_format__": 470, "__setformat__": 470, "46852": 470, "experimental_isolated_subinterpret": 470, "pynch": 470, "37330": 470, "93351": 470, "43234": 470, "46659": 470, "sriniva": [470, 477], "reddi": [470, 477], "thatiparthi": [470, 477], "\u0c36": 470, "\u0c30": 470, "\u0c28": 470, "\u0c35": 470, "\u0c38": 470, "\u0c21": 470, "\u0c24": 470, "\u0c1f": 470, "\u0c2a\u0c30": 470, "41137": 470, "40465": [470, 479], "47066": 470, "35859": 470, "84461": 470, "90473": 470, "95085": 470, "46656": 470, "45440": 470, "46640": 470, "py_no_nan": 470, "46996": 470, "libnsl": 470, "libsqlite3": 470, "libcrypt": 470, "egeberg": 470, "45847": 470, "45747": 470, "45763": 470, "gilbert": 470, "45433": 470, "holman": 470, "44340": 470, "45522": 470, "45548": 470, "45570": 470, "45571": 470, "43974": 470, "tcltk_cflag": 470, "tcltk_lib": 470, "rhel": [470, 477], "ltk8": 470, "ltkstub8": 470, "ltcl8": 470, "rhel7": 470, "sizeof_void_p": 470, "45569": 470, "42035": 470, "tornetta": 470, "43931": 470, "45459": 470, "46613": 470, "46906": 470, "46343": 470, "89653": 470, "46608": 470, "exception_t": 470, "46841": 470, "92154": 470, "94936": 470, "py_trashcan_safe_begin": [470, 479], "py_trashcan_safe_end": [470, 479], "py_trashcan_begin": [470, 479], "py_trashcan_end": [470, 479], "mytype_dealloc": 470, "0x03080000": [470, 478], "cpy_trashcan_begin": 470, "cpy_trashcan_end": 470, "44263": 470, "new_typ": 470, "_py_set_typ": 470, "_py_set_s": 470, "0x030b0000": 470, "45434": 470, "cellobject": 470, "genobject": 470, "longintrepr": 470, "pyunicode_check_intern": 470, "46007": 470, "93937": 470, "f_blockstack": 470, "f_gen": 470, "f_iblock": 470, "f_stackdepth": 470, "f_state": 470, "f_frame": 470, "f_localsplu": 470, "localsplu": 470, "f_valuestack": 470, "pyframe_fasttolocalswitherror": 470, "pyframe_localstofast": 470, "0x030900b1": 470, "pythoncapi_compat": 470, "40429": 470, "recursion_depth": [470, 479], "recursion_remain": 470, "stackcheck_count": 470, "0x030b00a2": 470, "0x030a00a1": 470, "cframe": 470, "c_tracefunc": 470, "c_profilefunc": 470, "pythoncapi": 470, "_py_setprogramfullpath": 470, "88279": 470, "ob_shash": [470, 471], "46864": 470, "pyunicode_as_data": [470, 471, 473], "pyunicode_as_unicod": [470, 471, 473], "pyunicode_asunicodeands": [470, 471, 473, 479], "pyunicode_asunicod": [470, 471, 473, 479], "pyunicode_get_data_s": [470, 471, 473], "pyunicode_get_s": [470, 471, 473], "pyunicode_gets": [470, 471, 473], "pyunicode_is_compact": 470, "pyunicode_is_readi": 470, "pyunicode_wstr_length": [470, 479], "_pyunicode_asunicod": [470, 479], "pyframe_blocksetup": 470, "pyframe_blockpop": 470, "py_adjust_erange1": 470, "py_adjust_erange2": 470, "py_overflow": 470, "py_set_erange_if_overflow": 470, "py_set_errno_on_math_error": 470, "45412": 470, "py_unicode_copi": [470, 473, 479], "py_unicode_fil": [470, 473, 479], "pystrhex": 470, "py_force_doubl": 470, "py_is_infin": 470, "45474": 470, "pyheaptype_get_memb": 470, "40170": [470, 479], "have_py_set_53bit_precis": 470, "pyunicode_encod": [470, 473], "pyunicode_encodeascii": [470, 473], "pyunicode_encodelatin1": [470, 473], "pyunicode_encodeutf7": [470, 473], "pyunicode_encodeutf8": [470, 473], "pyunicode_encodeutf16": [470, 473], "pyunicode_encodeutf32": [470, 473], "pyunicode_encodeunicodeescap": [470, 473], "pyunicode_encoderawunicodeescap": [470, 473], "pyunicode_encodecharmap": [470, 473], "pyunicode_translatecharmap": [470, 473], "pyunicode_encodedecim": [470, 473], "pyunicode_transformdecimaltoascii": [470, 473], "44029": 470, "turner": 471, "693": 471, "ergonom": 471, "95299": 471, "labeledtupl": 471, "hashablesequ": 471, "intorstrsequ": 471, "103764": 471, "eden": 471, "alkalin": 471, "ascension": 471, "playlist": 471, "ski": 471, "cristi\u00e1n": 471, "maureira": 471, "frede": 471, "marta": 471, "g\u00f3mez": 471, "102856": 471, "anticip": [471, 476], "_xxsubinterpretersmodul": 471, "104210": 471, "103082": 471, "102500": 471, "meyer": [471, 473, 478, 479], "98254": 471, "99139": 471, "blech": 471, "somethin": 471, "98931": 471, "91058": 471, "franek": 471, "magiera": 471, "103629": 471, "get_color": 471, "goodchild": 471, "badchild": 471, "get_colour": 471, "troxler": 471, "101561": 471, "96670": 471, "98401": 471, "some_it": 471, "100581": 471, "77757": 471, "103590": 471, "97922": 471, "60203": 471, "90751": 471, "bradshaw": 471, "furkan": 471, "onder": 471, "101264": 471, "neumaier": 471, "100425": 471, "87995": 471, "96123": 471, "98658": 471, "91166": 471, "bower": 471, "102853": 471, "104140": 471, "104138": 471, "98024": 471, "94597": 471, "99388": 471, "6x": 471, "pranav": 471, "thulasiram": 471, "bhat": 471, "100344": 471, "102748": 471, "78530": 471, "princ": 471, "roshan": 471, "103636": 471, "94216": 471, "100161": 471, "coomb": [471, 474, 478, 479], "97930": 471, "100598": 471, "carlton": 471, "gibson": 471, "99247": 471, "krennwalln": 471, "79940": 471, "103193": 471, "98363": 471, "100485": 471, "goergen": 471, "94906": 471, "93312": 471, "machalow": 471, "99547": 471, "dower": [471, 475, 476, 477, 478, 479], "102519": 471, "99726": 471, "triad": 471, "101000": 471, "stanislav": 471, "zmiev": 471, "90385": 471, "domenico": 471, "ragusa": 471, "84538": 471, "tian": 471, "gao": 471, "103693": 471, "81620": 471, "100234": 471, "74696": 471, "triplet": 471, "102828": 471, "103179": 471, "77617": 471, "83638": 471, "103015": 471, "103489": 471, "95861": 471, "102778": 471, "103176": 471, "evgeni": [471, 479], "zorin": 471, "58451": 471, "93503": 471, "create_": 471, "94473": 471, "mac\u00eda": 471, "101827": 471, "102433": 471, "hasx": 471, "fourteen": 471, "74690": 471, "badaracco": 471, "103699": 471, "99957": 471, "96734": 471, "test_thread": 471, "test_timeout": 471, "barriertest": 471, "test_default_timeout": 471, "518": 471, "eventtest": 471, "158": 471, "48330": 471, "chhina": 471, "88597": 471, "wstr_length": 471, "92536": 471, "modzelewski": 471, "90536": 471, "101525": 471, "91524": 471, "103793": 471, "103497": 471, "93429": 471, "102859": 471, "92925": 471, "94163": 471, "99005": 471, "101799": 471, "90997": 471, "101441": 471, "93143": 471, "wenyang": 471, "101632": 471, "97681": 471, "97669": 471, "92248": 471, "90953": 471, "100160": 471, "103857": 471, "william": [471, 474], "72346": 471, "93963": 471, "101588": 471, "84559": 471, "97850": 471, "master_open": 471, "slave_open": 471, "soumendra": 471, "ganguli": 471, "85984": 471, "90016": 471, "101698": 471, "83122": 471, "ofei": 471, "chan": 471, "65961": 471, "ceas": 471, "hoffmann": 471, "103487": 471, "101866": 471, "84540": 471, "90765": 471, "50096": 471, "86421": 471, "106531": 471, "57281": 471, "87999": 471, "96580": 471, "89336": 471, "92584": 471, "pradyun": 471, "gedam": 471, "95083": 471, "94172": 471, "94196": 471, "94199": 471, "set_packag": [471, 474], "set_load": [471, 474], "98040": 471, "nullimport": [471, 473], "get_mag": [471, 474], "get_suffix": 471, "new_modul": 471, "load_sourc": 471, "init_builtin": 471, "load_compil": 471, "load_dynam": 471, "load_packag": 471, "lock_held": 471, "search_error": 471, "py_sourc": 471, "c_extens": 471, "py_resourc": 471, "pkg_directori": 471, "c_builtin": 471, "py_frozen": 471, "py_coderesourc": 471, "imp_hook": 471, "openwrapp": 471, "94169": 471, "94226": 471, "aiosmtpd": 471, "iarygin": 471, "93243": 471, "92548": 471, "cwe": 471, "isident": 471, "teyit": 471, "modernis": 471, "_texttestresult": 471, "89325": 471, "firebird": 471, "102871": 471, "94383": 471, "94379": 471, "suspici": 471, "rstlint": 471, "julien": [471, 477], "palard": [471, 477], "98179": 471, "99482": 471, "_use_broken_old_ctypes_structure_semantics_": 471, "99285": 471, "1e25": 471, "86388": 471, "94352": 471, "98393": 471, "99127": 471, "_is_main_interpret": 471, "112826": 471, "93939": 471, "va_start": 471, "93207": 471, "89536": 471, "99289": 471, "loongarch": 471, "loongarch64": 471, "gnusf": 471, "gnuf32": 471, "zhang": [471, 476, 477, 478], "90656": 471, "python_for_regen": 471, "89886": 471, "pyunstable_": 471, "101101": 471, "103509": 471, "wenzel": 471, "jakob": 471, "93012": 471, "93274": 471, "98586": 471, "frost": 471, "92257": 471, "91052": 471, "91051": 471, "91054": 471, "91248": 471, "101578": 471, "_pyerr_chainexceptions1": 471, "_pyerr_chainexcept": 471, "102755": 471, "_py_immortal_refcnt": 471, "_py_isimmort": 471, "py_build_cor": 471, "sstate_interned_immort": 471, "sstate_interned_immortal_stat": 471, "eddi": [471, 478], "elizondo": [471, 478], "84436": 471, "104110": 471, "105387": 471, "98836": 471, "95781": 471, "georgi": 471, "95504": 471, "95589": 471, "_pyobject_visitmanageddict": 471, "_pyobject_clearmanageddict": 471, "98724": 471, "_py_reftot": 471, "_py_getglobalreftot": 471, "104668": 471, "pylong_": 471, "ericsnowcurr": 471, "699": 471, "ma_version_tag": 471, "ramvikram": 471, "101193": 471, "77782": 471, "95388": 471, "t_doubl": 471, "quirki": 471, "47146": 471, "braun": 471, "102192": 471, "py_unicode_wid": 471, "92651": 471, "85858": 471, "392": 472, "sneezi": 472, "sleepi": 472, "skycaptain": 472, "manage_cloud": 472, "helm": 472, "parser_l": 472, "missil": 472, "torpedo": 472, "parser_m": 472, "vessel": 472, "console_prior": 472, "694": 472, "commonplac": 472, "unladen10": 472, "py32": 472, "pyload": [472, 474], "pypycload": [472, 474], "pyshar": 472, "32m": 472, "33md": 472, "soabi": 472, "32mu": 472, "ext_suffix": [472, 474], "status": 472, "salient": 472, "pathwai": 472, "0o24": 472, "7094": 472, "shl": 472, "project_nam": 472, "lowercaseddict": 472, "lcd": 472, "placeholderdict": 472, "6081": 472, "marcin": 472, "wojdyr": 472, "1772833": 472, "9666": 472, "9337": 472, "abcdefgh": [472, 474], "9757": 472, "4617": 472, "8413": 472, "10093": 472, "477863": 472, "9213": 472, "2690": 472, "10889": 472, "10518": 472, "aggrav": 472, "9425": 472, "undergon": 472, "4661": 472, "10321": 472, "get_phone_numb": 472, "phonenumb": 472, "phonelist": 472, "user_request": 472, "4805": 472, "980": 472, "baker": 472, "498245": 472, "577479": 472, "10586": 472, "10593": 472, "terrenc": 472, "9567": 472, "3445": 472, "8814": 472, "prob_dist": 472, "renew": 472, "resequenc": 472, "simsalabim": 472, "get_vot": 472, "ballot": 472, "conduct_elect": 472, "all_polls_clos": 472, "lockbox": 472, "seal_ballot": 472, "deposit": 472, "8777": 472, "923754": 472, "accept2dyear": [472, 473], "guesswork": 472, "1289118": 472, "5094": 472, "6641": 472, "2706": 472, "1777412": 472, "8013": 472, "10827": 472, "013671875": 472, "013765762467652909": 472, "682689492137086": 472, "31731050786291404": 472, "gamma_funct": 472, "801": 472, "4551": 472, "950730698041": 472, "temperatur": 472, "from_fahrenheit": 472, "from_celsiu": 472, "urban": [472, 474], "5867": 472, "rec_len": 472, "loc_start": 472, "loc_len": 472, "change_loc": 472, "record_numb": 472, "byte_stream": 472, "g3805": 472, "storeroom": 472, "chassi": 472, "x7899": 472, "cog": 472, "l6988": 472, "sprocket": 472, "showroom": 472, "5506": 472, "9826": 472, "9840": 472, "susan": 472, "salesl": 472, "talbot": 472, "5975": 472, "abraham": 472, "1537721": 472, "duti": 472, "9110": 472, "8188": 472, "2305843009213693951": 472, "314159": 472, "1000003": 472, "8540": [472, 473], "log1": 472, "rodol\u00e0": [472, 473, 478], "4972": [472, 475], "8046": 472, "1286": 472, "8806": 472, "7461": 472, "10554": 472, "s\u00e9bastien": 472, "sabl\u00e9": 472, "9862": 472, "3488": 472, "9962": 472, "1675951": 472, "redact": 472, "902": 472, "general_quest": 472, "3514": 472, "prion": 472, "py_todo": 472, "1399": 472, "semaphore_not": 472, "md2": 472, "dsawithsha": 472, "mdc2": 472, "md4": 472, "ripemd160": 472, "dsa": 472, "dsaencrypt": 472, "0x101739a10": 472, "sehensw\u00fcrdigkeiten": 472, "sehensw": 472, "xc3": 472, "xbcrdigkeiten": 472, "bzip": 472, "in_transit": 472, "shashwat": 472, "8845": 472, "8524": 472, "9794": 472, "2818": 472, "8850": 472, "1589": 472, "5639": 472, "4870": 472, "dysfunct": 472, "9360": 472, "vant": 472, "1926": 472, "9003": 472, "lorenzo": [472, 474], "catucci": [472, 474], "4471": 472, "10980": 472, "10620": 472, "my_proj_dir": 472, "9754": 472, "test_anagram": 472, "volumin": 472, "9424": 472, "misimpl": 472, "optic": 472, "9025": 472, "8807": 472, "handle_accept": 472, "6706": 472, "5178": 472, "rodolpho": 472, "eckhardt": 472, "10220": 472, "0x1022bd788": 472, "pydoc3": 472, "ron": 472, "newloc": 472, "nofre": 472, "_randbelow": 472, "binary_modulo": 472, "binary_multipli": 472, "binary_add": [472, 474], "binary_floor_divid": 472, "9147": 472, "rai": [472, 474], "9523": 472, "raymondhetting": 472, "os2": 472, "os2_hom": 472, "python32": 472, "bindir": 472, "binlibdest": 472, "includepi": 472, "libdest": 472, "platbas": 472, "projectbas": 472, "py_version_nodot": 472, "py_version_short": 472, "antonio": 472, "cuni": 472, "ilya": [472, 477], "sandler": 472, "pluggabl": [472, 474, 476], "ambv": 472, "zope9": 472, "plone": 472, "zope9instal": 472, "zope9inst": 472, "beef": 472, "cafe": 472, "5417": 472, "aff": 472, "8fa3": 472, "telenovela": 472, "d\u00f3nde": 472, "est\u00e1": 472, "elisa": 472, "bfd": 472, "f3nde": 472, "mahn": 472, "5468": 472, "9873": 472, "steffen": 472, "daod": 472, "nurpmeso": 472, "9124": 472, "10199": 472, "7316": 472, "torsten": [472, 473], "landschoff": [472, 473], "850728": 472, "kleckner": 472, "8844": 472, "operation": 472, "6690": 472, "9410": 472, "3873": 472, "9915": 472, "7451": 472, "10314": 472, "10x": [472, 473, 474, 477], "15x": [472, 479], "3001": 472, "stringlib": 472, "differenc": 472, "andress": 472, "bennett": 472, "8685": 472, "1569291": 472, "3709": [472, 473], "schaaf": [472, 473], "10160": 472, "christo": 472, "georgiou": 472, "7113": 472, "mobil": 472, "kannada": 472, "0cf1": 472, "0cf2": 472, "tai": 472, "lue": 472, "19da": 472, "disqualifi": 472, "cheatsheet": 472, "jog": 472, "adjunct": 472, "9528": 472, "7962": 472, "aquatk": 472, "6075": 472, "changeset": [472, 474], "385": 472, "workflow": 472, "10679": 472, "bupjo": 472, "5127": 472, "9203": 472, "wctype": 472, "9210": 472, "9778": 472, "py_va_copi": 472, "va_copi": 472, "2443": 472, "8837": 472, "buildscript": 472, "8990": 472, "setfilesystemencod": 472, "6shhbbb": 472, "gif87a": 472, "10783": 472, "10711": 472, "10272": 472, "398": 473, "segreg": 473, "13411": 473, "10181": 473, "u0010ffff": 473, "udbff": 473, "udfff": 473, "13054": 473, "becker": 473, "3561": 473, "gather_t": 473, "acc": 473, "renaud": 473, "blanch": 473, "zbigniew": 473, "j\u0119drzejewski": 473, "szmek": 473, "_extra_attribut": 473, "0x7f46b9fe31e0": 473, "amend": 473, "2377": 473, "13959": 473, "14605": 473, "14646": 473, "growth": 473, "delin": 473, "12753": 473, "13201": 473, "petri": 473, "lehtinen": 473, "12170": 473, "12380": 473, "10516": 473, "11388": 473, "13748": 473, "gruszczy\u0144ski": [473, 474, 478], "13521": 473, "9260": 473, "4966": 473, "3144": 473, "nadeem": [473, 474], "vawda": [473, 474], "\u00f8yvind": 473, "karlsen": 473, "6715": 473, "darren": 473, "11610": 473, "10868": 473, "1172711": 473, "ywjj": 473, "catalin": 473, "iacob": 473, "13641": 473, "13637": 473, "5863": 473, "pbzip2": 473, "1625": 473, "13216": 473, "65001": 473, "cp_utf8": 473, "chcp": 473, "cjk": 473, "12016": 473, "u52ff": 473, "u65bd": 473, "u65bc": 473, "u4eba": 473, "u3002": 473, "npj": 473, "l6hk": 473, "12100": 473, "11089": 473, "11297": 473, "11085": 473, "13121": 473, "13585": 473, "10924": 473, "ncursesw": 473, "waddwstr": 473, "i\u00f1igo": 473, "serna": 473, "6755": 473, "15006": 473, "7652": 473, "100x": 473, "bytereef": 473, "mpdecim": 473, "quickstart": 473, "120x": 473, "telco": 473, "psycopg": 473, "12x": 473, "watchexp": 473, "465484": 473, "72000": 473, "89ric": 473, "pal": 473, "salli": 473, "bonzo": 473, "bonz": 473, "ought": 473, "8594": 473, "12139": 473, "11072": 473, "13227": 473, "15061": 473, "13295": 473, "kuhn": 473, "13464": 473, "htmlparseerror": 473, "15114": [473, 474, 475], "14538": 473, "13993": 473, "13960": 473, "13358": 473, "1745761": 473, "755670": 473, "13357": 473, "12629": 473, "1200313": 473, "670664": 473, "13273": 473, "12888": 473, "7311": 473, "11113": 473, "15156": 473, "sijin": 473, "joseph": [473, 476], "8808": 473, "13062": 473, "15153": 473, "townshend": 473, "12760": 473, "11888": 473, "12021": 473, "12328": 473, "4892": 473, "6064": 473, "12708": 473, "9795": 473, "lagerwal": 473, "10882": 473, "4761": 473, "10755": 473, "14626": 473, "supports_follows_symlink": 473, "10784": 473, "8828": 473, "14127": 473, "13609": 473, "12720": 473, "9344": 473, "dlfcn": [473, 476], "13226": 473, "14210": 473, "14166": 473, "3665": 473, "13449": 473, "8684": 473, "delayfunct": 473, "13245": 473, "6397": 473, "12442": 473, "sandro": 473, "tosi": 473, "12191": 473, "15238": 473, "12715": 473, "niehof": 473, "9993": 473, "4489": 473, "8407": 473, "1870": 473, "elho": 473, "trevino": 473, "juhana": 473, "jauhiainen": 473, "orr\u00f9": [473, 474, 478, 479], "boswel": 473, "8739": 473, "paulo": 473, "scardin": 473, "11281": 473, "11289": 473, "kasun": 473, "herath": 473, "8809": 473, "watson": 473, "6560": 473, "heiko": 473, "wundram": 473, "socketcan": 473, "lwn": 473, "253425": 473, "fuch": [473, 478], "tiago": 473, "gon\u00e7alv": 473, "10141": 473, "reliable_datagram_socket": 473, "goderbau": 473, "13777": 473, "10866": 473, "warkentin": 473, "11109": 473, "11688": 473, "12049": 473, "11183": 473, "simpkin": 473, "12803": 473, "13626": 473, "13627": 473, "scram": 473, "jacek": [473, 476], "konieczni": 473, "12551": 473, "13634": 473, "colin": 473, "14204": 473, "14837": 473, "11811": 473, "13635": 473, "14807": 473, "3163": 473, "8513": 473, "5870": 473, "11223": 473, "5689": 473, "9957": 473, "13857": 473, "10968": 473, "clock_": 473, "10278": 473, "14386": 473, "14588": 473, "winston": 473, "ewert": 473, "10775": 473, "1673007": 473, "xdg": 473, "gvf": 473, "calmett": 473, "13620": 473, "14493": 473, "12646": 473, "12306": 473, "14624": 473, "14738": 473, "15026": 473, "osf": 473, "9856": 473, "11377": 473, "13374": 473, "13988": 473, "py_unicode_match": [473, 479], "pyunicode_encodembc": 473, "12326": 473, "13847": 473, "14180": 473, "1079": 473, "1690608": 473, "11291": 473, "assertsameel": 473, "_clamp": 473, "sslfakefil": 473, "13550": 473, "smalltabl": 473, "pymemoryviewobject": [473, 475], "memoryobject": [473, 475], "xxxmodul": 473, "14040": 473, "10998": 473, "11591": 473, "rdmurrai": 474, "bitdanc": 474, "16499": 474, "16475": 474, "3156": 474, "450": 474, "454": 474, "8713": 474, "18891": 474, "18214": 474, "unvers": 474, "pip3": 474, "hex_decod": 474, "bz2_encod": 474, "68656c6c6f": 474, "7475": 474, "17827": 474, "17828": 474, "19619": 474, "stone": 474, "everyon": 474, "berman": 474, "18111": 474, "18416": 474, "kang": 474, "hao": 474, "12892": 474, "bierenfeld": 474, "1097797": 474, "19668": 474, "15958": 474, "16772": 474, "17934": 474, "popa": [474, 475], "18690": 474, "19078": 474, "16148": 474, "declin": 474, "eli": [474, 476], "benderski": 474, "aprano": [474, 476, 478], "16832": 474, "bruno": [474, 475], "dupui": 474, "16049": 474, "17818": 474, "storchacha": 474, "16486": 474, "8311": 474, "maystr": 474, "11175": 474, "12866": 474, "19641": 474, "16685": 474, "17839": 474, "a85": 474, "17618": 474, "16613": 474, "fcc": 474, "ntsc": 474, "lander": [474, 477], "14323": 474, "15806": 474, "piraeu": 474, "19266": 474, "inflex": [474, 475], "15805": 474, "19282": 474, "kluyver": [474, 475, 476], "11816": 474, "17916": 474, "19722": 474, "16522": 474, "11390": 474, "3158": 474, "18600": 474, "email6": 474, "levitt": 474, "18149": 474, "15442": 474, "horev": 474, "kati": 474, "10042": 474, "thorn": 474, "12428": 474, "16351": 474, "18582": 474, "18532": 474, "jona": [474, 477], "borgstr\u00f6m": 474, "18240": 474, "17276": 474, "247": 474, "18775": 474, "2927": 474, "13633": 474, "karl": [474, 479], "cow": 474, "12921": 474, "malt": 474, "swart": 474, "17764": 474, "15627": 474, "18072": 474, "18193": 474, "18192": 474, "18194": 474, "18058": 474, "19152": 474, "18626": 474, "unravel": 474, "aaron": 474, "13266": 474, "18929": 474, "19030": 474, "broader": 474, "17481": 474, "17159": 474, "routeabl": 474, "17400": 474, "9556": 474, "ce46195b56a9": 474, "16110": 474, "15452": 474, "bump": 474, "19219": 474, "valeri": 474, "4885": 474, "18999": 474, "19946": 474, "16694": 474, "nelson": 474, "yogesh": 474, "chaudhari": 474, "17914": 474, "11939": 474, "9035": 474, "uapi": 474, "18673": 474, "16596": 474, "osborn": 474, "18764": 474, "14455": 474, "4473": 474, "19132": 474, "17150": 474, "19674": 474, "20710": 474, "barnett": 474, "16203": 474, "lope": 474, "tavar": 474, "13592": 474, "17087": 474, "16595": 474, "19324": 474, "19343": 474, "16488": 474, "18794": 474, "13896": 474, "atsuo": 474, "ishimoto": 474, "1492704": 474, "smtpserver": [474, 475, 476], "smtpchannel": [474, 475, 476], "async_chat": 474, "11959": 474, "2118": 474, "15359": 474, "7171": 474, "poq": 474, "13773": 474, "16692": 474, "19689": 474, "18138": 474, "18143": 474, "18147": 474, "christien": 474, "8813": 474, "19292": 474, "17134": 474, "8109": 474, "calissu": 474, "18379": 474, "_stat": 474, "11016": 474, "hiem": 474, "17804": 474, "zack": 474, "weinberg": 474, "16624": 474, "getstatu": 474, "10197": 474, "18901": 474, "18878": 474, "19261": 474, "13390": 474, "5845": 474, "13477": 474, "18585": 474, "18725": 474, "18882": 474, "1565525": 474, "mathia": 474, "panzenb\u00f6ck": 474, "16423": 474, "18978": 474, "kachayev": [474, 475], "16464": 474, "wozniak": 474, "17485": 474, "brecht": [474, 475, 476], "17272": 474, "15701": 474, "16997": 474, "jyrki": 474, "pulliainen": 474, "15132": 474, "zach": 474, "16935": 474, "melin": 474, "ramnani": 474, "16709": 474, "wardil": 474, "mcclure": 474, "11798": 474, "18937": 474, "17457": 474, "17015": 474, "toshio": 474, "kuratomi": 474, "17467": 474, "15417": 474, "19552": 474, "17487": 474, "17616": 474, "5202": 474, "14631": 474, "15528": 474, "17643": 474, "17741": 474, "ariel": 474, "poliak": 474, "14377": 474, "19274": 474, "mallard": 474, "17201": 474, "14621": 474, "dsl": 474, "17162": 474, "bastien": 474, "montagn": 474, "16129": 474, "1772673": 474, "ysj": 474, "7330": 474, "dhiru": 474, "kholia": 474, "18596": 474, "16632": 474, "18338": 474, "18920": 474, "18922": 474, "18569": 474, "gcov": 474, "lcov": 474, "v\u00e1clav": 474, "\u0161milauer": 474, "16421": 474, "17853": 474, "pyfailmalloc": 474, "18408": 474, "18520": 474, "18807": 474, "18818": 474, "heanei": [474, 475], "vajraski": [474, 475], "kok": [474, 475], "19201": 474, "19222": [474, 475], "19223": 474, "3x": 474, "14625": 474, "linear_prob": 474, "18771": 474, "19218": 474, "19209": 474, "19205": 474, "9548": 474, "16034": 474, "16674": 474, "15596": 474, "15758": 474, "bryant": 474, "18020": 474, "18756": 474, "endtim": 474, "readplistfrombyt": [474, 477], "writeplisttobyt": 474, "18823": 474, "19375": 474, "16135": 474, "e52df05b496a": 474, "14470": 474, "16136": 474, "shlib_suffix": 474, "16754": 474, "tick_count": 474, "19199": 474, "tara": 474, "lyapun": 474, "15641": 474, "type_int64": 474, "riti": 474, "15480": 474, "isbjunk": 474, "isbpopular": 474, "sm": 474, "13248": [474, 476], "_gestalt": 474, "_mac_ver_lookup": 474, "_mac_ver_gstalt": 474, "_bcd2str": 474, "18393": 474, "17323": 474, "17115": 474, "module_to_load": 474, "19413": 474, "18065": 474, "is_frozen": 474, "felt": [474, 478], "interstiti": 474, "17434": 474, "b32": 474, "18011": 474, "9177": 474, "14794": 474, "16290": 474, "16967": 474, "17094": 474, "20625": 474, "19555": 474, "15204": 474, "16333": 474, "20784": 474, "16742": 474, "f_tstate": 474, "14432": 474, "elvi": [475, 476, 477, 478, 479], "pranskevichu": [475, 476, 477, 478, 479], "478": 475, "441": 475, "arnon": 475, "yaari": 475, "9951": 475, "23632": 475, "benno": 475, "lesli": 475, "24450": 475, "19235": 475, "lc_type": 475, "19977": 475, "22638": 475, "22796": 475, "rudimentari": 475, "http_get": 475, "nathaniel": [475, 477], "landau": 475, "girdhar": [475, 476], "detract": 475, "500000": 475, "evid": 475, "lehtosalo": 475, "intermitt": 475, "conceal": 475, "unguard": 475, "pernici": 475, "angelico": [475, 476], "99998": 475, "00003": 475, "00001": 475, "barker": 475, "19676": 475, "22286": 475, "23681": 475, "22682": 475, "22681": 475, "24064": 475, "17636": 475, "23491": 475, "paugh": 475, "j3": [475, 477], "eriksson": 475, "14910": 475, "proactor": 475, "22560": 475, "21326": 475, "yann": [475, 476], "sionneau": [475, 476], "korenberg": [475, 476], "jiryu": [475, 476], "davi": [475, 476], "nikolau": 475, "rath": 475, "15955": 475, "20289": 475, "24270": 475, "17442": 475, "16991": 475, "19505": 475, "23704": 475, "abscissa": 475, "jevnik": [475, 478], "22189": 475, "devin": 475, "jeanpierr": 475, "23086": 475, "24018": 475, "24184": 475, "16104": 475, "19628": 475, "21338": 475, "11271": 475, "21527": 475, "18159": 475, "22389": 475, "23171": 475, "4254": 475, "18039": 475, "2052": 475, "17445": 475, "build_ext": 475, "5309": 475, "bdist": 475, "16314": 475, "glenn": 475, "15916": 475, "milan": [475, 477], "oberkirch": [475, 477], "20098": 475, "abhilash": 475, "raj": 475, "21083": 475, "24211": 475, "claud": 475, "paroz": 475, "16324": 475, "21706": 475, "wei": 475, "wu": 475, "23566": 475, "14373": 475, "13968": 475, "55555": 475, "6666": 475, "13742": 475, "demian": [475, 476], "21793": 475, "panter": [475, 476], "3566": 475, "maciej": 475, "szulik": 475, "21800": 475, "vignali": 475, "20295": 475, "fabric": 475, "anech": 475, "20197": 475, "17621": 475, "21156": 475, "20383": 475, "20726": 475, "20334": 475, "24190": 475, "17373": 475, "20691": 475, "24017": 475, "24400": 475, "16808": 475, "20578": 475, "16531": 475, "leon": 475, "20480": 475, "21650": 475, "19361": 475, "17911": 475, "c\u00e9dric": [475, 478], "krier": [475, 478], "13918": 475, "20537": 475, "22788": 475, "23185": 475, "22486": [475, 479], "21565": 475, "rosenberg": [475, 479], "22955": 475, "21176": 475, "22524": 475, "21719": 475, "22181": 475, "22054": 475, "23668": 475, "rafik": 475, "draoui": 475, "10395": 475, "19775": 475, "21539": 475, "19776": 475, "mayank": 475, "tripathi": 475, "19777": 475, "spam42": 475, "welborn": 475, "20218": 475, "23611": 475, "21804": 475, "aac": 475, "sre_match": 475, "9179": 475, "22437": 475, "1519638": 475, "22578": 475, "cauet": 475, "22940": 475, "18931": 475, "19840": 475, "5411": 475, "22018": 475, "21076": 475, "decode_data": [475, 476], "process_messag": [475, 476], "19662": 475, "21795": 475, "21725": 475, "14758": 475, "15014": 475, "gavin": 475, "chappel": 475, "16914": 475, "22027": 475, "18615": 475, "22043": 475, "17552": 475, "23853": 475, "21455": 475, "21965": 475, "suboptim": 475, "20188": 475, "20421": 475, "20951": 475, "akira": 475, "19940": 475, "23186": 475, "23239": 475, "10203": 475, "sinclair": 475, "jessica": 475, "mckellar": 475, "13583": 475, "23342": 475, "set_coroutine_wrapp": [475, 477, 478], "get_coroutine_wrapp": [475, 477, 478], "22696": 475, "23437": 475, "21717": 475, "vogt": 475, "23193": 475, "21549": 475, "gindi": 475, "18983": 475, "2527": 475, "_fix": 475, "20035": 475, "kazakov": 475, "22619": 475, "16662": 475, "19746": 475, "22936": 475, "kushal": [475, 476], "21238": 475, "21262": 475, "johann": 475, "baiter": 475, "20968": 475, "h\u00e5kan": 475, "l\u00f6vdahl": 475, "23581": 475, "23568": 475, "17660": 475, "matej": 475, "cepl": [475, 479], "19494": 475, "akshit": 475, "khurana": [475, 477], "samwys": 475, "13866": 475, "22366": 475, "22118": 475, "torr": 475, "navarret": 475, "silentghost": [475, 476], "5800": 475, "20627": 475, "22960": 475, "2175": 475, "10590": 475, "23252": 475, "23001": 475, "findfirstfil": 475, "findnextfil": 475, "23605": 475, "21233": 475, "albert": [475, 477], "marku": 475, "21486": 475, "21487": 475, "20826": 475, "23266": 475, "23133": 475, "15381": 475, "22003": 475, "20416": 475, "23344": 475, "15027": 475, "19380": 475, "23206": 475, "22540": 475, "22847": 475, "23488": 475, "23910": 475, "22464": 475, "23573": 475, "_py_char2wchar": 475, "_py_wchar2char": 475, "18395": 475, "18711": 475, "24268": 475, "amd": [475, 476], "gnu32": 475, "win_amd64": 475, "win_ia64": 475, "win_arm": 475, "_d": 475, "legalchar": 475, "23671": 475, "linux_distribut": 475, "1322": 475, "24248": 475, "20438": 475, "22407": 475, "23622": 475, "chaput": 475, "6623": 475, "23464": 475, "21205": 475, "htmlparsererror": 475, "21047": 475, "16518": 475, "22834": 475, "23014": 475, "22818": 475, "2211": 475, "nnnn": 475, "pot": 475, "24284": 475, "15582": 475, "7830": 475, "22453": 475, "20204": 475, "python36": 476, "gonzalez": [476, 477], "ivan": [476, 477, 478], "levkivskyi": [476, 477, 478], "lisa": [476, 478], "1_000_000_000_000_000": 476, "1000000000000000": 476, "0x_ff_ff_ff_ff": 476, "ffff_ffff": 476, "ticker": 476, "pluginbas": 476, "plugin1": 476, "plugin2": 476, "teichmann": 476, "intfield": 476, "int_field": 476, "some_fil": 476, "dusti": 476, "koo": 476, "zevenhoven": 476, "27350": 476, "0x7fbcd41666f8": 476, "forbiddenbyt": 476, "0x7fbcd41666fc": 476, "ouch": 476, "1233329": 476, "1a": 476, "test_byt": 476, "648": 476, "0x00007fbcdbd32700": 476, "test_hex": 476, "26516": 476, "26564": 476, "21590": 476, "nikhil": 476, "benesch": 476, "barnert": 476, "25958": 476, "emanuel": 476, "26823": 476, "15767": 476, "23722": [476, 478], "26492": 476, "26146": 476, "28613": 476, "27041": 476, "27040": 476, "28370": 476, "25593": 476, "26221": 476, "27392": 476, "27456": [476, 477], "28003": 476, "26081": 476, "28544": 476, "25357": 476, "628": 476, "23229": 476, "27598": 476, "25987": 476, "28720": 476, "17941": 476, "25628": 476, "26482": 476, "27664": 476, "25609": 476, "24773": 476, "ashlei": 476, "anderson": 476, "12006": 476, "alessandro": 476, "cucci": 476, "19475": 476, "27661": 476, "25928": 476, "27819": 476, "24277": 476, "27331": 476, "20476": 476, "27959": 476, "23591": 476, "23848": 476, "hackman": 476, "25788": 476, "26470": 476, "26798": 476, "16113": 476, "bertoni": 476, "joan": 476, "daemen": 476, "micha\u00ebl": 476, "peeter": 476, "gill": 476, "assch": 476, "ronni": 476, "keer": 476, "27928": 476, "rolf": 476, "krahl": 476, "12319": 476, "tkfont": 476, "swiegart": 476, "24225": 476, "autocomplet": [476, 477], "louie": [476, 477], "15786": [476, 477], "cheryl": [476, 477, 478], "sabella": [476, 477, 478], "1612262": [476, 477], "wohlgang": [476, 477], "27099": [476, 477], "13802": [476, 477], "31860": [476, 477], "maxlin": [476, 477], "33642": [476, 477], "33768": [476, 477], "33679": [476, 477], "dpi": [476, 477], "sharper": [476, 477], "33656": [476, 477], "1529353": [476, 477, 478], "19611": 476, "churn": 476, "27172": 476, "17909": 476, "marian": 476, "horban": 476, "24884": 476, "davin": [476, 478], "pott": [476, 478], "6766": 476, "25994": 476, "27186": 476, "24164": 476, "25382": 476, "8637": 476, "24879": 476, "18844": 476, "ython": 476, "433028": 476, "24454": 476, "xiang": [476, 477, 478], "27177": 476, "tyler": 476, "crompton": 476, "26870": 476, "25011": 476, "25209": 476, "1521950": 476, "wolfgang": 476, "langner": 476, "26587": 476, "lordthorsen": 476, "16864": 476, "stoke": 476, "26536": 476, "26907": 476, "27744": 476, "crypto": 476, "omar": [476, 477], "sandov": [476, 477], "26273": [476, 477], "26404": 476, "26721": 476, "27850": 476, "27766": 476, "28043": 476, "19500": 476, "warhawk": 476, "28025": 476, "28085": 476, "27181": [476, 478], "11734": 476, "26741": 476, "6135": 476, "27781": 476, "27932": 476, "st\u00e9phane": [476, 477], "wirtel": [476, 477], "25485": 476, "6422": 476, "23552": 476, "trace_add": 476, "trace_remov": 476, "trace_info": 476, "trace_vari": 476, "trace_vdelet": 476, "trace_vinfo": 476, "22115": 476, "26588": 476, "280": 476, "189": 476, "amit": 476, "saha": 476, "26323": 476, "21271": 476, "nikolai": 476, "bogoychev": 476, "16099": 476, "balcerzak": 476, "22829": 476, "26568": 476, "26567": 476, "rouault": 476, "23026": 476, "27982": 476, "26885": 476, "26039": 476, "26243": 476, "16764": 476, "demur": 476, "rume": 476, "26647": 476, "28050": 476, "24870": 476, "25227": 476, "25267": 476, "25301": 476, "25349": 476, "25399": 476, "25401": 476, "snider": 476, "26574": 476, "26249": 476, "27056": 476, "27574": 476, "25596": 476, "26032": 476, "25638": 476, "25873": 476, "25869": 476, "25971": 476, "py_long_long": 476, "17884": 476, "ndk": 476, "lollipop": 476, "26865": 476, "alecsandru": 476, "patrascu": 476, "26359": 476, "5319": 476, "26282": 476, "0b4": 476, "223967b49e49": 476, "27243": 476, "27364": 476, "25791": 476, "mariatta": 476, "25002": 476, "21708": 476, "extra_path": 476, "27919": 476, "26129": 476, "26754": 476, "22493": 476, "28022": 476, "25154": 476, "ffi": 476, "fullmodnam": 476, "find_lines_from_cod": 476, "find_lin": 476, "find_str": 476, "find_executable_lin": 476, "tk_menubar": 476, "tk_bindfortravers": 476, "cdrom": 476, "cdio": 476, "stropt": 476, "chronic": 476, "h2py": 476, "show_track_count": 476, "23034": 476, "balogh": 476, "2091": 476, "25768": 476, "20059": 476, "taddei": 476, "ko\u0142odziej": 476, "23883": 476, "18018": 476, "23430": 476, "26685": 476, "18726": 476, "holden": 476, "27842": 476, "25287": 476, "lita": 476, "cho": 476, "21815": 476, "jakub": 476, "stasiak": 476, "26335": 476, "ramchandra": 476, "17211": 476, "25953": 476, "plugin": 476, "25483": 476, "27078": 476, "27140": 476, "build_map_unpack_with_cal": 476, "build_tuple_unpack_with_cal": 476, "call_function_var": 476, "call_function_var_kw": 476, "make_closur": 476, "27095": 476, "27213": 476, "28257": 476, "store_annot": [476, 477], "27985": 476, "pyexc_recursionerrorinst": [476, 477], "22898": [476, 477], "30697": [476, 477], "31900": [476, 477], "33899": [476, 477, 478], "37228": [476, 477, 478, 479], "advent": 477, "glare": 477, "advers": 477, "from_str": 477, "validate_b": 477, "brai": 477, "masayuki": 477, "coars": 477, "ja": 477, "ko": 477, "12844": 477, "18896": 477, "xiao": 477, "28927": 477, "32677": 477, "29546": 477, "30024": 477, "28974": 477, "30579": 477, "33053": 477, "31415": 477, "32248": 477, "14191": 477, "32314": [477, 478], "32436": 477, "32311": 477, "23749": 477, "31819": 477, "32250": 477, "32251": 477, "32269": 477, "32391": 477, "32410": 477, "32415": 477, "32418": 477, "32662": 477, "32741": 477, "quentin": 477, "dawan": 477, "31245": 477, "create_accepted_socket": 477, "aspinal": 477, "29970": 477, "marat": 477, "sharafutdinov": 477, "31943": 477, "32193": 477, "32356": 477, "32066": 477, "30508": 477, "33792": 477, "30103": 477, "oz": 477, "tiram": 477, "30095": 477, "32320": 477, "31650": 477, "21423": 477, "moreau": 477, "31540": 477, "bakker": 477, "10049": 477, "29679": 477, "30241": 477, "mohr": 477, "kulakov": 477, "29302": 477, "sanyam": 477, "21862": 477, "31664": 477, "31702": 477, "15873": 477, "5288": 477, "32630": 477, "11822": 477, "11913": 477, "31801": 477, "33217": 477, "32227": 477, "zekun": 477, "31558": 477, "32433": 477, "soffer": 477, "31945": 477, "pierr": [477, 478], "quentel": 477, "29654": 477, "28707": 477, "31639": 477, "5680": [477, 478], "37627": [477, 478], "saimadhav": [477, 478], "heblikar": [477, 478], "17535": [477, 478], "garvit": 477, "khatri": 477, "29851": 477, "30436": 477, "30526": 477, "15216": 477, "20825": 477, "30537": 477, "10379": 477, "30520": 477, "30522": 477, "31080": 477, "29962": 477, "nitish": 477, "chandra": 477, "22589": 477, "20486": 477, "30596": 477, "vitor": 477, "pereira": 477, "30794": 477, "18966": 477, "28682": 477, "25996": 477, "16500": 477, "31368": 477, "19930": 477, "32441": 477, "32659": 477, "ry": 477, "30897": 477, "31389": 477, "32206": 477, "bernhard": 477, "wiedemann": 477, "29708": 477, "feanil": 477, "patel": 477, "31128": 477, "14976": 477, "31690": 477, "25054": 477, "30215": 477, "30349": 477, "10076": 477, "30050": 477, "32373": 477, "32454": 477, "29728": 477, "cathi": 477, "averi": 477, "27584": 477, "28134": 477, "lele": 477, "gaifax": 477, "27645": 477, "31843": 477, "31399": 477, "libssl": 477, "libressl": 477, "32185": 477, "mandeep": 477, "singh": 477, "23033": 477, "blacklist": 477, "whitelist": 477, "31429": 477, "28414": 477, "32947": 477, "20995": 477, "29136": 477, "30622": 477, "33618": 477, "32951": 477, "32609": 477, "1198569": 477, "bo": [477, 478], "bayl": [477, 478], "32102": [477, 478], "clegg": 477, "31756": 477, "segev": 477, "19764": 477, "grace": 477, "25942": 477, "31353": 477, "28740": 477, "32591": 477, "32025": 477, "32585": 477, "32121": 477, "manuel": 477, "krebber": 477, "29377": 477, "32265": 477, "32717": 477, "haag": 477, "32071": 477, "20804": 477, "30541": 477, "theun": 477, "ratnadeep": 477, "debnath": 477, "16285": 477, "22807": 477, "32107": 477, "20361": 477, "32043": 477, "32230": 477, "31975": 477, "31648": 477, "simplexmlrpcdispatch": 477, "7769": 477, "irmen": 477, "jong": 477, "31072": 477, "zhime": 477, "31638": 477, "21417": 477, "30693": 477, "25658": 477, "28411": 477, "victorin": 477, "23699": 477, "31338": 477, "30054": 477, "31574": 477, "28761": 477, "28769": 477, "milman": 477, "28280": 477, "27867": 477, "10381": 477, "30708": 477, "abid": 477, "29102": 477, "29240": 477, "28822": 477, "31370": 477, "27979": 477, "30450": 477, "29300": 477, "29507": 477, "29452": 477, "29286": 477, "29585": 477, "31333": 477, "26110": 477, "32296": 477, "32348": 477, "32355": 477, "32351": 477, "31970": 477, "32226": 477, "elliot": 477, "gorokhovski": 477, "28685": 477, "31179": 477, "32544": 477, "\u0454": 477, "24821": 477, "28638": 477, "32403": 477, "28564": 477, "30285": 477, "31671": 477, "30014": 477, "eugen": 477, "toder": 477, "29469": 477, "11549": 477, "70x": 477, "wielgosik": 477, "24700": 477, "26121": 477, "31344": 477, "32305": 477, "32303": 477, "32690": 477, "32304": 477, "10544": [477, 478], "28894": 477, "openfp": [477, 479], "31985": 477, "32253": 477, "25988": 477, "28847": 477, "28692": 477, "29576": 477, "chi": 477, "hsuan": 477, "yen": 477, "9850": 477, "_dummy_thread": [477, 479], "28332": 477, "28124": 477, "28799": 477, "nix": 477, "jessi": 477, "trusti": 477, "xenial": 477, "sle": 477, "sp3": 477, "splitunc": 477, "_internaldict": 477, "_overlap": 477, "install_misc": 477, "vander": 477, "weel": 477, "29218": 477, "fpectl": 477, "29137": 477, "30291": 477, "0p": 477, "30362": 477, "30406": 477, "32670": 477, "31709": 477, "32012": 477, "32023": 477, "31233": 477, "33540": 477, "31151": 477, "24744": 477, "29193": 477, "29192": 477, "21071": 477, "29979": 477, "30399": 477, "utkarsh": 477, "upadhyai": 477, "30302": 477, "32308": 477, "29995": 477, "32331": 477, "33169": 477, "32327": 477, "sottil": [477, 478, 479], "26510": 477, "31778": 477, "28292": 477, "32792": 477, "nemec": 477, "33097": 477, "tocknel": 477, "23835": 477, "32550": 477, "28137": 477, "latent": 477, "22257": 477, "25612": 477, "34247": 477, "affection": 478, "tusk": 478, "discount": 478, "clean_nam": 478, "allowed_nam": 478, "emili": 478, "morehous": 478, "35224": 478, "impair": 478, "36540": 478, "33499": 478, "21536": 478, "36722": 478, "36721": 478, "eric_idl": 478, "member_sinc": 478, "075": 478, "theta": 478, "36817": 478, "_pyruntimest": 478, "36763": 478, "36974": [478, 479], "36785": 478, "32489": 478, "33073": 478, "37819": 478, "20092": 478, "copyright_year_pattern": 478, "eunic": 478, "30688": 478, "r\u00e9mi": [478, 479], "lapeyr": [478, 479], "33462": 478, "34641": 478, "simpson": 478, "homer": 478, "marg": 478, "bart": 478, "cuthbert": 478, "jordan": 478, "32117": 478, "15248": 478, "32417": 478, "1054041": 478, "37032": 478, "137": 478, "diophantin": 478, "4258\ud835\udc65": 478, "147\ud835\udc66": 478, "369": 478, "36027": 478, "j\u00f6rn": 478, "heissler": 478, "glaser": 478, "olivi": 478, "grisel": 478, "35900": 478, "chardet": 478, "34632": 478, "33416": 478, "35766": 478, "37028": 478, "32528": 478, "34687": 478, "meili": 478, "29883": 478, "23057": 478, "36999": 478, "34270": 478, "twisteroid": 478, "ambassador": 478, "33530": 478, "34616": 478, "35864": 478, "sanderson": 478, "29235": 478, "selik": 478, "34003": 478, "31680": 478, "36085": 478, "36004": 478, "36772": 478, "21145": 478, "taskmanag": 478, "32380": 478, "36016": 478, "franz": 478, "glasner": 478, "2504": 478, "guo": 478, "teo": 478, "34898": 478, "6584": 478, "13153": 478, "4603": [478, 479], "johnni": [478, 479], "najera": [478, 479], "38944": [478, 479], "37765": [478, 479], "audioclip": 478, "bit_rat": 478, "kilohertz": 478, "36326": 478, "1015": 478, "1045": 478, "34659": 478, "31553": 478, "jupyt": 478, "33897": 478, "33089": 478, "35606": 478, "yash": 478, "aggarw": 478, "keller": 478, "37128": 478, "37178": 478, "35431": 478, "650320427": 478, "650320426": 478, "36887": 478, "33083": 478, "32941": 478, "35813": 478, "26836": 478, "37834": 478, "33721": 478, "36264": 478, "joannah": [478, 479], "nanjeky": [478, 479], "26978": 478, "jon": [478, 479], "janzen": [478, 479], "26707": 478, "30670": 478, "22640": 478, "20849": 478, "gerlach": 478, "30661": 478, "17561": 478, "37007": 478, "34670": 478, "35904": 478, "35892": 478, "equiprob": 478, "36546": 478, "36018": 478, "temperature_feb": 478, "356099432828281": 478, "3184678262814532": 478, "2039930378537762": 478, "el_ni\u00f1o": 478, "climat": 478, "830080526611674": 478, "294144947901014": 478, "672102882379219": 478, "000027119750287": 478, "647488369766392": 478, "36829": 478, "36268": 478, "1230540": 478, "tesler": 478, "36084": 478, "selection_from": 478, "selection_pres": 478, "selection_rang": 478, "selection_to": 478, "juliett": 478, "monsel": 478, "34829": 478, "moveto": 478, "23831": 478, "transparency_get": 478, "transparency_set": 478, "25451": 478, "35702": 478, "lat_long": 478, "grid_squar": 478, "xy_coordin": 478, "get_statu": 478, "1415926536": 478, "belang": 478, "euresti": 478, "32285": 478, "37966": 478, "26467": 478, "24412": 478, "strandmark": 478, "35047": 478, "32972": 478, "testrequest": 478, "test_get": 478, "32718": 478, "36669": 478, "17239": 478, "28238": 478, "13611": 478, "36676": 478, "36673": 478, "35153": 478, "35537": 478, "smb": 478, "33695": 478, "pygc_head": [478, 479], "33597": 478, "bolsterle": 478, "30977": 478, "35664": 478, "32492": 478, "33234": 478, "36012": 478, "23867": 478, "35582": 478, "36127": 478, "26219": 478, "36707": 478, "8m": 478, "37m": 478, "35081": 478, "pyobject_init_var": [478, 479], "_py_dealloc": 478, "35059": 478, "pybytearray_init": 478, "pybytearray_fini": 478, "35713": 478, "33818": 478, "dualiti": 478, "32430": 478, "36048": 478, "35810": [478, 479], "37221": 478, "38234": 478, "37481": 478, "29209": 478, "34075": 478, "9372": 478, "36320": 478, "32892": 478, "36917": 478, "36921": 478, "34790": [478, 479], "33710": 478, "isal": [478, 479], "35283": 478, "sharedmemoryserv": 478, "36492": 478, "36952": 478, "35471": 478, "35345": 478, "36895": 478, "25427": 478, "36297": 478, "30262": 478, "36933": 478, "34850": 478, "35459": 478, "36793": 478, "aix3": 478, "36588": 478, "36475": 478, "37412": 478, "34651": 478, "37951": 478, "36348": 478, "31508": 478, "roja": 478, "34160": 478, "32749": 478, "pycore_pyst": 478, "35886": 478, "2122": 478, "33106": 478, "32751": [478, 479], "37027": 478, "kb2533623": 478, "pgen": 478, "36623": 478, "pyeval_reinitthread": 478, "36728": 478, "36381": 478, "foo_struct": [478, 479], "foo_new": 478, "33407": 478, "32388": 478, "pynode_addchild": 478, "pyparser_addtoken": 478, "libpython38": 478, "mingw": 478, "python38": 478, "gendef": 478, "dlltool": 478, "binutil": 478, "37351": 478, "unrol": 478, "break_loop": 478, "continue_loop": 478, "setup_loop": 478, "setup_except": 478, "begin_fin": 478, "call_fin": 478, "pop_fin": 478, "end_fin": 478, "with_cleanup_start": 478, "17611": 478, "33041": 478, "var_access_benchmark": [478, 479], "35884": 478, "read_loc": [478, 479], "read_nonloc": [478, 479], "read_glob": [478, 479], "read_builtin": [478, 479], "read_classvar_from_class": [478, 479], "read_classvar_from_inst": [478, 479], "read_instancevar": [478, 479], "read_instancevar_slot": [478, 479], "read_namedtupl": [478, 479], "read_boundmethod": [478, 479], "write_loc": [478, 479], "write_nonloc": [478, 479], "write_glob": [478, 479], "write_classvar": [478, 479], "write_instancevar": [478, 479], "write_instancevar_slot": [478, 479], "read_list": [478, 479], "read_dequ": [478, 479], "read_strdict": [478, 479], "write_list": [478, 479], "write_dequ": [478, 479], "write_dict": [478, 479], "write_strdict": [478, 479], "list_append_pop": [478, 479], "deque_append_pop": [478, 479], "deque_append_popleft": [478, 479], "loop_overhead": [478, 479], "i7": [478, 479], "4960hq": [478, 479], "36384": [478, 479], "achraf": 478, "merzouki": 478, "573": 479, "_abc": 479, "_bz2": 479, "_codec": 479, "_contextvar": 479, "_crypt": 479, "_functool": 479, "_json": 479, "multiphas": 479, "_hashlib": 479, "_posixsubprocess": 479, "36144": 479, "39939": 479, "greet_al": 479, "ta\u015fkaya": 479, "39481": 479, "pythonoldpars": 479, "ngalim": 479, "siregar": 479, "37444": 479, "20443": 479, "37388": 479, "28029": 479, "39702": 479, "40257": 479, "30773": 479, "40824": 479, "41848": 479, "43755": 479, "17005": 479, "37995": 479, "38870": 479, "39638": 479, "34037": 479, "38692": 479, "32309": 479, "typererror": 479, "ido": 479, "37404": 479, "lum\u00edr": 479, "frenzi": 479, "balhar": 479, "40495": 479, "38112": 479, "39349": 479, "39812": 479, "39207": 479, "38312": 479, "24416": 479, "40698": 479, "38602": 479, "39259": 479, "38379": 479, "39322": 479, "xof": 479, "37630": 479, "40479": 479, "39509": 479, "rhode": 479, "39507": 479, "38615": 479, "40375": 479, "39336": 479, "39791": 479, "36350": 479, "39775": 479, "oleksandr": 479, "pavliuk": 479, "34788": 479, "39648": 479, "ananthakrishnan": 479, "39479": 479, "39288": 479, "39310": 479, "30966": 479, "38493": 479, "38713": 479, "39413": 479, "39395": 479, "40094": 479, "girt": 479, "folkmani": 479, "30618": 479, "hopper": 479, "lidral": 479, "porter": 479, "20523": 479, "bordum": 479, "37376": 479, "40286": 479, "38712": 479, "39329": 479, "tatschner": 479, "25780": 479, "40291": 479, "shinya": 479, "okano": 479, "28724": 479, "thread_cputim": 479, "40192": 479, "mat\u011bjek": 479, "mat\u011bj": 479, "charalampo": 479, "strataki": 479, "1294959": 479, "jendrik": 479, "seipp": 479, "13601": 479, "huon": 479, "40630": 479, "varoquaux": 479, "konstantin": 479, "kashin": 479, "39926": 479, "37663": 479, "eoln": 479, "mefistot": 479, "39011": 479, "32856": 479, "40010": 479, "closefrom": 479, "mast": 479, "conrad": 479, "kubilai": 479, "kocak": 479, "38061": 479, "87x": 479, "37986": 479, "37207": 479, "kapun": 479, "8425": 479, "thrash": 479, "37257": 479, "39434": 479, "37348": 479, "39586": 479, "37315": 479, "35712": 479, "28286": 479, "splitlist": 479, "hexbin4": 479, "rledecode_hqx": 479, "39353": 479, "34822": 479, "augload": 479, "augstor": 479, "39639": 479, "39969": 479, "39988": 479, "39877": 479, "33262": 479, "colvin": 479, "xgtitl": 479, "39366": 479, "38916": 479, "call_profil": 479, "37414": 479, "37392": 479, "pyimport_cleanup": 479, "36710": 479, "37312": 479, "37320": 479, "37804": 479, "36543": 479, "36409": 479, "pygen_needsfin": 479, "15088": 479, "39351": 479, "39350": 479, "39357": 479, "39377": 479, "34793": 479, "39489": 479, "40182": 479, "has_exec": 479, "40208": 479, "40967": 479, "39239": 479, "39562": 479, "34538": 479, "37742": 479, "aiudi": 479, "34775": 479, "latex_latin1": 479, "jordon": 479, "xu": 479, "37751": 479, "foo_travers": 479, "29548": 479, "34880": 479, "39156": 479, "setenv": 479, "10945": 479, "isysroot": 479, "34956": 479, "33125": 479, "36044": 479, "37707": 479, "marcel": 479, "plch": 479, "38787": 479, "40421": 479, "39947": 479, "37194": 479, "38644": 479, "39542": 479, "40024": 479, "40241": 479, "_pyobject_functionstr": 479, "37645": 479, "37483": 479, "38500": 479, "39984": 479, "38650": 479, "pycore_gc": 479, "39882": 479, "37540": 479, "pyobject_new_var": 479, "pyobject_get_weakrefs_listptr": 479, "pyfpe_start_protect": 479, "pyfpe_end_protect": 479, "38835": 479, "37878": 479, "_py_newrefer": 479, "_py_forgetrefer": 479, "_pytracemalloc_newrefer": 479, "_py_getreftot": 479, "pytrash_unwind_level": 479, "py_trashcan_begin_condit": 479, "_pydebug_printtotalref": 479, "_py_printrefer": 479, "_py_printreferenceaddress": 479, "_py_tracemalloc_config": 479, "_py_addtoallobject": 479, "getfram": 479, "_pythreadstate_getfram": 479, "pythreadframegett": 479, "39946": 479, "37340": 479, "38896": 479, "40428": 479, "pyasyncgen_clearfreelist": 479, "pycontext_clearfreelist": 479, "pydict_clearfreelist": 479, "pyfloat_clearfreelist": 479, "pyframe_clearfreelist": 479, "pylist_clearfreelist": 479, "pymethod_clearfreelist": 479, "pycfunction_clearfreelist": 479, "pyset_clearfreelist": 479, "pytuple_clearfreelist": 479, "pyunicode_clearfreelist": 479, "_pyunicode_clearstaticstr": 479, "39465": 479, "_pybytes_insertthousandsgroupinglocal": 479, "_pybytes_insertthousandsgroup": 479, "_py_initializefromarg": 479, "_py_initializefromwidearg": 479, "_pyfloat_repr": 479, "_pyfloat_digit": 479, "_pyfloat_digitsinit": 479, "pyframe_extendstack": 479, "_pyaiterwrapper_typ": 479, "pynullimporter_typ": 479, "pycmpwrapper_typ": 479, "pysortwrapper_typ": 479, "pynoargsfunct": 479, "39372": 479, "lawrenc": 479, "anna": 479, "41100": 479, "essai": 481, "nontrivi": 481}, "objects": {"": [[65, 0, 1, "c.CO_FUTURE_DIVISION", "CO_FUTURE_DIVISION"], [57, 1, 1, "c.METH_CLASS", "METH_CLASS"], [57, 1, 1, "c.METH_COEXIST", "METH_COEXIST"], [57, 1, 1, "c.METH_FASTCALL", "METH_FASTCALL"], [57, 1, 1, "c.METH_KEYWORDS", "METH_KEYWORDS"], [57, 1, 1, "c.METH_METHOD", "METH_METHOD"], [57, 1, 1, "c.METH_NOARGS", "METH_NOARGS"], [57, 1, 1, "c.METH_O", "METH_O"], [57, 1, 1, "c.METH_STATIC", "METH_STATIC"], [57, 1, 1, "c.METH_VARARGS", "METH_VARARGS"], [41, 1, 1, "c.PYMEM_DOMAIN_MEM", "PYMEM_DOMAIN_MEM"], [41, 1, 1, "c.PYMEM_DOMAIN_OBJ", "PYMEM_DOMAIN_OBJ"], [41, 1, 1, "c.PYMEM_DOMAIN_RAW", "PYMEM_DOMAIN_RAW"], [4, 1, 1, "c.PY_MAJOR_VERSION", "PY_MAJOR_VERSION"], [4, 1, 1, "c.PY_MICRO_VERSION", "PY_MICRO_VERSION"], [4, 1, 1, "c.PY_MINOR_VERSION", "PY_MINOR_VERSION"], [4, 1, 1, "c.PY_RELEASE_LEVEL", "PY_RELEASE_LEVEL"], [4, 1, 1, "c.PY_RELEASE_SERIAL", "PY_RELEASE_SERIAL"], [10, 1, 1, "c.PY_VECTORCALL_ARGUMENTS_OFFSET", "PY_VECTORCALL_ARGUMENTS_OFFSET"], [4, 1, 1, "c.PY_VERSION_HEX", "PY_VERSION_HEX"], [35, 2, 1, "c.PyAIter_Check", "PyAIter_Check"], [63, 4, 1, "c.PyASCIIObject", "PyASCIIObject"], [54, 2, 1, "c.PyAnySet_Check", "PyAnySet_Check"], [54, 2, 1, "c.PyAnySet_CheckExact", "PyAnySet_CheckExact"], [5, 2, 1, "c.PyArg_Parse", "PyArg_Parse"], [5, 2, 1, "c.PyArg_ParseTuple", "PyArg_ParseTuple"], [5, 2, 1, "c.PyArg_ParseTupleAndKeywords", "PyArg_ParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_UnpackTuple", "PyArg_UnpackTuple"], [5, 2, 1, "c.PyArg_VaParse", "PyArg_VaParse"], [5, 2, 1, "c.PyArg_VaParseTupleAndKeywords", "PyArg_VaParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_ValidateKeywordArguments", "PyArg_ValidateKeywordArguments"], [62, 4, 1, "c.PyAsyncMethods", "PyAsyncMethods"], [7, 1, 1, "c.PyBUF_ANY_CONTIGUOUS", "PyBUF_ANY_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_CONTIG", "PyBUF_CONTIG"], [7, 1, 1, "c.PyBUF_CONTIG_RO", "PyBUF_CONTIG_RO"], [7, 1, 1, "c.PyBUF_C_CONTIGUOUS", "PyBUF_C_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_FORMAT", "PyBUF_FORMAT"], [7, 1, 1, "c.PyBUF_FULL", "PyBUF_FULL"], [7, 1, 1, "c.PyBUF_FULL_RO", "PyBUF_FULL_RO"], [7, 1, 1, "c.PyBUF_F_CONTIGUOUS", "PyBUF_F_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_INDIRECT", "PyBUF_INDIRECT"], [7, 1, 1, "c.PyBUF_MAX_NDIM", "PyBUF_MAX_NDIM"], [7, 1, 1, "c.PyBUF_ND", "PyBUF_ND"], [42, 1, 1, "c.PyBUF_READ", "PyBUF_READ"], [7, 1, 1, "c.PyBUF_RECORDS", "PyBUF_RECORDS"], [7, 1, 1, "c.PyBUF_RECORDS_RO", "PyBUF_RECORDS_RO"], [7, 1, 1, "c.PyBUF_SIMPLE", "PyBUF_SIMPLE"], [7, 1, 1, "c.PyBUF_STRIDED", "PyBUF_STRIDED"], [7, 1, 1, "c.PyBUF_STRIDED_RO", "PyBUF_STRIDED_RO"], [7, 1, 1, "c.PyBUF_STRIDES", "PyBUF_STRIDES"], [7, 1, 1, "c.PyBUF_WRITABLE", "PyBUF_WRITABLE"], [42, 1, 1, "c.PyBUF_WRITE", "PyBUF_WRITE"], [6, 2, 1, "c.PyBool_Check", "PyBool_Check"], [6, 2, 1, "c.PyBool_FromLong", "PyBool_FromLong"], [6, 0, 1, "c.PyBool_Type", "PyBool_Type"], [62, 4, 1, "c.PyBufferProcs", "PyBufferProcs"], [7, 2, 1, "c.PyBuffer_FillContiguousStrides", "PyBuffer_FillContiguousStrides"], [7, 2, 1, "c.PyBuffer_FillInfo", "PyBuffer_FillInfo"], [7, 2, 1, "c.PyBuffer_FromContiguous", "PyBuffer_FromContiguous"], [7, 2, 1, "c.PyBuffer_GetPointer", "PyBuffer_GetPointer"], [7, 2, 1, "c.PyBuffer_IsContiguous", "PyBuffer_IsContiguous"], [7, 2, 1, "c.PyBuffer_Release", "PyBuffer_Release"], [7, 2, 1, "c.PyBuffer_SizeFromFormat", "PyBuffer_SizeFromFormat"], [7, 2, 1, "c.PyBuffer_ToContiguous", "PyBuffer_ToContiguous"], [8, 4, 1, "c.PyByteArrayObject", "PyByteArrayObject"], [8, 2, 1, "c.PyByteArray_AS_STRING", "PyByteArray_AS_STRING"], [8, 2, 1, "c.PyByteArray_AsString", "PyByteArray_AsString"], [8, 2, 1, "c.PyByteArray_Check", "PyByteArray_Check"], [8, 2, 1, "c.PyByteArray_CheckExact", "PyByteArray_CheckExact"], [8, 2, 1, "c.PyByteArray_Concat", "PyByteArray_Concat"], [8, 2, 1, "c.PyByteArray_FromObject", "PyByteArray_FromObject"], [8, 2, 1, "c.PyByteArray_FromStringAndSize", "PyByteArray_FromStringAndSize"], [8, 2, 1, "c.PyByteArray_GET_SIZE", "PyByteArray_GET_SIZE"], [8, 2, 1, "c.PyByteArray_Resize", "PyByteArray_Resize"], [8, 2, 1, "c.PyByteArray_Size", "PyByteArray_Size"], [8, 0, 1, "c.PyByteArray_Type", "PyByteArray_Type"], [9, 4, 1, "c.PyBytesObject", "PyBytesObject"], [9, 2, 1, "c.PyBytes_AS_STRING", "PyBytes_AS_STRING"], [9, 2, 1, "c.PyBytes_AsString", "PyBytes_AsString"], [9, 2, 1, "c.PyBytes_AsStringAndSize", "PyBytes_AsStringAndSize"], [9, 2, 1, "c.PyBytes_Check", "PyBytes_Check"], [9, 2, 1, "c.PyBytes_CheckExact", "PyBytes_CheckExact"], [9, 2, 1, "c.PyBytes_Concat", "PyBytes_Concat"], [9, 2, 1, "c.PyBytes_ConcatAndDel", "PyBytes_ConcatAndDel"], [9, 2, 1, "c.PyBytes_FromFormat", "PyBytes_FromFormat"], [9, 2, 1, "c.PyBytes_FromFormatV", "PyBytes_FromFormatV"], [9, 2, 1, "c.PyBytes_FromObject", "PyBytes_FromObject"], [9, 2, 1, "c.PyBytes_FromString", "PyBytes_FromString"], [9, 2, 1, "c.PyBytes_FromStringAndSize", "PyBytes_FromStringAndSize"], [9, 2, 1, "c.PyBytes_GET_SIZE", "PyBytes_GET_SIZE"], [9, 2, 1, "c.PyBytes_Size", "PyBytes_Size"], [9, 0, 1, "c.PyBytes_Type", "PyBytes_Type"], [57, 4, 1, "c.PyCFunction", "PyCFunction"], [57, 4, 1, "c.PyCFunctionWithKeywords", "PyCFunctionWithKeywords"], [57, 2, 1, "c.PyCFunction_New", "PyCFunction_New"], [57, 2, 1, "c.PyCFunction_NewEx", "PyCFunction_NewEx"], [57, 4, 1, "c.PyCMethod", "PyCMethod"], [57, 2, 1, "c.PyCMethod_New", "PyCMethod_New"], [36, 2, 1, "c.PyCallIter_Check", "PyCallIter_Check"], [36, 2, 1, "c.PyCallIter_New", "PyCallIter_New"], [36, 0, 1, "c.PyCallIter_Type", "PyCallIter_Type"], [10, 2, 1, "c.PyCallable_Check", "PyCallable_Check"], [11, 4, 1, "c.PyCapsule", "PyCapsule"], [11, 2, 1, "c.PyCapsule_CheckExact", "PyCapsule_CheckExact"], [11, 4, 1, "c.PyCapsule_Destructor", "PyCapsule_Destructor"], [11, 2, 1, "c.PyCapsule_GetContext", "PyCapsule_GetContext"], [11, 2, 1, "c.PyCapsule_GetDestructor", "PyCapsule_GetDestructor"], [11, 2, 1, "c.PyCapsule_GetName", "PyCapsule_GetName"], [11, 2, 1, "c.PyCapsule_GetPointer", "PyCapsule_GetPointer"], [11, 2, 1, "c.PyCapsule_Import", "PyCapsule_Import"], [11, 2, 1, "c.PyCapsule_IsValid", "PyCapsule_IsValid"], [11, 2, 1, "c.PyCapsule_New", "PyCapsule_New"], [11, 2, 1, "c.PyCapsule_SetContext", "PyCapsule_SetContext"], [11, 2, 1, "c.PyCapsule_SetDestructor", "PyCapsule_SetDestructor"], [11, 2, 1, "c.PyCapsule_SetName", "PyCapsule_SetName"], [11, 2, 1, "c.PyCapsule_SetPointer", "PyCapsule_SetPointer"], [12, 4, 1, "c.PyCellObject", "PyCellObject"], [12, 2, 1, "c.PyCell_Check", "PyCell_Check"], [12, 2, 1, "c.PyCell_GET", "PyCell_GET"], [12, 2, 1, "c.PyCell_Get", "PyCell_Get"], [12, 2, 1, "c.PyCell_New", "PyCell_New"], [12, 2, 1, "c.PyCell_SET", "PyCell_SET"], [12, 2, 1, "c.PyCell_Set", "PyCell_Set"], [12, 0, 1, "c.PyCell_Type", "PyCell_Type"], [13, 4, 1, "c.PyCodeEvent", "PyCodeEvent"], [13, 4, 1, "c.PyCodeObject", "PyCodeObject"], [13, 2, 1, "c.PyCode_AddWatcher", "PyCode_AddWatcher"], [13, 2, 1, "c.PyCode_Addr2Line", "PyCode_Addr2Line"], [13, 2, 1, "c.PyCode_Addr2Location", "PyCode_Addr2Location"], [13, 2, 1, "c.PyCode_Check", "PyCode_Check"], [13, 2, 1, "c.PyCode_ClearWatcher", "PyCode_ClearWatcher"], [13, 2, 1, "c.PyCode_GetCellvars", "PyCode_GetCellvars"], [13, 2, 1, "c.PyCode_GetCode", "PyCode_GetCode"], [13, 2, 1, "c.PyCode_GetFreevars", "PyCode_GetFreevars"], [13, 2, 1, "c.PyCode_GetNumFree", "PyCode_GetNumFree"], [13, 2, 1, "c.PyCode_GetVarnames", "PyCode_GetVarnames"], [13, 2, 1, "c.PyCode_NewEmpty", "PyCode_NewEmpty"], [13, 0, 1, "c.PyCode_Type", "PyCode_Type"], [13, 4, 1, "c.PyCode_WatchCallback", "PyCode_WatchCallback"], [14, 2, 1, "c.PyCodec_BackslashReplaceErrors", "PyCodec_BackslashReplaceErrors"], [14, 2, 1, "c.PyCodec_Decode", "PyCodec_Decode"], [14, 2, 1, "c.PyCodec_Decoder", "PyCodec_Decoder"], [14, 2, 1, "c.PyCodec_Encode", "PyCodec_Encode"], [14, 2, 1, "c.PyCodec_Encoder", "PyCodec_Encoder"], [14, 2, 1, "c.PyCodec_IgnoreErrors", "PyCodec_IgnoreErrors"], [14, 2, 1, "c.PyCodec_IncrementalDecoder", "PyCodec_IncrementalDecoder"], [14, 2, 1, "c.PyCodec_IncrementalEncoder", "PyCodec_IncrementalEncoder"], [14, 2, 1, "c.PyCodec_KnownEncoding", "PyCodec_KnownEncoding"], [14, 2, 1, "c.PyCodec_LookupError", "PyCodec_LookupError"], [14, 2, 1, "c.PyCodec_NameReplaceErrors", "PyCodec_NameReplaceErrors"], [14, 2, 1, "c.PyCodec_Register", "PyCodec_Register"], [14, 2, 1, "c.PyCodec_RegisterError", "PyCodec_RegisterError"], [14, 2, 1, "c.PyCodec_ReplaceErrors", "PyCodec_ReplaceErrors"], [14, 2, 1, "c.PyCodec_StreamReader", "PyCodec_StreamReader"], [14, 2, 1, "c.PyCodec_StreamWriter", "PyCodec_StreamWriter"], [14, 2, 1, "c.PyCodec_StrictErrors", "PyCodec_StrictErrors"], [14, 2, 1, "c.PyCodec_Unregister", "PyCodec_Unregister"], [14, 2, 1, "c.PyCodec_XMLCharRefReplaceErrors", "PyCodec_XMLCharRefReplaceErrors"], [63, 4, 1, "c.PyCompactUnicodeObject", "PyCompactUnicodeObject"], [65, 5, 1, "c.PyCompilerFlags", "PyCompilerFlags"], [15, 4, 1, "c.PyComplexObject", "PyComplexObject"], [15, 2, 1, "c.PyComplex_AsCComplex", "PyComplex_AsCComplex"], [15, 2, 1, "c.PyComplex_Check", "PyComplex_Check"], [15, 2, 1, "c.PyComplex_CheckExact", "PyComplex_CheckExact"], [15, 2, 1, "c.PyComplex_FromCComplex", "PyComplex_FromCComplex"], [15, 2, 1, "c.PyComplex_FromDoubles", "PyComplex_FromDoubles"], [15, 2, 1, "c.PyComplex_ImagAsDouble", "PyComplex_ImagAsDouble"], [15, 2, 1, "c.PyComplex_RealAsDouble", "PyComplex_RealAsDouble"], [15, 0, 1, "c.PyComplex_Type", "PyComplex_Type"], [33, 4, 1, "c.PyConfig", "PyConfig"], [33, 2, 1, "c.PyConfig_Clear", "PyConfig_Clear"], [33, 2, 1, "c.PyConfig_InitIsolatedConfig", "PyConfig_InitIsolatedConfig"], [33, 2, 1, "c.PyConfig_InitPythonConfig", "PyConfig_InitPythonConfig"], [33, 2, 1, "c.PyConfig_Read", "PyConfig_Read"], [33, 2, 1, "c.PyConfig_SetArgv", "PyConfig_SetArgv"], [33, 2, 1, "c.PyConfig_SetBytesArgv", "PyConfig_SetBytesArgv"], [33, 2, 1, "c.PyConfig_SetBytesString", "PyConfig_SetBytesString"], [33, 2, 1, "c.PyConfig_SetString", "PyConfig_SetString"], [33, 2, 1, "c.PyConfig_SetWideStringList", "PyConfig_SetWideStringList"], [17, 4, 1, "c.PyContext", "PyContext"], [17, 4, 1, "c.PyContextToken", "PyContextToken"], [17, 2, 1, "c.PyContextToken_CheckExact", "PyContextToken_CheckExact"], [17, 0, 1, "c.PyContextToken_Type", "PyContextToken_Type"], [17, 4, 1, "c.PyContextVar", "PyContextVar"], [17, 2, 1, "c.PyContextVar_CheckExact", "PyContextVar_CheckExact"], [17, 2, 1, "c.PyContextVar_Get", "PyContextVar_Get"], [17, 2, 1, "c.PyContextVar_New", "PyContextVar_New"], [17, 2, 1, "c.PyContextVar_Reset", "PyContextVar_Reset"], [17, 2, 1, "c.PyContextVar_Set", "PyContextVar_Set"], [17, 0, 1, "c.PyContextVar_Type", "PyContextVar_Type"], [17, 2, 1, "c.PyContext_CheckExact", "PyContext_CheckExact"], [17, 2, 1, "c.PyContext_Copy", "PyContext_Copy"], [17, 2, 1, "c.PyContext_CopyCurrent", "PyContext_CopyCurrent"], [17, 2, 1, "c.PyContext_Enter", "PyContext_Enter"], [17, 2, 1, "c.PyContext_Exit", "PyContext_Exit"], [17, 2, 1, "c.PyContext_New", "PyContext_New"], [17, 0, 1, "c.PyContext_Type", "PyContext_Type"], [19, 4, 1, "c.PyCoroObject", "PyCoroObject"], [19, 2, 1, "c.PyCoro_CheckExact", "PyCoro_CheckExact"], [19, 2, 1, "c.PyCoro_New", "PyCoro_New"], [19, 0, 1, "c.PyCoro_Type", "PyCoro_Type"], [20, 2, 1, "c.PyDateTime_Check", "PyDateTime_Check"], [20, 2, 1, "c.PyDateTime_CheckExact", "PyDateTime_CheckExact"], [20, 2, 1, "c.PyDateTime_DATE_GET_FOLD", "PyDateTime_DATE_GET_FOLD"], [20, 2, 1, "c.PyDateTime_DATE_GET_HOUR", "PyDateTime_DATE_GET_HOUR"], [20, 2, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "PyDateTime_DATE_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_MINUTE", "PyDateTime_DATE_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_DATE_GET_SECOND", "PyDateTime_DATE_GET_SECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_TZINFO", "PyDateTime_DATE_GET_TZINFO"], [20, 2, 1, "c.PyDateTime_DELTA_GET_DAYS", "PyDateTime_DELTA_GET_DAYS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "PyDateTime_DELTA_GET_MICROSECONDS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_SECONDS", "PyDateTime_DELTA_GET_SECONDS"], [20, 4, 1, "c.PyDateTime_Date", "PyDateTime_Date"], [20, 4, 1, "c.PyDateTime_DateTime", "PyDateTime_DateTime"], [20, 0, 1, "c.PyDateTime_DateTimeType", "PyDateTime_DateTimeType"], [20, 0, 1, "c.PyDateTime_DateType", "PyDateTime_DateType"], [20, 4, 1, "c.PyDateTime_Delta", "PyDateTime_Delta"], [20, 0, 1, "c.PyDateTime_DeltaType", "PyDateTime_DeltaType"], [20, 2, 1, "c.PyDateTime_FromDateAndTime", "PyDateTime_FromDateAndTime"], [20, 2, 1, "c.PyDateTime_FromDateAndTimeAndFold", "PyDateTime_FromDateAndTimeAndFold"], [20, 2, 1, "c.PyDateTime_FromTimestamp", "PyDateTime_FromTimestamp"], [20, 2, 1, "c.PyDateTime_GET_DAY", "PyDateTime_GET_DAY"], [20, 2, 1, "c.PyDateTime_GET_MONTH", "PyDateTime_GET_MONTH"], [20, 2, 1, "c.PyDateTime_GET_YEAR", "PyDateTime_GET_YEAR"], [20, 2, 1, "c.PyDateTime_TIME_GET_FOLD", "PyDateTime_TIME_GET_FOLD"], [20, 2, 1, "c.PyDateTime_TIME_GET_HOUR", "PyDateTime_TIME_GET_HOUR"], [20, 2, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "PyDateTime_TIME_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_MINUTE", "PyDateTime_TIME_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_TIME_GET_SECOND", "PyDateTime_TIME_GET_SECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_TZINFO", "PyDateTime_TIME_GET_TZINFO"], [20, 0, 1, "c.PyDateTime_TZInfoType", "PyDateTime_TZInfoType"], [20, 4, 1, "c.PyDateTime_Time", "PyDateTime_Time"], [20, 0, 1, "c.PyDateTime_TimeType", "PyDateTime_TimeType"], [20, 0, 1, "c.PyDateTime_TimeZone_UTC", "PyDateTime_TimeZone_UTC"], [20, 2, 1, "c.PyDate_Check", "PyDate_Check"], [20, 2, 1, "c.PyDate_CheckExact", "PyDate_CheckExact"], [20, 2, 1, "c.PyDate_FromDate", "PyDate_FromDate"], [20, 2, 1, "c.PyDate_FromTimestamp", "PyDate_FromTimestamp"], [20, 2, 1, "c.PyDelta_Check", "PyDelta_Check"], [20, 2, 1, "c.PyDelta_CheckExact", "PyDelta_CheckExact"], [20, 2, 1, "c.PyDelta_FromDSU", "PyDelta_FromDSU"], [21, 2, 1, "c.PyDescr_IsData", "PyDescr_IsData"], [21, 2, 1, "c.PyDescr_NewClassMethod", "PyDescr_NewClassMethod"], [21, 2, 1, "c.PyDescr_NewGetSet", "PyDescr_NewGetSet"], [21, 2, 1, "c.PyDescr_NewMember", "PyDescr_NewMember"], [21, 2, 1, "c.PyDescr_NewMethod", "PyDescr_NewMethod"], [21, 2, 1, "c.PyDescr_NewWrapper", "PyDescr_NewWrapper"], [22, 4, 1, "c.PyDictObject", "PyDictObject"], [22, 2, 1, "c.PyDictProxy_New", "PyDictProxy_New"], [22, 2, 1, "c.PyDict_AddWatcher", "PyDict_AddWatcher"], [22, 2, 1, "c.PyDict_Check", "PyDict_Check"], [22, 2, 1, "c.PyDict_CheckExact", "PyDict_CheckExact"], [22, 2, 1, "c.PyDict_Clear", "PyDict_Clear"], [22, 2, 1, "c.PyDict_ClearWatcher", "PyDict_ClearWatcher"], [22, 2, 1, "c.PyDict_Contains", "PyDict_Contains"], [22, 2, 1, "c.PyDict_Copy", "PyDict_Copy"], [22, 2, 1, "c.PyDict_DelItem", "PyDict_DelItem"], [22, 2, 1, "c.PyDict_DelItemString", "PyDict_DelItemString"], [22, 2, 1, "c.PyDict_GetItem", "PyDict_GetItem"], [22, 2, 1, "c.PyDict_GetItemString", "PyDict_GetItemString"], [22, 2, 1, "c.PyDict_GetItemWithError", "PyDict_GetItemWithError"], [22, 2, 1, "c.PyDict_Items", "PyDict_Items"], [22, 2, 1, "c.PyDict_Keys", "PyDict_Keys"], [22, 2, 1, "c.PyDict_Merge", "PyDict_Merge"], [22, 2, 1, "c.PyDict_MergeFromSeq2", "PyDict_MergeFromSeq2"], [22, 2, 1, "c.PyDict_New", "PyDict_New"], [22, 2, 1, "c.PyDict_Next", "PyDict_Next"], [22, 2, 1, "c.PyDict_SetDefault", "PyDict_SetDefault"], [22, 2, 1, "c.PyDict_SetItem", "PyDict_SetItem"], [22, 2, 1, "c.PyDict_SetItemString", "PyDict_SetItemString"], [22, 2, 1, "c.PyDict_Size", "PyDict_Size"], [22, 0, 1, "c.PyDict_Type", "PyDict_Type"], [22, 2, 1, "c.PyDict_Unwatch", "PyDict_Unwatch"], [22, 2, 1, "c.PyDict_Update", "PyDict_Update"], [22, 2, 1, "c.PyDict_Values", "PyDict_Values"], [22, 2, 1, "c.PyDict_Watch", "PyDict_Watch"], [22, 4, 1, "c.PyDict_WatchCallback", "PyDict_WatchCallback"], [22, 4, 1, "c.PyDict_WatchEvent", "PyDict_WatchEvent"], [34, 1, 1, "c.PyDoc_STR", "PyDoc_STR"], [34, 1, 1, "c.PyDoc_STRVAR", "PyDoc_STRVAR"], [23, 2, 1, "c.PyErr_BadArgument", "PyErr_BadArgument"], [23, 2, 1, "c.PyErr_BadInternalCall", "PyErr_BadInternalCall"], [23, 2, 1, "c.PyErr_CheckSignals", "PyErr_CheckSignals"], [23, 2, 1, "c.PyErr_Clear", "PyErr_Clear"], [23, 2, 1, "c.PyErr_DisplayException", "PyErr_DisplayException"], [23, 2, 1, "c.PyErr_ExceptionMatches", "PyErr_ExceptionMatches"], [23, 2, 1, "c.PyErr_Fetch", "PyErr_Fetch"], [23, 2, 1, "c.PyErr_Format", "PyErr_Format"], [23, 2, 1, "c.PyErr_FormatV", "PyErr_FormatV"], [23, 2, 1, "c.PyErr_GetExcInfo", "PyErr_GetExcInfo"], [23, 2, 1, "c.PyErr_GetHandledException", "PyErr_GetHandledException"], [23, 2, 1, "c.PyErr_GetRaisedException", "PyErr_GetRaisedException"], [23, 2, 1, "c.PyErr_GivenExceptionMatches", "PyErr_GivenExceptionMatches"], [23, 2, 1, "c.PyErr_NewException", "PyErr_NewException"], [23, 2, 1, "c.PyErr_NewExceptionWithDoc", "PyErr_NewExceptionWithDoc"], [23, 2, 1, "c.PyErr_NoMemory", "PyErr_NoMemory"], [23, 2, 1, "c.PyErr_NormalizeException", "PyErr_NormalizeException"], [23, 2, 1, "c.PyErr_Occurred", "PyErr_Occurred"], [23, 2, 1, "c.PyErr_Print", "PyErr_Print"], [23, 2, 1, "c.PyErr_PrintEx", "PyErr_PrintEx"], [23, 2, 1, "c.PyErr_ResourceWarning", "PyErr_ResourceWarning"], [23, 2, 1, "c.PyErr_Restore", "PyErr_Restore"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErr", "PyErr_SetExcFromWindowsErr"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "PyErr_SetExcFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "PyErr_SetExcFromWindowsErrWithFilenameObject"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "PyErr_SetExcFromWindowsErrWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetExcInfo", "PyErr_SetExcInfo"], [23, 2, 1, "c.PyErr_SetFromErrno", "PyErr_SetFromErrno"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilename", "PyErr_SetFromErrnoWithFilename"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "PyErr_SetFromErrnoWithFilenameObject"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "PyErr_SetFromErrnoWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetFromWindowsErr", "PyErr_SetFromWindowsErr"], [23, 2, 1, "c.PyErr_SetFromWindowsErrWithFilename", "PyErr_SetFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetHandledException", "PyErr_SetHandledException"], [23, 2, 1, "c.PyErr_SetImportError", "PyErr_SetImportError"], [23, 2, 1, "c.PyErr_SetImportErrorSubclass", "PyErr_SetImportErrorSubclass"], [23, 2, 1, "c.PyErr_SetInterrupt", "PyErr_SetInterrupt"], [23, 2, 1, "c.PyErr_SetInterruptEx", "PyErr_SetInterruptEx"], [23, 2, 1, "c.PyErr_SetNone", "PyErr_SetNone"], [23, 2, 1, "c.PyErr_SetObject", "PyErr_SetObject"], [23, 2, 1, "c.PyErr_SetRaisedException", "PyErr_SetRaisedException"], [23, 2, 1, "c.PyErr_SetString", "PyErr_SetString"], [23, 2, 1, "c.PyErr_SyntaxLocation", "PyErr_SyntaxLocation"], [23, 2, 1, "c.PyErr_SyntaxLocationEx", "PyErr_SyntaxLocationEx"], [23, 2, 1, "c.PyErr_SyntaxLocationObject", "PyErr_SyntaxLocationObject"], [23, 2, 1, "c.PyErr_WarnEx", "PyErr_WarnEx"], [23, 2, 1, "c.PyErr_WarnExplicit", "PyErr_WarnExplicit"], [23, 2, 1, "c.PyErr_WarnExplicitObject", "PyErr_WarnExplicitObject"], [23, 2, 1, "c.PyErr_WarnFormat", "PyErr_WarnFormat"], [23, 2, 1, "c.PyErr_WriteUnraisable", "PyErr_WriteUnraisable"], [32, 2, 1, "c.PyEval_AcquireLock", "PyEval_AcquireLock"], [32, 2, 1, "c.PyEval_AcquireThread", "PyEval_AcquireThread"], [65, 2, 1, "c.PyEval_EvalCode", "PyEval_EvalCode"], [65, 2, 1, "c.PyEval_EvalCodeEx", "PyEval_EvalCodeEx"], [65, 2, 1, "c.PyEval_EvalFrame", "PyEval_EvalFrame"], [65, 2, 1, "c.PyEval_EvalFrameEx", "PyEval_EvalFrameEx"], [52, 2, 1, "c.PyEval_GetBuiltins", "PyEval_GetBuiltins"], [52, 2, 1, "c.PyEval_GetFrame", "PyEval_GetFrame"], [52, 2, 1, "c.PyEval_GetFuncDesc", "PyEval_GetFuncDesc"], [52, 2, 1, "c.PyEval_GetFuncName", "PyEval_GetFuncName"], [52, 2, 1, "c.PyEval_GetGlobals", "PyEval_GetGlobals"], [52, 2, 1, "c.PyEval_GetLocals", "PyEval_GetLocals"], [32, 2, 1, "c.PyEval_InitThreads", "PyEval_InitThreads"], [65, 2, 1, "c.PyEval_MergeCompilerFlags", "PyEval_MergeCompilerFlags"], [32, 2, 1, "c.PyEval_ReleaseLock", "PyEval_ReleaseLock"], [32, 2, 1, "c.PyEval_ReleaseThread", "PyEval_ReleaseThread"], [32, 2, 1, "c.PyEval_RestoreThread", "PyEval_RestoreThread"], [32, 2, 1, "c.PyEval_SaveThread", "PyEval_SaveThread"], [32, 2, 1, "c.PyEval_SetProfile", "PyEval_SetProfile"], [32, 2, 1, "c.PyEval_SetProfileAllThreads", "PyEval_SetProfileAllThreads"], [32, 2, 1, "c.PyEval_SetTrace", "PyEval_SetTrace"], [32, 2, 1, "c.PyEval_SetTraceAllThreads", "PyEval_SetTraceAllThreads"], [32, 2, 1, "c.PyEval_ThreadsInitialized", "PyEval_ThreadsInitialized"], [23, 2, 1, "c.PyException_GetArgs", "PyException_GetArgs"], [23, 2, 1, "c.PyException_GetCause", "PyException_GetCause"], [23, 2, 1, "c.PyException_GetContext", "PyException_GetContext"], [23, 2, 1, "c.PyException_GetTraceback", "PyException_GetTraceback"], [23, 2, 1, "c.PyException_SetArgs", "PyException_SetArgs"], [23, 2, 1, "c.PyException_SetCause", "PyException_SetCause"], [23, 2, 1, "c.PyException_SetContext", "PyException_SetContext"], [23, 2, 1, "c.PyException_SetTraceback", "PyException_SetTraceback"], [24, 2, 1, "c.PyFile_FromFd", "PyFile_FromFd"], [24, 2, 1, "c.PyFile_GetLine", "PyFile_GetLine"], [24, 2, 1, "c.PyFile_SetOpenCodeHook", "PyFile_SetOpenCodeHook"], [24, 2, 1, "c.PyFile_WriteObject", "PyFile_WriteObject"], [24, 2, 1, "c.PyFile_WriteString", "PyFile_WriteString"], [25, 4, 1, "c.PyFloatObject", "PyFloatObject"], [25, 2, 1, "c.PyFloat_AS_DOUBLE", "PyFloat_AS_DOUBLE"], [25, 2, 1, "c.PyFloat_AsDouble", "PyFloat_AsDouble"], [25, 2, 1, "c.PyFloat_Check", "PyFloat_Check"], [25, 2, 1, "c.PyFloat_CheckExact", "PyFloat_CheckExact"], [25, 2, 1, "c.PyFloat_FromDouble", "PyFloat_FromDouble"], [25, 2, 1, "c.PyFloat_FromString", "PyFloat_FromString"], [25, 2, 1, "c.PyFloat_GetInfo", "PyFloat_GetInfo"], [25, 2, 1, "c.PyFloat_GetMax", "PyFloat_GetMax"], [25, 2, 1, "c.PyFloat_GetMin", "PyFloat_GetMin"], [25, 2, 1, "c.PyFloat_Pack2", "PyFloat_Pack2"], [25, 2, 1, "c.PyFloat_Pack4", "PyFloat_Pack4"], [25, 2, 1, "c.PyFloat_Pack8", "PyFloat_Pack8"], [25, 0, 1, "c.PyFloat_Type", "PyFloat_Type"], [25, 2, 1, "c.PyFloat_Unpack2", "PyFloat_Unpack2"], [25, 2, 1, "c.PyFloat_Unpack4", "PyFloat_Unpack4"], [25, 2, 1, "c.PyFloat_Unpack8", "PyFloat_Unpack8"], [26, 4, 1, "c.PyFrameObject", "PyFrameObject"], [26, 2, 1, "c.PyFrame_Check", "PyFrame_Check"], [26, 2, 1, "c.PyFrame_GetBack", "PyFrame_GetBack"], [26, 2, 1, "c.PyFrame_GetBuiltins", "PyFrame_GetBuiltins"], [26, 2, 1, "c.PyFrame_GetCode", "PyFrame_GetCode"], [26, 2, 1, "c.PyFrame_GetGenerator", "PyFrame_GetGenerator"], [26, 2, 1, "c.PyFrame_GetGlobals", "PyFrame_GetGlobals"], [26, 2, 1, "c.PyFrame_GetLasti", "PyFrame_GetLasti"], [26, 2, 1, "c.PyFrame_GetLineNumber", "PyFrame_GetLineNumber"], [26, 2, 1, "c.PyFrame_GetLocals", "PyFrame_GetLocals"], [26, 2, 1, "c.PyFrame_GetVar", "PyFrame_GetVar"], [26, 2, 1, "c.PyFrame_GetVarString", "PyFrame_GetVarString"], [26, 0, 1, "c.PyFrame_Type", "PyFrame_Type"], [54, 2, 1, "c.PyFrozenSet_Check", "PyFrozenSet_Check"], [54, 2, 1, "c.PyFrozenSet_CheckExact", "PyFrozenSet_CheckExact"], [54, 2, 1, "c.PyFrozenSet_New", "PyFrozenSet_New"], [54, 0, 1, "c.PyFrozenSet_Type", "PyFrozenSet_Type"], [27, 4, 1, "c.PyFunctionObject", "PyFunctionObject"], [27, 2, 1, "c.PyFunction_AddWatcher", "PyFunction_AddWatcher"], [27, 2, 1, "c.PyFunction_Check", "PyFunction_Check"], [27, 2, 1, "c.PyFunction_ClearWatcher", "PyFunction_ClearWatcher"], [27, 2, 1, "c.PyFunction_GetAnnotations", "PyFunction_GetAnnotations"], [27, 2, 1, "c.PyFunction_GetClosure", "PyFunction_GetClosure"], [27, 2, 1, "c.PyFunction_GetCode", "PyFunction_GetCode"], [27, 2, 1, "c.PyFunction_GetDefaults", "PyFunction_GetDefaults"], [27, 2, 1, "c.PyFunction_GetGlobals", "PyFunction_GetGlobals"], [27, 2, 1, "c.PyFunction_GetModule", "PyFunction_GetModule"], [27, 2, 1, "c.PyFunction_New", "PyFunction_New"], [27, 2, 1, "c.PyFunction_NewWithQualName", "PyFunction_NewWithQualName"], [27, 2, 1, "c.PyFunction_SetAnnotations", "PyFunction_SetAnnotations"], [27, 2, 1, "c.PyFunction_SetClosure", "PyFunction_SetClosure"], [27, 2, 1, "c.PyFunction_SetDefaults", "PyFunction_SetDefaults"], [27, 2, 1, "c.PyFunction_SetVectorcall", "PyFunction_SetVectorcall"], [27, 0, 1, "c.PyFunction_Type", "PyFunction_Type"], [27, 4, 1, "c.PyFunction_WatchCallback", "PyFunction_WatchCallback"], [27, 4, 1, "c.PyFunction_WatchEvent", "PyFunction_WatchEvent"], [28, 2, 1, "c.PyGC_Collect", "PyGC_Collect"], [28, 2, 1, "c.PyGC_Disable", "PyGC_Disable"], [28, 2, 1, "c.PyGC_Enable", "PyGC_Enable"], [28, 2, 1, "c.PyGC_IsEnabled", "PyGC_IsEnabled"], [32, 2, 1, "c.PyGILState_Check", "PyGILState_Check"], [32, 2, 1, "c.PyGILState_Ensure", "PyGILState_Ensure"], [32, 2, 1, "c.PyGILState_GetThisThreadState", "PyGILState_GetThisThreadState"], [32, 2, 1, "c.PyGILState_Release", "PyGILState_Release"], [29, 4, 1, "c.PyGenObject", "PyGenObject"], [29, 2, 1, "c.PyGen_Check", "PyGen_Check"], [29, 2, 1, "c.PyGen_CheckExact", "PyGen_CheckExact"], [29, 2, 1, "c.PyGen_New", "PyGen_New"], [29, 2, 1, "c.PyGen_NewWithQualName", "PyGen_NewWithQualName"], [29, 0, 1, "c.PyGen_Type", "PyGen_Type"], [57, 4, 1, "c.PyGetSetDef", "PyGetSetDef"], [30, 2, 1, "c.PyImport_AddModule", "PyImport_AddModule"], [30, 2, 1, "c.PyImport_AddModuleObject", "PyImport_AddModuleObject"], [30, 2, 1, "c.PyImport_AppendInittab", "PyImport_AppendInittab"], [30, 2, 1, "c.PyImport_ExecCodeModule", "PyImport_ExecCodeModule"], [30, 2, 1, "c.PyImport_ExecCodeModuleEx", "PyImport_ExecCodeModuleEx"], [30, 2, 1, "c.PyImport_ExecCodeModuleObject", "PyImport_ExecCodeModuleObject"], [30, 2, 1, "c.PyImport_ExecCodeModuleWithPathnames", "PyImport_ExecCodeModuleWithPathnames"], [30, 2, 1, "c.PyImport_ExtendInittab", "PyImport_ExtendInittab"], [30, 0, 1, "c.PyImport_FrozenModules", "PyImport_FrozenModules"], [30, 2, 1, "c.PyImport_GetImporter", "PyImport_GetImporter"], [30, 2, 1, "c.PyImport_GetMagicNumber", "PyImport_GetMagicNumber"], [30, 2, 1, "c.PyImport_GetMagicTag", "PyImport_GetMagicTag"], [30, 2, 1, "c.PyImport_GetModule", "PyImport_GetModule"], [30, 2, 1, "c.PyImport_GetModuleDict", "PyImport_GetModuleDict"], [30, 2, 1, "c.PyImport_Import", "PyImport_Import"], [30, 2, 1, "c.PyImport_ImportFrozenModule", "PyImport_ImportFrozenModule"], [30, 2, 1, "c.PyImport_ImportFrozenModuleObject", "PyImport_ImportFrozenModuleObject"], [30, 2, 1, "c.PyImport_ImportModule", "PyImport_ImportModule"], [30, 2, 1, "c.PyImport_ImportModuleEx", "PyImport_ImportModuleEx"], [30, 2, 1, "c.PyImport_ImportModuleLevel", "PyImport_ImportModuleLevel"], [30, 2, 1, "c.PyImport_ImportModuleLevelObject", "PyImport_ImportModuleLevelObject"], [30, 2, 1, "c.PyImport_ImportModuleNoBlock", "PyImport_ImportModuleNoBlock"], [30, 2, 1, "c.PyImport_ReloadModule", "PyImport_ReloadModule"], [46, 2, 1, "c.PyIndex_Check", "PyIndex_Check"], [70, 2, 1, "c.PyInit_modulename", "PyInit_modulename"], [43, 2, 1, "c.PyInstanceMethod_Check", "PyInstanceMethod_Check"], [43, 2, 1, "c.PyInstanceMethod_Function", "PyInstanceMethod_Function"], [43, 2, 1, "c.PyInstanceMethod_GET_FUNCTION", "PyInstanceMethod_GET_FUNCTION"], [43, 2, 1, "c.PyInstanceMethod_New", "PyInstanceMethod_New"], [43, 0, 1, "c.PyInstanceMethod_Type", "PyInstanceMethod_Type"], [32, 4, 1, "c.PyInterpreterConfig", "PyInterpreterConfig"], [32, 1, 1, "c.PyInterpreterConfig_DEFAULT_GIL", "PyInterpreterConfig_DEFAULT_GIL"], [32, 1, 1, "c.PyInterpreterConfig_OWN_GIL", "PyInterpreterConfig_OWN_GIL"], [32, 1, 1, "c.PyInterpreterConfig_SHARED_GIL", "PyInterpreterConfig_SHARED_GIL"], [32, 4, 1, "c.PyInterpreterState", "PyInterpreterState"], [32, 2, 1, "c.PyInterpreterState_Clear", "PyInterpreterState_Clear"], [32, 2, 1, "c.PyInterpreterState_Delete", "PyInterpreterState_Delete"], [32, 2, 1, "c.PyInterpreterState_Get", "PyInterpreterState_Get"], [32, 2, 1, "c.PyInterpreterState_GetDict", "PyInterpreterState_GetDict"], [32, 2, 1, "c.PyInterpreterState_GetID", "PyInterpreterState_GetID"], [32, 2, 1, "c.PyInterpreterState_Head", "PyInterpreterState_Head"], [32, 2, 1, "c.PyInterpreterState_Main", "PyInterpreterState_Main"], [32, 2, 1, "c.PyInterpreterState_New", "PyInterpreterState_New"], [32, 2, 1, "c.PyInterpreterState_Next", "PyInterpreterState_Next"], [32, 2, 1, "c.PyInterpreterState_ThreadHead", "PyInterpreterState_ThreadHead"], [35, 2, 1, "c.PyIter_Check", "PyIter_Check"], [35, 2, 1, "c.PyIter_Next", "PyIter_Next"], [35, 2, 1, "c.PyIter_Send", "PyIter_Send"], [37, 4, 1, "c.PyListObject", "PyListObject"], [37, 2, 1, "c.PyList_Append", "PyList_Append"], [37, 2, 1, "c.PyList_AsTuple", "PyList_AsTuple"], [37, 2, 1, "c.PyList_Check", "PyList_Check"], [37, 2, 1, "c.PyList_CheckExact", "PyList_CheckExact"], [37, 2, 1, "c.PyList_GET_ITEM", "PyList_GET_ITEM"], [37, 2, 1, "c.PyList_GET_SIZE", "PyList_GET_SIZE"], [37, 2, 1, "c.PyList_GetItem", "PyList_GetItem"], [37, 2, 1, "c.PyList_GetSlice", "PyList_GetSlice"], [37, 2, 1, "c.PyList_Insert", "PyList_Insert"], [37, 2, 1, "c.PyList_New", "PyList_New"], [37, 2, 1, "c.PyList_Reverse", "PyList_Reverse"], [37, 2, 1, "c.PyList_SET_ITEM", "PyList_SET_ITEM"], [37, 2, 1, "c.PyList_SetItem", "PyList_SetItem"], [37, 2, 1, "c.PyList_SetSlice", "PyList_SetSlice"], [37, 2, 1, "c.PyList_Size", "PyList_Size"], [37, 2, 1, "c.PyList_Sort", "PyList_Sort"], [37, 0, 1, "c.PyList_Type", "PyList_Type"], [38, 4, 1, "c.PyLongObject", "PyLongObject"], [38, 2, 1, "c.PyLong_AsDouble", "PyLong_AsDouble"], [38, 2, 1, "c.PyLong_AsLong", "PyLong_AsLong"], [38, 2, 1, "c.PyLong_AsLongAndOverflow", "PyLong_AsLongAndOverflow"], [38, 2, 1, "c.PyLong_AsLongLong", "PyLong_AsLongLong"], [38, 2, 1, "c.PyLong_AsLongLongAndOverflow", "PyLong_AsLongLongAndOverflow"], [38, 2, 1, "c.PyLong_AsSize_t", "PyLong_AsSize_t"], [38, 2, 1, "c.PyLong_AsSsize_t", "PyLong_AsSsize_t"], [38, 2, 1, "c.PyLong_AsUnsignedLong", "PyLong_AsUnsignedLong"], [38, 2, 1, "c.PyLong_AsUnsignedLongLong", "PyLong_AsUnsignedLongLong"], [38, 2, 1, "c.PyLong_AsUnsignedLongLongMask", "PyLong_AsUnsignedLongLongMask"], [38, 2, 1, "c.PyLong_AsUnsignedLongMask", "PyLong_AsUnsignedLongMask"], [38, 2, 1, "c.PyLong_AsVoidPtr", "PyLong_AsVoidPtr"], [38, 2, 1, "c.PyLong_Check", "PyLong_Check"], [38, 2, 1, "c.PyLong_CheckExact", "PyLong_CheckExact"], [38, 2, 1, "c.PyLong_FromDouble", "PyLong_FromDouble"], [38, 2, 1, "c.PyLong_FromLong", "PyLong_FromLong"], [38, 2, 1, "c.PyLong_FromLongLong", "PyLong_FromLongLong"], [38, 2, 1, "c.PyLong_FromSize_t", "PyLong_FromSize_t"], [38, 2, 1, "c.PyLong_FromSsize_t", "PyLong_FromSsize_t"], [38, 2, 1, "c.PyLong_FromString", "PyLong_FromString"], [38, 2, 1, "c.PyLong_FromUnicodeObject", "PyLong_FromUnicodeObject"], [38, 2, 1, "c.PyLong_FromUnsignedLong", "PyLong_FromUnsignedLong"], [38, 2, 1, "c.PyLong_FromUnsignedLongLong", "PyLong_FromUnsignedLongLong"], [38, 2, 1, "c.PyLong_FromVoidPtr", "PyLong_FromVoidPtr"], [38, 0, 1, "c.PyLong_Type", "PyLong_Type"], [34, 1, 1, "c.PyMODINIT_FUNC", "PyMODINIT_FUNC"], [62, 4, 1, "c.PyMappingMethods", "PyMappingMethods"], [39, 2, 1, "c.PyMapping_Check", "PyMapping_Check"], [39, 2, 1, "c.PyMapping_DelItem", "PyMapping_DelItem"], [39, 2, 1, "c.PyMapping_DelItemString", "PyMapping_DelItemString"], [39, 2, 1, "c.PyMapping_GetItemString", "PyMapping_GetItemString"], [39, 2, 1, "c.PyMapping_HasKey", "PyMapping_HasKey"], [39, 2, 1, "c.PyMapping_HasKeyString", "PyMapping_HasKeyString"], [39, 2, 1, "c.PyMapping_Items", "PyMapping_Items"], [39, 2, 1, "c.PyMapping_Keys", "PyMapping_Keys"], [39, 2, 1, "c.PyMapping_Length", "PyMapping_Length"], [39, 2, 1, "c.PyMapping_SetItemString", "PyMapping_SetItemString"], [39, 2, 1, "c.PyMapping_Size", "PyMapping_Size"], [39, 2, 1, "c.PyMapping_Values", "PyMapping_Values"], [40, 2, 1, "c.PyMarshal_ReadLastObjectFromFile", "PyMarshal_ReadLastObjectFromFile"], [40, 2, 1, "c.PyMarshal_ReadLongFromFile", "PyMarshal_ReadLongFromFile"], [40, 2, 1, "c.PyMarshal_ReadObjectFromFile", "PyMarshal_ReadObjectFromFile"], [40, 2, 1, "c.PyMarshal_ReadObjectFromString", "PyMarshal_ReadObjectFromString"], [40, 2, 1, "c.PyMarshal_ReadShortFromFile", "PyMarshal_ReadShortFromFile"], [40, 2, 1, "c.PyMarshal_WriteLongToFile", "PyMarshal_WriteLongToFile"], [40, 2, 1, "c.PyMarshal_WriteObjectToFile", "PyMarshal_WriteObjectToFile"], [40, 2, 1, "c.PyMarshal_WriteObjectToString", "PyMarshal_WriteObjectToString"], [41, 4, 1, "c.PyMemAllocatorDomain", "PyMemAllocatorDomain"], [41, 4, 1, "c.PyMemAllocatorEx", "PyMemAllocatorEx"], [41, 2, 1, "c.PyMem_Calloc", "PyMem_Calloc"], [41, 2, 1, "c.PyMem_Del", "PyMem_Del"], [41, 2, 1, "c.PyMem_Free", "PyMem_Free"], [41, 2, 1, "c.PyMem_GetAllocator", "PyMem_GetAllocator"], [41, 2, 1, "c.PyMem_Malloc", "PyMem_Malloc"], [41, 1, 1, "c.PyMem_New", "PyMem_New"], [41, 2, 1, "c.PyMem_RawCalloc", "PyMem_RawCalloc"], [41, 2, 1, "c.PyMem_RawFree", "PyMem_RawFree"], [41, 2, 1, "c.PyMem_RawMalloc", "PyMem_RawMalloc"], [41, 2, 1, "c.PyMem_RawRealloc", "PyMem_RawRealloc"], [41, 2, 1, "c.PyMem_Realloc", "PyMem_Realloc"], [41, 1, 1, "c.PyMem_Resize", "PyMem_Resize"], [41, 2, 1, "c.PyMem_SetAllocator", "PyMem_SetAllocator"], [41, 2, 1, "c.PyMem_SetupDebugHooks", "PyMem_SetupDebugHooks"], [57, 4, 1, "c.PyMemberDef", "PyMemberDef"], [57, 2, 1, "c.PyMember_GetOne", "PyMember_GetOne"], [57, 2, 1, "c.PyMember_SetOne", "PyMember_SetOne"], [42, 2, 1, "c.PyMemoryView_Check", "PyMemoryView_Check"], [42, 2, 1, "c.PyMemoryView_FromBuffer", "PyMemoryView_FromBuffer"], [42, 2, 1, "c.PyMemoryView_FromMemory", "PyMemoryView_FromMemory"], [42, 2, 1, "c.PyMemoryView_FromObject", "PyMemoryView_FromObject"], [42, 2, 1, "c.PyMemoryView_GET_BASE", "PyMemoryView_GET_BASE"], [42, 2, 1, "c.PyMemoryView_GET_BUFFER", "PyMemoryView_GET_BUFFER"], [42, 2, 1, "c.PyMemoryView_GetContiguous", "PyMemoryView_GetContiguous"], [57, 4, 1, "c.PyMethodDef", "PyMethodDef"], [43, 2, 1, "c.PyMethod_Check", "PyMethod_Check"], [43, 2, 1, "c.PyMethod_Function", "PyMethod_Function"], [43, 2, 1, "c.PyMethod_GET_FUNCTION", "PyMethod_GET_FUNCTION"], [43, 2, 1, "c.PyMethod_GET_SELF", "PyMethod_GET_SELF"], [43, 2, 1, "c.PyMethod_New", "PyMethod_New"], [43, 2, 1, "c.PyMethod_Self", "PyMethod_Self"], [43, 0, 1, "c.PyMethod_Type", "PyMethod_Type"], [44, 4, 1, "c.PyModuleDef", "PyModuleDef"], [44, 2, 1, "c.PyModuleDef_Init", "PyModuleDef_Init"], [44, 4, 1, "c.PyModuleDef_Slot", "PyModuleDef_Slot"], [44, 2, 1, "c.PyModule_AddFunctions", "PyModule_AddFunctions"], [44, 2, 1, "c.PyModule_AddIntConstant", "PyModule_AddIntConstant"], [44, 1, 1, "c.PyModule_AddIntMacro", "PyModule_AddIntMacro"], [44, 2, 1, "c.PyModule_AddObject", "PyModule_AddObject"], [44, 2, 1, "c.PyModule_AddObjectRef", "PyModule_AddObjectRef"], [44, 2, 1, "c.PyModule_AddStringConstant", "PyModule_AddStringConstant"], [44, 1, 1, "c.PyModule_AddStringMacro", "PyModule_AddStringMacro"], [44, 2, 1, "c.PyModule_AddType", "PyModule_AddType"], [44, 2, 1, "c.PyModule_Check", "PyModule_Check"], [44, 2, 1, "c.PyModule_CheckExact", "PyModule_CheckExact"], [44, 2, 1, "c.PyModule_Create", "PyModule_Create"], [44, 2, 1, "c.PyModule_Create2", "PyModule_Create2"], [44, 2, 1, "c.PyModule_ExecDef", "PyModule_ExecDef"], [44, 2, 1, "c.PyModule_FromDefAndSpec", "PyModule_FromDefAndSpec"], [44, 2, 1, "c.PyModule_FromDefAndSpec2", "PyModule_FromDefAndSpec2"], [44, 2, 1, "c.PyModule_GetDef", "PyModule_GetDef"], [44, 2, 1, "c.PyModule_GetDict", "PyModule_GetDict"], [44, 2, 1, "c.PyModule_GetFilename", "PyModule_GetFilename"], [44, 2, 1, "c.PyModule_GetFilenameObject", "PyModule_GetFilenameObject"], [44, 2, 1, "c.PyModule_GetName", "PyModule_GetName"], [44, 2, 1, "c.PyModule_GetNameObject", "PyModule_GetNameObject"], [44, 2, 1, "c.PyModule_GetState", "PyModule_GetState"], [44, 2, 1, "c.PyModule_New", "PyModule_New"], [44, 2, 1, "c.PyModule_NewObject", "PyModule_NewObject"], [44, 2, 1, "c.PyModule_SetDocString", "PyModule_SetDocString"], [44, 0, 1, "c.PyModule_Type", "PyModule_Type"], [62, 4, 1, "c.PyNumberMethods", "PyNumberMethods"], [46, 2, 1, "c.PyNumber_Absolute", "PyNumber_Absolute"], [46, 2, 1, "c.PyNumber_Add", "PyNumber_Add"], [46, 2, 1, "c.PyNumber_And", "PyNumber_And"], [46, 2, 1, "c.PyNumber_AsSsize_t", "PyNumber_AsSsize_t"], [46, 2, 1, "c.PyNumber_Check", "PyNumber_Check"], [46, 2, 1, "c.PyNumber_Divmod", "PyNumber_Divmod"], [46, 2, 1, "c.PyNumber_Float", "PyNumber_Float"], [46, 2, 1, "c.PyNumber_FloorDivide", "PyNumber_FloorDivide"], [46, 2, 1, "c.PyNumber_InPlaceAdd", "PyNumber_InPlaceAdd"], [46, 2, 1, "c.PyNumber_InPlaceAnd", "PyNumber_InPlaceAnd"], [46, 2, 1, "c.PyNumber_InPlaceFloorDivide", "PyNumber_InPlaceFloorDivide"], [46, 2, 1, "c.PyNumber_InPlaceLshift", "PyNumber_InPlaceLshift"], [46, 2, 1, "c.PyNumber_InPlaceMatrixMultiply", "PyNumber_InPlaceMatrixMultiply"], [46, 2, 1, "c.PyNumber_InPlaceMultiply", "PyNumber_InPlaceMultiply"], [46, 2, 1, "c.PyNumber_InPlaceOr", "PyNumber_InPlaceOr"], [46, 2, 1, "c.PyNumber_InPlacePower", "PyNumber_InPlacePower"], [46, 2, 1, "c.PyNumber_InPlaceRemainder", "PyNumber_InPlaceRemainder"], [46, 2, 1, "c.PyNumber_InPlaceRshift", "PyNumber_InPlaceRshift"], [46, 2, 1, "c.PyNumber_InPlaceSubtract", "PyNumber_InPlaceSubtract"], [46, 2, 1, "c.PyNumber_InPlaceTrueDivide", "PyNumber_InPlaceTrueDivide"], [46, 2, 1, "c.PyNumber_InPlaceXor", "PyNumber_InPlaceXor"], [46, 2, 1, "c.PyNumber_Index", "PyNumber_Index"], [46, 2, 1, "c.PyNumber_Invert", "PyNumber_Invert"], [46, 2, 1, "c.PyNumber_Long", "PyNumber_Long"], [46, 2, 1, "c.PyNumber_Lshift", "PyNumber_Lshift"], [46, 2, 1, "c.PyNumber_MatrixMultiply", "PyNumber_MatrixMultiply"], [46, 2, 1, "c.PyNumber_Multiply", "PyNumber_Multiply"], [46, 2, 1, "c.PyNumber_Negative", "PyNumber_Negative"], [46, 2, 1, "c.PyNumber_Or", "PyNumber_Or"], [46, 2, 1, "c.PyNumber_Positive", "PyNumber_Positive"], [46, 2, 1, "c.PyNumber_Power", "PyNumber_Power"], [46, 2, 1, "c.PyNumber_Remainder", "PyNumber_Remainder"], [46, 2, 1, "c.PyNumber_Rshift", "PyNumber_Rshift"], [46, 2, 1, "c.PyNumber_Subtract", "PyNumber_Subtract"], [46, 2, 1, "c.PyNumber_ToBase", "PyNumber_ToBase"], [46, 2, 1, "c.PyNumber_TrueDivide", "PyNumber_TrueDivide"], [46, 2, 1, "c.PyNumber_Xor", "PyNumber_Xor"], [58, 2, 1, "c.PyOS_AfterFork", "PyOS_AfterFork"], [58, 2, 1, "c.PyOS_AfterFork_Child", "PyOS_AfterFork_Child"], [58, 2, 1, "c.PyOS_AfterFork_Parent", "PyOS_AfterFork_Parent"], [58, 2, 1, "c.PyOS_BeforeFork", "PyOS_BeforeFork"], [58, 2, 1, "c.PyOS_CheckStack", "PyOS_CheckStack"], [58, 2, 1, "c.PyOS_FSPath", "PyOS_FSPath"], [65, 0, 1, "c.PyOS_InputHook", "PyOS_InputHook"], [65, 0, 1, "c.PyOS_ReadlineFunctionPointer", "PyOS_ReadlineFunctionPointer"], [18, 2, 1, "c.PyOS_double_to_string", "PyOS_double_to_string"], [58, 2, 1, "c.PyOS_getsig", "PyOS_getsig"], [58, 2, 1, "c.PyOS_setsig", "PyOS_setsig"], [18, 2, 1, "c.PyOS_snprintf", "PyOS_snprintf"], [18, 2, 1, "c.PyOS_stricmp", "PyOS_stricmp"], [18, 2, 1, "c.PyOS_string_to_double", "PyOS_string_to_double"], [18, 2, 1, "c.PyOS_strnicmp", "PyOS_strnicmp"], [18, 2, 1, "c.PyOS_strtol", "PyOS_strtol"], [18, 2, 1, "c.PyOS_strtoul", "PyOS_strtoul"], [18, 2, 1, "c.PyOS_vsnprintf", "PyOS_vsnprintf"], [57, 4, 1, "c.PyObject", "PyObject"], [41, 4, 1, "c.PyObjectArenaAllocator", "PyObjectArenaAllocator"], [48, 2, 1, "c.PyObject_ASCII", "PyObject_ASCII"], [47, 2, 1, "c.PyObject_AsCharBuffer", "PyObject_AsCharBuffer"], [24, 2, 1, "c.PyObject_AsFileDescriptor", "PyObject_AsFileDescriptor"], [47, 2, 1, "c.PyObject_AsReadBuffer", "PyObject_AsReadBuffer"], [47, 2, 1, "c.PyObject_AsWriteBuffer", "PyObject_AsWriteBuffer"], [48, 2, 1, "c.PyObject_Bytes", "PyObject_Bytes"], [10, 2, 1, "c.PyObject_Call", "PyObject_Call"], [10, 2, 1, "c.PyObject_CallFunction", "PyObject_CallFunction"], [10, 2, 1, "c.PyObject_CallFunctionObjArgs", "PyObject_CallFunctionObjArgs"], [10, 2, 1, "c.PyObject_CallMethod", "PyObject_CallMethod"], [10, 2, 1, "c.PyObject_CallMethodNoArgs", "PyObject_CallMethodNoArgs"], [10, 2, 1, "c.PyObject_CallMethodObjArgs", "PyObject_CallMethodObjArgs"], [10, 2, 1, "c.PyObject_CallMethodOneArg", "PyObject_CallMethodOneArg"], [10, 2, 1, "c.PyObject_CallNoArgs", "PyObject_CallNoArgs"], [10, 2, 1, "c.PyObject_CallObject", "PyObject_CallObject"], [10, 2, 1, "c.PyObject_CallOneArg", "PyObject_CallOneArg"], [41, 2, 1, "c.PyObject_Calloc", "PyObject_Calloc"], [7, 2, 1, "c.PyObject_CheckBuffer", "PyObject_CheckBuffer"], [47, 2, 1, "c.PyObject_CheckReadBuffer", "PyObject_CheckReadBuffer"], [66, 2, 1, "c.PyObject_ClearWeakRefs", "PyObject_ClearWeakRefs"], [7, 2, 1, "c.PyObject_CopyData", "PyObject_CopyData"], [3, 2, 1, "c.PyObject_Del", "PyObject_Del"], [48, 2, 1, "c.PyObject_DelAttr", "PyObject_DelAttr"], [48, 2, 1, "c.PyObject_DelAttrString", "PyObject_DelAttrString"], [48, 2, 1, "c.PyObject_DelItem", "PyObject_DelItem"], [48, 2, 1, "c.PyObject_Dir", "PyObject_Dir"], [48, 2, 1, "c.PyObject_Format", "PyObject_Format"], [41, 2, 1, "c.PyObject_Free", "PyObject_Free"], [28, 2, 1, "c.PyObject_GC_Del", "PyObject_GC_Del"], [28, 2, 1, "c.PyObject_GC_IsFinalized", "PyObject_GC_IsFinalized"], [28, 2, 1, "c.PyObject_GC_IsTracked", "PyObject_GC_IsTracked"], [28, 1, 1, "c.PyObject_GC_New", "PyObject_GC_New"], [28, 1, 1, "c.PyObject_GC_NewVar", "PyObject_GC_NewVar"], [28, 2, 1, "c.PyObject_GC_Resize", "PyObject_GC_Resize"], [28, 2, 1, "c.PyObject_GC_Track", "PyObject_GC_Track"], [28, 2, 1, "c.PyObject_GC_UnTrack", "PyObject_GC_UnTrack"], [48, 2, 1, "c.PyObject_GenericGetAttr", "PyObject_GenericGetAttr"], [48, 2, 1, "c.PyObject_GenericGetDict", "PyObject_GenericGetDict"], [48, 2, 1, "c.PyObject_GenericSetAttr", "PyObject_GenericSetAttr"], [48, 2, 1, "c.PyObject_GenericSetDict", "PyObject_GenericSetDict"], [48, 2, 1, "c.PyObject_GetAIter", "PyObject_GetAIter"], [41, 2, 1, "c.PyObject_GetArenaAllocator", "PyObject_GetArenaAllocator"], [48, 2, 1, "c.PyObject_GetAttr", "PyObject_GetAttr"], [48, 2, 1, "c.PyObject_GetAttrString", "PyObject_GetAttrString"], [7, 2, 1, "c.PyObject_GetBuffer", "PyObject_GetBuffer"], [48, 2, 1, "c.PyObject_GetItem", "PyObject_GetItem"], [48, 2, 1, "c.PyObject_GetItemData", "PyObject_GetItemData"], [48, 2, 1, "c.PyObject_GetIter", "PyObject_GetIter"], [48, 2, 1, "c.PyObject_GetTypeData", "PyObject_GetTypeData"], [57, 1, 1, "c.PyObject_HEAD", "PyObject_HEAD"], [57, 1, 1, "c.PyObject_HEAD_INIT", "PyObject_HEAD_INIT"], [48, 2, 1, "c.PyObject_HasAttr", "PyObject_HasAttr"], [48, 2, 1, "c.PyObject_HasAttrString", "PyObject_HasAttrString"], [48, 2, 1, "c.PyObject_Hash", "PyObject_Hash"], [48, 2, 1, "c.PyObject_HashNotImplemented", "PyObject_HashNotImplemented"], [28, 2, 1, "c.PyObject_IS_GC", "PyObject_IS_GC"], [3, 2, 1, "c.PyObject_Init", "PyObject_Init"], [3, 2, 1, "c.PyObject_InitVar", "PyObject_InitVar"], [48, 2, 1, "c.PyObject_IsInstance", "PyObject_IsInstance"], [48, 2, 1, "c.PyObject_IsSubclass", "PyObject_IsSubclass"], [48, 2, 1, "c.PyObject_IsTrue", "PyObject_IsTrue"], [48, 2, 1, "c.PyObject_Length", "PyObject_Length"], [48, 2, 1, "c.PyObject_LengthHint", "PyObject_LengthHint"], [41, 2, 1, "c.PyObject_Malloc", "PyObject_Malloc"], [3, 1, 1, "c.PyObject_New", "PyObject_New"], [3, 1, 1, "c.PyObject_NewVar", "PyObject_NewVar"], [48, 2, 1, "c.PyObject_Not", "PyObject_Not"], [48, 2, 1, "c.PyObject_Print", "PyObject_Print"], [41, 2, 1, "c.PyObject_Realloc", "PyObject_Realloc"], [48, 2, 1, "c.PyObject_Repr", "PyObject_Repr"], [48, 2, 1, "c.PyObject_RichCompare", "PyObject_RichCompare"], [48, 2, 1, "c.PyObject_RichCompareBool", "PyObject_RichCompareBool"], [41, 2, 1, "c.PyObject_SetArenaAllocator", "PyObject_SetArenaAllocator"], [48, 2, 1, "c.PyObject_SetAttr", "PyObject_SetAttr"], [48, 2, 1, "c.PyObject_SetAttrString", "PyObject_SetAttrString"], [48, 2, 1, "c.PyObject_SetItem", "PyObject_SetItem"], [48, 2, 1, "c.PyObject_Size", "PyObject_Size"], [48, 2, 1, "c.PyObject_Str", "PyObject_Str"], [48, 2, 1, "c.PyObject_Type", "PyObject_Type"], [48, 2, 1, "c.PyObject_TypeCheck", "PyObject_TypeCheck"], [57, 1, 1, "c.PyObject_VAR_HEAD", "PyObject_VAR_HEAD"], [10, 2, 1, "c.PyObject_Vectorcall", "PyObject_Vectorcall"], [10, 2, 1, "c.PyObject_VectorcallDict", "PyObject_VectorcallDict"], [10, 2, 1, "c.PyObject_VectorcallMethod", "PyObject_VectorcallMethod"], [33, 4, 1, "c.PyPreConfig", "PyPreConfig"], [33, 2, 1, "c.PyPreConfig_InitIsolatedConfig", "PyPreConfig_InitIsolatedConfig"], [33, 2, 1, "c.PyPreConfig_InitPythonConfig", "PyPreConfig_InitPythonConfig"], [21, 0, 1, "c.PyProperty_Type", "PyProperty_Type"], [65, 2, 1, "c.PyRun_AnyFile", "PyRun_AnyFile"], [65, 2, 1, "c.PyRun_AnyFileEx", "PyRun_AnyFileEx"], [65, 2, 1, "c.PyRun_AnyFileExFlags", "PyRun_AnyFileExFlags"], [65, 2, 1, "c.PyRun_AnyFileFlags", "PyRun_AnyFileFlags"], [65, 2, 1, "c.PyRun_File", "PyRun_File"], [65, 2, 1, "c.PyRun_FileEx", "PyRun_FileEx"], [65, 2, 1, "c.PyRun_FileExFlags", "PyRun_FileExFlags"], [65, 2, 1, "c.PyRun_FileFlags", "PyRun_FileFlags"], [65, 2, 1, "c.PyRun_InteractiveLoop", "PyRun_InteractiveLoop"], [65, 2, 1, "c.PyRun_InteractiveLoopFlags", "PyRun_InteractiveLoopFlags"], [65, 2, 1, "c.PyRun_InteractiveOne", "PyRun_InteractiveOne"], [65, 2, 1, "c.PyRun_InteractiveOneFlags", "PyRun_InteractiveOneFlags"], [65, 2, 1, "c.PyRun_SimpleFile", "PyRun_SimpleFile"], [65, 2, 1, "c.PyRun_SimpleFileEx", "PyRun_SimpleFileEx"], [65, 2, 1, "c.PyRun_SimpleFileExFlags", "PyRun_SimpleFileExFlags"], [65, 2, 1, "c.PyRun_SimpleString", "PyRun_SimpleString"], [65, 2, 1, "c.PyRun_SimpleStringFlags", "PyRun_SimpleStringFlags"], [65, 2, 1, "c.PyRun_String", "PyRun_String"], [65, 2, 1, "c.PyRun_StringFlags", "PyRun_StringFlags"], [35, 4, 1, "c.PySendResult", "PySendResult"], [36, 2, 1, "c.PySeqIter_Check", "PySeqIter_Check"], [36, 2, 1, "c.PySeqIter_New", "PySeqIter_New"], [36, 0, 1, "c.PySeqIter_Type", "PySeqIter_Type"], [62, 4, 1, "c.PySequenceMethods", "PySequenceMethods"], [53, 2, 1, "c.PySequence_Check", "PySequence_Check"], [53, 2, 1, "c.PySequence_Concat", "PySequence_Concat"], [53, 2, 1, "c.PySequence_Contains", "PySequence_Contains"], [53, 2, 1, "c.PySequence_Count", "PySequence_Count"], [53, 2, 1, "c.PySequence_DelItem", "PySequence_DelItem"], [53, 2, 1, "c.PySequence_DelSlice", "PySequence_DelSlice"], [53, 2, 1, "c.PySequence_Fast", "PySequence_Fast"], [53, 2, 1, "c.PySequence_Fast_GET_ITEM", "PySequence_Fast_GET_ITEM"], [53, 2, 1, "c.PySequence_Fast_GET_SIZE", "PySequence_Fast_GET_SIZE"], [53, 2, 1, "c.PySequence_Fast_ITEMS", "PySequence_Fast_ITEMS"], [53, 2, 1, "c.PySequence_GetItem", "PySequence_GetItem"], [53, 2, 1, "c.PySequence_GetSlice", "PySequence_GetSlice"], [53, 2, 1, "c.PySequence_ITEM", "PySequence_ITEM"], [53, 2, 1, "c.PySequence_InPlaceConcat", "PySequence_InPlaceConcat"], [53, 2, 1, "c.PySequence_InPlaceRepeat", "PySequence_InPlaceRepeat"], [53, 2, 1, "c.PySequence_Index", "PySequence_Index"], [53, 2, 1, "c.PySequence_Length", "PySequence_Length"], [53, 2, 1, "c.PySequence_List", "PySequence_List"], [53, 2, 1, "c.PySequence_Repeat", "PySequence_Repeat"], [53, 2, 1, "c.PySequence_SetItem", "PySequence_SetItem"], [53, 2, 1, "c.PySequence_SetSlice", "PySequence_SetSlice"], [53, 2, 1, "c.PySequence_Size", "PySequence_Size"], [53, 2, 1, "c.PySequence_Tuple", "PySequence_Tuple"], [54, 4, 1, "c.PySetObject", "PySetObject"], [54, 2, 1, "c.PySet_Add", "PySet_Add"], [54, 2, 1, "c.PySet_Check", "PySet_Check"], [54, 2, 1, "c.PySet_CheckExact", "PySet_CheckExact"], [54, 2, 1, "c.PySet_Clear", "PySet_Clear"], [54, 2, 1, "c.PySet_Contains", "PySet_Contains"], [54, 2, 1, "c.PySet_Discard", "PySet_Discard"], [54, 2, 1, "c.PySet_GET_SIZE", "PySet_GET_SIZE"], [54, 2, 1, "c.PySet_New", "PySet_New"], [54, 2, 1, "c.PySet_Pop", "PySet_Pop"], [54, 2, 1, "c.PySet_Size", "PySet_Size"], [54, 0, 1, "c.PySet_Type", "PySet_Type"], [23, 2, 1, "c.PySignal_SetWakeupFd", "PySignal_SetWakeupFd"], [55, 2, 1, "c.PySlice_AdjustIndices", "PySlice_AdjustIndices"], [55, 2, 1, "c.PySlice_Check", "PySlice_Check"], [55, 2, 1, "c.PySlice_GetIndices", "PySlice_GetIndices"], [55, 2, 1, "c.PySlice_GetIndicesEx", "PySlice_GetIndicesEx"], [55, 2, 1, "c.PySlice_New", "PySlice_New"], [55, 0, 1, "c.PySlice_Type", "PySlice_Type"], [55, 2, 1, "c.PySlice_Unpack", "PySlice_Unpack"], [44, 2, 1, "c.PyState_AddModule", "PyState_AddModule"], [44, 2, 1, "c.PyState_FindModule", "PyState_FindModule"], [44, 2, 1, "c.PyState_RemoveModule", "PyState_RemoveModule"], [33, 4, 1, "c.PyStatus", "PyStatus"], [33, 2, 1, "c.PyStatus_Error", "PyStatus_Error"], [33, 2, 1, "c.PyStatus_Exception", "PyStatus_Exception"], [33, 2, 1, "c.PyStatus_Exit", "PyStatus_Exit"], [33, 2, 1, "c.PyStatus_IsError", "PyStatus_IsError"], [33, 2, 1, "c.PyStatus_IsExit", "PyStatus_IsExit"], [33, 2, 1, "c.PyStatus_NoMemory", "PyStatus_NoMemory"], [33, 2, 1, "c.PyStatus_Ok", "PyStatus_Ok"], [59, 4, 1, "c.PyStructSequence_Desc", "PyStructSequence_Desc"], [59, 4, 1, "c.PyStructSequence_Field", "PyStructSequence_Field"], [59, 2, 1, "c.PyStructSequence_GET_ITEM", "PyStructSequence_GET_ITEM"], [59, 2, 1, "c.PyStructSequence_GetItem", "PyStructSequence_GetItem"], [59, 2, 1, "c.PyStructSequence_InitType", "PyStructSequence_InitType"], [59, 2, 1, "c.PyStructSequence_InitType2", "PyStructSequence_InitType2"], [59, 2, 1, "c.PyStructSequence_New", "PyStructSequence_New"], [59, 2, 1, "c.PyStructSequence_NewType", "PyStructSequence_NewType"], [59, 2, 1, "c.PyStructSequence_SET_ITEM", "PyStructSequence_SET_ITEM"], [59, 2, 1, "c.PyStructSequence_SetItem", "PyStructSequence_SetItem"], [59, 0, 1, "c.PyStructSequence_UnnamedField", "PyStructSequence_UnnamedField"], [58, 2, 1, "c.PySys_AddAuditHook", "PySys_AddAuditHook"], [58, 2, 1, "c.PySys_AddWarnOption", "PySys_AddWarnOption"], [58, 2, 1, "c.PySys_AddWarnOptionUnicode", "PySys_AddWarnOptionUnicode"], [58, 2, 1, "c.PySys_AddXOption", "PySys_AddXOption"], [58, 2, 1, "c.PySys_Audit", "PySys_Audit"], [58, 2, 1, "c.PySys_FormatStderr", "PySys_FormatStderr"], [58, 2, 1, "c.PySys_FormatStdout", "PySys_FormatStdout"], [58, 2, 1, "c.PySys_GetObject", "PySys_GetObject"], [58, 2, 1, "c.PySys_GetXOptions", "PySys_GetXOptions"], [58, 2, 1, "c.PySys_ResetWarnOptions", "PySys_ResetWarnOptions"], [32, 2, 1, "c.PySys_SetArgv", "PySys_SetArgv"], [32, 2, 1, "c.PySys_SetArgvEx", "PySys_SetArgvEx"], [58, 2, 1, "c.PySys_SetObject", "PySys_SetObject"], [58, 2, 1, "c.PySys_SetPath", "PySys_SetPath"], [58, 2, 1, "c.PySys_WriteStderr", "PySys_WriteStderr"], [58, 2, 1, "c.PySys_WriteStdout", "PySys_WriteStdout"], [20, 2, 1, "c.PyTZInfo_Check", "PyTZInfo_Check"], [20, 2, 1, "c.PyTZInfo_CheckExact", "PyTZInfo_CheckExact"], [32, 4, 1, "c.PyThreadState", "PyThreadState"], [32, 2, 1, "c.PyThreadState_Clear", "PyThreadState_Clear"], [32, 2, 1, "c.PyThreadState_Delete", "PyThreadState_Delete"], [32, 2, 1, "c.PyThreadState_DeleteCurrent", "PyThreadState_DeleteCurrent"], [32, 2, 1, "c.PyThreadState_EnterTracing", "PyThreadState_EnterTracing"], [32, 2, 1, "c.PyThreadState_Get", "PyThreadState_Get"], [32, 2, 1, "c.PyThreadState_GetDict", "PyThreadState_GetDict"], [32, 2, 1, "c.PyThreadState_GetFrame", "PyThreadState_GetFrame"], [32, 2, 1, "c.PyThreadState_GetID", "PyThreadState_GetID"], [32, 2, 1, "c.PyThreadState_GetInterpreter", "PyThreadState_GetInterpreter"], [32, 2, 1, "c.PyThreadState_LeaveTracing", "PyThreadState_LeaveTracing"], [32, 2, 1, "c.PyThreadState_New", "PyThreadState_New"], [32, 2, 1, "c.PyThreadState_Next", "PyThreadState_Next"], [32, 2, 1, "c.PyThreadState_SetAsyncExc", "PyThreadState_SetAsyncExc"], [32, 2, 1, "c.PyThreadState_Swap", "PyThreadState_Swap"], [32, 2, 1, "c.PyThread_ReInitTLS", "PyThread_ReInitTLS"], [32, 2, 1, "c.PyThread_create_key", "PyThread_create_key"], [32, 2, 1, "c.PyThread_delete_key", "PyThread_delete_key"], [32, 2, 1, "c.PyThread_delete_key_value", "PyThread_delete_key_value"], [32, 2, 1, "c.PyThread_get_key_value", "PyThread_get_key_value"], [32, 2, 1, "c.PyThread_set_key_value", "PyThread_set_key_value"], [32, 2, 1, "c.PyThread_tss_alloc", "PyThread_tss_alloc"], [32, 2, 1, "c.PyThread_tss_create", "PyThread_tss_create"], [32, 2, 1, "c.PyThread_tss_delete", "PyThread_tss_delete"], [32, 2, 1, "c.PyThread_tss_free", "PyThread_tss_free"], [32, 2, 1, "c.PyThread_tss_get", "PyThread_tss_get"], [32, 2, 1, "c.PyThread_tss_is_created", "PyThread_tss_is_created"], [32, 2, 1, "c.PyThread_tss_set", "PyThread_tss_set"], [20, 2, 1, "c.PyTimeZone_FromOffset", "PyTimeZone_FromOffset"], [20, 2, 1, "c.PyTimeZone_FromOffsetAndName", "PyTimeZone_FromOffsetAndName"], [20, 2, 1, "c.PyTime_Check", "PyTime_Check"], [20, 2, 1, "c.PyTime_CheckExact", "PyTime_CheckExact"], [20, 2, 1, "c.PyTime_FromTime", "PyTime_FromTime"], [20, 2, 1, "c.PyTime_FromTimeAndFold", "PyTime_FromTimeAndFold"], [41, 2, 1, "c.PyTraceMalloc_Track", "PyTraceMalloc_Track"], [41, 2, 1, "c.PyTraceMalloc_Untrack", "PyTraceMalloc_Untrack"], [32, 0, 1, "c.PyTrace_CALL", "PyTrace_CALL"], [32, 0, 1, "c.PyTrace_C_CALL", "PyTrace_C_CALL"], [32, 0, 1, "c.PyTrace_C_EXCEPTION", "PyTrace_C_EXCEPTION"], [32, 0, 1, "c.PyTrace_C_RETURN", "PyTrace_C_RETURN"], [32, 0, 1, "c.PyTrace_EXCEPTION", "PyTrace_EXCEPTION"], [32, 0, 1, "c.PyTrace_LINE", "PyTrace_LINE"], [32, 0, 1, "c.PyTrace_OPCODE", "PyTrace_OPCODE"], [32, 0, 1, "c.PyTrace_RETURN", "PyTrace_RETURN"], [59, 4, 1, "c.PyTupleObject", "PyTupleObject"], [59, 2, 1, "c.PyTuple_Check", "PyTuple_Check"], [59, 2, 1, "c.PyTuple_CheckExact", "PyTuple_CheckExact"], [59, 2, 1, "c.PyTuple_GET_ITEM", "PyTuple_GET_ITEM"], [59, 2, 1, "c.PyTuple_GET_SIZE", "PyTuple_GET_SIZE"], [59, 2, 1, "c.PyTuple_GetItem", "PyTuple_GetItem"], [59, 2, 1, "c.PyTuple_GetSlice", "PyTuple_GetSlice"], [59, 2, 1, "c.PyTuple_New", "PyTuple_New"], [59, 2, 1, "c.PyTuple_Pack", "PyTuple_Pack"], [59, 2, 1, "c.PyTuple_SET_ITEM", "PyTuple_SET_ITEM"], [59, 2, 1, "c.PyTuple_SetItem", "PyTuple_SetItem"], [59, 2, 1, "c.PyTuple_Size", "PyTuple_Size"], [59, 0, 1, "c.PyTuple_Type", "PyTuple_Type"], [60, 4, 1, "c.PyTypeObject", "PyTypeObject"], [60, 2, 1, "c.PyType_AddWatcher", "PyType_AddWatcher"], [60, 2, 1, "c.PyType_Check", "PyType_Check"], [60, 2, 1, "c.PyType_CheckExact", "PyType_CheckExact"], [60, 2, 1, "c.PyType_ClearCache", "PyType_ClearCache"], [60, 2, 1, "c.PyType_ClearWatcher", "PyType_ClearWatcher"], [60, 2, 1, "c.PyType_FromMetaclass", "PyType_FromMetaclass"], [60, 2, 1, "c.PyType_FromModuleAndSpec", "PyType_FromModuleAndSpec"], [60, 2, 1, "c.PyType_FromSpec", "PyType_FromSpec"], [60, 2, 1, "c.PyType_FromSpecWithBases", "PyType_FromSpecWithBases"], [60, 2, 1, "c.PyType_GenericAlloc", "PyType_GenericAlloc"], [60, 2, 1, "c.PyType_GenericNew", "PyType_GenericNew"], [60, 2, 1, "c.PyType_GetDict", "PyType_GetDict"], [60, 2, 1, "c.PyType_GetFlags", "PyType_GetFlags"], [60, 2, 1, "c.PyType_GetModule", "PyType_GetModule"], [60, 2, 1, "c.PyType_GetModuleByDef", "PyType_GetModuleByDef"], [60, 2, 1, "c.PyType_GetModuleState", "PyType_GetModuleState"], [60, 2, 1, "c.PyType_GetName", "PyType_GetName"], [60, 2, 1, "c.PyType_GetQualName", "PyType_GetQualName"], [60, 2, 1, "c.PyType_GetSlot", "PyType_GetSlot"], [48, 2, 1, "c.PyType_GetTypeDataSize", "PyType_GetTypeDataSize"], [60, 2, 1, "c.PyType_HasFeature", "PyType_HasFeature"], [60, 2, 1, "c.PyType_IS_GC", "PyType_IS_GC"], [60, 2, 1, "c.PyType_IsSubtype", "PyType_IsSubtype"], [60, 2, 1, "c.PyType_Modified", "PyType_Modified"], [60, 2, 1, "c.PyType_Ready", "PyType_Ready"], [60, 4, 1, "c.PyType_Slot", "PyType_Slot"], [60, 4, 1, "c.PyType_Spec", "PyType_Spec"], [60, 0, 1, "c.PyType_Type", "PyType_Type"], [60, 2, 1, "c.PyType_Watch", "PyType_Watch"], [60, 4, 1, "c.PyType_WatchCallback", "PyType_WatchCallback"], [23, 2, 1, "c.PyUnicodeDecodeError_Create", "PyUnicodeDecodeError_Create"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEncoding", "PyUnicodeDecodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEnd", "PyUnicodeDecodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_GetObject", "PyUnicodeDecodeError_GetObject"], [23, 2, 1, "c.PyUnicodeDecodeError_GetReason", "PyUnicodeDecodeError_GetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_GetStart", "PyUnicodeDecodeError_GetStart"], [23, 2, 1, "c.PyUnicodeDecodeError_SetEnd", "PyUnicodeDecodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_SetReason", "PyUnicodeDecodeError_SetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_SetStart", "PyUnicodeDecodeError_SetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEncoding", "PyUnicodeEncodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEnd", "PyUnicodeEncodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_GetObject", "PyUnicodeEncodeError_GetObject"], [23, 2, 1, "c.PyUnicodeEncodeError_GetReason", "PyUnicodeEncodeError_GetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_GetStart", "PyUnicodeEncodeError_GetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_SetEnd", "PyUnicodeEncodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_SetReason", "PyUnicodeEncodeError_SetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_SetStart", "PyUnicodeEncodeError_SetStart"], [63, 4, 1, "c.PyUnicodeObject", "PyUnicodeObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetEnd", "PyUnicodeTranslateError_GetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_GetObject", "PyUnicodeTranslateError_GetObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetReason", "PyUnicodeTranslateError_GetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_GetStart", "PyUnicodeTranslateError_GetStart"], [23, 2, 1, "c.PyUnicodeTranslateError_SetEnd", "PyUnicodeTranslateError_SetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_SetReason", "PyUnicodeTranslateError_SetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_SetStart", "PyUnicodeTranslateError_SetStart"], [63, 2, 1, "c.PyUnicode_1BYTE_DATA", "PyUnicode_1BYTE_DATA"], [63, 1, 1, "c.PyUnicode_1BYTE_KIND", "PyUnicode_1BYTE_KIND"], [63, 2, 1, "c.PyUnicode_2BYTE_DATA", "PyUnicode_2BYTE_DATA"], [63, 1, 1, "c.PyUnicode_2BYTE_KIND", "PyUnicode_2BYTE_KIND"], [63, 2, 1, "c.PyUnicode_4BYTE_DATA", "PyUnicode_4BYTE_DATA"], [63, 1, 1, "c.PyUnicode_4BYTE_KIND", "PyUnicode_4BYTE_KIND"], [63, 2, 1, "c.PyUnicode_AsASCIIString", "PyUnicode_AsASCIIString"], [63, 2, 1, "c.PyUnicode_AsCharmapString", "PyUnicode_AsCharmapString"], [63, 2, 1, "c.PyUnicode_AsEncodedString", "PyUnicode_AsEncodedString"], [63, 2, 1, "c.PyUnicode_AsLatin1String", "PyUnicode_AsLatin1String"], [63, 2, 1, "c.PyUnicode_AsMBCSString", "PyUnicode_AsMBCSString"], [63, 2, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "PyUnicode_AsRawUnicodeEscapeString"], [63, 2, 1, "c.PyUnicode_AsUCS4", "PyUnicode_AsUCS4"], [63, 2, 1, "c.PyUnicode_AsUCS4Copy", "PyUnicode_AsUCS4Copy"], [63, 2, 1, "c.PyUnicode_AsUTF16String", "PyUnicode_AsUTF16String"], [63, 2, 1, "c.PyUnicode_AsUTF32String", "PyUnicode_AsUTF32String"], [63, 2, 1, "c.PyUnicode_AsUTF8", "PyUnicode_AsUTF8"], [63, 2, 1, "c.PyUnicode_AsUTF8AndSize", "PyUnicode_AsUTF8AndSize"], [63, 2, 1, "c.PyUnicode_AsUTF8String", "PyUnicode_AsUTF8String"], [63, 2, 1, "c.PyUnicode_AsUnicodeEscapeString", "PyUnicode_AsUnicodeEscapeString"], [63, 2, 1, "c.PyUnicode_AsWideChar", "PyUnicode_AsWideChar"], [63, 2, 1, "c.PyUnicode_AsWideCharString", "PyUnicode_AsWideCharString"], [63, 2, 1, "c.PyUnicode_Check", "PyUnicode_Check"], [63, 2, 1, "c.PyUnicode_CheckExact", "PyUnicode_CheckExact"], [63, 2, 1, "c.PyUnicode_Compare", "PyUnicode_Compare"], [63, 2, 1, "c.PyUnicode_CompareWithASCIIString", "PyUnicode_CompareWithASCIIString"], [63, 2, 1, "c.PyUnicode_Concat", "PyUnicode_Concat"], [63, 2, 1, "c.PyUnicode_Contains", "PyUnicode_Contains"], [63, 2, 1, "c.PyUnicode_CopyCharacters", "PyUnicode_CopyCharacters"], [63, 2, 1, "c.PyUnicode_Count", "PyUnicode_Count"], [63, 2, 1, "c.PyUnicode_DATA", "PyUnicode_DATA"], [63, 2, 1, "c.PyUnicode_Decode", "PyUnicode_Decode"], [63, 2, 1, "c.PyUnicode_DecodeASCII", "PyUnicode_DecodeASCII"], [63, 2, 1, "c.PyUnicode_DecodeCharmap", "PyUnicode_DecodeCharmap"], [63, 2, 1, "c.PyUnicode_DecodeFSDefault", "PyUnicode_DecodeFSDefault"], [63, 2, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "PyUnicode_DecodeFSDefaultAndSize"], [63, 2, 1, "c.PyUnicode_DecodeLatin1", "PyUnicode_DecodeLatin1"], [63, 2, 1, "c.PyUnicode_DecodeLocale", "PyUnicode_DecodeLocale"], [63, 2, 1, "c.PyUnicode_DecodeLocaleAndSize", "PyUnicode_DecodeLocaleAndSize"], [63, 2, 1, "c.PyUnicode_DecodeMBCS", "PyUnicode_DecodeMBCS"], [63, 2, 1, "c.PyUnicode_DecodeMBCSStateful", "PyUnicode_DecodeMBCSStateful"], [63, 2, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "PyUnicode_DecodeRawUnicodeEscape"], [63, 2, 1, "c.PyUnicode_DecodeUTF16", "PyUnicode_DecodeUTF16"], [63, 2, 1, "c.PyUnicode_DecodeUTF16Stateful", "PyUnicode_DecodeUTF16Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF32", "PyUnicode_DecodeUTF32"], [63, 2, 1, "c.PyUnicode_DecodeUTF32Stateful", "PyUnicode_DecodeUTF32Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF7", "PyUnicode_DecodeUTF7"], [63, 2, 1, "c.PyUnicode_DecodeUTF7Stateful", "PyUnicode_DecodeUTF7Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF8", "PyUnicode_DecodeUTF8"], [63, 2, 1, "c.PyUnicode_DecodeUTF8Stateful", "PyUnicode_DecodeUTF8Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUnicodeEscape", "PyUnicode_DecodeUnicodeEscape"], [63, 2, 1, "c.PyUnicode_EncodeCodePage", "PyUnicode_EncodeCodePage"], [63, 2, 1, "c.PyUnicode_EncodeFSDefault", "PyUnicode_EncodeFSDefault"], [63, 2, 1, "c.PyUnicode_EncodeLocale", "PyUnicode_EncodeLocale"], [63, 2, 1, "c.PyUnicode_FSConverter", "PyUnicode_FSConverter"], [63, 2, 1, "c.PyUnicode_FSDecoder", "PyUnicode_FSDecoder"], [63, 2, 1, "c.PyUnicode_Fill", "PyUnicode_Fill"], [63, 2, 1, "c.PyUnicode_Find", "PyUnicode_Find"], [63, 2, 1, "c.PyUnicode_FindChar", "PyUnicode_FindChar"], [63, 2, 1, "c.PyUnicode_Format", "PyUnicode_Format"], [63, 2, 1, "c.PyUnicode_FromEncodedObject", "PyUnicode_FromEncodedObject"], [63, 2, 1, "c.PyUnicode_FromFormat", "PyUnicode_FromFormat"], [63, 2, 1, "c.PyUnicode_FromFormatV", "PyUnicode_FromFormatV"], [63, 2, 1, "c.PyUnicode_FromKindAndData", "PyUnicode_FromKindAndData"], [63, 2, 1, "c.PyUnicode_FromObject", "PyUnicode_FromObject"], [63, 2, 1, "c.PyUnicode_FromString", "PyUnicode_FromString"], [63, 2, 1, "c.PyUnicode_FromStringAndSize", "PyUnicode_FromStringAndSize"], [63, 2, 1, "c.PyUnicode_FromWideChar", "PyUnicode_FromWideChar"], [63, 2, 1, "c.PyUnicode_GET_LENGTH", "PyUnicode_GET_LENGTH"], [63, 2, 1, "c.PyUnicode_GetLength", "PyUnicode_GetLength"], [63, 2, 1, "c.PyUnicode_InternFromString", "PyUnicode_InternFromString"], [63, 2, 1, "c.PyUnicode_InternInPlace", "PyUnicode_InternInPlace"], [63, 2, 1, "c.PyUnicode_IsIdentifier", "PyUnicode_IsIdentifier"], [63, 2, 1, "c.PyUnicode_Join", "PyUnicode_Join"], [63, 2, 1, "c.PyUnicode_KIND", "PyUnicode_KIND"], [63, 2, 1, "c.PyUnicode_MAX_CHAR_VALUE", "PyUnicode_MAX_CHAR_VALUE"], [63, 2, 1, "c.PyUnicode_New", "PyUnicode_New"], [63, 2, 1, "c.PyUnicode_READ", "PyUnicode_READ"], [63, 2, 1, "c.PyUnicode_READY", "PyUnicode_READY"], [63, 2, 1, "c.PyUnicode_READ_CHAR", "PyUnicode_READ_CHAR"], [63, 2, 1, "c.PyUnicode_ReadChar", "PyUnicode_ReadChar"], [63, 2, 1, "c.PyUnicode_Replace", "PyUnicode_Replace"], [63, 2, 1, "c.PyUnicode_RichCompare", "PyUnicode_RichCompare"], [63, 2, 1, "c.PyUnicode_Split", "PyUnicode_Split"], [63, 2, 1, "c.PyUnicode_Splitlines", "PyUnicode_Splitlines"], [63, 2, 1, "c.PyUnicode_Substring", "PyUnicode_Substring"], [63, 2, 1, "c.PyUnicode_Tailmatch", "PyUnicode_Tailmatch"], [63, 2, 1, "c.PyUnicode_Translate", "PyUnicode_Translate"], [63, 0, 1, "c.PyUnicode_Type", "PyUnicode_Type"], [63, 2, 1, "c.PyUnicode_WRITE", "PyUnicode_WRITE"], [63, 2, 1, "c.PyUnicode_WriteChar", "PyUnicode_WriteChar"], [13, 2, 1, "c.PyUnstable_Code_GetExtra", "PyUnstable_Code_GetExtra"], [13, 2, 1, "c.PyUnstable_Code_New", "PyUnstable_Code_New"], [13, 2, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "PyUnstable_Code_NewWithPosOnlyArgs"], [13, 2, 1, "c.PyUnstable_Code_SetExtra", "PyUnstable_Code_SetExtra"], [13, 2, 1, "c.PyUnstable_Eval_RequestCodeExtraIndex", "PyUnstable_Eval_RequestCodeExtraIndex"], [23, 2, 1, "c.PyUnstable_Exc_PrepReraiseStar", "PyUnstable_Exc_PrepReraiseStar"], [28, 2, 1, "c.PyUnstable_GC_VisitObjects", "PyUnstable_GC_VisitObjects"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetCode", "PyUnstable_InterpreterFrame_GetCode"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetLasti", "PyUnstable_InterpreterFrame_GetLasti"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetLine", "PyUnstable_InterpreterFrame_GetLine"], [38, 2, 1, "c.PyUnstable_Long_CompactValue", "PyUnstable_Long_CompactValue"], [38, 2, 1, "c.PyUnstable_Long_IsCompact", "PyUnstable_Long_IsCompact"], [28, 2, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "PyUnstable_Object_GC_NewWithExtraData"], [50, 2, 1, "c.PyUnstable_PerfMapState_Fini", "PyUnstable_PerfMapState_Fini"], [50, 2, 1, "c.PyUnstable_PerfMapState_Init", "PyUnstable_PerfMapState_Init"], [60, 2, 1, "c.PyUnstable_Type_AssignVersionTag", "PyUnstable_Type_AssignVersionTag"], [50, 2, 1, "c.PyUnstable_WritePerfMapEntry", "PyUnstable_WritePerfMapEntry"], [57, 4, 1, "c.PyVarObject", "PyVarObject"], [57, 1, 1, "c.PyVarObject_HEAD_INIT", "PyVarObject_HEAD_INIT"], [10, 2, 1, "c.PyVectorcall_Call", "PyVectorcall_Call"], [10, 2, 1, "c.PyVectorcall_Function", "PyVectorcall_Function"], [10, 2, 1, "c.PyVectorcall_NARGS", "PyVectorcall_NARGS"], [66, 2, 1, "c.PyWeakref_Check", "PyWeakref_Check"], [66, 2, 1, "c.PyWeakref_CheckProxy", "PyWeakref_CheckProxy"], [66, 2, 1, "c.PyWeakref_CheckRef", "PyWeakref_CheckRef"], [66, 2, 1, "c.PyWeakref_GET_OBJECT", "PyWeakref_GET_OBJECT"], [66, 2, 1, "c.PyWeakref_GetObject", "PyWeakref_GetObject"], [66, 2, 1, "c.PyWeakref_NewProxy", "PyWeakref_NewProxy"], [66, 2, 1, "c.PyWeakref_NewRef", "PyWeakref_NewRef"], [33, 4, 1, "c.PyWideStringList", "PyWideStringList"], [33, 2, 1, "c.PyWideStringList_Append", "PyWideStringList_Append"], [33, 2, 1, "c.PyWideStringList_Insert", "PyWideStringList_Insert"], [21, 2, 1, "c.PyWrapper_New", "PyWrapper_New"], [34, 1, 1, "c.Py_ABS", "Py_ABS"], [34, 1, 1, "c.Py_ALWAYS_INLINE", "Py_ALWAYS_INLINE"], [57, 1, 1, "c.Py_AUDIT_READ", "Py_AUDIT_READ"], [32, 2, 1, "c.Py_AddPendingCall", "Py_AddPendingCall"], [58, 2, 1, "c.Py_AtExit", "Py_AtExit"], [32, 1, 1, "c.Py_BEGIN_ALLOW_THREADS", "Py_BEGIN_ALLOW_THREADS"], [32, 1, 1, "c.Py_BLOCK_THREADS", "Py_BLOCK_THREADS"], [5, 2, 1, "c.Py_BuildValue", "Py_BuildValue"], [65, 2, 1, "c.Py_BytesMain", "Py_BytesMain"], [32, 0, 1, "c.Py_BytesWarningFlag", "Py_BytesWarningFlag"], [34, 1, 1, "c.Py_CHARMASK", "Py_CHARMASK"], [51, 2, 1, "c.Py_CLEAR", "Py_CLEAR"], [65, 2, 1, "c.Py_CompileString", "Py_CompileString"], [65, 2, 1, "c.Py_CompileStringExFlags", "Py_CompileStringExFlags"], [65, 2, 1, "c.Py_CompileStringFlags", "Py_CompileStringFlags"], [65, 2, 1, "c.Py_CompileStringObject", "Py_CompileStringObject"], [51, 2, 1, "c.Py_DECREF", "Py_DECREF"], [34, 1, 1, "c.Py_DEPRECATED", "Py_DEPRECATED"], [32, 0, 1, "c.Py_DebugFlag", "Py_DebugFlag"], [51, 2, 1, "c.Py_DecRef", "Py_DecRef"], [58, 2, 1, "c.Py_DecodeLocale", "Py_DecodeLocale"], [32, 0, 1, "c.Py_DontWriteBytecodeFlag", "Py_DontWriteBytecodeFlag"], [32, 1, 1, "c.Py_END_ALLOW_THREADS", "Py_END_ALLOW_THREADS"], [62, 1, 1, "c.Py_EQ", "Py_EQ"], [55, 0, 1, "c.Py_Ellipsis", "Py_Ellipsis"], [58, 2, 1, "c.Py_EncodeLocale", "Py_EncodeLocale"], [32, 2, 1, "c.Py_EndInterpreter", "Py_EndInterpreter"], [23, 2, 1, "c.Py_EnterRecursiveCall", "Py_EnterRecursiveCall"], [58, 2, 1, "c.Py_Exit", "Py_Exit"], [33, 2, 1, "c.Py_ExitStatusException", "Py_ExitStatusException"], [6, 0, 1, "c.Py_False", "Py_False"], [58, 2, 1, "c.Py_FatalError", "Py_FatalError"], [58, 2, 1, "c.Py_FdIsInteractive", "Py_FdIsInteractive"], [32, 2, 1, "c.Py_Finalize", "Py_Finalize"], [32, 2, 1, "c.Py_FinalizeEx", "Py_FinalizeEx"], [32, 0, 1, "c.Py_FrozenFlag", "Py_FrozenFlag"], [62, 1, 1, "c.Py_GE", "Py_GE"], [34, 1, 1, "c.Py_GETENV", "Py_GETENV"], [62, 1, 1, "c.Py_GT", "Py_GT"], [61, 2, 1, "c.Py_GenericAlias", "Py_GenericAlias"], [61, 0, 1, "c.Py_GenericAliasType", "Py_GenericAliasType"], [33, 2, 1, "c.Py_GetArgcArgv", "Py_GetArgcArgv"], [32, 2, 1, "c.Py_GetBuildInfo", "Py_GetBuildInfo"], [32, 2, 1, "c.Py_GetCompiler", "Py_GetCompiler"], [32, 2, 1, "c.Py_GetCopyright", "Py_GetCopyright"], [32, 2, 1, "c.Py_GetExecPrefix", "Py_GetExecPrefix"], [32, 2, 1, "c.Py_GetPath", "Py_GetPath"], [32, 2, 1, "c.Py_GetPlatform", "Py_GetPlatform"], [32, 2, 1, "c.Py_GetPrefix", "Py_GetPrefix"], [32, 2, 1, "c.Py_GetProgramFullPath", "Py_GetProgramFullPath"], [32, 2, 1, "c.Py_GetProgramName", "Py_GetProgramName"], [32, 2, 1, "c.Py_GetPythonHome", "Py_GetPythonHome"], [32, 2, 1, "c.Py_GetVersion", "Py_GetVersion"], [32, 0, 1, "c.Py_HashRandomizationFlag", "Py_HashRandomizationFlag"], [51, 2, 1, "c.Py_INCREF", "Py_INCREF"], [57, 2, 1, "c.Py_IS_TYPE", "Py_IS_TYPE"], [32, 0, 1, "c.Py_IgnoreEnvironmentFlag", "Py_IgnoreEnvironmentFlag"], [51, 2, 1, "c.Py_IncRef", "Py_IncRef"], [32, 2, 1, "c.Py_Initialize", "Py_Initialize"], [32, 2, 1, "c.Py_InitializeEx", "Py_InitializeEx"], [33, 2, 1, "c.Py_InitializeFromConfig", "Py_InitializeFromConfig"], [32, 0, 1, "c.Py_InspectFlag", "Py_InspectFlag"], [32, 0, 1, "c.Py_InteractiveFlag", "Py_InteractiveFlag"], [57, 2, 1, "c.Py_Is", "Py_Is"], [57, 2, 1, "c.Py_IsFalse", "Py_IsFalse"], [32, 2, 1, "c.Py_IsInitialized", "Py_IsInitialized"], [57, 2, 1, "c.Py_IsNone", "Py_IsNone"], [57, 2, 1, "c.Py_IsTrue", "Py_IsTrue"], [32, 0, 1, "c.Py_IsolatedFlag", "Py_IsolatedFlag"], [62, 1, 1, "c.Py_LE", "Py_LE"], [56, 1, 1, "c.Py_LIMITED_API", "Py_LIMITED_API"], [62, 1, 1, "c.Py_LT", "Py_LT"], [23, 2, 1, "c.Py_LeaveRecursiveCall", "Py_LeaveRecursiveCall"], [32, 0, 1, "c.Py_LegacyWindowsFSEncodingFlag", "Py_LegacyWindowsFSEncodingFlag"], [32, 0, 1, "c.Py_LegacyWindowsStdioFlag", "Py_LegacyWindowsStdioFlag"], [34, 1, 1, "c.Py_MAX", "Py_MAX"], [34, 1, 1, "c.Py_MEMBER_SIZE", "Py_MEMBER_SIZE"], [34, 1, 1, "c.Py_MIN", "Py_MIN"], [44, 1, 1, "c.Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED", "Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED"], [44, 1, 1, "c.Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED", "Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED"], [44, 1, 1, "c.Py_MOD_PER_INTERPRETER_GIL_SUPPORTED", "Py_MOD_PER_INTERPRETER_GIL_SUPPORTED"], [65, 2, 1, "c.Py_Main", "Py_Main"], [62, 1, 1, "c.Py_NE", "Py_NE"], [34, 1, 1, "c.Py_NO_INLINE", "Py_NO_INLINE"], [32, 2, 1, "c.Py_NewInterpreter", "Py_NewInterpreter"], [32, 2, 1, "c.Py_NewInterpreterFromConfig", "Py_NewInterpreterFromConfig"], [51, 2, 1, "c.Py_NewRef", "Py_NewRef"], [32, 0, 1, "c.Py_NoSiteFlag", "Py_NoSiteFlag"], [32, 0, 1, "c.Py_NoUserSiteDirectory", "Py_NoUserSiteDirectory"], [45, 0, 1, "c.Py_None", "Py_None"], [48, 0, 1, "c.Py_NotImplemented", "Py_NotImplemented"], [32, 0, 1, "c.Py_OptimizeFlag", "Py_OptimizeFlag"], [48, 1, 1, "c.Py_PRINT_RAW", "Py_PRINT_RAW"], [33, 2, 1, "c.Py_PreInitialize", "Py_PreInitialize"], [33, 2, 1, "c.Py_PreInitializeFromArgs", "Py_PreInitializeFromArgs"], [33, 2, 1, "c.Py_PreInitializeFromBytesArgs", "Py_PreInitializeFromBytesArgs"], [32, 0, 1, "c.Py_QuietFlag", "Py_QuietFlag"], [57, 1, 1, "c.Py_READONLY", "Py_READONLY"], [51, 2, 1, "c.Py_REFCNT", "Py_REFCNT"], [57, 1, 1, "c.Py_RELATIVE_OFFSET", "Py_RELATIVE_OFFSET"], [6, 1, 1, "c.Py_RETURN_FALSE", "Py_RETURN_FALSE"], [45, 1, 1, "c.Py_RETURN_NONE", "Py_RETURN_NONE"], [48, 1, 1, "c.Py_RETURN_NOTIMPLEMENTED", "Py_RETURN_NOTIMPLEMENTED"], [62, 1, 1, "c.Py_RETURN_RICHCOMPARE", "Py_RETURN_RICHCOMPARE"], [6, 1, 1, "c.Py_RETURN_TRUE", "Py_RETURN_TRUE"], [23, 2, 1, "c.Py_ReprEnter", "Py_ReprEnter"], [23, 2, 1, "c.Py_ReprLeave", "Py_ReprLeave"], [33, 2, 1, "c.Py_RunMain", "Py_RunMain"], [51, 1, 1, "c.Py_SETREF", "Py_SETREF"], [51, 2, 1, "c.Py_SET_REFCNT", "Py_SET_REFCNT"], [57, 2, 1, "c.Py_SET_SIZE", "Py_SET_SIZE"], [57, 2, 1, "c.Py_SET_TYPE", "Py_SET_TYPE"], [57, 2, 1, "c.Py_SIZE", "Py_SIZE"], [34, 1, 1, "c.Py_STRINGIFY", "Py_STRINGIFY"], [32, 2, 1, "c.Py_SetPath", "Py_SetPath"], [32, 2, 1, "c.Py_SetProgramName", "Py_SetProgramName"], [32, 2, 1, "c.Py_SetPythonHome", "Py_SetPythonHome"], [32, 2, 1, "c.Py_SetStandardStreamEncoding", "Py_SetStandardStreamEncoding"], [62, 1, 1, "c.Py_TPFLAGS_BASETYPE", "Py_TPFLAGS_BASETYPE"], [62, 1, 1, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS", "Py_TPFLAGS_BASE_EXC_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_BYTES_SUBCLASS", "Py_TPFLAGS_BYTES_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_DEFAULT", "Py_TPFLAGS_DEFAULT"], [62, 1, 1, "c.Py_TPFLAGS_DICT_SUBCLASS", "Py_TPFLAGS_DICT_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION", "Py_TPFLAGS_DISALLOW_INSTANTIATION"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_FINALIZE", "Py_TPFLAGS_HAVE_FINALIZE"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_GC", "Py_TPFLAGS_HAVE_GC"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_VECTORCALL", "Py_TPFLAGS_HAVE_VECTORCALL"], [62, 1, 1, "c.Py_TPFLAGS_HEAPTYPE", "Py_TPFLAGS_HEAPTYPE"], [62, 1, 1, "c.Py_TPFLAGS_IMMUTABLETYPE", "Py_TPFLAGS_IMMUTABLETYPE"], [62, 1, 1, "c.Py_TPFLAGS_ITEMS_AT_END", "Py_TPFLAGS_ITEMS_AT_END"], [62, 1, 1, "c.Py_TPFLAGS_LIST_SUBCLASS", "Py_TPFLAGS_LIST_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_LONG_SUBCLASS", "Py_TPFLAGS_LONG_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_MANAGED_DICT", "Py_TPFLAGS_MANAGED_DICT"], [62, 1, 1, "c.Py_TPFLAGS_MANAGED_WEAKREF", "Py_TPFLAGS_MANAGED_WEAKREF"], [62, 1, 1, "c.Py_TPFLAGS_MAPPING", "Py_TPFLAGS_MAPPING"], [62, 1, 1, "c.Py_TPFLAGS_METHOD_DESCRIPTOR", "Py_TPFLAGS_METHOD_DESCRIPTOR"], [62, 1, 1, "c.Py_TPFLAGS_READY", "Py_TPFLAGS_READY"], [62, 1, 1, "c.Py_TPFLAGS_READYING", "Py_TPFLAGS_READYING"], [62, 1, 1, "c.Py_TPFLAGS_SEQUENCE", "Py_TPFLAGS_SEQUENCE"], [62, 1, 1, "c.Py_TPFLAGS_TUPLE_SUBCLASS", "Py_TPFLAGS_TUPLE_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_TYPE_SUBCLASS", "Py_TPFLAGS_TYPE_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_UNICODE_SUBCLASS", "Py_TPFLAGS_UNICODE_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_VALID_VERSION_TAG", "Py_TPFLAGS_VALID_VERSION_TAG"], [57, 2, 1, "c.Py_TYPE", "Py_TYPE"], [57, 1, 1, "c.Py_T_BOOL", "Py_T_BOOL"], [57, 1, 1, "c.Py_T_BYTE", "Py_T_BYTE"], [57, 1, 1, "c.Py_T_CHAR", "Py_T_CHAR"], [57, 1, 1, "c.Py_T_DOUBLE", "Py_T_DOUBLE"], [57, 1, 1, "c.Py_T_FLOAT", "Py_T_FLOAT"], [57, 1, 1, "c.Py_T_INT", "Py_T_INT"], [57, 1, 1, "c.Py_T_LONG", "Py_T_LONG"], [57, 1, 1, "c.Py_T_LONGLONG", "Py_T_LONGLONG"], [57, 1, 1, "c.Py_T_OBJECT_EX", "Py_T_OBJECT_EX"], [57, 1, 1, "c.Py_T_PYSSIZET", "Py_T_PYSSIZET"], [57, 1, 1, "c.Py_T_SHORT", "Py_T_SHORT"], [57, 1, 1, "c.Py_T_STRING", "Py_T_STRING"], [57, 1, 1, "c.Py_T_STRING_INPLACE", "Py_T_STRING_INPLACE"], [57, 1, 1, "c.Py_T_UBYTE", "Py_T_UBYTE"], [57, 1, 1, "c.Py_T_UINT", "Py_T_UINT"], [57, 1, 1, "c.Py_T_ULONG", "Py_T_ULONG"], [57, 1, 1, "c.Py_T_ULONGLONG", "Py_T_ULONGLONG"], [57, 1, 1, "c.Py_T_USHORT", "Py_T_USHORT"], [6, 0, 1, "c.Py_True", "Py_True"], [63, 4, 1, "c.Py_UCS1", "Py_UCS1"], [63, 4, 1, "c.Py_UCS2", "Py_UCS2"], [63, 4, 1, "c.Py_UCS4", "Py_UCS4"], [32, 1, 1, "c.Py_UNBLOCK_THREADS", "Py_UNBLOCK_THREADS"], [63, 4, 1, "c.Py_UNICODE", "Py_UNICODE"], [63, 2, 1, "c.Py_UNICODE_ISALNUM", "Py_UNICODE_ISALNUM"], [63, 2, 1, "c.Py_UNICODE_ISALPHA", "Py_UNICODE_ISALPHA"], [63, 2, 1, "c.Py_UNICODE_ISDECIMAL", "Py_UNICODE_ISDECIMAL"], [63, 2, 1, "c.Py_UNICODE_ISDIGIT", "Py_UNICODE_ISDIGIT"], [63, 2, 1, "c.Py_UNICODE_ISLINEBREAK", "Py_UNICODE_ISLINEBREAK"], [63, 2, 1, "c.Py_UNICODE_ISLOWER", "Py_UNICODE_ISLOWER"], [63, 2, 1, "c.Py_UNICODE_ISNUMERIC", "Py_UNICODE_ISNUMERIC"], [63, 2, 1, "c.Py_UNICODE_ISPRINTABLE", "Py_UNICODE_ISPRINTABLE"], [63, 2, 1, "c.Py_UNICODE_ISSPACE", "Py_UNICODE_ISSPACE"], [63, 2, 1, "c.Py_UNICODE_ISTITLE", "Py_UNICODE_ISTITLE"], [63, 2, 1, "c.Py_UNICODE_ISUPPER", "Py_UNICODE_ISUPPER"], [63, 2, 1, "c.Py_UNICODE_IS_HIGH_SURROGATE", "Py_UNICODE_IS_HIGH_SURROGATE"], [63, 2, 1, "c.Py_UNICODE_IS_LOW_SURROGATE", "Py_UNICODE_IS_LOW_SURROGATE"], [63, 2, 1, "c.Py_UNICODE_IS_SURROGATE", "Py_UNICODE_IS_SURROGATE"], [63, 2, 1, "c.Py_UNICODE_JOIN_SURROGATES", "Py_UNICODE_JOIN_SURROGATES"], [63, 2, 1, "c.Py_UNICODE_TODECIMAL", "Py_UNICODE_TODECIMAL"], [63, 2, 1, "c.Py_UNICODE_TODIGIT", "Py_UNICODE_TODIGIT"], [63, 2, 1, "c.Py_UNICODE_TOLOWER", "Py_UNICODE_TOLOWER"], [63, 2, 1, "c.Py_UNICODE_TONUMERIC", "Py_UNICODE_TONUMERIC"], [63, 2, 1, "c.Py_UNICODE_TOTITLE", "Py_UNICODE_TOTITLE"], [63, 2, 1, "c.Py_UNICODE_TOUPPER", "Py_UNICODE_TOUPPER"], [34, 1, 1, "c.Py_UNREACHABLE", "Py_UNREACHABLE"], [34, 1, 1, "c.Py_UNUSED", "Py_UNUSED"], [32, 0, 1, "c.Py_UnbufferedStdioFlag", "Py_UnbufferedStdioFlag"], [28, 2, 1, "c.Py_VISIT", "Py_VISIT"], [5, 2, 1, "c.Py_VaBuildValue", "Py_VaBuildValue"], [32, 0, 1, "c.Py_VerboseFlag", "Py_VerboseFlag"], [4, 0, 1, "c.Py_Version", "Py_Version"], [51, 2, 1, "c.Py_XDECREF", "Py_XDECREF"], [51, 2, 1, "c.Py_XINCREF", "Py_XINCREF"], [51, 2, 1, "c.Py_XNewRef", "Py_XNewRef"], [51, 1, 1, "c.Py_XSETREF", "Py_XSETREF"], [7, 4, 1, "c.Py_buffer", "Py_buffer"], [15, 4, 1, "c.Py_complex", "Py_complex"], [65, 0, 1, "c.Py_eval_input", "Py_eval_input"], [65, 0, 1, "c.Py_file_input", "Py_file_input"], [44, 1, 1, "c.Py_mod_create", "Py_mod_create"], [44, 1, 1, "c.Py_mod_exec", "Py_mod_exec"], [44, 1, 1, "c.Py_mod_multiple_interpreters", "Py_mod_multiple_interpreters"], [65, 0, 1, "c.Py_single_input", "Py_single_input"], [34, 4, 1, "c.Py_ssize_t", "Py_ssize_t"], [32, 4, 1, "c.Py_tracefunc", "Py_tracefunc"], [32, 1, 1, "c.Py_tss_NEEDS_INIT", "Py_tss_NEEDS_INIT"], [32, 4, 1, "c.Py_tss_t", "Py_tss_t"], [57, 1, 1, "c.T_NONE", "T_NONE"], [57, 1, 1, "c.T_OBJECT", "T_OBJECT"], [9, 2, 1, "c._PyBytes_Resize", "_PyBytes_Resize"], [57, 4, 1, "c._PyCFunctionFast", "_PyCFunctionFast"], [57, 4, 1, "c._PyCFunctionFastWithKeywords", "_PyCFunctionFastWithKeywords"], [32, 4, 1, "c._PyFrameEvalFunction", "_PyFrameEvalFunction"], [26, 5, 1, "c._PyInterpreterFrame", "_PyInterpreterFrame"], [32, 2, 1, "c._PyInterpreterState_GetEvalFrameFunc", "_PyInterpreterState_GetEvalFrameFunc"], [32, 2, 1, "c._PyInterpreterState_SetEvalFrameFunc", "_PyInterpreterState_SetEvalFrameFunc"], [48, 2, 1, "c._PyObject_GetDictPtr", "_PyObject_GetDictPtr"], [3, 2, 1, "c._PyObject_New", "_PyObject_New"], [3, 2, 1, "c._PyObject_NewVar", "_PyObject_NewVar"], [59, 2, 1, "c._PyTuple_Resize", "_PyTuple_Resize"], [33, 2, 1, "c._Py_InitializeMain", "_Py_InitializeMain"], [3, 0, 1, "c._Py_NoneStruct", "_Py_NoneStruct"], [15, 2, 1, "c._Py_c_diff", "_Py_c_diff"], [15, 2, 1, "c._Py_c_neg", "_Py_c_neg"], [15, 2, 1, "c._Py_c_pow", "_Py_c_pow"], [15, 2, 1, "c._Py_c_prod", "_Py_c_prod"], [15, 2, 1, "c._Py_c_quot", "_Py_c_quot"], [15, 2, 1, "c._Py_c_sum", "_Py_c_sum"], [30, 5, 1, "c._frozen", "_frozen"], [30, 5, 1, "c._inittab", "_inittab"], [62, 4, 1, "c.allocfunc", "allocfunc"], [62, 4, 1, "c.binaryfunc", "binaryfunc"], [62, 4, 1, "c.descrgetfunc", "descrgetfunc"], [62, 4, 1, "c.descrsetfunc", "descrsetfunc"], [62, 4, 1, "c.destructor", "destructor"], [62, 4, 1, "c.freefunc", "freefunc"], [28, 4, 1, "c.gcvisitobjects_t", "gcvisitobjects_t"], [62, 4, 1, "c.getattrfunc", "getattrfunc"], [62, 4, 1, "c.getattrofunc", "getattrofunc"], [62, 4, 1, "c.getbufferproc", "getbufferproc"], [62, 4, 1, "c.getiterfunc", "getiterfunc"], [57, 4, 1, "c.getter", "getter"], [62, 4, 1, "c.hashfunc", "hashfunc"], [62, 4, 1, "c.initproc", "initproc"], [28, 4, 1, "c.inquiry", "inquiry"], [62, 4, 1, "c.iternextfunc", "iternextfunc"], [62, 4, 1, "c.lenfunc", "lenfunc"], [62, 4, 1, "c.newfunc", "newfunc"], [62, 4, 1, "c.objobjargproc", "objobjargproc"], [62, 4, 1, "c.objobjproc", "objobjproc"], [62, 4, 1, "c.releasebufferproc", "releasebufferproc"], [62, 4, 1, "c.reprfunc", "reprfunc"], [62, 4, 1, "c.richcmpfunc", "richcmpfunc"], [62, 4, 1, "c.sendfunc", "sendfunc"], [62, 4, 1, "c.setattrfunc", "setattrfunc"], [62, 4, 1, "c.setattrofunc", "setattrofunc"], [57, 4, 1, "c.setter", "setter"], [62, 4, 1, "c.ssizeargfunc", "ssizeargfunc"], [62, 4, 1, "c.ssizeobjargproc", "ssizeobjargproc"], [62, 4, 1, "c.ternaryfunc", "ternaryfunc"], [28, 4, 1, "c.traverseproc", "traverseproc"], [62, 4, 1, "c.unaryfunc", "unaryfunc"], [10, 4, 1, "c.vectorcallfunc", "vectorcallfunc"], [28, 4, 1, "c.visitproc", "visitproc"], [210, 6, 1, "", "ArithmeticError"], [210, 6, 1, "", "AssertionError"], [210, 6, 1, "", "AttributeError"], [210, 6, 1, "", "BaseException"], [210, 6, 1, "", "BaseExceptionGroup"], [210, 6, 1, "", "BlockingIOError"], [210, 6, 1, "", "BrokenPipeError"], [210, 6, 1, "", "BufferError"], [210, 6, 1, "", "BytesWarning"], [210, 6, 1, "", "ChildProcessError"], [210, 6, 1, "", "ConnectionAbortedError"], [210, 6, 1, "", "ConnectionError"], [210, 6, 1, "", "ConnectionRefusedError"], [210, 6, 1, "", "ConnectionResetError"], [210, 6, 1, "", "DeprecationWarning"], [210, 6, 1, "", "EOFError"], [165, 9, 1, "", "Ellipsis"], [210, 6, 1, "", "EncodingWarning"], [210, 6, 1, "", "EnvironmentError"], [210, 6, 1, "", "Exception"], [210, 6, 1, "", "ExceptionGroup"], [165, 9, 1, "", "False"], [210, 6, 1, "", "FileExistsError"], [210, 6, 1, "", "FileNotFoundError"], [210, 6, 1, "", "FloatingPointError"], [210, 6, 1, "", "FutureWarning"], [210, 6, 1, "", "GeneratorExit"], [210, 6, 1, "", "IOError"], [210, 6, 1, "", "ImportError"], [210, 6, 1, "", "ImportWarning"], [210, 6, 1, "", "IndentationError"], [210, 6, 1, "", "IndexError"], [210, 6, 1, "", "InterruptedError"], [210, 6, 1, "", "IsADirectoryError"], [210, 6, 1, "", "KeyError"], [210, 6, 1, "", "KeyboardInterrupt"], [210, 6, 1, "", "LookupError"], [210, 6, 1, "", "MemoryError"], [210, 6, 1, "", "ModuleNotFoundError"], [210, 6, 1, "", "NameError"], [165, 9, 1, "", "None"], [210, 6, 1, "", "NotADirectoryError"], [165, 9, 1, "", "NotImplemented"], [210, 6, 1, "", "NotImplementedError"], [210, 6, 1, "", "OSError"], [210, 6, 1, "", "OverflowError"], [210, 6, 1, "", "PendingDeprecationWarning"], [210, 6, 1, "", "PermissionError"], [210, 6, 1, "", "ProcessLookupError"], [210, 6, 1, "", "RecursionError"], [210, 6, 1, "", "ReferenceError"], [210, 6, 1, "", "ResourceWarning"], [210, 6, 1, "", "RuntimeError"], [210, 6, 1, "", "RuntimeWarning"], [210, 6, 1, "", "StopAsyncIteration"], [210, 6, 1, "", "StopIteration"], [210, 6, 1, "", "SyntaxError"], [210, 6, 1, "", "SyntaxWarning"], [210, 6, 1, "", "SystemError"], [210, 6, 1, "", "SystemExit"], [210, 6, 1, "", "TabError"], [210, 6, 1, "", "TimeoutError"], [165, 9, 1, "", "True"], [210, 6, 1, "", "TypeError"], [210, 6, 1, "", "UnboundLocalError"], [210, 6, 1, "", "UnicodeDecodeError"], [210, 6, 1, "", "UnicodeEncodeError"], [210, 6, 1, "", "UnicodeError"], [210, 6, 1, "", "UnicodeTranslateError"], [210, 6, 1, "", "UnicodeWarning"], [210, 6, 1, "", "UserWarning"], [210, 6, 1, "", "ValueError"], [210, 6, 1, "", "Warning"], [210, 6, 1, "", "WindowsError"], [210, 6, 1, "", "ZeroDivisionError"], [429, 7, 1, "cached__", "__cached__"], [165, 9, 1, "debug__", "__debug__"], [429, 7, 1, "file__", "__file__"], [110, 10, 0, "-", "__future__"], [222, 12, 1, "import__", "__import__"], [429, 7, 1, "loader__", "__loader__"], [111, 10, 0, "-", "__main__"], [429, 7, 1, "name__", "__name__"], [429, 7, 1, "package__", "__package__"], [429, 7, 1, "path__", "__path__"], [429, 7, 1, "spec__", "__spec__"], [112, 10, 0, "-", "_thread"], [366, 10, 0, "-", "_tkinter"], [113, 10, 0, "-", "abc"], [222, 12, 1, "", "abs"], [114, 10, 0, "-", "aifc"], [222, 12, 1, "", "aiter"], [222, 12, 1, "", "all"], [222, 12, 1, "", "anext"], [222, 12, 1, "", "any"], [117, 10, 0, "-", "argparse"], [118, 10, 0, "-", "array"], [222, 12, 1, "", "ascii"], [119, 10, 0, "-", "ast"], [120, 10, 0, "-", "asyncio"], [137, 10, 0, "-", "atexit"], [138, 10, 0, "-", "audioop"], [140, 10, 0, "-", "base64"], [141, 10, 0, "-", "bdb"], [222, 12, 1, "", "bin"], [143, 10, 0, "-", "binascii"], [144, 10, 0, "-", "bisect"], [222, 11, 1, "", "bool"], [222, 12, 1, "", "breakpoint"], [145, 10, 0, "-", "builtins"], [341, 11, 1, "", "bytearray"], [341, 11, 1, "", "bytes"], [146, 10, 0, "-", "bz2"], [305, 10, 0, "-", "cProfile"], [147, 10, 0, "-", "calendar"], [222, 12, 1, "", "callable"], [148, 10, 0, "-", "cgi"], [149, 10, 0, "-", "cgitb"], [222, 12, 1, "", "chr"], [150, 10, 0, "-", "chunk"], [222, 12, 1, "", "classmethod"], [151, 10, 0, "-", "cmath"], [152, 10, 0, "-", "cmd"], [154, 10, 0, "-", "code"], [155, 10, 0, "-", "codecs"], [156, 10, 0, "-", "codeop"], [157, 10, 0, "-", "collections"], [159, 10, 0, "-", "colorsys"], [222, 12, 1, "", "compile"], [160, 10, 0, "-", "compileall"], [222, 11, 1, "", "complex"], [164, 10, 0, "-", "configparser"], [166, 10, 0, "-", "contextlib"], [167, 10, 0, "-", "contextvars"], [168, 10, 0, "-", "copy"], [169, 10, 0, "-", "copyreg"], [165, 9, 1, "", "copyright"], [165, 9, 1, "", "credits"], [170, 10, 0, "-", "crypt"], [172, 10, 0, "-", "csv"], [173, 10, 0, "-", "ctypes"], [174, 10, 0, "-", "curses"], [178, 10, 0, "-", "dataclasses"], [180, 10, 0, "-", "datetime"], [181, 10, 0, "-", "dbm"], [183, 10, 0, "-", "decimal"], [222, 12, 1, "", "delattr"], [341, 11, 1, "", "dict"], [187, 10, 0, "-", "difflib"], [222, 12, 1, "", "dir"], [188, 10, 0, "-", "dis"], [222, 12, 1, "", "divmod"], [190, 10, 0, "-", "doctest"], [191, 10, 0, "-", "email"], [207, 10, 0, "-", "ensurepip"], [208, 10, 0, "-", "enum"], [222, 12, 1, "", "enumerate"], [209, 10, 0, "-", "errno"], [222, 12, 1, "", "eval"], [222, 12, 1, "", "exec"], [165, 9, 1, "", "exit"], [211, 10, 0, "-", "faulthandler"], [212, 10, 0, "-", "fcntl"], [213, 10, 0, "-", "filecmp"], [215, 10, 0, "-", "fileinput"], [222, 12, 1, "", "filter"], [222, 11, 1, "", "float"], [217, 10, 0, "-", "fnmatch"], [222, 12, 1, "", "format"], [218, 10, 0, "-", "fractions"], [341, 11, 1, "", "frozenset"], [220, 10, 0, "-", "ftplib"], [223, 10, 0, "-", "functools"], [224, 10, 0, "-", "gc"], [222, 12, 1, "", "getattr"], [225, 10, 0, "-", "getopt"], [226, 10, 0, "-", "getpass"], [227, 10, 0, "-", "gettext"], [228, 10, 0, "-", "glob"], [222, 12, 1, "", "globals"], [229, 10, 0, "-", "graphlib"], [230, 10, 0, "-", "grp"], [231, 10, 0, "-", "gzip"], [222, 12, 1, "", "hasattr"], [222, 12, 1, "", "hash"], [232, 10, 0, "-", "hashlib"], [233, 10, 0, "-", "heapq"], [222, 12, 1, "", "help"], [222, 12, 1, "", "hex"], [234, 10, 0, "-", "hmac"], [235, 10, 0, "-", "html"], [238, 10, 0, "-", "http"], [222, 12, 1, "", "id"], [244, 10, 0, "-", "idlelib"], [245, 10, 0, "-", "imaplib"], [246, 10, 0, "-", "imghdr"], [247, 10, 0, "-", "importlib"], [222, 12, 1, "", "input"], [252, 10, 0, "-", "inspect"], [222, 11, 1, "", "int"], [255, 10, 0, "-", "io"], [256, 10, 0, "-", "ipaddress"], [222, 12, 1, "", "isinstance"], [222, 12, 1, "", "issubclass"], [222, 12, 1, "", "iter"], [258, 10, 0, "-", "itertools"], [259, 10, 0, "-", "json"], [260, 10, 0, "-", "keyword"], [222, 12, 1, "", "len"], [109, 10, 0, "-", "lib2to3"], [165, 9, 1, "", "license"], [262, 10, 0, "-", "linecache"], [341, 11, 1, "", "list"], [263, 10, 0, "-", "locale"], [222, 12, 1, "", "locals"], [264, 10, 0, "-", "logging"], [267, 10, 0, "-", "lzma"], [268, 10, 0, "-", "mailbox"], [269, 10, 0, "-", "mailcap"], [222, 12, 1, "", "map"], [271, 10, 0, "-", "marshal"], [272, 10, 0, "-", "math"], [222, 12, 1, "", "max"], [341, 11, 1, "", "memoryview"], [273, 10, 0, "-", "mimetypes"], [222, 12, 1, "", "min"], [275, 10, 0, "-", "mmap"], [276, 10, 0, "-", "modulefinder"], [278, 10, 0, "-", "msilib"], [279, 10, 0, "-", "msvcrt"], [280, 10, 0, "-", "multiprocessing"], [283, 10, 0, "-", "netrc"], [222, 12, 1, "", "next"], [284, 10, 0, "-", "nis"], [285, 10, 0, "-", "nntplib"], [286, 10, 0, "-", "numbers"], [222, 11, 1, "", "object"], [222, 12, 1, "", "oct"], [222, 12, 1, "", "open"], [288, 10, 0, "-", "operator"], [289, 10, 0, "-", "optparse"], [222, 12, 1, "", "ord"], [290, 10, 0, "-", "os"], [292, 10, 0, "-", "ossaudiodev"], [293, 10, 0, "-", "pathlib"], [294, 10, 0, "-", "pdb"], [296, 10, 0, "-", "pickle"], [297, 10, 0, "-", "pickletools"], [298, 10, 0, "-", "pipes"], [299, 10, 0, "-", "pkgutil"], [300, 10, 0, "-", "platform"], [301, 10, 0, "-", "plistlib"], [302, 10, 0, "-", "poplib"], [303, 10, 0, "-", "posix"], [222, 12, 1, "", "pow"], [304, 10, 0, "-", "pprint"], [222, 12, 1, "", "print"], [305, 10, 0, "-", "profile"], [222, 11, 1, "", "property"], [305, 10, 0, "-", "pstats"], [306, 10, 0, "-", "pty"], [307, 10, 0, "-", "pwd"], [308, 10, 0, "-", "py_compile"], [309, 10, 0, "-", "pyclbr"], [310, 10, 0, "-", "pydoc"], [313, 10, 0, "-", "queue"], [165, 9, 1, "", "quit"], [314, 10, 0, "-", "quopri"], [315, 10, 0, "-", "random"], [341, 11, 1, "", "range"], [316, 10, 0, "-", "re"], [317, 10, 0, "-", "readline"], [222, 12, 1, "", "repr"], [318, 10, 0, "-", "reprlib"], [319, 10, 0, "-", "resource"], [222, 12, 1, "", "reversed"], [320, 10, 0, "-", "rlcompleter"], [222, 12, 1, "", "round"], [321, 10, 0, "-", "runpy"], [322, 10, 0, "-", "sched"], [323, 10, 0, "-", "secrets"], [325, 10, 0, "-", "select"], [326, 10, 0, "-", "selectors"], [341, 11, 1, "", "set"], [222, 12, 1, "", "setattr"], [327, 10, 0, "-", "shelve"], [328, 10, 0, "-", "shlex"], [329, 10, 0, "-", "shutil"], [330, 10, 0, "-", "signal"], [331, 10, 0, "-", "site"], [331, 10, 0, "-", "sitecustomize"], [222, 11, 1, "", "slice"], [332, 10, 0, "-", "smtplib"], [333, 10, 0, "-", "sndhdr"], [334, 10, 0, "-", "socket"], [335, 10, 0, "-", "socketserver"], [222, 12, 1, "", "sorted"], [336, 10, 0, "-", "spwd"], [337, 10, 0, "-", "sqlite3"], [338, 10, 0, "-", "ssl"], [339, 10, 0, "-", "stat"], [222, 12, 1, "", "staticmethod"], [340, 10, 0, "-", "statistics"], [341, 11, 1, "", "str"], [342, 10, 0, "-", "string"], [343, 10, 0, "-", "stringprep"], [344, 10, 0, "-", "struct"], [345, 10, 0, "-", "subprocess"], [222, 12, 1, "", "sum"], [346, 10, 0, "-", "sunau"], [222, 11, 1, "", "super"], [348, 10, 0, "-", "symtable"], [349, 10, 0, "-", "sys"], [352, 10, 0, "-", "sysconfig"], [353, 10, 0, "-", "syslog"], [354, 10, 0, "-", "tabnanny"], [355, 10, 0, "-", "tarfile"], [356, 10, 0, "-", "telnetlib"], [357, 10, 0, "-", "tempfile"], [358, 10, 0, "-", "termios"], [359, 10, 0, "-", "test"], [361, 10, 0, "-", "textwrap"], [362, 10, 0, "-", "threading"], [363, 10, 0, "-", "time"], [364, 10, 0, "-", "timeit"], [366, 10, 0, "-", "tkinter"], [374, 10, 0, "-", "token"], [375, 10, 0, "-", "tokenize"], [376, 10, 0, "-", "tomllib"], [377, 10, 0, "-", "trace"], [378, 10, 0, "-", "traceback"], [379, 10, 0, "-", "tracemalloc"], [380, 10, 0, "-", "tty"], [341, 11, 1, "", "tuple"], [381, 10, 0, "-", "turtle"], [381, 10, 0, "-", "turtledemo"], [222, 11, 1, "", "type"], [382, 10, 0, "-", "types"], [383, 10, 0, "-", "typing"], [384, 10, 0, "-", "unicodedata"], [385, 10, 0, "-", "unittest"], [389, 10, 0, "-", "urllib"], [331, 10, 0, "-", "usercustomize"], [394, 10, 0, "-", "uu"], [395, 10, 0, "-", "uuid"], [222, 12, 1, "", "vars"], [396, 10, 0, "-", "venv"], [397, 10, 0, "-", "warnings"], [398, 10, 0, "-", "wave"], [399, 10, 0, "-", "weakref"], [400, 10, 0, "-", "webbrowser"], [402, 10, 0, "-", "winreg"], [403, 10, 0, "-", "winsound"], [404, 10, 0, "-", "wsgiref"], [405, 10, 0, "-", "xdrlib"], [406, 10, 0, "-", "xml"], [222, 12, 1, "", "zip"], [418, 10, 0, "-", "zipapp"], [419, 10, 0, "-", "zipfile"], [420, 10, 0, "-", "zipimport"], [421, 10, 0, "-", "zlib"], [422, 10, 0, "-", "zoneinfo"], [294, 13, 1, "pdbcommand-0", "!"], [453, 14, 1, "cmdoption-build", "--build"], [452, 14, 1, "cmdoption-check-hash-based-pycs", "--check-hash-based-pycs"], [453, 14, 1, "cmdoption-disable-ipv6", "--disable-ipv6"], [453, 14, 1, "cmdoption-disable-test-modules", "--disable-test-modules"], [453, 14, 1, "cmdoption-enable-big-digits", "--enable-big-digits"], [453, 14, 1, "cmdoption-enable-bolt", "--enable-bolt"], [453, 14, 1, "cmdoption-enable-framework", "--enable-framework"], [453, 14, 1, "cmdoption-enable-loadable-sqlite-extensions", "--enable-loadable-sqlite-extensions"], [453, 14, 1, "cmdoption-enable-optimizations", "--enable-optimizations"], [453, 14, 1, "cmdoption-enable-profiling", "--enable-profiling"], [453, 14, 1, "cmdoption-enable-pystats", "--enable-pystats"], [453, 14, 1, "cmdoption-enable-shared", "--enable-shared"], [453, 14, 1, "cmdoption-enable-universalsdk", "--enable-universalsdk"], [453, 14, 1, "cmdoption-enable-wasm-dynamic-linking", "--enable-wasm-dynamic-linking"], [453, 14, 1, "cmdoption-enable-wasm-pthreads", "--enable-wasm-pthreads"], [453, 14, 1, "cmdoption-exec-prefix", "--exec-prefix"], [452, 14, 1, "cmdoption-help", "--help"], [452, 14, 1, "cmdoption-help-all", "--help-all"], [452, 14, 1, "cmdoption-help-env", "--help-env"], [452, 14, 1, "cmdoption-help-xoptions", "--help-xoptions"], [453, 14, 1, "cmdoption-host", "--host"], [453, 14, 1, "cmdoption-prefix", "--prefix"], [452, 14, 1, "cmdoption-version", "--version"], [453, 14, 1, "cmdoption-with-address-sanitizer", "--with-address-sanitizer"], [453, 14, 1, "cmdoption-with-assertions", "--with-assertions"], [453, 14, 1, "cmdoption-with-build-python", "--with-build-python"], [453, 14, 1, "cmdoption-with-builtin-hashlib-hashes", "--with-builtin-hashlib-hashes"], [453, 14, 1, "cmdoption-with-computed-gotos", "--with-computed-gotos"], [453, 14, 1, "cmdoption-with-dbmliborder", "--with-dbmliborder"], [453, 14, 1, "cmdoption-with-dtrace", "--with-dtrace"], [453, 14, 1, "cmdoption-with-emscripten-target", "--with-emscripten-target"], [453, 14, 1, "cmdoption-with-ensurepip", "--with-ensurepip"], [453, 14, 1, "cmdoption-with-framework-name", "--with-framework-name"], [453, 14, 1, "cmdoption-with-hash-algorithm", "--with-hash-algorithm"], [453, 14, 1, "cmdoption-with-libc", "--with-libc"], [453, 14, 1, "cmdoption-with-libm", "--with-libm"], [453, 14, 1, "cmdoption-with-libs", "--with-libs"], [453, 14, 1, "cmdoption-with-lto", "--with-lto"], [453, 14, 1, "cmdoption-with-memory-sanitizer", "--with-memory-sanitizer"], [453, 14, 1, "cmdoption-with-openssl", "--with-openssl"], [453, 14, 1, "cmdoption-with-openssl-rpath", "--with-openssl-rpath"], [453, 14, 1, "cmdoption-with-pkg-config", "--with-pkg-config"], [453, 14, 1, "cmdoption-with-platlibdir", "--with-platlibdir"], [453, 14, 1, "cmdoption-with-pydebug", "--with-pydebug"], [453, 14, 1, "cmdoption-with-readline", "--with-readline"], [453, 14, 1, "cmdoption-with-ssl-default-suites", "--with-ssl-default-suites"], [453, 14, 1, "cmdoption-with-strict-overflow", "--with-strict-overflow"], [453, 14, 1, "cmdoption-with-suffix", "--with-suffix"], [453, 14, 1, "cmdoption-with-system-expat", "--with-system-expat"], [453, 14, 1, "cmdoption-with-system-libmpdec", "--with-system-libmpdec"], [453, 14, 1, "cmdoption-with-trace-refs", "--with-trace-refs"], [453, 14, 1, "cmdoption-with-tzpath", "--with-tzpath"], [453, 14, 1, "cmdoption-with-undefined-behavior-sanitizer", "--with-undefined-behavior-sanitizer"], [453, 14, 1, "cmdoption-with-universal-archs", "--with-universal-archs"], [453, 14, 1, "cmdoption-with-valgrind", "--with-valgrind"], [453, 14, 1, "cmdoption-with-wheel-pkg-dir", "--with-wheel-pkg-dir"], [453, 14, 1, "cmdoption-without-c-locale-coercion", "--without-c-locale-coercion"], [453, 14, 1, "cmdoption-without-decimal-contextvar", "--without-decimal-contextvar"], [453, 14, 1, "cmdoption-without-doc-strings", "--without-doc-strings"], [453, 14, 1, "cmdoption-without-freelists", "--without-freelists"], [453, 14, 1, "cmdoption-without-pymalloc", "--without-pymalloc"], [453, 14, 1, "cmdoption-without-readline", "--without-readline"], [453, 14, 1, "cmdoption-without-static-libpython", "--without-static-libpython"], [452, 14, 1, "cmdoption-0", "-?"], [452, 14, 1, "cmdoption-B", "-B"], [452, 14, 1, "cmdoption-E", "-E"], [452, 14, 1, "cmdoption-I", "-I"], [452, 14, 1, "cmdoption-J", "-J"], [452, 14, 1, "cmdoption-O", "-O"], [452, 14, 1, "cmdoption-OO", "-OO"], [452, 14, 1, "cmdoption-P", "-P"], [452, 14, 1, "cmdoption-R", "-R"], [452, 14, 1, "cmdoption-S", "-S"], [452, 14, 1, "cmdoption-V", "-V"], [452, 14, 1, "cmdoption-W", "-W"], [452, 14, 1, "cmdoption-X", "-X"], [452, 14, 1, "cmdoption-b", "-b"], [452, 14, 1, "cmdoption-c", "-c"], [452, 14, 1, "cmdoption-d", "-d"], [452, 14, 1, "cmdoption-h", "-h"], [452, 14, 1, "cmdoption-i", "-i"], [452, 14, 1, "cmdoption-m", "-m"], [452, 14, 1, "cmdoption-q", "-q"], [452, 14, 1, "cmdoption-s", "-s"], [452, 14, 1, "cmdoption-u", "-u"], [452, 14, 1, "cmdoption-v", "-v"], [452, 14, 1, "cmdoption-x", "-x"], [453, 15, 1, "-", "BASECFLAGS"], [453, 15, 1, "-", "BASECPPFLAGS"], [188, 16, 1, "-", "BEFORE_ASYNC_WITH"], [188, 16, 1, "-", "BEFORE_WITH"], [188, 16, 1, "-", "BINARY_OP"], [188, 16, 1, "-", "BINARY_SLICE"], [188, 16, 1, "-", "BINARY_SUBSCR"], [453, 15, 1, "-", "BLDSHARED"], [350, 17, 1, "-", "BRANCH"], [188, 16, 1, "-", "BUILD_CONST_KEY_MAP"], [188, 16, 1, "-", "BUILD_LIST"], [188, 16, 1, "-", "BUILD_MAP"], [188, 16, 1, "-", "BUILD_SET"], [188, 16, 1, "-", "BUILD_SLICE"], [188, 16, 1, "-", "BUILD_STRING"], [188, 16, 1, "-", "BUILD_TUPLE"], [188, 16, 1, "-", "CACHE"], [350, 17, 1, "-", "CALL"], [188, 16, 1, "-", "CALL"], [188, 16, 1, "-", "CALL_FUNCTION_EX"], [188, 16, 1, "-", "CALL_INTRINSIC_1"], [188, 16, 1, "-", "CALL_INTRINSIC_2"], [453, 15, 1, "-", "CC"], [453, 15, 1, "-", "CCSHARED"], [453, 15, 1, "-", "CFLAGS"], [453, 15, 1, "-", "CFLAGSFORSHARED"], [453, 15, 1, "-", "CFLAGS_ALIASING"], [453, 15, 1, "-", "CFLAGS_NODIST"], [188, 16, 1, "-", "CHECK_EG_MATCH"], [188, 16, 1, "-", "CHECK_EXC_MATCH"], [188, 16, 1, "-", "CLEANUP_THROW"], [188, 16, 1, "-", "COMPARE_OP"], [453, 15, 1, "-", "COMPILEALL_OPTS"], [453, 15, 1, "-", "CONFIGURE_CFLAGS"], [453, 15, 1, "-", "CONFIGURE_CFLAGS_NODIST"], [453, 15, 1, "-", "CONFIGURE_CPPFLAGS"], [453, 15, 1, "-", "CONFIGURE_LDFLAGS"], [453, 15, 1, "-", "CONFIGURE_LDFLAGS_NODIST"], [453, 14, 1, "cmdoption-arg-CONFIG_SITE", "CONFIG_SITE"], [188, 16, 1, "-", "CONTAINS_OP"], [188, 16, 1, "-", "COPY"], [188, 16, 1, "-", "COPY_FREE_VARS"], [453, 15, 1, "-", "CPPFLAGS"], [453, 15, 1, "-", "CXX"], [350, 17, 1, "-", "C_RAISE"], [350, 17, 1, "-", "C_RETURN"], [188, 16, 1, "-", "DELETE_ATTR"], [188, 16, 1, "-", "DELETE_DEREF"], [188, 16, 1, "-", "DELETE_FAST"], [188, 16, 1, "-", "DELETE_GLOBAL"], [188, 16, 1, "-", "DELETE_NAME"], [188, 16, 1, "-", "DELETE_SUBSCR"], [188, 16, 1, "-", "DICT_MERGE"], [188, 16, 1, "-", "DICT_UPDATE"], [188, 16, 1, "-", "END_ASYNC_FOR"], [188, 16, 1, "-", "END_FOR"], [188, 16, 1, "-", "END_SEND"], [350, 17, 1, "-", "EXCEPTION_HANDLED"], [188, 16, 1, "-", "EXTENDED_ARG"], [453, 15, 1, "-", "EXTRA_CFLAGS"], [188, 16, 1, "-", "FORMAT_VALUE"], [188, 16, 1, "-", "FOR_ITER"], [188, 16, 1, "-", "GET_AITER"], [188, 16, 1, "-", "GET_ANEXT"], [188, 16, 1, "-", "GET_AWAITABLE"], [188, 16, 1, "-", "GET_ITER"], [188, 16, 1, "-", "GET_LEN"], [188, 16, 1, "-", "GET_YIELD_FROM_ITER"], [188, 16, 1, "-", "HAVE_ARGUMENT"], [188, 16, 1, "-", "IMPORT_FROM"], [188, 16, 1, "-", "IMPORT_NAME"], [350, 17, 1, "-", "INSTRUCTION"], [188, 16, 1, "-", "IS_OP"], [350, 17, 1, "-", "JUMP"], [188, 16, 1, "-", "JUMP"], [188, 16, 1, "-", "JUMP_BACKWARD"], [188, 16, 1, "-", "JUMP_BACKWARD_NO_INTERRUPT"], [188, 16, 1, "-", "JUMP_FORWARD"], [188, 16, 1, "-", "JUMP_NO_INTERRUPT"], [188, 16, 1, "-", "KW_NAMES"], [453, 15, 1, "-", "LDFLAGS"], [453, 15, 1, "-", "LDFLAGS_NODIST"], [453, 15, 1, "-", "LDSHARED"], [453, 15, 1, "-", "LIBS"], [350, 17, 1, "-", "LINE"], [453, 15, 1, "-", "LINKCC"], [188, 16, 1, "-", "LIST_APPEND"], [188, 16, 1, "-", "LIST_EXTEND"], [188, 16, 1, "-", "LOAD_ASSERTION_ERROR"], [188, 16, 1, "-", "LOAD_ATTR"], [188, 16, 1, "-", "LOAD_BUILD_CLASS"], [188, 16, 1, "-", "LOAD_CLOSURE"], [188, 16, 1, "-", "LOAD_CONST"], [188, 16, 1, "-", "LOAD_DEREF"], [188, 16, 1, "-", "LOAD_FAST"], [188, 16, 1, "-", "LOAD_FAST_AND_CLEAR"], [188, 16, 1, "-", "LOAD_FAST_CHECK"], [188, 16, 1, "-", "LOAD_FROM_DICT_OR_DEREF"], [188, 16, 1, "-", "LOAD_FROM_DICT_OR_GLOBALS"], [188, 16, 1, "-", "LOAD_GLOBAL"], [188, 16, 1, "-", "LOAD_LOCALS"], [188, 16, 1, "-", "LOAD_METHOD"], [188, 16, 1, "-", "LOAD_NAME"], [188, 16, 1, "-", "LOAD_SUPER_ATTR"], [188, 16, 1, "-", "MAKE_CELL"], [188, 16, 1, "-", "MAKE_FUNCTION"], [188, 16, 1, "-", "MAP_ADD"], [188, 16, 1, "-", "MATCH_CLASS"], [188, 16, 1, "-", "MATCH_KEYS"], [188, 16, 1, "-", "MATCH_MAPPING"], [188, 16, 1, "-", "MATCH_SEQUENCE"], [188, 16, 1, "-", "NOP"], [350, 17, 1, "-", "NO_EVENTS"], [453, 15, 1, "-", "OPT"], [188, 16, 1, "-", "POP_BLOCK"], [188, 16, 1, "-", "POP_EXCEPT"], [188, 16, 1, "-", "POP_JUMP_IF_FALSE"], [188, 16, 1, "-", "POP_JUMP_IF_NONE"], [188, 16, 1, "-", "POP_JUMP_IF_NOT_NONE"], [188, 16, 1, "-", "POP_JUMP_IF_TRUE"], [188, 16, 1, "-", "POP_TOP"], [453, 15, 1, "-", "PROFILE_TASK"], [453, 15, 1, "-", "PURIFY"], [188, 16, 1, "-", "PUSH_EXC_INFO"], [188, 16, 1, "-", "PUSH_NULL"], [452, 15, 1, "-", "PYTHONASYNCIODEBUG"], [452, 15, 1, "-", "PYTHONBREAKPOINT"], [452, 15, 1, "-", "PYTHONCASEOK"], [452, 15, 1, "-", "PYTHONCOERCECLOCALE"], [452, 15, 1, "-", "PYTHONDEBUG"], [452, 15, 1, "-", "PYTHONDEVMODE"], [452, 15, 1, "-", "PYTHONDONTWRITEBYTECODE"], [452, 15, 1, "-", "PYTHONDUMPREFS"], [452, 15, 1, "envvar-PYTHONDUMPREFSFILE-FILENAME", "PYTHONDUMPREFSFILE=FILENAME"], [452, 15, 1, "-", "PYTHONEXECUTABLE"], [452, 15, 1, "-", "PYTHONFAULTHANDLER"], [452, 15, 1, "-", "PYTHONHASHSEED"], [452, 15, 1, "-", "PYTHONHOME"], [452, 15, 1, "-", "PYTHONINSPECT"], [452, 15, 1, "-", "PYTHONINTMAXSTRDIGITS"], [452, 15, 1, "-", "PYTHONIOENCODING"], [452, 15, 1, "-", "PYTHONLEGACYWINDOWSFSENCODING"], [452, 15, 1, "-", "PYTHONLEGACYWINDOWSSTDIO"], [452, 15, 1, "-", "PYTHONMALLOC"], [452, 15, 1, "-", "PYTHONMALLOCSTATS"], [452, 15, 1, "-", "PYTHONNODEBUGRANGES"], [452, 15, 1, "-", "PYTHONNOUSERSITE"], [452, 15, 1, "-", "PYTHONOPTIMIZE"], [452, 15, 1, "-", "PYTHONPATH"], [452, 15, 1, "-", "PYTHONPERFSUPPORT"], [452, 15, 1, "-", "PYTHONPLATLIBDIR"], [452, 15, 1, "-", "PYTHONPROFILEIMPORTTIME"], [452, 15, 1, "-", "PYTHONPYCACHEPREFIX"], [452, 15, 1, "-", "PYTHONSAFEPATH"], [452, 15, 1, "-", "PYTHONSTARTUP"], [452, 15, 1, "-", "PYTHONTRACEMALLOC"], [422, 15, 1, "-", "PYTHONTZPATH"], [452, 15, 1, "-", "PYTHONUNBUFFERED"], [452, 15, 1, "-", "PYTHONUSERBASE"], [452, 15, 1, "-", "PYTHONUTF8"], [452, 15, 1, "-", "PYTHONVERBOSE"], [452, 15, 1, "-", "PYTHONWARNDEFAULTENCODING"], [452, 15, 1, "-", "PYTHONWARNINGS"], [453, 15, 1, "-", "PY_BUILTIN_MODULE_CFLAGS"], [453, 15, 1, "-", "PY_CFLAGS"], [453, 15, 1, "-", "PY_CFLAGS_NODIST"], [453, 15, 1, "-", "PY_CORE_CFLAGS"], [453, 15, 1, "-", "PY_CORE_LDFLAGS"], [453, 15, 1, "-", "PY_CPPFLAGS"], [453, 15, 1, "-", "PY_LDFLAGS"], [453, 15, 1, "-", "PY_LDFLAGS_NODIST"], [350, 17, 1, "-", "PY_RESUME"], [350, 17, 1, "-", "PY_RETURN"], [350, 17, 1, "-", "PY_START"], [453, 15, 1, "-", "PY_STDMODULE_CFLAGS"], [350, 17, 1, "-", "PY_THROW"], [350, 17, 1, "-", "PY_UNWIND"], [350, 17, 1, "-", "PY_YIELD"], [350, 17, 1, "-", "RAISE"], [188, 16, 1, "-", "RAISE_VARARGS"], [350, 17, 1, "-", "RERAISE"], [188, 16, 1, "-", "RERAISE"], [188, 16, 1, "-", "RESUME"], [188, 16, 1, "-", "RETURN_CONST"], [188, 16, 1, "-", "RETURN_GENERATOR"], [188, 16, 1, "-", "RETURN_VALUE"], [188, 16, 1, "-", "SEND"], [188, 16, 1, "-", "SETUP_ANNOTATIONS"], [188, 16, 1, "-", "SETUP_CLEANUP"], [188, 16, 1, "-", "SETUP_FINALLY"], [188, 16, 1, "-", "SETUP_WITH"], [188, 16, 1, "-", "SET_ADD"], [188, 16, 1, "-", "SET_UPDATE"], [350, 17, 1, "-", "STOP_ITERATION"], [188, 16, 1, "-", "STORE_ATTR"], [188, 16, 1, "-", "STORE_DEREF"], [188, 16, 1, "-", "STORE_FAST"], [188, 16, 1, "-", "STORE_GLOBAL"], [188, 16, 1, "-", "STORE_NAME"], [188, 16, 1, "-", "STORE_SLICE"], [188, 16, 1, "-", "STORE_SUBSCR"], [188, 16, 1, "-", "SWAP"], [188, 16, 1, "-", "UNARY_INVERT"], [188, 16, 1, "-", "UNARY_NEGATIVE"], [188, 16, 1, "-", "UNARY_NOT"], [188, 16, 1, "-", "UNPACK_EX"], [188, 16, 1, "-", "UNPACK_SEQUENCE"], [188, 16, 1, "-", "WITH_EXCEPT_START"], [188, 16, 1, "-", "YIELD_VALUE"], [294, 13, 1, "-", "alias"], [109, 18, 1, "to3fixer-apply", "apply"], [294, 13, 1, "-", "args"], [109, 18, 1, "to3fixer-asserts", "asserts"], [109, 18, 1, "to3fixer-basestring", "basestring"], [294, 13, 1, "-", "break"], [109, 18, 1, "to3fixer-buffer", "buffer"], [294, 13, 1, "-", "clear"], [294, 13, 1, "-", "commands"], [294, 13, 1, "-", "condition"], [294, 13, 1, "-", "continue"], [294, 13, 1, "-", "debug"], [109, 18, 1, "to3fixer-dict", "dict"], [294, 13, 1, "-", "disable"], [294, 13, 1, "-", "display"], [294, 13, 1, "-", "down"], [294, 13, 1, "-", "enable"], [109, 18, 1, "to3fixer-except", "except"], [109, 18, 1, "to3fixer-exec", "exec"], [109, 18, 1, "to3fixer-execfile", "execfile"], [109, 18, 1, "to3fixer-exitfunc", "exitfunc"], [109, 18, 1, "to3fixer-filter", "filter"], [109, 18, 1, "to3fixer-funcattrs", "funcattrs"], [109, 18, 1, "to3fixer-future", "future"], [109, 18, 1, "to3fixer-getcwdu", "getcwdu"], [109, 18, 1, "to3fixer-has_key", "has_key"], [294, 13, 1, "-", "help"], [109, 18, 1, "to3fixer-idioms", "idioms"], [294, 13, 1, "-", "ignore"], [109, 18, 1, "to3fixer-import", "import"], [109, 18, 1, "to3fixer-imports", "imports"], [109, 18, 1, "to3fixer-imports2", "imports2"], [109, 18, 1, "to3fixer-input", "input"], [294, 13, 1, "-", "interact"], [109, 18, 1, "to3fixer-intern", "intern"], [109, 18, 1, "to3fixer-isinstance", "isinstance"], [109, 18, 1, "to3fixer-itertools", "itertools"], [109, 18, 1, "to3fixer-itertools_imports", "itertools_imports"], [294, 13, 1, "-", "jump"], [294, 13, 1, "-", "list"], [294, 13, 1, "-", "ll"], [109, 18, 1, "to3fixer-long", "long"], [109, 18, 1, "to3fixer-map", "map"], [109, 18, 1, "to3fixer-metaclass", "metaclass"], [109, 18, 1, "to3fixer-methodattrs", "methodattrs"], [109, 18, 1, "to3fixer-ne", "ne"], [109, 18, 1, "to3fixer-next", "next"], [294, 13, 1, "-", "next"], [109, 18, 1, "to3fixer-nonzero", "nonzero"], [109, 18, 1, "to3fixer-numliterals", "numliterals"], [109, 18, 1, "to3fixer-operator", "operator"], [294, 13, 1, "-", "p"], [109, 18, 1, "to3fixer-paren", "paren"], [294, 13, 1, "-", "pp"], [109, 18, 1, "to3fixer-print", "print"], [294, 13, 1, "-", "quit"], [109, 18, 1, "to3fixer-raise", "raise"], [109, 18, 1, "to3fixer-raw_input", "raw_input"], [109, 18, 1, "to3fixer-reduce", "reduce"], [109, 18, 1, "to3fixer-reload", "reload"], [109, 18, 1, "to3fixer-renames", "renames"], [109, 18, 1, "to3fixer-repr", "repr"], [294, 13, 1, "-", "restart"], [294, 13, 1, "-", "return"], [294, 13, 1, "-", "retval"], [294, 13, 1, "-", "run"], [109, 18, 1, "to3fixer-set_literal", "set_literal"], [294, 13, 1, "-", "source"], [109, 18, 1, "to3fixer-standarderror", "standarderror"], [294, 13, 1, "-", "step"], [109, 18, 1, "to3fixer-sys_exc", "sys_exc"], [294, 13, 1, "-", "tbreak"], [109, 18, 1, "to3fixer-throw", "throw"], [109, 18, 1, "to3fixer-tuple_params", "tuple_params"], [109, 18, 1, "to3fixer-types", "types"], [294, 13, 1, "-", "unalias"], [294, 13, 1, "-", "undisplay"], [109, 18, 1, "to3fixer-unicode", "unicode"], [294, 13, 1, "-", "until"], [294, 13, 1, "-", "up"], [109, 18, 1, "to3fixer-urllib", "urllib"], [294, 13, 1, "-", "whatis"], [294, 13, 1, "-", "where"], [109, 18, 1, "to3fixer-ws_comma", "ws_comma"], [109, 18, 1, "to3fixer-xrange", "xrange"], [109, 18, 1, "to3fixer-xreadlines", "xreadlines"], [109, 18, 1, "to3fixer-zip", "zip"]], "PyAIter_Check": [[35, 3, 1, "c.PyAIter_Check", "o"]], "PyAnySet_Check": [[54, 3, 1, "c.PyAnySet_Check", "p"]], "PyAnySet_CheckExact": [[54, 3, 1, "c.PyAnySet_CheckExact", "p"]], "PyArg_Parse": [[5, 3, 1, "c.PyArg_Parse", "args"], [5, 3, 1, "c.PyArg_Parse", "format"]], "PyArg_ParseTuple": [[5, 3, 1, "c.PyArg_ParseTuple", "args"], [5, 3, 1, "c.PyArg_ParseTuple", "format"]], "PyArg_ParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "kw"]], "PyArg_UnpackTuple": [[5, 3, 1, "c.PyArg_UnpackTuple", "args"], [5, 3, 1, "c.PyArg_UnpackTuple", "max"], [5, 3, 1, "c.PyArg_UnpackTuple", "min"], [5, 3, 1, "c.PyArg_UnpackTuple", "name"]], "PyArg_VaParse": [[5, 3, 1, "c.PyArg_VaParse", "args"], [5, 3, 1, "c.PyArg_VaParse", "format"], [5, 3, 1, "c.PyArg_VaParse", "vargs"]], "PyArg_VaParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "kw"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "vargs"]], "PyAsyncMethods": [[62, 0, 1, "c.PyAsyncMethods.am_aiter", "am_aiter"], [62, 0, 1, "c.PyAsyncMethods.am_anext", "am_anext"], [62, 0, 1, "c.PyAsyncMethods.am_await", "am_await"], [62, 0, 1, "c.PyAsyncMethods.am_send", "am_send"]], "PyBool_Check": [[6, 3, 1, "c.PyBool_Check", "o"]], "PyBool_FromLong": [[6, 3, 1, "c.PyBool_FromLong", "v"]], "PyBufferProcs": [[62, 0, 1, "c.PyBufferProcs.bf_getbuffer", "bf_getbuffer"], [62, 0, 1, "c.PyBufferProcs.bf_releasebuffer", "bf_releasebuffer"]], "PyBuffer_FillContiguousStrides": [[7, 3, 1, "c.PyBuffer_FillContiguousStrides", "itemsize"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "ndims"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "order"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "shape"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "strides"]], "PyBuffer_FillInfo": [[7, 3, 1, "c.PyBuffer_FillInfo", "buf"], [7, 3, 1, "c.PyBuffer_FillInfo", "exporter"], [7, 3, 1, "c.PyBuffer_FillInfo", "flags"], [7, 3, 1, "c.PyBuffer_FillInfo", "len"], [7, 3, 1, "c.PyBuffer_FillInfo", "readonly"], [7, 3, 1, "c.PyBuffer_FillInfo", "view"]], "PyBuffer_FromContiguous": [[7, 3, 1, "c.PyBuffer_FromContiguous", "buf"], [7, 3, 1, "c.PyBuffer_FromContiguous", "fort"], [7, 3, 1, "c.PyBuffer_FromContiguous", "len"], [7, 3, 1, "c.PyBuffer_FromContiguous", "view"]], "PyBuffer_GetPointer": [[7, 3, 1, "c.PyBuffer_GetPointer", "indices"], [7, 3, 1, "c.PyBuffer_GetPointer", "view"]], "PyBuffer_IsContiguous": [[7, 3, 1, "c.PyBuffer_IsContiguous", "order"], [7, 3, 1, "c.PyBuffer_IsContiguous", "view"]], "PyBuffer_Release": [[7, 3, 1, "c.PyBuffer_Release", "view"]], "PyBuffer_SizeFromFormat": [[7, 3, 1, "c.PyBuffer_SizeFromFormat", "format"]], "PyBuffer_ToContiguous": [[7, 3, 1, "c.PyBuffer_ToContiguous", "buf"], [7, 3, 1, "c.PyBuffer_ToContiguous", "len"], [7, 3, 1, "c.PyBuffer_ToContiguous", "order"], [7, 3, 1, "c.PyBuffer_ToContiguous", "src"]], "PyByteArray_AS_STRING": [[8, 3, 1, "c.PyByteArray_AS_STRING", "bytearray"]], "PyByteArray_AsString": [[8, 3, 1, "c.PyByteArray_AsString", "bytearray"]], "PyByteArray_Check": [[8, 3, 1, "c.PyByteArray_Check", "o"]], "PyByteArray_CheckExact": [[8, 3, 1, "c.PyByteArray_CheckExact", "o"]], "PyByteArray_Concat": [[8, 3, 1, "c.PyByteArray_Concat", "a"], [8, 3, 1, "c.PyByteArray_Concat", "b"]], "PyByteArray_FromObject": [[8, 3, 1, "c.PyByteArray_FromObject", "o"]], "PyByteArray_FromStringAndSize": [[8, 3, 1, "c.PyByteArray_FromStringAndSize", "len"], [8, 3, 1, "c.PyByteArray_FromStringAndSize", "string"]], "PyByteArray_GET_SIZE": [[8, 3, 1, "c.PyByteArray_GET_SIZE", "bytearray"]], "PyByteArray_Resize": [[8, 3, 1, "c.PyByteArray_Resize", "bytearray"], [8, 3, 1, "c.PyByteArray_Resize", "len"]], "PyByteArray_Size": [[8, 3, 1, "c.PyByteArray_Size", "bytearray"]], "PyBytes_AS_STRING": [[9, 3, 1, "c.PyBytes_AS_STRING", "string"]], "PyBytes_AsString": [[9, 3, 1, "c.PyBytes_AsString", "o"]], "PyBytes_AsStringAndSize": [[9, 3, 1, "c.PyBytes_AsStringAndSize", "buffer"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "length"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "obj"]], "PyBytes_Check": [[9, 3, 1, "c.PyBytes_Check", "o"]], "PyBytes_CheckExact": [[9, 3, 1, "c.PyBytes_CheckExact", "o"]], "PyBytes_Concat": [[9, 3, 1, "c.PyBytes_Concat", "bytes"], [9, 3, 1, "c.PyBytes_Concat", "newpart"]], "PyBytes_ConcatAndDel": [[9, 3, 1, "c.PyBytes_ConcatAndDel", "bytes"], [9, 3, 1, "c.PyBytes_ConcatAndDel", "newpart"]], "PyBytes_FromFormat": [[9, 3, 1, "c.PyBytes_FromFormat", "format"]], "PyBytes_FromFormatV": [[9, 3, 1, "c.PyBytes_FromFormatV", "format"], [9, 3, 1, "c.PyBytes_FromFormatV", "vargs"]], "PyBytes_FromObject": [[9, 3, 1, "c.PyBytes_FromObject", "o"]], "PyBytes_FromString": [[9, 3, 1, "c.PyBytes_FromString", "v"]], "PyBytes_FromStringAndSize": [[9, 3, 1, "c.PyBytes_FromStringAndSize", "len"], [9, 3, 1, "c.PyBytes_FromStringAndSize", "v"]], "PyBytes_GET_SIZE": [[9, 3, 1, "c.PyBytes_GET_SIZE", "o"]], "PyBytes_Size": [[9, 3, 1, "c.PyBytes_Size", "o"]], "PyCFunction_New": [[57, 3, 1, "c.PyCFunction_New", "ml"], [57, 3, 1, "c.PyCFunction_New", "self"]], "PyCFunction_NewEx": [[57, 3, 1, "c.PyCFunction_NewEx", "ml"], [57, 3, 1, "c.PyCFunction_NewEx", "module"], [57, 3, 1, "c.PyCFunction_NewEx", "self"]], "PyCMethod_New": [[57, 3, 1, "c.PyCMethod_New", "cls"], [57, 3, 1, "c.PyCMethod_New", "ml"], [57, 3, 1, "c.PyCMethod_New", "module"], [57, 3, 1, "c.PyCMethod_New", "self"]], "PyCallIter_Check": [[36, 3, 1, "c.PyCallIter_Check", "op"]], "PyCallIter_New": [[36, 3, 1, "c.PyCallIter_New", "callable"], [36, 3, 1, "c.PyCallIter_New", "sentinel"]], "PyCallable_Check": [[10, 3, 1, "c.PyCallable_Check", "o"]], "PyCapsule_CheckExact": [[11, 3, 1, "c.PyCapsule_CheckExact", "p"]], "PyCapsule_GetContext": [[11, 3, 1, "c.PyCapsule_GetContext", "capsule"]], "PyCapsule_GetDestructor": [[11, 3, 1, "c.PyCapsule_GetDestructor", "capsule"]], "PyCapsule_GetName": [[11, 3, 1, "c.PyCapsule_GetName", "capsule"]], "PyCapsule_GetPointer": [[11, 3, 1, "c.PyCapsule_GetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_GetPointer", "name"]], "PyCapsule_Import": [[11, 3, 1, "c.PyCapsule_Import", "name"], [11, 3, 1, "c.PyCapsule_Import", "no_block"]], "PyCapsule_IsValid": [[11, 3, 1, "c.PyCapsule_IsValid", "capsule"], [11, 3, 1, "c.PyCapsule_IsValid", "name"]], "PyCapsule_New": [[11, 3, 1, "c.PyCapsule_New", "destructor"], [11, 3, 1, "c.PyCapsule_New", "name"], [11, 3, 1, "c.PyCapsule_New", "pointer"]], "PyCapsule_SetContext": [[11, 3, 1, "c.PyCapsule_SetContext", "capsule"], [11, 3, 1, "c.PyCapsule_SetContext", "context"]], "PyCapsule_SetDestructor": [[11, 3, 1, "c.PyCapsule_SetDestructor", "capsule"], [11, 3, 1, "c.PyCapsule_SetDestructor", "destructor"]], "PyCapsule_SetName": [[11, 3, 1, "c.PyCapsule_SetName", "capsule"], [11, 3, 1, "c.PyCapsule_SetName", "name"]], "PyCapsule_SetPointer": [[11, 3, 1, "c.PyCapsule_SetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_SetPointer", "pointer"]], "PyCell_Check": [[12, 3, 1, "c.PyCell_Check", "ob"]], "PyCell_GET": [[12, 3, 1, "c.PyCell_GET", "cell"]], "PyCell_Get": [[12, 3, 1, "c.PyCell_Get", "cell"]], "PyCell_New": [[12, 3, 1, "c.PyCell_New", "ob"]], "PyCell_SET": [[12, 3, 1, "c.PyCell_SET", "cell"], [12, 3, 1, "c.PyCell_SET", "value"]], "PyCell_Set": [[12, 3, 1, "c.PyCell_Set", "cell"], [12, 3, 1, "c.PyCell_Set", "value"]], "PyCode_AddWatcher": [[13, 3, 1, "c.PyCode_AddWatcher", "callback"]], "PyCode_Addr2Line": [[13, 3, 1, "c.PyCode_Addr2Line", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Line", "co"]], "PyCode_Addr2Location": [[13, 3, 1, "c.PyCode_Addr2Location", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Location", "co"], [13, 3, 1, "c.PyCode_Addr2Location", "end_column"], [13, 3, 1, "c.PyCode_Addr2Location", "end_line"], [13, 3, 1, "c.PyCode_Addr2Location", "start_column"], [13, 3, 1, "c.PyCode_Addr2Location", "start_line"]], "PyCode_Check": [[13, 3, 1, "c.PyCode_Check", "co"]], "PyCode_ClearWatcher": [[13, 3, 1, "c.PyCode_ClearWatcher", "watcher_id"]], "PyCode_GetCellvars": [[13, 3, 1, "c.PyCode_GetCellvars", "co"]], "PyCode_GetCode": [[13, 3, 1, "c.PyCode_GetCode", "co"]], "PyCode_GetFreevars": [[13, 3, 1, "c.PyCode_GetFreevars", "co"]], "PyCode_GetNumFree": [[13, 3, 1, "c.PyCode_GetNumFree", "co"]], "PyCode_GetVarnames": [[13, 3, 1, "c.PyCode_GetVarnames", "co"]], "PyCode_NewEmpty": [[13, 3, 1, "c.PyCode_NewEmpty", "filename"], [13, 3, 1, "c.PyCode_NewEmpty", "firstlineno"], [13, 3, 1, "c.PyCode_NewEmpty", "funcname"]], "PyCodec_BackslashReplaceErrors": [[14, 3, 1, "c.PyCodec_BackslashReplaceErrors", "exc"]], "PyCodec_Decode": [[14, 3, 1, "c.PyCodec_Decode", "encoding"], [14, 3, 1, "c.PyCodec_Decode", "errors"], [14, 3, 1, "c.PyCodec_Decode", "object"]], "PyCodec_Decoder": [[14, 3, 1, "c.PyCodec_Decoder", "encoding"]], "PyCodec_Encode": [[14, 3, 1, "c.PyCodec_Encode", "encoding"], [14, 3, 1, "c.PyCodec_Encode", "errors"], [14, 3, 1, "c.PyCodec_Encode", "object"]], "PyCodec_Encoder": [[14, 3, 1, "c.PyCodec_Encoder", "encoding"]], "PyCodec_IgnoreErrors": [[14, 3, 1, "c.PyCodec_IgnoreErrors", "exc"]], "PyCodec_IncrementalDecoder": [[14, 3, 1, "c.PyCodec_IncrementalDecoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalDecoder", "errors"]], "PyCodec_IncrementalEncoder": [[14, 3, 1, "c.PyCodec_IncrementalEncoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalEncoder", "errors"]], "PyCodec_KnownEncoding": [[14, 3, 1, "c.PyCodec_KnownEncoding", "encoding"]], "PyCodec_LookupError": [[14, 3, 1, "c.PyCodec_LookupError", "name"]], "PyCodec_NameReplaceErrors": [[14, 3, 1, "c.PyCodec_NameReplaceErrors", "exc"]], "PyCodec_Register": [[14, 3, 1, "c.PyCodec_Register", "search_function"]], "PyCodec_RegisterError": [[14, 3, 1, "c.PyCodec_RegisterError", "error"], [14, 3, 1, "c.PyCodec_RegisterError", "name"]], "PyCodec_ReplaceErrors": [[14, 3, 1, "c.PyCodec_ReplaceErrors", "exc"]], "PyCodec_StreamReader": [[14, 3, 1, "c.PyCodec_StreamReader", "encoding"], [14, 3, 1, "c.PyCodec_StreamReader", "errors"], [14, 3, 1, "c.PyCodec_StreamReader", "stream"]], "PyCodec_StreamWriter": [[14, 3, 1, "c.PyCodec_StreamWriter", "encoding"], [14, 3, 1, "c.PyCodec_StreamWriter", "errors"], [14, 3, 1, "c.PyCodec_StreamWriter", "stream"]], "PyCodec_StrictErrors": [[14, 3, 1, "c.PyCodec_StrictErrors", "exc"]], "PyCodec_Unregister": [[14, 3, 1, "c.PyCodec_Unregister", "search_function"]], "PyCodec_XMLCharRefReplaceErrors": [[14, 3, 1, "c.PyCodec_XMLCharRefReplaceErrors", "exc"]], "PyCompilerFlags": [[65, 0, 1, "c.PyCompilerFlags.cf_feature_version", "cf_feature_version"], [65, 0, 1, "c.PyCompilerFlags.cf_flags", "cf_flags"]], "PyComplex_AsCComplex": [[15, 3, 1, "c.PyComplex_AsCComplex", "op"]], "PyComplex_Check": [[15, 3, 1, "c.PyComplex_Check", "p"]], "PyComplex_CheckExact": [[15, 3, 1, "c.PyComplex_CheckExact", "p"]], "PyComplex_FromCComplex": [[15, 3, 1, "c.PyComplex_FromCComplex", "v"]], "PyComplex_FromDoubles": [[15, 3, 1, "c.PyComplex_FromDoubles", "imag"], [15, 3, 1, "c.PyComplex_FromDoubles", "real"]], "PyComplex_ImagAsDouble": [[15, 3, 1, "c.PyComplex_ImagAsDouble", "op"]], "PyComplex_RealAsDouble": [[15, 3, 1, "c.PyComplex_RealAsDouble", "op"]], "PyConfig": [[33, 0, 1, "c.PyConfig.argv", "argv"], [33, 0, 1, "c.PyConfig.base_exec_prefix", "base_exec_prefix"], [33, 0, 1, "c.PyConfig.base_executable", "base_executable"], [33, 0, 1, "c.PyConfig.base_prefix", "base_prefix"], [33, 0, 1, "c.PyConfig.buffered_stdio", "buffered_stdio"], [33, 0, 1, "c.PyConfig.bytes_warning", "bytes_warning"], [33, 0, 1, "c.PyConfig.check_hash_pycs_mode", "check_hash_pycs_mode"], [33, 0, 1, "c.PyConfig.code_debug_ranges", "code_debug_ranges"], [33, 0, 1, "c.PyConfig.configure_c_stdio", "configure_c_stdio"], [33, 0, 1, "c.PyConfig.dev_mode", "dev_mode"], [33, 0, 1, "c.PyConfig.dump_refs", "dump_refs"], [33, 0, 1, "c.PyConfig.exec_prefix", "exec_prefix"], [33, 0, 1, "c.PyConfig.executable", "executable"], [33, 0, 1, "c.PyConfig.faulthandler", "faulthandler"], [33, 0, 1, "c.PyConfig.filesystem_encoding", "filesystem_encoding"], [33, 0, 1, "c.PyConfig.filesystem_errors", "filesystem_errors"], [33, 0, 1, "c.PyConfig.hash_seed", "hash_seed"], [33, 0, 1, "c.PyConfig.home", "home"], [33, 0, 1, "c.PyConfig.import_time", "import_time"], [33, 0, 1, "c.PyConfig.inspect", "inspect"], [33, 0, 1, "c.PyConfig.install_signal_handlers", "install_signal_handlers"], [33, 0, 1, "c.PyConfig.int_max_str_digits", "int_max_str_digits"], [33, 0, 1, "c.PyConfig.interactive", "interactive"], [33, 0, 1, "c.PyConfig.isolated", "isolated"], [33, 0, 1, "c.PyConfig.legacy_windows_stdio", "legacy_windows_stdio"], [33, 0, 1, "c.PyConfig.malloc_stats", "malloc_stats"], [33, 0, 1, "c.PyConfig.module_search_paths", "module_search_paths"], [33, 0, 1, "c.PyConfig.module_search_paths_set", "module_search_paths_set"], [33, 0, 1, "c.PyConfig.optimization_level", "optimization_level"], [33, 0, 1, "c.PyConfig.orig_argv", "orig_argv"], [33, 0, 1, "c.PyConfig.parse_argv", "parse_argv"], [33, 0, 1, "c.PyConfig.parser_debug", "parser_debug"], [33, 0, 1, "c.PyConfig.pathconfig_warnings", "pathconfig_warnings"], [33, 0, 1, "c.PyConfig.perf_profiling", "perf_profiling"], [33, 0, 1, "c.PyConfig.platlibdir", "platlibdir"], [33, 0, 1, "c.PyConfig.prefix", "prefix"], [33, 0, 1, "c.PyConfig.program_name", "program_name"], [33, 0, 1, "c.PyConfig.pycache_prefix", "pycache_prefix"], [33, 0, 1, "c.PyConfig.pythonpath_env", "pythonpath_env"], [33, 0, 1, "c.PyConfig.quiet", "quiet"], [33, 0, 1, "c.PyConfig.run_command", "run_command"], [33, 0, 1, "c.PyConfig.run_filename", "run_filename"], [33, 0, 1, "c.PyConfig.run_module", "run_module"], [33, 0, 1, "c.PyConfig.safe_path", "safe_path"], [33, 0, 1, "c.PyConfig.show_ref_count", "show_ref_count"], [33, 0, 1, "c.PyConfig.site_import", "site_import"], [33, 0, 1, "c.PyConfig.skip_source_first_line", "skip_source_first_line"], [33, 0, 1, "c.PyConfig.stdio_encoding", "stdio_encoding"], [33, 0, 1, "c.PyConfig.stdio_errors", "stdio_errors"], [33, 0, 1, "c.PyConfig.tracemalloc", "tracemalloc"], [33, 0, 1, "c.PyConfig.use_environment", "use_environment"], [33, 0, 1, "c.PyConfig.use_hash_seed", "use_hash_seed"], [33, 0, 1, "c.PyConfig.user_site_directory", "user_site_directory"], [33, 0, 1, "c.PyConfig.verbose", "verbose"], [33, 0, 1, "c.PyConfig.warn_default_encoding", "warn_default_encoding"], [33, 0, 1, "c.PyConfig.warnoptions", "warnoptions"], [33, 0, 1, "c.PyConfig.write_bytecode", "write_bytecode"], [33, 0, 1, "c.PyConfig.xoptions", "xoptions"]], "PyConfig_Clear": [[33, 3, 1, "c.PyConfig_Clear", "config"]], "PyConfig_InitIsolatedConfig": [[33, 3, 1, "c.PyConfig_InitIsolatedConfig", "config"]], "PyConfig_InitPythonConfig": [[33, 3, 1, "c.PyConfig_InitPythonConfig", "config"]], "PyConfig_Read": [[33, 3, 1, "c.PyConfig_Read", "config"]], "PyConfig_SetArgv": [[33, 3, 1, "c.PyConfig_SetArgv", "argc"], [33, 3, 1, "c.PyConfig_SetArgv", "argv"], [33, 3, 1, "c.PyConfig_SetArgv", "config"]], "PyConfig_SetBytesArgv": [[33, 3, 1, "c.PyConfig_SetBytesArgv", "argc"], [33, 3, 1, "c.PyConfig_SetBytesArgv", "argv"], [33, 3, 1, "c.PyConfig_SetBytesArgv", "config"]], "PyConfig_SetBytesString": [[33, 3, 1, "c.PyConfig_SetBytesString", "config"], [33, 3, 1, "c.PyConfig_SetBytesString", "config_str"], [33, 3, 1, "c.PyConfig_SetBytesString", "str"]], "PyConfig_SetString": [[33, 3, 1, "c.PyConfig_SetString", "config"], [33, 3, 1, "c.PyConfig_SetString", "config_str"], [33, 3, 1, "c.PyConfig_SetString", "str"]], "PyConfig_SetWideStringList": [[33, 3, 1, "c.PyConfig_SetWideStringList", "config"], [33, 3, 1, "c.PyConfig_SetWideStringList", "items"], [33, 3, 1, "c.PyConfig_SetWideStringList", "length"], [33, 3, 1, "c.PyConfig_SetWideStringList", "list"]], "PyContextToken_CheckExact": [[17, 3, 1, "c.PyContextToken_CheckExact", "o"]], "PyContextVar_CheckExact": [[17, 3, 1, "c.PyContextVar_CheckExact", "o"]], "PyContextVar_Get": [[17, 3, 1, "c.PyContextVar_Get", "default_value"], [17, 3, 1, "c.PyContextVar_Get", "value"], [17, 3, 1, "c.PyContextVar_Get", "var"]], "PyContextVar_New": [[17, 3, 1, "c.PyContextVar_New", "def"], [17, 3, 1, "c.PyContextVar_New", "name"]], "PyContextVar_Reset": [[17, 3, 1, "c.PyContextVar_Reset", "token"], [17, 3, 1, "c.PyContextVar_Reset", "var"]], "PyContextVar_Set": [[17, 3, 1, "c.PyContextVar_Set", "value"], [17, 3, 1, "c.PyContextVar_Set", "var"]], "PyContext_CheckExact": [[17, 3, 1, "c.PyContext_CheckExact", "o"]], "PyContext_Copy": [[17, 3, 1, "c.PyContext_Copy", "ctx"]], "PyContext_Enter": [[17, 3, 1, "c.PyContext_Enter", "ctx"]], "PyContext_Exit": [[17, 3, 1, "c.PyContext_Exit", "ctx"]], "PyCoro_CheckExact": [[19, 3, 1, "c.PyCoro_CheckExact", "ob"]], "PyCoro_New": [[19, 3, 1, "c.PyCoro_New", "frame"], [19, 3, 1, "c.PyCoro_New", "name"], [19, 3, 1, "c.PyCoro_New", "qualname"]], "PyDateTime_Check": [[20, 3, 1, "c.PyDateTime_Check", "ob"]], "PyDateTime_CheckExact": [[20, 3, 1, "c.PyDateTime_CheckExact", "ob"]], "PyDateTime_DATE_GET_FOLD": [[20, 3, 1, "c.PyDateTime_DATE_GET_FOLD", "o"]], "PyDateTime_DATE_GET_HOUR": [[20, 3, 1, "c.PyDateTime_DATE_GET_HOUR", "o"]], "PyDateTime_DATE_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "o"]], "PyDateTime_DATE_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_DATE_GET_MINUTE", "o"]], "PyDateTime_DATE_GET_SECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_SECOND", "o"]], "PyDateTime_DATE_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_DATE_GET_TZINFO", "o"]], "PyDateTime_DELTA_GET_DAYS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_DAYS", "o"]], "PyDateTime_DELTA_GET_MICROSECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "o"]], "PyDateTime_DELTA_GET_SECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_SECONDS", "o"]], "PyDateTime_FromDateAndTime": [[20, 3, 1, "c.PyDateTime_FromDateAndTime", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "year"]], "PyDateTime_FromDateAndTimeAndFold": [[20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "fold"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "year"]], "PyDateTime_FromTimestamp": [[20, 3, 1, "c.PyDateTime_FromTimestamp", "args"]], "PyDateTime_GET_DAY": [[20, 3, 1, "c.PyDateTime_GET_DAY", "o"]], "PyDateTime_GET_MONTH": [[20, 3, 1, "c.PyDateTime_GET_MONTH", "o"]], "PyDateTime_GET_YEAR": [[20, 3, 1, "c.PyDateTime_GET_YEAR", "o"]], "PyDateTime_TIME_GET_FOLD": [[20, 3, 1, "c.PyDateTime_TIME_GET_FOLD", "o"]], "PyDateTime_TIME_GET_HOUR": [[20, 3, 1, "c.PyDateTime_TIME_GET_HOUR", "o"]], "PyDateTime_TIME_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "o"]], "PyDateTime_TIME_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_TIME_GET_MINUTE", "o"]], "PyDateTime_TIME_GET_SECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_SECOND", "o"]], "PyDateTime_TIME_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_TIME_GET_TZINFO", "o"]], "PyDate_Check": [[20, 3, 1, "c.PyDate_Check", "ob"]], "PyDate_CheckExact": [[20, 3, 1, "c.PyDate_CheckExact", "ob"]], "PyDate_FromDate": [[20, 3, 1, "c.PyDate_FromDate", "day"], [20, 3, 1, "c.PyDate_FromDate", "month"], [20, 3, 1, "c.PyDate_FromDate", "year"]], "PyDate_FromTimestamp": [[20, 3, 1, "c.PyDate_FromTimestamp", "args"]], "PyDelta_Check": [[20, 3, 1, "c.PyDelta_Check", "ob"]], "PyDelta_CheckExact": [[20, 3, 1, "c.PyDelta_CheckExact", "ob"]], "PyDelta_FromDSU": [[20, 3, 1, "c.PyDelta_FromDSU", "days"], [20, 3, 1, "c.PyDelta_FromDSU", "seconds"], [20, 3, 1, "c.PyDelta_FromDSU", "useconds"]], "PyDescr_IsData": [[21, 3, 1, "c.PyDescr_IsData", "descr"]], "PyDescr_NewClassMethod": [[21, 3, 1, "c.PyDescr_NewClassMethod", "method"], [21, 3, 1, "c.PyDescr_NewClassMethod", "type"]], "PyDescr_NewGetSet": [[21, 3, 1, "c.PyDescr_NewGetSet", "getset"], [21, 3, 1, "c.PyDescr_NewGetSet", "type"]], "PyDescr_NewMember": [[21, 3, 1, "c.PyDescr_NewMember", "meth"], [21, 3, 1, "c.PyDescr_NewMember", "type"]], "PyDescr_NewMethod": [[21, 3, 1, "c.PyDescr_NewMethod", "meth"], [21, 3, 1, "c.PyDescr_NewMethod", "type"]], "PyDescr_NewWrapper": [[21, 3, 1, "c.PyDescr_NewWrapper", "type"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapped"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapper"]], "PyDictProxy_New": [[22, 3, 1, "c.PyDictProxy_New", "mapping"]], "PyDict_AddWatcher": [[22, 3, 1, "c.PyDict_AddWatcher", "callback"]], "PyDict_Check": [[22, 3, 1, "c.PyDict_Check", "p"]], "PyDict_CheckExact": [[22, 3, 1, "c.PyDict_CheckExact", "p"]], "PyDict_Clear": [[22, 3, 1, "c.PyDict_Clear", "p"]], "PyDict_ClearWatcher": [[22, 3, 1, "c.PyDict_ClearWatcher", "watcher_id"]], "PyDict_Contains": [[22, 3, 1, "c.PyDict_Contains", "key"], [22, 3, 1, "c.PyDict_Contains", "p"]], "PyDict_Copy": [[22, 3, 1, "c.PyDict_Copy", "p"]], "PyDict_DelItem": [[22, 3, 1, "c.PyDict_DelItem", "key"], [22, 3, 1, "c.PyDict_DelItem", "p"]], "PyDict_DelItemString": [[22, 3, 1, "c.PyDict_DelItemString", "key"], [22, 3, 1, "c.PyDict_DelItemString", "p"]], "PyDict_GetItem": [[22, 3, 1, "c.PyDict_GetItem", "key"], [22, 3, 1, "c.PyDict_GetItem", "p"]], "PyDict_GetItemString": [[22, 3, 1, "c.PyDict_GetItemString", "key"], [22, 3, 1, "c.PyDict_GetItemString", "p"]], "PyDict_GetItemWithError": [[22, 3, 1, "c.PyDict_GetItemWithError", "key"], [22, 3, 1, "c.PyDict_GetItemWithError", "p"]], "PyDict_Items": [[22, 3, 1, "c.PyDict_Items", "p"]], "PyDict_Keys": [[22, 3, 1, "c.PyDict_Keys", "p"]], "PyDict_Merge": [[22, 3, 1, "c.PyDict_Merge", "a"], [22, 3, 1, "c.PyDict_Merge", "b"], [22, 3, 1, "c.PyDict_Merge", "override"]], "PyDict_MergeFromSeq2": [[22, 3, 1, "c.PyDict_MergeFromSeq2", "a"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "override"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "seq2"]], "PyDict_Next": [[22, 3, 1, "c.PyDict_Next", "p"], [22, 3, 1, "c.PyDict_Next", "pkey"], [22, 3, 1, "c.PyDict_Next", "ppos"], [22, 3, 1, "c.PyDict_Next", "pvalue"]], "PyDict_SetDefault": [[22, 3, 1, "c.PyDict_SetDefault", "defaultobj"], [22, 3, 1, "c.PyDict_SetDefault", "key"], [22, 3, 1, "c.PyDict_SetDefault", "p"]], "PyDict_SetItem": [[22, 3, 1, "c.PyDict_SetItem", "key"], [22, 3, 1, "c.PyDict_SetItem", "p"], [22, 3, 1, "c.PyDict_SetItem", "val"]], "PyDict_SetItemString": [[22, 3, 1, "c.PyDict_SetItemString", "key"], [22, 3, 1, "c.PyDict_SetItemString", "p"], [22, 3, 1, "c.PyDict_SetItemString", "val"]], "PyDict_Size": [[22, 3, 1, "c.PyDict_Size", "p"]], "PyDict_Unwatch": [[22, 3, 1, "c.PyDict_Unwatch", "dict"], [22, 3, 1, "c.PyDict_Unwatch", "watcher_id"]], "PyDict_Update": [[22, 3, 1, "c.PyDict_Update", "a"], [22, 3, 1, "c.PyDict_Update", "b"]], "PyDict_Values": [[22, 3, 1, "c.PyDict_Values", "p"]], "PyDict_Watch": [[22, 3, 1, "c.PyDict_Watch", "dict"], [22, 3, 1, "c.PyDict_Watch", "watcher_id"]], "PyErr_DisplayException": [[23, 3, 1, "c.PyErr_DisplayException", "exc"]], "PyErr_ExceptionMatches": [[23, 3, 1, "c.PyErr_ExceptionMatches", "exc"]], "PyErr_Fetch": [[23, 3, 1, "c.PyErr_Fetch", "ptraceback"], [23, 3, 1, "c.PyErr_Fetch", "ptype"], [23, 3, 1, "c.PyErr_Fetch", "pvalue"]], "PyErr_Format": [[23, 3, 1, "c.PyErr_Format", "exception"], [23, 3, 1, "c.PyErr_Format", "format"]], "PyErr_FormatV": [[23, 3, 1, "c.PyErr_FormatV", "exception"], [23, 3, 1, "c.PyErr_FormatV", "format"], [23, 3, 1, "c.PyErr_FormatV", "vargs"]], "PyErr_GetExcInfo": [[23, 3, 1, "c.PyErr_GetExcInfo", "ptraceback"], [23, 3, 1, "c.PyErr_GetExcInfo", "ptype"], [23, 3, 1, "c.PyErr_GetExcInfo", "pvalue"]], "PyErr_GivenExceptionMatches": [[23, 3, 1, "c.PyErr_GivenExceptionMatches", "exc"], [23, 3, 1, "c.PyErr_GivenExceptionMatches", "given"]], "PyErr_NewException": [[23, 3, 1, "c.PyErr_NewException", "base"], [23, 3, 1, "c.PyErr_NewException", "dict"], [23, 3, 1, "c.PyErr_NewException", "name"]], "PyErr_NewExceptionWithDoc": [[23, 3, 1, "c.PyErr_NewExceptionWithDoc", "base"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "dict"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "doc"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "name"]], "PyErr_NormalizeException": [[23, 3, 1, "c.PyErr_NormalizeException", "exc"], [23, 3, 1, "c.PyErr_NormalizeException", "tb"], [23, 3, 1, "c.PyErr_NormalizeException", "val"]], "PyErr_PrintEx": [[23, 3, 1, "c.PyErr_PrintEx", "set_sys_last_vars"]], "PyErr_ResourceWarning": [[23, 3, 1, "c.PyErr_ResourceWarning", "format"], [23, 3, 1, "c.PyErr_ResourceWarning", "source"], [23, 3, 1, "c.PyErr_ResourceWarning", "stack_level"]], "PyErr_Restore": [[23, 3, 1, "c.PyErr_Restore", "traceback"], [23, 3, 1, "c.PyErr_Restore", "type"], [23, 3, 1, "c.PyErr_Restore", "value"]], "PyErr_SetExcFromWindowsErr": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "type"]], "PyErr_SetExcFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObject": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename2"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "type"]], "PyErr_SetExcInfo": [[23, 3, 1, "c.PyErr_SetExcInfo", "traceback"], [23, 3, 1, "c.PyErr_SetExcInfo", "type"], [23, 3, 1, "c.PyErr_SetExcInfo", "value"]], "PyErr_SetFromErrno": [[23, 3, 1, "c.PyErr_SetFromErrno", "type"]], "PyErr_SetFromErrnoWithFilename": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "type"]], "PyErr_SetFromErrnoWithFilenameObject": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "type"]], "PyErr_SetFromErrnoWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject2"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "type"]], "PyErr_SetFromWindowsErr": [[23, 3, 1, "c.PyErr_SetFromWindowsErr", "ierr"]], "PyErr_SetFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "ierr"]], "PyErr_SetHandledException": [[23, 3, 1, "c.PyErr_SetHandledException", "exc"]], "PyErr_SetImportError": [[23, 3, 1, "c.PyErr_SetImportError", "msg"], [23, 3, 1, "c.PyErr_SetImportError", "name"], [23, 3, 1, "c.PyErr_SetImportError", "path"]], "PyErr_SetImportErrorSubclass": [[23, 3, 1, "c.PyErr_SetImportErrorSubclass", "exception"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "msg"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "name"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "path"]], "PyErr_SetInterruptEx": [[23, 3, 1, "c.PyErr_SetInterruptEx", "signum"]], "PyErr_SetNone": [[23, 3, 1, "c.PyErr_SetNone", "type"]], "PyErr_SetObject": [[23, 3, 1, "c.PyErr_SetObject", "type"], [23, 3, 1, "c.PyErr_SetObject", "value"]], "PyErr_SetRaisedException": [[23, 3, 1, "c.PyErr_SetRaisedException", "exc"]], "PyErr_SetString": [[23, 3, 1, "c.PyErr_SetString", "message"], [23, 3, 1, "c.PyErr_SetString", "type"]], "PyErr_SyntaxLocation": [[23, 3, 1, "c.PyErr_SyntaxLocation", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocation", "lineno"]], "PyErr_SyntaxLocationEx": [[23, 3, 1, "c.PyErr_SyntaxLocationEx", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "lineno"]], "PyErr_SyntaxLocationObject": [[23, 3, 1, "c.PyErr_SyntaxLocationObject", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "lineno"]], "PyErr_WarnEx": [[23, 3, 1, "c.PyErr_WarnEx", "category"], [23, 3, 1, "c.PyErr_WarnEx", "message"], [23, 3, 1, "c.PyErr_WarnEx", "stack_level"]], "PyErr_WarnExplicit": [[23, 3, 1, "c.PyErr_WarnExplicit", "category"], [23, 3, 1, "c.PyErr_WarnExplicit", "filename"], [23, 3, 1, "c.PyErr_WarnExplicit", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicit", "message"], [23, 3, 1, "c.PyErr_WarnExplicit", "module"], [23, 3, 1, "c.PyErr_WarnExplicit", "registry"]], "PyErr_WarnExplicitObject": [[23, 3, 1, "c.PyErr_WarnExplicitObject", "category"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "filename"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "message"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "module"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "registry"]], "PyErr_WarnFormat": [[23, 3, 1, "c.PyErr_WarnFormat", "category"], [23, 3, 1, "c.PyErr_WarnFormat", "format"], [23, 3, 1, "c.PyErr_WarnFormat", "stack_level"]], "PyErr_WriteUnraisable": [[23, 3, 1, "c.PyErr_WriteUnraisable", "obj"]], "PyEval_AcquireThread": [[32, 3, 1, "c.PyEval_AcquireThread", "tstate"]], "PyEval_EvalCode": [[65, 3, 1, "c.PyEval_EvalCode", "co"], [65, 3, 1, "c.PyEval_EvalCode", "globals"], [65, 3, 1, "c.PyEval_EvalCode", "locals"]], "PyEval_EvalCodeEx": [[65, 3, 1, "c.PyEval_EvalCodeEx", "argcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "args"], [65, 3, 1, "c.PyEval_EvalCodeEx", "closure"], [65, 3, 1, "c.PyEval_EvalCodeEx", "co"], [65, 3, 1, "c.PyEval_EvalCodeEx", "defcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "defs"], [65, 3, 1, "c.PyEval_EvalCodeEx", "globals"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kwcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kwdefs"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kws"], [65, 3, 1, "c.PyEval_EvalCodeEx", "locals"]], "PyEval_EvalFrame": [[65, 3, 1, "c.PyEval_EvalFrame", "f"]], "PyEval_EvalFrameEx": [[65, 3, 1, "c.PyEval_EvalFrameEx", "f"], [65, 3, 1, "c.PyEval_EvalFrameEx", "throwflag"]], "PyEval_GetFuncDesc": [[52, 3, 1, "c.PyEval_GetFuncDesc", "func"]], "PyEval_GetFuncName": [[52, 3, 1, "c.PyEval_GetFuncName", "func"]], "PyEval_MergeCompilerFlags": [[65, 3, 1, "c.PyEval_MergeCompilerFlags", "cf"]], "PyEval_ReleaseThread": [[32, 3, 1, "c.PyEval_ReleaseThread", "tstate"]], "PyEval_RestoreThread": [[32, 3, 1, "c.PyEval_RestoreThread", "tstate"]], "PyEval_SetProfile": [[32, 3, 1, "c.PyEval_SetProfile", "func"], [32, 3, 1, "c.PyEval_SetProfile", "obj"]], "PyEval_SetProfileAllThreads": [[32, 3, 1, "c.PyEval_SetProfileAllThreads", "func"], [32, 3, 1, "c.PyEval_SetProfileAllThreads", "obj"]], "PyEval_SetTrace": [[32, 3, 1, "c.PyEval_SetTrace", "func"], [32, 3, 1, "c.PyEval_SetTrace", "obj"]], "PyEval_SetTraceAllThreads": [[32, 3, 1, "c.PyEval_SetTraceAllThreads", "func"], [32, 3, 1, "c.PyEval_SetTraceAllThreads", "obj"]], "PyException_GetArgs": [[23, 3, 1, "c.PyException_GetArgs", "ex"]], "PyException_GetCause": [[23, 3, 1, "c.PyException_GetCause", "ex"]], "PyException_GetContext": [[23, 3, 1, "c.PyException_GetContext", "ex"]], "PyException_GetTraceback": [[23, 3, 1, "c.PyException_GetTraceback", "ex"]], "PyException_SetArgs": [[23, 3, 1, "c.PyException_SetArgs", "args"], [23, 3, 1, "c.PyException_SetArgs", "ex"]], "PyException_SetCause": [[23, 3, 1, "c.PyException_SetCause", "cause"], [23, 3, 1, "c.PyException_SetCause", "ex"]], "PyException_SetContext": [[23, 3, 1, "c.PyException_SetContext", "ctx"], [23, 3, 1, "c.PyException_SetContext", "ex"]], "PyException_SetTraceback": [[23, 3, 1, "c.PyException_SetTraceback", "ex"], [23, 3, 1, "c.PyException_SetTraceback", "tb"]], "PyFile_FromFd": [[24, 3, 1, "c.PyFile_FromFd", "buffering"], [24, 3, 1, "c.PyFile_FromFd", "closefd"], [24, 3, 1, "c.PyFile_FromFd", "encoding"], [24, 3, 1, "c.PyFile_FromFd", "errors"], [24, 3, 1, "c.PyFile_FromFd", "fd"], [24, 3, 1, "c.PyFile_FromFd", "mode"], [24, 3, 1, "c.PyFile_FromFd", "name"], [24, 3, 1, "c.PyFile_FromFd", "newline"]], "PyFile_GetLine": [[24, 3, 1, "c.PyFile_GetLine", "n"], [24, 3, 1, "c.PyFile_GetLine", "p"]], "PyFile_SetOpenCodeHook": [[24, 4, 1, "c.PyFile_SetOpenCodeHook.Py_OpenCodeHookFunction", "Py_OpenCodeHookFunction"], [24, 3, 1, "c.PyFile_SetOpenCodeHook", "handler"]], "PyFile_WriteObject": [[24, 3, 1, "c.PyFile_WriteObject", "flags"], [24, 3, 1, "c.PyFile_WriteObject", "obj"], [24, 3, 1, "c.PyFile_WriteObject", "p"]], "PyFile_WriteString": [[24, 3, 1, "c.PyFile_WriteString", "p"], [24, 3, 1, "c.PyFile_WriteString", "s"]], "PyFloat_AS_DOUBLE": [[25, 3, 1, "c.PyFloat_AS_DOUBLE", "pyfloat"]], "PyFloat_AsDouble": [[25, 3, 1, "c.PyFloat_AsDouble", "pyfloat"]], "PyFloat_Check": [[25, 3, 1, "c.PyFloat_Check", "p"]], "PyFloat_CheckExact": [[25, 3, 1, "c.PyFloat_CheckExact", "p"]], "PyFloat_FromDouble": [[25, 3, 1, "c.PyFloat_FromDouble", "v"]], "PyFloat_FromString": [[25, 3, 1, "c.PyFloat_FromString", "str"]], "PyFloat_Pack2": [[25, 3, 1, "c.PyFloat_Pack2", "le"], [25, 3, 1, "c.PyFloat_Pack2", "p"], [25, 3, 1, "c.PyFloat_Pack2", "x"]], "PyFloat_Pack4": [[25, 3, 1, "c.PyFloat_Pack4", "le"], [25, 3, 1, "c.PyFloat_Pack4", "p"], [25, 3, 1, "c.PyFloat_Pack4", "x"]], "PyFloat_Pack8": [[25, 3, 1, "c.PyFloat_Pack8", "le"], [25, 3, 1, "c.PyFloat_Pack8", "p"], [25, 3, 1, "c.PyFloat_Pack8", "x"]], "PyFloat_Unpack2": [[25, 3, 1, "c.PyFloat_Unpack2", "le"], [25, 3, 1, "c.PyFloat_Unpack2", "p"]], "PyFloat_Unpack4": [[25, 3, 1, "c.PyFloat_Unpack4", "le"], [25, 3, 1, "c.PyFloat_Unpack4", "p"]], "PyFloat_Unpack8": [[25, 3, 1, "c.PyFloat_Unpack8", "le"], [25, 3, 1, "c.PyFloat_Unpack8", "p"]], "PyFrame_Check": [[26, 3, 1, "c.PyFrame_Check", "obj"]], "PyFrame_GetBack": [[26, 3, 1, "c.PyFrame_GetBack", "frame"]], "PyFrame_GetBuiltins": [[26, 3, 1, "c.PyFrame_GetBuiltins", "frame"]], "PyFrame_GetCode": [[26, 3, 1, "c.PyFrame_GetCode", "frame"]], "PyFrame_GetGenerator": [[26, 3, 1, "c.PyFrame_GetGenerator", "frame"]], "PyFrame_GetGlobals": [[26, 3, 1, "c.PyFrame_GetGlobals", "frame"]], "PyFrame_GetLasti": [[26, 3, 1, "c.PyFrame_GetLasti", "frame"]], "PyFrame_GetLineNumber": [[26, 3, 1, "c.PyFrame_GetLineNumber", "frame"]], "PyFrame_GetLocals": [[26, 3, 1, "c.PyFrame_GetLocals", "frame"]], "PyFrame_GetVar": [[26, 3, 1, "c.PyFrame_GetVar", "frame"], [26, 3, 1, "c.PyFrame_GetVar", "name"]], "PyFrame_GetVarString": [[26, 3, 1, "c.PyFrame_GetVarString", "frame"], [26, 3, 1, "c.PyFrame_GetVarString", "name"]], "PyFrozenSet_Check": [[54, 3, 1, "c.PyFrozenSet_Check", "p"]], "PyFrozenSet_CheckExact": [[54, 3, 1, "c.PyFrozenSet_CheckExact", "p"]], "PyFrozenSet_New": [[54, 3, 1, "c.PyFrozenSet_New", "iterable"]], "PyFunction_AddWatcher": [[27, 3, 1, "c.PyFunction_AddWatcher", "callback"]], "PyFunction_Check": [[27, 3, 1, "c.PyFunction_Check", "o"]], "PyFunction_ClearWatcher": [[27, 3, 1, "c.PyFunction_ClearWatcher", "watcher_id"]], "PyFunction_GetAnnotations": [[27, 3, 1, "c.PyFunction_GetAnnotations", "op"]], "PyFunction_GetClosure": [[27, 3, 1, "c.PyFunction_GetClosure", "op"]], "PyFunction_GetCode": [[27, 3, 1, "c.PyFunction_GetCode", "op"]], "PyFunction_GetDefaults": [[27, 3, 1, "c.PyFunction_GetDefaults", "op"]], "PyFunction_GetGlobals": [[27, 3, 1, "c.PyFunction_GetGlobals", "op"]], "PyFunction_GetModule": [[27, 3, 1, "c.PyFunction_GetModule", "op"]], "PyFunction_New": [[27, 3, 1, "c.PyFunction_New", "code"], [27, 3, 1, "c.PyFunction_New", "globals"]], "PyFunction_NewWithQualName": [[27, 3, 1, "c.PyFunction_NewWithQualName", "code"], [27, 3, 1, "c.PyFunction_NewWithQualName", "globals"], [27, 3, 1, "c.PyFunction_NewWithQualName", "qualname"]], "PyFunction_SetAnnotations": [[27, 3, 1, "c.PyFunction_SetAnnotations", "annotations"], [27, 3, 1, "c.PyFunction_SetAnnotations", "op"]], "PyFunction_SetClosure": [[27, 3, 1, "c.PyFunction_SetClosure", "closure"], [27, 3, 1, "c.PyFunction_SetClosure", "op"]], "PyFunction_SetDefaults": [[27, 3, 1, "c.PyFunction_SetDefaults", "defaults"], [27, 3, 1, "c.PyFunction_SetDefaults", "op"]], "PyFunction_SetVectorcall": [[27, 3, 1, "c.PyFunction_SetVectorcall", "func"], [27, 3, 1, "c.PyFunction_SetVectorcall", "vectorcall"]], "PyGen_Check": [[29, 3, 1, "c.PyGen_Check", "ob"]], "PyGen_CheckExact": [[29, 3, 1, "c.PyGen_CheckExact", "ob"]], "PyGen_New": [[29, 3, 1, "c.PyGen_New", "frame"]], "PyGen_NewWithQualName": [[29, 3, 1, "c.PyGen_NewWithQualName", "frame"], [29, 3, 1, "c.PyGen_NewWithQualName", "name"], [29, 3, 1, "c.PyGen_NewWithQualName", "qualname"]], "PyGetSetDef": [[57, 0, 1, "c.PyGetSetDef.closure", "closure"], [57, 0, 1, "c.PyGetSetDef.doc", "doc"], [57, 0, 1, "c.PyGetSetDef.get", "get"], [57, 0, 1, "c.PyGetSetDef.name", "name"], [57, 0, 1, "c.PyGetSetDef.set", "set"]], "PyImport_AddModule": [[30, 3, 1, "c.PyImport_AddModule", "name"]], "PyImport_AddModuleObject": [[30, 3, 1, "c.PyImport_AddModuleObject", "name"]], "PyImport_AppendInittab": [[30, 3, 1, "c.PyImport_AppendInittab", "initfunc"], [30, 3, 1, "c.PyImport_AppendInittab", "name"]], "PyImport_ExecCodeModule": [[30, 3, 1, "c.PyImport_ExecCodeModule", "co"], [30, 3, 1, "c.PyImport_ExecCodeModule", "name"]], "PyImport_ExecCodeModuleEx": [[30, 3, 1, "c.PyImport_ExecCodeModuleEx", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleEx", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleEx", "pathname"]], "PyImport_ExecCodeModuleObject": [[30, 3, 1, "c.PyImport_ExecCodeModuleObject", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "cpathname"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "pathname"]], "PyImport_ExecCodeModuleWithPathnames": [[30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "cpathname"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "pathname"]], "PyImport_ExtendInittab": [[30, 3, 1, "c.PyImport_ExtendInittab", "newtab"]], "PyImport_GetImporter": [[30, 3, 1, "c.PyImport_GetImporter", "path"]], "PyImport_GetModule": [[30, 3, 1, "c.PyImport_GetModule", "name"]], "PyImport_Import": [[30, 3, 1, "c.PyImport_Import", "name"]], "PyImport_ImportFrozenModule": [[30, 3, 1, "c.PyImport_ImportFrozenModule", "name"]], "PyImport_ImportFrozenModuleObject": [[30, 3, 1, "c.PyImport_ImportFrozenModuleObject", "name"]], "PyImport_ImportModule": [[30, 3, 1, "c.PyImport_ImportModule", "name"]], "PyImport_ImportModuleEx": [[30, 3, 1, "c.PyImport_ImportModuleEx", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleEx", "globals"], [30, 3, 1, "c.PyImport_ImportModuleEx", "locals"], [30, 3, 1, "c.PyImport_ImportModuleEx", "name"]], "PyImport_ImportModuleLevel": [[30, 3, 1, "c.PyImport_ImportModuleLevel", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "globals"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "level"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "locals"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "name"]], "PyImport_ImportModuleLevelObject": [[30, 3, 1, "c.PyImport_ImportModuleLevelObject", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "globals"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "level"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "locals"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "name"]], "PyImport_ImportModuleNoBlock": [[30, 3, 1, "c.PyImport_ImportModuleNoBlock", "name"]], "PyImport_ReloadModule": [[30, 3, 1, "c.PyImport_ReloadModule", "m"]], "PyIndex_Check": [[46, 3, 1, "c.PyIndex_Check", "o"]], "PyInstanceMethod_Check": [[43, 3, 1, "c.PyInstanceMethod_Check", "o"]], "PyInstanceMethod_Function": [[43, 3, 1, "c.PyInstanceMethod_Function", "im"]], "PyInstanceMethod_GET_FUNCTION": [[43, 3, 1, "c.PyInstanceMethod_GET_FUNCTION", "im"]], "PyInstanceMethod_New": [[43, 3, 1, "c.PyInstanceMethod_New", "func"]], "PyInterpreterConfig": [[32, 0, 1, "c.PyInterpreterConfig.allow_daemon_threads", "allow_daemon_threads"], [32, 0, 1, "c.PyInterpreterConfig.allow_exec", "allow_exec"], [32, 0, 1, "c.PyInterpreterConfig.allow_fork", "allow_fork"], [32, 0, 1, "c.PyInterpreterConfig.allow_threads", "allow_threads"], [32, 0, 1, "c.PyInterpreterConfig.check_multi_interp_extensions", "check_multi_interp_extensions"], [32, 0, 1, "c.PyInterpreterConfig.gil", "gil"], [32, 0, 1, "c.PyInterpreterConfig.use_main_obmalloc", "use_main_obmalloc"]], "PyInterpreterState_Clear": [[32, 3, 1, "c.PyInterpreterState_Clear", "interp"]], "PyInterpreterState_Delete": [[32, 3, 1, "c.PyInterpreterState_Delete", "interp"]], "PyInterpreterState_GetDict": [[32, 3, 1, "c.PyInterpreterState_GetDict", "interp"]], "PyInterpreterState_GetID": [[32, 3, 1, "c.PyInterpreterState_GetID", "interp"]], "PyInterpreterState_Next": [[32, 3, 1, "c.PyInterpreterState_Next", "interp"]], "PyInterpreterState_ThreadHead": [[32, 3, 1, "c.PyInterpreterState_ThreadHead", "interp"]], "PyIter_Check": [[35, 3, 1, "c.PyIter_Check", "o"]], "PyIter_Next": [[35, 3, 1, "c.PyIter_Next", "o"]], "PyIter_Send": [[35, 3, 1, "c.PyIter_Send", "arg"], [35, 3, 1, "c.PyIter_Send", "iter"], [35, 3, 1, "c.PyIter_Send", "presult"]], "PyList_Append": [[37, 3, 1, "c.PyList_Append", "item"], [37, 3, 1, "c.PyList_Append", "list"]], "PyList_AsTuple": [[37, 3, 1, "c.PyList_AsTuple", "list"]], "PyList_Check": [[37, 3, 1, "c.PyList_Check", "p"]], "PyList_CheckExact": [[37, 3, 1, "c.PyList_CheckExact", "p"]], "PyList_GET_ITEM": [[37, 3, 1, "c.PyList_GET_ITEM", "i"], [37, 3, 1, "c.PyList_GET_ITEM", "list"]], "PyList_GET_SIZE": [[37, 3, 1, "c.PyList_GET_SIZE", "list"]], "PyList_GetItem": [[37, 3, 1, "c.PyList_GetItem", "index"], [37, 3, 1, "c.PyList_GetItem", "list"]], "PyList_GetSlice": [[37, 3, 1, "c.PyList_GetSlice", "high"], [37, 3, 1, "c.PyList_GetSlice", "list"], [37, 3, 1, "c.PyList_GetSlice", "low"]], "PyList_Insert": [[37, 3, 1, "c.PyList_Insert", "index"], [37, 3, 1, "c.PyList_Insert", "item"], [37, 3, 1, "c.PyList_Insert", "list"]], "PyList_New": [[37, 3, 1, "c.PyList_New", "len"]], "PyList_Reverse": [[37, 3, 1, "c.PyList_Reverse", "list"]], "PyList_SET_ITEM": [[37, 3, 1, "c.PyList_SET_ITEM", "i"], [37, 3, 1, "c.PyList_SET_ITEM", "list"], [37, 3, 1, "c.PyList_SET_ITEM", "o"]], "PyList_SetItem": [[37, 3, 1, "c.PyList_SetItem", "index"], [37, 3, 1, "c.PyList_SetItem", "item"], [37, 3, 1, "c.PyList_SetItem", "list"]], "PyList_SetSlice": [[37, 3, 1, "c.PyList_SetSlice", "high"], [37, 3, 1, "c.PyList_SetSlice", "itemlist"], [37, 3, 1, "c.PyList_SetSlice", "list"], [37, 3, 1, "c.PyList_SetSlice", "low"]], "PyList_Size": [[37, 3, 1, "c.PyList_Size", "list"]], "PyList_Sort": [[37, 3, 1, "c.PyList_Sort", "list"]], "PyLong_AsDouble": [[38, 3, 1, "c.PyLong_AsDouble", "pylong"]], "PyLong_AsLong": [[38, 3, 1, "c.PyLong_AsLong", "obj"]], "PyLong_AsLongAndOverflow": [[38, 3, 1, "c.PyLong_AsLongAndOverflow", "obj"], [38, 3, 1, "c.PyLong_AsLongAndOverflow", "overflow"]], "PyLong_AsLongLong": [[38, 3, 1, "c.PyLong_AsLongLong", "obj"]], "PyLong_AsLongLongAndOverflow": [[38, 3, 1, "c.PyLong_AsLongLongAndOverflow", "obj"], [38, 3, 1, "c.PyLong_AsLongLongAndOverflow", "overflow"]], "PyLong_AsSize_t": [[38, 3, 1, "c.PyLong_AsSize_t", "pylong"]], "PyLong_AsSsize_t": [[38, 3, 1, "c.PyLong_AsSsize_t", "pylong"]], "PyLong_AsUnsignedLong": [[38, 3, 1, "c.PyLong_AsUnsignedLong", "pylong"]], "PyLong_AsUnsignedLongLong": [[38, 3, 1, "c.PyLong_AsUnsignedLongLong", "pylong"]], "PyLong_AsUnsignedLongLongMask": [[38, 3, 1, "c.PyLong_AsUnsignedLongLongMask", "obj"]], "PyLong_AsUnsignedLongMask": [[38, 3, 1, "c.PyLong_AsUnsignedLongMask", "obj"]], "PyLong_AsVoidPtr": [[38, 3, 1, "c.PyLong_AsVoidPtr", "pylong"]], "PyLong_Check": [[38, 3, 1, "c.PyLong_Check", "p"]], "PyLong_CheckExact": [[38, 3, 1, "c.PyLong_CheckExact", "p"]], "PyLong_FromDouble": [[38, 3, 1, "c.PyLong_FromDouble", "v"]], "PyLong_FromLong": [[38, 3, 1, "c.PyLong_FromLong", "v"]], "PyLong_FromLongLong": [[38, 3, 1, "c.PyLong_FromLongLong", "v"]], "PyLong_FromSize_t": [[38, 3, 1, "c.PyLong_FromSize_t", "v"]], "PyLong_FromSsize_t": [[38, 3, 1, "c.PyLong_FromSsize_t", "v"]], "PyLong_FromString": [[38, 3, 1, "c.PyLong_FromString", "base"], [38, 3, 1, "c.PyLong_FromString", "pend"], [38, 3, 1, "c.PyLong_FromString", "str"]], "PyLong_FromUnicodeObject": [[38, 3, 1, "c.PyLong_FromUnicodeObject", "base"], [38, 3, 1, "c.PyLong_FromUnicodeObject", "u"]], "PyLong_FromUnsignedLong": [[38, 3, 1, "c.PyLong_FromUnsignedLong", "v"]], "PyLong_FromUnsignedLongLong": [[38, 3, 1, "c.PyLong_FromUnsignedLongLong", "v"]], "PyLong_FromVoidPtr": [[38, 3, 1, "c.PyLong_FromVoidPtr", "p"]], "PyMappingMethods": [[62, 0, 1, "c.PyMappingMethods.mp_ass_subscript", "mp_ass_subscript"], [62, 0, 1, "c.PyMappingMethods.mp_length", "mp_length"], [62, 0, 1, "c.PyMappingMethods.mp_subscript", "mp_subscript"]], "PyMapping_Check": [[39, 3, 1, "c.PyMapping_Check", "o"]], "PyMapping_DelItem": [[39, 3, 1, "c.PyMapping_DelItem", "key"], [39, 3, 1, "c.PyMapping_DelItem", "o"]], "PyMapping_DelItemString": [[39, 3, 1, "c.PyMapping_DelItemString", "key"], [39, 3, 1, "c.PyMapping_DelItemString", "o"]], "PyMapping_GetItemString": [[39, 3, 1, "c.PyMapping_GetItemString", "key"], [39, 3, 1, "c.PyMapping_GetItemString", "o"]], "PyMapping_HasKey": [[39, 3, 1, "c.PyMapping_HasKey", "key"], [39, 3, 1, "c.PyMapping_HasKey", "o"]], "PyMapping_HasKeyString": [[39, 3, 1, "c.PyMapping_HasKeyString", "key"], [39, 3, 1, "c.PyMapping_HasKeyString", "o"]], "PyMapping_Items": [[39, 3, 1, "c.PyMapping_Items", "o"]], "PyMapping_Keys": [[39, 3, 1, "c.PyMapping_Keys", "o"]], "PyMapping_Length": [[39, 3, 1, "c.PyMapping_Length", "o"]], "PyMapping_SetItemString": [[39, 3, 1, "c.PyMapping_SetItemString", "key"], [39, 3, 1, "c.PyMapping_SetItemString", "o"], [39, 3, 1, "c.PyMapping_SetItemString", "v"]], "PyMapping_Size": [[39, 3, 1, "c.PyMapping_Size", "o"]], "PyMapping_Values": [[39, 3, 1, "c.PyMapping_Values", "o"]], "PyMarshal_ReadLastObjectFromFile": [[40, 3, 1, "c.PyMarshal_ReadLastObjectFromFile", "file"]], "PyMarshal_ReadLongFromFile": [[40, 3, 1, "c.PyMarshal_ReadLongFromFile", "file"]], "PyMarshal_ReadObjectFromFile": [[40, 3, 1, "c.PyMarshal_ReadObjectFromFile", "file"]], "PyMarshal_ReadObjectFromString": [[40, 3, 1, "c.PyMarshal_ReadObjectFromString", "data"], [40, 3, 1, "c.PyMarshal_ReadObjectFromString", "len"]], "PyMarshal_ReadShortFromFile": [[40, 3, 1, "c.PyMarshal_ReadShortFromFile", "file"]], "PyMarshal_WriteLongToFile": [[40, 3, 1, "c.PyMarshal_WriteLongToFile", "file"], [40, 3, 1, "c.PyMarshal_WriteLongToFile", "value"], [40, 3, 1, "c.PyMarshal_WriteLongToFile", "version"]], "PyMarshal_WriteObjectToFile": [[40, 3, 1, "c.PyMarshal_WriteObjectToFile", "file"], [40, 3, 1, "c.PyMarshal_WriteObjectToFile", "value"], [40, 3, 1, "c.PyMarshal_WriteObjectToFile", "version"]], "PyMarshal_WriteObjectToString": [[40, 3, 1, "c.PyMarshal_WriteObjectToString", "value"], [40, 3, 1, "c.PyMarshal_WriteObjectToString", "version"]], "PyMem_Calloc": [[41, 3, 1, "c.PyMem_Calloc", "elsize"], [41, 3, 1, "c.PyMem_Calloc", "nelem"]], "PyMem_Del": [[41, 3, 1, "c.PyMem_Del", "p"]], "PyMem_Free": [[41, 3, 1, "c.PyMem_Free", "p"]], "PyMem_GetAllocator": [[41, 3, 1, "c.PyMem_GetAllocator", "allocator"], [41, 3, 1, "c.PyMem_GetAllocator", "domain"]], "PyMem_Malloc": [[41, 3, 1, "c.PyMem_Malloc", "n"]], "PyMem_RawCalloc": [[41, 3, 1, "c.PyMem_RawCalloc", "elsize"], [41, 3, 1, "c.PyMem_RawCalloc", "nelem"]], "PyMem_RawFree": [[41, 3, 1, "c.PyMem_RawFree", "p"]], "PyMem_RawMalloc": [[41, 3, 1, "c.PyMem_RawMalloc", "n"]], "PyMem_RawRealloc": [[41, 3, 1, "c.PyMem_RawRealloc", "n"], [41, 3, 1, "c.PyMem_RawRealloc", "p"]], "PyMem_Realloc": [[41, 3, 1, "c.PyMem_Realloc", "n"], [41, 3, 1, "c.PyMem_Realloc", "p"]], "PyMem_SetAllocator": [[41, 3, 1, "c.PyMem_SetAllocator", "allocator"], [41, 3, 1, "c.PyMem_SetAllocator", "domain"]], "PyMemberDef": [[57, 0, 1, "c.PyMemberDef.doc", "doc"], [57, 0, 1, "c.PyMemberDef.flags", "flags"], [57, 0, 1, "c.PyMemberDef.name", "name"], [57, 0, 1, "c.PyMemberDef.offset", "offset"], [57, 0, 1, "c.PyMemberDef.type", "type"]], "PyMember_GetOne": [[57, 3, 1, "c.PyMember_GetOne", "m"], [57, 3, 1, "c.PyMember_GetOne", "obj_addr"]], "PyMember_SetOne": [[57, 3, 1, "c.PyMember_SetOne", "m"], [57, 3, 1, "c.PyMember_SetOne", "o"], [57, 3, 1, "c.PyMember_SetOne", "obj_addr"]], "PyMemoryView_Check": [[42, 3, 1, "c.PyMemoryView_Check", "obj"]], "PyMemoryView_FromBuffer": [[42, 3, 1, "c.PyMemoryView_FromBuffer", "view"]], "PyMemoryView_FromMemory": [[42, 3, 1, "c.PyMemoryView_FromMemory", "flags"], [42, 3, 1, "c.PyMemoryView_FromMemory", "mem"], [42, 3, 1, "c.PyMemoryView_FromMemory", "size"]], "PyMemoryView_FromObject": [[42, 3, 1, "c.PyMemoryView_FromObject", "obj"]], "PyMemoryView_GET_BASE": [[42, 3, 1, "c.PyMemoryView_GET_BASE", "mview"]], "PyMemoryView_GET_BUFFER": [[42, 3, 1, "c.PyMemoryView_GET_BUFFER", "mview"]], "PyMemoryView_GetContiguous": [[42, 3, 1, "c.PyMemoryView_GetContiguous", "buffertype"], [42, 3, 1, "c.PyMemoryView_GetContiguous", "obj"], [42, 3, 1, "c.PyMemoryView_GetContiguous", "order"]], "PyMethodDef": [[57, 0, 1, "c.PyMethodDef.ml_doc", "ml_doc"], [57, 0, 1, "c.PyMethodDef.ml_flags", "ml_flags"], [57, 0, 1, "c.PyMethodDef.ml_meth", "ml_meth"], [57, 0, 1, "c.PyMethodDef.ml_name", "ml_name"]], "PyMethod_Check": [[43, 3, 1, "c.PyMethod_Check", "o"]], "PyMethod_Function": [[43, 3, 1, "c.PyMethod_Function", "meth"]], "PyMethod_GET_FUNCTION": [[43, 3, 1, "c.PyMethod_GET_FUNCTION", "meth"]], "PyMethod_GET_SELF": [[43, 3, 1, "c.PyMethod_GET_SELF", "meth"]], "PyMethod_New": [[43, 3, 1, "c.PyMethod_New", "func"], [43, 3, 1, "c.PyMethod_New", "self"]], "PyMethod_Self": [[43, 3, 1, "c.PyMethod_Self", "meth"]], "PyModuleDef": [[44, 0, 1, "c.PyModuleDef.m_base", "m_base"], [44, 0, 1, "c.PyModuleDef.m_clear", "m_clear"], [44, 0, 1, "c.PyModuleDef.m_doc", "m_doc"], [44, 0, 1, "c.PyModuleDef.m_free", "m_free"], [44, 0, 1, "c.PyModuleDef.m_methods", "m_methods"], [44, 0, 1, "c.PyModuleDef.m_name", "m_name"], [44, 0, 1, "c.PyModuleDef.m_size", "m_size"], [44, 0, 1, "c.PyModuleDef.m_slots", "m_slots"], [44, 0, 1, "c.PyModuleDef.m_traverse", "m_traverse"]], "PyModuleDef.m_slots": [[44, 0, 1, "c.PyModuleDef.m_slots.m_reload", "m_reload"]], "PyModuleDef_Init": [[44, 3, 1, "c.PyModuleDef_Init", "def"]], "PyModuleDef_Slot": [[44, 0, 1, "c.PyModuleDef_Slot.slot", "slot"], [44, 0, 1, "c.PyModuleDef_Slot.value", "value"]], "PyModule_AddFunctions": [[44, 3, 1, "c.PyModule_AddFunctions", "functions"], [44, 3, 1, "c.PyModule_AddFunctions", "module"]], "PyModule_AddIntConstant": [[44, 3, 1, "c.PyModule_AddIntConstant", "module"], [44, 3, 1, "c.PyModule_AddIntConstant", "name"], [44, 3, 1, "c.PyModule_AddIntConstant", "value"]], "PyModule_AddObject": [[44, 3, 1, "c.PyModule_AddObject", "module"], [44, 3, 1, "c.PyModule_AddObject", "name"], [44, 3, 1, "c.PyModule_AddObject", "value"]], "PyModule_AddObjectRef": [[44, 3, 1, "c.PyModule_AddObjectRef", "module"], [44, 3, 1, "c.PyModule_AddObjectRef", "name"], [44, 3, 1, "c.PyModule_AddObjectRef", "value"]], "PyModule_AddStringConstant": [[44, 3, 1, "c.PyModule_AddStringConstant", "module"], [44, 3, 1, "c.PyModule_AddStringConstant", "name"], [44, 3, 1, "c.PyModule_AddStringConstant", "value"]], "PyModule_AddType": [[44, 3, 1, "c.PyModule_AddType", "module"], [44, 3, 1, "c.PyModule_AddType", "type"]], "PyModule_Check": [[44, 3, 1, "c.PyModule_Check", "p"]], "PyModule_CheckExact": [[44, 3, 1, "c.PyModule_CheckExact", "p"]], "PyModule_Create": [[44, 3, 1, "c.PyModule_Create", "def"]], "PyModule_Create2": [[44, 3, 1, "c.PyModule_Create2", "def"], [44, 3, 1, "c.PyModule_Create2", "module_api_version"]], "PyModule_ExecDef": [[44, 3, 1, "c.PyModule_ExecDef", "def"], [44, 3, 1, "c.PyModule_ExecDef", "module"]], "PyModule_FromDefAndSpec": [[44, 3, 1, "c.PyModule_FromDefAndSpec", "def"], [44, 3, 1, "c.PyModule_FromDefAndSpec", "spec"]], "PyModule_FromDefAndSpec2": [[44, 3, 1, "c.PyModule_FromDefAndSpec2", "def"], [44, 3, 1, "c.PyModule_FromDefAndSpec2", "module_api_version"], [44, 3, 1, "c.PyModule_FromDefAndSpec2", "spec"]], "PyModule_GetDef": [[44, 3, 1, "c.PyModule_GetDef", "module"]], "PyModule_GetDict": [[44, 3, 1, "c.PyModule_GetDict", "module"]], "PyModule_GetFilename": [[44, 3, 1, "c.PyModule_GetFilename", "module"]], "PyModule_GetFilenameObject": [[44, 3, 1, "c.PyModule_GetFilenameObject", "module"]], "PyModule_GetName": [[44, 3, 1, "c.PyModule_GetName", "module"]], "PyModule_GetNameObject": [[44, 3, 1, "c.PyModule_GetNameObject", "module"]], "PyModule_GetState": [[44, 3, 1, "c.PyModule_GetState", "module"]], "PyModule_New": [[44, 3, 1, "c.PyModule_New", "name"]], "PyModule_NewObject": [[44, 3, 1, "c.PyModule_NewObject", "name"]], "PyModule_SetDocString": [[44, 3, 1, "c.PyModule_SetDocString", "docstring"], [44, 3, 1, "c.PyModule_SetDocString", "module"]], "PyNumberMethods": [[62, 0, 1, "c.PyNumberMethods.nb_absolute", "nb_absolute"], [62, 0, 1, "c.PyNumberMethods.nb_add", "nb_add"], [62, 0, 1, "c.PyNumberMethods.nb_and", "nb_and"], [62, 0, 1, "c.PyNumberMethods.nb_bool", "nb_bool"], [62, 0, 1, "c.PyNumberMethods.nb_divmod", "nb_divmod"], [62, 0, 1, "c.PyNumberMethods.nb_float", "nb_float"], [62, 0, 1, "c.PyNumberMethods.nb_floor_divide", "nb_floor_divide"], [62, 0, 1, "c.PyNumberMethods.nb_index", "nb_index"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_add", "nb_inplace_add"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_and", "nb_inplace_and"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_floor_divide", "nb_inplace_floor_divide"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_lshift", "nb_inplace_lshift"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_matrix_multiply", "nb_inplace_matrix_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_multiply", "nb_inplace_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_or", "nb_inplace_or"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_power", "nb_inplace_power"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_remainder", "nb_inplace_remainder"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_rshift", "nb_inplace_rshift"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_subtract", "nb_inplace_subtract"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_true_divide", "nb_inplace_true_divide"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_xor", "nb_inplace_xor"], [62, 0, 1, "c.PyNumberMethods.nb_int", "nb_int"], [62, 0, 1, "c.PyNumberMethods.nb_invert", "nb_invert"], [62, 0, 1, "c.PyNumberMethods.nb_lshift", "nb_lshift"], [62, 0, 1, "c.PyNumberMethods.nb_matrix_multiply", "nb_matrix_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_multiply", "nb_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_negative", "nb_negative"], [62, 0, 1, "c.PyNumberMethods.nb_or", "nb_or"], [62, 0, 1, "c.PyNumberMethods.nb_positive", "nb_positive"], [62, 0, 1, "c.PyNumberMethods.nb_power", "nb_power"], [62, 0, 1, "c.PyNumberMethods.nb_remainder", "nb_remainder"], [62, 0, 1, "c.PyNumberMethods.nb_reserved", "nb_reserved"], [62, 0, 1, "c.PyNumberMethods.nb_rshift", "nb_rshift"], [62, 0, 1, "c.PyNumberMethods.nb_subtract", "nb_subtract"], [62, 0, 1, "c.PyNumberMethods.nb_true_divide", "nb_true_divide"], [62, 0, 1, "c.PyNumberMethods.nb_xor", "nb_xor"]], "PyNumber_Absolute": [[46, 3, 1, "c.PyNumber_Absolute", "o"]], "PyNumber_Add": [[46, 3, 1, "c.PyNumber_Add", "o1"], [46, 3, 1, "c.PyNumber_Add", "o2"]], "PyNumber_And": [[46, 3, 1, "c.PyNumber_And", "o1"], [46, 3, 1, "c.PyNumber_And", "o2"]], "PyNumber_AsSsize_t": [[46, 3, 1, "c.PyNumber_AsSsize_t", "exc"], [46, 3, 1, "c.PyNumber_AsSsize_t", "o"]], "PyNumber_Check": [[46, 3, 1, "c.PyNumber_Check", "o"]], "PyNumber_Divmod": [[46, 3, 1, "c.PyNumber_Divmod", "o1"], [46, 3, 1, "c.PyNumber_Divmod", "o2"]], "PyNumber_Float": [[46, 3, 1, "c.PyNumber_Float", "o"]], "PyNumber_FloorDivide": [[46, 3, 1, "c.PyNumber_FloorDivide", "o1"], [46, 3, 1, "c.PyNumber_FloorDivide", "o2"]], "PyNumber_InPlaceAdd": [[46, 3, 1, "c.PyNumber_InPlaceAdd", "o1"], [46, 3, 1, "c.PyNumber_InPlaceAdd", "o2"]], "PyNumber_InPlaceAnd": [[46, 3, 1, "c.PyNumber_InPlaceAnd", "o1"], [46, 3, 1, "c.PyNumber_InPlaceAnd", "o2"]], "PyNumber_InPlaceFloorDivide": [[46, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o1"], [46, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o2"]], "PyNumber_InPlaceLshift": [[46, 3, 1, "c.PyNumber_InPlaceLshift", "o1"], [46, 3, 1, "c.PyNumber_InPlaceLshift", "o2"]], "PyNumber_InPlaceMatrixMultiply": [[46, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o1"], [46, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o2"]], "PyNumber_InPlaceMultiply": [[46, 3, 1, "c.PyNumber_InPlaceMultiply", "o1"], [46, 3, 1, "c.PyNumber_InPlaceMultiply", "o2"]], "PyNumber_InPlaceOr": [[46, 3, 1, "c.PyNumber_InPlaceOr", "o1"], [46, 3, 1, "c.PyNumber_InPlaceOr", "o2"]], "PyNumber_InPlacePower": [[46, 3, 1, "c.PyNumber_InPlacePower", "o1"], [46, 3, 1, "c.PyNumber_InPlacePower", "o2"], [46, 3, 1, "c.PyNumber_InPlacePower", "o3"]], "PyNumber_InPlaceRemainder": [[46, 3, 1, "c.PyNumber_InPlaceRemainder", "o1"], [46, 3, 1, "c.PyNumber_InPlaceRemainder", "o2"]], "PyNumber_InPlaceRshift": [[46, 3, 1, "c.PyNumber_InPlaceRshift", "o1"], [46, 3, 1, "c.PyNumber_InPlaceRshift", "o2"]], "PyNumber_InPlaceSubtract": [[46, 3, 1, "c.PyNumber_InPlaceSubtract", "o1"], [46, 3, 1, "c.PyNumber_InPlaceSubtract", "o2"]], "PyNumber_InPlaceTrueDivide": [[46, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o1"], [46, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o2"]], "PyNumber_InPlaceXor": [[46, 3, 1, "c.PyNumber_InPlaceXor", "o1"], [46, 3, 1, "c.PyNumber_InPlaceXor", "o2"]], "PyNumber_Index": [[46, 3, 1, "c.PyNumber_Index", "o"]], "PyNumber_Invert": [[46, 3, 1, "c.PyNumber_Invert", "o"]], "PyNumber_Long": [[46, 3, 1, "c.PyNumber_Long", "o"]], "PyNumber_Lshift": [[46, 3, 1, "c.PyNumber_Lshift", "o1"], [46, 3, 1, "c.PyNumber_Lshift", "o2"]], "PyNumber_MatrixMultiply": [[46, 3, 1, "c.PyNumber_MatrixMultiply", "o1"], [46, 3, 1, "c.PyNumber_MatrixMultiply", "o2"]], "PyNumber_Multiply": [[46, 3, 1, "c.PyNumber_Multiply", "o1"], [46, 3, 1, "c.PyNumber_Multiply", "o2"]], "PyNumber_Negative": [[46, 3, 1, "c.PyNumber_Negative", "o"]], "PyNumber_Or": [[46, 3, 1, "c.PyNumber_Or", "o1"], [46, 3, 1, "c.PyNumber_Or", "o2"]], "PyNumber_Positive": [[46, 3, 1, "c.PyNumber_Positive", "o"]], "PyNumber_Power": [[46, 3, 1, "c.PyNumber_Power", "o1"], [46, 3, 1, "c.PyNumber_Power", "o2"], [46, 3, 1, "c.PyNumber_Power", "o3"]], "PyNumber_Remainder": [[46, 3, 1, "c.PyNumber_Remainder", "o1"], [46, 3, 1, "c.PyNumber_Remainder", "o2"]], "PyNumber_Rshift": [[46, 3, 1, "c.PyNumber_Rshift", "o1"], [46, 3, 1, "c.PyNumber_Rshift", "o2"]], "PyNumber_Subtract": [[46, 3, 1, "c.PyNumber_Subtract", "o1"], [46, 3, 1, "c.PyNumber_Subtract", "o2"]], "PyNumber_ToBase": [[46, 3, 1, "c.PyNumber_ToBase", "base"], [46, 3, 1, "c.PyNumber_ToBase", "n"]], "PyNumber_TrueDivide": [[46, 3, 1, "c.PyNumber_TrueDivide", "o1"], [46, 3, 1, "c.PyNumber_TrueDivide", "o2"]], "PyNumber_Xor": [[46, 3, 1, "c.PyNumber_Xor", "o1"], [46, 3, 1, "c.PyNumber_Xor", "o2"]], "PyOS_FSPath": [[58, 3, 1, "c.PyOS_FSPath", "path"]], "PyOS_double_to_string": [[18, 3, 1, "c.PyOS_double_to_string", "flags"], [18, 3, 1, "c.PyOS_double_to_string", "format_code"], [18, 3, 1, "c.PyOS_double_to_string", "precision"], [18, 3, 1, "c.PyOS_double_to_string", "ptype"], [18, 3, 1, "c.PyOS_double_to_string", "val"]], "PyOS_getsig": [[58, 3, 1, "c.PyOS_getsig", "i"]], "PyOS_setsig": [[58, 3, 1, "c.PyOS_setsig", "h"], [58, 3, 1, "c.PyOS_setsig", "i"]], "PyOS_snprintf": [[18, 3, 1, "c.PyOS_snprintf", "format"], [18, 3, 1, "c.PyOS_snprintf", "size"], [18, 3, 1, "c.PyOS_snprintf", "str"]], "PyOS_stricmp": [[18, 3, 1, "c.PyOS_stricmp", "s1"], [18, 3, 1, "c.PyOS_stricmp", "s2"]], "PyOS_string_to_double": [[18, 3, 1, "c.PyOS_string_to_double", "endptr"], [18, 3, 1, "c.PyOS_string_to_double", "overflow_exception"], [18, 3, 1, "c.PyOS_string_to_double", "s"]], "PyOS_strnicmp": [[18, 3, 1, "c.PyOS_strnicmp", "s1"], [18, 3, 1, "c.PyOS_strnicmp", "s2"], [18, 3, 1, "c.PyOS_strnicmp", "size"]], "PyOS_strtol": [[18, 3, 1, "c.PyOS_strtol", "base"], [18, 3, 1, "c.PyOS_strtol", "ptr"], [18, 3, 1, "c.PyOS_strtol", "str"]], "PyOS_strtoul": [[18, 3, 1, "c.PyOS_strtoul", "base"], [18, 3, 1, "c.PyOS_strtoul", "ptr"], [18, 3, 1, "c.PyOS_strtoul", "str"]], "PyOS_vsnprintf": [[18, 3, 1, "c.PyOS_vsnprintf", "format"], [18, 3, 1, "c.PyOS_vsnprintf", "size"], [18, 3, 1, "c.PyOS_vsnprintf", "str"], [18, 3, 1, "c.PyOS_vsnprintf", "va"]], "PyObject": [[62, 0, 1, "c.PyObject._ob_next", "_ob_next"], [62, 0, 1, "c.PyObject._ob_prev", "_ob_prev"], [62, 0, 1, "c.PyObject.ob_refcnt", "ob_refcnt"], [62, 0, 1, "c.PyObject.ob_type", "ob_type"]], "PyObject_ASCII": [[48, 3, 1, "c.PyObject_ASCII", "o"]], "PyObject_AsCharBuffer": [[47, 3, 1, "c.PyObject_AsCharBuffer", "buffer"], [47, 3, 1, "c.PyObject_AsCharBuffer", "buffer_len"], [47, 3, 1, "c.PyObject_AsCharBuffer", "obj"]], "PyObject_AsFileDescriptor": [[24, 3, 1, "c.PyObject_AsFileDescriptor", "p"]], "PyObject_AsReadBuffer": [[47, 3, 1, "c.PyObject_AsReadBuffer", "buffer"], [47, 3, 1, "c.PyObject_AsReadBuffer", "buffer_len"], [47, 3, 1, "c.PyObject_AsReadBuffer", "obj"]], "PyObject_AsWriteBuffer": [[47, 3, 1, "c.PyObject_AsWriteBuffer", "buffer"], [47, 3, 1, "c.PyObject_AsWriteBuffer", "buffer_len"], [47, 3, 1, "c.PyObject_AsWriteBuffer", "obj"]], "PyObject_Bytes": [[48, 3, 1, "c.PyObject_Bytes", "o"]], "PyObject_Call": [[10, 3, 1, "c.PyObject_Call", "args"], [10, 3, 1, "c.PyObject_Call", "callable"], [10, 3, 1, "c.PyObject_Call", "kwargs"]], "PyObject_CallFunction": [[10, 3, 1, "c.PyObject_CallFunction", "callable"], [10, 3, 1, "c.PyObject_CallFunction", "format"]], "PyObject_CallFunctionObjArgs": [[10, 3, 1, "c.PyObject_CallFunctionObjArgs", "callable"]], "PyObject_CallMethod": [[10, 3, 1, "c.PyObject_CallMethod", "format"], [10, 3, 1, "c.PyObject_CallMethod", "name"], [10, 3, 1, "c.PyObject_CallMethod", "obj"]], "PyObject_CallMethodNoArgs": [[10, 3, 1, "c.PyObject_CallMethodNoArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodNoArgs", "obj"]], "PyObject_CallMethodObjArgs": [[10, 3, 1, "c.PyObject_CallMethodObjArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodObjArgs", "obj"]], "PyObject_CallMethodOneArg": [[10, 3, 1, "c.PyObject_CallMethodOneArg", "arg"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "name"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "obj"]], "PyObject_CallNoArgs": [[10, 3, 1, "c.PyObject_CallNoArgs", "callable"]], "PyObject_CallObject": [[10, 3, 1, "c.PyObject_CallObject", "args"], [10, 3, 1, "c.PyObject_CallObject", "callable"]], "PyObject_CallOneArg": [[10, 3, 1, "c.PyObject_CallOneArg", "arg"], [10, 3, 1, "c.PyObject_CallOneArg", "callable"]], "PyObject_Calloc": [[41, 3, 1, "c.PyObject_Calloc", "elsize"], [41, 3, 1, "c.PyObject_Calloc", "nelem"]], "PyObject_CheckBuffer": [[7, 3, 1, "c.PyObject_CheckBuffer", "obj"]], "PyObject_CheckReadBuffer": [[47, 3, 1, "c.PyObject_CheckReadBuffer", "o"]], "PyObject_ClearWeakRefs": [[66, 3, 1, "c.PyObject_ClearWeakRefs", "object"]], "PyObject_CopyData": [[7, 3, 1, "c.PyObject_CopyData", "dest"], [7, 3, 1, "c.PyObject_CopyData", "src"]], "PyObject_Del": [[3, 3, 1, "c.PyObject_Del", "op"]], "PyObject_DelAttr": [[48, 3, 1, "c.PyObject_DelAttr", "attr_name"], [48, 3, 1, "c.PyObject_DelAttr", "o"]], "PyObject_DelAttrString": [[48, 3, 1, "c.PyObject_DelAttrString", "attr_name"], [48, 3, 1, "c.PyObject_DelAttrString", "o"]], "PyObject_DelItem": [[48, 3, 1, "c.PyObject_DelItem", "key"], [48, 3, 1, "c.PyObject_DelItem", "o"]], "PyObject_Dir": [[48, 3, 1, "c.PyObject_Dir", "o"]], "PyObject_Format": [[48, 3, 1, "c.PyObject_Format", "format_spec"], [48, 3, 1, "c.PyObject_Format", "obj"]], "PyObject_Free": [[41, 3, 1, "c.PyObject_Free", "p"]], "PyObject_GC_Del": [[28, 3, 1, "c.PyObject_GC_Del", "op"]], "PyObject_GC_IsFinalized": [[28, 3, 1, "c.PyObject_GC_IsFinalized", "op"]], "PyObject_GC_IsTracked": [[28, 3, 1, "c.PyObject_GC_IsTracked", "op"]], "PyObject_GC_Resize": [[28, 3, 1, "c.PyObject_GC_Resize", "newsize"], [28, 3, 1, "c.PyObject_GC_Resize", "op"]], "PyObject_GC_Track": [[28, 3, 1, "c.PyObject_GC_Track", "op"]], "PyObject_GC_UnTrack": [[28, 3, 1, "c.PyObject_GC_UnTrack", "op"]], "PyObject_GenericGetAttr": [[48, 3, 1, "c.PyObject_GenericGetAttr", "name"], [48, 3, 1, "c.PyObject_GenericGetAttr", "o"]], "PyObject_GenericGetDict": [[48, 3, 1, "c.PyObject_GenericGetDict", "context"], [48, 3, 1, "c.PyObject_GenericGetDict", "o"]], "PyObject_GenericSetAttr": [[48, 3, 1, "c.PyObject_GenericSetAttr", "name"], [48, 3, 1, "c.PyObject_GenericSetAttr", "o"], [48, 3, 1, "c.PyObject_GenericSetAttr", "value"]], "PyObject_GenericSetDict": [[48, 3, 1, "c.PyObject_GenericSetDict", "context"], [48, 3, 1, "c.PyObject_GenericSetDict", "o"], [48, 3, 1, "c.PyObject_GenericSetDict", "value"]], "PyObject_GetAIter": [[48, 3, 1, "c.PyObject_GetAIter", "o"]], "PyObject_GetArenaAllocator": [[41, 3, 1, "c.PyObject_GetArenaAllocator", "allocator"]], "PyObject_GetAttr": [[48, 3, 1, "c.PyObject_GetAttr", "attr_name"], [48, 3, 1, "c.PyObject_GetAttr", "o"]], "PyObject_GetAttrString": [[48, 3, 1, "c.PyObject_GetAttrString", "attr_name"], [48, 3, 1, "c.PyObject_GetAttrString", "o"]], "PyObject_GetBuffer": [[7, 3, 1, "c.PyObject_GetBuffer", "exporter"], [7, 3, 1, "c.PyObject_GetBuffer", "flags"], [7, 3, 1, "c.PyObject_GetBuffer", "view"]], "PyObject_GetItem": [[48, 3, 1, "c.PyObject_GetItem", "key"], [48, 3, 1, "c.PyObject_GetItem", "o"]], "PyObject_GetItemData": [[48, 3, 1, "c.PyObject_GetItemData", "o"]], "PyObject_GetIter": [[48, 3, 1, "c.PyObject_GetIter", "o"]], "PyObject_GetTypeData": [[48, 3, 1, "c.PyObject_GetTypeData", "cls"], [48, 3, 1, "c.PyObject_GetTypeData", "o"]], "PyObject_HasAttr": [[48, 3, 1, "c.PyObject_HasAttr", "attr_name"], [48, 3, 1, "c.PyObject_HasAttr", "o"]], "PyObject_HasAttrString": [[48, 3, 1, "c.PyObject_HasAttrString", "attr_name"], [48, 3, 1, "c.PyObject_HasAttrString", "o"]], "PyObject_Hash": [[48, 3, 1, "c.PyObject_Hash", "o"]], "PyObject_HashNotImplemented": [[48, 3, 1, "c.PyObject_HashNotImplemented", "o"]], "PyObject_IS_GC": [[28, 3, 1, "c.PyObject_IS_GC", "obj"]], "PyObject_Init": [[3, 3, 1, "c.PyObject_Init", "op"], [3, 3, 1, "c.PyObject_Init", "type"]], "PyObject_InitVar": [[3, 3, 1, "c.PyObject_InitVar", "op"], [3, 3, 1, "c.PyObject_InitVar", "size"], [3, 3, 1, "c.PyObject_InitVar", "type"]], "PyObject_IsInstance": [[48, 3, 1, "c.PyObject_IsInstance", "cls"], [48, 3, 1, "c.PyObject_IsInstance", "inst"]], "PyObject_IsSubclass": [[48, 3, 1, "c.PyObject_IsSubclass", "cls"], [48, 3, 1, "c.PyObject_IsSubclass", "derived"]], "PyObject_IsTrue": [[48, 3, 1, "c.PyObject_IsTrue", "o"]], "PyObject_Length": [[48, 3, 1, "c.PyObject_Length", "o"]], "PyObject_LengthHint": [[48, 3, 1, "c.PyObject_LengthHint", "defaultvalue"], [48, 3, 1, "c.PyObject_LengthHint", "o"]], "PyObject_Malloc": [[41, 3, 1, "c.PyObject_Malloc", "n"]], "PyObject_Not": [[48, 3, 1, "c.PyObject_Not", "o"]], "PyObject_Print": [[48, 3, 1, "c.PyObject_Print", "flags"], [48, 3, 1, "c.PyObject_Print", "fp"], [48, 3, 1, "c.PyObject_Print", "o"]], "PyObject_Realloc": [[41, 3, 1, "c.PyObject_Realloc", "n"], [41, 3, 1, "c.PyObject_Realloc", "p"]], "PyObject_Repr": [[48, 3, 1, "c.PyObject_Repr", "o"]], "PyObject_RichCompare": [[48, 3, 1, "c.PyObject_RichCompare", "o1"], [48, 3, 1, "c.PyObject_RichCompare", "o2"], [48, 3, 1, "c.PyObject_RichCompare", "opid"]], "PyObject_RichCompareBool": [[48, 3, 1, "c.PyObject_RichCompareBool", "o1"], [48, 3, 1, "c.PyObject_RichCompareBool", "o2"], [48, 3, 1, "c.PyObject_RichCompareBool", "opid"]], "PyObject_SetArenaAllocator": [[41, 3, 1, "c.PyObject_SetArenaAllocator", "allocator"]], "PyObject_SetAttr": [[48, 3, 1, "c.PyObject_SetAttr", "attr_name"], [48, 3, 1, "c.PyObject_SetAttr", "o"], [48, 3, 1, "c.PyObject_SetAttr", "v"]], "PyObject_SetAttrString": [[48, 3, 1, "c.PyObject_SetAttrString", "attr_name"], [48, 3, 1, "c.PyObject_SetAttrString", "o"], [48, 3, 1, "c.PyObject_SetAttrString", "v"]], "PyObject_SetItem": [[48, 3, 1, "c.PyObject_SetItem", "key"], [48, 3, 1, "c.PyObject_SetItem", "o"], [48, 3, 1, "c.PyObject_SetItem", "v"]], "PyObject_Size": [[48, 3, 1, "c.PyObject_Size", "o"]], "PyObject_Str": [[48, 3, 1, "c.PyObject_Str", "o"]], "PyObject_Type": [[48, 3, 1, "c.PyObject_Type", "o"]], "PyObject_TypeCheck": [[48, 3, 1, "c.PyObject_TypeCheck", "o"], [48, 3, 1, "c.PyObject_TypeCheck", "type"]], "PyObject_Vectorcall": [[10, 3, 1, "c.PyObject_Vectorcall", "args"], [10, 3, 1, "c.PyObject_Vectorcall", "callable"], [10, 3, 1, "c.PyObject_Vectorcall", "kwnames"], [10, 3, 1, "c.PyObject_Vectorcall", "nargsf"]], "PyObject_VectorcallDict": [[10, 3, 1, "c.PyObject_VectorcallDict", "args"], [10, 3, 1, "c.PyObject_VectorcallDict", "callable"], [10, 3, 1, "c.PyObject_VectorcallDict", "kwdict"], [10, 3, 1, "c.PyObject_VectorcallDict", "nargsf"]], "PyObject_VectorcallMethod": [[10, 3, 1, "c.PyObject_VectorcallMethod", "args"], [10, 3, 1, "c.PyObject_VectorcallMethod", "kwnames"], [10, 3, 1, "c.PyObject_VectorcallMethod", "name"], [10, 3, 1, "c.PyObject_VectorcallMethod", "nargsf"]], "PyPreConfig": [[33, 0, 1, "c.PyPreConfig.allocator", "allocator"], [33, 0, 1, "c.PyPreConfig.coerce_c_locale", "coerce_c_locale"], [33, 0, 1, "c.PyPreConfig.coerce_c_locale_warn", "coerce_c_locale_warn"], [33, 0, 1, "c.PyPreConfig.configure_locale", "configure_locale"], [33, 0, 1, "c.PyPreConfig.dev_mode", "dev_mode"], [33, 0, 1, "c.PyPreConfig.isolated", "isolated"], [33, 0, 1, "c.PyPreConfig.legacy_windows_fs_encoding", "legacy_windows_fs_encoding"], [33, 0, 1, "c.PyPreConfig.parse_argv", "parse_argv"], [33, 0, 1, "c.PyPreConfig.use_environment", "use_environment"], [33, 0, 1, "c.PyPreConfig.utf8_mode", "utf8_mode"]], "PyPreConfig_InitIsolatedConfig": [[33, 3, 1, "c.PyPreConfig_InitIsolatedConfig", "preconfig"]], "PyPreConfig_InitPythonConfig": [[33, 3, 1, "c.PyPreConfig_InitPythonConfig", "preconfig"]], "PyRun_AnyFile": [[65, 3, 1, "c.PyRun_AnyFile", "filename"], [65, 3, 1, "c.PyRun_AnyFile", "fp"]], "PyRun_AnyFileEx": [[65, 3, 1, "c.PyRun_AnyFileEx", "closeit"], [65, 3, 1, "c.PyRun_AnyFileEx", "filename"], [65, 3, 1, "c.PyRun_AnyFileEx", "fp"]], "PyRun_AnyFileExFlags": [[65, 3, 1, "c.PyRun_AnyFileExFlags", "closeit"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "filename"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "flags"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "fp"]], "PyRun_AnyFileFlags": [[65, 3, 1, "c.PyRun_AnyFileFlags", "filename"], [65, 3, 1, "c.PyRun_AnyFileFlags", "flags"], [65, 3, 1, "c.PyRun_AnyFileFlags", "fp"]], "PyRun_File": [[65, 3, 1, "c.PyRun_File", "filename"], [65, 3, 1, "c.PyRun_File", "fp"], [65, 3, 1, "c.PyRun_File", "globals"], [65, 3, 1, "c.PyRun_File", "locals"], [65, 3, 1, "c.PyRun_File", "start"]], "PyRun_FileEx": [[65, 3, 1, "c.PyRun_FileEx", "closeit"], [65, 3, 1, "c.PyRun_FileEx", "filename"], [65, 3, 1, "c.PyRun_FileEx", "fp"], [65, 3, 1, "c.PyRun_FileEx", "globals"], [65, 3, 1, "c.PyRun_FileEx", "locals"], [65, 3, 1, "c.PyRun_FileEx", "start"]], "PyRun_FileExFlags": [[65, 3, 1, "c.PyRun_FileExFlags", "closeit"], [65, 3, 1, "c.PyRun_FileExFlags", "filename"], [65, 3, 1, "c.PyRun_FileExFlags", "flags"], [65, 3, 1, "c.PyRun_FileExFlags", "fp"], [65, 3, 1, "c.PyRun_FileExFlags", "globals"], [65, 3, 1, "c.PyRun_FileExFlags", "locals"], [65, 3, 1, "c.PyRun_FileExFlags", "start"]], "PyRun_FileFlags": [[65, 3, 1, "c.PyRun_FileFlags", "filename"], [65, 3, 1, "c.PyRun_FileFlags", "flags"], [65, 3, 1, "c.PyRun_FileFlags", "fp"], [65, 3, 1, "c.PyRun_FileFlags", "globals"], [65, 3, 1, "c.PyRun_FileFlags", "locals"], [65, 3, 1, "c.PyRun_FileFlags", "start"]], "PyRun_InteractiveLoop": [[65, 3, 1, "c.PyRun_InteractiveLoop", "filename"], [65, 3, 1, "c.PyRun_InteractiveLoop", "fp"]], "PyRun_InteractiveLoopFlags": [[65, 3, 1, "c.PyRun_InteractiveLoopFlags", "filename"], [65, 3, 1, "c.PyRun_InteractiveLoopFlags", "flags"], [65, 3, 1, "c.PyRun_InteractiveLoopFlags", "fp"]], "PyRun_InteractiveOne": [[65, 3, 1, "c.PyRun_InteractiveOne", "filename"], [65, 3, 1, "c.PyRun_InteractiveOne", "fp"]], "PyRun_InteractiveOneFlags": [[65, 3, 1, "c.PyRun_InteractiveOneFlags", "filename"], [65, 3, 1, "c.PyRun_InteractiveOneFlags", "flags"], [65, 3, 1, "c.PyRun_InteractiveOneFlags", "fp"]], "PyRun_SimpleFile": [[65, 3, 1, "c.PyRun_SimpleFile", "filename"], [65, 3, 1, "c.PyRun_SimpleFile", "fp"]], "PyRun_SimpleFileEx": [[65, 3, 1, "c.PyRun_SimpleFileEx", "closeit"], [65, 3, 1, "c.PyRun_SimpleFileEx", "filename"], [65, 3, 1, "c.PyRun_SimpleFileEx", "fp"]], "PyRun_SimpleFileExFlags": [[65, 3, 1, "c.PyRun_SimpleFileExFlags", "closeit"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "filename"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "flags"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "fp"]], "PyRun_SimpleString": [[65, 3, 1, "c.PyRun_SimpleString", "command"]], "PyRun_SimpleStringFlags": [[65, 3, 1, "c.PyRun_SimpleStringFlags", "command"], [65, 3, 1, "c.PyRun_SimpleStringFlags", "flags"]], "PyRun_String": [[65, 3, 1, "c.PyRun_String", "globals"], [65, 3, 1, "c.PyRun_String", "locals"], [65, 3, 1, "c.PyRun_String", "start"], [65, 3, 1, "c.PyRun_String", "str"]], "PyRun_StringFlags": [[65, 3, 1, "c.PyRun_StringFlags", "flags"], [65, 3, 1, "c.PyRun_StringFlags", "globals"], [65, 3, 1, "c.PyRun_StringFlags", "locals"], [65, 3, 1, "c.PyRun_StringFlags", "start"], [65, 3, 1, "c.PyRun_StringFlags", "str"]], "PySeqIter_Check": [[36, 3, 1, "c.PySeqIter_Check", "op"]], "PySeqIter_New": [[36, 3, 1, "c.PySeqIter_New", "seq"]], "PySequenceMethods": [[62, 0, 1, "c.PySequenceMethods.sq_ass_item", "sq_ass_item"], [62, 0, 1, "c.PySequenceMethods.sq_concat", "sq_concat"], [62, 0, 1, "c.PySequenceMethods.sq_contains", "sq_contains"], [62, 0, 1, "c.PySequenceMethods.sq_inplace_concat", "sq_inplace_concat"], [62, 0, 1, "c.PySequenceMethods.sq_inplace_repeat", "sq_inplace_repeat"], [62, 0, 1, "c.PySequenceMethods.sq_item", "sq_item"], [62, 0, 1, "c.PySequenceMethods.sq_length", "sq_length"], [62, 0, 1, "c.PySequenceMethods.sq_repeat", "sq_repeat"]], "PySequence_Check": [[53, 3, 1, "c.PySequence_Check", "o"]], "PySequence_Concat": [[53, 3, 1, "c.PySequence_Concat", "o1"], [53, 3, 1, "c.PySequence_Concat", "o2"]], "PySequence_Contains": [[53, 3, 1, "c.PySequence_Contains", "o"], [53, 3, 1, "c.PySequence_Contains", "value"]], "PySequence_Count": [[53, 3, 1, "c.PySequence_Count", "o"], [53, 3, 1, "c.PySequence_Count", "value"]], "PySequence_DelItem": [[53, 3, 1, "c.PySequence_DelItem", "i"], [53, 3, 1, "c.PySequence_DelItem", "o"]], "PySequence_DelSlice": [[53, 3, 1, "c.PySequence_DelSlice", "i1"], [53, 3, 1, "c.PySequence_DelSlice", "i2"], [53, 3, 1, "c.PySequence_DelSlice", "o"]], "PySequence_Fast": [[53, 3, 1, "c.PySequence_Fast", "m"], [53, 3, 1, "c.PySequence_Fast", "o"]], "PySequence_Fast_GET_ITEM": [[53, 3, 1, "c.PySequence_Fast_GET_ITEM", "i"], [53, 3, 1, "c.PySequence_Fast_GET_ITEM", "o"]], "PySequence_Fast_GET_SIZE": [[53, 3, 1, "c.PySequence_Fast_GET_SIZE", "o"]], "PySequence_Fast_ITEMS": [[53, 3, 1, "c.PySequence_Fast_ITEMS", "o"]], "PySequence_GetItem": [[53, 3, 1, "c.PySequence_GetItem", "i"], [53, 3, 1, "c.PySequence_GetItem", "o"]], "PySequence_GetSlice": [[53, 3, 1, "c.PySequence_GetSlice", "i1"], [53, 3, 1, "c.PySequence_GetSlice", "i2"], [53, 3, 1, "c.PySequence_GetSlice", "o"]], "PySequence_ITEM": [[53, 3, 1, "c.PySequence_ITEM", "i"], [53, 3, 1, "c.PySequence_ITEM", "o"]], "PySequence_InPlaceConcat": [[53, 3, 1, "c.PySequence_InPlaceConcat", "o1"], [53, 3, 1, "c.PySequence_InPlaceConcat", "o2"]], "PySequence_InPlaceRepeat": [[53, 3, 1, "c.PySequence_InPlaceRepeat", "count"], [53, 3, 1, "c.PySequence_InPlaceRepeat", "o"]], "PySequence_Index": [[53, 3, 1, "c.PySequence_Index", "o"], [53, 3, 1, "c.PySequence_Index", "value"]], "PySequence_Length": [[53, 3, 1, "c.PySequence_Length", "o"]], "PySequence_List": [[53, 3, 1, "c.PySequence_List", "o"]], "PySequence_Repeat": [[53, 3, 1, "c.PySequence_Repeat", "count"], [53, 3, 1, "c.PySequence_Repeat", "o"]], "PySequence_SetItem": [[53, 3, 1, "c.PySequence_SetItem", "i"], [53, 3, 1, "c.PySequence_SetItem", "o"], [53, 3, 1, "c.PySequence_SetItem", "v"]], "PySequence_SetSlice": [[53, 3, 1, "c.PySequence_SetSlice", "i1"], [53, 3, 1, "c.PySequence_SetSlice", "i2"], [53, 3, 1, "c.PySequence_SetSlice", "o"], [53, 3, 1, "c.PySequence_SetSlice", "v"]], "PySequence_Size": [[53, 3, 1, "c.PySequence_Size", "o"]], "PySequence_Tuple": [[53, 3, 1, "c.PySequence_Tuple", "o"]], "PySet_Add": [[54, 3, 1, "c.PySet_Add", "key"], [54, 3, 1, "c.PySet_Add", "set"]], "PySet_Check": [[54, 3, 1, "c.PySet_Check", "p"]], "PySet_CheckExact": [[54, 3, 1, "c.PySet_CheckExact", "p"]], "PySet_Clear": [[54, 3, 1, "c.PySet_Clear", "set"]], "PySet_Contains": [[54, 3, 1, "c.PySet_Contains", "anyset"], [54, 3, 1, "c.PySet_Contains", "key"]], "PySet_Discard": [[54, 3, 1, "c.PySet_Discard", "key"], [54, 3, 1, "c.PySet_Discard", "set"]], "PySet_GET_SIZE": [[54, 3, 1, "c.PySet_GET_SIZE", "anyset"]], "PySet_New": [[54, 3, 1, "c.PySet_New", "iterable"]], "PySet_Pop": [[54, 3, 1, "c.PySet_Pop", "set"]], "PySet_Size": [[54, 3, 1, "c.PySet_Size", "anyset"]], "PySignal_SetWakeupFd": [[23, 3, 1, "c.PySignal_SetWakeupFd", "fd"]], "PySlice_AdjustIndices": [[55, 3, 1, "c.PySlice_AdjustIndices", "length"], [55, 3, 1, "c.PySlice_AdjustIndices", "start"], [55, 3, 1, "c.PySlice_AdjustIndices", "step"], [55, 3, 1, "c.PySlice_AdjustIndices", "stop"]], "PySlice_Check": [[55, 3, 1, "c.PySlice_Check", "ob"]], "PySlice_GetIndices": [[55, 3, 1, "c.PySlice_GetIndices", "length"], [55, 3, 1, "c.PySlice_GetIndices", "slice"], [55, 3, 1, "c.PySlice_GetIndices", "start"], [55, 3, 1, "c.PySlice_GetIndices", "step"], [55, 3, 1, "c.PySlice_GetIndices", "stop"]], "PySlice_GetIndicesEx": [[55, 3, 1, "c.PySlice_GetIndicesEx", "length"], [55, 3, 1, "c.PySlice_GetIndicesEx", "slice"], [55, 3, 1, "c.PySlice_GetIndicesEx", "slicelength"], [55, 3, 1, "c.PySlice_GetIndicesEx", "start"], [55, 3, 1, "c.PySlice_GetIndicesEx", "step"], [55, 3, 1, "c.PySlice_GetIndicesEx", "stop"]], "PySlice_New": [[55, 3, 1, "c.PySlice_New", "start"], [55, 3, 1, "c.PySlice_New", "step"], [55, 3, 1, "c.PySlice_New", "stop"]], "PySlice_Unpack": [[55, 3, 1, "c.PySlice_Unpack", "slice"], [55, 3, 1, "c.PySlice_Unpack", "start"], [55, 3, 1, "c.PySlice_Unpack", "step"], [55, 3, 1, "c.PySlice_Unpack", "stop"]], "PyState_AddModule": [[44, 3, 1, "c.PyState_AddModule", "def"], [44, 3, 1, "c.PyState_AddModule", "module"]], "PyState_FindModule": [[44, 3, 1, "c.PyState_FindModule", "def"]], "PyState_RemoveModule": [[44, 3, 1, "c.PyState_RemoveModule", "def"]], "PyStatus": [[33, 0, 1, "c.PyStatus.err_msg", "err_msg"], [33, 0, 1, "c.PyStatus.exitcode", "exitcode"], [33, 0, 1, "c.PyStatus.func", "func"]], "PyStatus_Error": [[33, 3, 1, "c.PyStatus_Error", "err_msg"]], "PyStatus_Exception": [[33, 3, 1, "c.PyStatus_Exception", "status"]], "PyStatus_Exit": [[33, 3, 1, "c.PyStatus_Exit", "exitcode"]], "PyStatus_IsError": [[33, 3, 1, "c.PyStatus_IsError", "status"]], "PyStatus_IsExit": [[33, 3, 1, "c.PyStatus_IsExit", "status"]], "PyStructSequence_Desc": [[59, 0, 1, "c.PyStructSequence_Desc.doc", "doc"], [59, 0, 1, "c.PyStructSequence_Desc.fields", "fields"], [59, 0, 1, "c.PyStructSequence_Desc.n_in_sequence", "n_in_sequence"], [59, 0, 1, "c.PyStructSequence_Desc.name", "name"]], "PyStructSequence_Field": [[59, 0, 1, "c.PyStructSequence_Field.doc", "doc"], [59, 0, 1, "c.PyStructSequence_Field.name", "name"]], "PyStructSequence_GET_ITEM": [[59, 3, 1, "c.PyStructSequence_GET_ITEM", "p"], [59, 3, 1, "c.PyStructSequence_GET_ITEM", "pos"]], "PyStructSequence_GetItem": [[59, 3, 1, "c.PyStructSequence_GetItem", "p"], [59, 3, 1, "c.PyStructSequence_GetItem", "pos"]], "PyStructSequence_InitType": [[59, 3, 1, "c.PyStructSequence_InitType", "desc"], [59, 3, 1, "c.PyStructSequence_InitType", "type"]], "PyStructSequence_InitType2": [[59, 3, 1, "c.PyStructSequence_InitType2", "desc"], [59, 3, 1, "c.PyStructSequence_InitType2", "type"]], "PyStructSequence_New": [[59, 3, 1, "c.PyStructSequence_New", "type"]], "PyStructSequence_NewType": [[59, 3, 1, "c.PyStructSequence_NewType", "desc"]], "PyStructSequence_SET_ITEM": [[59, 3, 1, "c.PyStructSequence_SET_ITEM", "o"], [59, 3, 1, "c.PyStructSequence_SET_ITEM", "p"], [59, 3, 1, "c.PyStructSequence_SET_ITEM", "pos"]], "PyStructSequence_SetItem": [[59, 3, 1, "c.PyStructSequence_SetItem", "o"], [59, 3, 1, "c.PyStructSequence_SetItem", "p"], [59, 3, 1, "c.PyStructSequence_SetItem", "pos"]], "PySys_AddAuditHook": [[58, 3, 1, "c.PySys_AddAuditHook", "hook"], [58, 3, 1, "c.PySys_AddAuditHook", "userData"]], "PySys_AddWarnOption": [[58, 3, 1, "c.PySys_AddWarnOption", "s"]], "PySys_AddWarnOptionUnicode": [[58, 3, 1, "c.PySys_AddWarnOptionUnicode", "unicode"]], "PySys_AddXOption": [[58, 3, 1, "c.PySys_AddXOption", "s"]], "PySys_Audit": [[58, 3, 1, "c.PySys_Audit", "event"], [58, 3, 1, "c.PySys_Audit", "format"]], "PySys_FormatStderr": [[58, 3, 1, "c.PySys_FormatStderr", "format"]], "PySys_FormatStdout": [[58, 3, 1, "c.PySys_FormatStdout", "format"]], "PySys_GetObject": [[58, 3, 1, "c.PySys_GetObject", "name"]], "PySys_SetArgv": [[32, 3, 1, "c.PySys_SetArgv", "argc"], [32, 3, 1, "c.PySys_SetArgv", "argv"]], "PySys_SetArgvEx": [[32, 3, 1, "c.PySys_SetArgvEx", "argc"], [32, 3, 1, "c.PySys_SetArgvEx", "argv"], [32, 3, 1, "c.PySys_SetArgvEx", "updatepath"]], "PySys_SetObject": [[58, 3, 1, "c.PySys_SetObject", "name"], [58, 3, 1, "c.PySys_SetObject", "v"]], "PySys_SetPath": [[58, 3, 1, "c.PySys_SetPath", "path"]], "PySys_WriteStderr": [[58, 3, 1, "c.PySys_WriteStderr", "format"]], "PySys_WriteStdout": [[58, 3, 1, "c.PySys_WriteStdout", "format"]], "PyTZInfo_Check": [[20, 3, 1, "c.PyTZInfo_Check", "ob"]], "PyTZInfo_CheckExact": [[20, 3, 1, "c.PyTZInfo_CheckExact", "ob"]], "PyThreadState": [[32, 0, 1, "c.PyThreadState.interp", "interp"]], "PyThreadState_Clear": [[32, 3, 1, "c.PyThreadState_Clear", "tstate"]], "PyThreadState_Delete": [[32, 3, 1, "c.PyThreadState_Delete", "tstate"]], "PyThreadState_EnterTracing": [[32, 3, 1, "c.PyThreadState_EnterTracing", "tstate"]], "PyThreadState_GetFrame": [[32, 3, 1, "c.PyThreadState_GetFrame", "tstate"]], "PyThreadState_GetID": [[32, 3, 1, "c.PyThreadState_GetID", "tstate"]], "PyThreadState_GetInterpreter": [[32, 3, 1, "c.PyThreadState_GetInterpreter", "tstate"]], "PyThreadState_LeaveTracing": [[32, 3, 1, "c.PyThreadState_LeaveTracing", "tstate"]], "PyThreadState_New": [[32, 3, 1, "c.PyThreadState_New", "interp"]], "PyThreadState_Next": [[32, 3, 1, "c.PyThreadState_Next", "tstate"]], "PyThreadState_SetAsyncExc": [[32, 3, 1, "c.PyThreadState_SetAsyncExc", "exc"], [32, 3, 1, "c.PyThreadState_SetAsyncExc", "id"]], "PyThreadState_Swap": [[32, 3, 1, "c.PyThreadState_Swap", "tstate"]], "PyThread_delete_key": [[32, 3, 1, "c.PyThread_delete_key", "key"]], "PyThread_delete_key_value": [[32, 3, 1, "c.PyThread_delete_key_value", "key"]], "PyThread_get_key_value": [[32, 3, 1, "c.PyThread_get_key_value", "key"]], "PyThread_set_key_value": [[32, 3, 1, "c.PyThread_set_key_value", "key"], [32, 3, 1, "c.PyThread_set_key_value", "value"]], "PyThread_tss_create": [[32, 3, 1, "c.PyThread_tss_create", "key"]], "PyThread_tss_delete": [[32, 3, 1, "c.PyThread_tss_delete", "key"]], "PyThread_tss_free": [[32, 3, 1, "c.PyThread_tss_free", "key"]], "PyThread_tss_get": [[32, 3, 1, "c.PyThread_tss_get", "key"]], "PyThread_tss_is_created": [[32, 3, 1, "c.PyThread_tss_is_created", "key"]], "PyThread_tss_set": [[32, 3, 1, "c.PyThread_tss_set", "key"], [32, 3, 1, "c.PyThread_tss_set", "value"]], "PyTimeZone_FromOffset": [[20, 3, 1, "c.PyTimeZone_FromOffset", "offset"]], "PyTimeZone_FromOffsetAndName": [[20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "name"], [20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "offset"]], "PyTime_Check": [[20, 3, 1, "c.PyTime_Check", "ob"]], "PyTime_CheckExact": [[20, 3, 1, "c.PyTime_CheckExact", "ob"]], "PyTime_FromTime": [[20, 3, 1, "c.PyTime_FromTime", "hour"], [20, 3, 1, "c.PyTime_FromTime", "minute"], [20, 3, 1, "c.PyTime_FromTime", "second"], [20, 3, 1, "c.PyTime_FromTime", "usecond"]], "PyTime_FromTimeAndFold": [[20, 3, 1, "c.PyTime_FromTimeAndFold", "fold"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "hour"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "minute"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "second"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "usecond"]], "PyTraceMalloc_Track": [[41, 3, 1, "c.PyTraceMalloc_Track", "domain"], [41, 3, 1, "c.PyTraceMalloc_Track", "ptr"], [41, 3, 1, "c.PyTraceMalloc_Track", "size"]], "PyTraceMalloc_Untrack": [[41, 3, 1, "c.PyTraceMalloc_Untrack", "domain"], [41, 3, 1, "c.PyTraceMalloc_Untrack", "ptr"]], "PyTuple_Check": [[59, 3, 1, "c.PyTuple_Check", "p"]], "PyTuple_CheckExact": [[59, 3, 1, "c.PyTuple_CheckExact", "p"]], "PyTuple_GET_ITEM": [[59, 3, 1, "c.PyTuple_GET_ITEM", "p"], [59, 3, 1, "c.PyTuple_GET_ITEM", "pos"]], "PyTuple_GET_SIZE": [[59, 3, 1, "c.PyTuple_GET_SIZE", "p"]], "PyTuple_GetItem": [[59, 3, 1, "c.PyTuple_GetItem", "p"], [59, 3, 1, "c.PyTuple_GetItem", "pos"]], "PyTuple_GetSlice": [[59, 3, 1, "c.PyTuple_GetSlice", "high"], [59, 3, 1, "c.PyTuple_GetSlice", "low"], [59, 3, 1, "c.PyTuple_GetSlice", "p"]], "PyTuple_New": [[59, 3, 1, "c.PyTuple_New", "len"]], "PyTuple_Pack": [[59, 3, 1, "c.PyTuple_Pack", "n"]], "PyTuple_SET_ITEM": [[59, 3, 1, "c.PyTuple_SET_ITEM", "o"], [59, 3, 1, "c.PyTuple_SET_ITEM", "p"], [59, 3, 1, "c.PyTuple_SET_ITEM", "pos"]], "PyTuple_SetItem": [[59, 3, 1, "c.PyTuple_SetItem", "o"], [59, 3, 1, "c.PyTuple_SetItem", "p"], [59, 3, 1, "c.PyTuple_SetItem", "pos"]], "PyTuple_Size": [[59, 3, 1, "c.PyTuple_Size", "p"]], "PyTypeObject": [[62, 0, 1, "c.PyTypeObject.tp_alloc", "tp_alloc"], [62, 0, 1, "c.PyTypeObject.tp_as_async", "tp_as_async"], [62, 0, 1, "c.PyTypeObject.tp_as_buffer", "tp_as_buffer"], [62, 0, 1, "c.PyTypeObject.tp_as_mapping", "tp_as_mapping"], [62, 0, 1, "c.PyTypeObject.tp_as_number", "tp_as_number"], [62, 0, 1, "c.PyTypeObject.tp_as_sequence", "tp_as_sequence"], [62, 0, 1, "c.PyTypeObject.tp_base", "tp_base"], [62, 0, 1, "c.PyTypeObject.tp_bases", "tp_bases"], [62, 0, 1, "c.PyTypeObject.tp_basicsize", "tp_basicsize"], [62, 0, 1, "c.PyTypeObject.tp_cache", "tp_cache"], [62, 0, 1, "c.PyTypeObject.tp_call", "tp_call"], [62, 0, 1, "c.PyTypeObject.tp_clear", "tp_clear"], [62, 0, 1, "c.PyTypeObject.tp_dealloc", "tp_dealloc"], [62, 0, 1, "c.PyTypeObject.tp_del", "tp_del"], [62, 0, 1, "c.PyTypeObject.tp_descr_get", "tp_descr_get"], [62, 0, 1, "c.PyTypeObject.tp_descr_set", "tp_descr_set"], [62, 0, 1, "c.PyTypeObject.tp_dict", "tp_dict"], [62, 0, 1, "c.PyTypeObject.tp_dictoffset", "tp_dictoffset"], [62, 0, 1, "c.PyTypeObject.tp_doc", "tp_doc"], [62, 0, 1, "c.PyTypeObject.tp_finalize", "tp_finalize"], [62, 0, 1, "c.PyTypeObject.tp_flags", "tp_flags"], [62, 0, 1, "c.PyTypeObject.tp_free", "tp_free"], [62, 0, 1, "c.PyTypeObject.tp_getattr", "tp_getattr"], [62, 0, 1, "c.PyTypeObject.tp_getattro", "tp_getattro"], [62, 0, 1, "c.PyTypeObject.tp_getset", "tp_getset"], [62, 0, 1, "c.PyTypeObject.tp_hash", "tp_hash"], [62, 0, 1, "c.PyTypeObject.tp_init", "tp_init"], [62, 0, 1, "c.PyTypeObject.tp_is_gc", "tp_is_gc"], [62, 0, 1, "c.PyTypeObject.tp_itemsize", "tp_itemsize"], [62, 0, 1, "c.PyTypeObject.tp_iter", "tp_iter"], [62, 0, 1, "c.PyTypeObject.tp_iternext", "tp_iternext"], [62, 0, 1, "c.PyTypeObject.tp_members", "tp_members"], [62, 0, 1, "c.PyTypeObject.tp_methods", "tp_methods"], [62, 0, 1, "c.PyTypeObject.tp_mro", "tp_mro"], [62, 0, 1, "c.PyTypeObject.tp_name", "tp_name"], [62, 0, 1, "c.PyTypeObject.tp_new", "tp_new"], [62, 0, 1, "c.PyTypeObject.tp_repr", "tp_repr"], [62, 0, 1, "c.PyTypeObject.tp_richcompare", "tp_richcompare"], [62, 0, 1, "c.PyTypeObject.tp_setattr", "tp_setattr"], [62, 0, 1, "c.PyTypeObject.tp_setattro", "tp_setattro"], [62, 0, 1, "c.PyTypeObject.tp_str", "tp_str"], [62, 0, 1, "c.PyTypeObject.tp_subclasses", "tp_subclasses"], [62, 0, 1, "c.PyTypeObject.tp_traverse", "tp_traverse"], [62, 0, 1, "c.PyTypeObject.tp_vectorcall", "tp_vectorcall"], [62, 0, 1, "c.PyTypeObject.tp_vectorcall_offset", "tp_vectorcall_offset"], [62, 0, 1, "c.PyTypeObject.tp_version_tag", "tp_version_tag"], [62, 0, 1, "c.PyTypeObject.tp_watched", "tp_watched"], [62, 0, 1, "c.PyTypeObject.tp_weaklist", "tp_weaklist"], [62, 0, 1, "c.PyTypeObject.tp_weaklistoffset", "tp_weaklistoffset"]], "PyType_AddWatcher": [[60, 3, 1, "c.PyType_AddWatcher", "callback"]], "PyType_Check": [[60, 3, 1, "c.PyType_Check", "o"]], "PyType_CheckExact": [[60, 3, 1, "c.PyType_CheckExact", "o"]], "PyType_ClearWatcher": [[60, 3, 1, "c.PyType_ClearWatcher", "watcher_id"]], "PyType_FromMetaclass": [[60, 3, 1, "c.PyType_FromMetaclass", "bases"], [60, 3, 1, "c.PyType_FromMetaclass", "metaclass"], [60, 3, 1, "c.PyType_FromMetaclass", "module"], [60, 3, 1, "c.PyType_FromMetaclass", "spec"]], "PyType_FromModuleAndSpec": [[60, 3, 1, "c.PyType_FromModuleAndSpec", "bases"], [60, 3, 1, "c.PyType_FromModuleAndSpec", "module"], [60, 3, 1, "c.PyType_FromModuleAndSpec", "spec"]], "PyType_FromSpec": [[60, 3, 1, "c.PyType_FromSpec", "spec"]], "PyType_FromSpecWithBases": [[60, 3, 1, "c.PyType_FromSpecWithBases", "bases"], [60, 3, 1, "c.PyType_FromSpecWithBases", "spec"]], "PyType_GenericAlloc": [[60, 3, 1, "c.PyType_GenericAlloc", "nitems"], [60, 3, 1, "c.PyType_GenericAlloc", "type"]], "PyType_GenericNew": [[60, 3, 1, "c.PyType_GenericNew", "args"], [60, 3, 1, "c.PyType_GenericNew", "kwds"], [60, 3, 1, "c.PyType_GenericNew", "type"]], "PyType_GetDict": [[60, 3, 1, "c.PyType_GetDict", "type"]], "PyType_GetFlags": [[60, 3, 1, "c.PyType_GetFlags", "type"]], "PyType_GetModule": [[60, 3, 1, "c.PyType_GetModule", "type"]], "PyType_GetModuleByDef": [[60, 3, 1, "c.PyType_GetModuleByDef", "def"], [60, 3, 1, "c.PyType_GetModuleByDef", "type"]], "PyType_GetModuleState": [[60, 3, 1, "c.PyType_GetModuleState", "type"]], "PyType_GetName": [[60, 3, 1, "c.PyType_GetName", "type"]], "PyType_GetQualName": [[60, 3, 1, "c.PyType_GetQualName", "type"]], "PyType_GetSlot": [[60, 3, 1, "c.PyType_GetSlot", "slot"], [60, 3, 1, "c.PyType_GetSlot", "type"]], "PyType_GetTypeDataSize": [[48, 3, 1, "c.PyType_GetTypeDataSize", "cls"]], "PyType_HasFeature": [[60, 3, 1, "c.PyType_HasFeature", "feature"], [60, 3, 1, "c.PyType_HasFeature", "o"]], "PyType_IS_GC": [[60, 3, 1, "c.PyType_IS_GC", "o"]], "PyType_IsSubtype": [[60, 3, 1, "c.PyType_IsSubtype", "a"], [60, 3, 1, "c.PyType_IsSubtype", "b"]], "PyType_Modified": [[60, 3, 1, "c.PyType_Modified", "type"]], "PyType_Ready": [[60, 3, 1, "c.PyType_Ready", "type"]], "PyType_Slot": [[60, 0, 1, "c.PyType_Slot.pfunc", "pfunc"], [60, 0, 1, "c.PyType_Slot.slot", "slot"]], "PyType_Spec": [[60, 0, 1, "c.PyType_Spec.basicsize", "basicsize"], [60, 0, 1, "c.PyType_Spec.flags", "flags"], [60, 0, 1, "c.PyType_Spec.itemsize", "itemsize"], [60, 0, 1, "c.PyType_Spec.name", "name"], [60, 0, 1, "c.PyType_Spec.slots", "slots"]], "PyType_Watch": [[60, 3, 1, "c.PyType_Watch", "type"], [60, 3, 1, "c.PyType_Watch", "watcher_id"]], "PyUnicodeDecodeError_Create": [[23, 3, 1, "c.PyUnicodeDecodeError_Create", "encoding"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "length"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "object"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "reason"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "start"]], "PyUnicodeDecodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEncoding", "exc"]], "PyUnicodeDecodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "exc"]], "PyUnicodeDecodeError_GetObject": [[23, 3, 1, "c.PyUnicodeDecodeError_GetObject", "exc"]], "PyUnicodeDecodeError_GetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_GetReason", "exc"]], "PyUnicodeDecodeError_GetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "start"]], "PyUnicodeDecodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "exc"]], "PyUnicodeDecodeError_SetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "reason"]], "PyUnicodeDecodeError_SetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "start"]], "PyUnicodeEncodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEncoding", "exc"]], "PyUnicodeEncodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "exc"]], "PyUnicodeEncodeError_GetObject": [[23, 3, 1, "c.PyUnicodeEncodeError_GetObject", "exc"]], "PyUnicodeEncodeError_GetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_GetReason", "exc"]], "PyUnicodeEncodeError_GetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "start"]], "PyUnicodeEncodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "exc"]], "PyUnicodeEncodeError_SetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "reason"]], "PyUnicodeEncodeError_SetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "start"]], "PyUnicodeTranslateError_GetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "exc"]], "PyUnicodeTranslateError_GetObject": [[23, 3, 1, "c.PyUnicodeTranslateError_GetObject", "exc"]], "PyUnicodeTranslateError_GetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_GetReason", "exc"]], "PyUnicodeTranslateError_GetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "start"]], "PyUnicodeTranslateError_SetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "exc"]], "PyUnicodeTranslateError_SetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "reason"]], "PyUnicodeTranslateError_SetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "start"]], "PyUnicode_1BYTE_DATA": [[63, 3, 1, "c.PyUnicode_1BYTE_DATA", "unicode"]], "PyUnicode_2BYTE_DATA": [[63, 3, 1, "c.PyUnicode_2BYTE_DATA", "unicode"]], "PyUnicode_4BYTE_DATA": [[63, 3, 1, "c.PyUnicode_4BYTE_DATA", "unicode"]], "PyUnicode_AsASCIIString": [[63, 3, 1, "c.PyUnicode_AsASCIIString", "unicode"]], "PyUnicode_AsCharmapString": [[63, 3, 1, "c.PyUnicode_AsCharmapString", "mapping"], [63, 3, 1, "c.PyUnicode_AsCharmapString", "unicode"]], "PyUnicode_AsEncodedString": [[63, 3, 1, "c.PyUnicode_AsEncodedString", "encoding"], [63, 3, 1, "c.PyUnicode_AsEncodedString", "errors"], [63, 3, 1, "c.PyUnicode_AsEncodedString", "unicode"]], "PyUnicode_AsLatin1String": [[63, 3, 1, "c.PyUnicode_AsLatin1String", "unicode"]], "PyUnicode_AsMBCSString": [[63, 3, 1, "c.PyUnicode_AsMBCSString", "unicode"]], "PyUnicode_AsRawUnicodeEscapeString": [[63, 3, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "unicode"]], "PyUnicode_AsUCS4": [[63, 3, 1, "c.PyUnicode_AsUCS4", "buffer"], [63, 3, 1, "c.PyUnicode_AsUCS4", "buflen"], [63, 3, 1, "c.PyUnicode_AsUCS4", "copy_null"], [63, 3, 1, "c.PyUnicode_AsUCS4", "unicode"]], "PyUnicode_AsUCS4Copy": [[63, 3, 1, "c.PyUnicode_AsUCS4Copy", "unicode"]], "PyUnicode_AsUTF16String": [[63, 3, 1, "c.PyUnicode_AsUTF16String", "unicode"]], "PyUnicode_AsUTF32String": [[63, 3, 1, "c.PyUnicode_AsUTF32String", "unicode"]], "PyUnicode_AsUTF8": [[63, 3, 1, "c.PyUnicode_AsUTF8", "unicode"]], "PyUnicode_AsUTF8AndSize": [[63, 3, 1, "c.PyUnicode_AsUTF8AndSize", "size"], [63, 3, 1, "c.PyUnicode_AsUTF8AndSize", "unicode"]], "PyUnicode_AsUTF8String": [[63, 3, 1, "c.PyUnicode_AsUTF8String", "unicode"]], "PyUnicode_AsUnicodeEscapeString": [[63, 3, 1, "c.PyUnicode_AsUnicodeEscapeString", "unicode"]], "PyUnicode_AsWideChar": [[63, 3, 1, "c.PyUnicode_AsWideChar", "size"], [63, 3, 1, "c.PyUnicode_AsWideChar", "unicode"], [63, 3, 1, "c.PyUnicode_AsWideChar", "wstr"]], "PyUnicode_AsWideCharString": [[63, 3, 1, "c.PyUnicode_AsWideCharString", "size"], [63, 3, 1, "c.PyUnicode_AsWideCharString", "unicode"]], "PyUnicode_Check": [[63, 3, 1, "c.PyUnicode_Check", "obj"]], "PyUnicode_CheckExact": [[63, 3, 1, "c.PyUnicode_CheckExact", "obj"]], "PyUnicode_Compare": [[63, 3, 1, "c.PyUnicode_Compare", "left"], [63, 3, 1, "c.PyUnicode_Compare", "right"]], "PyUnicode_CompareWithASCIIString": [[63, 3, 1, "c.PyUnicode_CompareWithASCIIString", "string"], [63, 3, 1, "c.PyUnicode_CompareWithASCIIString", "unicode"]], "PyUnicode_Concat": [[63, 3, 1, "c.PyUnicode_Concat", "left"], [63, 3, 1, "c.PyUnicode_Concat", "right"]], "PyUnicode_Contains": [[63, 3, 1, "c.PyUnicode_Contains", "substr"], [63, 3, 1, "c.PyUnicode_Contains", "unicode"]], "PyUnicode_CopyCharacters": [[63, 3, 1, "c.PyUnicode_CopyCharacters", "from"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "from_start"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "how_many"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "to"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "to_start"]], "PyUnicode_Count": [[63, 3, 1, "c.PyUnicode_Count", "end"], [63, 3, 1, "c.PyUnicode_Count", "start"], [63, 3, 1, "c.PyUnicode_Count", "substr"], [63, 3, 1, "c.PyUnicode_Count", "unicode"]], "PyUnicode_DATA": [[63, 3, 1, "c.PyUnicode_DATA", "unicode"]], "PyUnicode_Decode": [[63, 3, 1, "c.PyUnicode_Decode", "encoding"], [63, 3, 1, "c.PyUnicode_Decode", "errors"], [63, 3, 1, "c.PyUnicode_Decode", "size"], [63, 3, 1, "c.PyUnicode_Decode", "str"]], "PyUnicode_DecodeASCII": [[63, 3, 1, "c.PyUnicode_DecodeASCII", "errors"], [63, 3, 1, "c.PyUnicode_DecodeASCII", "size"], [63, 3, 1, "c.PyUnicode_DecodeASCII", "str"]], "PyUnicode_DecodeCharmap": [[63, 3, 1, "c.PyUnicode_DecodeCharmap", "errors"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "length"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "mapping"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "str"]], "PyUnicode_DecodeFSDefault": [[63, 3, 1, "c.PyUnicode_DecodeFSDefault", "str"]], "PyUnicode_DecodeFSDefaultAndSize": [[63, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "size"], [63, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "str"]], "PyUnicode_DecodeLatin1": [[63, 3, 1, "c.PyUnicode_DecodeLatin1", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLatin1", "size"], [63, 3, 1, "c.PyUnicode_DecodeLatin1", "str"]], "PyUnicode_DecodeLocale": [[63, 3, 1, "c.PyUnicode_DecodeLocale", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLocale", "str"]], "PyUnicode_DecodeLocaleAndSize": [[63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "length"], [63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "str"]], "PyUnicode_DecodeMBCS": [[63, 3, 1, "c.PyUnicode_DecodeMBCS", "errors"], [63, 3, 1, "c.PyUnicode_DecodeMBCS", "size"], [63, 3, 1, "c.PyUnicode_DecodeMBCS", "str"]], "PyUnicode_DecodeMBCSStateful": [[63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "str"]], "PyUnicode_DecodeRawUnicodeEscape": [[63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "errors"], [63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "size"], [63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "str"]], "PyUnicode_DecodeUTF16": [[63, 3, 1, "c.PyUnicode_DecodeUTF16", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "str"]], "PyUnicode_DecodeUTF16Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "str"]], "PyUnicode_DecodeUTF32": [[63, 3, 1, "c.PyUnicode_DecodeUTF32", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "str"]], "PyUnicode_DecodeUTF32Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "str"]], "PyUnicode_DecodeUTF7": [[63, 3, 1, "c.PyUnicode_DecodeUTF7", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF7", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF7", "str"]], "PyUnicode_DecodeUTF7Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "str"]], "PyUnicode_DecodeUTF8": [[63, 3, 1, "c.PyUnicode_DecodeUTF8", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF8", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF8", "str"]], "PyUnicode_DecodeUTF8Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "str"]], "PyUnicode_DecodeUnicodeEscape": [[63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "size"], [63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "str"]], "PyUnicode_EncodeCodePage": [[63, 3, 1, "c.PyUnicode_EncodeCodePage", "code_page"], [63, 3, 1, "c.PyUnicode_EncodeCodePage", "errors"], [63, 3, 1, "c.PyUnicode_EncodeCodePage", "unicode"]], "PyUnicode_EncodeFSDefault": [[63, 3, 1, "c.PyUnicode_EncodeFSDefault", "unicode"]], "PyUnicode_EncodeLocale": [[63, 3, 1, "c.PyUnicode_EncodeLocale", "errors"], [63, 3, 1, "c.PyUnicode_EncodeLocale", "unicode"]], "PyUnicode_FSConverter": [[63, 3, 1, "c.PyUnicode_FSConverter", "obj"], [63, 3, 1, "c.PyUnicode_FSConverter", "result"]], "PyUnicode_FSDecoder": [[63, 3, 1, "c.PyUnicode_FSDecoder", "obj"], [63, 3, 1, "c.PyUnicode_FSDecoder", "result"]], "PyUnicode_Fill": [[63, 3, 1, "c.PyUnicode_Fill", "fill_char"], [63, 3, 1, "c.PyUnicode_Fill", "length"], [63, 3, 1, "c.PyUnicode_Fill", "start"], [63, 3, 1, "c.PyUnicode_Fill", "unicode"]], "PyUnicode_Find": [[63, 3, 1, "c.PyUnicode_Find", "direction"], [63, 3, 1, "c.PyUnicode_Find", "end"], [63, 3, 1, "c.PyUnicode_Find", "start"], [63, 3, 1, "c.PyUnicode_Find", "substr"], [63, 3, 1, "c.PyUnicode_Find", "unicode"]], "PyUnicode_FindChar": [[63, 3, 1, "c.PyUnicode_FindChar", "ch"], [63, 3, 1, "c.PyUnicode_FindChar", "direction"], [63, 3, 1, "c.PyUnicode_FindChar", "end"], [63, 3, 1, "c.PyUnicode_FindChar", "start"], [63, 3, 1, "c.PyUnicode_FindChar", "unicode"]], "PyUnicode_Format": [[63, 3, 1, "c.PyUnicode_Format", "args"], [63, 3, 1, "c.PyUnicode_Format", "format"]], "PyUnicode_FromEncodedObject": [[63, 3, 1, "c.PyUnicode_FromEncodedObject", "encoding"], [63, 3, 1, "c.PyUnicode_FromEncodedObject", "errors"], [63, 3, 1, "c.PyUnicode_FromEncodedObject", "obj"]], "PyUnicode_FromFormat": [[63, 3, 1, "c.PyUnicode_FromFormat", "format"]], "PyUnicode_FromFormatV": [[63, 3, 1, "c.PyUnicode_FromFormatV", "format"], [63, 3, 1, "c.PyUnicode_FromFormatV", "vargs"]], "PyUnicode_FromKindAndData": [[63, 3, 1, "c.PyUnicode_FromKindAndData", "buffer"], [63, 3, 1, "c.PyUnicode_FromKindAndData", "kind"], [63, 3, 1, "c.PyUnicode_FromKindAndData", "size"]], "PyUnicode_FromObject": [[63, 3, 1, "c.PyUnicode_FromObject", "obj"]], "PyUnicode_FromString": [[63, 3, 1, "c.PyUnicode_FromString", "str"]], "PyUnicode_FromStringAndSize": [[63, 3, 1, "c.PyUnicode_FromStringAndSize", "size"], [63, 3, 1, "c.PyUnicode_FromStringAndSize", "str"]], "PyUnicode_FromWideChar": [[63, 3, 1, "c.PyUnicode_FromWideChar", "size"], [63, 3, 1, "c.PyUnicode_FromWideChar", "wstr"]], "PyUnicode_GET_LENGTH": [[63, 3, 1, "c.PyUnicode_GET_LENGTH", "unicode"]], "PyUnicode_GetLength": [[63, 3, 1, "c.PyUnicode_GetLength", "unicode"]], "PyUnicode_InternFromString": [[63, 3, 1, "c.PyUnicode_InternFromString", "str"]], "PyUnicode_InternInPlace": [[63, 3, 1, "c.PyUnicode_InternInPlace", "p_unicode"]], "PyUnicode_IsIdentifier": [[63, 3, 1, "c.PyUnicode_IsIdentifier", "unicode"]], "PyUnicode_Join": [[63, 3, 1, "c.PyUnicode_Join", "separator"], [63, 3, 1, "c.PyUnicode_Join", "seq"]], "PyUnicode_KIND": [[63, 3, 1, "c.PyUnicode_KIND", "unicode"]], "PyUnicode_MAX_CHAR_VALUE": [[63, 3, 1, "c.PyUnicode_MAX_CHAR_VALUE", "unicode"]], "PyUnicode_New": [[63, 3, 1, "c.PyUnicode_New", "maxchar"], [63, 3, 1, "c.PyUnicode_New", "size"]], "PyUnicode_READ": [[63, 3, 1, "c.PyUnicode_READ", "data"], [63, 3, 1, "c.PyUnicode_READ", "index"], [63, 3, 1, "c.PyUnicode_READ", "kind"]], "PyUnicode_READY": [[63, 3, 1, "c.PyUnicode_READY", "unicode"]], "PyUnicode_READ_CHAR": [[63, 3, 1, "c.PyUnicode_READ_CHAR", "index"], [63, 3, 1, "c.PyUnicode_READ_CHAR", "unicode"]], "PyUnicode_ReadChar": [[63, 3, 1, "c.PyUnicode_ReadChar", "index"], [63, 3, 1, "c.PyUnicode_ReadChar", "unicode"]], "PyUnicode_Replace": [[63, 3, 1, "c.PyUnicode_Replace", "maxcount"], [63, 3, 1, "c.PyUnicode_Replace", "replstr"], [63, 3, 1, "c.PyUnicode_Replace", "substr"], [63, 3, 1, "c.PyUnicode_Replace", "unicode"]], "PyUnicode_RichCompare": [[63, 3, 1, "c.PyUnicode_RichCompare", "left"], [63, 3, 1, "c.PyUnicode_RichCompare", "op"], [63, 3, 1, "c.PyUnicode_RichCompare", "right"]], "PyUnicode_Split": [[63, 3, 1, "c.PyUnicode_Split", "maxsplit"], [63, 3, 1, "c.PyUnicode_Split", "sep"], [63, 3, 1, "c.PyUnicode_Split", "unicode"]], "PyUnicode_Splitlines": [[63, 3, 1, "c.PyUnicode_Splitlines", "keepends"], [63, 3, 1, "c.PyUnicode_Splitlines", "unicode"]], "PyUnicode_Substring": [[63, 3, 1, "c.PyUnicode_Substring", "end"], [63, 3, 1, "c.PyUnicode_Substring", "start"], [63, 3, 1, "c.PyUnicode_Substring", "unicode"]], "PyUnicode_Tailmatch": [[63, 3, 1, "c.PyUnicode_Tailmatch", "direction"], [63, 3, 1, "c.PyUnicode_Tailmatch", "end"], [63, 3, 1, "c.PyUnicode_Tailmatch", "start"], [63, 3, 1, "c.PyUnicode_Tailmatch", "substr"], [63, 3, 1, "c.PyUnicode_Tailmatch", "unicode"]], "PyUnicode_Translate": [[63, 3, 1, "c.PyUnicode_Translate", "errors"], [63, 3, 1, "c.PyUnicode_Translate", "table"], [63, 3, 1, "c.PyUnicode_Translate", "unicode"]], "PyUnicode_WRITE": [[63, 3, 1, "c.PyUnicode_WRITE", "data"], [63, 3, 1, "c.PyUnicode_WRITE", "index"], [63, 3, 1, "c.PyUnicode_WRITE", "kind"], [63, 3, 1, "c.PyUnicode_WRITE", "value"]], "PyUnicode_WriteChar": [[63, 3, 1, "c.PyUnicode_WriteChar", "character"], [63, 3, 1, "c.PyUnicode_WriteChar", "index"], [63, 3, 1, "c.PyUnicode_WriteChar", "unicode"]], "PyUnstable_Code_GetExtra": [[13, 3, 1, "c.PyUnstable_Code_GetExtra", "code"], [13, 3, 1, "c.PyUnstable_Code_GetExtra", "extra"], [13, 3, 1, "c.PyUnstable_Code_GetExtra", "index"]], "PyUnstable_Code_New": [[13, 3, 1, "c.PyUnstable_Code_New", "argcount"], [13, 3, 1, "c.PyUnstable_Code_New", "cellvars"], [13, 3, 1, "c.PyUnstable_Code_New", "code"], [13, 3, 1, "c.PyUnstable_Code_New", "consts"], [13, 3, 1, "c.PyUnstable_Code_New", "exceptiontable"], [13, 3, 1, "c.PyUnstable_Code_New", "filename"], [13, 3, 1, "c.PyUnstable_Code_New", "firstlineno"], [13, 3, 1, "c.PyUnstable_Code_New", "flags"], [13, 3, 1, "c.PyUnstable_Code_New", "freevars"], [13, 3, 1, "c.PyUnstable_Code_New", "kwonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_New", "linetable"], [13, 3, 1, "c.PyUnstable_Code_New", "name"], [13, 3, 1, "c.PyUnstable_Code_New", "names"], [13, 3, 1, "c.PyUnstable_Code_New", "nlocals"], [13, 3, 1, "c.PyUnstable_Code_New", "qualname"], [13, 3, 1, "c.PyUnstable_Code_New", "stacksize"], [13, 3, 1, "c.PyUnstable_Code_New", "varnames"]], "PyUnstable_Code_NewWithPosOnlyArgs": [[13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "argcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "cellvars"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "code"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "consts"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "exceptiontable"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "filename"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "firstlineno"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "flags"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "freevars"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "kwonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "linetable"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "name"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "names"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "nlocals"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "posonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "qualname"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "stacksize"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "varnames"]], "PyUnstable_Code_SetExtra": [[13, 3, 1, "c.PyUnstable_Code_SetExtra", "code"], [13, 3, 1, "c.PyUnstable_Code_SetExtra", "extra"], [13, 3, 1, "c.PyUnstable_Code_SetExtra", "index"]], "PyUnstable_Eval_RequestCodeExtraIndex": [[13, 3, 1, "c.PyUnstable_Eval_RequestCodeExtraIndex", "free"]], "PyUnstable_Exc_PrepReraiseStar": [[23, 3, 1, "c.PyUnstable_Exc_PrepReraiseStar", "excs"], [23, 3, 1, "c.PyUnstable_Exc_PrepReraiseStar", "orig"]], "PyUnstable_GC_VisitObjects": [[28, 3, 1, "c.PyUnstable_GC_VisitObjects", "arg"], [28, 3, 1, "c.PyUnstable_GC_VisitObjects", "callback"]], "PyUnstable_InterpreterFrame_GetCode": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetCode", "frame"]], "PyUnstable_InterpreterFrame_GetLasti": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetLasti", "frame"]], "PyUnstable_InterpreterFrame_GetLine": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetLine", "frame"]], "PyUnstable_Long_CompactValue": [[38, 3, 1, "c.PyUnstable_Long_CompactValue", "op"]], "PyUnstable_Long_IsCompact": [[38, 3, 1, "c.PyUnstable_Long_IsCompact", "op"]], "PyUnstable_Object_GC_NewWithExtraData": [[28, 3, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "extra_size"], [28, 3, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "type"]], "PyUnstable_Type_AssignVersionTag": [[60, 3, 1, "c.PyUnstable_Type_AssignVersionTag", "type"]], "PyUnstable_WritePerfMapEntry": [[50, 3, 1, "c.PyUnstable_WritePerfMapEntry", "code_addr"], [50, 3, 1, "c.PyUnstable_WritePerfMapEntry", "code_size"], [50, 3, 1, "c.PyUnstable_WritePerfMapEntry", "entry_name"]], "PyVarObject": [[62, 0, 1, "c.PyVarObject.ob_size", "ob_size"]], "PyVectorcall_Call": [[10, 3, 1, "c.PyVectorcall_Call", "callable"], [10, 3, 1, "c.PyVectorcall_Call", "dict"], [10, 3, 1, "c.PyVectorcall_Call", "tuple"]], "PyVectorcall_Function": [[10, 3, 1, "c.PyVectorcall_Function", "op"]], "PyVectorcall_NARGS": [[10, 3, 1, "c.PyVectorcall_NARGS", "nargsf"]], "PyWeakref_Check": [[66, 3, 1, "c.PyWeakref_Check", "ob"]], "PyWeakref_CheckProxy": [[66, 3, 1, "c.PyWeakref_CheckProxy", "ob"]], "PyWeakref_CheckRef": [[66, 3, 1, "c.PyWeakref_CheckRef", "ob"]], "PyWeakref_GET_OBJECT": [[66, 3, 1, "c.PyWeakref_GET_OBJECT", "ref"]], "PyWeakref_GetObject": [[66, 3, 1, "c.PyWeakref_GetObject", "ref"]], "PyWeakref_NewProxy": [[66, 3, 1, "c.PyWeakref_NewProxy", "callback"], [66, 3, 1, "c.PyWeakref_NewProxy", "ob"]], "PyWeakref_NewRef": [[66, 3, 1, "c.PyWeakref_NewRef", "callback"], [66, 3, 1, "c.PyWeakref_NewRef", "ob"]], "PyWideStringList": [[33, 0, 1, "c.PyWideStringList.items", "items"], [33, 0, 1, "c.PyWideStringList.length", "length"]], "PyWideStringList_Append": [[33, 3, 1, "c.PyWideStringList_Append", "item"], [33, 3, 1, "c.PyWideStringList_Append", "list"]], "PyWideStringList_Insert": [[33, 3, 1, "c.PyWideStringList_Insert", "index"], [33, 3, 1, "c.PyWideStringList_Insert", "item"], [33, 3, 1, "c.PyWideStringList_Insert", "list"]], "Py_AddPendingCall": [[32, 3, 1, "c.Py_AddPendingCall", "arg"], [32, 3, 1, "c.Py_AddPendingCall", "func"]], "Py_AtExit": [[58, 3, 1, "c.Py_AtExit", "func"]], "Py_BuildValue": [[5, 3, 1, "c.Py_BuildValue", "format"]], "Py_BytesMain": [[65, 3, 1, "c.Py_BytesMain", "argc"], [65, 3, 1, "c.Py_BytesMain", "argv"]], "Py_CLEAR": [[51, 3, 1, "c.Py_CLEAR", "o"]], "Py_CompileString": [[65, 3, 1, "c.Py_CompileString", "filename"], [65, 3, 1, "c.Py_CompileString", "start"], [65, 3, 1, "c.Py_CompileString", "str"]], "Py_CompileStringExFlags": [[65, 3, 1, "c.Py_CompileStringExFlags", "filename"], [65, 3, 1, "c.Py_CompileStringExFlags", "flags"], [65, 3, 1, "c.Py_CompileStringExFlags", "optimize"], [65, 3, 1, "c.Py_CompileStringExFlags", "start"], [65, 3, 1, "c.Py_CompileStringExFlags", "str"]], "Py_CompileStringFlags": [[65, 3, 1, "c.Py_CompileStringFlags", "filename"], [65, 3, 1, "c.Py_CompileStringFlags", "flags"], [65, 3, 1, "c.Py_CompileStringFlags", "start"], [65, 3, 1, "c.Py_CompileStringFlags", "str"]], "Py_CompileStringObject": [[65, 3, 1, "c.Py_CompileStringObject", "filename"], [65, 3, 1, "c.Py_CompileStringObject", "flags"], [65, 3, 1, "c.Py_CompileStringObject", "optimize"], [65, 3, 1, "c.Py_CompileStringObject", "start"], [65, 3, 1, "c.Py_CompileStringObject", "str"]], "Py_DECREF": [[51, 3, 1, "c.Py_DECREF", "o"]], "Py_DecRef": [[51, 3, 1, "c.Py_DecRef", "o"]], "Py_DecodeLocale": [[58, 3, 1, "c.Py_DecodeLocale", "arg"], [58, 3, 1, "c.Py_DecodeLocale", "size"]], "Py_EncodeLocale": [[58, 3, 1, "c.Py_EncodeLocale", "error_pos"], [58, 3, 1, "c.Py_EncodeLocale", "text"]], "Py_EndInterpreter": [[32, 3, 1, "c.Py_EndInterpreter", "tstate"]], "Py_EnterRecursiveCall": [[23, 3, 1, "c.Py_EnterRecursiveCall", "where"]], "Py_Exit": [[58, 3, 1, "c.Py_Exit", "status"]], "Py_ExitStatusException": [[33, 3, 1, "c.Py_ExitStatusException", "status"]], "Py_FatalError": [[58, 3, 1, "c.Py_FatalError", "message"]], "Py_FdIsInteractive": [[58, 3, 1, "c.Py_FdIsInteractive", "filename"], [58, 3, 1, "c.Py_FdIsInteractive", "fp"]], "Py_GenericAlias": [[61, 3, 1, "c.Py_GenericAlias", "args"], [61, 3, 1, "c.Py_GenericAlias", "origin"]], "Py_GetArgcArgv": [[33, 3, 1, "c.Py_GetArgcArgv", "argc"], [33, 3, 1, "c.Py_GetArgcArgv", "argv"]], "Py_INCREF": [[51, 3, 1, "c.Py_INCREF", "o"]], "Py_IS_TYPE": [[57, 3, 1, "c.Py_IS_TYPE", "o"], [57, 3, 1, "c.Py_IS_TYPE", "type"]], "Py_IncRef": [[51, 3, 1, "c.Py_IncRef", "o"]], "Py_InitializeEx": [[32, 3, 1, "c.Py_InitializeEx", "initsigs"]], "Py_InitializeFromConfig": [[33, 3, 1, "c.Py_InitializeFromConfig", "config"]], "Py_Is": [[57, 3, 1, "c.Py_Is", "x"], [57, 3, 1, "c.Py_Is", "y"]], "Py_IsFalse": [[57, 3, 1, "c.Py_IsFalse", "x"]], "Py_IsNone": [[57, 3, 1, "c.Py_IsNone", "x"]], "Py_IsTrue": [[57, 3, 1, "c.Py_IsTrue", "x"]], "Py_Main": [[65, 3, 1, "c.Py_Main", "argc"], [65, 3, 1, "c.Py_Main", "argv"]], "Py_NewInterpreterFromConfig": [[32, 3, 1, "c.Py_NewInterpreterFromConfig", "config"], [32, 3, 1, "c.Py_NewInterpreterFromConfig", "tstate_p"]], "Py_NewRef": [[51, 3, 1, "c.Py_NewRef", "o"]], "Py_PreInitialize": [[33, 3, 1, "c.Py_PreInitialize", "preconfig"]], "Py_PreInitializeFromArgs": [[33, 3, 1, "c.Py_PreInitializeFromArgs", "argc"], [33, 3, 1, "c.Py_PreInitializeFromArgs", "argv"], [33, 3, 1, "c.Py_PreInitializeFromArgs", "preconfig"]], "Py_PreInitializeFromBytesArgs": [[33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argc"], [33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argv"], [33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "preconfig"]], "Py_REFCNT": [[51, 3, 1, "c.Py_REFCNT", "o"]], "Py_ReprEnter": [[23, 3, 1, "c.Py_ReprEnter", "object"]], "Py_ReprLeave": [[23, 3, 1, "c.Py_ReprLeave", "object"]], "Py_SET_REFCNT": [[51, 3, 1, "c.Py_SET_REFCNT", "o"], [51, 3, 1, "c.Py_SET_REFCNT", "refcnt"]], "Py_SET_SIZE": [[57, 3, 1, "c.Py_SET_SIZE", "o"], [57, 3, 1, "c.Py_SET_SIZE", "size"]], "Py_SET_TYPE": [[57, 3, 1, "c.Py_SET_TYPE", "o"], [57, 3, 1, "c.Py_SET_TYPE", "type"]], "Py_SIZE": [[57, 3, 1, "c.Py_SIZE", "o"]], "Py_SetProgramName": [[32, 3, 1, "c.Py_SetProgramName", "name"]], "Py_SetPythonHome": [[32, 3, 1, "c.Py_SetPythonHome", "home"]], "Py_SetStandardStreamEncoding": [[32, 3, 1, "c.Py_SetStandardStreamEncoding", "encoding"], [32, 3, 1, "c.Py_SetStandardStreamEncoding", "errors"]], "Py_TYPE": [[57, 3, 1, "c.Py_TYPE", "o"]], "Py_UNICODE_ISALNUM": [[63, 3, 1, "c.Py_UNICODE_ISALNUM", "ch"]], "Py_UNICODE_ISALPHA": [[63, 3, 1, "c.Py_UNICODE_ISALPHA", "ch"]], "Py_UNICODE_ISDECIMAL": [[63, 3, 1, "c.Py_UNICODE_ISDECIMAL", "ch"]], "Py_UNICODE_ISDIGIT": [[63, 3, 1, "c.Py_UNICODE_ISDIGIT", "ch"]], "Py_UNICODE_ISLINEBREAK": [[63, 3, 1, "c.Py_UNICODE_ISLINEBREAK", "ch"]], "Py_UNICODE_ISLOWER": [[63, 3, 1, "c.Py_UNICODE_ISLOWER", "ch"]], "Py_UNICODE_ISNUMERIC": [[63, 3, 1, "c.Py_UNICODE_ISNUMERIC", "ch"]], "Py_UNICODE_ISPRINTABLE": [[63, 3, 1, "c.Py_UNICODE_ISPRINTABLE", "ch"]], "Py_UNICODE_ISSPACE": [[63, 3, 1, "c.Py_UNICODE_ISSPACE", "ch"]], "Py_UNICODE_ISTITLE": [[63, 3, 1, "c.Py_UNICODE_ISTITLE", "ch"]], "Py_UNICODE_ISUPPER": [[63, 3, 1, "c.Py_UNICODE_ISUPPER", "ch"]], "Py_UNICODE_IS_HIGH_SURROGATE": [[63, 3, 1, "c.Py_UNICODE_IS_HIGH_SURROGATE", "ch"]], "Py_UNICODE_IS_LOW_SURROGATE": [[63, 3, 1, "c.Py_UNICODE_IS_LOW_SURROGATE", "ch"]], "Py_UNICODE_IS_SURROGATE": [[63, 3, 1, "c.Py_UNICODE_IS_SURROGATE", "ch"]], "Py_UNICODE_JOIN_SURROGATES": [[63, 3, 1, "c.Py_UNICODE_JOIN_SURROGATES", "high"], [63, 3, 1, "c.Py_UNICODE_JOIN_SURROGATES", "low"]], "Py_UNICODE_TODECIMAL": [[63, 3, 1, "c.Py_UNICODE_TODECIMAL", "ch"]], "Py_UNICODE_TODIGIT": [[63, 3, 1, "c.Py_UNICODE_TODIGIT", "ch"]], "Py_UNICODE_TOLOWER": [[63, 3, 1, "c.Py_UNICODE_TOLOWER", "ch"]], "Py_UNICODE_TONUMERIC": [[63, 3, 1, "c.Py_UNICODE_TONUMERIC", "ch"]], "Py_UNICODE_TOTITLE": [[63, 3, 1, "c.Py_UNICODE_TOTITLE", "ch"]], "Py_UNICODE_TOUPPER": [[63, 3, 1, "c.Py_UNICODE_TOUPPER", "ch"]], "Py_VISIT": [[28, 3, 1, "c.Py_VISIT", "o"]], "Py_VaBuildValue": [[5, 3, 1, "c.Py_VaBuildValue", "format"], [5, 3, 1, "c.Py_VaBuildValue", "vargs"]], "Py_XDECREF": [[51, 3, 1, "c.Py_XDECREF", "o"]], "Py_XINCREF": [[51, 3, 1, "c.Py_XINCREF", "o"]], "Py_XNewRef": [[51, 3, 1, "c.Py_XNewRef", "o"]], "Py_buffer": [[7, 0, 1, "c.Py_buffer.buf", "buf"], [7, 0, 1, "c.Py_buffer.format", "format"], [7, 0, 1, "c.Py_buffer.internal", "internal"], [7, 0, 1, "c.Py_buffer.itemsize", "itemsize"], [7, 0, 1, "c.Py_buffer.len", "len"], [7, 0, 1, "c.Py_buffer.ndim", "ndim"], [7, 0, 1, "c.Py_buffer.obj", "obj"], [7, 0, 1, "c.Py_buffer.readonly", "readonly"], [7, 0, 1, "c.Py_buffer.shape", "shape"], [7, 0, 1, "c.Py_buffer.strides", "strides"], [7, 0, 1, "c.Py_buffer.suboffsets", "suboffsets"]], "Py_mod_create": [[44, 2, 1, "c.Py_mod_create.create_module", "create_module"]], "Py_mod_create.create_module": [[44, 3, 1, "c.Py_mod_create.create_module", "def"], [44, 3, 1, "c.Py_mod_create.create_module", "spec"]], "Py_mod_exec": [[44, 2, 1, "c.Py_mod_exec.exec_module", "exec_module"]], "Py_mod_exec.exec_module": [[44, 3, 1, "c.Py_mod_exec.exec_module", "module"]], "_PyBytes_Resize": [[9, 3, 1, "c._PyBytes_Resize", "bytes"], [9, 3, 1, "c._PyBytes_Resize", "newsize"]], "_PyInterpreterState_GetEvalFrameFunc": [[32, 3, 1, "c._PyInterpreterState_GetEvalFrameFunc", "interp"]], "_PyInterpreterState_SetEvalFrameFunc": [[32, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "eval_frame"], [32, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "interp"]], "_PyObject_GetDictPtr": [[48, 3, 1, "c._PyObject_GetDictPtr", "obj"]], "_PyObject_New": [[3, 3, 1, "c._PyObject_New", "type"]], "_PyObject_NewVar": [[3, 3, 1, "c._PyObject_NewVar", "size"], [3, 3, 1, "c._PyObject_NewVar", "type"]], "_PyTuple_Resize": [[59, 3, 1, "c._PyTuple_Resize", "newsize"], [59, 3, 1, "c._PyTuple_Resize", "p"]], "_Py_c_diff": [[15, 3, 1, "c._Py_c_diff", "left"], [15, 3, 1, "c._Py_c_diff", "right"]], "_Py_c_neg": [[15, 3, 1, "c._Py_c_neg", "num"]], "_Py_c_pow": [[15, 3, 1, "c._Py_c_pow", "exp"], [15, 3, 1, "c._Py_c_pow", "num"]], "_Py_c_prod": [[15, 3, 1, "c._Py_c_prod", "left"], [15, 3, 1, "c._Py_c_prod", "right"]], "_Py_c_quot": [[15, 3, 1, "c._Py_c_quot", "dividend"], [15, 3, 1, "c._Py_c_quot", "divisor"]], "_Py_c_sum": [[15, 3, 1, "c._Py_c_sum", "left"], [15, 3, 1, "c._Py_c_sum", "right"]], "_inittab": [[30, 0, 1, "c._inittab.name", "name"]], "BaseException": [[210, 7, 1, "", "__cause__"], [210, 7, 1, "", "__context__"], [210, 7, 1, "", "__notes__"], [210, 7, 1, "", "__suppress_context__"], [210, 7, 1, "", "__traceback__"], [210, 8, 1, "", "add_note"], [210, 7, 1, "", "args"], [210, 8, 1, "", "with_traceback"]], "BaseExceptionGroup": [[210, 8, 1, "", "derive"], [210, 7, 1, "", "exceptions"], [210, 7, 1, "", "message"], [210, 8, 1, "", "split"], [210, 8, 1, "", "subgroup"]], "BlockingIOError": [[210, 7, 1, "", "characters_written"]], "ImportError": [[210, 7, 1, "", "name"], [210, 7, 1, "", "path"]], "OSError": [[210, 7, 1, "", "errno"], [210, 7, 1, "", "filename"], [210, 7, 1, "", "filename2"], [210, 7, 1, "", "strerror"], [210, 7, 1, "", "winerror"]], "StopIteration": [[210, 7, 1, "", "value"]], "SyntaxError": [[210, 7, 1, "", "end_lineno"], [210, 7, 1, "", "end_offset"], [210, 7, 1, "", "filename"], [210, 7, 1, "", "lineno"], [210, 7, 1, "", "offset"], [210, 7, 1, "", "text"]], "SystemExit": [[210, 7, 1, "", "code"]], "UnicodeError": [[210, 7, 1, "", "encoding"], [210, 7, 1, "", "end"], [210, 7, 1, "", "object"], [210, 7, 1, "", "reason"], [210, 7, 1, "", "start"]], "__future__": [[110, 11, 1, "future__._Feature", "_Feature"]], "__future__._Feature": [[110, 7, 1, "future__._Feature.compiler_flag", "compiler_flag"], [110, 8, 1, "future__._Feature.getMandatoryRelease", "getMandatoryRelease"], [110, 8, 1, "future__._Feature.getOptionalRelease", "getOptionalRelease"]], "_thread": [[112, 9, 1, "thread.LockType", "LockType"], [112, 9, 1, "thread.TIMEOUT_MAX", "TIMEOUT_MAX"], [112, 12, 1, "thread.allocate_lock", "allocate_lock"], [112, 6, 1, "thread.error", "error"], [112, 12, 1, "thread.exit", "exit"], [112, 12, 1, "thread.get_ident", "get_ident"], [112, 12, 1, "thread.get_native_id", "get_native_id"], [112, 12, 1, "thread.interrupt_main", "interrupt_main"], [112, 12, 1, "thread.stack_size", "stack_size"], [112, 12, 1, "thread.start_new_thread", "start_new_thread"]], "_thread.lock": [[112, 8, 1, "thread.lock.acquire", "acquire"], [112, 8, 1, "thread.lock.locked", "locked"], [112, 8, 1, "thread.lock.release", "release"]], "_tkinter": [[366, 9, 1, "tkinter.EXCEPTION", "EXCEPTION"], [366, 9, 1, "tkinter.READABLE", "READABLE"], [366, 9, 1, "tkinter.WRITABLE", "WRITABLE"]], "_tkinter.Widget.tk": [[366, 8, 1, "tkinter.Widget.tk.createfilehandler", "createfilehandler"], [366, 8, 1, "tkinter.Widget.tk.deletefilehandler", "deletefilehandler"]], "abc": [[113, 11, 1, "", "ABC"], [113, 11, 1, "", "ABCMeta"], [113, 12, 1, "", "abstractclassmethod"], [113, 12, 1, "", "abstractmethod"], [113, 12, 1, "", "abstractproperty"], [113, 12, 1, "", "abstractstaticmethod"], [113, 12, 1, "", "get_cache_token"], [113, 12, 1, "", "update_abstractmethods"]], "abc.ABCMeta": [[113, 8, 1, "", "__subclasshook__"], [113, 8, 1, "", "register"]], "agen": [[427, 8, 1, "", "__anext__"], [427, 8, 1, "", "aclose"], [427, 8, 1, "", "asend"], [427, 8, 1, "", "athrow"]], "aifc.aifc": [[114, 8, 1, "", "aifc"], [114, 8, 1, "", "aiff"], [114, 8, 1, "", "close"], [114, 8, 1, "", "getcompname"], [114, 8, 1, "", "getcomptype"], [114, 8, 1, "", "getframerate"], [114, 8, 1, "", "getmark"], [114, 8, 1, "", "getmarkers"], [114, 8, 1, "", "getnchannels"], [114, 8, 1, "", "getnframes"], [114, 8, 1, "", "getparams"], [114, 8, 1, "", "getsampwidth"], [114, 8, 1, "", "readframes"], [114, 8, 1, "", "rewind"], [114, 8, 1, "", "setcomptype"], [114, 8, 1, "", "setframerate"], [114, 8, 1, "", "setmark"], [114, 8, 1, "", "setnchannels"], [114, 8, 1, "", "setnframes"], [114, 8, 1, "", "setparams"], [114, 8, 1, "", "setpos"], [114, 8, 1, "", "setsampwidth"], [114, 8, 1, "", "tell"], [114, 8, 1, "", "writeframes"], [114, 8, 1, "", "writeframesraw"]], "aifc": [[114, 12, 1, "", "open"]], "argparse": [[117, 11, 1, "", "Action"], [117, 11, 1, "", "ArgumentDefaultsHelpFormatter"], [117, 6, 1, "", "ArgumentError"], [117, 11, 1, "", "ArgumentParser"], [117, 6, 1, "", "ArgumentTypeError"], [117, 11, 1, "", "FileType"], [117, 11, 1, "", "MetavarTypeHelpFormatter"], [117, 11, 1, "", "Namespace"], [117, 11, 1, "", "RawDescriptionHelpFormatter"], [117, 11, 1, "", "RawTextHelpFormatter"]], "argparse.ArgumentParser": [[117, 8, 1, "", "add_argument"], [117, 8, 1, "", "add_argument_group"], [117, 8, 1, "", "add_mutually_exclusive_group"], [117, 8, 1, "", "add_subparsers"], [117, 8, 1, "", "convert_arg_line_to_args"], [117, 8, 1, "", "error"], [117, 8, 1, "", "exit"], [117, 8, 1, "", "format_help"], [117, 8, 1, "", "format_usage"], [117, 8, 1, "", "get_default"], [117, 8, 1, "", "parse_args"], [117, 8, 1, "", "parse_intermixed_args"], [117, 8, 1, "", "parse_known_args"], [117, 8, 1, "", "parse_known_intermixed_args"], [117, 8, 1, "", "print_help"], [117, 8, 1, "", "print_usage"], [117, 8, 1, "", "set_defaults"]], "array": [[118, 11, 1, "", "array"], [118, 9, 1, "", "typecodes"]], "array.array": [[118, 8, 1, "", "append"], [118, 8, 1, "", "buffer_info"], [118, 8, 1, "", "byteswap"], [118, 8, 1, "", "count"], [118, 8, 1, "", "extend"], [118, 8, 1, "", "frombytes"], [118, 8, 1, "", "fromfile"], [118, 8, 1, "", "fromlist"], [118, 8, 1, "", "fromunicode"], [118, 8, 1, "", "index"], [118, 8, 1, "", "insert"], [118, 7, 1, "", "itemsize"], [118, 8, 1, "", "pop"], [118, 8, 1, "", "remove"], [118, 8, 1, "", "reverse"], [118, 8, 1, "", "tobytes"], [118, 8, 1, "", "tofile"], [118, 8, 1, "", "tolist"], [118, 8, 1, "", "tounicode"], [118, 7, 1, "", "typecode"]], "ast": [[119, 11, 1, "", "AST"], [119, 11, 1, "", "Add"], [119, 11, 1, "", "And"], [119, 11, 1, "", "AnnAssign"], [119, 11, 1, "", "Assert"], [119, 11, 1, "", "Assign"], [119, 11, 1, "", "AsyncFor"], [119, 11, 1, "", "AsyncFunctionDef"], [119, 11, 1, "", "AsyncWith"], [119, 11, 1, "", "Attribute"], [119, 11, 1, "", "AugAssign"], [119, 11, 1, "", "Await"], [119, 11, 1, "", "BinOp"], [119, 11, 1, "", "BitAnd"], [119, 11, 1, "", "BitOr"], [119, 11, 1, "", "BitXor"], [119, 11, 1, "", "BoolOp"], [119, 11, 1, "", "Break"], [119, 11, 1, "", "Call"], [119, 11, 1, "", "ClassDef"], [119, 11, 1, "", "Compare"], [119, 11, 1, "", "Constant"], [119, 11, 1, "", "Continue"], [119, 11, 1, "", "Del"], [119, 11, 1, "", "Delete"], [119, 11, 1, "", "Dict"], [119, 11, 1, "", "DictComp"], [119, 11, 1, "", "Div"], [119, 11, 1, "", "Eq"], [119, 11, 1, "", "ExceptHandler"], [119, 11, 1, "", "Expr"], [119, 11, 1, "", "Expression"], [119, 11, 1, "", "FloorDiv"], [119, 11, 1, "", "For"], [119, 11, 1, "", "FormattedValue"], [119, 11, 1, "", "FunctionDef"], [119, 11, 1, "", "FunctionType"], [119, 11, 1, "", "GeneratorExp"], [119, 11, 1, "", "Global"], [119, 11, 1, "", "Gt"], [119, 11, 1, "", "GtE"], [119, 11, 1, "", "If"], [119, 11, 1, "", "IfExp"], [119, 11, 1, "", "Import"], [119, 11, 1, "", "ImportFrom"], [119, 11, 1, "", "In"], [119, 11, 1, "", "Interactive"], [119, 11, 1, "", "Invert"], [119, 11, 1, "", "Is"], [119, 11, 1, "", "IsNot"], [119, 11, 1, "", "JoinedStr"], [119, 11, 1, "", "LShift"], [119, 11, 1, "", "Lambda"], [119, 11, 1, "", "List"], [119, 11, 1, "", "ListComp"], [119, 11, 1, "", "Load"], [119, 11, 1, "", "Lt"], [119, 11, 1, "", "LtE"], [119, 11, 1, "", "MatMult"], [119, 11, 1, "", "Match"], [119, 11, 1, "", "MatchAs"], [119, 11, 1, "", "MatchClass"], [119, 11, 1, "", "MatchMapping"], [119, 11, 1, "", "MatchOr"], [119, 11, 1, "", "MatchSequence"], [119, 11, 1, "", "MatchSingleton"], [119, 11, 1, "", "MatchStar"], [119, 11, 1, "", "MatchValue"], [119, 11, 1, "", "Mod"], [119, 11, 1, "", "Module"], [119, 11, 1, "", "Mult"], [119, 11, 1, "", "Name"], [119, 11, 1, "", "NamedExpr"], [119, 11, 1, "", "NodeTransformer"], [119, 11, 1, "", "NodeVisitor"], [119, 11, 1, "", "Nonlocal"], [119, 11, 1, "", "Not"], [119, 11, 1, "", "NotEq"], [119, 11, 1, "", "NotIn"], [119, 11, 1, "", "Or"], [119, 11, 1, "", "ParamSpec"], [119, 11, 1, "", "Pass"], [119, 11, 1, "", "Pow"], [119, 9, 1, "", "PyCF_ALLOW_TOP_LEVEL_AWAIT"], [119, 9, 1, "", "PyCF_ONLY_AST"], [119, 9, 1, "", "PyCF_TYPE_COMMENTS"], [119, 11, 1, "", "RShift"], [119, 11, 1, "", "Raise"], [119, 11, 1, "", "Return"], [119, 11, 1, "", "Set"], [119, 11, 1, "", "SetComp"], [119, 11, 1, "", "Slice"], [119, 11, 1, "", "Starred"], [119, 11, 1, "", "Store"], [119, 11, 1, "", "Sub"], [119, 11, 1, "", "Subscript"], [119, 11, 1, "", "Try"], [119, 11, 1, "", "TryStar"], [119, 11, 1, "", "Tuple"], [119, 11, 1, "", "TypeAlias"], [119, 11, 1, "", "TypeVar"], [119, 11, 1, "", "TypeVarTuple"], [119, 11, 1, "", "UAdd"], [119, 11, 1, "", "USub"], [119, 11, 1, "", "UnaryOp"], [119, 11, 1, "", "While"], [119, 11, 1, "", "With"], [119, 11, 1, "", "Yield"], [119, 11, 1, "", "YieldFrom"], [119, 11, 1, "", "alias"], [119, 11, 1, "", "arg"], [119, 11, 1, "", "arguments"], [119, 11, 1, "", "comprehension"], [119, 12, 1, "", "copy_location"], [119, 12, 1, "", "dump"], [119, 12, 1, "", "fix_missing_locations"], [119, 12, 1, "", "get_docstring"], [119, 12, 1, "", "get_source_segment"], [119, 12, 1, "", "increment_lineno"], [119, 12, 1, "", "iter_child_nodes"], [119, 12, 1, "", "iter_fields"], [119, 11, 1, "", "keyword"], [119, 12, 1, "", "literal_eval"], [119, 11, 1, "", "match_case"], [119, 12, 1, "", "parse"], [119, 12, 1, "", "unparse"], [119, 12, 1, "", "walk"], [119, 11, 1, "", "withitem"], [119, 14, 1, "cmdoption-ast-h", "--help"], [119, 14, 1, "cmdoption-ast-a", "--include-attributes"], [119, 14, 1, "cmdoption-ast-indent", "--indent"], [119, 14, 1, "cmdoption-ast-mode", "--mode"], [119, 14, 1, "cmdoption-ast-no-type-comments", "--no-type-comments"], [119, 14, 1, "cmdoption-ast-a", "-a"], [119, 14, 1, "cmdoption-ast-h", "-h"], [119, 14, 1, "cmdoption-ast-i", "-i"], [119, 14, 1, "cmdoption-ast-m", "-m"]], "ast.AST": [[119, 7, 1, "", "_fields"], [119, 7, 1, "", "col_offset"], [119, 7, 1, "", "end_col_offset"], [119, 7, 1, "", "end_lineno"], [119, 7, 1, "", "lineno"]], "ast.Assign": [[119, 7, 1, "", "type_comment"]], "ast.For": [[119, 7, 1, "", "type_comment"]], "ast.FunctionDef": [[119, 7, 1, "", "type_comment"]], "ast.NodeVisitor": [[119, 8, 1, "", "generic_visit"], [119, 8, 1, "", "visit"], [119, 8, 1, "", "visit_Constant"]], "ast.With": [[119, 7, 1, "", "type_comment"]], "ast.arg": [[119, 7, 1, "", "type_comment"]], "asyncio": [[136, 9, 1, "", "ALL_COMPLETED"], [129, 11, 1, "", "AbstractChildWatcher"], [123, 11, 1, "", "AbstractEventLoop"], [129, 11, 1, "", "AbstractEventLoopPolicy"], [135, 11, 1, "", "Barrier"], [130, 11, 1, "", "BaseProtocol"], [130, 11, 1, "", "BaseTransport"], [135, 11, 1, "", "BoundedSemaphore"], [135, 6, 1, "", "BrokenBarrierError"], [130, 11, 1, "", "BufferedProtocol"], [124, 6, 1, "", "CancelledError"], [135, 11, 1, "", "Condition"], [130, 11, 1, "", "DatagramProtocol"], [130, 11, 1, "", "DatagramTransport"], [129, 11, 1, "", "DefaultEventLoopPolicy"], [135, 11, 1, "", "Event"], [136, 9, 1, "", "FIRST_COMPLETED"], [136, 9, 1, "", "FIRST_EXCEPTION"], [129, 11, 1, "", "FastChildWatcher"], [126, 11, 1, "", "Future"], [123, 11, 1, "", "Handle"], [124, 6, 1, "", "IncompleteReadError"], [124, 6, 1, "", "InvalidStateError"], [131, 11, 1, "", "LifoQueue"], [124, 6, 1, "", "LimitOverrunError"], [135, 11, 1, "", "Lock"], [129, 11, 1, "", "MultiLoopChildWatcher"], [129, 11, 1, "", "PidfdChildWatcher"], [131, 11, 1, "", "PriorityQueue"], [123, 11, 1, "", "ProactorEventLoop"], [130, 11, 1, "", "Protocol"], [131, 11, 1, "", "Queue"], [131, 6, 1, "", "QueueEmpty"], [131, 6, 1, "", "QueueFull"], [130, 11, 1, "", "ReadTransport"], [132, 11, 1, "", "Runner"], [129, 11, 1, "", "SafeChildWatcher"], [123, 11, 1, "", "SelectorEventLoop"], [135, 11, 1, "", "Semaphore"], [124, 6, 1, "", "SendfileNotAvailableError"], [123, 11, 1, "", "Server"], [133, 11, 1, "", "StreamReader"], [133, 11, 1, "", "StreamWriter"], [130, 11, 1, "", "SubprocessProtocol"], [130, 11, 1, "", "SubprocessTransport"], [136, 11, 1, "", "Task"], [136, 11, 1, "", "TaskGroup"], [129, 11, 1, "", "ThreadedChildWatcher"], [136, 11, 1, "", "Timeout"], [124, 6, 1, "", "TimeoutError"], [123, 11, 1, "", "TimerHandle"], [130, 11, 1, "", "Transport"], [129, 11, 1, "", "WindowsProactorEventLoopPolicy"], [129, 11, 1, "", "WindowsSelectorEventLoopPolicy"], [130, 11, 1, "", "WriteTransport"], [125, 12, 1, "", "_enter_task"], [125, 12, 1, "", "_leave_task"], [125, 12, 1, "", "_register_task"], [125, 12, 1, "", "_unregister_task"], [136, 12, 1, "", "all_tasks"], [136, 12, 1, "", "as_completed"], [136, 12, 1, "", "create_eager_task_factory"], [134, 12, 1, "", "create_subprocess_exec"], [134, 12, 1, "", "create_subprocess_shell"], [136, 12, 1, "", "create_task"], [136, 12, 1, "", "current_task"], [136, 12, 1, "", "eager_task_factory"], [126, 12, 1, "", "ensure_future"], [136, 12, 1, "", "gather"], [129, 12, 1, "", "get_child_watcher"], [123, 12, 1, "", "get_event_loop"], [129, 12, 1, "", "get_event_loop_policy"], [123, 12, 1, "", "get_running_loop"], [136, 12, 1, "", "iscoroutine"], [126, 12, 1, "", "isfuture"], [123, 12, 1, "", "new_event_loop"], [133, 12, 1, "", "open_connection"], [133, 12, 1, "", "open_unix_connection"], [132, 12, 1, "", "run"], [136, 12, 1, "", "run_coroutine_threadsafe"], [129, 12, 1, "", "set_child_watcher"], [123, 12, 1, "", "set_event_loop"], [129, 12, 1, "", "set_event_loop_policy"], [136, 12, 1, "", "shield"], [136, 12, 1, "", "sleep"], [133, 12, 1, "", "start_server"], [133, 12, 1, "", "start_unix_server"], [136, 12, 1, "", "timeout"], [136, 12, 1, "", "timeout_at"], [136, 12, 1, "", "to_thread"], [136, 12, 1, "", "wait"], [136, 12, 1, "", "wait_for"], [126, 12, 1, "", "wrap_future"]], "asyncio.AbstractChildWatcher": [[129, 8, 1, "", "add_child_handler"], [129, 8, 1, "", "attach_loop"], [129, 8, 1, "", "close"], [129, 8, 1, "", "is_active"], [129, 8, 1, "", "remove_child_handler"]], "asyncio.AbstractEventLoopPolicy": [[129, 8, 1, "", "get_child_watcher"], [129, 8, 1, "", "get_event_loop"], [129, 8, 1, "", "new_event_loop"], [129, 8, 1, "", "set_child_watcher"], [129, 8, 1, "", "set_event_loop"]], "asyncio.Barrier": [[135, 8, 1, "", "abort"], [135, 7, 1, "", "broken"], [135, 7, 1, "", "n_waiting"], [135, 7, 1, "", "parties"], [135, 8, 1, "", "reset"], [135, 8, 1, "", "wait"]], "asyncio.BaseProtocol": [[130, 8, 1, "", "connection_lost"], [130, 8, 1, "", "connection_made"], [130, 8, 1, "", "pause_writing"], [130, 8, 1, "", "resume_writing"]], "asyncio.BaseTransport": [[130, 8, 1, "", "close"], [130, 8, 1, "", "get_extra_info"], [130, 8, 1, "", "get_protocol"], [130, 8, 1, "", "is_closing"], [130, 8, 1, "", "set_protocol"]], "asyncio.BufferedProtocol": [[130, 8, 1, "", "buffer_updated"], [130, 8, 1, "", "eof_received"], [130, 8, 1, "", "get_buffer"]], "asyncio.Condition": [[135, 8, 1, "", "acquire"], [135, 8, 1, "", "locked"], [135, 8, 1, "", "notify"], [135, 8, 1, "", "notify_all"], [135, 8, 1, "", "release"], [135, 8, 1, "", "wait"], [135, 8, 1, "", "wait_for"]], "asyncio.DatagramProtocol": [[130, 8, 1, "", "datagram_received"], [130, 8, 1, "", "error_received"]], "asyncio.DatagramTransport": [[130, 8, 1, "", "abort"], [130, 8, 1, "", "sendto"]], "asyncio.Event": [[135, 8, 1, "", "clear"], [135, 8, 1, "", "is_set"], [135, 8, 1, "", "set"], [135, 8, 1, "", "wait"]], "asyncio.Future": [[125, 8, 1, "", "__init__"], [126, 8, 1, "", "add_done_callback"], [126, 8, 1, "", "cancel"], [126, 8, 1, "", "cancelled"], [126, 8, 1, "", "done"], [126, 8, 1, "", "exception"], [126, 8, 1, "", "get_loop"], [126, 8, 1, "", "remove_done_callback"], [126, 8, 1, "", "result"], [126, 8, 1, "", "set_exception"], [126, 8, 1, "", "set_result"]], "asyncio.Handle": [[123, 8, 1, "", "cancel"], [123, 8, 1, "", "cancelled"], [123, 8, 1, "", "get_context"]], "asyncio.IncompleteReadError": [[124, 7, 1, "", "expected"], [124, 7, 1, "", "partial"]], "asyncio.LimitOverrunError": [[124, 7, 1, "", "consumed"]], "asyncio.Lock": [[135, 8, 1, "", "acquire"], [135, 8, 1, "", "locked"], [135, 8, 1, "", "release"]], "asyncio.Protocol": [[130, 8, 1, "", "data_received"], [130, 8, 1, "", "eof_received"]], "asyncio.Queue": [[131, 8, 1, "", "empty"], [131, 8, 1, "", "full"], [131, 8, 1, "", "get"], [131, 8, 1, "", "get_nowait"], [131, 8, 1, "", "join"], [131, 7, 1, "", "maxsize"], [131, 8, 1, "", "put"], [131, 8, 1, "", "put_nowait"], [131, 8, 1, "", "qsize"], [131, 8, 1, "", "task_done"]], "asyncio.ReadTransport": [[130, 8, 1, "", "is_reading"], [130, 8, 1, "", "pause_reading"], [130, 8, 1, "", "resume_reading"]], "asyncio.Runner": [[132, 8, 1, "", "close"], [132, 8, 1, "", "get_loop"], [132, 8, 1, "", "run"]], "asyncio.Semaphore": [[135, 8, 1, "", "acquire"], [135, 8, 1, "", "locked"], [135, 8, 1, "", "release"]], "asyncio.Server": [[123, 8, 1, "", "close"], [123, 8, 1, "", "get_loop"], [123, 8, 1, "", "is_serving"], [123, 8, 1, "", "serve_forever"], [123, 7, 1, "", "sockets"], [123, 8, 1, "", "start_serving"], [123, 8, 1, "", "wait_closed"]], "asyncio.StreamReader": [[133, 8, 1, "", "at_eof"], [133, 8, 1, "", "feed_eof"], [133, 8, 1, "", "read"], [133, 8, 1, "", "readexactly"], [133, 8, 1, "", "readline"], [133, 8, 1, "", "readuntil"]], "asyncio.StreamWriter": [[133, 8, 1, "", "can_write_eof"], [133, 8, 1, "", "close"], [133, 8, 1, "", "drain"], [133, 8, 1, "", "get_extra_info"], [133, 8, 1, "", "is_closing"], [133, 8, 1, "", "start_tls"], [133, 7, 1, "", "transport"], [133, 8, 1, "", "wait_closed"], [133, 8, 1, "", "write"], [133, 8, 1, "", "write_eof"], [133, 8, 1, "", "writelines"]], "asyncio.SubprocessProtocol": [[130, 8, 1, "", "pipe_connection_lost"], [130, 8, 1, "", "pipe_data_received"], [130, 8, 1, "", "process_exited"]], "asyncio.SubprocessTransport": [[130, 8, 1, "", "close"], [130, 8, 1, "", "get_pid"], [130, 8, 1, "", "get_pipe_transport"], [130, 8, 1, "", "get_returncode"], [130, 8, 1, "", "kill"], [130, 8, 1, "", "send_signal"], [130, 8, 1, "", "terminate"]], "asyncio.Task": [[125, 8, 1, "", "__init__"], [136, 8, 1, "", "add_done_callback"], [136, 8, 1, "", "cancel"], [136, 8, 1, "", "cancelled"], [136, 8, 1, "", "cancelling"], [136, 8, 1, "", "done"], [136, 8, 1, "", "exception"], [136, 8, 1, "", "get_context"], [136, 8, 1, "", "get_coro"], [136, 8, 1, "", "get_name"], [136, 8, 1, "", "get_stack"], [136, 8, 1, "", "print_stack"], [136, 8, 1, "", "remove_done_callback"], [136, 8, 1, "", "result"], [136, 8, 1, "", "set_name"], [136, 8, 1, "", "uncancel"]], "asyncio.TaskGroup": [[136, 8, 1, "", "create_task"]], "asyncio.Timeout": [[136, 8, 1, "", "expired"], [136, 8, 1, "", "reschedule"], [136, 8, 1, "", "when"]], "asyncio.TimerHandle": [[123, 8, 1, "", "when"]], "asyncio.WriteTransport": [[130, 8, 1, "", "abort"], [130, 8, 1, "", "can_write_eof"], [130, 8, 1, "", "get_write_buffer_limits"], [130, 8, 1, "", "get_write_buffer_size"], [130, 8, 1, "", "set_write_buffer_limits"], [130, 8, 1, "", "write"], [130, 8, 1, "", "write_eof"], [130, 8, 1, "", "writelines"]], "asyncio.loop": [[123, 8, 1, "", "add_reader"], [123, 8, 1, "", "add_signal_handler"], [123, 8, 1, "", "add_writer"], [123, 8, 1, "", "call_at"], [123, 8, 1, "", "call_exception_handler"], [123, 8, 1, "", "call_later"], [123, 8, 1, "", "call_soon"], [123, 8, 1, "", "call_soon_threadsafe"], [123, 8, 1, "", "close"], [123, 8, 1, "", "connect_accepted_socket"], [123, 8, 1, "", "connect_read_pipe"], [123, 8, 1, "", "connect_write_pipe"], [123, 8, 1, "", "create_connection"], [123, 8, 1, "", "create_datagram_endpoint"], [123, 8, 1, "", "create_future"], [123, 8, 1, "", "create_server"], [123, 8, 1, "", "create_task"], [123, 8, 1, "", "create_unix_connection"], [123, 8, 1, "", "create_unix_server"], [123, 8, 1, "", "default_exception_handler"], [123, 8, 1, "", "get_debug"], [123, 8, 1, "", "get_exception_handler"], [123, 8, 1, "", "get_task_factory"], [123, 8, 1, "", "getaddrinfo"], [123, 8, 1, "", "getnameinfo"], [123, 8, 1, "", "is_closed"], [123, 8, 1, "", "is_running"], [123, 8, 1, "", "remove_reader"], [123, 8, 1, "", "remove_signal_handler"], [123, 8, 1, "", "remove_writer"], [123, 8, 1, "", "run_forever"], [123, 8, 1, "", "run_in_executor"], [123, 8, 1, "", "run_until_complete"], [123, 8, 1, "", "sendfile"], [123, 8, 1, "", "set_debug"], [123, 8, 1, "", "set_default_executor"], [123, 8, 1, "", "set_exception_handler"], [123, 8, 1, "", "set_task_factory"], [123, 8, 1, "", "shutdown_asyncgens"], [123, 8, 1, "", "shutdown_default_executor"], [123, 7, 1, "", "slow_callback_duration"], [123, 8, 1, "", "sock_accept"], [123, 8, 1, "", "sock_connect"], [123, 8, 1, "", "sock_recv"], [123, 8, 1, "", "sock_recv_into"], [123, 8, 1, "", "sock_recvfrom"], [123, 8, 1, "", "sock_recvfrom_into"], [123, 8, 1, "", "sock_sendall"], [123, 8, 1, "", "sock_sendfile"], [123, 8, 1, "", "sock_sendto"], [123, 8, 1, "", "start_tls"], [123, 8, 1, "", "stop"], [123, 8, 1, "", "subprocess_exec"], [123, 8, 1, "", "subprocess_shell"], [123, 8, 1, "", "time"]], "asyncio.subprocess": [[134, 9, 1, "", "DEVNULL"], [134, 9, 1, "", "PIPE"], [134, 11, 1, "", "Process"], [134, 9, 1, "", "STDOUT"]], "asyncio.subprocess.Process": [[134, 8, 1, "", "communicate"], [134, 8, 1, "", "kill"], [134, 7, 1, "", "pid"], [134, 7, 1, "", "returncode"], [134, 8, 1, "", "send_signal"], [134, 7, 1, "", "stderr"], [134, 7, 1, "", "stdin"], [134, 7, 1, "", "stdout"], [134, 8, 1, "", "terminate"], [134, 8, 1, "", "wait"]], "atexit": [[137, 12, 1, "", "register"], [137, 12, 1, "", "unregister"]], "audioop": [[138, 12, 1, "", "add"], [138, 12, 1, "", "adpcm2lin"], [138, 12, 1, "", "alaw2lin"], [138, 12, 1, "", "avg"], [138, 12, 1, "", "avgpp"], [138, 12, 1, "", "bias"], [138, 12, 1, "", "byteswap"], [138, 12, 1, "", "cross"], [138, 6, 1, "", "error"], [138, 12, 1, "", "findfactor"], [138, 12, 1, "", "findfit"], [138, 12, 1, "", "findmax"], [138, 12, 1, "", "getsample"], [138, 12, 1, "", "lin2adpcm"], [138, 12, 1, "", "lin2alaw"], [138, 12, 1, "", "lin2lin"], [138, 12, 1, "", "lin2ulaw"], [138, 12, 1, "", "max"], [138, 12, 1, "", "maxpp"], [138, 12, 1, "", "minmax"], [138, 12, 1, "", "mul"], [138, 12, 1, "", "ratecv"], [138, 12, 1, "", "reverse"], [138, 12, 1, "", "rms"], [138, 12, 1, "", "tomono"], [138, 12, 1, "", "tostereo"], [138, 12, 1, "", "ulaw2lin"]], "base64": [[140, 12, 1, "", "a85decode"], [140, 12, 1, "", "a85encode"], [140, 12, 1, "", "b16decode"], [140, 12, 1, "", "b16encode"], [140, 12, 1, "", "b32decode"], [140, 12, 1, "", "b32encode"], [140, 12, 1, "", "b32hexdecode"], [140, 12, 1, "", "b32hexencode"], [140, 12, 1, "", "b64decode"], [140, 12, 1, "", "b64encode"], [140, 12, 1, "", "b85decode"], [140, 12, 1, "", "b85encode"], [140, 12, 1, "", "decode"], [140, 12, 1, "", "decodebytes"], [140, 12, 1, "", "encode"], [140, 12, 1, "", "encodebytes"], [140, 12, 1, "", "standard_b64decode"], [140, 12, 1, "", "standard_b64encode"], [140, 12, 1, "", "urlsafe_b64decode"], [140, 12, 1, "", "urlsafe_b64encode"]], "bdb": [[141, 11, 1, "", "Bdb"], [141, 6, 1, "", "BdbQuit"], [141, 11, 1, "", "Breakpoint"], [141, 12, 1, "", "checkfuncname"], [141, 12, 1, "", "effective"], [141, 12, 1, "", "set_trace"]], "bdb.Bdb": [[141, 8, 1, "", "break_anywhere"], [141, 8, 1, "", "break_here"], [141, 8, 1, "", "canonic"], [141, 8, 1, "", "clear_all_breaks"], [141, 8, 1, "", "clear_all_file_breaks"], [141, 8, 1, "", "clear_bpbynumber"], [141, 8, 1, "", "clear_break"], [141, 8, 1, "", "dispatch_call"], [141, 8, 1, "", "dispatch_exception"], [141, 8, 1, "", "dispatch_line"], [141, 8, 1, "", "dispatch_return"], [141, 8, 1, "", "do_clear"], [141, 8, 1, "", "format_stack_entry"], [141, 8, 1, "", "get_all_breaks"], [141, 8, 1, "", "get_bpbynumber"], [141, 8, 1, "", "get_break"], [141, 8, 1, "", "get_breaks"], [141, 8, 1, "", "get_file_breaks"], [141, 8, 1, "", "get_stack"], [141, 8, 1, "", "is_skipped_line"], [141, 8, 1, "", "reset"], [141, 8, 1, "", "run"], [141, 8, 1, "", "runcall"], [141, 8, 1, "", "runctx"], [141, 8, 1, "", "runeval"], [141, 8, 1, "", "set_break"], [141, 8, 1, "", "set_continue"], [141, 8, 1, "", "set_next"], [141, 8, 1, "", "set_quit"], [141, 8, 1, "", "set_return"], [141, 8, 1, "", "set_step"], [141, 8, 1, "", "set_trace"], [141, 8, 1, "", "set_until"], [141, 8, 1, "", "stop_here"], [141, 8, 1, "", "trace_dispatch"], [141, 8, 1, "", "user_call"], [141, 8, 1, "", "user_exception"], [141, 8, 1, "", "user_line"], [141, 8, 1, "", "user_return"]], "bdb.Breakpoint": [[141, 7, 1, "", "bpbynumber"], [141, 8, 1, "", "bpformat"], [141, 7, 1, "", "bplist"], [141, 8, 1, "", "bpprint"], [141, 7, 1, "", "cond"], [141, 8, 1, "", "deleteMe"], [141, 8, 1, "", "disable"], [141, 8, 1, "", "enable"], [141, 7, 1, "", "enabled"], [141, 7, 1, "", "file"], [141, 7, 1, "", "funcname"], [141, 7, 1, "", "hits"], [141, 7, 1, "", "ignore"], [141, 7, 1, "", "line"], [141, 7, 1, "", "temporary"]], "binascii": [[143, 6, 1, "", "Error"], [143, 6, 1, "", "Incomplete"], [143, 12, 1, "", "a2b_base64"], [143, 12, 1, "", "a2b_hex"], [143, 12, 1, "", "a2b_qp"], [143, 12, 1, "", "a2b_uu"], [143, 12, 1, "", "b2a_base64"], [143, 12, 1, "", "b2a_hex"], [143, 12, 1, "", "b2a_qp"], [143, 12, 1, "", "b2a_uu"], [143, 12, 1, "", "crc32"], [143, 12, 1, "", "crc_hqx"], [143, 12, 1, "", "hexlify"], [143, 12, 1, "", "unhexlify"]], "bisect": [[144, 12, 1, "", "bisect"], [144, 12, 1, "", "bisect_left"], [144, 12, 1, "", "bisect_right"], [144, 12, 1, "", "insort"], [144, 12, 1, "", "insort_left"], [144, 12, 1, "", "insort_right"]], "bytearray": [[341, 8, 1, "", "capitalize"], [341, 8, 1, "", "center"], [341, 8, 1, "", "count"], [341, 8, 1, "", "decode"], [341, 8, 1, "", "endswith"], [341, 8, 1, "", "expandtabs"], [341, 8, 1, "", "find"], [341, 8, 1, "", "fromhex"], [341, 8, 1, "", "hex"], [341, 8, 1, "", "index"], [341, 8, 1, "", "isalnum"], [341, 8, 1, "", "isalpha"], [341, 8, 1, "", "isascii"], [341, 8, 1, "", "isdigit"], [341, 8, 1, "", "islower"], [341, 8, 1, "", "isspace"], [341, 8, 1, "", "istitle"], [341, 8, 1, "", "isupper"], [341, 8, 1, "", "join"], [341, 8, 1, "", "ljust"], [341, 8, 1, "", "lower"], [341, 8, 1, "", "lstrip"], [341, 8, 1, "", "maketrans"], [341, 8, 1, "", "partition"], [341, 8, 1, "", "removeprefix"], [341, 8, 1, "", "removesuffix"], [341, 8, 1, "", "replace"], [341, 8, 1, "", "rfind"], [341, 8, 1, "", "rindex"], [341, 8, 1, "", "rjust"], [341, 8, 1, "", "rpartition"], [341, 8, 1, "", "rsplit"], [341, 8, 1, "", "rstrip"], [341, 8, 1, "", "split"], [341, 8, 1, "", "splitlines"], [341, 8, 1, "", "startswith"], [341, 8, 1, "", "strip"], [341, 8, 1, "", "swapcase"], [341, 8, 1, "", "title"], [341, 8, 1, "", "translate"], [341, 8, 1, "", "upper"], [341, 8, 1, "", "zfill"]], "bytes": [[341, 8, 1, "", "capitalize"], [341, 8, 1, "", "center"], [341, 8, 1, "", "count"], [341, 8, 1, "", "decode"], [341, 8, 1, "", "endswith"], [341, 8, 1, "", "expandtabs"], [341, 8, 1, "", "find"], [341, 8, 1, "", "fromhex"], [341, 8, 1, "", "hex"], [341, 8, 1, "", "index"], [341, 8, 1, "", "isalnum"], [341, 8, 1, "", "isalpha"], [341, 8, 1, "", "isascii"], [341, 8, 1, "", "isdigit"], [341, 8, 1, "", "islower"], [341, 8, 1, "", "isspace"], [341, 8, 1, "", "istitle"], [341, 8, 1, "", "isupper"], [341, 8, 1, "", "join"], [341, 8, 1, "", "ljust"], [341, 8, 1, "", "lower"], [341, 8, 1, "", "lstrip"], [341, 8, 1, "", "maketrans"], [341, 8, 1, "", "partition"], [341, 8, 1, "", "removeprefix"], [341, 8, 1, "", "removesuffix"], [341, 8, 1, "", "replace"], [341, 8, 1, "", "rfind"], [341, 8, 1, "", "rindex"], [341, 8, 1, "", "rjust"], [341, 8, 1, "", "rpartition"], [341, 8, 1, "", "rsplit"], [341, 8, 1, "", "rstrip"], [341, 8, 1, "", "split"], [341, 8, 1, "", "splitlines"], [341, 8, 1, "", "startswith"], [341, 8, 1, "", "strip"], [341, 8, 1, "", "swapcase"], [341, 8, 1, "", "title"], [341, 8, 1, "", "translate"], [341, 8, 1, "", "upper"], [341, 8, 1, "", "zfill"]], "bz2": [[146, 11, 1, "", "BZ2Compressor"], [146, 11, 1, "", "BZ2Decompressor"], [146, 11, 1, "", "BZ2File"], [146, 12, 1, "", "compress"], [146, 12, 1, "", "decompress"], [146, 12, 1, "", "open"]], "bz2.BZ2Compressor": [[146, 8, 1, "", "compress"], [146, 8, 1, "", "flush"]], "bz2.BZ2Decompressor": [[146, 8, 1, "", "decompress"], [146, 7, 1, "", "eof"], [146, 7, 1, "", "needs_input"], [146, 7, 1, "", "unused_data"]], "bz2.BZ2File": [[146, 8, 1, "", "fileno"], [146, 8, 1, "", "peek"], [146, 8, 1, "", "read1"], [146, 8, 1, "", "readable"], [146, 8, 1, "", "readinto"], [146, 8, 1, "", "seekable"], [146, 8, 1, "", "writable"]], "calendar": [[147, 9, 1, "", "APRIL"], [147, 9, 1, "", "AUGUST"], [147, 11, 1, "", "Calendar"], [147, 9, 1, "", "DECEMBER"], [147, 11, 1, "", "Day"], [147, 9, 1, "", "FEBRUARY"], [147, 9, 1, "", "FRIDAY"], [147, 11, 1, "", "HTMLCalendar"], [147, 6, 1, "", "IllegalMonthError"], [147, 6, 1, "", "IllegalWeekdayError"], [147, 9, 1, "", "JANUARY"], [147, 9, 1, "", "JULY"], [147, 9, 1, "", "JUNE"], [147, 11, 1, "", "LocaleHTMLCalendar"], [147, 11, 1, "", "LocaleTextCalendar"], [147, 9, 1, "", "MARCH"], [147, 9, 1, "", "MAY"], [147, 9, 1, "", "MONDAY"], [147, 11, 1, "", "Month"], [147, 9, 1, "", "NOVEMBER"], [147, 9, 1, "", "OCTOBER"], [147, 9, 1, "", "SATURDAY"], [147, 9, 1, "", "SEPTEMBER"], [147, 9, 1, "", "SUNDAY"], [147, 9, 1, "", "THURSDAY"], [147, 9, 1, "", "TUESDAY"], [147, 11, 1, "", "TextCalendar"], [147, 9, 1, "", "WEDNESDAY"], [147, 12, 1, "", "calendar"], [147, 9, 1, "", "day_abbr"], [147, 9, 1, "", "day_name"], [147, 12, 1, "", "firstweekday"], [147, 12, 1, "", "isleap"], [147, 12, 1, "", "leapdays"], [147, 12, 1, "", "month"], [147, 9, 1, "", "month_abbr"], [147, 9, 1, "", "month_name"], [147, 12, 1, "", "monthcalendar"], [147, 12, 1, "", "monthrange"], [147, 12, 1, "", "prcal"], [147, 12, 1, "", "prmonth"], [147, 12, 1, "", "setfirstweekday"], [147, 12, 1, "", "timegm"], [147, 12, 1, "", "weekday"], [147, 12, 1, "", "weekheader"], [147, 14, 1, "cmdoption-calendar-css", "--css"], [147, 14, 1, "cmdoption-calendar-encoding", "--encoding"], [147, 14, 1, "cmdoption-calendar-help", "--help"], [147, 14, 1, "cmdoption-calendar-lines", "--lines"], [147, 14, 1, "cmdoption-calendar-locale", "--locale"], [147, 14, 1, "cmdoption-calendar-months", "--months"], [147, 14, 1, "cmdoption-calendar-spacing", "--spacing"], [147, 14, 1, "cmdoption-calendar-type", "--type"], [147, 14, 1, "cmdoption-calendar-width", "--width"], [147, 14, 1, "cmdoption-calendar-locale", "-L"], [147, 14, 1, "cmdoption-calendar-css", "-c"], [147, 14, 1, "cmdoption-calendar-encoding", "-e"], [147, 14, 1, "cmdoption-calendar-help", "-h"], [147, 14, 1, "cmdoption-calendar-lines", "-l"], [147, 14, 1, "cmdoption-calendar-months", "-m"], [147, 14, 1, "cmdoption-calendar-spacing", "-s"], [147, 14, 1, "cmdoption-calendar-type", "-t"], [147, 14, 1, "cmdoption-calendar-width", "-w"], [147, 14, 1, "cmdoption-calendar-arg-month", "month"], [147, 14, 1, "cmdoption-calendar-arg-year", "year"]], "calendar.Calendar": [[147, 8, 1, "", "itermonthdates"], [147, 8, 1, "", "itermonthdays"], [147, 8, 1, "", "itermonthdays2"], [147, 8, 1, "", "itermonthdays3"], [147, 8, 1, "", "itermonthdays4"], [147, 8, 1, "", "iterweekdays"], [147, 8, 1, "", "monthdatescalendar"], [147, 8, 1, "", "monthdays2calendar"], [147, 8, 1, "", "monthdayscalendar"], [147, 8, 1, "", "yeardatescalendar"], [147, 8, 1, "", "yeardays2calendar"], [147, 8, 1, "", "yeardayscalendar"]], "calendar.HTMLCalendar": [[147, 7, 1, "", "cssclass_month"], [147, 7, 1, "", "cssclass_month_head"], [147, 7, 1, "", "cssclass_noday"], [147, 7, 1, "", "cssclass_year"], [147, 7, 1, "", "cssclass_year_head"], [147, 7, 1, "", "cssclasses"], [147, 7, 1, "", "cssclasses_weekday_head"], [147, 8, 1, "", "formatmonth"], [147, 8, 1, "", "formatmonthname"], [147, 8, 1, "", "formatyear"], [147, 8, 1, "", "formatyearpage"]], "calendar.IllegalMonthError": [[147, 7, 1, "", "month"]], "calendar.IllegalWeekdayError": [[147, 7, 1, "", "weekday"]], "calendar.TextCalendar": [[147, 8, 1, "", "formatmonth"], [147, 8, 1, "", "formatyear"], [147, 8, 1, "", "prmonth"], [147, 8, 1, "", "pryear"]], "cgi.FieldStorage": [[148, 8, 1, "", "getfirst"], [148, 8, 1, "", "getlist"]], "cgi": [[148, 12, 1, "", "parse"], [148, 12, 1, "", "parse_header"], [148, 12, 1, "", "parse_multipart"], [148, 12, 1, "", "print_directory"], [148, 12, 1, "", "print_environ"], [148, 12, 1, "", "print_environ_usage"], [148, 12, 1, "", "print_form"], [148, 12, 1, "", "test"]], "cgitb": [[149, 12, 1, "", "enable"], [149, 12, 1, "", "handler"], [149, 12, 1, "", "html"], [149, 12, 1, "", "text"]], "chunk": [[150, 11, 1, "", "Chunk"]], "chunk.Chunk": [[150, 8, 1, "", "close"], [150, 8, 1, "", "getname"], [150, 8, 1, "", "getsize"], [150, 8, 1, "", "isatty"], [150, 8, 1, "", "read"], [150, 8, 1, "", "seek"], [150, 8, 1, "", "skip"], [150, 8, 1, "", "tell"]], "class": [[341, 7, 1, "", "__bases__"], [425, 8, 1, "", "__instancecheck__"], [341, 7, 1, "", "__mro__"], [425, 8, 1, "", "__subclasscheck__"], [341, 8, 1, "", "__subclasses__"], [341, 8, 1, "", "mro"]], "cmath": [[151, 12, 1, "", "acos"], [151, 12, 1, "", "acosh"], [151, 12, 1, "", "asin"], [151, 12, 1, "", "asinh"], [151, 12, 1, "", "atan"], [151, 12, 1, "", "atanh"], [151, 12, 1, "", "cos"], [151, 12, 1, "", "cosh"], [151, 9, 1, "", "e"], [151, 12, 1, "", "exp"], [151, 9, 1, "", "inf"], [151, 9, 1, "", "infj"], [151, 12, 1, "", "isclose"], [151, 12, 1, "", "isfinite"], [151, 12, 1, "", "isinf"], [151, 12, 1, "", "isnan"], [151, 12, 1, "", "log"], [151, 12, 1, "", "log10"], [151, 9, 1, "", "nan"], [151, 9, 1, "", "nanj"], [151, 12, 1, "", "phase"], [151, 9, 1, "", "pi"], [151, 12, 1, "", "polar"], [151, 12, 1, "", "rect"], [151, 12, 1, "", "sin"], [151, 12, 1, "", "sinh"], [151, 12, 1, "", "sqrt"], [151, 12, 1, "", "tan"], [151, 12, 1, "", "tanh"], [151, 9, 1, "", "tau"]], "cmd": [[152, 11, 1, "", "Cmd"]], "cmd.Cmd": [[152, 8, 1, "", "cmdloop"], [152, 7, 1, "", "cmdqueue"], [152, 8, 1, "", "columnize"], [152, 8, 1, "", "completedefault"], [152, 8, 1, "", "default"], [152, 8, 1, "", "do_help"], [152, 7, 1, "", "doc_header"], [152, 8, 1, "", "emptyline"], [152, 7, 1, "", "identchars"], [152, 7, 1, "", "intro"], [152, 7, 1, "", "lastcmd"], [152, 7, 1, "", "misc_header"], [152, 8, 1, "", "onecmd"], [152, 8, 1, "", "postcmd"], [152, 8, 1, "", "postloop"], [152, 8, 1, "", "precmd"], [152, 8, 1, "", "preloop"], [152, 7, 1, "", "prompt"], [152, 7, 1, "", "ruler"], [152, 7, 1, "", "undoc_header"], [152, 7, 1, "", "use_rawinput"]], "code": [[154, 11, 1, "", "InteractiveConsole"], [154, 11, 1, "", "InteractiveInterpreter"], [154, 12, 1, "", "compile_command"], [154, 12, 1, "", "interact"]], "code.InteractiveConsole": [[154, 8, 1, "", "interact"], [154, 8, 1, "", "push"], [154, 8, 1, "", "raw_input"], [154, 8, 1, "", "resetbuffer"]], "code.InteractiveInterpreter": [[154, 8, 1, "", "runcode"], [154, 8, 1, "", "runsource"], [154, 8, 1, "", "showsyntaxerror"], [154, 8, 1, "", "showtraceback"], [154, 8, 1, "", "write"]], "codecs": [[155, 9, 1, "", "BOM"], [155, 9, 1, "", "BOM_BE"], [155, 9, 1, "", "BOM_LE"], [155, 9, 1, "", "BOM_UTF16"], [155, 9, 1, "", "BOM_UTF16_BE"], [155, 9, 1, "", "BOM_UTF16_LE"], [155, 9, 1, "", "BOM_UTF32"], [155, 9, 1, "", "BOM_UTF32_BE"], [155, 9, 1, "", "BOM_UTF32_LE"], [155, 9, 1, "", "BOM_UTF8"], [155, 11, 1, "", "Codec"], [155, 11, 1, "", "CodecInfo"], [155, 12, 1, "", "EncodedFile"], [155, 11, 1, "", "IncrementalDecoder"], [155, 11, 1, "", "IncrementalEncoder"], [155, 11, 1, "", "StreamReader"], [155, 11, 1, "", "StreamReaderWriter"], [155, 11, 1, "", "StreamRecoder"], [155, 11, 1, "", "StreamWriter"], [155, 12, 1, "", "backslashreplace_errors"], [155, 12, 1, "", "decode"], [155, 12, 1, "", "encode"], [155, 12, 1, "", "getdecoder"], [155, 12, 1, "", "getencoder"], [155, 12, 1, "", "getincrementaldecoder"], [155, 12, 1, "", "getincrementalencoder"], [155, 12, 1, "", "getreader"], [155, 12, 1, "", "getwriter"], [155, 12, 1, "", "ignore_errors"], [155, 12, 1, "", "iterdecode"], [155, 12, 1, "", "iterencode"], [155, 12, 1, "", "lookup"], [155, 12, 1, "", "lookup_error"], [155, 12, 1, "", "namereplace_errors"], [155, 12, 1, "", "open"], [155, 12, 1, "", "register"], [155, 12, 1, "", "register_error"], [155, 12, 1, "", "replace_errors"], [155, 12, 1, "", "strict_errors"], [155, 12, 1, "", "unregister"], [155, 12, 1, "", "xmlcharrefreplace_errors"]], "codecs.Codec": [[155, 8, 1, "", "decode"], [155, 8, 1, "", "encode"]], "codecs.CodecInfo": [[155, 7, 1, "", "decode"], [155, 7, 1, "", "encode"], [155, 7, 1, "", "incrementaldecoder"], [155, 7, 1, "", "incrementalencoder"], [155, 7, 1, "", "name"], [155, 7, 1, "", "streamreader"], [155, 7, 1, "", "streamwriter"]], "codecs.IncrementalDecoder": [[155, 8, 1, "", "decode"], [155, 8, 1, "", "getstate"], [155, 8, 1, "", "reset"], [155, 8, 1, "", "setstate"]], "codecs.IncrementalEncoder": [[155, 8, 1, "", "encode"], [155, 8, 1, "", "getstate"], [155, 8, 1, "", "reset"], [155, 8, 1, "", "setstate"]], "codecs.StreamReader": [[155, 8, 1, "", "read"], [155, 8, 1, "", "readline"], [155, 8, 1, "", "readlines"], [155, 8, 1, "", "reset"]], "codecs.StreamWriter": [[155, 8, 1, "", "reset"], [155, 8, 1, "", "write"], [155, 8, 1, "", "writelines"]], "codeobject": [[425, 7, 1, "", "co_argcount"], [425, 7, 1, "", "co_cellvars"], [425, 7, 1, "", "co_code"], [425, 7, 1, "", "co_consts"], [425, 7, 1, "", "co_filename"], [425, 7, 1, "", "co_firstlineno"], [425, 7, 1, "", "co_flags"], [425, 7, 1, "", "co_freevars"], [425, 7, 1, "", "co_kwonlyargcount"], [425, 8, 1, "", "co_lines"], [425, 7, 1, "", "co_lnotab"], [425, 7, 1, "", "co_name"], [425, 7, 1, "", "co_names"], [425, 7, 1, "", "co_nlocals"], [425, 8, 1, "", "co_positions"], [425, 7, 1, "", "co_posonlyargcount"], [425, 7, 1, "", "co_qualname"], [425, 7, 1, "", "co_stacksize"], [425, 7, 1, "", "co_varnames"]], "codeop": [[156, 11, 1, "", "CommandCompiler"], [156, 11, 1, "", "Compile"], [156, 12, 1, "", "compile_command"]], "collections": [[157, 11, 1, "", "ChainMap"], [157, 11, 1, "", "Counter"], [157, 11, 1, "", "OrderedDict"], [157, 11, 1, "", "UserDict"], [157, 11, 1, "", "UserList"], [157, 11, 1, "", "UserString"], [158, 10, 0, "-", "abc"], [157, 11, 1, "", "defaultdict"], [157, 11, 1, "", "deque"], [157, 12, 1, "", "namedtuple"]], "collections.ChainMap": [[157, 7, 1, "", "maps"], [157, 8, 1, "", "new_child"], [157, 7, 1, "", "parents"]], "collections.Counter": [[157, 8, 1, "", "elements"], [157, 8, 1, "", "fromkeys"], [157, 8, 1, "", "most_common"], [157, 8, 1, "", "subtract"], [157, 8, 1, "", "total"], [157, 8, 1, "", "update"]], "collections.OrderedDict": [[157, 8, 1, "", "move_to_end"], [157, 8, 1, "", "popitem"]], "collections.UserDict": [[157, 7, 1, "", "data"]], "collections.UserList": [[157, 7, 1, "", "data"]], "collections.UserString": [[157, 7, 1, "", "data"]], "collections.abc": [[158, 11, 1, "", "AsyncGenerator"], [158, 11, 1, "", "AsyncIterable"], [158, 11, 1, "", "AsyncIterator"], [158, 11, 1, "", "Awaitable"], [158, 11, 1, "", "Buffer"], [158, 11, 1, "", "ByteString"], [158, 11, 1, "", "Callable"], [158, 11, 1, "", "Collection"], [158, 11, 1, "", "Container"], [158, 11, 1, "", "Coroutine"], [158, 11, 1, "", "Generator"], [158, 11, 1, "", "Hashable"], [158, 11, 1, "", "ItemsView"], [158, 11, 1, "", "Iterable"], [158, 11, 1, "", "Iterator"], [158, 11, 1, "", "KeysView"], [158, 11, 1, "", "Mapping"], [158, 11, 1, "", "MappingView"], [158, 11, 1, "", "MutableMapping"], [158, 11, 1, "", "MutableSequence"], [158, 11, 1, "", "MutableSet"], [158, 11, 1, "", "Reversible"], [158, 11, 1, "", "Sequence"], [158, 11, 1, "", "Set"], [158, 11, 1, "", "Sized"], [158, 11, 1, "", "ValuesView"]], "collections.defaultdict": [[157, 8, 1, "", "__missing__"], [157, 7, 1, "", "default_factory"]], "collections.deque": [[157, 8, 1, "", "append"], [157, 8, 1, "", "appendleft"], [157, 8, 1, "", "clear"], [157, 8, 1, "", "copy"], [157, 8, 1, "", "count"], [157, 8, 1, "", "extend"], [157, 8, 1, "", "extendleft"], [157, 8, 1, "", "index"], [157, 8, 1, "", "insert"], [157, 7, 1, "", "maxlen"], [157, 8, 1, "", "pop"], [157, 8, 1, "", "popleft"], [157, 8, 1, "", "remove"], [157, 8, 1, "", "reverse"], [157, 8, 1, "", "rotate"]], "collections.somenamedtuple": [[157, 8, 1, "", "_asdict"], [157, 7, 1, "", "_field_defaults"], [157, 7, 1, "", "_fields"], [157, 8, 1, "", "_make"], [157, 8, 1, "", "_replace"]], "colorsys": [[159, 12, 1, "", "hls_to_rgb"], [159, 12, 1, "", "hsv_to_rgb"], [159, 12, 1, "", "rgb_to_hls"], [159, 12, 1, "", "rgb_to_hsv"], [159, 12, 1, "", "rgb_to_yiq"], [159, 12, 1, "", "yiq_to_rgb"]], "compileall": [[160, 12, 1, "", "compile_dir"], [160, 12, 1, "", "compile_file"], [160, 12, 1, "", "compile_path"], [160, 14, 1, "cmdoption-compileall-hardlink-dupes", "--hardlink-dupes"], [160, 14, 1, "cmdoption-compileall-invalidation-mode", "--invalidation-mode"], [160, 14, 1, "cmdoption-compileall-b", "-b"], [160, 14, 1, "cmdoption-compileall-d", "-d"], [160, 14, 1, "cmdoption-compileall-e", "-e"], [160, 14, 1, "cmdoption-compileall-f", "-f"], [160, 14, 1, "cmdoption-compileall-i", "-i"], [160, 14, 1, "cmdoption-compileall-j", "-j"], [160, 14, 1, "cmdoption-compileall-l", "-l"], [160, 14, 1, "cmdoption-compileall-o", "-o"], [160, 14, 1, "cmdoption-compileall-p", "-p"], [160, 14, 1, "cmdoption-compileall-q", "-q"], [160, 14, 1, "cmdoption-compileall-r", "-r"], [160, 14, 1, "cmdoption-compileall-s", "-s"], [160, 14, 1, "cmdoption-compileall-x", "-x"], [160, 14, 1, "cmdoption-compileall-arg-directory", "directory"], [160, 14, 1, "cmdoption-compileall-arg-file", "file"]], "concurrent": [[163, 10, 0, "-", "futures"]], "concurrent.futures": [[163, 9, 1, "", "ALL_COMPLETED"], [163, 6, 1, "", "BrokenExecutor"], [163, 6, 1, "", "CancelledError"], [163, 11, 1, "", "Executor"], [163, 9, 1, "", "FIRST_COMPLETED"], [163, 9, 1, "", "FIRST_EXCEPTION"], [163, 11, 1, "", "Future"], [163, 6, 1, "", "InvalidStateError"], [163, 11, 1, "", "ProcessPoolExecutor"], [163, 11, 1, "", "ThreadPoolExecutor"], [163, 6, 1, "", "TimeoutError"], [163, 12, 1, "", "as_completed"], [163, 12, 1, "", "wait"]], "concurrent.futures.Executor": [[163, 8, 1, "", "map"], [163, 8, 1, "", "shutdown"], [163, 8, 1, "", "submit"]], "concurrent.futures.Future": [[163, 8, 1, "", "add_done_callback"], [163, 8, 1, "", "cancel"], [163, 8, 1, "", "cancelled"], [163, 8, 1, "", "done"], [163, 8, 1, "", "exception"], [163, 8, 1, "", "result"], [163, 8, 1, "", "running"], [163, 8, 1, "", "set_exception"], [163, 8, 1, "", "set_result"], [163, 8, 1, "", "set_running_or_notify_cancel"]], "concurrent.futures.process": [[163, 6, 1, "", "BrokenProcessPool"]], "concurrent.futures.thread": [[163, 6, 1, "", "BrokenThreadPool"]], "configparser": [[164, 11, 1, "", "BasicInterpolation"], [164, 11, 1, "", "ConfigParser"], [164, 6, 1, "", "DuplicateOptionError"], [164, 6, 1, "", "DuplicateSectionError"], [164, 6, 1, "", "Error"], [164, 11, 1, "", "ExtendedInterpolation"], [164, 6, 1, "", "InterpolationDepthError"], [164, 6, 1, "", "InterpolationError"], [164, 6, 1, "", "InterpolationMissingOptionError"], [164, 6, 1, "", "InterpolationSyntaxError"], [164, 9, 1, "", "MAX_INTERPOLATION_DEPTH"], [164, 6, 1, "", "MissingSectionHeaderError"], [164, 6, 1, "", "NoOptionError"], [164, 6, 1, "", "NoSectionError"], [164, 6, 1, "", "ParsingError"], [164, 11, 1, "", "RawConfigParser"]], "configparser.ConfigParser": [[164, 7, 1, "", "BOOLEAN_STATES"], [164, 7, 1, "", "SECTCRE"], [164, 8, 1, "", "add_section"], [164, 8, 1, "", "defaults"], [164, 8, 1, "", "get"], [164, 8, 1, "", "getboolean"], [164, 8, 1, "", "getfloat"], [164, 8, 1, "", "getint"], [164, 8, 1, "", "has_option"], [164, 8, 1, "", "has_section"], [164, 8, 1, "", "items"], [164, 8, 1, "", "options"], [164, 8, 1, "", "optionxform"], [164, 8, 1, "", "read"], [164, 8, 1, "", "read_dict"], [164, 8, 1, "", "read_file"], [164, 8, 1, "", "read_string"], [164, 8, 1, "", "remove_option"], [164, 8, 1, "", "remove_section"], [164, 8, 1, "", "sections"], [164, 8, 1, "", "set"], [164, 8, 1, "", "write"]], "configparser.RawConfigParser": [[164, 8, 1, "", "add_section"], [164, 8, 1, "", "set"]], "container": [[341, 8, 1, "", "__iter__"]], "contextlib": [[166, 11, 1, "", "AbstractAsyncContextManager"], [166, 11, 1, "", "AbstractContextManager"], [166, 11, 1, "", "AsyncContextDecorator"], [166, 11, 1, "", "AsyncExitStack"], [166, 11, 1, "", "ContextDecorator"], [166, 11, 1, "", "ExitStack"], [166, 12, 1, "", "aclosing"], [166, 12, 1, "", "asynccontextmanager"], [166, 12, 1, "", "chdir"], [166, 12, 1, "", "closing"], [166, 12, 1, "", "contextmanager"], [166, 12, 1, "", "nullcontext"], [166, 12, 1, "", "redirect_stderr"], [166, 12, 1, "", "redirect_stdout"], [166, 12, 1, "", "suppress"]], "contextlib.AsyncExitStack": [[166, 8, 1, "", "aclose"], [166, 8, 1, "", "enter_async_context"], [166, 8, 1, "", "push_async_callback"], [166, 8, 1, "", "push_async_exit"]], "contextlib.ExitStack": [[166, 8, 1, "", "callback"], [166, 8, 1, "", "close"], [166, 8, 1, "", "enter_context"], [166, 8, 1, "", "pop_all"], [166, 8, 1, "", "push"]], "contextmanager": [[341, 8, 1, "", "__enter__"], [341, 8, 1, "", "__exit__"]], "contextvars": [[167, 11, 1, "", "Context"], [167, 11, 1, "", "ContextVar"], [167, 11, 1, "", "Token"], [167, 12, 1, "", "copy_context"]], "contextvars.Context": [[167, 8, 1, "", "copy"], [167, 8, 1, "", "get"], [167, 8, 1, "", "items"], [167, 8, 1, "", "keys"], [167, 8, 1, "", "run"], [167, 8, 1, "", "values"]], "contextvars.ContextVar": [[167, 8, 1, "", "get"], [167, 7, 1, "", "name"], [167, 8, 1, "", "reset"], [167, 8, 1, "", "set"]], "contextvars.Token": [[167, 7, 1, "", "MISSING"], [167, 7, 1, "", "old_value"], [167, 7, 1, "", "var"]], "copy": [[168, 6, 1, "", "Error"], [168, 12, 1, "", "copy"], [168, 12, 1, "", "deepcopy"]], "copyreg": [[169, 12, 1, "", "constructor"], [169, 12, 1, "", "pickle"]], "coroutine": [[425, 8, 1, "", "close"], [425, 8, 1, "", "send"], [425, 8, 1, "", "throw"]], "crypt": [[170, 9, 1, "", "METHOD_BLOWFISH"], [170, 9, 1, "", "METHOD_CRYPT"], [170, 9, 1, "", "METHOD_MD5"], [170, 9, 1, "", "METHOD_SHA256"], [170, 9, 1, "", "METHOD_SHA512"], [170, 12, 1, "", "crypt"], [170, 7, 1, "", "methods"], [170, 12, 1, "", "mksalt"]], "csv": [[172, 11, 1, "", "Dialect"], [172, 11, 1, "", "DictReader"], [172, 11, 1, "", "DictWriter"], [172, 6, 1, "", "Error"], [172, 9, 1, "", "QUOTE_ALL"], [172, 9, 1, "", "QUOTE_MINIMAL"], [172, 9, 1, "", "QUOTE_NONE"], [172, 9, 1, "", "QUOTE_NONNUMERIC"], [172, 9, 1, "", "QUOTE_NOTNULL"], [172, 9, 1, "", "QUOTE_STRINGS"], [172, 11, 1, "", "Sniffer"], [172, 11, 1, "", "excel"], [172, 11, 1, "", "excel_tab"], [172, 12, 1, "", "field_size_limit"], [172, 12, 1, "", "get_dialect"], [172, 12, 1, "", "list_dialects"], [172, 12, 1, "", "reader"], [172, 12, 1, "", "register_dialect"], [172, 11, 1, "", "unix_dialect"], [172, 12, 1, "", "unregister_dialect"], [172, 12, 1, "", "writer"]], "csv.Dialect": [[172, 7, 1, "", "delimiter"], [172, 7, 1, "", "doublequote"], [172, 7, 1, "", "escapechar"], [172, 7, 1, "", "lineterminator"], [172, 7, 1, "", "quotechar"], [172, 7, 1, "", "quoting"], [172, 7, 1, "", "skipinitialspace"], [172, 7, 1, "", "strict"]], "csv.DictReader": [[172, 7, 1, "", "fieldnames"]], "csv.DictWriter": [[172, 8, 1, "", "writeheader"]], "csv.Sniffer": [[172, 8, 1, "", "has_header"], [172, 8, 1, "", "sniff"]], "csv.csvreader": [[172, 8, 1, "", "__next__"], [172, 7, 1, "", "dialect"], [172, 7, 1, "", "line_num"]], "csv.csvwriter": [[172, 7, 1, "", "dialect"], [172, 8, 1, "", "writerow"], [172, 8, 1, "", "writerows"]], "ctypes": [[173, 6, 1, "", "ArgumentError"], [173, 11, 1, "", "Array"], [173, 11, 1, "", "BigEndianStructure"], [173, 11, 1, "", "BigEndianUnion"], [173, 11, 1, "", "CDLL"], [173, 12, 1, "", "CFUNCTYPE"], [173, 12, 1, "", "DllCanUnloadNow"], [173, 12, 1, "", "DllGetClassObject"], [173, 12, 1, "", "FormatError"], [173, 12, 1, "", "GetLastError"], [173, 11, 1, "", "HRESULT"], [173, 11, 1, "", "LibraryLoader"], [173, 11, 1, "", "LittleEndianStructure"], [173, 11, 1, "", "LittleEndianUnion"], [173, 11, 1, "", "OleDLL"], [173, 12, 1, "", "POINTER"], [173, 12, 1, "", "PYFUNCTYPE"], [173, 11, 1, "", "PyDLL"], [173, 11, 1, "", "Structure"], [173, 11, 1, "", "Union"], [173, 12, 1, "", "WINFUNCTYPE"], [173, 11, 1, "", "WinDLL"], [173, 12, 1, "", "WinError"], [173, 11, 1, "", "_CData"], [173, 11, 1, "", "_FuncPtr"], [173, 11, 1, "", "_Pointer"], [173, 11, 1, "", "_SimpleCData"], [173, 12, 1, "", "addressof"], [173, 12, 1, "", "alignment"], [173, 12, 1, "", "byref"], [173, 11, 1, "", "c_bool"], [173, 11, 1, "", "c_byte"], [173, 11, 1, "", "c_char"], [173, 11, 1, "", "c_char_p"], [173, 11, 1, "", "c_double"], [173, 11, 1, "", "c_float"], [173, 11, 1, "", "c_int"], [173, 11, 1, "", "c_int16"], [173, 11, 1, "", "c_int32"], [173, 11, 1, "", "c_int64"], [173, 11, 1, "", "c_int8"], [173, 11, 1, "", "c_long"], [173, 11, 1, "", "c_longdouble"], [173, 11, 1, "", "c_longlong"], [173, 11, 1, "", "c_short"], [173, 11, 1, "", "c_size_t"], [173, 11, 1, "", "c_ssize_t"], [173, 11, 1, "", "c_time_t"], [173, 11, 1, "", "c_ubyte"], [173, 11, 1, "", "c_uint"], [173, 11, 1, "", "c_uint16"], [173, 11, 1, "", "c_uint32"], [173, 11, 1, "", "c_uint64"], [173, 11, 1, "", "c_uint8"], [173, 11, 1, "", "c_ulong"], [173, 11, 1, "", "c_ulonglong"], [173, 11, 1, "", "c_ushort"], [173, 11, 1, "", "c_void_p"], [173, 11, 1, "", "c_wchar"], [173, 11, 1, "", "c_wchar_p"], [173, 12, 1, "", "cast"], [173, 12, 1, "", "create_string_buffer"], [173, 12, 1, "", "create_unicode_buffer"], [173, 12, 1, "", "get_errno"], [173, 12, 1, "", "get_last_error"], [173, 12, 1, "", "memmove"], [173, 12, 1, "", "memset"], [173, 12, 1, "", "pointer"], [173, 11, 1, "", "py_object"], [173, 12, 1, "", "resize"], [173, 12, 1, "", "set_errno"], [173, 12, 1, "", "set_last_error"], [173, 12, 1, "", "sizeof"], [173, 12, 1, "", "string_at"], [173, 12, 1, "", "wstring_at"]], "ctypes.Array": [[173, 7, 1, "", "_length_"], [173, 7, 1, "", "_type_"]], "ctypes.LibraryLoader": [[173, 8, 1, "", "LoadLibrary"]], "ctypes.PyDLL": [[173, 7, 1, "", "_handle"], [173, 7, 1, "", "_name"]], "ctypes.Structure": [[173, 7, 1, "", "_anonymous_"], [173, 7, 1, "", "_fields_"], [173, 7, 1, "", "_pack_"]], "ctypes._CData": [[173, 7, 1, "", "_b_base_"], [173, 7, 1, "", "_b_needsfree_"], [173, 7, 1, "", "_objects"], [173, 8, 1, "", "from_address"], [173, 8, 1, "", "from_buffer"], [173, 8, 1, "", "from_buffer_copy"], [173, 8, 1, "", "from_param"], [173, 8, 1, "", "in_dll"]], "ctypes._FuncPtr": [[173, 7, 1, "", "argtypes"], [173, 7, 1, "", "errcheck"], [173, 7, 1, "", "restype"]], "ctypes._Pointer": [[173, 7, 1, "", "_type_"], [173, 7, 1, "", "contents"]], "ctypes._SimpleCData": [[173, 7, 1, "", "value"]], "ctypes.util": [[173, 12, 1, "", "find_library"], [173, 12, 1, "", "find_msvcrt"]], "curses": [[174, 9, 1, "", "ACS_BBSS"], [174, 9, 1, "", "ACS_BLOCK"], [174, 9, 1, "", "ACS_BOARD"], [174, 9, 1, "", "ACS_BSBS"], [174, 9, 1, "", "ACS_BSSB"], [174, 9, 1, "", "ACS_BSSS"], [174, 9, 1, "", "ACS_BTEE"], [174, 9, 1, "", "ACS_BULLET"], [174, 9, 1, "", "ACS_CKBOARD"], [174, 9, 1, "", "ACS_DARROW"], [174, 9, 1, "", "ACS_DEGREE"], [174, 9, 1, "", "ACS_DIAMOND"], [174, 9, 1, "", "ACS_GEQUAL"], [174, 9, 1, "", "ACS_HLINE"], [174, 9, 1, "", "ACS_LANTERN"], [174, 9, 1, "", "ACS_LARROW"], [174, 9, 1, "", "ACS_LEQUAL"], [174, 9, 1, "", "ACS_LLCORNER"], [174, 9, 1, "", "ACS_LRCORNER"], [174, 9, 1, "", "ACS_LTEE"], [174, 9, 1, "", "ACS_NEQUAL"], [174, 9, 1, "", "ACS_PI"], [174, 9, 1, "", "ACS_PLMINUS"], [174, 9, 1, "", "ACS_PLUS"], [174, 9, 1, "", "ACS_RARROW"], [174, 9, 1, "", "ACS_RTEE"], [174, 9, 1, "", "ACS_S1"], [174, 9, 1, "", "ACS_S3"], [174, 9, 1, "", "ACS_S7"], [174, 9, 1, "", "ACS_S9"], [174, 9, 1, "", "ACS_SBBS"], [174, 9, 1, "", "ACS_SBSB"], [174, 9, 1, "", "ACS_SBSS"], [174, 9, 1, "", "ACS_SSBB"], [174, 9, 1, "", "ACS_SSBS"], [174, 9, 1, "", "ACS_SSSB"], [174, 9, 1, "", "ACS_SSSS"], [174, 9, 1, "", "ACS_STERLING"], [174, 9, 1, "", "ACS_TTEE"], [174, 9, 1, "", "ACS_UARROW"], [174, 9, 1, "", "ACS_ULCORNER"], [174, 9, 1, "", "ACS_URCORNER"], [174, 9, 1, "", "ACS_VLINE"], [174, 9, 1, "", "A_ALTCHARSET"], [174, 9, 1, "", "A_ATTRIBUTES"], [174, 9, 1, "", "A_BLINK"], [174, 9, 1, "", "A_BOLD"], [174, 9, 1, "", "A_CHARTEXT"], [174, 9, 1, "", "A_COLOR"], [174, 9, 1, "", "A_DIM"], [174, 9, 1, "", "A_HORIZONTAL"], [174, 9, 1, "", "A_INVIS"], [174, 9, 1, "", "A_ITALIC"], [174, 9, 1, "", "A_LEFT"], [174, 9, 1, "", "A_LOW"], [174, 9, 1, "", "A_NORMAL"], [174, 9, 1, "", "A_PROTECT"], [174, 9, 1, "", "A_REVERSE"], [174, 9, 1, "", "A_RIGHT"], [174, 9, 1, "", "A_STANDOUT"], [174, 9, 1, "", "A_TOP"], [174, 9, 1, "", "A_UNDERLINE"], [174, 9, 1, "", "A_VERTICAL"], [174, 9, 1, "", "BUTTON_ALT"], [174, 9, 1, "", "BUTTON_CTRL"], [174, 9, 1, "", "BUTTON_SHIFT"], [174, 9, 1, "", "BUTTONn_CLICKED"], [174, 9, 1, "", "BUTTONn_DOUBLE_CLICKED"], [174, 9, 1, "", "BUTTONn_PRESSED"], [174, 9, 1, "", "BUTTONn_RELEASED"], [174, 9, 1, "", "BUTTONn_TRIPLE_CLICKED"], [174, 9, 1, "", "COLORS"], [174, 9, 1, "", "COLOR_BLACK"], [174, 9, 1, "", "COLOR_BLUE"], [174, 9, 1, "", "COLOR_CYAN"], [174, 9, 1, "", "COLOR_GREEN"], [174, 9, 1, "", "COLOR_MAGENTA"], [174, 9, 1, "", "COLOR_PAIRS"], [174, 9, 1, "", "COLOR_RED"], [174, 9, 1, "", "COLOR_WHITE"], [174, 9, 1, "", "COLOR_YELLOW"], [174, 9, 1, "", "COLS"], [174, 9, 1, "", "ERR"], [174, 9, 1, "", "KEY_A1"], [174, 9, 1, "", "KEY_A3"], [174, 9, 1, "", "KEY_B2"], [174, 9, 1, "", "KEY_BACKSPACE"], [174, 9, 1, "", "KEY_BEG"], [174, 9, 1, "", "KEY_BREAK"], [174, 9, 1, "", "KEY_BTAB"], [174, 9, 1, "", "KEY_C1"], [174, 9, 1, "", "KEY_C3"], [174, 9, 1, "", "KEY_CANCEL"], [174, 9, 1, "", "KEY_CATAB"], [174, 9, 1, "", "KEY_CLEAR"], [174, 9, 1, "", "KEY_CLOSE"], [174, 9, 1, "", "KEY_COMMAND"], [174, 9, 1, "", "KEY_COPY"], [174, 9, 1, "", "KEY_CREATE"], [174, 9, 1, "", "KEY_CTAB"], [174, 9, 1, "", "KEY_DC"], [174, 9, 1, "", "KEY_DL"], [174, 9, 1, "", "KEY_DOWN"], [174, 9, 1, "", "KEY_EIC"], [174, 9, 1, "", "KEY_END"], [174, 9, 1, "", "KEY_ENTER"], [174, 9, 1, "", "KEY_EOL"], [174, 9, 1, "", "KEY_EOS"], [174, 9, 1, "", "KEY_EXIT"], [174, 9, 1, "", "KEY_F0"], [174, 9, 1, "", "KEY_FIND"], [174, 9, 1, "", "KEY_Fn"], [174, 9, 1, "", "KEY_HELP"], [174, 9, 1, "", "KEY_HOME"], [174, 9, 1, "", "KEY_IC"], [174, 9, 1, "", "KEY_IL"], [174, 9, 1, "", "KEY_LEFT"], [174, 9, 1, "", "KEY_LL"], [174, 9, 1, "", "KEY_MARK"], [174, 9, 1, "", "KEY_MAX"], [174, 9, 1, "", "KEY_MESSAGE"], [174, 9, 1, "", "KEY_MIN"], [174, 9, 1, "", "KEY_MOUSE"], [174, 9, 1, "", "KEY_MOVE"], [174, 9, 1, "", "KEY_NEXT"], [174, 9, 1, "", "KEY_NPAGE"], [174, 9, 1, "", "KEY_OPEN"], [174, 9, 1, "", "KEY_OPTIONS"], [174, 9, 1, "", "KEY_PPAGE"], [174, 9, 1, "", "KEY_PREVIOUS"], [174, 9, 1, "", "KEY_PRINT"], [174, 9, 1, "", "KEY_REDO"], [174, 9, 1, "", "KEY_REFERENCE"], [174, 9, 1, "", "KEY_REFRESH"], [174, 9, 1, "", "KEY_REPLACE"], [174, 9, 1, "", "KEY_RESET"], [174, 9, 1, "", "KEY_RESIZE"], [174, 9, 1, "", "KEY_RESTART"], [174, 9, 1, "", "KEY_RESUME"], [174, 9, 1, "", "KEY_RIGHT"], [174, 9, 1, "", "KEY_SAVE"], [174, 9, 1, "", "KEY_SBEG"], [174, 9, 1, "", "KEY_SCANCEL"], [174, 9, 1, "", "KEY_SCOMMAND"], [174, 9, 1, "", "KEY_SCOPY"], [174, 9, 1, "", "KEY_SCREATE"], [174, 9, 1, "", "KEY_SDC"], [174, 9, 1, "", "KEY_SDL"], [174, 9, 1, "", "KEY_SELECT"], [174, 9, 1, "", "KEY_SEND"], [174, 9, 1, "", "KEY_SEOL"], [174, 9, 1, "", "KEY_SEXIT"], [174, 9, 1, "", "KEY_SF"], [174, 9, 1, "", "KEY_SFIND"], [174, 9, 1, "", "KEY_SHELP"], [174, 9, 1, "", "KEY_SHOME"], [174, 9, 1, "", "KEY_SIC"], [174, 9, 1, "", "KEY_SLEFT"], [174, 9, 1, "", "KEY_SMESSAGE"], [174, 9, 1, "", "KEY_SMOVE"], [174, 9, 1, "", "KEY_SNEXT"], [174, 9, 1, "", "KEY_SOPTIONS"], [174, 9, 1, "", "KEY_SPREVIOUS"], [174, 9, 1, "", "KEY_SPRINT"], [174, 9, 1, "", "KEY_SR"], [174, 9, 1, "", "KEY_SREDO"], [174, 9, 1, "", "KEY_SREPLACE"], [174, 9, 1, "", "KEY_SRESET"], [174, 9, 1, "", "KEY_SRIGHT"], [174, 9, 1, "", "KEY_SRSUME"], [174, 9, 1, "", "KEY_SSAVE"], [174, 9, 1, "", "KEY_SSUSPEND"], [174, 9, 1, "", "KEY_STAB"], [174, 9, 1, "", "KEY_SUNDO"], [174, 9, 1, "", "KEY_SUSPEND"], [174, 9, 1, "", "KEY_UNDO"], [174, 9, 1, "", "KEY_UP"], [174, 9, 1, "", "LINES"], [174, 9, 1, "", "OK"], [174, 9, 1, "", "__version__"], [175, 10, 0, "-", "ascii"], [174, 12, 1, "", "baudrate"], [174, 12, 1, "", "beep"], [174, 12, 1, "", "can_change_color"], [174, 12, 1, "", "cbreak"], [174, 12, 1, "", "color_content"], [174, 12, 1, "", "color_pair"], [174, 12, 1, "", "curs_set"], [174, 12, 1, "", "def_prog_mode"], [174, 12, 1, "", "def_shell_mode"], [174, 12, 1, "", "delay_output"], [174, 12, 1, "", "doupdate"], [174, 12, 1, "", "echo"], [174, 12, 1, "", "endwin"], [174, 12, 1, "", "erasechar"], [174, 6, 1, "", "error"], [174, 12, 1, "", "filter"], [174, 12, 1, "", "flash"], [174, 12, 1, "", "flushinp"], [174, 12, 1, "", "get_escdelay"], [174, 12, 1, "", "get_tabsize"], [174, 12, 1, "", "getmouse"], [174, 12, 1, "", "getsyx"], [174, 12, 1, "", "getwin"], [174, 12, 1, "", "halfdelay"], [174, 12, 1, "", "has_colors"], [174, 12, 1, "", "has_extended_color_support"], [174, 12, 1, "", "has_ic"], [174, 12, 1, "", "has_il"], [174, 12, 1, "", "has_key"], [174, 12, 1, "", "init_color"], [174, 12, 1, "", "init_pair"], [174, 12, 1, "", "initscr"], [174, 12, 1, "", "is_term_resized"], [174, 12, 1, "", "isendwin"], [174, 12, 1, "", "keyname"], [174, 12, 1, "", "killchar"], [174, 12, 1, "", "longname"], [174, 12, 1, "", "meta"], [174, 12, 1, "", "mouseinterval"], [174, 12, 1, "", "mousemask"], [174, 12, 1, "", "napms"], [174, 9, 1, "", "ncurses_version"], [174, 12, 1, "", "newpad"], [174, 12, 1, "", "newwin"], [174, 12, 1, "", "nl"], [174, 12, 1, "", "nocbreak"], [174, 12, 1, "", "noecho"], [174, 12, 1, "", "nonl"], [174, 12, 1, "", "noqiflush"], [174, 12, 1, "", "noraw"], [174, 12, 1, "", "pair_content"], [174, 12, 1, "", "pair_number"], [176, 10, 0, "-", "panel"], [174, 12, 1, "", "putp"], [174, 12, 1, "", "qiflush"], [174, 12, 1, "", "raw"], [174, 12, 1, "", "reset_prog_mode"], [174, 12, 1, "", "reset_shell_mode"], [174, 12, 1, "", "resetty"], [174, 12, 1, "", "resize_term"], [174, 12, 1, "", "resizeterm"], [174, 12, 1, "", "savetty"], [174, 12, 1, "", "set_escdelay"], [174, 12, 1, "", "set_tabsize"], [174, 12, 1, "", "setsyx"], [174, 12, 1, "", "setupterm"], [174, 12, 1, "", "start_color"], [174, 12, 1, "", "termattrs"], [174, 12, 1, "", "termname"], [174, 10, 0, "-", "textpad"], [174, 12, 1, "", "tigetflag"], [174, 12, 1, "", "tigetnum"], [174, 12, 1, "", "tigetstr"], [174, 12, 1, "", "tparm"], [174, 12, 1, "", "typeahead"], [174, 12, 1, "", "unctrl"], [174, 12, 1, "", "unget_wch"], [174, 12, 1, "", "ungetch"], [174, 12, 1, "", "ungetmouse"], [174, 12, 1, "", "update_lines_cols"], [174, 12, 1, "", "use_default_colors"], [174, 12, 1, "", "use_env"], [174, 9, 1, "", "version"], [174, 12, 1, "", "wrapper"]], "curses.ascii": [[175, 9, 1, "", "ACK"], [175, 9, 1, "", "BEL"], [175, 9, 1, "", "BS"], [175, 9, 1, "", "CAN"], [175, 9, 1, "", "CR"], [175, 9, 1, "", "DC1"], [175, 9, 1, "", "DC2"], [175, 9, 1, "", "DC3"], [175, 9, 1, "", "DC4"], [175, 9, 1, "", "DEL"], [175, 9, 1, "", "DLE"], [175, 9, 1, "", "EM"], [175, 9, 1, "", "ENQ"], [175, 9, 1, "", "EOT"], [175, 9, 1, "", "ESC"], [175, 9, 1, "", "ETB"], [175, 9, 1, "", "ETX"], [175, 9, 1, "", "FF"], [175, 9, 1, "", "FS"], [175, 9, 1, "", "GS"], [175, 9, 1, "", "HT"], [175, 9, 1, "", "LF"], [175, 9, 1, "", "NAK"], [175, 9, 1, "", "NL"], [175, 9, 1, "", "NUL"], [175, 9, 1, "", "RS"], [175, 9, 1, "", "SI"], [175, 9, 1, "", "SO"], [175, 9, 1, "", "SOH"], [175, 9, 1, "", "SP"], [175, 9, 1, "", "STX"], [175, 9, 1, "", "SUB"], [175, 9, 1, "", "SYN"], [175, 9, 1, "", "TAB"], [175, 9, 1, "", "US"], [175, 9, 1, "", "VT"], [175, 12, 1, "", "alt"], [175, 12, 1, "", "ascii"], [175, 9, 1, "", "controlnames"], [175, 12, 1, "", "ctrl"], [175, 12, 1, "", "isalnum"], [175, 12, 1, "", "isalpha"], [175, 12, 1, "", "isascii"], [175, 12, 1, "", "isblank"], [175, 12, 1, "", "iscntrl"], [175, 12, 1, "", "isctrl"], [175, 12, 1, "", "isdigit"], [175, 12, 1, "", "isgraph"], [175, 12, 1, "", "islower"], [175, 12, 1, "", "ismeta"], [175, 12, 1, "", "isprint"], [175, 12, 1, "", "ispunct"], [175, 12, 1, "", "isspace"], [175, 12, 1, "", "isupper"], [175, 12, 1, "", "isxdigit"], [175, 12, 1, "", "unctrl"]], "curses.panel.Panel": [[176, 8, 1, "", "above"], [176, 8, 1, "", "below"], [176, 8, 1, "", "bottom"], [176, 8, 1, "", "hidden"], [176, 8, 1, "", "hide"], [176, 8, 1, "", "move"], [176, 8, 1, "", "replace"], [176, 8, 1, "", "set_userptr"], [176, 8, 1, "", "show"], [176, 8, 1, "", "top"], [176, 8, 1, "", "userptr"], [176, 8, 1, "", "window"]], "curses.panel": [[176, 12, 1, "", "bottom_panel"], [176, 12, 1, "", "new_panel"], [176, 12, 1, "", "top_panel"], [176, 12, 1, "", "update_panels"]], "curses.textpad": [[174, 11, 1, "", "Textbox"], [174, 12, 1, "", "rectangle"]], "curses.textpad.Textbox": [[174, 8, 1, "", "do_command"], [174, 8, 1, "", "edit"], [174, 8, 1, "", "gather"], [174, 7, 1, "", "stripspaces"]], "curses.window": [[174, 8, 1, "", "addch"], [174, 8, 1, "", "addnstr"], [174, 8, 1, "", "addstr"], [174, 8, 1, "", "attroff"], [174, 8, 1, "", "attron"], [174, 8, 1, "", "attrset"], [174, 8, 1, "", "bkgd"], [174, 8, 1, "", "bkgdset"], [174, 8, 1, "", "border"], [174, 8, 1, "", "box"], [174, 8, 1, "", "chgat"], [174, 8, 1, "", "clear"], [174, 8, 1, "", "clearok"], [174, 8, 1, "", "clrtobot"], [174, 8, 1, "", "clrtoeol"], [174, 8, 1, "", "cursyncup"], [174, 8, 1, "", "delch"], [174, 8, 1, "", "deleteln"], [174, 8, 1, "", "derwin"], [174, 8, 1, "", "echochar"], [174, 8, 1, "", "enclose"], [174, 7, 1, "", "encoding"], [174, 8, 1, "", "erase"], [174, 8, 1, "", "get_wch"], [174, 8, 1, "", "getbegyx"], [174, 8, 1, "", "getbkgd"], [174, 8, 1, "", "getch"], [174, 8, 1, "", "getkey"], [174, 8, 1, "", "getmaxyx"], [174, 8, 1, "", "getparyx"], [174, 8, 1, "", "getstr"], [174, 8, 1, "", "getyx"], [174, 8, 1, "", "hline"], [174, 8, 1, "", "idcok"], [174, 8, 1, "", "idlok"], [174, 8, 1, "", "immedok"], [174, 8, 1, "", "inch"], [174, 8, 1, "", "insch"], [174, 8, 1, "", "insdelln"], [174, 8, 1, "", "insertln"], [174, 8, 1, "", "insnstr"], [174, 8, 1, "", "insstr"], [174, 8, 1, "", "instr"], [174, 8, 1, "", "is_linetouched"], [174, 8, 1, "", "is_wintouched"], [174, 8, 1, "", "keypad"], [174, 8, 1, "", "leaveok"], [174, 8, 1, "", "move"], [174, 8, 1, "", "mvderwin"], [174, 8, 1, "", "mvwin"], [174, 8, 1, "", "nodelay"], [174, 8, 1, "", "notimeout"], [174, 8, 1, "", "noutrefresh"], [174, 8, 1, "", "overlay"], [174, 8, 1, "", "overwrite"], [174, 8, 1, "", "putwin"], [174, 8, 1, "", "redrawln"], [174, 8, 1, "", "redrawwin"], [174, 8, 1, "", "refresh"], [174, 8, 1, "", "resize"], [174, 8, 1, "", "scroll"], [174, 8, 1, "", "scrollok"], [174, 8, 1, "", "setscrreg"], [174, 8, 1, "", "standend"], [174, 8, 1, "", "standout"], [174, 8, 1, "", "subpad"], [174, 8, 1, "", "subwin"], [174, 8, 1, "", "syncdown"], [174, 8, 1, "", "syncok"], [174, 8, 1, "", "syncup"], [174, 8, 1, "", "timeout"], [174, 8, 1, "", "touchline"], [174, 8, 1, "", "touchwin"], [174, 8, 1, "", "untouchwin"], [174, 8, 1, "", "vline"]], "dataclasses": [[178, 11, 1, "", "Field"], [178, 6, 1, "", "FrozenInstanceError"], [178, 9, 1, "", "KW_ONLY"], [178, 9, 1, "", "MISSING"], [178, 12, 1, "", "__post_init__"], [178, 12, 1, "", "asdict"], [178, 12, 1, "", "astuple"], [178, 12, 1, "", "dataclass"], [178, 12, 1, "", "field"], [178, 12, 1, "", "fields"], [178, 12, 1, "", "is_dataclass"], [178, 12, 1, "", "make_dataclass"], [178, 12, 1, "", "replace"]], "datetime": [[180, 9, 1, "", "MAXYEAR"], [180, 9, 1, "", "MINYEAR"], [180, 7, 1, "", "UTC"], [180, 11, 1, "", "date"], [180, 11, 1, "", "datetime"], [180, 11, 1, "", "time"], [180, 11, 1, "", "timedelta"], [180, 11, 1, "", "timezone"], [180, 11, 1, "", "tzinfo"]], "datetime.date": [[180, 8, 1, "", "__format__"], [180, 8, 1, "", "__str__"], [180, 8, 1, "", "ctime"], [180, 7, 1, "", "day"], [180, 8, 1, "", "fromisocalendar"], [180, 8, 1, "", "fromisoformat"], [180, 8, 1, "", "fromordinal"], [180, 8, 1, "", "fromtimestamp"], [180, 8, 1, "", "isocalendar"], [180, 8, 1, "", "isoformat"], [180, 8, 1, "", "isoweekday"], [180, 7, 1, "", "max"], [180, 7, 1, "", "min"], [180, 7, 1, "", "month"], [180, 8, 1, "", "replace"], [180, 7, 1, "", "resolution"], [180, 8, 1, "", "strftime"], [180, 8, 1, "", "timetuple"], [180, 8, 1, "", "today"], [180, 8, 1, "", "toordinal"], [180, 8, 1, "", "weekday"], [180, 7, 1, "", "year"]], "datetime.datetime": [[180, 8, 1, "", "__format__"], [180, 8, 1, "", "__str__"], [180, 8, 1, "", "astimezone"], [180, 8, 1, "", "combine"], [180, 8, 1, "", "ctime"], [180, 8, 1, "", "date"], [180, 7, 1, "", "day"], [180, 8, 1, "", "dst"], [180, 7, 1, "", "fold"], [180, 8, 1, "", "fromisocalendar"], [180, 8, 1, "", "fromisoformat"], [180, 8, 1, "", "fromordinal"], [180, 8, 1, "", "fromtimestamp"], [180, 7, 1, "", "hour"], [180, 8, 1, "", "isocalendar"], [180, 8, 1, "", "isoformat"], [180, 8, 1, "", "isoweekday"], [180, 7, 1, "", "max"], [180, 7, 1, "", "microsecond"], [180, 7, 1, "", "min"], [180, 7, 1, "", "minute"], [180, 7, 1, "", "month"], [180, 8, 1, "", "now"], [180, 8, 1, "", "replace"], [180, 7, 1, "", "resolution"], [180, 7, 1, "", "second"], [180, 8, 1, "", "strftime"], [180, 8, 1, "", "strptime"], [180, 8, 1, "", "time"], [180, 8, 1, "", "timestamp"], [180, 8, 1, "", "timetuple"], [180, 8, 1, "", "timetz"], [180, 8, 1, "", "today"], [180, 8, 1, "", "toordinal"], [180, 7, 1, "", "tzinfo"], [180, 8, 1, "", "tzname"], [180, 8, 1, "", "utcfromtimestamp"], [180, 8, 1, "", "utcnow"], [180, 8, 1, "", "utcoffset"], [180, 8, 1, "", "utctimetuple"], [180, 8, 1, "", "weekday"], [180, 7, 1, "", "year"]], "datetime.time": [[180, 8, 1, "", "__format__"], [180, 8, 1, "", "__str__"], [180, 8, 1, "", "dst"], [180, 7, 1, "", "fold"], [180, 8, 1, "", "fromisoformat"], [180, 7, 1, "", "hour"], [180, 8, 1, "", "isoformat"], [180, 7, 1, "", "max"], [180, 7, 1, "", "microsecond"], [180, 7, 1, "", "min"], [180, 7, 1, "", "minute"], [180, 8, 1, "", "replace"], [180, 7, 1, "", "resolution"], [180, 7, 1, "", "second"], [180, 8, 1, "", "strftime"], [180, 7, 1, "", "tzinfo"], [180, 8, 1, "", "tzname"], [180, 8, 1, "", "utcoffset"]], "datetime.timedelta": [[180, 7, 1, "", "max"], [180, 7, 1, "", "min"], [180, 7, 1, "", "resolution"], [180, 8, 1, "", "total_seconds"]], "datetime.timezone": [[180, 8, 1, "", "dst"], [180, 8, 1, "", "fromutc"], [180, 8, 1, "", "tzname"], [180, 7, 1, "", "utc"], [180, 8, 1, "", "utcoffset"]], "datetime.tzinfo": [[180, 8, 1, "", "dst"], [180, 8, 1, "", "fromutc"], [180, 8, 1, "", "tzname"], [180, 8, 1, "", "utcoffset"]], "dbm": [[181, 10, 0, "-", "dumb"], [181, 6, 1, "", "error"], [181, 10, 0, "-", "gnu"], [181, 10, 0, "-", "ndbm"], [181, 12, 1, "", "open"], [181, 12, 1, "", "whichdb"]], "dbm.dumb.dumbdbm": [[181, 8, 1, "", "close"], [181, 8, 1, "", "sync"]], "dbm.dumb": [[181, 6, 1, "", "error"], [181, 12, 1, "", "open"]], "dbm.gnu": [[181, 6, 1, "", "error"], [181, 12, 1, "", "open"], [181, 9, 1, "", "open_flags"]], "dbm.gnu.gdbm": [[181, 8, 1, "", "close"], [181, 8, 1, "", "firstkey"], [181, 8, 1, "", "nextkey"], [181, 8, 1, "", "reorganize"], [181, 8, 1, "", "sync"]], "dbm.ndbm": [[181, 6, 1, "", "error"], [181, 9, 1, "", "library"], [181, 12, 1, "", "open"]], "dbm.ndbm.ndbm": [[181, 8, 1, "", "close"]], "decimal": [[183, 11, 1, "", "BasicContext"], [183, 11, 1, "", "Clamped"], [183, 11, 1, "", "Context"], [183, 11, 1, "", "Decimal"], [183, 11, 1, "", "DecimalException"], [183, 11, 1, "", "DefaultContext"], [183, 11, 1, "", "DivisionByZero"], [183, 11, 1, "", "ExtendedContext"], [183, 11, 1, "", "FloatOperation"], [183, 9, 1, "", "HAVE_CONTEXTVAR"], [183, 9, 1, "", "HAVE_THREADS"], [183, 11, 1, "", "Inexact"], [183, 11, 1, "", "InvalidOperation"], [183, 9, 1, "", "MAX_EMAX"], [183, 9, 1, "", "MAX_PREC"], [183, 9, 1, "", "MIN_EMIN"], [183, 9, 1, "", "MIN_ETINY"], [183, 11, 1, "", "Overflow"], [183, 9, 1, "", "ROUND_05UP"], [183, 9, 1, "", "ROUND_CEILING"], [183, 9, 1, "", "ROUND_DOWN"], [183, 9, 1, "", "ROUND_FLOOR"], [183, 9, 1, "", "ROUND_HALF_DOWN"], [183, 9, 1, "", "ROUND_HALF_EVEN"], [183, 9, 1, "", "ROUND_HALF_UP"], [183, 9, 1, "", "ROUND_UP"], [183, 11, 1, "", "Rounded"], [183, 11, 1, "", "Subnormal"], [183, 11, 1, "", "Underflow"], [183, 12, 1, "", "getcontext"], [183, 12, 1, "", "localcontext"], [183, 12, 1, "", "setcontext"]], "decimal.Context": [[183, 8, 1, "", "Etiny"], [183, 8, 1, "", "Etop"], [183, 8, 1, "", "abs"], [183, 8, 1, "", "add"], [183, 8, 1, "", "canonical"], [183, 8, 1, "", "clear_flags"], [183, 8, 1, "", "clear_traps"], [183, 8, 1, "", "compare"], [183, 8, 1, "", "compare_signal"], [183, 8, 1, "", "compare_total"], [183, 8, 1, "", "compare_total_mag"], [183, 8, 1, "", "copy"], [183, 8, 1, "", "copy_abs"], [183, 8, 1, "", "copy_decimal"], [183, 8, 1, "", "copy_negate"], [183, 8, 1, "", "copy_sign"], [183, 8, 1, "", "create_decimal"], [183, 8, 1, "", "create_decimal_from_float"], [183, 8, 1, "", "divide"], [183, 8, 1, "", "divide_int"], [183, 8, 1, "", "divmod"], [183, 8, 1, "", "exp"], [183, 8, 1, "", "fma"], [183, 8, 1, "", "is_canonical"], [183, 8, 1, "", "is_finite"], [183, 8, 1, "", "is_infinite"], [183, 8, 1, "", "is_nan"], [183, 8, 1, "", "is_normal"], [183, 8, 1, "", "is_qnan"], [183, 8, 1, "", "is_signed"], [183, 8, 1, "", "is_snan"], [183, 8, 1, "", "is_subnormal"], [183, 8, 1, "", "is_zero"], [183, 8, 1, "", "ln"], [183, 8, 1, "", "log10"], [183, 8, 1, "", "logb"], [183, 8, 1, "", "logical_and"], [183, 8, 1, "", "logical_invert"], [183, 8, 1, "", "logical_or"], [183, 8, 1, "", "logical_xor"], [183, 8, 1, "", "max"], [183, 8, 1, "", "max_mag"], [183, 8, 1, "", "min"], [183, 8, 1, "", "min_mag"], [183, 8, 1, "", "minus"], [183, 8, 1, "", "multiply"], [183, 8, 1, "", "next_minus"], [183, 8, 1, "", "next_plus"], [183, 8, 1, "", "next_toward"], [183, 8, 1, "", "normalize"], [183, 8, 1, "", "number_class"], [183, 8, 1, "", "plus"], [183, 8, 1, "", "power"], [183, 8, 1, "", "quantize"], [183, 8, 1, "", "radix"], [183, 8, 1, "", "remainder"], [183, 8, 1, "", "remainder_near"], [183, 8, 1, "", "rotate"], [183, 8, 1, "", "same_quantum"], [183, 8, 1, "", "scaleb"], [183, 8, 1, "", "shift"], [183, 8, 1, "", "sqrt"], [183, 8, 1, "", "subtract"], [183, 8, 1, "", "to_eng_string"], [183, 8, 1, "", "to_integral_exact"], [183, 8, 1, "", "to_sci_string"]], "decimal.Decimal": [[183, 8, 1, "", "adjusted"], [183, 8, 1, "", "as_integer_ratio"], [183, 8, 1, "", "as_tuple"], [183, 8, 1, "", "canonical"], [183, 8, 1, "", "compare"], [183, 8, 1, "", "compare_signal"], [183, 8, 1, "", "compare_total"], [183, 8, 1, "", "compare_total_mag"], [183, 8, 1, "", "conjugate"], [183, 8, 1, "", "copy_abs"], [183, 8, 1, "", "copy_negate"], [183, 8, 1, "", "copy_sign"], [183, 8, 1, "", "exp"], [183, 8, 1, "", "fma"], [183, 8, 1, "", "from_float"], [183, 8, 1, "", "is_canonical"], [183, 8, 1, "", "is_finite"], [183, 8, 1, "", "is_infinite"], [183, 8, 1, "", "is_nan"], [183, 8, 1, "", "is_normal"], [183, 8, 1, "", "is_qnan"], [183, 8, 1, "", "is_signed"], [183, 8, 1, "", "is_snan"], [183, 8, 1, "", "is_subnormal"], [183, 8, 1, "", "is_zero"], [183, 8, 1, "", "ln"], [183, 8, 1, "", "log10"], [183, 8, 1, "", "logb"], [183, 8, 1, "", "logical_and"], [183, 8, 1, "", "logical_invert"], [183, 8, 1, "", "logical_or"], [183, 8, 1, "", "logical_xor"], [183, 8, 1, "", "max"], [183, 8, 1, "", "max_mag"], [183, 8, 1, "", "min"], [183, 8, 1, "", "min_mag"], [183, 8, 1, "", "next_minus"], [183, 8, 1, "", "next_plus"], [183, 8, 1, "", "next_toward"], [183, 8, 1, "", "normalize"], [183, 8, 1, "", "number_class"], [183, 8, 1, "", "quantize"], [183, 8, 1, "", "radix"], [183, 8, 1, "", "remainder_near"], [183, 8, 1, "", "rotate"], [183, 8, 1, "", "same_quantum"], [183, 8, 1, "", "scaleb"], [183, 8, 1, "", "shift"], [183, 8, 1, "", "sqrt"], [183, 8, 1, "", "to_eng_string"], [183, 8, 1, "", "to_integral"], [183, 8, 1, "", "to_integral_exact"], [183, 8, 1, "", "to_integral_value"]], "definition": [[341, 7, 1, "", "__name__"], [341, 7, 1, "", "__qualname__"], [341, 7, 1, "", "__type_params__"]], "dict": [[341, 8, 1, "", "clear"], [341, 8, 1, "", "copy"], [341, 8, 1, "", "fromkeys"], [341, 8, 1, "", "get"], [341, 8, 1, "", "items"], [341, 8, 1, "", "keys"], [341, 8, 1, "", "pop"], [341, 8, 1, "", "popitem"], [341, 8, 1, "", "setdefault"], [341, 8, 1, "", "update"], [341, 8, 1, "", "values"]], "difflib": [[187, 11, 1, "", "Differ"], [187, 11, 1, "", "HtmlDiff"], [187, 12, 1, "", "IS_CHARACTER_JUNK"], [187, 12, 1, "", "IS_LINE_JUNK"], [187, 11, 1, "", "SequenceMatcher"], [187, 12, 1, "", "context_diff"], [187, 12, 1, "", "diff_bytes"], [187, 12, 1, "", "get_close_matches"], [187, 12, 1, "", "ndiff"], [187, 12, 1, "", "restore"], [187, 12, 1, "", "unified_diff"]], "difflib.Differ": [[187, 8, 1, "", "compare"]], "difflib.HtmlDiff": [[187, 8, 1, "", "__init__"], [187, 8, 1, "", "make_file"], [187, 8, 1, "", "make_table"]], "difflib.SequenceMatcher": [[187, 8, 1, "", "find_longest_match"], [187, 8, 1, "", "get_grouped_opcodes"], [187, 8, 1, "", "get_matching_blocks"], [187, 8, 1, "", "get_opcodes"], [187, 8, 1, "", "quick_ratio"], [187, 8, 1, "", "ratio"], [187, 8, 1, "", "real_quick_ratio"], [187, 8, 1, "", "set_seq1"], [187, 8, 1, "", "set_seq2"], [187, 8, 1, "", "set_seqs"]], "dis": [[188, 11, 1, "", "Bytecode"], [188, 11, 1, "", "Instruction"], [188, 11, 1, "", "Positions"], [188, 9, 1, "", "cmp_op"], [188, 12, 1, "", "code_info"], [188, 12, 1, "", "dis"], [188, 12, 1, "", "disassemble"], [188, 12, 1, "", "disco"], [188, 12, 1, "", "distb"], [188, 12, 1, "", "findlabels"], [188, 12, 1, "", "findlinestarts"], [188, 12, 1, "", "get_instructions"], [188, 9, 1, "", "hasarg"], [188, 9, 1, "", "hascompare"], [188, 9, 1, "", "hasconst"], [188, 9, 1, "", "hasexc"], [188, 9, 1, "", "hasfree"], [188, 9, 1, "", "hasjabs"], [188, 9, 1, "", "hasjrel"], [188, 9, 1, "", "haslocal"], [188, 9, 1, "", "hasname"], [188, 9, 1, "", "opmap"], [188, 9, 1, "", "opname"], [188, 12, 1, "", "show_code"], [188, 12, 1, "", "stack_effect"], [188, 14, 1, "cmdoption-dis-h", "--help"], [188, 14, 1, "cmdoption-dis-h", "-h"]], "dis.Bytecode": [[188, 9, 1, "", "codeobj"], [188, 8, 1, "", "dis"], [188, 9, 1, "", "first_line"], [188, 8, 1, "", "from_traceback"], [188, 8, 1, "", "info"]], "dis.Instruction": [[188, 9, 1, "", "arg"], [188, 9, 1, "", "argrepr"], [188, 9, 1, "", "argval"], [188, 9, 1, "", "is_jump_target"], [188, 9, 1, "", "offset"], [188, 9, 1, "", "opcode"], [188, 9, 1, "", "opname"], [188, 9, 1, "", "positions"], [188, 9, 1, "", "starts_line"]], "dis.Positions": [[188, 9, 1, "", "col_offset"], [188, 9, 1, "", "end_col_offset"], [188, 9, 1, "", "end_lineno"], [188, 9, 1, "", "lineno"]], "doctest": [[190, 9, 1, "", "COMPARISON_FLAGS"], [190, 9, 1, "", "DONT_ACCEPT_BLANKLINE"], [190, 9, 1, "", "DONT_ACCEPT_TRUE_FOR_1"], [190, 11, 1, "", "DebugRunner"], [190, 12, 1, "", "DocFileSuite"], [190, 11, 1, "", "DocTest"], [190, 6, 1, "", "DocTestFailure"], [190, 11, 1, "", "DocTestFinder"], [190, 11, 1, "", "DocTestParser"], [190, 11, 1, "", "DocTestRunner"], [190, 12, 1, "", "DocTestSuite"], [190, 9, 1, "", "ELLIPSIS"], [190, 11, 1, "", "Example"], [190, 9, 1, "", "FAIL_FAST"], [190, 9, 1, "", "IGNORE_EXCEPTION_DETAIL"], [190, 9, 1, "", "NORMALIZE_WHITESPACE"], [190, 11, 1, "", "OutputChecker"], [190, 9, 1, "", "REPORTING_FLAGS"], [190, 9, 1, "", "REPORT_CDIFF"], [190, 9, 1, "", "REPORT_NDIFF"], [190, 9, 1, "", "REPORT_ONLY_FIRST_FAILURE"], [190, 9, 1, "", "REPORT_UDIFF"], [190, 9, 1, "", "SKIP"], [190, 6, 1, "", "UnexpectedException"], [190, 12, 1, "", "debug"], [190, 12, 1, "", "debug_src"], [190, 6, 1, "", "failureException"], [190, 12, 1, "", "register_optionflag"], [190, 12, 1, "", "run_docstring_examples"], [190, 12, 1, "", "script_from_examples"], [190, 12, 1, "", "set_unittest_reportflags"], [190, 12, 1, "", "testfile"], [190, 12, 1, "", "testmod"], [190, 12, 1, "", "testsource"]], "doctest.DocTest": [[190, 7, 1, "", "docstring"], [190, 7, 1, "", "examples"], [190, 7, 1, "", "filename"], [190, 7, 1, "", "globs"], [190, 7, 1, "", "lineno"], [190, 7, 1, "", "name"]], "doctest.DocTestFailure": [[190, 7, 1, "", "example"], [190, 7, 1, "", "got"], [190, 7, 1, "", "test"]], "doctest.DocTestFinder": [[190, 8, 1, "", "find"]], "doctest.DocTestParser": [[190, 8, 1, "", "get_doctest"], [190, 8, 1, "", "get_examples"], [190, 8, 1, "", "parse"]], "doctest.DocTestRunner": [[190, 8, 1, "", "report_failure"], [190, 8, 1, "", "report_start"], [190, 8, 1, "", "report_success"], [190, 8, 1, "", "report_unexpected_exception"], [190, 8, 1, "", "run"], [190, 8, 1, "", "summarize"]], "doctest.Example": [[190, 7, 1, "", "exc_msg"], [190, 7, 1, "", "indent"], [190, 7, 1, "", "lineno"], [190, 7, 1, "", "options"], [190, 7, 1, "", "source"], [190, 7, 1, "", "want"]], "doctest.OutputChecker": [[190, 8, 1, "", "check_output"], [190, 8, 1, "", "output_difference"]], "doctest.UnexpectedException": [[190, 7, 1, "", "example"], [190, 7, 1, "", "exc_info"], [190, 7, 1, "", "test"]], "email": [[192, 10, 0, "-", "charset"], [194, 10, 0, "-", "contentmanager"], [195, 10, 0, "-", "encoders"], [196, 10, 0, "-", "errors"], [198, 10, 0, "-", "generator"], [199, 10, 0, "-", "header"], [200, 10, 0, "-", "headerregistry"], [201, 10, 0, "-", "iterators"], [202, 10, 0, "-", "message"], [204, 12, 1, "", "message_from_binary_file"], [204, 12, 1, "", "message_from_bytes"], [204, 12, 1, "", "message_from_file"], [204, 12, 1, "", "message_from_string"], [203, 10, 0, "-", "mime"], [204, 10, 0, "-", "parser"], [205, 10, 0, "-", "policy"], [206, 10, 0, "-", "utils"]], "email.charset": [[192, 11, 1, "", "Charset"], [192, 12, 1, "", "add_alias"], [192, 12, 1, "", "add_charset"], [192, 12, 1, "", "add_codec"]], "email.charset.Charset": [[192, 8, 1, "", "__eq__"], [192, 8, 1, "", "__ne__"], [192, 8, 1, "", "__str__"], [192, 8, 1, "", "body_encode"], [192, 7, 1, "", "body_encoding"], [192, 8, 1, "", "get_body_encoding"], [192, 8, 1, "", "get_output_charset"], [192, 8, 1, "", "header_encode"], [192, 8, 1, "", "header_encode_lines"], [192, 7, 1, "", "header_encoding"], [192, 7, 1, "", "input_charset"], [192, 7, 1, "", "input_codec"], [192, 7, 1, "", "output_charset"], [192, 7, 1, "", "output_codec"]], "email.contentmanager": [[194, 11, 1, "", "ContentManager"], [194, 8, 1, "", "get_content"], [194, 9, 1, "", "raw_data_manager"], [194, 8, 1, "", "set_content"]], "email.contentmanager.ContentManager": [[194, 8, 1, "", "add_get_handler"], [194, 8, 1, "", "add_set_handler"], [194, 8, 1, "", "get_content"], [194, 8, 1, "", "set_content"]], "email.encoders": [[195, 12, 1, "", "encode_7or8bit"], [195, 12, 1, "", "encode_base64"], [195, 12, 1, "", "encode_noop"], [195, 12, 1, "", "encode_quopri"]], "email.errors": [[196, 6, 1, "", "BoundaryError"], [196, 6, 1, "", "HeaderDefect"], [196, 6, 1, "", "HeaderParseError"], [196, 6, 1, "", "MessageDefect"], [196, 6, 1, "", "MessageError"], [196, 6, 1, "", "MessageParseError"], [196, 6, 1, "", "MultipartConversionError"]], "email.generator": [[198, 11, 1, "", "BytesGenerator"], [198, 11, 1, "", "DecodedGenerator"], [198, 11, 1, "", "Generator"]], "email.generator.BytesGenerator": [[198, 8, 1, "", "clone"], [198, 8, 1, "", "flatten"], [198, 8, 1, "", "write"]], "email.generator.Generator": [[198, 8, 1, "", "clone"], [198, 8, 1, "", "flatten"], [198, 8, 1, "", "write"]], "email.header": [[199, 11, 1, "", "Header"], [199, 12, 1, "", "decode_header"], [199, 12, 1, "", "make_header"]], "email.header.Header": [[199, 8, 1, "", "__eq__"], [199, 8, 1, "", "__ne__"], [199, 8, 1, "", "__str__"], [199, 8, 1, "", "append"], [199, 8, 1, "", "encode"]], "email.headerregistry": [[200, 11, 1, "", "Address"], [200, 11, 1, "", "AddressHeader"], [200, 11, 1, "", "BaseHeader"], [200, 11, 1, "", "ContentDispositionHeader"], [200, 11, 1, "", "ContentTransferEncoding"], [200, 11, 1, "", "ContentTypeHeader"], [200, 11, 1, "", "DateHeader"], [200, 11, 1, "", "Group"], [200, 11, 1, "", "HeaderRegistry"], [200, 11, 1, "", "MIMEVersionHeader"], [200, 11, 1, "", "ParameterizedMIMEHeader"], [200, 11, 1, "", "SingleAddressHeader"], [200, 11, 1, "", "UnstructuredHeader"]], "email.headerregistry.Address": [[200, 8, 1, "", "__str__"], [200, 7, 1, "", "addr_spec"], [200, 7, 1, "", "display_name"], [200, 7, 1, "", "domain"], [200, 7, 1, "", "username"]], "email.headerregistry.AddressHeader": [[200, 7, 1, "", "addresses"], [200, 7, 1, "", "groups"]], "email.headerregistry.BaseHeader": [[200, 7, 1, "", "defects"], [200, 8, 1, "", "fold"], [200, 7, 1, "", "max_count"], [200, 7, 1, "", "name"]], "email.headerregistry.ContentDispositionHeader": [[200, 7, 1, "", "content_disposition"]], "email.headerregistry.ContentTransferEncoding": [[200, 7, 1, "", "cte"]], "email.headerregistry.ContentTypeHeader": [[200, 7, 1, "", "content_type"], [200, 7, 1, "", "maintype"], [200, 7, 1, "", "subtype"]], "email.headerregistry.DateHeader": [[200, 7, 1, "", "datetime"]], "email.headerregistry.Group": [[200, 8, 1, "", "__str__"], [200, 7, 1, "", "addresses"], [200, 7, 1, "", "display_name"]], "email.headerregistry.HeaderRegistry": [[200, 8, 1, "", "__call__"], [200, 8, 1, "", "__getitem__"], [200, 8, 1, "", "map_to_type"]], "email.headerregistry.MIMEVersionHeader": [[200, 7, 1, "", "major"], [200, 7, 1, "", "minor"], [200, 7, 1, "", "version"]], "email.headerregistry.ParameterizedMIMEHeader": [[200, 7, 1, "", "params"]], "email.headerregistry.SingleAddressHeader": [[200, 7, 1, "", "address"]], "email.iterators": [[201, 12, 1, "", "_structure"], [201, 12, 1, "", "body_line_iterator"], [201, 12, 1, "", "typed_subpart_iterator"]], "email.message": [[202, 11, 1, "", "EmailMessage"], [202, 11, 1, "", "MIMEPart"], [193, 11, 1, "", "Message"]], "email.message.EmailMessage": [[202, 8, 1, "", "__bytes__"], [202, 8, 1, "", "__contains__"], [202, 8, 1, "", "__delitem__"], [202, 8, 1, "", "__getitem__"], [202, 8, 1, "", "__len__"], [202, 8, 1, "", "__setitem__"], [202, 8, 1, "", "__str__"], [202, 8, 1, "", "add_alternative"], [202, 8, 1, "", "add_attachment"], [202, 8, 1, "", "add_header"], [202, 8, 1, "", "add_related"], [202, 8, 1, "", "as_bytes"], [202, 8, 1, "", "as_string"], [202, 8, 1, "", "clear"], [202, 8, 1, "", "clear_content"], [202, 7, 1, "", "defects"], [202, 8, 1, "", "del_param"], [202, 7, 1, "", "epilogue"], [202, 8, 1, "", "get"], [202, 8, 1, "", "get_all"], [202, 8, 1, "", "get_body"], [202, 8, 1, "", "get_boundary"], [202, 8, 1, "", "get_charsets"], [202, 8, 1, "", "get_content"], [202, 8, 1, "", "get_content_charset"], [202, 8, 1, "", "get_content_disposition"], [202, 8, 1, "", "get_content_maintype"], [202, 8, 1, "", "get_content_subtype"], [202, 8, 1, "", "get_content_type"], [202, 8, 1, "", "get_default_type"], [202, 8, 1, "", "get_filename"], [202, 8, 1, "", "get_unixfrom"], [202, 8, 1, "", "is_attachment"], [202, 8, 1, "", "is_multipart"], [202, 8, 1, "", "items"], [202, 8, 1, "", "iter_attachments"], [202, 8, 1, "", "iter_parts"], [202, 8, 1, "", "keys"], [202, 8, 1, "", "make_alternative"], [202, 8, 1, "", "make_mixed"], [202, 8, 1, "", "make_related"], [202, 7, 1, "", "preamble"], [202, 8, 1, "", "replace_header"], [202, 8, 1, "", "set_boundary"], [202, 8, 1, "", "set_content"], [202, 8, 1, "", "set_default_type"], [202, 8, 1, "", "set_param"], [202, 8, 1, "", "set_unixfrom"], [202, 8, 1, "", "values"], [202, 8, 1, "", "walk"]], "email.message.Message": [[193, 8, 1, "", "__bytes__"], [193, 8, 1, "", "__contains__"], [193, 8, 1, "", "__delitem__"], [193, 8, 1, "", "__getitem__"], [193, 8, 1, "", "__len__"], [193, 8, 1, "", "__setitem__"], [193, 8, 1, "", "__str__"], [193, 8, 1, "", "add_header"], [193, 8, 1, "", "as_bytes"], [193, 8, 1, "", "as_string"], [193, 8, 1, "", "attach"], [193, 7, 1, "", "defects"], [193, 8, 1, "", "del_param"], [193, 7, 1, "", "epilogue"], [193, 8, 1, "", "get"], [193, 8, 1, "", "get_all"], [193, 8, 1, "", "get_boundary"], [193, 8, 1, "", "get_charset"], [193, 8, 1, "", "get_charsets"], [193, 8, 1, "", "get_content_charset"], [193, 8, 1, "", "get_content_disposition"], [193, 8, 1, "", "get_content_maintype"], [193, 8, 1, "", "get_content_subtype"], [193, 8, 1, "", "get_content_type"], [193, 8, 1, "", "get_default_type"], [193, 8, 1, "", "get_filename"], [193, 8, 1, "", "get_param"], [193, 8, 1, "", "get_params"], [193, 8, 1, "", "get_payload"], [193, 8, 1, "", "get_unixfrom"], [193, 8, 1, "", "is_multipart"], [193, 8, 1, "", "items"], [193, 8, 1, "", "keys"], [193, 7, 1, "", "preamble"], [193, 8, 1, "", "replace_header"], [193, 8, 1, "", "set_boundary"], [193, 8, 1, "", "set_charset"], [193, 8, 1, "", "set_default_type"], [193, 8, 1, "", "set_param"], [193, 8, 1, "", "set_payload"], [193, 8, 1, "", "set_type"], [193, 8, 1, "", "set_unixfrom"], [193, 8, 1, "", "values"], [193, 8, 1, "", "walk"]], "email.mime": [[203, 10, 0, "-", "application"], [203, 10, 0, "-", "audio"], [203, 10, 0, "-", "base"], [203, 10, 0, "-", "image"], [203, 10, 0, "-", "message"], [203, 10, 0, "-", "multipart"], [203, 10, 0, "-", "nonmultipart"], [203, 10, 0, "-", "text"]], "email.mime.application": [[203, 11, 1, "", "MIMEApplication"]], "email.mime.audio": [[203, 11, 1, "", "MIMEAudio"]], "email.mime.base": [[203, 11, 1, "", "MIMEBase"]], "email.mime.image": [[203, 11, 1, "", "MIMEImage"]], "email.mime.message": [[203, 11, 1, "", "MIMEMessage"]], "email.mime.multipart": [[203, 11, 1, "", "MIMEMultipart"]], "email.mime.nonmultipart": [[203, 11, 1, "", "MIMENonMultipart"]], "email.mime.text": [[203, 11, 1, "", "MIMEText"]], "email.parser": [[204, 11, 1, "", "BytesFeedParser"], [204, 11, 1, "", "BytesHeaderParser"], [204, 11, 1, "", "BytesParser"], [204, 11, 1, "", "FeedParser"], [204, 11, 1, "", "HeaderParser"], [204, 11, 1, "", "Parser"]], "email.parser.BytesFeedParser": [[204, 8, 1, "", "close"], [204, 8, 1, "", "feed"]], "email.parser.BytesParser": [[204, 8, 1, "", "parse"], [204, 8, 1, "", "parsebytes"]], "email.parser.Parser": [[204, 8, 1, "", "parse"], [204, 8, 1, "", "parsestr"]], "email.policy": [[205, 11, 1, "", "Compat32"], [205, 11, 1, "", "EmailPolicy"], [205, 9, 1, "", "HTTP"], [205, 11, 1, "", "Policy"], [205, 9, 1, "", "SMTP"], [205, 9, 1, "", "SMTPUTF8"], [205, 9, 1, "", "compat32"], [205, 9, 1, "", "default"], [205, 9, 1, "", "strict"]], "email.policy.Compat32": [[205, 8, 1, "", "fold"], [205, 8, 1, "", "fold_binary"], [205, 8, 1, "", "header_fetch_parse"], [205, 8, 1, "", "header_source_parse"], [205, 8, 1, "", "header_store_parse"], [205, 7, 1, "", "mangle_from_"]], "email.policy.EmailPolicy": [[205, 7, 1, "", "content_manager"], [205, 8, 1, "", "fold"], [205, 8, 1, "", "fold_binary"], [205, 7, 1, "", "header_factory"], [205, 8, 1, "", "header_fetch_parse"], [205, 8, 1, "", "header_max_count"], [205, 8, 1, "", "header_source_parse"], [205, 8, 1, "", "header_store_parse"], [205, 7, 1, "", "refold_source"], [205, 7, 1, "", "utf8"]], "email.policy.Policy": [[205, 8, 1, "", "clone"], [205, 7, 1, "", "cte_type"], [205, 8, 1, "", "fold"], [205, 8, 1, "", "fold_binary"], [205, 8, 1, "", "handle_defect"], [205, 8, 1, "", "header_fetch_parse"], [205, 8, 1, "", "header_max_count"], [205, 8, 1, "", "header_source_parse"], [205, 8, 1, "", "header_store_parse"], [205, 7, 1, "", "linesep"], [205, 7, 1, "", "mangle_from_"], [205, 7, 1, "", "max_line_length"], [205, 7, 1, "", "message_factory"], [205, 7, 1, "", "raise_on_defect"], [205, 8, 1, "", "register_defect"]], "email.utils": [[206, 12, 1, "", "collapse_rfc2231_value"], [206, 12, 1, "", "decode_params"], [206, 12, 1, "", "decode_rfc2231"], [206, 12, 1, "", "encode_rfc2231"], [206, 12, 1, "", "format_datetime"], [206, 12, 1, "", "formataddr"], [206, 12, 1, "", "formatdate"], [206, 12, 1, "", "getaddresses"], [206, 12, 1, "", "localtime"], [206, 12, 1, "", "make_msgid"], [206, 12, 1, "", "mktime_tz"], [206, 12, 1, "", "parseaddr"], [206, 12, 1, "", "parsedate"], [206, 12, 1, "", "parsedate_to_datetime"], [206, 12, 1, "", "parsedate_tz"], [206, 12, 1, "", "quote"], [206, 12, 1, "", "unquote"]], "encodings": [[155, 10, 0, "-", "idna"], [155, 10, 0, "-", "mbcs"], [155, 10, 0, "-", "utf_8_sig"]], "encodings.idna": [[155, 12, 1, "", "ToASCII"], [155, 12, 1, "", "ToUnicode"], [155, 12, 1, "", "nameprep"]], "ensurepip": [[207, 12, 1, "", "bootstrap"], [207, 12, 1, "", "version"]], "enum": [[208, 11, 1, "", "Enum"], [208, 11, 1, "", "EnumCheck"], [208, 11, 1, "", "EnumType"], [208, 11, 1, "", "Flag"], [208, 11, 1, "", "FlagBoundary"], [208, 11, 1, "", "IntEnum"], [208, 11, 1, "", "IntFlag"], [208, 11, 1, "", "ReprEnum"], [208, 11, 1, "", "StrEnum"], [208, 11, 1, "", "auto"], [208, 12, 1, "", "global_enum"], [208, 12, 1, "", "member"], [208, 12, 1, "", "nonmember"], [208, 12, 1, "", "property"], [208, 12, 1, "", "show_flag_values"], [208, 12, 1, "", "unique"], [208, 12, 1, "", "verify"]], "enum.Enum": [[208, 8, 1, "", "__dir__"], [208, 8, 1, "", "__format__"], [208, 8, 1, "", "__init_subclass__"], [208, 8, 1, "", "__repr__"], [208, 8, 1, "", "__str__"], [208, 8, 1, "", "_generate_next_value_"], [208, 7, 1, "", "_ignore_"], [208, 8, 1, "", "_missing_"], [208, 7, 1, "", "name"], [208, 7, 1, "", "value"]], "enum.EnumCheck": [[208, 7, 1, "", "CONTINUOUS"], [208, 7, 1, "", "NAMED_FLAGS"], [208, 7, 1, "", "UNIQUE"]], "enum.EnumType": [[208, 8, 1, "", "__call__"], [208, 8, 1, "", "__contains__"], [208, 8, 1, "", "__dir__"], [208, 8, 1, "", "__getitem__"], [208, 8, 1, "", "__iter__"], [208, 8, 1, "", "__len__"], [208, 8, 1, "", "__reversed__"]], "enum.Flag": [[208, 8, 1, "", "__and__"], [208, 8, 1, "", "__contains__"], [208, 8, 1, "", "__or__"], [208, 8, 1, "", "__xor__"], [208, 8, 1, "", "_numeric_repr_"]], "enum.FlagBoundary": [[208, 7, 1, "", "CONFORM"], [208, 7, 1, "", "EJECT"], [208, 7, 1, "", "KEEP"], [208, 7, 1, "", "STRICT"]], "errno": [[209, 9, 1, "", "E2BIG"], [209, 9, 1, "", "EACCES"], [209, 9, 1, "", "EADDRINUSE"], [209, 9, 1, "", "EADDRNOTAVAIL"], [209, 9, 1, "", "EADV"], [209, 9, 1, "", "EAFNOSUPPORT"], [209, 9, 1, "", "EAGAIN"], [209, 9, 1, "", "EALREADY"], [209, 9, 1, "", "EBADE"], [209, 9, 1, "", "EBADF"], [209, 9, 1, "", "EBADFD"], [209, 9, 1, "", "EBADMSG"], [209, 9, 1, "", "EBADR"], [209, 9, 1, "", "EBADRQC"], [209, 9, 1, "", "EBADSLT"], [209, 9, 1, "", "EBFONT"], [209, 9, 1, "", "EBUSY"], [209, 9, 1, "", "ECANCELED"], [209, 9, 1, "", "ECHILD"], [209, 9, 1, "", "ECHRNG"], [209, 9, 1, "", "ECOMM"], [209, 9, 1, "", "ECONNABORTED"], [209, 9, 1, "", "ECONNREFUSED"], [209, 9, 1, "", "ECONNRESET"], [209, 9, 1, "", "EDEADLK"], [209, 9, 1, "", "EDEADLOCK"], [209, 9, 1, "", "EDESTADDRREQ"], [209, 9, 1, "", "EDOM"], [209, 9, 1, "", "EDOTDOT"], [209, 9, 1, "", "EDQUOT"], [209, 9, 1, "", "EEXIST"], [209, 9, 1, "", "EFAULT"], [209, 9, 1, "", "EFBIG"], [209, 9, 1, "", "EHOSTDOWN"], [209, 9, 1, "", "EHOSTUNREACH"], [209, 9, 1, "", "EIDRM"], [209, 9, 1, "", "EILSEQ"], [209, 9, 1, "", "EINPROGRESS"], [209, 9, 1, "", "EINTR"], [209, 9, 1, "", "EINVAL"], [209, 9, 1, "", "EIO"], [209, 9, 1, "", "EISCONN"], [209, 9, 1, "", "EISDIR"], [209, 9, 1, "", "EISNAM"], [209, 9, 1, "", "EL2HLT"], [209, 9, 1, "", "EL2NSYNC"], [209, 9, 1, "", "EL3HLT"], [209, 9, 1, "", "EL3RST"], [209, 9, 1, "", "ELIBACC"], [209, 9, 1, "", "ELIBBAD"], [209, 9, 1, "", "ELIBEXEC"], [209, 9, 1, "", "ELIBMAX"], [209, 9, 1, "", "ELIBSCN"], [209, 9, 1, "", "ELNRNG"], [209, 9, 1, "", "ELOOP"], [209, 9, 1, "", "EMFILE"], [209, 9, 1, "", "EMLINK"], [209, 9, 1, "", "EMSGSIZE"], [209, 9, 1, "", "EMULTIHOP"], [209, 9, 1, "", "ENAMETOOLONG"], [209, 9, 1, "", "ENAVAIL"], [209, 9, 1, "", "ENETDOWN"], [209, 9, 1, "", "ENETRESET"], [209, 9, 1, "", "ENETUNREACH"], [209, 9, 1, "", "ENFILE"], [209, 9, 1, "", "ENOANO"], [209, 9, 1, "", "ENOBUFS"], [209, 9, 1, "", "ENOCSI"], [209, 9, 1, "", "ENODATA"], [209, 9, 1, "", "ENODEV"], [209, 9, 1, "", "ENOENT"], [209, 9, 1, "", "ENOEXEC"], [209, 9, 1, "", "ENOLCK"], [209, 9, 1, "", "ENOLINK"], [209, 9, 1, "", "ENOMEM"], [209, 9, 1, "", "ENOMSG"], [209, 9, 1, "", "ENONET"], [209, 9, 1, "", "ENOPKG"], [209, 9, 1, "", "ENOPROTOOPT"], [209, 9, 1, "", "ENOSPC"], [209, 9, 1, "", "ENOSR"], [209, 9, 1, "", "ENOSTR"], [209, 9, 1, "", "ENOSYS"], [209, 9, 1, "", "ENOTBLK"], [209, 9, 1, "", "ENOTCAPABLE"], [209, 9, 1, "", "ENOTCONN"], [209, 9, 1, "", "ENOTDIR"], [209, 9, 1, "", "ENOTEMPTY"], [209, 9, 1, "", "ENOTNAM"], [209, 9, 1, "", "ENOTRECOVERABLE"], [209, 9, 1, "", "ENOTSOCK"], [209, 9, 1, "", "ENOTSUP"], [209, 9, 1, "", "ENOTTY"], [209, 9, 1, "", "ENOTUNIQ"], [209, 9, 1, "", "ENXIO"], [209, 9, 1, "", "EOPNOTSUPP"], [209, 9, 1, "", "EOVERFLOW"], [209, 9, 1, "", "EOWNERDEAD"], [209, 9, 1, "", "EPERM"], [209, 9, 1, "", "EPFNOSUPPORT"], [209, 9, 1, "", "EPIPE"], [209, 9, 1, "", "EPROTO"], [209, 9, 1, "", "EPROTONOSUPPORT"], [209, 9, 1, "", "EPROTOTYPE"], [209, 9, 1, "", "EQFULL"], [209, 9, 1, "", "ERANGE"], [209, 9, 1, "", "EREMCHG"], [209, 9, 1, "", "EREMOTE"], [209, 9, 1, "", "EREMOTEIO"], [209, 9, 1, "", "ERESTART"], [209, 9, 1, "", "EROFS"], [209, 9, 1, "", "ESHUTDOWN"], [209, 9, 1, "", "ESOCKTNOSUPPORT"], [209, 9, 1, "", "ESPIPE"], [209, 9, 1, "", "ESRCH"], [209, 9, 1, "", "ESRMNT"], [209, 9, 1, "", "ESTALE"], [209, 9, 1, "", "ESTRPIPE"], [209, 9, 1, "", "ETIME"], [209, 9, 1, "", "ETIMEDOUT"], [209, 9, 1, "", "ETOOMANYREFS"], [209, 9, 1, "", "ETXTBSY"], [209, 9, 1, "", "EUCLEAN"], [209, 9, 1, "", "EUNATCH"], [209, 9, 1, "", "EUSERS"], [209, 9, 1, "", "EWOULDBLOCK"], [209, 9, 1, "", "EXDEV"], [209, 9, 1, "", "EXFULL"], [209, 9, 1, "", "errorcode"]], "faulthandler": [[211, 12, 1, "", "cancel_dump_traceback_later"], [211, 12, 1, "", "disable"], [211, 12, 1, "", "dump_traceback"], [211, 12, 1, "", "dump_traceback_later"], [211, 12, 1, "", "enable"], [211, 12, 1, "", "is_enabled"], [211, 12, 1, "", "register"], [211, 12, 1, "", "unregister"]], "fcntl": [[212, 12, 1, "", "fcntl"], [212, 12, 1, "", "flock"], [212, 12, 1, "", "ioctl"], [212, 12, 1, "", "lockf"]], "filecmp": [[213, 7, 1, "", "DEFAULT_IGNORES"], [213, 12, 1, "", "clear_cache"], [213, 12, 1, "", "cmp"], [213, 12, 1, "", "cmpfiles"], [213, 11, 1, "", "dircmp"]], "filecmp.dircmp": [[213, 7, 1, "", "common"], [213, 7, 1, "", "common_dirs"], [213, 7, 1, "", "common_files"], [213, 7, 1, "", "common_funny"], [213, 7, 1, "", "diff_files"], [213, 7, 1, "", "funny_files"], [213, 7, 1, "", "left"], [213, 7, 1, "", "left_list"], [213, 7, 1, "", "left_only"], [213, 8, 1, "", "report"], [213, 8, 1, "", "report_full_closure"], [213, 8, 1, "", "report_partial_closure"], [213, 7, 1, "", "right"], [213, 7, 1, "", "right_list"], [213, 7, 1, "", "right_only"], [213, 7, 1, "", "same_files"], [213, 7, 1, "", "subdirs"]], "fileinput": [[215, 11, 1, "", "FileInput"], [215, 12, 1, "", "close"], [215, 12, 1, "", "filelineno"], [215, 12, 1, "", "filename"], [215, 12, 1, "", "fileno"], [215, 12, 1, "", "hook_compressed"], [215, 12, 1, "", "hook_encoded"], [215, 12, 1, "", "input"], [215, 12, 1, "", "isfirstline"], [215, 12, 1, "", "isstdin"], [215, 12, 1, "", "lineno"], [215, 12, 1, "", "nextfile"]], "float": [[341, 8, 1, "", "as_integer_ratio"], [341, 8, 1, "", "fromhex"], [341, 8, 1, "", "hex"], [341, 8, 1, "", "is_integer"]], "fnmatch": [[217, 12, 1, "", "filter"], [217, 12, 1, "", "fnmatch"], [217, 12, 1, "", "fnmatchcase"], [217, 12, 1, "", "translate"]], "fractions": [[218, 11, 1, "", "Fraction"]], "fractions.Fraction": [[218, 8, 1, "", "__ceil__"], [218, 8, 1, "", "__floor__"], [218, 8, 1, "", "__format__"], [218, 8, 1, "", "__round__"], [218, 8, 1, "", "as_integer_ratio"], [218, 7, 1, "", "denominator"], [218, 8, 1, "", "from_decimal"], [218, 8, 1, "", "from_float"], [218, 8, 1, "", "is_integer"], [218, 8, 1, "", "limit_denominator"], [218, 7, 1, "", "numerator"]], "frame": [[425, 8, 1, "", "clear"], [425, 7, 1, "", "f_back"], [425, 7, 1, "", "f_builtins"], [425, 7, 1, "", "f_code"], [425, 7, 1, "", "f_globals"], [425, 7, 1, "", "f_lasti"], [425, 7, 1, "", "f_lineno"], [425, 7, 1, "", "f_locals"], [425, 7, 1, "", "f_trace"], [425, 7, 1, "", "f_trace_lines"], [425, 7, 1, "", "f_trace_opcodes"]], "frozenset": [[341, 8, 1, "", "add"], [341, 8, 1, "", "clear"], [341, 8, 1, "", "copy"], [341, 8, 1, "", "difference"], [341, 8, 1, "", "difference_update"], [341, 8, 1, "", "discard"], [341, 8, 1, "", "intersection"], [341, 8, 1, "", "intersection_update"], [341, 8, 1, "", "isdisjoint"], [341, 8, 1, "", "issubset"], [341, 8, 1, "", "issuperset"], [341, 8, 1, "", "pop"], [341, 8, 1, "", "remove"], [341, 8, 1, "", "symmetric_difference"], [341, 8, 1, "", "symmetric_difference_update"], [341, 8, 1, "", "union"], [341, 8, 1, "", "update"]], "ftplib": [[220, 11, 1, "", "FTP"], [220, 11, 1, "", "FTP_TLS"], [220, 9, 1, "", "all_errors"], [220, 6, 1, "", "error_perm"], [220, 6, 1, "", "error_proto"], [220, 6, 1, "", "error_reply"], [220, 6, 1, "", "error_temp"]], "ftplib.FTP": [[220, 8, 1, "", "abort"], [220, 8, 1, "", "close"], [220, 8, 1, "", "connect"], [220, 8, 1, "", "cwd"], [220, 8, 1, "", "delete"], [220, 8, 1, "", "dir"], [220, 8, 1, "", "getwelcome"], [220, 8, 1, "", "login"], [220, 8, 1, "", "mkd"], [220, 8, 1, "", "mlsd"], [220, 8, 1, "", "nlst"], [220, 8, 1, "", "ntransfercmd"], [220, 8, 1, "", "pwd"], [220, 8, 1, "", "quit"], [220, 8, 1, "", "rename"], [220, 8, 1, "", "retrbinary"], [220, 8, 1, "", "retrlines"], [220, 8, 1, "", "rmd"], [220, 8, 1, "", "sendcmd"], [220, 8, 1, "", "set_debuglevel"], [220, 8, 1, "", "set_pasv"], [220, 8, 1, "", "size"], [220, 8, 1, "", "storbinary"], [220, 8, 1, "", "storlines"], [220, 8, 1, "", "transfercmd"], [220, 8, 1, "", "voidcmd"]], "ftplib.FTP_TLS": [[220, 8, 1, "", "auth"], [220, 8, 1, "", "ccc"], [220, 8, 1, "", "prot_c"], [220, 8, 1, "", "prot_p"], [220, 7, 1, "", "ssl_version"]], "function": [[425, 7, 1, "", "__annotations__"], [425, 7, 1, "", "__closure__"], [425, 7, 1, "", "__code__"], [425, 7, 1, "", "__defaults__"], [425, 7, 1, "", "__dict__"], [425, 7, 1, "", "__doc__"], [425, 7, 1, "", "__globals__"], [425, 7, 1, "", "__kwdefaults__"], [425, 7, 1, "", "__module__"], [425, 7, 1, "", "__name__"], [425, 7, 1, "", "__qualname__"], [425, 7, 1, "", "__type_params__"]], "functools": [[223, 12, 1, "", "cache"], [223, 12, 1, "", "cached_property"], [223, 12, 1, "", "cmp_to_key"], [223, 12, 1, "", "lru_cache"], [223, 12, 1, "", "partial"], [223, 11, 1, "", "partialmethod"], [223, 12, 1, "", "reduce"], [223, 12, 1, "", "singledispatch"], [223, 11, 1, "", "singledispatchmethod"], [223, 12, 1, "", "total_ordering"], [223, 12, 1, "", "update_wrapper"], [223, 12, 1, "", "wraps"]], "functools.partial": [[223, 7, 1, "", "args"], [223, 7, 1, "", "func"], [223, 7, 1, "", "keywords"]], "gc": [[224, 9, 1, "", "DEBUG_COLLECTABLE"], [224, 9, 1, "", "DEBUG_LEAK"], [224, 9, 1, "", "DEBUG_SAVEALL"], [224, 9, 1, "", "DEBUG_STATS"], [224, 9, 1, "", "DEBUG_UNCOLLECTABLE"], [224, 9, 1, "", "callbacks"], [224, 12, 1, "", "collect"], [224, 12, 1, "", "disable"], [224, 12, 1, "", "enable"], [224, 12, 1, "", "freeze"], [224, 9, 1, "", "garbage"], [224, 12, 1, "", "get_count"], [224, 12, 1, "", "get_debug"], [224, 12, 1, "", "get_freeze_count"], [224, 12, 1, "", "get_objects"], [224, 12, 1, "", "get_referents"], [224, 12, 1, "", "get_referrers"], [224, 12, 1, "", "get_stats"], [224, 12, 1, "", "get_threshold"], [224, 12, 1, "", "is_finalized"], [224, 12, 1, "", "is_tracked"], [224, 12, 1, "", "isenabled"], [224, 12, 1, "", "set_debug"], [224, 12, 1, "", "set_threshold"], [224, 12, 1, "", "unfreeze"]], "generator": [[427, 8, 1, "", "__next__"], [427, 8, 1, "", "close"], [427, 8, 1, "", "send"], [427, 8, 1, "", "throw"]], "genericalias": [[341, 7, 1, "", "__args__"], [341, 7, 1, "", "__origin__"], [341, 7, 1, "", "__parameters__"], [341, 7, 1, "", "__unpacked__"]], "getopt": [[225, 6, 1, "", "GetoptError"], [225, 6, 1, "", "error"], [225, 12, 1, "", "getopt"], [225, 12, 1, "", "gnu_getopt"]], "getpass": [[226, 6, 1, "", "GetPassWarning"], [226, 12, 1, "", "getpass"], [226, 12, 1, "", "getuser"]], "gettext": [[227, 11, 1, "", "GNUTranslations"], [227, 11, 1, "", "NullTranslations"], [227, 12, 1, "", "bindtextdomain"], [227, 12, 1, "", "dgettext"], [227, 12, 1, "", "dngettext"], [227, 12, 1, "", "dnpgettext"], [227, 12, 1, "", "dpgettext"], [227, 12, 1, "", "find"], [227, 12, 1, "", "gettext"], [227, 12, 1, "", "install"], [227, 12, 1, "", "ngettext"], [227, 12, 1, "", "npgettext"], [227, 12, 1, "", "pgettext"], [227, 12, 1, "", "textdomain"], [227, 12, 1, "", "translation"]], "gettext.GNUTranslations": [[227, 8, 1, "", "gettext"], [227, 8, 1, "", "ngettext"], [227, 8, 1, "", "npgettext"], [227, 8, 1, "", "pgettext"]], "gettext.NullTranslations": [[227, 8, 1, "", "_parse"], [227, 8, 1, "", "add_fallback"], [227, 8, 1, "", "charset"], [227, 8, 1, "", "gettext"], [227, 8, 1, "", "info"], [227, 8, 1, "", "install"], [227, 8, 1, "", "ngettext"], [227, 8, 1, "", "npgettext"], [227, 8, 1, "", "pgettext"]], "glob": [[228, 12, 1, "", "escape"], [228, 12, 1, "", "glob"], [228, 12, 1, "", "iglob"]], "graphlib": [[229, 6, 1, "", "CycleError"], [229, 11, 1, "", "TopologicalSorter"]], "graphlib.TopologicalSorter": [[229, 8, 1, "", "add"], [229, 8, 1, "", "done"], [229, 8, 1, "", "get_ready"], [229, 8, 1, "", "is_active"], [229, 8, 1, "", "prepare"], [229, 8, 1, "", "static_order"]], "grp": [[230, 12, 1, "", "getgrall"], [230, 12, 1, "", "getgrgid"], [230, 12, 1, "", "getgrnam"]], "gzip": [[231, 6, 1, "", "BadGzipFile"], [231, 11, 1, "", "GzipFile"], [231, 12, 1, "", "compress"], [231, 12, 1, "", "decompress"], [231, 12, 1, "", "open"], [231, 14, 1, "cmdoption-gzip-best", "--best"], [231, 14, 1, "cmdoption-gzip-d", "--decompress"], [231, 14, 1, "cmdoption-gzip-fast", "--fast"], [231, 14, 1, "cmdoption-gzip-h", "--help"], [231, 14, 1, "cmdoption-gzip-d", "-d"], [231, 14, 1, "cmdoption-gzip-h", "-h"], [231, 14, 1, "cmdoption-gzip-arg-file", "file"]], "gzip.GzipFile": [[231, 7, 1, "", "mtime"], [231, 7, 1, "", "name"], [231, 8, 1, "", "peek"]], "hashlib": [[232, 9, 1, "", "algorithms_available"], [232, 9, 1, "", "algorithms_guaranteed"], [232, 12, 1, "", "blake2b"], [232, 12, 1, "", "blake2s"], [232, 12, 1, "", "file_digest"], [232, 12, 1, "", "md5"], [232, 12, 1, "", "new"], [232, 12, 1, "", "pbkdf2_hmac"], [232, 12, 1, "", "scrypt"], [232, 12, 1, "", "sha1"], [232, 12, 1, "", "sha224"], [232, 12, 1, "", "sha256"], [232, 12, 1, "", "sha384"], [232, 12, 1, "", "sha3_224"], [232, 12, 1, "", "sha3_256"], [232, 12, 1, "", "sha3_384"], [232, 12, 1, "", "sha3_512"], [232, 12, 1, "", "sha512"], [232, 12, 1, "", "shake_128"], [232, 12, 1, "", "shake_256"]], "hashlib.blake2b": [[232, 9, 1, "", "MAX_DIGEST_SIZE"], [232, 9, 1, "", "MAX_KEY_SIZE"], [232, 9, 1, "", "PERSON_SIZE"], [232, 9, 1, "", "SALT_SIZE"]], "hashlib.blake2s": [[232, 9, 1, "", "MAX_DIGEST_SIZE"], [232, 9, 1, "", "MAX_KEY_SIZE"], [232, 9, 1, "", "PERSON_SIZE"], [232, 9, 1, "", "SALT_SIZE"]], "hashlib.hash": [[232, 9, 1, "", "block_size"], [232, 8, 1, "", "copy"], [232, 8, 1, "", "digest"], [232, 9, 1, "", "digest_size"], [232, 8, 1, "", "hexdigest"], [232, 7, 1, "", "name"], [232, 8, 1, "", "update"]], "hashlib.shake": [[232, 8, 1, "", "digest"], [232, 8, 1, "", "hexdigest"]], "heapq": [[233, 12, 1, "", "heapify"], [233, 12, 1, "", "heappop"], [233, 12, 1, "", "heappush"], [233, 12, 1, "", "heappushpop"], [233, 12, 1, "", "heapreplace"], [233, 12, 1, "", "merge"], [233, 12, 1, "", "nlargest"], [233, 12, 1, "", "nsmallest"]], "hmac.HMAC": [[234, 7, 1, "", "block_size"], [234, 8, 1, "", "copy"], [234, 8, 1, "", "digest"], [234, 7, 1, "", "digest_size"], [234, 8, 1, "", "hexdigest"], [234, 7, 1, "", "name"], [234, 8, 1, "", "update"]], "hmac": [[234, 12, 1, "", "compare_digest"], [234, 12, 1, "", "digest"], [234, 12, 1, "", "new"]], "html": [[236, 10, 0, "-", "entities"], [235, 12, 1, "", "escape"], [237, 10, 0, "-", "parser"], [235, 12, 1, "", "unescape"]], "html.entities": [[236, 9, 1, "", "codepoint2name"], [236, 9, 1, "", "entitydefs"], [236, 9, 1, "", "html5"], [236, 9, 1, "", "name2codepoint"]], "html.parser": [[237, 11, 1, "", "HTMLParser"]], "html.parser.HTMLParser": [[237, 8, 1, "", "close"], [237, 8, 1, "", "feed"], [237, 8, 1, "", "get_starttag_text"], [237, 8, 1, "", "getpos"], [237, 8, 1, "", "handle_charref"], [237, 8, 1, "", "handle_comment"], [237, 8, 1, "", "handle_data"], [237, 8, 1, "", "handle_decl"], [237, 8, 1, "", "handle_endtag"], [237, 8, 1, "", "handle_entityref"], [237, 8, 1, "", "handle_pi"], [237, 8, 1, "", "handle_startendtag"], [237, 8, 1, "", "handle_starttag"], [237, 8, 1, "", "reset"], [237, 8, 1, "", "unknown_decl"]], "http": [[238, 11, 1, "", "HTTPMethod"], [238, 11, 1, "", "HTTPStatus"], [239, 10, 0, "-", "client"], [240, 10, 0, "-", "cookiejar"], [241, 10, 0, "-", "cookies"], [242, 10, 0, "-", "server"]], "http.client": [[239, 6, 1, "", "BadStatusLine"], [239, 6, 1, "", "CannotSendHeader"], [239, 6, 1, "", "CannotSendRequest"], [239, 11, 1, "", "HTTPConnection"], [239, 6, 1, "", "HTTPException"], [239, 11, 1, "", "HTTPMessage"], [239, 11, 1, "", "HTTPResponse"], [239, 11, 1, "", "HTTPSConnection"], [239, 9, 1, "", "HTTPS_PORT"], [239, 9, 1, "", "HTTP_PORT"], [239, 6, 1, "", "ImproperConnectionState"], [239, 6, 1, "", "IncompleteRead"], [239, 6, 1, "", "InvalidURL"], [239, 6, 1, "", "LineTooLong"], [239, 6, 1, "", "NotConnected"], [239, 6, 1, "", "RemoteDisconnected"], [239, 6, 1, "", "ResponseNotReady"], [239, 6, 1, "", "UnimplementedFileMode"], [239, 6, 1, "", "UnknownProtocol"], [239, 6, 1, "", "UnknownTransferEncoding"], [239, 12, 1, "", "parse_headers"], [239, 9, 1, "", "responses"]], "http.client.HTTPConnection": [[239, 7, 1, "", "blocksize"], [239, 8, 1, "", "close"], [239, 8, 1, "", "connect"], [239, 8, 1, "", "endheaders"], [239, 8, 1, "", "get_proxy_response_headers"], [239, 8, 1, "", "getresponse"], [239, 8, 1, "", "putheader"], [239, 8, 1, "", "putrequest"], [239, 8, 1, "", "request"], [239, 8, 1, "", "send"], [239, 8, 1, "", "set_debuglevel"], [239, 8, 1, "", "set_tunnel"]], "http.client.HTTPResponse": [[239, 7, 1, "", "closed"], [239, 7, 1, "", "debuglevel"], [239, 8, 1, "", "fileno"], [239, 8, 1, "", "getcode"], [239, 8, 1, "", "getheader"], [239, 8, 1, "", "getheaders"], [239, 8, 1, "", "geturl"], [239, 7, 1, "", "headers"], [239, 8, 1, "", "info"], [239, 7, 1, "", "msg"], [239, 8, 1, "", "read"], [239, 8, 1, "", "readinto"], [239, 7, 1, "", "reason"], [239, 7, 1, "", "status"], [239, 7, 1, "", "url"], [239, 7, 1, "", "version"]], "http.cookiejar": [[240, 11, 1, "", "Cookie"], [240, 11, 1, "", "CookieJar"], [240, 11, 1, "", "CookiePolicy"], [240, 11, 1, "", "DefaultCookiePolicy"], [240, 11, 1, "", "FileCookieJar"], [240, 11, 1, "", "LWPCookieJar"], [240, 6, 1, "", "LoadError"], [240, 11, 1, "", "MozillaCookieJar"]], "http.cookiejar.Cookie": [[240, 7, 1, "", "comment"], [240, 7, 1, "", "comment_url"], [240, 7, 1, "", "discard"], [240, 7, 1, "", "domain_initial_dot"], [240, 7, 1, "", "domain_specified"], [240, 7, 1, "", "expires"], [240, 8, 1, "", "get_nonstandard_attr"], [240, 8, 1, "", "has_nonstandard_attr"], [240, 8, 1, "", "is_expired"], [240, 7, 1, "", "name"], [240, 7, 1, "", "path"], [240, 7, 1, "", "port"], [240, 7, 1, "", "port_specified"], [240, 7, 1, "", "rfc2109"], [240, 7, 1, "", "secure"], [240, 8, 1, "", "set_nonstandard_attr"], [240, 7, 1, "", "value"], [240, 7, 1, "", "version"]], "http.cookiejar.CookieJar": [[240, 8, 1, "", "add_cookie_header"], [240, 8, 1, "", "clear"], [240, 8, 1, "", "clear_session_cookies"], [240, 8, 1, "", "extract_cookies"], [240, 8, 1, "", "make_cookies"], [240, 8, 1, "", "set_cookie"], [240, 8, 1, "", "set_cookie_if_ok"], [240, 8, 1, "", "set_policy"]], "http.cookiejar.CookiePolicy": [[240, 8, 1, "", "domain_return_ok"], [240, 7, 1, "", "hide_cookie2"], [240, 7, 1, "", "netscape"], [240, 8, 1, "", "path_return_ok"], [240, 8, 1, "", "return_ok"], [240, 7, 1, "", "rfc2965"], [240, 8, 1, "", "set_ok"]], "http.cookiejar.DefaultCookiePolicy": [[240, 7, 1, "", "DomainLiberal"], [240, 7, 1, "", "DomainRFC2965Match"], [240, 7, 1, "", "DomainStrict"], [240, 7, 1, "", "DomainStrictNoDots"], [240, 7, 1, "", "DomainStrictNonDomain"], [240, 8, 1, "", "allowed_domains"], [240, 8, 1, "", "blocked_domains"], [240, 8, 1, "", "is_blocked"], [240, 8, 1, "", "is_not_allowed"], [240, 7, 1, "", "rfc2109_as_netscape"], [240, 8, 1, "", "set_allowed_domains"], [240, 8, 1, "", "set_blocked_domains"], [240, 7, 1, "", "strict_domain"], [240, 7, 1, "", "strict_ns_domain"], [240, 7, 1, "", "strict_ns_set_initial_dollar"], [240, 7, 1, "", "strict_ns_set_path"], [240, 7, 1, "", "strict_ns_unverifiable"], [240, 7, 1, "", "strict_rfc2965_unverifiable"]], "http.cookiejar.FileCookieJar": [[240, 7, 1, "", "delayload"], [240, 7, 1, "", "filename"], [240, 8, 1, "", "load"], [240, 8, 1, "", "revert"], [240, 8, 1, "", "save"]], "http.cookies": [[241, 11, 1, "", "BaseCookie"], [241, 6, 1, "", "CookieError"], [241, 11, 1, "", "Morsel"], [241, 11, 1, "", "SimpleCookie"]], "http.cookies.BaseCookie": [[241, 8, 1, "", "js_output"], [241, 8, 1, "", "load"], [241, 8, 1, "", "output"], [241, 8, 1, "", "value_decode"], [241, 8, 1, "", "value_encode"]], "http.cookies.Morsel": [[241, 8, 1, "", "OutputString"], [241, 7, 1, "", "coded_value"], [241, 7, 1, "", "comment"], [241, 8, 1, "", "copy"], [241, 7, 1, "", "domain"], [241, 7, 1, "", "expires"], [241, 7, 1, "", "httponly"], [241, 8, 1, "", "isReservedKey"], [241, 8, 1, "", "js_output"], [241, 7, 1, "", "key"], [241, 8, 1, "", "output"], [241, 7, 1, "", "path"], [241, 7, 1, "", "samesite"], [241, 7, 1, "", "secure"], [241, 8, 1, "", "set"], [241, 8, 1, "", "setdefault"], [241, 8, 1, "", "update"], [241, 7, 1, "", "value"], [241, 7, 1, "", "version"]], "http.server": [[242, 11, 1, "", "BaseHTTPRequestHandler"], [242, 11, 1, "", "CGIHTTPRequestHandler"], [242, 11, 1, "", "HTTPServer"], [242, 11, 1, "", "SimpleHTTPRequestHandler"], [242, 11, 1, "", "ThreadingHTTPServer"]], "http.server.BaseHTTPRequestHandler": [[242, 7, 1, "", "MessageClass"], [242, 8, 1, "", "address_string"], [242, 7, 1, "", "client_address"], [242, 7, 1, "", "close_connection"], [242, 7, 1, "", "command"], [242, 8, 1, "", "date_time_string"], [242, 8, 1, "", "end_headers"], [242, 7, 1, "", "error_content_type"], [242, 7, 1, "", "error_message_format"], [242, 8, 1, "", "flush_headers"], [242, 8, 1, "", "handle"], [242, 8, 1, "", "handle_expect_100"], [242, 8, 1, "", "handle_one_request"], [242, 7, 1, "", "headers"], [242, 8, 1, "", "log_date_time_string"], [242, 8, 1, "", "log_error"], [242, 8, 1, "", "log_message"], [242, 8, 1, "", "log_request"], [242, 7, 1, "", "path"], [242, 7, 1, "", "protocol_version"], [242, 7, 1, "", "request_version"], [242, 7, 1, "", "requestline"], [242, 7, 1, "", "responses"], [242, 7, 1, "", "rfile"], [242, 8, 1, "", "send_error"], [242, 8, 1, "", "send_header"], [242, 8, 1, "", "send_response"], [242, 8, 1, "", "send_response_only"], [242, 7, 1, "", "server"], [242, 7, 1, "", "server_version"], [242, 7, 1, "", "sys_version"], [242, 8, 1, "", "version_string"], [242, 7, 1, "", "wfile"]], "http.server.CGIHTTPRequestHandler": [[242, 7, 1, "", "cgi_directories"], [242, 8, 1, "", "do_POST"]], "http.server.SimpleHTTPRequestHandler": [[242, 8, 1, "", "do_GET"], [242, 8, 1, "", "do_HEAD"], [242, 7, 1, "", "extensions_map"], [242, 7, 1, "", "server_version"]], "imaplib": [[245, 11, 1, "", "IMAP4"], [245, 11, 1, "", "IMAP4_SSL"], [245, 11, 1, "", "IMAP4_stream"], [245, 12, 1, "", "Int2AP"], [245, 12, 1, "", "Internaldate2tuple"], [245, 12, 1, "", "ParseFlags"], [245, 12, 1, "", "Time2Internaldate"]], "imaplib.IMAP4": [[245, 7, 1, "", "PROTOCOL_VERSION"], [245, 6, 1, "", "abort"], [245, 8, 1, "", "append"], [245, 8, 1, "", "authenticate"], [245, 8, 1, "", "check"], [245, 8, 1, "", "close"], [245, 8, 1, "", "copy"], [245, 8, 1, "", "create"], [245, 7, 1, "", "debug"], [245, 8, 1, "", "delete"], [245, 8, 1, "", "deleteacl"], [245, 8, 1, "", "enable"], [245, 6, 1, "", "error"], [245, 8, 1, "", "expunge"], [245, 8, 1, "", "fetch"], [245, 8, 1, "", "getacl"], [245, 8, 1, "", "getannotation"], [245, 8, 1, "", "getquota"], [245, 8, 1, "", "getquotaroot"], [245, 8, 1, "", "list"], [245, 8, 1, "", "login"], [245, 8, 1, "", "login_cram_md5"], [245, 8, 1, "", "logout"], [245, 8, 1, "", "lsub"], [245, 8, 1, "", "myrights"], [245, 8, 1, "", "namespace"], [245, 8, 1, "", "noop"], [245, 8, 1, "", "open"], [245, 8, 1, "", "partial"], [245, 8, 1, "", "proxyauth"], [245, 8, 1, "", "read"], [245, 8, 1, "", "readline"], [245, 6, 1, "", "readonly"], [245, 8, 1, "", "recent"], [245, 8, 1, "", "rename"], [245, 8, 1, "", "response"], [245, 8, 1, "", "search"], [245, 8, 1, "", "select"], [245, 8, 1, "", "send"], [245, 8, 1, "", "setacl"], [245, 8, 1, "", "setannotation"], [245, 8, 1, "", "setquota"], [245, 8, 1, "", "shutdown"], [245, 8, 1, "", "socket"], [245, 8, 1, "", "sort"], [245, 8, 1, "", "starttls"], [245, 8, 1, "", "status"], [245, 8, 1, "", "store"], [245, 8, 1, "", "subscribe"], [245, 8, 1, "", "thread"], [245, 8, 1, "", "uid"], [245, 8, 1, "", "unselect"], [245, 8, 1, "", "unsubscribe"], [245, 7, 1, "", "utf8_enabled"], [245, 8, 1, "", "xatom"]], "imghdr": [[246, 9, 1, "", "tests"], [246, 12, 1, "", "what"]], "importlib": [[247, 12, 1, "", "__import__"], [247, 10, 0, "-", "abc"], [247, 12, 1, "", "import_module"], [247, 12, 1, "", "invalidate_caches"], [247, 10, 0, "-", "machinery"], [248, 10, 0, "-", "metadata"], [247, 12, 1, "", "reload"], [249, 10, 0, "-", "resources"], [247, 10, 0, "-", "util"]], "importlib.abc": [[247, 11, 1, "", "ExecutionLoader"], [247, 11, 1, "", "FileLoader"], [247, 11, 1, "", "InspectLoader"], [247, 11, 1, "", "Loader"], [247, 11, 1, "", "MetaPathFinder"], [247, 11, 1, "", "PathEntryFinder"], [247, 11, 1, "", "ResourceLoader"], [247, 11, 1, "", "ResourceReader"], [247, 11, 1, "", "SourceLoader"], [247, 11, 1, "", "Traversable"], [247, 11, 1, "", "TraversableResources"]], "importlib.abc.ExecutionLoader": [[247, 8, 1, "", "get_filename"]], "importlib.abc.FileLoader": [[247, 8, 1, "", "get_data"], [247, 8, 1, "", "get_filename"], [247, 8, 1, "", "load_module"], [247, 7, 1, "", "name"], [247, 7, 1, "", "path"]], "importlib.abc.InspectLoader": [[247, 8, 1, "", "exec_module"], [247, 8, 1, "", "get_code"], [247, 8, 1, "", "get_source"], [247, 8, 1, "", "is_package"], [247, 8, 1, "", "load_module"], [247, 8, 1, "", "source_to_code"]], "importlib.abc.Loader": [[247, 8, 1, "", "create_module"], [247, 8, 1, "", "exec_module"], [247, 8, 1, "", "load_module"]], "importlib.abc.MetaPathFinder": [[247, 8, 1, "", "find_spec"], [247, 8, 1, "", "invalidate_caches"]], "importlib.abc.PathEntryFinder": [[247, 8, 1, "", "find_spec"], [247, 8, 1, "", "invalidate_caches"]], "importlib.abc.ResourceLoader": [[247, 8, 1, "", "get_data"]], "importlib.abc.ResourceReader": [[247, 8, 1, "", "contents"], [247, 8, 1, "", "is_resource"], [247, 8, 1, "", "open_resource"], [247, 8, 1, "", "resource_path"]], "importlib.abc.SourceLoader": [[247, 8, 1, "", "exec_module"], [247, 8, 1, "", "get_code"], [247, 8, 1, "", "get_source"], [247, 8, 1, "", "is_package"], [247, 8, 1, "", "load_module"], [247, 8, 1, "", "path_mtime"], [247, 8, 1, "", "path_stats"], [247, 8, 1, "", "set_data"]], "importlib.abc.Traversable": [[247, 8, 1, "", "__truediv__"], [247, 8, 1, "", "is_dir"], [247, 8, 1, "", "is_file"], [247, 8, 1, "", "iterdir"], [247, 8, 1, "", "joinpath"], [247, 7, 1, "", "name"], [247, 8, 1, "", "open"], [247, 8, 1, "", "read_bytes"], [247, 8, 1, "", "read_text"]], "importlib.abc.TraversableResources": [[247, 8, 1, "", "files"]], "importlib.machinery": [[247, 7, 1, "", "BYTECODE_SUFFIXES"], [247, 11, 1, "", "BuiltinImporter"], [247, 7, 1, "", "DEBUG_BYTECODE_SUFFIXES"], [247, 7, 1, "", "EXTENSION_SUFFIXES"], [247, 11, 1, "", "ExtensionFileLoader"], [247, 11, 1, "", "FileFinder"], [247, 11, 1, "", "FrozenImporter"], [247, 11, 1, "", "ModuleSpec"], [247, 11, 1, "", "NamespaceLoader"], [247, 7, 1, "", "OPTIMIZED_BYTECODE_SUFFIXES"], [247, 11, 1, "", "PathFinder"], [247, 7, 1, "", "SOURCE_SUFFIXES"], [247, 11, 1, "", "SourceFileLoader"], [247, 11, 1, "", "SourcelessFileLoader"], [247, 11, 1, "", "WindowsRegistryFinder"], [247, 12, 1, "", "all_suffixes"]], "importlib.machinery.ExtensionFileLoader": [[247, 8, 1, "", "create_module"], [247, 8, 1, "", "exec_module"], [247, 8, 1, "", "get_code"], [247, 8, 1, "", "get_filename"], [247, 8, 1, "", "get_source"], [247, 8, 1, "", "is_package"], [247, 7, 1, "", "name"], [247, 7, 1, "", "path"]], "importlib.machinery.FileFinder": [[247, 8, 1, "", "find_spec"], [247, 8, 1, "", "invalidate_caches"], [247, 7, 1, "", "path"], [247, 8, 1, "", "path_hook"]], "importlib.machinery.ModuleSpec": [[247, 7, 1, "", "cached"], [247, 7, 1, "", "has_location"], [247, 7, 1, "", "loader"], [247, 7, 1, "", "loader_state"], [247, 7, 1, "", "name"], [247, 7, 1, "", "origin"], [247, 7, 1, "", "parent"], [247, 7, 1, "", "submodule_search_locations"]], "importlib.machinery.PathFinder": [[247, 8, 1, "", "find_spec"], [247, 8, 1, "", "invalidate_caches"]], "importlib.machinery.SourceFileLoader": [[247, 8, 1, "", "is_package"], [247, 8, 1, "", "load_module"], [247, 7, 1, "", "name"], [247, 7, 1, "", "path"], [247, 8, 1, "", "path_stats"], [247, 8, 1, "", "set_data"]], "importlib.machinery.SourcelessFileLoader": [[247, 8, 1, "", "get_code"], [247, 8, 1, "", "get_source"], [247, 8, 1, "", "is_package"], [247, 8, 1, "", "load_module"], [247, 7, 1, "", "name"], [247, 7, 1, "", "path"]], "importlib.resources": [[249, 11, 1, "", "Anchor"], [249, 9, 1, "", "Package"], [249, 9, 1, "", "Resource"], [250, 10, 0, "-", "abc"], [249, 12, 1, "", "as_file"], [249, 12, 1, "", "contents"], [249, 12, 1, "", "files"], [249, 12, 1, "", "is_resource"], [249, 12, 1, "", "open_binary"], [249, 12, 1, "", "open_text"], [249, 12, 1, "", "path"], [249, 12, 1, "", "read_binary"], [249, 12, 1, "", "read_text"]], "importlib.resources.abc": [[250, 11, 1, "", "ResourceReader"], [250, 11, 1, "", "Traversable"], [250, 11, 1, "", "TraversableResources"]], "importlib.resources.abc.ResourceReader": [[250, 8, 1, "", "contents"], [250, 8, 1, "", "is_resource"], [250, 8, 1, "", "open_resource"], [250, 8, 1, "", "resource_path"]], "importlib.resources.abc.Traversable": [[250, 8, 1, "", "__truediv__"], [250, 8, 1, "", "is_dir"], [250, 8, 1, "", "is_file"], [250, 8, 1, "", "iterdir"], [250, 8, 1, "", "joinpath"], [250, 7, 1, "", "name"], [250, 8, 1, "", "open"], [250, 8, 1, "", "read_bytes"], [250, 8, 1, "", "read_text"]], "importlib.resources.abc.TraversableResources": [[250, 8, 1, "", "files"]], "importlib.util": [[247, 11, 1, "", "LazyLoader"], [247, 7, 1, "", "MAGIC_NUMBER"], [247, 12, 1, "", "_incompatible_extension_module_restrictions"], [247, 12, 1, "", "cache_from_source"], [247, 12, 1, "", "decode_source"], [247, 12, 1, "", "find_spec"], [247, 12, 1, "", "module_from_spec"], [247, 12, 1, "", "resolve_name"], [247, 12, 1, "", "source_from_cache"], [247, 12, 1, "", "source_hash"], [247, 12, 1, "", "spec_from_file_location"], [247, 12, 1, "", "spec_from_loader"]], "importlib.util.LazyLoader": [[247, 8, 1, "", "factory"]], "inspect": [[252, 11, 1, "", "BoundArguments"], [252, 11, 1, "", "BufferFlags"], [252, 9, 1, "", "CO_ASYNC_GENERATOR"], [252, 9, 1, "", "CO_COROUTINE"], [252, 9, 1, "", "CO_GENERATOR"], [252, 9, 1, "", "CO_ITERABLE_COROUTINE"], [252, 9, 1, "", "CO_NESTED"], [252, 9, 1, "", "CO_NEWLOCALS"], [252, 9, 1, "", "CO_OPTIMIZED"], [252, 9, 1, "", "CO_VARARGS"], [252, 9, 1, "", "CO_VARKEYWORDS"], [252, 11, 1, "", "FrameInfo"], [252, 11, 1, "", "Parameter"], [252, 11, 1, "", "Signature"], [252, 11, 1, "", "Traceback"], [252, 12, 1, "", "cleandoc"], [252, 12, 1, "", "currentframe"], [252, 12, 1, "", "formatargvalues"], [252, 12, 1, "", "get_annotations"], [252, 12, 1, "", "getargvalues"], [252, 12, 1, "", "getasyncgenlocals"], [252, 12, 1, "", "getasyncgenstate"], [252, 12, 1, "", "getattr_static"], [252, 12, 1, "", "getcallargs"], [252, 12, 1, "", "getclasstree"], [252, 12, 1, "", "getclosurevars"], [252, 12, 1, "", "getcomments"], [252, 12, 1, "", "getcoroutinelocals"], [252, 12, 1, "", "getcoroutinestate"], [252, 12, 1, "", "getdoc"], [252, 12, 1, "", "getfile"], [252, 12, 1, "", "getframeinfo"], [252, 12, 1, "", "getfullargspec"], [252, 12, 1, "", "getgeneratorlocals"], [252, 12, 1, "", "getgeneratorstate"], [252, 12, 1, "", "getinnerframes"], [252, 12, 1, "", "getmembers"], [252, 12, 1, "", "getmembers_static"], [252, 12, 1, "", "getmodule"], [252, 12, 1, "", "getmodulename"], [252, 12, 1, "", "getmro"], [252, 12, 1, "", "getouterframes"], [252, 12, 1, "", "getsource"], [252, 12, 1, "", "getsourcefile"], [252, 12, 1, "", "getsourcelines"], [252, 12, 1, "", "isabstract"], [252, 12, 1, "", "isasyncgen"], [252, 12, 1, "", "isasyncgenfunction"], [252, 12, 1, "", "isawaitable"], [252, 12, 1, "", "isbuiltin"], [252, 12, 1, "", "isclass"], [252, 12, 1, "", "iscode"], [252, 12, 1, "", "iscoroutine"], [252, 12, 1, "", "iscoroutinefunction"], [252, 12, 1, "", "isdatadescriptor"], [252, 12, 1, "", "isframe"], [252, 12, 1, "", "isfunction"], [252, 12, 1, "", "isgenerator"], [252, 12, 1, "", "isgeneratorfunction"], [252, 12, 1, "", "isgetsetdescriptor"], [252, 12, 1, "", "ismemberdescriptor"], [252, 12, 1, "", "ismethod"], [252, 12, 1, "", "ismethoddescriptor"], [252, 12, 1, "", "ismethodwrapper"], [252, 12, 1, "", "ismodule"], [252, 12, 1, "", "isroutine"], [252, 12, 1, "", "istraceback"], [252, 12, 1, "", "markcoroutinefunction"], [252, 12, 1, "", "signature"], [252, 12, 1, "", "stack"], [252, 12, 1, "", "trace"], [252, 12, 1, "", "unwrap"], [252, 14, 1, "cmdoption-inspect-details", "--details"]], "inspect.BoundArguments": [[252, 8, 1, "", "apply_defaults"], [252, 7, 1, "", "args"], [252, 7, 1, "", "arguments"], [252, 7, 1, "", "kwargs"], [252, 7, 1, "", "signature"]], "inspect.BufferFlags": [[252, 7, 1, "", "ANY_CONTIGUOUS"], [252, 7, 1, "", "CONTIG"], [252, 7, 1, "", "CONTIG_RO"], [252, 7, 1, "", "C_CONTIGUOUS"], [252, 7, 1, "", "FORMAT"], [252, 7, 1, "", "FULL"], [252, 7, 1, "", "FULL_RO"], [252, 7, 1, "", "F_CONTIGUOUS"], [252, 7, 1, "", "INDIRECT"], [252, 7, 1, "", "ND"], [252, 7, 1, "", "READ"], [252, 7, 1, "", "RECORDS"], [252, 7, 1, "", "RECORDS_RO"], [252, 7, 1, "", "SIMPLE"], [252, 7, 1, "", "STRIDED"], [252, 7, 1, "", "STRIDED_RO"], [252, 7, 1, "", "STRIDES"], [252, 7, 1, "", "WRITABLE"], [252, 7, 1, "", "WRITE"]], "inspect.FrameInfo": [[252, 7, 1, "", "code_context"], [252, 7, 1, "", "filename"], [252, 7, 1, "", "frame"], [252, 7, 1, "", "function"], [252, 7, 1, "", "index"], [252, 7, 1, "", "lineno"], [252, 7, 1, "", "positions"]], "inspect.Parameter": [[252, 7, 1, "", "annotation"], [252, 7, 1, "", "default"], [252, 7, 1, "", "empty"], [252, 7, 1, "", "kind"], [252, 7, 1, "", "name"], [252, 8, 1, "", "replace"]], "inspect.Parameter.kind": [[252, 7, 1, "", "description"]], "inspect.Signature": [[252, 8, 1, "", "bind"], [252, 8, 1, "", "bind_partial"], [252, 7, 1, "", "empty"], [252, 8, 1, "", "from_callable"], [252, 7, 1, "", "parameters"], [252, 8, 1, "", "replace"], [252, 7, 1, "", "return_annotation"]], "inspect.Traceback": [[252, 7, 1, "", "code_context"], [252, 7, 1, "", "filename"], [252, 7, 1, "", "function"], [252, 7, 1, "", "index"], [252, 7, 1, "", "lineno"], [252, 7, 1, "", "positions"]], "instance": [[341, 7, 1, "", "__class__"]], "int": [[341, 8, 1, "", "as_integer_ratio"], [341, 8, 1, "", "bit_count"], [341, 8, 1, "", "bit_length"], [341, 8, 1, "", "from_bytes"], [341, 8, 1, "", "is_integer"], [341, 8, 1, "", "to_bytes"]], "io": [[255, 6, 1, "", "BlockingIOError"], [255, 11, 1, "", "BufferedIOBase"], [255, 11, 1, "", "BufferedRWPair"], [255, 11, 1, "", "BufferedRandom"], [255, 11, 1, "", "BufferedReader"], [255, 11, 1, "", "BufferedWriter"], [255, 11, 1, "", "BytesIO"], [255, 9, 1, "", "DEFAULT_BUFFER_SIZE"], [255, 11, 1, "", "FileIO"], [255, 11, 1, "", "IOBase"], [255, 11, 1, "", "IncrementalNewlineDecoder"], [255, 11, 1, "", "RawIOBase"], [255, 11, 1, "", "StringIO"], [255, 11, 1, "", "TextIOBase"], [255, 11, 1, "", "TextIOWrapper"], [255, 6, 1, "", "UnsupportedOperation"], [255, 12, 1, "", "open"], [255, 12, 1, "", "open_code"], [255, 12, 1, "", "text_encoding"]], "io.BufferedIOBase": [[255, 8, 1, "", "detach"], [255, 7, 1, "", "raw"], [255, 8, 1, "", "read"], [255, 8, 1, "", "read1"], [255, 8, 1, "", "readinto"], [255, 8, 1, "", "readinto1"], [255, 8, 1, "", "write"]], "io.BufferedReader": [[255, 8, 1, "", "peek"], [255, 8, 1, "", "read"], [255, 8, 1, "", "read1"]], "io.BufferedWriter": [[255, 8, 1, "", "flush"], [255, 8, 1, "", "write"]], "io.BytesIO": [[255, 8, 1, "", "getbuffer"], [255, 8, 1, "", "getvalue"], [255, 8, 1, "", "read1"], [255, 8, 1, "", "readinto1"]], "io.FileIO": [[255, 7, 1, "", "mode"], [255, 7, 1, "", "name"]], "io.IOBase": [[255, 8, 1, "", "__del__"], [255, 8, 1, "", "close"], [255, 7, 1, "", "closed"], [255, 8, 1, "", "fileno"], [255, 8, 1, "", "flush"], [255, 8, 1, "", "isatty"], [255, 8, 1, "", "readable"], [255, 8, 1, "", "readline"], [255, 8, 1, "", "readlines"], [255, 8, 1, "", "seek"], [255, 8, 1, "", "seekable"], [255, 8, 1, "", "tell"], [255, 8, 1, "", "truncate"], [255, 8, 1, "", "writable"], [255, 8, 1, "", "writelines"]], "io.RawIOBase": [[255, 8, 1, "", "read"], [255, 8, 1, "", "readall"], [255, 8, 1, "", "readinto"], [255, 8, 1, "", "write"]], "io.StringIO": [[255, 8, 1, "", "getvalue"]], "io.TextIOBase": [[255, 7, 1, "", "buffer"], [255, 8, 1, "", "detach"], [255, 7, 1, "", "encoding"], [255, 7, 1, "", "errors"], [255, 7, 1, "", "newlines"], [255, 8, 1, "", "read"], [255, 8, 1, "", "readline"], [255, 8, 1, "", "seek"], [255, 8, 1, "", "tell"], [255, 8, 1, "", "write"]], "io.TextIOWrapper": [[255, 7, 1, "", "line_buffering"], [255, 8, 1, "", "reconfigure"], [255, 8, 1, "", "seek"], [255, 8, 1, "", "tell"], [255, 7, 1, "", "write_through"]], "ipaddress": [[256, 6, 1, "", "AddressValueError"], [256, 11, 1, "", "IPv4Address"], [256, 11, 1, "", "IPv4Interface"], [256, 11, 1, "", "IPv4Network"], [256, 11, 1, "", "IPv6Address"], [256, 11, 1, "", "IPv6Interface"], [256, 11, 1, "", "IPv6Network"], [256, 6, 1, "", "NetmaskValueError"], [256, 12, 1, "", "collapse_addresses"], [256, 12, 1, "", "get_mixed_type_key"], [256, 12, 1, "", "ip_address"], [256, 12, 1, "", "ip_interface"], [256, 12, 1, "", "ip_network"], [256, 12, 1, "", "summarize_address_range"], [256, 12, 1, "", "v4_int_to_packed"], [256, 12, 1, "", "v6_int_to_packed"]], "ipaddress.IPv4Address": [[256, 8, 1, "", "__format__"], [256, 7, 1, "", "compressed"], [256, 7, 1, "", "exploded"], [256, 7, 1, "", "is_global"], [256, 7, 1, "", "is_link_local"], [256, 7, 1, "", "is_loopback"], [256, 7, 1, "", "is_multicast"], [256, 7, 1, "", "is_private"], [256, 7, 1, "", "is_reserved"], [256, 7, 1, "", "is_unspecified"], [256, 7, 1, "", "max_prefixlen"], [256, 7, 1, "", "packed"], [256, 7, 1, "", "reverse_pointer"], [256, 7, 1, "", "version"]], "ipaddress.IPv4Interface": [[256, 7, 1, "", "ip"], [256, 7, 1, "", "network"], [256, 7, 1, "", "with_hostmask"], [256, 7, 1, "", "with_netmask"], [256, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv4Network": [[256, 8, 1, "", "address_exclude"], [256, 7, 1, "", "broadcast_address"], [256, 8, 1, "", "compare_networks"], [256, 7, 1, "", "compressed"], [256, 7, 1, "", "exploded"], [256, 7, 1, "", "hostmask"], [256, 8, 1, "", "hosts"], [256, 7, 1, "", "is_link_local"], [256, 7, 1, "", "is_loopback"], [256, 7, 1, "", "is_multicast"], [256, 7, 1, "", "is_private"], [256, 7, 1, "", "is_reserved"], [256, 7, 1, "", "is_unspecified"], [256, 7, 1, "", "max_prefixlen"], [256, 7, 1, "", "netmask"], [256, 7, 1, "", "network_address"], [256, 7, 1, "", "num_addresses"], [256, 8, 1, "", "overlaps"], [256, 7, 1, "", "prefixlen"], [256, 8, 1, "", "subnet_of"], [256, 8, 1, "", "subnets"], [256, 8, 1, "", "supernet"], [256, 8, 1, "", "supernet_of"], [256, 7, 1, "", "version"], [256, 7, 1, "", "with_hostmask"], [256, 7, 1, "", "with_netmask"], [256, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Address": [[256, 8, 1, "", "__format__"], [256, 7, 1, "", "compressed"], [256, 7, 1, "", "exploded"], [256, 7, 1, "", "ipv4_mapped"], [256, 7, 1, "", "is_global"], [256, 7, 1, "", "is_link_local"], [256, 7, 1, "", "is_loopback"], [256, 7, 1, "", "is_multicast"], [256, 7, 1, "", "is_private"], [256, 7, 1, "", "is_reserved"], [256, 7, 1, "", "is_site_local"], [256, 7, 1, "", "is_unspecified"], [256, 7, 1, "", "max_prefixlen"], [256, 7, 1, "", "packed"], [256, 7, 1, "", "reverse_pointer"], [256, 7, 1, "", "scope_id"], [256, 7, 1, "", "sixtofour"], [256, 7, 1, "", "teredo"], [256, 7, 1, "", "version"]], "ipaddress.IPv6Interface": [[256, 7, 1, "", "ip"], [256, 7, 1, "", "network"], [256, 7, 1, "", "with_hostmask"], [256, 7, 1, "", "with_netmask"], [256, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Network": [[256, 8, 1, "", "address_exclude"], [256, 7, 1, "", "broadcast_address"], [256, 8, 1, "", "compare_networks"], [256, 7, 1, "", "compressed"], [256, 7, 1, "", "exploded"], [256, 7, 1, "", "hostmask"], [256, 8, 1, "", "hosts"], [256, 7, 1, "", "is_link_local"], [256, 7, 1, "", "is_loopback"], [256, 7, 1, "", "is_multicast"], [256, 7, 1, "", "is_private"], [256, 7, 1, "", "is_reserved"], [256, 7, 1, "", "is_site_local"], [256, 7, 1, "", "is_unspecified"], [256, 7, 1, "", "max_prefixlen"], [256, 7, 1, "", "netmask"], [256, 7, 1, "", "network_address"], [256, 7, 1, "", "num_addresses"], [256, 8, 1, "", "overlaps"], [256, 7, 1, "", "prefixlen"], [256, 8, 1, "", "subnet_of"], [256, 8, 1, "", "subnets"], [256, 8, 1, "", "supernet"], [256, 8, 1, "", "supernet_of"], [256, 7, 1, "", "version"], [256, 7, 1, "", "with_hostmask"], [256, 7, 1, "", "with_netmask"], [256, 7, 1, "", "with_prefixlen"]], "iterator": [[341, 8, 1, "", "__iter__"], [341, 8, 1, "", "__next__"]], "itertools": [[258, 12, 1, "", "accumulate"], [258, 12, 1, "", "batched"], [258, 12, 1, "", "chain"], [258, 12, 1, "", "combinations"], [258, 12, 1, "", "combinations_with_replacement"], [258, 12, 1, "", "compress"], [258, 12, 1, "", "count"], [258, 12, 1, "", "cycle"], [258, 12, 1, "", "dropwhile"], [258, 12, 1, "", "filterfalse"], [258, 12, 1, "", "groupby"], [258, 12, 1, "", "islice"], [258, 12, 1, "", "pairwise"], [258, 12, 1, "", "permutations"], [258, 12, 1, "", "product"], [258, 12, 1, "", "repeat"], [258, 12, 1, "", "starmap"], [258, 12, 1, "", "takewhile"], [258, 12, 1, "", "tee"], [258, 12, 1, "", "zip_longest"]], "itertools.chain": [[258, 8, 1, "", "from_iterable"]], "json": [[259, 6, 1, "", "JSONDecodeError"], [259, 11, 1, "", "JSONDecoder"], [259, 11, 1, "", "JSONEncoder"], [259, 12, 1, "", "dump"], [259, 12, 1, "", "dumps"], [259, 12, 1, "", "load"], [259, 12, 1, "", "loads"], [259, 10, 0, "-", "tool"]], "json.JSONDecodeError": [[259, 7, 1, "", "colno"], [259, 7, 1, "", "doc"], [259, 7, 1, "", "lineno"], [259, 7, 1, "", "msg"], [259, 7, 1, "", "pos"]], "json.JSONDecoder": [[259, 8, 1, "", "decode"], [259, 8, 1, "", "raw_decode"]], "json.JSONEncoder": [[259, 8, 1, "", "default"], [259, 8, 1, "", "encode"], [259, 8, 1, "", "iterencode"]], "keyword": [[260, 12, 1, "", "iskeyword"], [260, 12, 1, "", "issoftkeyword"], [260, 9, 1, "", "kwlist"], [260, 9, 1, "", "softkwlist"]], "linecache": [[262, 12, 1, "", "checkcache"], [262, 12, 1, "", "clearcache"], [262, 12, 1, "", "getline"], [262, 12, 1, "", "lazycache"]], "list": [[341, 8, 1, "", "sort"]], "locale": [[263, 9, 1, "", "ABDAY_1"], [263, 9, 1, "", "ABDAY_2"], [263, 9, 1, "", "ABDAY_3"], [263, 9, 1, "", "ABDAY_4"], [263, 9, 1, "", "ABDAY_5"], [263, 9, 1, "", "ABDAY_6"], [263, 9, 1, "", "ABDAY_7"], [263, 9, 1, "", "ABMON_1"], [263, 9, 1, "", "ABMON_10"], [263, 9, 1, "", "ABMON_11"], [263, 9, 1, "", "ABMON_12"], [263, 9, 1, "", "ABMON_2"], [263, 9, 1, "", "ABMON_3"], [263, 9, 1, "", "ABMON_4"], [263, 9, 1, "", "ABMON_5"], [263, 9, 1, "", "ABMON_6"], [263, 9, 1, "", "ABMON_7"], [263, 9, 1, "", "ABMON_8"], [263, 9, 1, "", "ABMON_9"], [263, 9, 1, "", "ALT_DIGITS"], [263, 9, 1, "", "CHAR_MAX"], [263, 9, 1, "", "CODESET"], [263, 9, 1, "", "CRNCYSTR"], [263, 9, 1, "", "DAY_1"], [263, 9, 1, "", "DAY_2"], [263, 9, 1, "", "DAY_3"], [263, 9, 1, "", "DAY_4"], [263, 9, 1, "", "DAY_5"], [263, 9, 1, "", "DAY_6"], [263, 9, 1, "", "DAY_7"], [263, 9, 1, "", "D_FMT"], [263, 9, 1, "", "D_T_FMT"], [263, 9, 1, "", "ERA"], [263, 9, 1, "", "ERA_D_FMT"], [263, 9, 1, "", "ERA_D_T_FMT"], [263, 9, 1, "", "ERA_T_FMT"], [263, 6, 1, "", "Error"], [263, 9, 1, "", "LC_ALL"], [263, 9, 1, "", "LC_COLLATE"], [263, 9, 1, "", "LC_CTYPE"], [263, 9, 1, "", "LC_MESSAGES"], [263, 9, 1, "", "LC_MONETARY"], [263, 9, 1, "", "LC_NUMERIC"], [263, 9, 1, "", "LC_TIME"], [263, 9, 1, "", "MON_1"], [263, 9, 1, "", "MON_10"], [263, 9, 1, "", "MON_11"], [263, 9, 1, "", "MON_12"], [263, 9, 1, "", "MON_2"], [263, 9, 1, "", "MON_3"], [263, 9, 1, "", "MON_4"], [263, 9, 1, "", "MON_5"], [263, 9, 1, "", "MON_6"], [263, 9, 1, "", "MON_7"], [263, 9, 1, "", "MON_8"], [263, 9, 1, "", "MON_9"], [263, 9, 1, "", "NOEXPR"], [263, 9, 1, "", "RADIXCHAR"], [263, 9, 1, "", "THOUSEP"], [263, 9, 1, "", "T_FMT"], [263, 9, 1, "", "T_FMT_AMPM"], [263, 9, 1, "", "YESEXPR"], [263, 12, 1, "", "atof"], [263, 12, 1, "", "atoi"], [263, 12, 1, "", "bind_textdomain_codeset"], [263, 12, 1, "", "bindtextdomain"], [263, 12, 1, "", "currency"], [263, 12, 1, "", "dcgettext"], [263, 12, 1, "", "delocalize"], [263, 12, 1, "", "dgettext"], [263, 12, 1, "", "format_string"], [263, 12, 1, "", "getdefaultlocale"], [263, 12, 1, "", "getencoding"], [263, 12, 1, "", "getlocale"], [263, 12, 1, "", "getpreferredencoding"], [263, 12, 1, "", "gettext"], [263, 12, 1, "", "localeconv"], [263, 12, 1, "", "localize"], [263, 12, 1, "", "nl_langinfo"], [263, 12, 1, "", "normalize"], [263, 12, 1, "", "resetlocale"], [263, 12, 1, "", "setlocale"], [263, 12, 1, "", "str"], [263, 12, 1, "", "strcoll"], [263, 12, 1, "", "strxfrm"], [263, 12, 1, "", "textdomain"]], "logging": [[264, 11, 1, "", "BufferingFormatter"], [264, 9, 1, "", "CRITICAL"], [264, 9, 1, "", "DEBUG"], [264, 9, 1, "", "ERROR"], [266, 11, 1, "", "FileHandler"], [264, 11, 1, "", "Filter"], [264, 11, 1, "", "Formatter"], [264, 11, 1, "", "Handler"], [264, 9, 1, "", "INFO"], [264, 11, 1, "", "LogRecord"], [264, 11, 1, "", "Logger"], [264, 11, 1, "", "LoggerAdapter"], [264, 9, 1, "", "NOTSET"], [266, 11, 1, "", "NullHandler"], [266, 11, 1, "", "StreamHandler"], [264, 9, 1, "", "WARNING"], [264, 12, 1, "", "addLevelName"], [264, 12, 1, "", "basicConfig"], [264, 12, 1, "", "captureWarnings"], [265, 10, 0, "-", "config"], [264, 12, 1, "", "critical"], [264, 12, 1, "", "debug"], [264, 12, 1, "", "disable"], [264, 12, 1, "", "error"], [264, 12, 1, "", "exception"], [264, 12, 1, "", "getHandlerByName"], [264, 12, 1, "", "getHandlerNames"], [264, 12, 1, "", "getLevelName"], [264, 12, 1, "", "getLevelNamesMapping"], [264, 12, 1, "", "getLogRecordFactory"], [264, 12, 1, "", "getLogger"], [264, 12, 1, "", "getLoggerClass"], [266, 10, 0, "-", "handlers"], [264, 12, 1, "", "info"], [264, 7, 1, "", "lastResort"], [264, 12, 1, "", "log"], [264, 12, 1, "", "makeLogRecord"], [264, 7, 1, "", "raiseExceptions"], [264, 12, 1, "", "setLogRecordFactory"], [264, 12, 1, "", "setLoggerClass"], [264, 12, 1, "", "shutdown"], [264, 12, 1, "", "warning"]], "logging.BufferingFormatter": [[264, 8, 1, "", "format"], [264, 8, 1, "", "formatFooter"], [264, 8, 1, "", "formatHeader"]], "logging.FileHandler": [[266, 8, 1, "", "close"], [266, 8, 1, "", "emit"]], "logging.Filter": [[264, 8, 1, "", "filter"]], "logging.Formatter": [[264, 8, 1, "", "format"], [264, 8, 1, "", "formatException"], [264, 8, 1, "", "formatStack"], [264, 8, 1, "", "formatTime"]], "logging.Handler": [[264, 8, 1, "", "__init__"], [264, 8, 1, "", "acquire"], [264, 8, 1, "", "addFilter"], [264, 8, 1, "", "close"], [264, 8, 1, "", "createLock"], [264, 8, 1, "", "emit"], [264, 8, 1, "", "filter"], [264, 8, 1, "", "flush"], [264, 8, 1, "", "format"], [264, 8, 1, "", "handle"], [264, 8, 1, "", "handleError"], [264, 8, 1, "", "release"], [264, 8, 1, "", "removeFilter"], [264, 8, 1, "", "setFormatter"], [264, 8, 1, "", "setLevel"]], "logging.LogRecord": [[264, 8, 1, "", "getMessage"]], "logging.Logger": [[264, 8, 1, "", "addFilter"], [264, 8, 1, "", "addHandler"], [264, 8, 1, "", "critical"], [264, 8, 1, "", "debug"], [264, 8, 1, "", "error"], [264, 8, 1, "", "exception"], [264, 8, 1, "", "filter"], [264, 8, 1, "", "findCaller"], [264, 8, 1, "", "getChild"], [264, 8, 1, "", "getChildren"], [264, 8, 1, "", "getEffectiveLevel"], [264, 8, 1, "", "handle"], [264, 8, 1, "", "hasHandlers"], [264, 8, 1, "", "info"], [264, 8, 1, "", "isEnabledFor"], [264, 8, 1, "", "log"], [264, 8, 1, "", "makeRecord"], [264, 7, 1, "", "propagate"], [264, 8, 1, "", "removeFilter"], [264, 8, 1, "", "removeHandler"], [264, 8, 1, "", "setLevel"], [264, 8, 1, "", "warning"]], "logging.LoggerAdapter": [[264, 7, 1, "", "_log"], [264, 7, 1, "", "manager"], [264, 8, 1, "", "process"]], "logging.NullHandler": [[266, 8, 1, "", "createLock"], [266, 8, 1, "", "emit"], [266, 8, 1, "", "handle"]], "logging.StreamHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "flush"], [266, 8, 1, "", "setStream"], [266, 7, 1, "", "terminator"]], "logging.config": [[265, 12, 1, "", "dictConfig"], [265, 12, 1, "", "fileConfig"], [265, 12, 1, "", "listen"], [265, 12, 1, "", "stopListening"]], "logging.handlers": [[266, 11, 1, "", "BaseRotatingHandler"], [266, 11, 1, "", "BufferingHandler"], [266, 11, 1, "", "DatagramHandler"], [266, 11, 1, "", "HTTPHandler"], [266, 11, 1, "", "MemoryHandler"], [266, 11, 1, "", "NTEventLogHandler"], [266, 11, 1, "", "QueueHandler"], [266, 11, 1, "", "QueueListener"], [266, 11, 1, "", "RotatingFileHandler"], [266, 11, 1, "", "SMTPHandler"], [266, 11, 1, "", "SocketHandler"], [266, 11, 1, "", "SysLogHandler"], [266, 11, 1, "", "TimedRotatingFileHandler"], [266, 11, 1, "", "WatchedFileHandler"]], "logging.handlers.BaseRotatingHandler": [[266, 7, 1, "", "namer"], [266, 8, 1, "", "rotate"], [266, 8, 1, "", "rotation_filename"], [266, 7, 1, "", "rotator"]], "logging.handlers.BufferingHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "flush"], [266, 8, 1, "", "shouldFlush"]], "logging.handlers.DatagramHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "makeSocket"], [266, 8, 1, "", "send"]], "logging.handlers.HTTPHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "mapLogRecord"]], "logging.handlers.MemoryHandler": [[266, 8, 1, "", "close"], [266, 8, 1, "", "flush"], [266, 8, 1, "", "setTarget"], [266, 8, 1, "", "shouldFlush"]], "logging.handlers.NTEventLogHandler": [[266, 8, 1, "", "close"], [266, 8, 1, "", "emit"], [266, 8, 1, "", "getEventCategory"], [266, 8, 1, "", "getEventType"], [266, 8, 1, "", "getMessageID"]], "logging.handlers.QueueHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "enqueue"], [266, 7, 1, "", "listener"], [266, 8, 1, "", "prepare"]], "logging.handlers.QueueListener": [[266, 8, 1, "", "dequeue"], [266, 8, 1, "", "enqueue_sentinel"], [266, 8, 1, "", "handle"], [266, 8, 1, "", "prepare"], [266, 8, 1, "", "start"], [266, 8, 1, "", "stop"]], "logging.handlers.RotatingFileHandler": [[266, 8, 1, "", "doRollover"], [266, 8, 1, "", "emit"]], "logging.handlers.SMTPHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "getSubject"]], "logging.handlers.SocketHandler": [[266, 8, 1, "", "close"], [266, 8, 1, "", "createSocket"], [266, 8, 1, "", "emit"], [266, 8, 1, "", "handleError"], [266, 8, 1, "", "makePickle"], [266, 8, 1, "", "makeSocket"], [266, 8, 1, "", "send"]], "logging.handlers.SysLogHandler": [[266, 8, 1, "", "close"], [266, 8, 1, "", "createSocket"], [266, 8, 1, "", "emit"], [266, 8, 1, "", "encodePriority"], [266, 8, 1, "", "mapPriority"]], "logging.handlers.TimedRotatingFileHandler": [[266, 8, 1, "", "doRollover"], [266, 8, 1, "", "emit"], [266, 8, 1, "", "getFilesToDelete"]], "logging.handlers.WatchedFileHandler": [[266, 8, 1, "", "emit"], [266, 8, 1, "", "reopenIfNeeded"]], "logging.logging.Formatter": [[99, 8, 1, "", "__init__"]], "lzma": [[267, 11, 1, "", "LZMACompressor"], [267, 11, 1, "", "LZMADecompressor"], [267, 6, 1, "", "LZMAError"], [267, 11, 1, "", "LZMAFile"], [267, 12, 1, "", "compress"], [267, 12, 1, "", "decompress"], [267, 12, 1, "", "is_check_supported"], [267, 12, 1, "", "open"]], "lzma.LZMACompressor": [[267, 8, 1, "", "compress"], [267, 8, 1, "", "flush"]], "lzma.LZMADecompressor": [[267, 7, 1, "", "check"], [267, 8, 1, "", "decompress"], [267, 7, 1, "", "eof"], [267, 7, 1, "", "needs_input"], [267, 7, 1, "", "unused_data"]], "lzma.LZMAFile": [[267, 8, 1, "", "peek"]], "mailbox": [[268, 11, 1, "", "Babyl"], [268, 11, 1, "", "BabylMessage"], [268, 6, 1, "", "Error"], [268, 6, 1, "", "ExternalClashError"], [268, 6, 1, "", "FormatError"], [268, 11, 1, "", "MH"], [268, 11, 1, "", "MHMessage"], [268, 11, 1, "", "MMDF"], [268, 11, 1, "", "MMDFMessage"], [268, 11, 1, "", "Mailbox"], [268, 11, 1, "", "Maildir"], [268, 11, 1, "", "MaildirMessage"], [268, 11, 1, "", "Message"], [268, 6, 1, "", "NoSuchMailboxError"], [268, 6, 1, "", "NotEmptyError"], [268, 11, 1, "", "mbox"], [268, 11, 1, "", "mboxMessage"]], "mailbox.Babyl": [[268, 8, 1, "", "get_file"], [268, 8, 1, "", "get_labels"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "unlock"]], "mailbox.BabylMessage": [[268, 8, 1, "", "add_label"], [268, 8, 1, "", "get_labels"], [268, 8, 1, "", "get_visible"], [268, 8, 1, "", "remove_label"], [268, 8, 1, "", "set_labels"], [268, 8, 1, "", "set_visible"], [268, 8, 1, "", "update_visible"]], "mailbox.MH": [[268, 8, 1, "", "__delitem__"], [268, 8, 1, "", "add_folder"], [268, 8, 1, "", "close"], [268, 8, 1, "", "discard"], [268, 8, 1, "", "flush"], [268, 8, 1, "", "get_file"], [268, 8, 1, "", "get_folder"], [268, 8, 1, "", "get_sequences"], [268, 8, 1, "", "list_folders"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "pack"], [268, 8, 1, "", "remove"], [268, 8, 1, "", "remove_folder"], [268, 8, 1, "", "set_sequences"], [268, 8, 1, "", "unlock"]], "mailbox.MHMessage": [[268, 8, 1, "", "add_sequence"], [268, 8, 1, "", "get_sequences"], [268, 8, 1, "", "remove_sequence"], [268, 8, 1, "", "set_sequences"]], "mailbox.MMDF": [[268, 8, 1, "", "get_file"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "unlock"]], "mailbox.MMDFMessage": [[268, 8, 1, "", "add_flag"], [268, 8, 1, "", "get_flags"], [268, 8, 1, "", "get_from"], [268, 8, 1, "", "remove_flag"], [268, 8, 1, "", "set_flags"], [268, 8, 1, "", "set_from"]], "mailbox.Mailbox": [[268, 8, 1, "", "__contains__"], [268, 8, 1, "", "__delitem__"], [268, 8, 1, "", "__getitem__"], [268, 8, 1, "", "__iter__"], [268, 8, 1, "", "__len__"], [268, 8, 1, "", "__setitem__"], [268, 8, 1, "", "add"], [268, 8, 1, "", "clear"], [268, 8, 1, "", "close"], [268, 8, 1, "", "discard"], [268, 8, 1, "", "flush"], [268, 8, 1, "", "get"], [268, 8, 1, "", "get_bytes"], [268, 8, 1, "", "get_file"], [268, 8, 1, "", "get_message"], [268, 8, 1, "", "get_string"], [268, 8, 1, "", "items"], [268, 8, 1, "", "iteritems"], [268, 8, 1, "", "iterkeys"], [268, 8, 1, "", "itervalues"], [268, 8, 1, "", "keys"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "pop"], [268, 8, 1, "", "popitem"], [268, 8, 1, "", "remove"], [268, 8, 1, "", "unlock"], [268, 8, 1, "", "update"], [268, 8, 1, "", "values"]], "mailbox.Maildir": [[268, 8, 1, "", "__setitem__"], [268, 8, 1, "", "add"], [268, 8, 1, "", "add_folder"], [268, 8, 1, "", "clean"], [268, 8, 1, "", "close"], [268, 7, 1, "", "colon"], [268, 8, 1, "", "flush"], [268, 8, 1, "", "get_file"], [268, 8, 1, "", "get_folder"], [268, 8, 1, "", "list_folders"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "remove_folder"], [268, 8, 1, "", "unlock"], [268, 8, 1, "", "update"]], "mailbox.MaildirMessage": [[268, 8, 1, "", "add_flag"], [268, 8, 1, "", "get_date"], [268, 8, 1, "", "get_flags"], [268, 8, 1, "", "get_info"], [268, 8, 1, "", "get_subdir"], [268, 8, 1, "", "remove_flag"], [268, 8, 1, "", "set_date"], [268, 8, 1, "", "set_flags"], [268, 8, 1, "", "set_info"], [268, 8, 1, "", "set_subdir"]], "mailbox.mbox": [[268, 8, 1, "", "get_file"], [268, 8, 1, "", "lock"], [268, 8, 1, "", "unlock"]], "mailbox.mboxMessage": [[268, 8, 1, "", "add_flag"], [268, 8, 1, "", "get_flags"], [268, 8, 1, "", "get_from"], [268, 8, 1, "", "remove_flag"], [268, 8, 1, "", "set_flags"], [268, 8, 1, "", "set_from"]], "mailcap": [[269, 12, 1, "", "findmatch"], [269, 12, 1, "", "getcaps"]], "marshal": [[271, 12, 1, "", "dump"], [271, 12, 1, "", "dumps"], [271, 12, 1, "", "load"], [271, 12, 1, "", "loads"], [271, 9, 1, "", "version"]], "math": [[272, 12, 1, "", "acos"], [272, 12, 1, "", "acosh"], [272, 12, 1, "", "asin"], [272, 12, 1, "", "asinh"], [272, 12, 1, "", "atan"], [272, 12, 1, "", "atan2"], [272, 12, 1, "", "atanh"], [272, 12, 1, "", "cbrt"], [272, 12, 1, "", "ceil"], [272, 12, 1, "", "comb"], [272, 12, 1, "", "copysign"], [272, 12, 1, "", "cos"], [272, 12, 1, "", "cosh"], [272, 12, 1, "", "degrees"], [272, 12, 1, "", "dist"], [272, 9, 1, "", "e"], [272, 12, 1, "", "erf"], [272, 12, 1, "", "erfc"], [272, 12, 1, "", "exp"], [272, 12, 1, "", "exp2"], [272, 12, 1, "", "expm1"], [272, 12, 1, "", "fabs"], [272, 12, 1, "", "factorial"], [272, 12, 1, "", "floor"], [272, 12, 1, "", "fmod"], [272, 12, 1, "", "frexp"], [272, 12, 1, "", "fsum"], [272, 12, 1, "", "gamma"], [272, 12, 1, "", "gcd"], [272, 12, 1, "", "hypot"], [272, 9, 1, "", "inf"], [272, 12, 1, "", "isclose"], [272, 12, 1, "", "isfinite"], [272, 12, 1, "", "isinf"], [272, 12, 1, "", "isnan"], [272, 12, 1, "", "isqrt"], [272, 12, 1, "", "lcm"], [272, 12, 1, "", "ldexp"], [272, 12, 1, "", "lgamma"], [272, 12, 1, "", "log"], [272, 12, 1, "", "log10"], [272, 12, 1, "", "log1p"], [272, 12, 1, "", "log2"], [272, 12, 1, "", "modf"], [272, 9, 1, "", "nan"], [272, 12, 1, "", "nextafter"], [272, 12, 1, "", "perm"], [272, 9, 1, "", "pi"], [272, 12, 1, "", "pow"], [272, 12, 1, "", "prod"], [272, 12, 1, "", "radians"], [272, 12, 1, "", "remainder"], [272, 12, 1, "", "sin"], [272, 12, 1, "", "sinh"], [272, 12, 1, "", "sqrt"], [272, 12, 1, "", "sumprod"], [272, 12, 1, "", "tan"], [272, 12, 1, "", "tanh"], [272, 9, 1, "", "tau"], [272, 12, 1, "", "trunc"], [272, 12, 1, "", "ulp"]], "memoryview": [[341, 8, 1, "", "__eq__"], [341, 7, 1, "", "c_contiguous"], [341, 8, 1, "", "cast"], [341, 7, 1, "", "contiguous"], [341, 7, 1, "", "f_contiguous"], [341, 7, 1, "", "format"], [341, 8, 1, "", "hex"], [341, 7, 1, "", "itemsize"], [341, 7, 1, "", "nbytes"], [341, 7, 1, "", "ndim"], [341, 7, 1, "", "obj"], [341, 7, 1, "", "readonly"], [341, 8, 1, "", "release"], [341, 7, 1, "", "shape"], [341, 7, 1, "", "strides"], [341, 7, 1, "", "suboffsets"], [341, 8, 1, "", "tobytes"], [341, 8, 1, "", "tolist"], [341, 8, 1, "", "toreadonly"]], "method": [[425, 7, 1, "", "__doc__"], [425, 7, 1, "", "__func__"], [425, 7, 1, "", "__module__"], [425, 7, 1, "", "__name__"], [425, 7, 1, "", "__self__"]], "mimetypes": [[273, 11, 1, "", "MimeTypes"], [273, 12, 1, "", "add_type"], [273, 9, 1, "", "common_types"], [273, 9, 1, "", "encodings_map"], [273, 12, 1, "", "guess_all_extensions"], [273, 12, 1, "", "guess_extension"], [273, 12, 1, "", "guess_type"], [273, 12, 1, "", "init"], [273, 9, 1, "", "inited"], [273, 9, 1, "", "knownfiles"], [273, 12, 1, "", "read_mime_types"], [273, 9, 1, "", "suffix_map"], [273, 9, 1, "", "types_map"]], "mimetypes.MimeTypes": [[273, 7, 1, "", "encodings_map"], [273, 8, 1, "", "guess_all_extensions"], [273, 8, 1, "", "guess_extension"], [273, 8, 1, "", "guess_type"], [273, 8, 1, "", "read"], [273, 8, 1, "", "read_windows_registry"], [273, 8, 1, "", "readfp"], [273, 7, 1, "", "suffix_map"], [273, 7, 1, "", "types_map"], [273, 7, 1, "", "types_map_inv"]], "mmap": [[275, 9, 1, "", "MADV_AUTOSYNC"], [275, 9, 1, "", "MADV_CORE"], [275, 9, 1, "", "MADV_DODUMP"], [275, 9, 1, "", "MADV_DOFORK"], [275, 9, 1, "", "MADV_DONTDUMP"], [275, 9, 1, "", "MADV_DONTFORK"], [275, 9, 1, "", "MADV_DONTNEED"], [275, 9, 1, "", "MADV_FREE"], [275, 9, 1, "", "MADV_FREE_REUSABLE"], [275, 9, 1, "", "MADV_FREE_REUSE"], [275, 9, 1, "", "MADV_HUGEPAGE"], [275, 9, 1, "", "MADV_HWPOISON"], [275, 9, 1, "", "MADV_MERGEABLE"], [275, 9, 1, "", "MADV_NOCORE"], [275, 9, 1, "", "MADV_NOHUGEPAGE"], [275, 9, 1, "", "MADV_NORMAL"], [275, 9, 1, "", "MADV_NOSYNC"], [275, 9, 1, "", "MADV_PROTECT"], [275, 9, 1, "", "MADV_RANDOM"], [275, 9, 1, "", "MADV_REMOVE"], [275, 9, 1, "", "MADV_SEQUENTIAL"], [275, 9, 1, "", "MADV_SOFT_OFFLINE"], [275, 9, 1, "", "MADV_UNMERGEABLE"], [275, 9, 1, "", "MADV_WILLNEED"], [275, 9, 1, "", "MAP_ALIGNED_SUPER"], [275, 9, 1, "", "MAP_ANON"], [275, 9, 1, "", "MAP_ANONYMOUS"], [275, 9, 1, "", "MAP_CONCEAL"], [275, 9, 1, "", "MAP_DENYWRITE"], [275, 9, 1, "", "MAP_EXECUTABLE"], [275, 9, 1, "", "MAP_POPULATE"], [275, 9, 1, "", "MAP_PRIVATE"], [275, 9, 1, "", "MAP_SHARED"], [275, 9, 1, "", "MAP_STACK"], [275, 11, 1, "", "mmap"]], "mmap.mmap": [[275, 8, 1, "", "close"], [275, 7, 1, "", "closed"], [275, 8, 1, "", "find"], [275, 8, 1, "", "flush"], [275, 8, 1, "", "madvise"], [275, 8, 1, "", "move"], [275, 8, 1, "", "read"], [275, 8, 1, "", "read_byte"], [275, 8, 1, "", "readline"], [275, 8, 1, "", "resize"], [275, 8, 1, "", "rfind"], [275, 8, 1, "", "seek"], [275, 8, 1, "", "size"], [275, 8, 1, "", "tell"], [275, 8, 1, "", "write"], [275, 8, 1, "", "write_byte"]], "modulefinder": [[276, 12, 1, "", "AddPackagePath"], [276, 11, 1, "", "ModuleFinder"], [276, 12, 1, "", "ReplacePackage"]], "modulefinder.ModuleFinder": [[276, 7, 1, "", "modules"], [276, 8, 1, "", "report"], [276, 8, 1, "", "run_script"]], "msilib": [[278, 11, 1, "", "Binary"], [278, 11, 1, "", "CAB"], [278, 11, 1, "", "Control"], [278, 12, 1, "", "CreateRecord"], [278, 11, 1, "", "Dialog"], [278, 11, 1, "", "Directory"], [278, 12, 1, "", "FCICreate"], [278, 11, 1, "", "Feature"], [278, 12, 1, "", "OpenDatabase"], [278, 11, 1, "", "RadioButtonGroup"], [278, 12, 1, "", "UuidCreate"], [278, 12, 1, "", "add_data"], [278, 12, 1, "", "add_stream"], [278, 12, 1, "", "add_tables"], [278, 12, 1, "", "gen_uuid"], [278, 12, 1, "", "init_database"], [278, 9, 1, "", "schema"], [278, 9, 1, "", "sequence"], [278, 9, 1, "", "text"]], "msilib.CAB": [[278, 8, 1, "", "append"], [278, 8, 1, "", "commit"]], "msilib.Control": [[278, 8, 1, "", "condition"], [278, 8, 1, "", "event"], [278, 8, 1, "", "mapping"]], "msilib.Database": [[278, 8, 1, "", "Close"], [278, 8, 1, "", "Commit"], [278, 8, 1, "", "GetSummaryInformation"], [278, 8, 1, "", "OpenView"]], "msilib.Dialog": [[278, 8, 1, "", "bitmap"], [278, 8, 1, "", "checkbox"], [278, 8, 1, "", "control"], [278, 8, 1, "", "line"], [278, 8, 1, "", "pushbutton"], [278, 8, 1, "", "radiogroup"], [278, 8, 1, "", "text"]], "msilib.Directory": [[278, 8, 1, "", "add_file"], [278, 8, 1, "", "glob"], [278, 8, 1, "", "remove_pyc"], [278, 8, 1, "", "start_component"]], "msilib.Feature": [[278, 8, 1, "", "set_current"]], "msilib.RadioButtonGroup": [[278, 8, 1, "", "add"]], "msilib.Record": [[278, 8, 1, "", "ClearData"], [278, 8, 1, "", "GetFieldCount"], [278, 8, 1, "", "GetInteger"], [278, 8, 1, "", "GetString"], [278, 8, 1, "", "SetInteger"], [278, 8, 1, "", "SetStream"], [278, 8, 1, "", "SetString"]], "msilib.SummaryInformation": [[278, 8, 1, "", "GetProperty"], [278, 8, 1, "", "GetPropertyCount"], [278, 8, 1, "", "Persist"], [278, 8, 1, "", "SetProperty"]], "msilib.View": [[278, 8, 1, "", "Close"], [278, 8, 1, "", "Execute"], [278, 8, 1, "", "Fetch"], [278, 8, 1, "", "GetColumnInfo"], [278, 8, 1, "", "Modify"]], "msvcrt": [[279, 9, 1, "", "LK_LOCK"], [279, 9, 1, "", "LK_NBLCK"], [279, 9, 1, "", "LK_NBRLCK"], [279, 9, 1, "", "LK_RLCK"], [279, 9, 1, "", "LK_UNLCK"], [279, 12, 1, "", "get_osfhandle"], [279, 12, 1, "", "getch"], [279, 12, 1, "", "getche"], [279, 12, 1, "", "getwch"], [279, 12, 1, "", "getwche"], [279, 12, 1, "", "heapmin"], [279, 12, 1, "", "kbhit"], [279, 12, 1, "", "locking"], [279, 12, 1, "", "open_osfhandle"], [279, 12, 1, "", "putch"], [279, 12, 1, "", "putwch"], [279, 12, 1, "", "setmode"], [279, 12, 1, "", "ungetch"], [279, 12, 1, "", "ungetwch"]], "multiprocessing": [[280, 12, 1, "", "Array"], [280, 6, 1, "", "AuthenticationError"], [280, 11, 1, "", "Barrier"], [280, 11, 1, "", "BoundedSemaphore"], [280, 6, 1, "", "BufferTooShort"], [280, 11, 1, "", "Condition"], [280, 11, 1, "", "Event"], [280, 11, 1, "", "JoinableQueue"], [280, 11, 1, "", "Lock"], [280, 12, 1, "", "Manager"], [280, 12, 1, "", "Pipe"], [280, 11, 1, "", "Process"], [280, 6, 1, "", "ProcessError"], [280, 11, 1, "", "Queue"], [280, 11, 1, "", "RLock"], [280, 11, 1, "", "Semaphore"], [280, 11, 1, "", "SimpleQueue"], [280, 6, 1, "", "TimeoutError"], [280, 12, 1, "", "Value"], [280, 12, 1, "", "active_children"], [280, 10, 0, "-", "connection"], [280, 12, 1, "", "cpu_count"], [280, 12, 1, "", "current_process"], [280, 10, 0, "-", "dummy"], [280, 12, 1, "", "freeze_support"], [280, 12, 1, "", "get_all_start_methods"], [280, 12, 1, "", "get_context"], [280, 12, 1, "", "get_logger"], [280, 12, 1, "", "get_start_method"], [280, 12, 1, "", "log_to_stderr"], [280, 10, 0, "-", "managers"], [280, 12, 1, "", "parent_process"], [280, 10, 0, "-", "pool"], [280, 12, 1, "", "set_executable"], [280, 12, 1, "", "set_forkserver_preload"], [280, 12, 1, "", "set_start_method"], [281, 10, 0, "-", "shared_memory"], [280, 10, 0, "-", "sharedctypes"]], "multiprocessing.JoinableQueue": [[280, 8, 1, "", "join"], [280, 8, 1, "", "task_done"]], "multiprocessing.Lock": [[280, 8, 1, "", "acquire"], [280, 8, 1, "", "release"]], "multiprocessing.Process": [[280, 7, 1, "", "authkey"], [280, 8, 1, "", "close"], [280, 7, 1, "", "daemon"], [280, 7, 1, "", "exitcode"], [280, 8, 1, "", "is_alive"], [280, 8, 1, "", "join"], [280, 8, 1, "", "kill"], [280, 7, 1, "", "name"], [280, 7, 1, "", "pid"], [280, 8, 1, "", "run"], [280, 7, 1, "", "sentinel"], [280, 8, 1, "", "start"], [280, 8, 1, "", "terminate"]], "multiprocessing.Queue": [[280, 8, 1, "", "cancel_join_thread"], [280, 8, 1, "", "close"], [280, 8, 1, "", "empty"], [280, 8, 1, "", "full"], [280, 8, 1, "", "get"], [280, 8, 1, "", "get_nowait"], [280, 8, 1, "", "join_thread"], [280, 8, 1, "", "put"], [280, 8, 1, "", "put_nowait"], [280, 8, 1, "", "qsize"]], "multiprocessing.RLock": [[280, 8, 1, "", "acquire"], [280, 8, 1, "", "release"]], "multiprocessing.SimpleQueue": [[280, 8, 1, "", "close"], [280, 8, 1, "", "empty"], [280, 8, 1, "", "get"], [280, 8, 1, "", "put"]], "multiprocessing.connection": [[280, 12, 1, "", "Client"], [280, 11, 1, "", "Connection"], [280, 11, 1, "", "Listener"], [280, 12, 1, "", "answer_challenge"], [280, 12, 1, "", "deliver_challenge"], [280, 12, 1, "", "wait"]], "multiprocessing.connection.Connection": [[280, 8, 1, "", "close"], [280, 8, 1, "", "fileno"], [280, 8, 1, "", "poll"], [280, 8, 1, "", "recv"], [280, 8, 1, "", "recv_bytes"], [280, 8, 1, "", "recv_bytes_into"], [280, 8, 1, "", "send"], [280, 8, 1, "", "send_bytes"]], "multiprocessing.connection.Listener": [[280, 8, 1, "", "accept"], [280, 7, 1, "", "address"], [280, 8, 1, "", "close"], [280, 7, 1, "", "last_accepted"]], "multiprocessing.managers": [[280, 11, 1, "", "BaseManager"], [280, 11, 1, "", "BaseProxy"], [280, 11, 1, "", "Namespace"], [281, 11, 1, "", "SharedMemoryManager"], [280, 11, 1, "", "SyncManager"]], "multiprocessing.managers.BaseManager": [[280, 7, 1, "", "address"], [280, 8, 1, "", "connect"], [280, 8, 1, "", "get_server"], [280, 8, 1, "", "register"], [280, 8, 1, "", "shutdown"], [280, 8, 1, "", "start"]], "multiprocessing.managers.BaseProxy": [[280, 8, 1, "", "__repr__"], [280, 8, 1, "", "__str__"], [280, 8, 1, "", "_callmethod"], [280, 8, 1, "", "_getvalue"]], "multiprocessing.managers.SharedMemoryManager": [[281, 8, 1, "", "ShareableList"], [281, 8, 1, "", "SharedMemory"]], "multiprocessing.managers.SyncManager": [[280, 8, 1, "", "Array"], [280, 8, 1, "", "Barrier"], [280, 8, 1, "", "BoundedSemaphore"], [280, 8, 1, "", "Condition"], [280, 8, 1, "", "Event"], [280, 8, 1, "", "Lock"], [280, 8, 1, "", "Namespace"], [280, 8, 1, "", "Queue"], [280, 8, 1, "", "RLock"], [280, 8, 1, "", "Semaphore"], [280, 8, 1, "", "Value"], [280, 8, 1, "", "dict"], [280, 8, 1, "", "list"]], "multiprocessing.pool": [[280, 11, 1, "", "AsyncResult"], [280, 11, 1, "", "Pool"], [280, 11, 1, "", "ThreadPool"]], "multiprocessing.pool.AsyncResult": [[280, 8, 1, "", "get"], [280, 8, 1, "", "ready"], [280, 8, 1, "", "successful"], [280, 8, 1, "", "wait"]], "multiprocessing.pool.Pool": [[280, 8, 1, "", "apply"], [280, 8, 1, "", "apply_async"], [280, 8, 1, "", "close"], [280, 8, 1, "", "imap"], [280, 8, 1, "", "imap_unordered"], [280, 8, 1, "", "join"], [280, 8, 1, "", "map"], [280, 8, 1, "", "map_async"], [280, 8, 1, "", "starmap"], [280, 8, 1, "", "starmap_async"], [280, 8, 1, "", "terminate"]], "multiprocessing.shared_memory": [[281, 11, 1, "", "ShareableList"], [281, 11, 1, "", "SharedMemory"]], "multiprocessing.shared_memory.ShareableList": [[281, 8, 1, "", "count"], [281, 7, 1, "", "format"], [281, 8, 1, "", "index"], [281, 7, 1, "", "shm"]], "multiprocessing.shared_memory.SharedMemory": [[281, 7, 1, "", "buf"], [281, 8, 1, "", "close"], [281, 7, 1, "", "name"], [281, 7, 1, "", "size"], [281, 8, 1, "", "unlink"]], "multiprocessing.sharedctypes": [[280, 12, 1, "", "Array"], [280, 12, 1, "", "RawArray"], [280, 12, 1, "", "RawValue"], [280, 12, 1, "", "Value"], [280, 12, 1, "", "copy"], [280, 12, 1, "", "synchronized"]], "netrc": [[283, 6, 1, "", "NetrcParseError"], [283, 11, 1, "", "netrc"]], "netrc.NetrcParseError": [[283, 7, 1, "", "filename"], [283, 7, 1, "", "lineno"], [283, 7, 1, "", "msg"]], "netrc.netrc": [[283, 8, 1, "", "__repr__"], [283, 8, 1, "", "authenticators"], [283, 7, 1, "", "hosts"], [283, 7, 1, "", "macros"]], "nis": [[284, 12, 1, "", "cat"], [284, 6, 1, "", "error"], [284, 12, 1, "", "get_default_domain"], [284, 12, 1, "", "maps"], [284, 12, 1, "", "match"]], "nntplib": [[285, 11, 1, "", "NNTP"], [285, 6, 1, "", "NNTPDataError"], [285, 6, 1, "", "NNTPError"], [285, 6, 1, "", "NNTPPermanentError"], [285, 6, 1, "", "NNTPProtocolError"], [285, 6, 1, "", "NNTPReplyError"], [285, 6, 1, "", "NNTPTemporaryError"], [285, 11, 1, "", "NNTP_SSL"], [285, 12, 1, "", "decode_header"]], "nntplib.NNTP": [[285, 8, 1, "", "article"], [285, 8, 1, "", "body"], [285, 8, 1, "", "date"], [285, 8, 1, "", "description"], [285, 8, 1, "", "descriptions"], [285, 8, 1, "", "getcapabilities"], [285, 8, 1, "", "getwelcome"], [285, 8, 1, "", "group"], [285, 8, 1, "", "head"], [285, 8, 1, "", "help"], [285, 8, 1, "", "ihave"], [285, 8, 1, "", "last"], [285, 8, 1, "", "list"], [285, 8, 1, "", "login"], [285, 8, 1, "", "newgroups"], [285, 8, 1, "", "newnews"], [285, 8, 1, "", "next"], [285, 7, 1, "", "nntp_implementation"], [285, 7, 1, "", "nntp_version"], [285, 8, 1, "", "over"], [285, 8, 1, "", "post"], [285, 8, 1, "", "quit"], [285, 8, 1, "", "set_debuglevel"], [285, 8, 1, "", "slave"], [285, 8, 1, "", "starttls"], [285, 8, 1, "", "stat"], [285, 8, 1, "", "xhdr"], [285, 8, 1, "", "xover"]], "nntplib.NNTPError": [[285, 7, 1, "", "response"]], "numbers": [[286, 11, 1, "", "Complex"], [286, 11, 1, "", "Integral"], [286, 11, 1, "", "Number"], [286, 11, 1, "", "Rational"], [286, 11, 1, "", "Real"]], "numbers.Complex": [[286, 8, 1, "", "conjugate"], [286, 7, 1, "", "imag"], [286, 7, 1, "", "real"]], "numbers.Rational": [[286, 7, 1, "", "denominator"], [286, 7, 1, "", "numerator"]], "object": [[425, 8, 1, "", "__abs__"], [425, 8, 1, "", "__add__"], [425, 8, 1, "", "__aenter__"], [425, 8, 1, "", "__aexit__"], [425, 8, 1, "", "__aiter__"], [425, 8, 1, "", "__and__"], [425, 8, 1, "", "__anext__"], [425, 8, 1, "", "__await__"], [425, 8, 1, "", "__bool__"], [425, 8, 1, "", "__buffer__"], [425, 8, 1, "", "__bytes__"], [425, 8, 1, "", "__call__"], [425, 8, 1, "", "__ceil__"], [425, 8, 1, "", "__class_getitem__"], [425, 8, 1, "", "__complex__"], [425, 8, 1, "", "__contains__"], [425, 8, 1, "", "__del__"], [425, 8, 1, "", "__delattr__"], [425, 8, 1, "", "__delete__"], [425, 8, 1, "", "__delitem__"], [341, 7, 1, "", "__dict__"], [425, 8, 1, "", "__dir__"], [425, 8, 1, "", "__divmod__"], [425, 8, 1, "", "__enter__"], [425, 8, 1, "", "__eq__"], [425, 8, 1, "", "__exit__"], [425, 8, 1, "", "__float__"], [425, 8, 1, "", "__floor__"], [425, 8, 1, "", "__floordiv__"], [425, 8, 1, "", "__format__"], [425, 8, 1, "", "__ge__"], [425, 8, 1, "", "__get__"], [425, 8, 1, "", "__getattr__"], [425, 8, 1, "", "__getattribute__"], [425, 8, 1, "", "__getitem__"], [296, 8, 1, "", "__getnewargs__"], [296, 8, 1, "", "__getnewargs_ex__"], [296, 8, 1, "", "__getstate__"], [425, 8, 1, "", "__gt__"], [425, 8, 1, "", "__hash__"], [425, 8, 1, "", "__iadd__"], [425, 8, 1, "", "__iand__"], [425, 8, 1, "", "__ifloordiv__"], [425, 8, 1, "", "__ilshift__"], [425, 8, 1, "", "__imatmul__"], [425, 8, 1, "", "__imod__"], [425, 8, 1, "", "__imul__"], [425, 8, 1, "", "__index__"], [425, 8, 1, "", "__init__"], [425, 8, 1, "", "__init_subclass__"], [425, 8, 1, "", "__int__"], [425, 8, 1, "", "__invert__"], [425, 8, 1, "", "__ior__"], [425, 8, 1, "", "__ipow__"], [425, 8, 1, "", "__irshift__"], [425, 8, 1, "", "__isub__"], [425, 8, 1, "", "__iter__"], [425, 8, 1, "", "__itruediv__"], [425, 8, 1, "", "__ixor__"], [425, 8, 1, "", "__le__"], [425, 8, 1, "", "__len__"], [425, 8, 1, "", "__length_hint__"], [425, 8, 1, "", "__lshift__"], [425, 8, 1, "", "__lt__"], [425, 9, 1, "", "__match_args__"], [425, 8, 1, "", "__matmul__"], [425, 8, 1, "", "__missing__"], [425, 8, 1, "", "__mod__"], [425, 8, 1, "", "__mro_entries__"], [425, 8, 1, "", "__mul__"], [425, 8, 1, "", "__ne__"], [425, 8, 1, "", "__neg__"], [425, 8, 1, "", "__new__"], [425, 7, 1, "", "__objclass__"], [425, 8, 1, "", "__or__"], [425, 8, 1, "", "__pos__"], [425, 8, 1, "", "__pow__"], [425, 8, 1, "", "__radd__"], [425, 8, 1, "", "__rand__"], [425, 8, 1, "", "__rdivmod__"], [296, 8, 1, "", "__reduce__"], [296, 8, 1, "", "__reduce_ex__"], [425, 8, 1, "", "__release_buffer__"], [425, 8, 1, "", "__repr__"], [425, 8, 1, "", "__reversed__"], [425, 8, 1, "", "__rfloordiv__"], [425, 8, 1, "", "__rlshift__"], [425, 8, 1, "", "__rmatmul__"], [425, 8, 1, "", "__rmod__"], [425, 8, 1, "", "__rmul__"], [425, 8, 1, "", "__ror__"], [425, 8, 1, "", "__round__"], [425, 8, 1, "", "__rpow__"], [425, 8, 1, "", "__rrshift__"], [425, 8, 1, "", "__rshift__"], [425, 8, 1, "", "__rsub__"], [425, 8, 1, "", "__rtruediv__"], [425, 8, 1, "", "__rxor__"], [425, 8, 1, "", "__set__"], [425, 8, 1, "", "__set_name__"], [425, 8, 1, "", "__setattr__"], [425, 8, 1, "", "__setitem__"], [296, 8, 1, "", "__setstate__"], [425, 9, 1, "", "__slots__"], [425, 8, 1, "", "__str__"], [425, 8, 1, "", "__sub__"], [425, 8, 1, "", "__truediv__"], [425, 8, 1, "", "__trunc__"], [425, 8, 1, "", "__xor__"]], "operator": [[288, 12, 1, "", "__abs__"], [288, 12, 1, "", "__add__"], [288, 12, 1, "", "__and__"], [288, 12, 1, "", "__call__"], [288, 12, 1, "", "__concat__"], [288, 12, 1, "", "__contains__"], [288, 12, 1, "", "__delitem__"], [288, 12, 1, "", "__eq__"], [288, 12, 1, "", "__floordiv__"], [288, 12, 1, "", "__ge__"], [288, 12, 1, "", "__getitem__"], [288, 12, 1, "", "__gt__"], [288, 12, 1, "", "__iadd__"], [288, 12, 1, "", "__iand__"], [288, 12, 1, "", "__iconcat__"], [288, 12, 1, "", "__ifloordiv__"], [288, 12, 1, "", "__ilshift__"], [288, 12, 1, "", "__imatmul__"], [288, 12, 1, "", "__imod__"], [288, 12, 1, "", "__imul__"], [288, 12, 1, "", "__index__"], [288, 12, 1, "", "__inv__"], [288, 12, 1, "", "__invert__"], [288, 12, 1, "", "__ior__"], [288, 12, 1, "", "__ipow__"], [288, 12, 1, "", "__irshift__"], [288, 12, 1, "", "__isub__"], [288, 12, 1, "", "__itruediv__"], [288, 12, 1, "", "__ixor__"], [288, 12, 1, "", "__le__"], [288, 12, 1, "", "__lshift__"], [288, 12, 1, "", "__lt__"], [288, 12, 1, "", "__matmul__"], [288, 12, 1, "", "__mod__"], [288, 12, 1, "", "__mul__"], [288, 12, 1, "", "__ne__"], [288, 12, 1, "", "__neg__"], [288, 12, 1, "", "__not__"], [288, 12, 1, "", "__or__"], [288, 12, 1, "", "__pos__"], [288, 12, 1, "", "__pow__"], [288, 12, 1, "", "__rshift__"], [288, 12, 1, "", "__setitem__"], [288, 12, 1, "", "__sub__"], [288, 12, 1, "", "__truediv__"], [288, 12, 1, "", "__xor__"], [288, 12, 1, "", "abs"], [288, 12, 1, "", "add"], [288, 12, 1, "", "and_"], [288, 12, 1, "", "attrgetter"], [288, 12, 1, "", "call"], [288, 12, 1, "", "concat"], [288, 12, 1, "", "contains"], [288, 12, 1, "", "countOf"], [288, 12, 1, "", "delitem"], [288, 12, 1, "", "eq"], [288, 12, 1, "", "floordiv"], [288, 12, 1, "", "ge"], [288, 12, 1, "", "getitem"], [288, 12, 1, "", "gt"], [288, 12, 1, "", "iadd"], [288, 12, 1, "", "iand"], [288, 12, 1, "", "iconcat"], [288, 12, 1, "", "ifloordiv"], [288, 12, 1, "", "ilshift"], [288, 12, 1, "", "imatmul"], [288, 12, 1, "", "imod"], [288, 12, 1, "", "imul"], [288, 12, 1, "", "index"], [288, 12, 1, "", "indexOf"], [288, 12, 1, "", "inv"], [288, 12, 1, "", "invert"], [288, 12, 1, "", "ior"], [288, 12, 1, "", "ipow"], [288, 12, 1, "", "irshift"], [288, 12, 1, "", "is_"], [288, 12, 1, "", "is_not"], [288, 12, 1, "", "isub"], [288, 12, 1, "", "itemgetter"], [288, 12, 1, "", "itruediv"], [288, 12, 1, "", "ixor"], [288, 12, 1, "", "le"], [288, 12, 1, "", "length_hint"], [288, 12, 1, "", "lshift"], [288, 12, 1, "", "lt"], [288, 12, 1, "", "matmul"], [288, 12, 1, "", "methodcaller"], [288, 12, 1, "", "mod"], [288, 12, 1, "", "mul"], [288, 12, 1, "", "ne"], [288, 12, 1, "", "neg"], [288, 12, 1, "", "not_"], [288, 12, 1, "", "or_"], [288, 12, 1, "", "pos"], [288, 12, 1, "", "pow"], [288, 12, 1, "", "rshift"], [288, 12, 1, "", "setitem"], [288, 12, 1, "", "sub"], [288, 12, 1, "", "truediv"], [288, 12, 1, "", "truth"], [288, 12, 1, "", "xor"]], "optparse": [[289, 6, 1, "", "AmbiguousOptionError"], [289, 6, 1, "", "BadOptionError"], [289, 11, 1, "", "Option"], [289, 6, 1, "", "OptionConflictError"], [289, 6, 1, "", "OptionError"], [289, 11, 1, "", "OptionGroup"], [289, 11, 1, "", "OptionParser"], [289, 6, 1, "", "OptionValueError"], [289, 11, 1, "", "Values"]], "optparse.Option": [[289, 7, 1, "", "ACTIONS"], [289, 7, 1, "", "ALWAYS_TYPED_ACTIONS"], [289, 7, 1, "", "STORE_ACTIONS"], [289, 7, 1, "", "TYPED_ACTIONS"], [289, 7, 1, "", "TYPES"], [289, 7, 1, "", "TYPE_CHECKER"], [289, 7, 1, "", "action"], [289, 7, 1, "", "callback"], [289, 7, 1, "", "callback_args"], [289, 7, 1, "", "callback_kwargs"], [289, 7, 1, "", "choices"], [289, 7, 1, "", "const"], [289, 7, 1, "", "default"], [289, 7, 1, "", "dest"], [289, 7, 1, "", "help"], [289, 7, 1, "", "metavar"], [289, 7, 1, "", "nargs"], [289, 7, 1, "", "type"]], "optparse.OptionParser": [[289, 8, 1, "", "add_option"], [289, 8, 1, "", "disable_interspersed_args"], [289, 8, 1, "", "enable_interspersed_args"], [289, 8, 1, "", "get_option"], [289, 8, 1, "", "get_option_group"], [289, 8, 1, "", "get_usage"], [289, 8, 1, "", "get_version"], [289, 8, 1, "", "has_option"], [289, 8, 1, "", "parse_args"], [289, 8, 1, "", "print_usage"], [289, 8, 1, "", "print_version"], [289, 8, 1, "", "remove_option"], [289, 8, 1, "", "set_defaults"], [289, 8, 1, "", "set_usage"]], "os": [[290, 9, 1, "", "CLD_CONTINUED"], [290, 9, 1, "", "CLD_DUMPED"], [290, 9, 1, "", "CLD_EXITED"], [290, 9, 1, "", "CLD_KILLED"], [290, 9, 1, "", "CLD_STOPPED"], [290, 9, 1, "", "CLD_TRAPPED"], [290, 9, 1, "", "CLONE_FILES"], [290, 9, 1, "", "CLONE_FS"], [290, 9, 1, "", "CLONE_NEWCGROUP"], [290, 9, 1, "", "CLONE_NEWIPC"], [290, 9, 1, "", "CLONE_NEWNET"], [290, 9, 1, "", "CLONE_NEWNS"], [290, 9, 1, "", "CLONE_NEWPID"], [290, 9, 1, "", "CLONE_NEWTIME"], [290, 9, 1, "", "CLONE_NEWUSER"], [290, 9, 1, "", "CLONE_NEWUTS"], [290, 9, 1, "", "CLONE_SIGHAND"], [290, 9, 1, "", "CLONE_SYSVSEM"], [290, 9, 1, "", "CLONE_THREAD"], [290, 9, 1, "", "CLONE_VM"], [290, 11, 1, "", "DirEntry"], [290, 9, 1, "", "EFD_CLOEXEC"], [290, 9, 1, "", "EFD_NONBLOCK"], [290, 9, 1, "", "EFD_SEMAPHORE"], [290, 9, 1, "", "EX_CANTCREAT"], [290, 9, 1, "", "EX_CONFIG"], [290, 9, 1, "", "EX_DATAERR"], [290, 9, 1, "", "EX_IOERR"], [290, 9, 1, "", "EX_NOHOST"], [290, 9, 1, "", "EX_NOINPUT"], [290, 9, 1, "", "EX_NOPERM"], [290, 9, 1, "", "EX_NOTFOUND"], [290, 9, 1, "", "EX_NOUSER"], [290, 9, 1, "", "EX_OK"], [290, 9, 1, "", "EX_OSERR"], [290, 9, 1, "", "EX_OSFILE"], [290, 9, 1, "", "EX_PROTOCOL"], [290, 9, 1, "", "EX_SOFTWARE"], [290, 9, 1, "", "EX_TEMPFAIL"], [290, 9, 1, "", "EX_UNAVAILABLE"], [290, 9, 1, "", "EX_USAGE"], [290, 9, 1, "", "F_LOCK"], [290, 9, 1, "", "F_OK"], [290, 9, 1, "", "F_TEST"], [290, 9, 1, "", "F_TLOCK"], [290, 9, 1, "", "F_ULOCK"], [290, 9, 1, "", "GRND_NONBLOCK"], [290, 9, 1, "", "GRND_RANDOM"], [290, 9, 1, "", "MFD_ALLOW_SEALING"], [290, 9, 1, "", "MFD_CLOEXEC"], [290, 9, 1, "", "MFD_HUGETLB"], [290, 9, 1, "", "MFD_HUGE_16GB"], [290, 9, 1, "", "MFD_HUGE_16MB"], [290, 9, 1, "", "MFD_HUGE_1GB"], [290, 9, 1, "", "MFD_HUGE_1MB"], [290, 9, 1, "", "MFD_HUGE_256MB"], [290, 9, 1, "", "MFD_HUGE_2GB"], [290, 9, 1, "", "MFD_HUGE_2MB"], [290, 9, 1, "", "MFD_HUGE_32MB"], [290, 9, 1, "", "MFD_HUGE_512KB"], [290, 9, 1, "", "MFD_HUGE_512MB"], [290, 9, 1, "", "MFD_HUGE_64KB"], [290, 9, 1, "", "MFD_HUGE_8MB"], [290, 9, 1, "", "MFD_HUGE_MASK"], [290, 9, 1, "", "MFD_HUGE_SHIFT"], [290, 9, 1, "", "O_APPEND"], [290, 9, 1, "", "O_ASYNC"], [290, 9, 1, "", "O_BINARY"], [290, 9, 1, "", "O_CLOEXEC"], [290, 9, 1, "", "O_CREAT"], [290, 9, 1, "", "O_DIRECT"], [290, 9, 1, "", "O_DIRECTORY"], [290, 9, 1, "", "O_DSYNC"], [290, 9, 1, "", "O_EVTONLY"], [290, 9, 1, "", "O_EXCL"], [290, 9, 1, "", "O_EXLOCK"], [290, 9, 1, "", "O_FSYNC"], [290, 9, 1, "", "O_NDELAY"], [290, 9, 1, "", "O_NOATIME"], [290, 9, 1, "", "O_NOCTTY"], [290, 9, 1, "", "O_NOFOLLOW"], [290, 9, 1, "", "O_NOFOLLOW_ANY"], [290, 9, 1, "", "O_NOINHERIT"], [290, 9, 1, "", "O_NONBLOCK"], [290, 9, 1, "", "O_PATH"], [290, 9, 1, "", "O_RANDOM"], [290, 9, 1, "", "O_RDONLY"], [290, 9, 1, "", "O_RDWR"], [290, 9, 1, "", "O_RSYNC"], [290, 9, 1, "", "O_SEQUENTIAL"], [290, 9, 1, "", "O_SHLOCK"], [290, 9, 1, "", "O_SHORT_LIVED"], [290, 9, 1, "", "O_SYMLINK"], [290, 9, 1, "", "O_SYNC"], [290, 9, 1, "", "O_TEMPORARY"], [290, 9, 1, "", "O_TEXT"], [290, 9, 1, "", "O_TMPFILE"], [290, 9, 1, "", "O_TRUNC"], [290, 9, 1, "", "O_WRONLY"], [290, 9, 1, "", "PIDFD_NONBLOCK"], [290, 9, 1, "", "POSIX_FADV_DONTNEED"], [290, 9, 1, "", "POSIX_FADV_NOREUSE"], [290, 9, 1, "", "POSIX_FADV_NORMAL"], [290, 9, 1, "", "POSIX_FADV_RANDOM"], [290, 9, 1, "", "POSIX_FADV_SEQUENTIAL"], [290, 9, 1, "", "POSIX_FADV_WILLNEED"], [290, 9, 1, "", "POSIX_SPAWN_CLOSE"], [290, 9, 1, "", "POSIX_SPAWN_DUP2"], [290, 9, 1, "", "POSIX_SPAWN_OPEN"], [290, 9, 1, "", "PRIO_DARWIN_BG"], [290, 9, 1, "", "PRIO_DARWIN_NONUI"], [290, 9, 1, "", "PRIO_DARWIN_PROCESS"], [290, 9, 1, "", "PRIO_DARWIN_THREAD"], [290, 9, 1, "", "PRIO_PGRP"], [290, 9, 1, "", "PRIO_PROCESS"], [290, 9, 1, "", "PRIO_USER"], [290, 9, 1, "", "P_ALL"], [290, 9, 1, "", "P_DETACH"], [290, 9, 1, "", "P_NOWAIT"], [290, 9, 1, "", "P_NOWAITO"], [290, 9, 1, "", "P_OVERLAY"], [290, 9, 1, "", "P_PGID"], [290, 9, 1, "", "P_PID"], [290, 9, 1, "", "P_PIDFD"], [290, 9, 1, "", "P_WAIT"], [290, 11, 1, "", "PathLike"], [290, 9, 1, "", "RTLD_DEEPBIND"], [290, 9, 1, "", "RTLD_GLOBAL"], [290, 9, 1, "", "RTLD_LAZY"], [290, 9, 1, "", "RTLD_LOCAL"], [290, 9, 1, "", "RTLD_NODELETE"], [290, 9, 1, "", "RTLD_NOLOAD"], [290, 9, 1, "", "RTLD_NOW"], [290, 9, 1, "", "RWF_APPEND"], [290, 9, 1, "", "RWF_DSYNC"], [290, 9, 1, "", "RWF_HIPRI"], [290, 9, 1, "", "RWF_NOWAIT"], [290, 9, 1, "", "RWF_SYNC"], [290, 9, 1, "", "R_OK"], [290, 9, 1, "", "SCHED_BATCH"], [290, 9, 1, "", "SCHED_FIFO"], [290, 9, 1, "", "SCHED_IDLE"], [290, 9, 1, "", "SCHED_OTHER"], [290, 9, 1, "", "SCHED_RESET_ON_FORK"], [290, 9, 1, "", "SCHED_RR"], [290, 9, 1, "", "SCHED_SPORADIC"], [290, 9, 1, "", "SEEK_CUR"], [290, 9, 1, "", "SEEK_DATA"], [290, 9, 1, "", "SEEK_END"], [290, 9, 1, "", "SEEK_HOLE"], [290, 9, 1, "", "SEEK_SET"], [290, 9, 1, "", "SF_MNOWAIT"], [290, 9, 1, "", "SF_NOCACHE"], [290, 9, 1, "", "SF_NODISKIO"], [290, 9, 1, "", "SF_SYNC"], [290, 9, 1, "", "SPLICE_F_MORE"], [290, 9, 1, "", "SPLICE_F_MOVE"], [290, 9, 1, "", "SPLICE_F_NONBLOCK"], [290, 9, 1, "", "WCONTINUED"], [290, 12, 1, "", "WCOREDUMP"], [290, 9, 1, "", "WEXITED"], [290, 12, 1, "", "WEXITSTATUS"], [290, 12, 1, "", "WIFCONTINUED"], [290, 12, 1, "", "WIFEXITED"], [290, 12, 1, "", "WIFSIGNALED"], [290, 12, 1, "", "WIFSTOPPED"], [290, 9, 1, "", "WNOHANG"], [290, 9, 1, "", "WNOWAIT"], [290, 9, 1, "", "WSTOPPED"], [290, 12, 1, "", "WSTOPSIG"], [290, 12, 1, "", "WTERMSIG"], [290, 9, 1, "", "WUNTRACED"], [290, 9, 1, "", "W_OK"], [290, 9, 1, "", "XATTR_CREATE"], [290, 9, 1, "", "XATTR_REPLACE"], [290, 9, 1, "", "XATTR_SIZE_MAX"], [290, 9, 1, "", "X_OK"], [290, 12, 1, "", "_exit"], [290, 12, 1, "", "abort"], [290, 12, 1, "", "access"], [290, 12, 1, "", "add_dll_directory"], [290, 9, 1, "", "altsep"], [290, 12, 1, "", "chdir"], [290, 12, 1, "", "chflags"], [290, 12, 1, "", "chmod"], [290, 12, 1, "", "chown"], [290, 12, 1, "", "chroot"], [290, 12, 1, "", "close"], [290, 12, 1, "", "closerange"], [290, 12, 1, "", "confstr"], [290, 9, 1, "", "confstr_names"], [290, 12, 1, "", "copy_file_range"], [290, 12, 1, "", "cpu_count"], [290, 12, 1, "", "ctermid"], [290, 9, 1, "", "curdir"], [290, 9, 1, "", "defpath"], [290, 12, 1, "", "device_encoding"], [290, 9, 1, "", "devnull"], [290, 12, 1, "", "dup"], [290, 12, 1, "", "dup2"], [290, 9, 1, "", "environ"], [290, 9, 1, "", "environb"], [290, 6, 1, "", "error"], [290, 12, 1, "", "eventfd"], [290, 12, 1, "", "eventfd_read"], [290, 12, 1, "", "eventfd_write"], [290, 12, 1, "", "execl"], [290, 12, 1, "", "execle"], [290, 12, 1, "", "execlp"], [290, 12, 1, "", "execlpe"], [290, 12, 1, "", "execv"], [290, 12, 1, "", "execve"], [290, 12, 1, "", "execvp"], [290, 12, 1, "", "execvpe"], [290, 9, 1, "", "extsep"], [290, 12, 1, "", "fchdir"], [290, 12, 1, "", "fchmod"], [290, 12, 1, "", "fchown"], [290, 12, 1, "", "fdatasync"], [290, 12, 1, "", "fdopen"], [290, 12, 1, "", "fork"], [290, 12, 1, "", "forkpty"], [290, 12, 1, "", "fpathconf"], [290, 12, 1, "", "fsdecode"], [290, 12, 1, "", "fsencode"], [290, 12, 1, "", "fspath"], [290, 12, 1, "", "fstat"], [290, 12, 1, "", "fstatvfs"], [290, 12, 1, "", "fsync"], [290, 12, 1, "", "ftruncate"], [290, 12, 1, "", "fwalk"], [290, 12, 1, "", "get_blocking"], [290, 12, 1, "", "get_exec_path"], [290, 12, 1, "", "get_handle_inheritable"], [290, 12, 1, "", "get_inheritable"], [290, 12, 1, "", "get_terminal_size"], [290, 12, 1, "", "getcwd"], [290, 12, 1, "", "getcwdb"], [290, 12, 1, "", "getegid"], [290, 12, 1, "", "getenv"], [290, 12, 1, "", "getenvb"], [290, 12, 1, "", "geteuid"], [290, 12, 1, "", "getgid"], [290, 12, 1, "", "getgrouplist"], [290, 12, 1, "", "getgroups"], [290, 12, 1, "", "getloadavg"], [290, 12, 1, "", "getlogin"], [290, 12, 1, "", "getpgid"], [290, 12, 1, "", "getpgrp"], [290, 12, 1, "", "getpid"], [290, 12, 1, "", "getppid"], [290, 12, 1, "", "getpriority"], [290, 12, 1, "", "getrandom"], [290, 12, 1, "", "getresgid"], [290, 12, 1, "", "getresuid"], [290, 12, 1, "", "getsid"], [290, 12, 1, "", "getuid"], [290, 12, 1, "", "getxattr"], [290, 12, 1, "", "initgroups"], [290, 12, 1, "", "isatty"], [290, 12, 1, "", "kill"], [290, 12, 1, "", "killpg"], [290, 12, 1, "", "lchflags"], [290, 12, 1, "", "lchmod"], [290, 12, 1, "", "lchown"], [290, 9, 1, "", "linesep"], [290, 12, 1, "", "link"], [290, 12, 1, "", "listdir"], [290, 12, 1, "", "listdrives"], [290, 12, 1, "", "listmounts"], [290, 12, 1, "", "listvolumes"], [290, 12, 1, "", "listxattr"], [290, 12, 1, "", "lockf"], [290, 12, 1, "", "login_tty"], [290, 12, 1, "", "lseek"], [290, 12, 1, "", "lstat"], [290, 12, 1, "", "major"], [290, 12, 1, "", "makedev"], [290, 12, 1, "", "makedirs"], [290, 12, 1, "", "memfd_create"], [290, 12, 1, "", "minor"], [290, 12, 1, "", "mkdir"], [290, 12, 1, "", "mkfifo"], [290, 12, 1, "", "mknod"], [290, 9, 1, "", "name"], [290, 12, 1, "", "nice"], [290, 12, 1, "", "open"], [290, 12, 1, "", "openpty"], [290, 9, 1, "", "pardir"], [291, 10, 0, "-", "path"], [290, 12, 1, "", "pathconf"], [290, 9, 1, "", "pathconf_names"], [290, 9, 1, "", "pathsep"], [290, 12, 1, "", "pidfd_open"], [290, 12, 1, "", "pipe"], [290, 12, 1, "", "pipe2"], [290, 12, 1, "", "plock"], [290, 12, 1, "", "popen"], [290, 12, 1, "", "posix_fadvise"], [290, 12, 1, "", "posix_fallocate"], [290, 12, 1, "", "posix_spawn"], [290, 12, 1, "", "posix_spawnp"], [290, 12, 1, "", "pread"], [290, 12, 1, "", "preadv"], [290, 12, 1, "", "putenv"], [290, 12, 1, "", "pwrite"], [290, 12, 1, "", "pwritev"], [290, 12, 1, "", "read"], [290, 12, 1, "", "readlink"], [290, 12, 1, "", "readv"], [290, 12, 1, "", "register_at_fork"], [290, 12, 1, "", "remove"], [290, 12, 1, "", "removedirs"], [290, 12, 1, "", "removexattr"], [290, 12, 1, "", "rename"], [290, 12, 1, "", "renames"], [290, 12, 1, "", "replace"], [290, 12, 1, "", "rmdir"], [290, 12, 1, "", "scandir"], [290, 12, 1, "", "sched_get_priority_max"], [290, 12, 1, "", "sched_get_priority_min"], [290, 12, 1, "", "sched_getaffinity"], [290, 12, 1, "", "sched_getparam"], [290, 12, 1, "", "sched_getscheduler"], [290, 11, 1, "", "sched_param"], [290, 12, 1, "", "sched_rr_get_interval"], [290, 12, 1, "", "sched_setaffinity"], [290, 12, 1, "", "sched_setparam"], [290, 12, 1, "", "sched_setscheduler"], [290, 12, 1, "", "sched_yield"], [290, 12, 1, "", "sendfile"], [290, 9, 1, "", "sep"], [290, 12, 1, "", "set_blocking"], [290, 12, 1, "", "set_handle_inheritable"], [290, 12, 1, "", "set_inheritable"], [290, 12, 1, "", "setegid"], [290, 12, 1, "", "seteuid"], [290, 12, 1, "", "setgid"], [290, 12, 1, "", "setgroups"], [290, 12, 1, "", "setns"], [290, 12, 1, "", "setpgid"], [290, 12, 1, "", "setpgrp"], [290, 12, 1, "", "setpriority"], [290, 12, 1, "", "setregid"], [290, 12, 1, "", "setresgid"], [290, 12, 1, "", "setresuid"], [290, 12, 1, "", "setreuid"], [290, 12, 1, "", "setsid"], [290, 12, 1, "", "setuid"], [290, 12, 1, "", "setxattr"], [290, 12, 1, "", "spawnl"], [290, 12, 1, "", "spawnle"], [290, 12, 1, "", "spawnlp"], [290, 12, 1, "", "spawnlpe"], [290, 12, 1, "", "spawnv"], [290, 12, 1, "", "spawnve"], [290, 12, 1, "", "spawnvp"], [290, 12, 1, "", "spawnvpe"], [290, 12, 1, "", "splice"], [290, 12, 1, "", "startfile"], [290, 12, 1, "", "stat"], [290, 11, 1, "", "stat_result"], [290, 12, 1, "", "statvfs"], [290, 12, 1, "", "strerror"], [290, 9, 1, "", "supports_bytes_environ"], [290, 9, 1, "", "supports_dir_fd"], [290, 9, 1, "", "supports_effective_ids"], [290, 9, 1, "", "supports_fd"], [290, 9, 1, "", "supports_follow_symlinks"], [290, 12, 1, "", "symlink"], [290, 12, 1, "", "sync"], [290, 12, 1, "", "sysconf"], [290, 9, 1, "", "sysconf_names"], [290, 12, 1, "", "system"], [290, 12, 1, "", "tcgetpgrp"], [290, 12, 1, "", "tcsetpgrp"], [290, 11, 1, "", "terminal_size"], [290, 12, 1, "", "times"], [290, 12, 1, "", "truncate"], [290, 12, 1, "", "ttyname"], [290, 12, 1, "", "umask"], [290, 12, 1, "", "uname"], [290, 12, 1, "", "unlink"], [290, 12, 1, "", "unsetenv"], [290, 12, 1, "", "unshare"], [290, 12, 1, "", "urandom"], [290, 12, 1, "", "utime"], [290, 12, 1, "", "wait"], [290, 12, 1, "", "wait3"], [290, 12, 1, "", "wait4"], [290, 12, 1, "", "waitid"], [290, 12, 1, "", "waitpid"], [290, 12, 1, "", "waitstatus_to_exitcode"], [290, 12, 1, "", "walk"], [290, 12, 1, "", "write"], [290, 12, 1, "", "writev"]], "os.DirEntry": [[290, 8, 1, "", "inode"], [290, 8, 1, "", "is_dir"], [290, 8, 1, "", "is_file"], [290, 8, 1, "", "is_junction"], [290, 8, 1, "", "is_symlink"], [290, 7, 1, "", "name"], [290, 7, 1, "", "path"], [290, 8, 1, "", "stat"]], "os.PathLike": [[290, 8, 1, "", "__fspath__"]], "os.path": [[291, 12, 1, "", "abspath"], [291, 12, 1, "", "basename"], [291, 12, 1, "", "commonpath"], [291, 12, 1, "", "commonprefix"], [291, 12, 1, "", "dirname"], [291, 12, 1, "", "exists"], [291, 12, 1, "", "expanduser"], [291, 12, 1, "", "expandvars"], [291, 12, 1, "", "getatime"], [291, 12, 1, "", "getctime"], [291, 12, 1, "", "getmtime"], [291, 12, 1, "", "getsize"], [291, 12, 1, "", "isabs"], [291, 12, 1, "", "isdevdrive"], [291, 12, 1, "", "isdir"], [291, 12, 1, "", "isfile"], [291, 12, 1, "", "isjunction"], [291, 12, 1, "", "islink"], [291, 12, 1, "", "ismount"], [291, 12, 1, "", "join"], [291, 12, 1, "", "lexists"], [291, 12, 1, "", "normcase"], [291, 12, 1, "", "normpath"], [291, 12, 1, "", "realpath"], [291, 12, 1, "", "relpath"], [291, 12, 1, "", "samefile"], [291, 12, 1, "", "sameopenfile"], [291, 12, 1, "", "samestat"], [291, 12, 1, "", "split"], [291, 12, 1, "", "splitdrive"], [291, 12, 1, "", "splitext"], [291, 12, 1, "", "splitroot"], [291, 9, 1, "", "supports_unicode_filenames"]], "os.scandir": [[290, 8, 1, "", "close"]], "os.sched_param": [[290, 7, 1, "", "sched_priority"]], "os.stat_result": [[290, 7, 1, "", "st_atime"], [290, 7, 1, "", "st_atime_ns"], [290, 7, 1, "", "st_birthtime"], [290, 7, 1, "", "st_birthtime_ns"], [290, 7, 1, "", "st_blksize"], [290, 7, 1, "", "st_blocks"], [290, 7, 1, "", "st_creator"], [290, 7, 1, "", "st_ctime"], [290, 7, 1, "", "st_ctime_ns"], [290, 7, 1, "", "st_dev"], [290, 7, 1, "", "st_file_attributes"], [290, 7, 1, "", "st_flags"], [290, 7, 1, "", "st_fstype"], [290, 7, 1, "", "st_gen"], [290, 7, 1, "", "st_gid"], [290, 7, 1, "", "st_ino"], [290, 7, 1, "", "st_mode"], [290, 7, 1, "", "st_mtime"], [290, 7, 1, "", "st_mtime_ns"], [290, 7, 1, "", "st_nlink"], [290, 7, 1, "", "st_rdev"], [290, 7, 1, "", "st_reparse_tag"], [290, 7, 1, "", "st_rsize"], [290, 7, 1, "", "st_size"], [290, 7, 1, "", "st_type"], [290, 7, 1, "", "st_uid"]], "os.terminal_size": [[290, 7, 1, "", "columns"], [290, 7, 1, "", "lines"]], "ossaudiodev": [[292, 6, 1, "", "OSSAudioError"], [292, 12, 1, "", "open"], [292, 12, 1, "", "openmixer"]], "ossaudiodev.oss_audio_device": [[292, 8, 1, "", "bufsize"], [292, 8, 1, "", "channels"], [292, 8, 1, "", "close"], [292, 7, 1, "", "closed"], [292, 8, 1, "", "fileno"], [292, 8, 1, "", "getfmts"], [292, 7, 1, "", "mode"], [292, 7, 1, "", "name"], [292, 8, 1, "", "nonblock"], [292, 8, 1, "", "obufcount"], [292, 8, 1, "", "obuffree"], [292, 8, 1, "", "post"], [292, 8, 1, "", "read"], [292, 8, 1, "", "reset"], [292, 8, 1, "", "setfmt"], [292, 8, 1, "", "setparameters"], [292, 8, 1, "", "speed"], [292, 8, 1, "", "sync"], [292, 8, 1, "", "write"], [292, 8, 1, "", "writeall"]], "ossaudiodev.oss_mixer_device": [[292, 8, 1, "", "close"], [292, 8, 1, "", "controls"], [292, 8, 1, "", "fileno"], [292, 8, 1, "", "get"], [292, 8, 1, "", "get_recsrc"], [292, 8, 1, "", "reccontrols"], [292, 8, 1, "", "set"], [292, 8, 1, "", "set_recsrc"], [292, 8, 1, "", "stereocontrols"]], "pathlib": [[293, 11, 1, "", "Path"], [293, 11, 1, "", "PosixPath"], [293, 11, 1, "", "PurePath"], [293, 11, 1, "", "PurePosixPath"], [293, 11, 1, "", "PureWindowsPath"], [293, 11, 1, "", "WindowsPath"]], "pathlib.Path": [[293, 8, 1, "", "absolute"], [293, 8, 1, "", "chmod"], [293, 8, 1, "", "cwd"], [293, 8, 1, "", "exists"], [293, 8, 1, "", "expanduser"], [293, 8, 1, "", "glob"], [293, 8, 1, "", "group"], [293, 8, 1, "", "hardlink_to"], [293, 8, 1, "", "home"], [293, 8, 1, "", "is_block_device"], [293, 8, 1, "", "is_char_device"], [293, 8, 1, "", "is_dir"], [293, 8, 1, "", "is_fifo"], [293, 8, 1, "", "is_file"], [293, 8, 1, "", "is_junction"], [293, 8, 1, "", "is_mount"], [293, 8, 1, "", "is_socket"], [293, 8, 1, "", "is_symlink"], [293, 8, 1, "", "iterdir"], [293, 8, 1, "", "lchmod"], [293, 8, 1, "", "lstat"], [293, 8, 1, "", "mkdir"], [293, 8, 1, "", "open"], [293, 8, 1, "", "owner"], [293, 8, 1, "", "read_bytes"], [293, 8, 1, "", "read_text"], [293, 8, 1, "", "readlink"], [293, 8, 1, "", "rename"], [293, 8, 1, "", "replace"], [293, 8, 1, "", "resolve"], [293, 8, 1, "", "rglob"], [293, 8, 1, "", "rmdir"], [293, 8, 1, "", "samefile"], [293, 8, 1, "", "stat"], [293, 8, 1, "", "symlink_to"], [293, 8, 1, "", "touch"], [293, 8, 1, "", "unlink"], [293, 8, 1, "", "walk"], [293, 8, 1, "", "write_bytes"], [293, 8, 1, "", "write_text"]], "pathlib.PurePath": [[293, 7, 1, "", "anchor"], [293, 8, 1, "", "as_posix"], [293, 8, 1, "", "as_uri"], [293, 7, 1, "", "drive"], [293, 8, 1, "", "is_absolute"], [293, 8, 1, "", "is_relative_to"], [293, 8, 1, "", "is_reserved"], [293, 8, 1, "", "joinpath"], [293, 8, 1, "", "match"], [293, 7, 1, "", "name"], [293, 7, 1, "", "parent"], [293, 7, 1, "", "parents"], [293, 7, 1, "", "parts"], [293, 8, 1, "", "relative_to"], [293, 7, 1, "", "root"], [293, 7, 1, "", "stem"], [293, 7, 1, "", "suffix"], [293, 7, 1, "", "suffixes"], [293, 8, 1, "", "with_name"], [293, 8, 1, "", "with_segments"], [293, 8, 1, "", "with_stem"], [293, 8, 1, "", "with_suffix"]], "pdb": [[294, 11, 1, "", "Pdb"], [294, 12, 1, "", "pm"], [294, 12, 1, "", "post_mortem"], [294, 12, 1, "", "run"], [294, 12, 1, "", "runcall"], [294, 12, 1, "", "runeval"], [294, 12, 1, "", "set_trace"]], "pdb.Pdb": [[294, 8, 1, "", "run"], [294, 8, 1, "", "runcall"], [294, 8, 1, "", "runeval"], [294, 8, 1, "", "set_trace"]], "pickle": [[296, 9, 1, "", "DEFAULT_PROTOCOL"], [296, 9, 1, "", "HIGHEST_PROTOCOL"], [296, 11, 1, "", "PickleBuffer"], [296, 6, 1, "", "PickleError"], [296, 11, 1, "", "Pickler"], [296, 6, 1, "", "PicklingError"], [296, 11, 1, "", "Unpickler"], [296, 6, 1, "", "UnpicklingError"], [296, 12, 1, "", "dump"], [296, 12, 1, "", "dumps"], [296, 12, 1, "", "load"], [296, 12, 1, "", "loads"]], "pickle.PickleBuffer": [[296, 8, 1, "", "raw"], [296, 8, 1, "", "release"]], "pickle.Pickler": [[296, 7, 1, "", "dispatch_table"], [296, 8, 1, "", "dump"], [296, 7, 1, "", "fast"], [296, 8, 1, "", "persistent_id"], [296, 8, 1, "", "reducer_override"]], "pickle.Unpickler": [[296, 8, 1, "", "find_class"], [296, 8, 1, "", "load"], [296, 8, 1, "", "persistent_load"]], "pickletools": [[297, 12, 1, "", "dis"], [297, 12, 1, "", "genops"], [297, 12, 1, "", "optimize"], [297, 14, 1, "cmdoption-pickletools-a", "--annotate"], [297, 14, 1, "cmdoption-pickletools-l", "--indentlevel"], [297, 14, 1, "cmdoption-pickletools-m", "--memo"], [297, 14, 1, "cmdoption-pickletools-o", "--output"], [297, 14, 1, "cmdoption-pickletools-p", "--preamble"], [297, 14, 1, "cmdoption-pickletools-a", "-a"], [297, 14, 1, "cmdoption-pickletools-l", "-l"], [297, 14, 1, "cmdoption-pickletools-m", "-m"], [297, 14, 1, "cmdoption-pickletools-o", "-o"], [297, 14, 1, "cmdoption-pickletools-p", "-p"]], "pipes": [[298, 11, 1, "", "Template"]], "pipes.Template": [[298, 8, 1, "", "append"], [298, 8, 1, "", "clone"], [298, 8, 1, "", "copy"], [298, 8, 1, "", "debug"], [298, 8, 1, "", "open"], [298, 8, 1, "", "prepend"], [298, 8, 1, "", "reset"]], "pkgutil": [[299, 11, 1, "", "ModuleInfo"], [299, 12, 1, "", "extend_path"], [299, 12, 1, "", "find_loader"], [299, 12, 1, "", "get_data"], [299, 12, 1, "", "get_importer"], [299, 12, 1, "", "get_loader"], [299, 12, 1, "", "iter_importers"], [299, 12, 1, "", "iter_modules"], [299, 12, 1, "", "resolve_name"], [299, 12, 1, "", "walk_packages"]], "platform": [[300, 12, 1, "", "architecture"], [300, 12, 1, "", "freedesktop_os_release"], [300, 12, 1, "", "java_ver"], [300, 12, 1, "", "libc_ver"], [300, 12, 1, "", "mac_ver"], [300, 12, 1, "", "machine"], [300, 12, 1, "", "node"], [300, 12, 1, "", "platform"], [300, 12, 1, "", "processor"], [300, 12, 1, "", "python_branch"], [300, 12, 1, "", "python_build"], [300, 12, 1, "", "python_compiler"], [300, 12, 1, "", "python_implementation"], [300, 12, 1, "", "python_revision"], [300, 12, 1, "", "python_version"], [300, 12, 1, "", "python_version_tuple"], [300, 12, 1, "", "release"], [300, 12, 1, "", "system"], [300, 12, 1, "", "system_alias"], [300, 12, 1, "", "uname"], [300, 12, 1, "", "version"], [300, 12, 1, "", "win32_edition"], [300, 12, 1, "", "win32_is_iot"], [300, 12, 1, "", "win32_ver"]], "plistlib": [[301, 9, 1, "", "FMT_BINARY"], [301, 9, 1, "", "FMT_XML"], [301, 11, 1, "", "UID"], [301, 12, 1, "", "dump"], [301, 12, 1, "", "dumps"], [301, 12, 1, "", "load"], [301, 12, 1, "", "loads"]], "poplib": [[302, 11, 1, "", "POP3"], [302, 11, 1, "", "POP3_SSL"], [302, 6, 1, "", "error_proto"]], "poplib.POP3": [[302, 8, 1, "", "apop"], [302, 8, 1, "", "capa"], [302, 8, 1, "", "dele"], [302, 8, 1, "", "getwelcome"], [302, 8, 1, "", "list"], [302, 8, 1, "", "noop"], [302, 8, 1, "", "pass_"], [302, 8, 1, "", "quit"], [302, 8, 1, "", "retr"], [302, 8, 1, "", "rpop"], [302, 8, 1, "", "rset"], [302, 8, 1, "", "set_debuglevel"], [302, 8, 1, "", "stat"], [302, 8, 1, "", "stls"], [302, 8, 1, "", "top"], [302, 8, 1, "", "uidl"], [302, 8, 1, "", "user"], [302, 8, 1, "", "utf8"]], "posix": [[303, 9, 1, "", "environ"]], "pprint": [[304, 11, 1, "", "PrettyPrinter"], [304, 12, 1, "", "isreadable"], [304, 12, 1, "", "isrecursive"], [304, 12, 1, "", "pformat"], [304, 12, 1, "", "pp"], [304, 12, 1, "", "pprint"], [304, 12, 1, "", "saferepr"]], "pprint.PrettyPrinter": [[304, 8, 1, "", "format"], [304, 8, 1, "", "isreadable"], [304, 8, 1, "", "isrecursive"], [304, 8, 1, "", "pformat"], [304, 8, 1, "", "pprint"]], "profile": [[305, 11, 1, "", "Profile"], [305, 12, 1, "", "run"], [305, 12, 1, "", "runctx"]], "profile.Profile": [[305, 8, 1, "", "create_stats"], [305, 8, 1, "", "disable"], [305, 8, 1, "", "dump_stats"], [305, 8, 1, "", "enable"], [305, 8, 1, "", "print_stats"], [305, 8, 1, "", "run"], [305, 8, 1, "", "runcall"], [305, 8, 1, "", "runctx"]], "property": [[222, 12, 1, "", "deleter"], [222, 12, 1, "", "getter"], [222, 12, 1, "", "setter"]], "pstats": [[305, 11, 1, "", "Stats"]], "pstats.Stats": [[305, 8, 1, "", "add"], [305, 8, 1, "", "dump_stats"], [305, 8, 1, "", "get_stats_profile"], [305, 8, 1, "", "print_callees"], [305, 8, 1, "", "print_callers"], [305, 8, 1, "", "print_stats"], [305, 8, 1, "", "reverse_order"], [305, 8, 1, "", "sort_stats"], [305, 8, 1, "", "strip_dirs"]], "pty": [[306, 12, 1, "", "fork"], [306, 12, 1, "", "openpty"], [306, 12, 1, "", "spawn"]], "pwd": [[307, 12, 1, "", "getpwall"], [307, 12, 1, "", "getpwnam"], [307, 12, 1, "", "getpwuid"]], "py_compile": [[308, 6, 1, "", "PyCompileError"], [308, 11, 1, "", "PycInvalidationMode"], [308, 12, 1, "", "compile"]], "py_compile.PycInvalidationMode": [[308, 7, 1, "", "CHECKED_HASH"], [308, 7, 1, "", "TIMESTAMP"], [308, 7, 1, "", "UNCHECKED_HASH"]], "pyclbr": [[309, 11, 1, "", "Class"], [309, 11, 1, "", "Function"], [309, 12, 1, "", "readmodule"], [309, 12, 1, "", "readmodule_ex"]], "pyclbr.Class": [[309, 7, 1, "", "children"], [309, 7, 1, "", "file"], [309, 7, 1, "", "lineno"], [309, 7, 1, "", "methods"], [309, 7, 1, "", "module"], [309, 7, 1, "", "name"], [309, 7, 1, "", "parent"], [309, 7, 1, "", "super"]], "pyclbr.Function": [[309, 7, 1, "", "children"], [309, 7, 1, "", "file"], [309, 7, 1, "", "is_async"], [309, 7, 1, "", "lineno"], [309, 7, 1, "", "module"], [309, 7, 1, "", "name"], [309, 7, 1, "", "parent"]], "queue": [[313, 6, 1, "", "Empty"], [313, 6, 1, "", "Full"], [313, 11, 1, "", "LifoQueue"], [313, 11, 1, "", "PriorityQueue"], [313, 11, 1, "", "Queue"], [313, 11, 1, "", "SimpleQueue"]], "queue.Queue": [[313, 8, 1, "", "empty"], [313, 8, 1, "", "full"], [313, 8, 1, "", "get"], [313, 8, 1, "", "get_nowait"], [313, 8, 1, "", "join"], [313, 8, 1, "", "put"], [313, 8, 1, "", "put_nowait"], [313, 8, 1, "", "qsize"], [313, 8, 1, "", "task_done"]], "queue.SimpleQueue": [[313, 8, 1, "", "empty"], [313, 8, 1, "", "get"], [313, 8, 1, "", "get_nowait"], [313, 8, 1, "", "put"], [313, 8, 1, "", "put_nowait"], [313, 8, 1, "", "qsize"]], "quopri": [[314, 12, 1, "", "decode"], [314, 12, 1, "", "decodestring"], [314, 12, 1, "", "encode"], [314, 12, 1, "", "encodestring"]], "random": [[315, 11, 1, "", "Random"], [315, 11, 1, "", "SystemRandom"], [315, 12, 1, "", "betavariate"], [315, 12, 1, "", "binomialvariate"], [315, 12, 1, "", "choice"], [315, 12, 1, "", "choices"], [315, 12, 1, "", "expovariate"], [315, 12, 1, "", "gammavariate"], [315, 12, 1, "", "gauss"], [315, 12, 1, "", "getrandbits"], [315, 12, 1, "", "getstate"], [315, 12, 1, "", "lognormvariate"], [315, 12, 1, "", "normalvariate"], [315, 12, 1, "", "paretovariate"], [315, 12, 1, "", "randbytes"], [315, 12, 1, "", "randint"], [315, 12, 1, "", "random"], [315, 12, 1, "", "randrange"], [315, 12, 1, "", "sample"], [315, 12, 1, "", "seed"], [315, 12, 1, "", "setstate"], [315, 12, 1, "", "shuffle"], [315, 12, 1, "", "triangular"], [315, 12, 1, "", "uniform"], [315, 12, 1, "", "vonmisesvariate"], [315, 12, 1, "", "weibullvariate"]], "random.Random": [[315, 8, 1, "", "getrandbits"], [315, 8, 1, "", "getstate"], [315, 8, 1, "", "random"], [315, 8, 1, "", "seed"], [315, 8, 1, "", "setstate"]], "range": [[341, 7, 1, "", "start"], [341, 7, 1, "", "step"], [341, 7, 1, "", "stop"]], "re": [[316, 9, 1, "", "A"], [316, 9, 1, "", "ASCII"], [316, 9, 1, "", "DEBUG"], [316, 9, 1, "", "DOTALL"], [316, 9, 1, "", "I"], [316, 9, 1, "", "IGNORECASE"], [316, 9, 1, "", "L"], [316, 9, 1, "", "LOCALE"], [316, 9, 1, "", "M"], [316, 9, 1, "", "MULTILINE"], [316, 11, 1, "", "Match"], [316, 9, 1, "", "NOFLAG"], [316, 11, 1, "", "Pattern"], [316, 11, 1, "", "RegexFlag"], [316, 9, 1, "", "S"], [316, 9, 1, "", "U"], [316, 9, 1, "", "UNICODE"], [316, 9, 1, "", "VERBOSE"], [316, 9, 1, "", "X"], [316, 12, 1, "", "compile"], [316, 6, 1, "", "error"], [316, 12, 1, "", "escape"], [316, 12, 1, "", "findall"], [316, 12, 1, "", "finditer"], [316, 12, 1, "", "fullmatch"], [316, 12, 1, "", "match"], [316, 12, 1, "", "purge"], [316, 12, 1, "", "search"], [316, 12, 1, "", "split"], [316, 12, 1, "", "sub"], [316, 12, 1, "", "subn"]], "re.Match": [[316, 8, 1, "", "__getitem__"], [316, 8, 1, "", "end"], [316, 7, 1, "", "endpos"], [316, 8, 1, "", "expand"], [316, 8, 1, "", "group"], [316, 8, 1, "", "groupdict"], [316, 8, 1, "", "groups"], [316, 7, 1, "", "lastgroup"], [316, 7, 1, "", "lastindex"], [316, 7, 1, "", "pos"], [316, 7, 1, "", "re"], [316, 8, 1, "", "span"], [316, 8, 1, "", "start"], [316, 7, 1, "", "string"]], "re.Pattern": [[316, 8, 1, "", "findall"], [316, 8, 1, "", "finditer"], [316, 7, 1, "", "flags"], [316, 8, 1, "", "fullmatch"], [316, 7, 1, "", "groupindex"], [316, 7, 1, "", "groups"], [316, 8, 1, "", "match"], [316, 7, 1, "", "pattern"], [316, 8, 1, "", "search"], [316, 8, 1, "", "split"], [316, 8, 1, "", "sub"], [316, 8, 1, "", "subn"]], "re.error": [[316, 7, 1, "", "colno"], [316, 7, 1, "", "lineno"], [316, 7, 1, "", "msg"], [316, 7, 1, "", "pattern"], [316, 7, 1, "", "pos"]], "readline": [[317, 12, 1, "", "add_history"], [317, 12, 1, "", "append_history_file"], [317, 12, 1, "", "clear_history"], [317, 12, 1, "", "get_begidx"], [317, 12, 1, "", "get_completer"], [317, 12, 1, "", "get_completer_delims"], [317, 12, 1, "", "get_completion_type"], [317, 12, 1, "", "get_current_history_length"], [317, 12, 1, "", "get_endidx"], [317, 12, 1, "", "get_history_item"], [317, 12, 1, "", "get_history_length"], [317, 12, 1, "", "get_line_buffer"], [317, 12, 1, "", "insert_text"], [317, 12, 1, "", "parse_and_bind"], [317, 12, 1, "", "read_history_file"], [317, 12, 1, "", "read_init_file"], [317, 12, 1, "", "redisplay"], [317, 12, 1, "", "remove_history_item"], [317, 12, 1, "", "replace_history_item"], [317, 12, 1, "", "set_auto_history"], [317, 12, 1, "", "set_completer"], [317, 12, 1, "", "set_completer_delims"], [317, 12, 1, "", "set_completion_display_matches_hook"], [317, 12, 1, "", "set_history_length"], [317, 12, 1, "", "set_pre_input_hook"], [317, 12, 1, "", "set_startup_hook"], [317, 12, 1, "", "write_history_file"]], "reprlib": [[318, 11, 1, "", "Repr"], [318, 9, 1, "", "aRepr"], [318, 12, 1, "", "recursive_repr"], [318, 12, 1, "", "repr"]], "reprlib.Repr": [[318, 7, 1, "", "fillvalue"], [318, 7, 1, "", "indent"], [318, 7, 1, "", "maxarray"], [318, 7, 1, "", "maxdeque"], [318, 7, 1, "", "maxdict"], [318, 7, 1, "", "maxfrozenset"], [318, 7, 1, "", "maxlevel"], [318, 7, 1, "", "maxlist"], [318, 7, 1, "", "maxlong"], [318, 7, 1, "", "maxother"], [318, 7, 1, "", "maxset"], [318, 7, 1, "", "maxstring"], [318, 7, 1, "", "maxtuple"], [318, 8, 1, "", "repr"], [318, 8, 1, "", "repr1"]], "resource": [[319, 9, 1, "", "RLIMIT_AS"], [319, 9, 1, "", "RLIMIT_CORE"], [319, 9, 1, "", "RLIMIT_CPU"], [319, 9, 1, "", "RLIMIT_DATA"], [319, 9, 1, "", "RLIMIT_FSIZE"], [319, 9, 1, "", "RLIMIT_KQUEUES"], [319, 9, 1, "", "RLIMIT_MEMLOCK"], [319, 9, 1, "", "RLIMIT_MSGQUEUE"], [319, 9, 1, "", "RLIMIT_NICE"], [319, 9, 1, "", "RLIMIT_NOFILE"], [319, 9, 1, "", "RLIMIT_NPROC"], [319, 9, 1, "", "RLIMIT_NPTS"], [319, 9, 1, "", "RLIMIT_OFILE"], [319, 9, 1, "", "RLIMIT_RSS"], [319, 9, 1, "", "RLIMIT_RTPRIO"], [319, 9, 1, "", "RLIMIT_RTTIME"], [319, 9, 1, "", "RLIMIT_SBSIZE"], [319, 9, 1, "", "RLIMIT_SIGPENDING"], [319, 9, 1, "", "RLIMIT_STACK"], [319, 9, 1, "", "RLIMIT_SWAP"], [319, 9, 1, "", "RLIMIT_VMEM"], [319, 9, 1, "", "RLIM_INFINITY"], [319, 9, 1, "", "RUSAGE_BOTH"], [319, 9, 1, "", "RUSAGE_CHILDREN"], [319, 9, 1, "", "RUSAGE_SELF"], [319, 9, 1, "", "RUSAGE_THREAD"], [319, 6, 1, "", "error"], [319, 12, 1, "", "getpagesize"], [319, 12, 1, "", "getrlimit"], [319, 12, 1, "", "getrusage"], [319, 12, 1, "", "prlimit"], [319, 12, 1, "", "setrlimit"]], "rlcompleter": [[320, 11, 1, "", "Completer"]], "rlcompleter.Completer": [[320, 8, 1, "", "complete"]], "runpy": [[321, 12, 1, "", "run_module"], [321, 12, 1, "", "run_path"]], "sched": [[322, 11, 1, "", "scheduler"]], "sched.scheduler": [[322, 8, 1, "", "cancel"], [322, 8, 1, "", "empty"], [322, 8, 1, "", "enter"], [322, 8, 1, "", "enterabs"], [322, 7, 1, "", "queue"], [322, 8, 1, "", "run"]], "secrets": [[323, 11, 1, "", "SystemRandom"], [323, 12, 1, "", "choice"], [323, 12, 1, "", "compare_digest"], [323, 12, 1, "", "randbelow"], [323, 12, 1, "", "randbits"], [323, 12, 1, "", "token_bytes"], [323, 12, 1, "", "token_hex"], [323, 12, 1, "", "token_urlsafe"]], "select": [[325, 7, 1, "", "PIPE_BUF"], [325, 12, 1, "", "devpoll"], [325, 12, 1, "", "epoll"], [325, 6, 1, "", "error"], [325, 12, 1, "", "kevent"], [325, 12, 1, "", "kqueue"], [325, 12, 1, "", "poll"], [325, 12, 1, "", "select"]], "select.devpoll": [[325, 8, 1, "", "close"], [325, 7, 1, "", "closed"], [325, 8, 1, "", "fileno"], [325, 8, 1, "", "modify"], [325, 8, 1, "", "poll"], [325, 8, 1, "", "register"], [325, 8, 1, "", "unregister"]], "select.epoll": [[325, 8, 1, "", "close"], [325, 7, 1, "", "closed"], [325, 8, 1, "", "fileno"], [325, 8, 1, "", "fromfd"], [325, 8, 1, "", "modify"], [325, 8, 1, "", "poll"], [325, 8, 1, "", "register"], [325, 8, 1, "", "unregister"]], "select.kevent": [[325, 7, 1, "", "data"], [325, 7, 1, "", "fflags"], [325, 7, 1, "", "filter"], [325, 7, 1, "", "flags"], [325, 7, 1, "", "ident"], [325, 7, 1, "", "udata"]], "select.kqueue": [[325, 8, 1, "", "close"], [325, 7, 1, "", "closed"], [325, 8, 1, "", "control"], [325, 8, 1, "", "fileno"], [325, 8, 1, "", "fromfd"]], "select.poll": [[325, 8, 1, "", "modify"], [325, 8, 1, "", "poll"], [325, 8, 1, "", "register"], [325, 8, 1, "", "unregister"]], "selectors": [[326, 11, 1, "", "BaseSelector"], [326, 11, 1, "", "DefaultSelector"], [326, 11, 1, "", "DevpollSelector"], [326, 9, 1, "", "EVENT_READ"], [326, 9, 1, "", "EVENT_WRITE"], [326, 11, 1, "", "EpollSelector"], [326, 11, 1, "", "KqueueSelector"], [326, 11, 1, "", "PollSelector"], [326, 11, 1, "", "SelectSelector"], [326, 11, 1, "", "SelectorKey"]], "selectors.BaseSelector": [[326, 8, 1, "", "close"], [326, 8, 1, "", "get_key"], [326, 8, 1, "", "get_map"], [326, 8, 1, "", "modify"], [326, 8, 1, "", "register"], [326, 8, 1, "", "select"], [326, 8, 1, "", "unregister"]], "selectors.DevpollSelector": [[326, 8, 1, "", "fileno"]], "selectors.EpollSelector": [[326, 8, 1, "", "fileno"]], "selectors.KqueueSelector": [[326, 8, 1, "", "fileno"]], "selectors.SelectorKey": [[326, 7, 1, "", "data"], [326, 7, 1, "", "events"], [326, 7, 1, "", "fd"], [326, 7, 1, "", "fileobj"]], "shelve": [[327, 11, 1, "", "BsdDbShelf"], [327, 11, 1, "", "DbfilenameShelf"], [327, 11, 1, "", "Shelf"], [327, 12, 1, "", "open"]], "shelve.Shelf": [[327, 8, 1, "", "close"], [327, 8, 1, "", "sync"]], "shlex": [[328, 12, 1, "", "join"], [328, 12, 1, "", "quote"], [328, 11, 1, "", "shlex"], [328, 12, 1, "", "split"]], "shlex.shlex": [[328, 7, 1, "", "commenters"], [328, 7, 1, "", "debug"], [328, 7, 1, "", "eof"], [328, 8, 1, "", "error_leader"], [328, 7, 1, "", "escape"], [328, 7, 1, "", "escapedquotes"], [328, 8, 1, "", "get_token"], [328, 7, 1, "", "infile"], [328, 7, 1, "", "instream"], [328, 7, 1, "", "lineno"], [328, 8, 1, "", "pop_source"], [328, 7, 1, "", "punctuation_chars"], [328, 8, 1, "", "push_source"], [328, 8, 1, "", "push_token"], [328, 7, 1, "", "quotes"], [328, 8, 1, "", "read_token"], [328, 7, 1, "", "source"], [328, 8, 1, "", "sourcehook"], [328, 7, 1, "", "token"], [328, 7, 1, "", "whitespace"], [328, 7, 1, "", "whitespace_split"], [328, 7, 1, "", "wordchars"]], "shutil": [[329, 6, 1, "", "Error"], [329, 6, 1, "", "SameFileError"], [329, 12, 1, "", "chown"], [329, 12, 1, "", "copy"], [329, 12, 1, "", "copy2"], [329, 12, 1, "", "copyfile"], [329, 12, 1, "", "copyfileobj"], [329, 12, 1, "", "copymode"], [329, 12, 1, "", "copystat"], [329, 12, 1, "", "copytree"], [329, 12, 1, "", "disk_usage"], [329, 12, 1, "", "get_archive_formats"], [329, 12, 1, "", "get_terminal_size"], [329, 12, 1, "", "get_unpack_formats"], [329, 12, 1, "", "ignore_patterns"], [329, 12, 1, "", "make_archive"], [329, 12, 1, "", "move"], [329, 12, 1, "", "register_archive_format"], [329, 12, 1, "", "register_unpack_format"], [329, 12, 1, "", "rmtree"], [329, 12, 1, "", "unpack_archive"], [329, 12, 1, "", "unregister_archive_format"], [329, 12, 1, "", "unregister_unpack_format"], [329, 12, 1, "", "which"]], "shutil.rmtree": [[329, 7, 1, "", "avoids_symlink_attacks"]], "signal": [[330, 9, 1, "", "CTRL_BREAK_EVENT"], [330, 9, 1, "", "CTRL_C_EVENT"], [330, 11, 1, "", "Handlers"], [330, 9, 1, "", "ITIMER_PROF"], [330, 9, 1, "", "ITIMER_REAL"], [330, 9, 1, "", "ITIMER_VIRTUAL"], [330, 6, 1, "", "ItimerError"], [330, 9, 1, "", "NSIG"], [330, 9, 1, "", "SIGABRT"], [330, 9, 1, "", "SIGALRM"], [330, 9, 1, "", "SIGBREAK"], [330, 9, 1, "", "SIGBUS"], [330, 9, 1, "", "SIGCHLD"], [330, 9, 1, "", "SIGCLD"], [330, 9, 1, "", "SIGCONT"], [330, 9, 1, "", "SIGFPE"], [330, 9, 1, "", "SIGHUP"], [330, 9, 1, "", "SIGILL"], [330, 9, 1, "", "SIGINT"], [330, 9, 1, "", "SIGKILL"], [330, 9, 1, "", "SIGPIPE"], [330, 9, 1, "", "SIGSEGV"], [330, 9, 1, "", "SIGSTKFLT"], [330, 9, 1, "", "SIGTERM"], [330, 9, 1, "", "SIGUSR1"], [330, 9, 1, "", "SIGUSR2"], [330, 9, 1, "", "SIGWINCH"], [330, 9, 1, "", "SIG_BLOCK"], [330, 9, 1, "", "SIG_DFL"], [330, 9, 1, "", "SIG_IGN"], [330, 9, 1, "", "SIG_SETMASK"], [330, 9, 1, "", "SIG_UNBLOCK"], [330, 11, 1, "", "Sigmasks"], [330, 11, 1, "", "Signals"], [330, 12, 1, "", "alarm"], [330, 12, 1, "", "getitimer"], [330, 12, 1, "", "getsignal"], [330, 12, 1, "", "pause"], [330, 12, 1, "", "pidfd_send_signal"], [330, 12, 1, "", "pthread_kill"], [330, 12, 1, "", "pthread_sigmask"], [330, 12, 1, "", "raise_signal"], [330, 12, 1, "", "set_wakeup_fd"], [330, 12, 1, "", "setitimer"], [330, 12, 1, "", "siginterrupt"], [330, 12, 1, "", "signal"], [330, 12, 1, "", "sigpending"], [330, 12, 1, "", "sigtimedwait"], [330, 12, 1, "", "sigwait"], [330, 12, 1, "", "sigwaitinfo"], [330, 12, 1, "", "strsignal"], [330, 12, 1, "", "valid_signals"]], "site": [[331, 9, 1, "", "ENABLE_USER_SITE"], [331, 9, 1, "", "PREFIXES"], [331, 9, 1, "", "USER_BASE"], [331, 9, 1, "", "USER_SITE"], [331, 12, 1, "", "addsitedir"], [331, 12, 1, "", "getsitepackages"], [331, 12, 1, "", "getuserbase"], [331, 12, 1, "", "getusersitepackages"], [331, 12, 1, "", "main"], [331, 14, 1, "cmdoption-site-user-base", "--user-base"], [331, 14, 1, "cmdoption-site-user-site", "--user-site"]], "slice": [[425, 8, 1, "", "indices"], [222, 7, 1, "", "start"], [222, 7, 1, "", "step"], [222, 7, 1, "", "stop"]], "smtplib": [[332, 11, 1, "", "LMTP"], [332, 11, 1, "", "SMTP"], [332, 6, 1, "", "SMTPAuthenticationError"], [332, 6, 1, "", "SMTPConnectError"], [332, 6, 1, "", "SMTPDataError"], [332, 6, 1, "", "SMTPException"], [332, 6, 1, "", "SMTPHeloError"], [332, 6, 1, "", "SMTPNotSupportedError"], [332, 6, 1, "", "SMTPRecipientsRefused"], [332, 6, 1, "", "SMTPResponseException"], [332, 6, 1, "", "SMTPSenderRefused"], [332, 6, 1, "", "SMTPServerDisconnected"], [332, 11, 1, "", "SMTP_SSL"]], "smtplib.SMTP": [[332, 8, 1, "", "auth"], [332, 8, 1, "", "connect"], [332, 8, 1, "", "docmd"], [332, 8, 1, "", "ehlo"], [332, 8, 1, "", "ehlo_or_helo_if_needed"], [332, 8, 1, "", "has_extn"], [332, 8, 1, "", "helo"], [332, 8, 1, "", "login"], [332, 8, 1, "", "quit"], [332, 8, 1, "", "send_message"], [332, 8, 1, "", "sendmail"], [332, 8, 1, "", "set_debuglevel"], [332, 8, 1, "", "starttls"], [332, 8, 1, "", "verify"]], "sndhdr": [[333, 9, 1, "", "tests"], [333, 12, 1, "", "what"], [333, 12, 1, "", "whathdr"]], "socket": [[334, 9, 1, "", "AF_ALG"], [334, 9, 1, "", "AF_CAN"], [334, 9, 1, "", "AF_DIVERT"], [334, 9, 1, "", "AF_HYPERV"], [334, 9, 1, "", "AF_INET"], [334, 9, 1, "", "AF_INET6"], [334, 9, 1, "", "AF_LINK"], [334, 9, 1, "", "AF_PACKET"], [334, 9, 1, "", "AF_QIPCRTR"], [334, 9, 1, "", "AF_RDS"], [334, 9, 1, "", "AF_UNIX"], [334, 9, 1, "", "AF_UNSPEC"], [334, 9, 1, "", "AF_VSOCK"], [334, 9, 1, "", "BDADDR_ANY"], [334, 9, 1, "", "BDADDR_LOCAL"], [334, 9, 1, "", "CAN_BCM"], [334, 9, 1, "", "CAN_ISOTP"], [334, 9, 1, "", "CAN_J1939"], [334, 9, 1, "", "CAN_RAW_FD_FRAMES"], [334, 9, 1, "", "CAN_RAW_JOIN_FILTERS"], [334, 12, 1, "", "CMSG_LEN"], [334, 12, 1, "", "CMSG_SPACE"], [334, 9, 1, "", "ETHERTYPE_ARP"], [334, 9, 1, "", "ETHERTYPE_IP"], [334, 9, 1, "", "ETHERTYPE_IPV6"], [334, 9, 1, "", "ETHERTYPE_VLAN"], [334, 9, 1, "", "ETH_P_ALL"], [334, 9, 1, "", "HCI_DATA_DIR"], [334, 9, 1, "", "HCI_FILTER"], [334, 9, 1, "", "HCI_TIME_STAMP"], [334, 9, 1, "", "HVSOCKET_ADDRESS_FLAG_PASSTHRU"], [334, 9, 1, "", "HVSOCKET_CONNECTED_SUSPEND"], [334, 9, 1, "", "HVSOCKET_CONNECT_TIMEOUT"], [334, 9, 1, "", "HVSOCKET_CONNECT_TIMEOUT_MAX"], [334, 9, 1, "", "HV_GUID_BROADCAST"], [334, 9, 1, "", "HV_GUID_CHILDREN"], [334, 9, 1, "", "HV_GUID_LOOPBACK"], [334, 9, 1, "", "HV_GUID_PARENT"], [334, 9, 1, "", "HV_GUID_WILDCARD"], [334, 9, 1, "", "HV_GUID_ZERO"], [334, 9, 1, "", "HV_PROTOCOL_RAW"], [334, 9, 1, "", "IOCTL_VM_SOCKETS_GET_LOCAL_CID"], [334, 9, 1, "", "LOCAL_CREDS"], [334, 9, 1, "", "LOCAL_CREDS_PERSISTENT"], [334, 9, 1, "", "PF_CAN"], [334, 9, 1, "", "PF_DIVERT"], [334, 9, 1, "", "PF_PACKET"], [334, 9, 1, "", "PF_RDS"], [334, 9, 1, "", "SCM_CREDS2"], [334, 9, 1, "", "SIO_KEEPALIVE_VALS"], [334, 9, 1, "", "SIO_LOOPBACK_FAST_PATH"], [334, 9, 1, "", "SIO_RCVALL"], [334, 9, 1, "", "SOCK_CLOEXEC"], [334, 9, 1, "", "SOCK_DGRAM"], [334, 9, 1, "", "SOCK_NONBLOCK"], [334, 9, 1, "", "SOCK_RAW"], [334, 9, 1, "", "SOCK_RDM"], [334, 9, 1, "", "SOCK_SEQPACKET"], [334, 9, 1, "", "SOCK_STREAM"], [334, 9, 1, "", "SOL_ALG"], [334, 9, 1, "", "SOL_RDS"], [334, 9, 1, "", "SOMAXCONN"], [334, 9, 1, "", "SO_INCOMING_CPU"], [334, 9, 1, "", "SocketType"], [334, 12, 1, "", "close"], [334, 12, 1, "", "create_connection"], [334, 12, 1, "", "create_server"], [334, 6, 1, "", "error"], [334, 12, 1, "", "fromfd"], [334, 12, 1, "", "fromshare"], [334, 6, 1, "", "gaierror"], [334, 12, 1, "", "getaddrinfo"], [334, 12, 1, "", "getdefaulttimeout"], [334, 12, 1, "", "getfqdn"], [334, 12, 1, "", "gethostbyaddr"], [334, 12, 1, "", "gethostbyname"], [334, 12, 1, "", "gethostbyname_ex"], [334, 12, 1, "", "gethostname"], [334, 12, 1, "", "getnameinfo"], [334, 12, 1, "", "getprotobyname"], [334, 12, 1, "", "getservbyname"], [334, 12, 1, "", "getservbyport"], [334, 12, 1, "", "has_dualstack_ipv6"], [334, 9, 1, "", "has_ipv6"], [334, 6, 1, "", "herror"], [334, 12, 1, "", "htonl"], [334, 12, 1, "", "htons"], [334, 12, 1, "", "if_indextoname"], [334, 12, 1, "", "if_nameindex"], [334, 12, 1, "", "if_nametoindex"], [334, 12, 1, "", "inet_aton"], [334, 12, 1, "", "inet_ntoa"], [334, 12, 1, "", "inet_ntop"], [334, 12, 1, "", "inet_pton"], [334, 12, 1, "", "ntohl"], [334, 12, 1, "", "ntohs"], [334, 12, 1, "", "recv_fds"], [334, 12, 1, "", "send_fds"], [334, 12, 1, "", "setdefaulttimeout"], [334, 12, 1, "", "sethostname"], [334, 11, 1, "", "socket"], [334, 12, 1, "", "socketpair"], [334, 6, 1, "", "timeout"]], "socket.socket": [[334, 8, 1, "", "accept"], [334, 8, 1, "", "bind"], [334, 8, 1, "", "close"], [334, 8, 1, "", "connect"], [334, 8, 1, "", "connect_ex"], [334, 8, 1, "", "detach"], [334, 8, 1, "", "dup"], [334, 7, 1, "", "family"], [334, 8, 1, "", "fileno"], [334, 8, 1, "", "get_inheritable"], [334, 8, 1, "", "getblocking"], [334, 8, 1, "", "getpeername"], [334, 8, 1, "", "getsockname"], [334, 8, 1, "", "getsockopt"], [334, 8, 1, "", "gettimeout"], [334, 8, 1, "", "ioctl"], [334, 8, 1, "", "listen"], [334, 8, 1, "", "makefile"], [334, 7, 1, "", "proto"], [334, 8, 1, "", "recv"], [334, 8, 1, "", "recv_into"], [334, 8, 1, "", "recvfrom"], [334, 8, 1, "", "recvfrom_into"], [334, 8, 1, "", "recvmsg"], [334, 8, 1, "", "recvmsg_into"], [334, 8, 1, "", "send"], [334, 8, 1, "", "sendall"], [334, 8, 1, "", "sendfile"], [334, 8, 1, "", "sendmsg"], [334, 8, 1, "", "sendmsg_afalg"], [334, 8, 1, "", "sendto"], [334, 8, 1, "", "set_inheritable"], [334, 8, 1, "", "setblocking"], [334, 8, 1, "", "setsockopt"], [334, 8, 1, "", "settimeout"], [334, 8, 1, "", "share"], [334, 8, 1, "", "shutdown"], [334, 7, 1, "", "type"]], "socketserver": [[335, 11, 1, "", "BaseRequestHandler"], [335, 11, 1, "", "BaseServer"], [335, 11, 1, "", "DatagramRequestHandler"], [335, 11, 1, "", "ForkingMixIn"], [335, 11, 1, "", "ForkingTCPServer"], [335, 11, 1, "", "ForkingUDPServer"], [335, 11, 1, "", "ForkingUnixDatagramServer"], [335, 11, 1, "", "ForkingUnixStreamServer"], [335, 11, 1, "", "StreamRequestHandler"], [335, 11, 1, "", "TCPServer"], [335, 11, 1, "", "ThreadingMixIn"], [335, 11, 1, "", "ThreadingTCPServer"], [335, 11, 1, "", "ThreadingUDPServer"], [335, 11, 1, "", "ThreadingUnixDatagramServer"], [335, 11, 1, "", "ThreadingUnixStreamServer"], [335, 11, 1, "", "UDPServer"], [335, 11, 1, "", "UnixDatagramServer"], [335, 11, 1, "", "UnixStreamServer"]], "socketserver.BaseRequestHandler": [[335, 7, 1, "", "client_address"], [335, 8, 1, "", "finish"], [335, 8, 1, "", "handle"], [335, 7, 1, "", "request"], [335, 7, 1, "", "server"], [335, 8, 1, "", "setup"]], "socketserver.BaseServer": [[335, 7, 1, "", "RequestHandlerClass"], [335, 7, 1, "", "address_family"], [335, 7, 1, "", "allow_reuse_address"], [335, 8, 1, "", "fileno"], [335, 8, 1, "", "finish_request"], [335, 8, 1, "", "get_request"], [335, 8, 1, "", "handle_error"], [335, 8, 1, "", "handle_request"], [335, 8, 1, "", "handle_timeout"], [335, 8, 1, "", "process_request"], [335, 7, 1, "", "request_queue_size"], [335, 8, 1, "", "serve_forever"], [335, 8, 1, "", "server_activate"], [335, 7, 1, "", "server_address"], [335, 8, 1, "", "server_bind"], [335, 8, 1, "", "server_close"], [335, 8, 1, "", "service_actions"], [335, 8, 1, "", "shutdown"], [335, 7, 1, "", "socket"], [335, 7, 1, "", "socket_type"], [335, 7, 1, "", "timeout"], [335, 8, 1, "", "verify_request"]], "socketserver.DatagramRequestHandler": [[335, 7, 1, "", "rfile"], [335, 7, 1, "", "wfile"]], "socketserver.ThreadingMixIn": [[335, 7, 1, "", "block_on_close"], [335, 7, 1, "", "daemon_threads"]], "spwd": [[336, 12, 1, "", "getspall"], [336, 12, 1, "", "getspnam"]], "sqlite3": [[337, 11, 1, "", "Blob"], [337, 11, 1, "", "Connection"], [337, 11, 1, "", "Cursor"], [337, 6, 1, "", "DataError"], [337, 6, 1, "", "DatabaseError"], [337, 6, 1, "", "Error"], [337, 6, 1, "", "IntegrityError"], [337, 6, 1, "", "InterfaceError"], [337, 6, 1, "", "InternalError"], [337, 9, 1, "", "LEGACY_TRANSACTION_CONTROL"], [337, 6, 1, "", "NotSupportedError"], [337, 6, 1, "", "OperationalError"], [337, 9, 1, "", "PARSE_COLNAMES"], [337, 9, 1, "", "PARSE_DECLTYPES"], [337, 11, 1, "", "PrepareProtocol"], [337, 6, 1, "", "ProgrammingError"], [337, 11, 1, "", "Row"], [337, 9, 1, "", "SQLITE_DBCONFIG_DEFENSIVE"], [337, 9, 1, "", "SQLITE_DBCONFIG_DQS_DDL"], [337, 9, 1, "", "SQLITE_DBCONFIG_DQS_DML"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_FKEY"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_QPSG"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_TRIGGER"], [337, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_VIEW"], [337, 9, 1, "", "SQLITE_DBCONFIG_LEGACY_ALTER_TABLE"], [337, 9, 1, "", "SQLITE_DBCONFIG_LEGACY_FILE_FORMAT"], [337, 9, 1, "", "SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE"], [337, 9, 1, "", "SQLITE_DBCONFIG_RESET_DATABASE"], [337, 9, 1, "", "SQLITE_DBCONFIG_TRIGGER_EQP"], [337, 9, 1, "", "SQLITE_DBCONFIG_TRUSTED_SCHEMA"], [337, 9, 1, "", "SQLITE_DBCONFIG_WRITABLE_SCHEMA"], [337, 9, 1, "", "SQLITE_DENY"], [337, 9, 1, "", "SQLITE_IGNORE"], [337, 9, 1, "", "SQLITE_OK"], [337, 6, 1, "", "Warning"], [337, 9, 1, "", "apilevel"], [337, 12, 1, "", "complete_statement"], [337, 12, 1, "", "connect"], [337, 12, 1, "", "enable_callback_tracebacks"], [337, 9, 1, "", "paramstyle"], [337, 12, 1, "", "register_adapter"], [337, 12, 1, "", "register_converter"], [337, 9, 1, "", "sqlite_version"], [337, 9, 1, "", "sqlite_version_info"], [337, 9, 1, "", "threadsafety"], [337, 9, 1, "", "version"], [337, 9, 1, "", "version_info"]], "sqlite3.Blob": [[337, 8, 1, "", "close"], [337, 8, 1, "", "read"], [337, 8, 1, "", "seek"], [337, 8, 1, "", "tell"], [337, 8, 1, "", "write"]], "sqlite3.Connection": [[337, 7, 1, "", "autocommit"], [337, 8, 1, "", "backup"], [337, 8, 1, "", "blobopen"], [337, 8, 1, "", "close"], [337, 8, 1, "", "commit"], [337, 8, 1, "", "create_aggregate"], [337, 8, 1, "", "create_collation"], [337, 8, 1, "", "create_function"], [337, 8, 1, "", "create_window_function"], [337, 8, 1, "", "cursor"], [337, 8, 1, "", "deserialize"], [337, 8, 1, "", "enable_load_extension"], [337, 8, 1, "", "execute"], [337, 8, 1, "", "executemany"], [337, 8, 1, "", "executescript"], [337, 8, 1, "", "getconfig"], [337, 8, 1, "", "getlimit"], [337, 7, 1, "", "in_transaction"], [337, 8, 1, "", "interrupt"], [337, 7, 1, "", "isolation_level"], [337, 8, 1, "", "iterdump"], [337, 8, 1, "", "load_extension"], [337, 8, 1, "", "rollback"], [337, 7, 1, "", "row_factory"], [337, 8, 1, "", "serialize"], [337, 8, 1, "", "set_authorizer"], [337, 8, 1, "", "set_progress_handler"], [337, 8, 1, "", "set_trace_callback"], [337, 8, 1, "", "setconfig"], [337, 8, 1, "", "setlimit"], [337, 7, 1, "", "text_factory"], [337, 7, 1, "", "total_changes"]], "sqlite3.Cursor": [[337, 7, 1, "", "arraysize"], [337, 8, 1, "", "close"], [337, 7, 1, "", "connection"], [337, 7, 1, "", "description"], [337, 8, 1, "", "execute"], [337, 8, 1, "", "executemany"], [337, 8, 1, "", "executescript"], [337, 8, 1, "", "fetchall"], [337, 8, 1, "", "fetchmany"], [337, 8, 1, "", "fetchone"], [337, 7, 1, "", "lastrowid"], [337, 7, 1, "", "row_factory"], [337, 7, 1, "", "rowcount"], [337, 8, 1, "", "setinputsizes"], [337, 8, 1, "", "setoutputsize"]], "sqlite3.Error": [[337, 7, 1, "", "sqlite_errorcode"], [337, 7, 1, "", "sqlite_errorname"]], "sqlite3.Row": [[337, 8, 1, "", "keys"]], "ssl": [[338, 9, 1, "", "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"], [338, 9, 1, "", "ALERT_DESCRIPTION_INTERNAL_ERROR"], [338, 11, 1, "", "AlertDescription"], [338, 9, 1, "", "CERT_NONE"], [338, 9, 1, "", "CERT_OPTIONAL"], [338, 9, 1, "", "CERT_REQUIRED"], [338, 9, 1, "", "CHANNEL_BINDING_TYPES"], [338, 6, 1, "", "CertificateError"], [338, 12, 1, "", "DER_cert_to_PEM_cert"], [338, 9, 1, "", "HAS_ALPN"], [338, 9, 1, "", "HAS_ECDH"], [338, 9, 1, "", "HAS_NEVER_CHECK_COMMON_NAME"], [338, 9, 1, "", "HAS_NPN"], [338, 9, 1, "", "HAS_SNI"], [338, 9, 1, "", "HAS_SSLv2"], [338, 9, 1, "", "HAS_SSLv3"], [338, 9, 1, "", "HAS_TLSv1"], [338, 9, 1, "", "HAS_TLSv1_1"], [338, 9, 1, "", "HAS_TLSv1_2"], [338, 9, 1, "", "HAS_TLSv1_3"], [338, 11, 1, "", "MemoryBIO"], [338, 9, 1, "", "OPENSSL_VERSION"], [338, 9, 1, "", "OPENSSL_VERSION_INFO"], [338, 9, 1, "", "OPENSSL_VERSION_NUMBER"], [338, 9, 1, "", "OP_ALL"], [338, 9, 1, "", "OP_CIPHER_SERVER_PREFERENCE"], [338, 9, 1, "", "OP_ENABLE_KTLS"], [338, 9, 1, "", "OP_ENABLE_MIDDLEBOX_COMPAT"], [338, 9, 1, "", "OP_IGNORE_UNEXPECTED_EOF"], [338, 9, 1, "", "OP_LEGACY_SERVER_CONNECT"], [338, 9, 1, "", "OP_NO_COMPRESSION"], [338, 9, 1, "", "OP_NO_RENEGOTIATION"], [338, 9, 1, "", "OP_NO_SSLv2"], [338, 9, 1, "", "OP_NO_SSLv3"], [338, 9, 1, "", "OP_NO_TICKET"], [338, 9, 1, "", "OP_NO_TLSv1"], [338, 9, 1, "", "OP_NO_TLSv1_1"], [338, 9, 1, "", "OP_NO_TLSv1_2"], [338, 9, 1, "", "OP_NO_TLSv1_3"], [338, 9, 1, "", "OP_SINGLE_DH_USE"], [338, 9, 1, "", "OP_SINGLE_ECDH_USE"], [338, 11, 1, "", "Options"], [338, 12, 1, "", "PEM_cert_to_DER_cert"], [338, 9, 1, "", "PROTOCOL_SSLv23"], [338, 9, 1, "", "PROTOCOL_SSLv3"], [338, 9, 1, "", "PROTOCOL_TLS"], [338, 9, 1, "", "PROTOCOL_TLS_CLIENT"], [338, 9, 1, "", "PROTOCOL_TLS_SERVER"], [338, 9, 1, "", "PROTOCOL_TLSv1"], [338, 9, 1, "", "PROTOCOL_TLSv1_1"], [338, 9, 1, "", "PROTOCOL_TLSv1_2"], [338, 12, 1, "", "RAND_add"], [338, 12, 1, "", "RAND_bytes"], [338, 12, 1, "", "RAND_status"], [338, 6, 1, "", "SSLCertVerificationError"], [338, 11, 1, "", "SSLContext"], [338, 6, 1, "", "SSLEOFError"], [338, 6, 1, "", "SSLError"], [338, 11, 1, "", "SSLErrorNumber"], [338, 11, 1, "", "SSLObject"], [338, 11, 1, "", "SSLSession"], [338, 11, 1, "", "SSLSocket"], [338, 6, 1, "", "SSLSyscallError"], [338, 6, 1, "", "SSLWantReadError"], [338, 6, 1, "", "SSLWantWriteError"], [338, 6, 1, "", "SSLZeroReturnError"], [338, 11, 1, "", "TLSVersion"], [338, 9, 1, "", "VERIFY_ALLOW_PROXY_CERTS"], [338, 9, 1, "", "VERIFY_CRL_CHECK_CHAIN"], [338, 9, 1, "", "VERIFY_CRL_CHECK_LEAF"], [338, 9, 1, "", "VERIFY_DEFAULT"], [338, 9, 1, "", "VERIFY_X509_PARTIAL_CHAIN"], [338, 9, 1, "", "VERIFY_X509_STRICT"], [338, 9, 1, "", "VERIFY_X509_TRUSTED_FIRST"], [338, 11, 1, "", "VerifyFlags"], [338, 11, 1, "", "VerifyMode"], [338, 12, 1, "", "cert_time_to_seconds"], [338, 12, 1, "", "create_default_context"], [338, 12, 1, "", "enum_certificates"], [338, 12, 1, "", "enum_crls"], [338, 12, 1, "", "get_default_verify_paths"], [338, 12, 1, "", "get_server_certificate"]], "ssl.MemoryBIO": [[338, 7, 1, "", "eof"], [338, 7, 1, "", "pending"], [338, 8, 1, "", "read"], [338, 8, 1, "", "write"], [338, 8, 1, "", "write_eof"]], "ssl.Purpose": [[338, 9, 1, "", "CLIENT_AUTH"], [338, 9, 1, "", "SERVER_AUTH"]], "ssl.SSLCertVerificationError": [[338, 7, 1, "", "verify_code"], [338, 7, 1, "", "verify_message"]], "ssl.SSLContext": [[338, 8, 1, "", "cert_store_stats"], [338, 7, 1, "", "check_hostname"], [338, 8, 1, "", "get_ca_certs"], [338, 8, 1, "", "get_ciphers"], [338, 7, 1, "", "hostname_checks_common_name"], [338, 7, 1, "", "keylog_filename"], [338, 8, 1, "", "load_cert_chain"], [338, 8, 1, "", "load_default_certs"], [338, 8, 1, "", "load_dh_params"], [338, 8, 1, "", "load_verify_locations"], [338, 7, 1, "", "maximum_version"], [338, 7, 1, "", "minimum_version"], [338, 7, 1, "", "num_tickets"], [338, 7, 1, "", "options"], [338, 7, 1, "", "post_handshake_auth"], [338, 7, 1, "", "protocol"], [338, 7, 1, "", "security_level"], [338, 8, 1, "", "session_stats"], [338, 8, 1, "", "set_alpn_protocols"], [338, 8, 1, "", "set_ciphers"], [338, 8, 1, "", "set_default_verify_paths"], [338, 8, 1, "", "set_ecdh_curve"], [338, 8, 1, "", "set_npn_protocols"], [338, 7, 1, "", "set_servername_callback"], [338, 7, 1, "", "sni_callback"], [338, 7, 1, "", "sslobject_class"], [338, 7, 1, "", "sslsocket_class"], [338, 7, 1, "", "verify_flags"], [338, 7, 1, "", "verify_mode"], [338, 8, 1, "", "wrap_bio"], [338, 8, 1, "", "wrap_socket"]], "ssl.SSLError": [[338, 7, 1, "", "library"], [338, 7, 1, "", "reason"]], "ssl.SSLSession": [[338, 7, 1, "", "has_ticket"], [338, 7, 1, "", "id"], [338, 7, 1, "", "ticket_lifetime_hint"], [338, 7, 1, "", "time"], [338, 7, 1, "", "timeout"]], "ssl.SSLSocket": [[338, 8, 1, "", "cipher"], [338, 8, 1, "", "compression"], [338, 7, 1, "", "context"], [338, 8, 1, "", "do_handshake"], [338, 8, 1, "", "get_channel_binding"], [338, 8, 1, "", "getpeercert"], [338, 8, 1, "", "pending"], [338, 8, 1, "", "read"], [338, 8, 1, "", "selected_alpn_protocol"], [338, 8, 1, "", "selected_npn_protocol"], [338, 7, 1, "", "server_hostname"], [338, 7, 1, "", "server_side"], [338, 7, 1, "", "session"], [338, 7, 1, "", "session_reused"], [338, 8, 1, "", "shared_ciphers"], [338, 8, 1, "", "unwrap"], [338, 8, 1, "", "verify_client_post_handshake"], [338, 8, 1, "", "version"], [338, 8, 1, "", "write"]], "ssl.TLSVersion": [[338, 7, 1, "", "MAXIMUM_SUPPORTED"], [338, 7, 1, "", "MINIMUM_SUPPORTED"], [338, 7, 1, "", "SSLv3"], [338, 7, 1, "", "TLSv1"], [338, 7, 1, "", "TLSv1_1"], [338, 7, 1, "", "TLSv1_2"], [338, 7, 1, "", "TLSv1_3"]], "stat": [[339, 9, 1, "", "FILE_ATTRIBUTE_ARCHIVE"], [339, 9, 1, "", "FILE_ATTRIBUTE_COMPRESSED"], [339, 9, 1, "", "FILE_ATTRIBUTE_DEVICE"], [339, 9, 1, "", "FILE_ATTRIBUTE_DIRECTORY"], [339, 9, 1, "", "FILE_ATTRIBUTE_ENCRYPTED"], [339, 9, 1, "", "FILE_ATTRIBUTE_HIDDEN"], [339, 9, 1, "", "FILE_ATTRIBUTE_INTEGRITY_STREAM"], [339, 9, 1, "", "FILE_ATTRIBUTE_NORMAL"], [339, 9, 1, "", "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"], [339, 9, 1, "", "FILE_ATTRIBUTE_NO_SCRUB_DATA"], [339, 9, 1, "", "FILE_ATTRIBUTE_OFFLINE"], [339, 9, 1, "", "FILE_ATTRIBUTE_READONLY"], [339, 9, 1, "", "FILE_ATTRIBUTE_REPARSE_POINT"], [339, 9, 1, "", "FILE_ATTRIBUTE_SPARSE_FILE"], [339, 9, 1, "", "FILE_ATTRIBUTE_SYSTEM"], [339, 9, 1, "", "FILE_ATTRIBUTE_TEMPORARY"], [339, 9, 1, "", "FILE_ATTRIBUTE_VIRTUAL"], [339, 9, 1, "", "IO_REPARSE_TAG_APPEXECLINK"], [339, 9, 1, "", "IO_REPARSE_TAG_MOUNT_POINT"], [339, 9, 1, "", "IO_REPARSE_TAG_SYMLINK"], [339, 9, 1, "", "SF_APPEND"], [339, 9, 1, "", "SF_ARCHIVED"], [339, 9, 1, "", "SF_IMMUTABLE"], [339, 9, 1, "", "SF_NOUNLINK"], [339, 9, 1, "", "SF_SNAPSHOT"], [339, 9, 1, "", "ST_ATIME"], [339, 9, 1, "", "ST_CTIME"], [339, 9, 1, "", "ST_DEV"], [339, 9, 1, "", "ST_GID"], [339, 9, 1, "", "ST_INO"], [339, 9, 1, "", "ST_MODE"], [339, 9, 1, "", "ST_MTIME"], [339, 9, 1, "", "ST_NLINK"], [339, 9, 1, "", "ST_SIZE"], [339, 9, 1, "", "ST_UID"], [339, 9, 1, "", "S_ENFMT"], [339, 9, 1, "", "S_IEXEC"], [339, 9, 1, "", "S_IFBLK"], [339, 9, 1, "", "S_IFCHR"], [339, 9, 1, "", "S_IFDIR"], [339, 9, 1, "", "S_IFDOOR"], [339, 9, 1, "", "S_IFIFO"], [339, 9, 1, "", "S_IFLNK"], [339, 12, 1, "", "S_IFMT"], [339, 9, 1, "", "S_IFPORT"], [339, 9, 1, "", "S_IFREG"], [339, 9, 1, "", "S_IFSOCK"], [339, 9, 1, "", "S_IFWHT"], [339, 12, 1, "", "S_IMODE"], [339, 9, 1, "", "S_IREAD"], [339, 9, 1, "", "S_IRGRP"], [339, 9, 1, "", "S_IROTH"], [339, 9, 1, "", "S_IRUSR"], [339, 9, 1, "", "S_IRWXG"], [339, 9, 1, "", "S_IRWXO"], [339, 9, 1, "", "S_IRWXU"], [339, 12, 1, "", "S_ISBLK"], [339, 12, 1, "", "S_ISCHR"], [339, 12, 1, "", "S_ISDIR"], [339, 12, 1, "", "S_ISDOOR"], [339, 12, 1, "", "S_ISFIFO"], [339, 9, 1, "", "S_ISGID"], [339, 12, 1, "", "S_ISLNK"], [339, 12, 1, "", "S_ISPORT"], [339, 12, 1, "", "S_ISREG"], [339, 12, 1, "", "S_ISSOCK"], [339, 9, 1, "", "S_ISUID"], [339, 9, 1, "", "S_ISVTX"], [339, 12, 1, "", "S_ISWHT"], [339, 9, 1, "", "S_IWGRP"], [339, 9, 1, "", "S_IWOTH"], [339, 9, 1, "", "S_IWRITE"], [339, 9, 1, "", "S_IWUSR"], [339, 9, 1, "", "S_IXGRP"], [339, 9, 1, "", "S_IXOTH"], [339, 9, 1, "", "S_IXUSR"], [339, 9, 1, "", "UF_APPEND"], [339, 9, 1, "", "UF_COMPRESSED"], [339, 9, 1, "", "UF_HIDDEN"], [339, 9, 1, "", "UF_IMMUTABLE"], [339, 9, 1, "", "UF_NODUMP"], [339, 9, 1, "", "UF_NOUNLINK"], [339, 9, 1, "", "UF_OPAQUE"], [339, 12, 1, "", "filemode"]], "statistics": [[340, 11, 1, "", "NormalDist"], [340, 6, 1, "", "StatisticsError"], [340, 12, 1, "", "correlation"], [340, 12, 1, "", "covariance"], [340, 12, 1, "", "fmean"], [340, 12, 1, "", "geometric_mean"], [340, 12, 1, "", "harmonic_mean"], [340, 12, 1, "", "linear_regression"], [340, 12, 1, "", "mean"], [340, 12, 1, "", "median"], [340, 12, 1, "", "median_grouped"], [340, 12, 1, "", "median_high"], [340, 12, 1, "", "median_low"], [340, 12, 1, "", "mode"], [340, 12, 1, "", "multimode"], [340, 12, 1, "", "pstdev"], [340, 12, 1, "", "pvariance"], [340, 12, 1, "", "quantiles"], [340, 12, 1, "", "stdev"], [340, 12, 1, "", "variance"]], "statistics.NormalDist": [[340, 8, 1, "", "cdf"], [340, 8, 1, "", "from_samples"], [340, 8, 1, "", "inv_cdf"], [340, 7, 1, "", "mean"], [340, 7, 1, "", "median"], [340, 7, 1, "", "mode"], [340, 8, 1, "", "overlap"], [340, 8, 1, "", "pdf"], [340, 8, 1, "", "quantiles"], [340, 8, 1, "", "samples"], [340, 7, 1, "", "stdev"], [340, 7, 1, "", "variance"], [340, 8, 1, "", "zscore"]], "str": [[341, 8, 1, "", "capitalize"], [341, 8, 1, "", "casefold"], [341, 8, 1, "", "center"], [341, 8, 1, "", "count"], [341, 8, 1, "", "encode"], [341, 8, 1, "", "endswith"], [341, 8, 1, "", "expandtabs"], [341, 8, 1, "", "find"], [341, 8, 1, "", "format"], [341, 8, 1, "", "format_map"], [341, 8, 1, "", "index"], [341, 8, 1, "", "isalnum"], [341, 8, 1, "", "isalpha"], [341, 8, 1, "", "isascii"], [341, 8, 1, "", "isdecimal"], [341, 8, 1, "", "isdigit"], [341, 8, 1, "", "isidentifier"], [341, 8, 1, "", "islower"], [341, 8, 1, "", "isnumeric"], [341, 8, 1, "", "isprintable"], [341, 8, 1, "", "isspace"], [341, 8, 1, "", "istitle"], [341, 8, 1, "", "isupper"], [341, 8, 1, "", "join"], [341, 8, 1, "", "ljust"], [341, 8, 1, "", "lower"], [341, 8, 1, "", "lstrip"], [341, 8, 1, "", "maketrans"], [341, 8, 1, "", "partition"], [341, 8, 1, "", "removeprefix"], [341, 8, 1, "", "removesuffix"], [341, 8, 1, "", "replace"], [341, 8, 1, "", "rfind"], [341, 8, 1, "", "rindex"], [341, 8, 1, "", "rjust"], [341, 8, 1, "", "rpartition"], [341, 8, 1, "", "rsplit"], [341, 8, 1, "", "rstrip"], [341, 8, 1, "", "split"], [341, 8, 1, "", "splitlines"], [341, 8, 1, "", "startswith"], [341, 8, 1, "", "strip"], [341, 8, 1, "", "swapcase"], [341, 8, 1, "", "title"], [341, 8, 1, "", "translate"], [341, 8, 1, "", "upper"], [341, 8, 1, "", "zfill"]], "string": [[342, 11, 1, "", "Formatter"], [342, 11, 1, "", "Template"], [342, 9, 1, "", "ascii_letters"], [342, 9, 1, "", "ascii_lowercase"], [342, 9, 1, "", "ascii_uppercase"], [342, 12, 1, "", "capwords"], [342, 9, 1, "", "digits"], [342, 9, 1, "", "hexdigits"], [342, 9, 1, "", "octdigits"], [342, 9, 1, "", "printable"], [342, 9, 1, "", "punctuation"], [342, 9, 1, "", "whitespace"]], "string.Formatter": [[342, 8, 1, "", "check_unused_args"], [342, 8, 1, "", "convert_field"], [342, 8, 1, "", "format"], [342, 8, 1, "", "format_field"], [342, 8, 1, "", "get_field"], [342, 8, 1, "", "get_value"], [342, 8, 1, "", "parse"], [342, 8, 1, "", "vformat"]], "string.Template": [[342, 8, 1, "", "get_identifiers"], [342, 8, 1, "", "is_valid"], [342, 8, 1, "", "safe_substitute"], [342, 8, 1, "", "substitute"], [342, 7, 1, "", "template"]], "stringprep": [[343, 12, 1, "", "in_table_a1"], [343, 12, 1, "", "in_table_b1"], [343, 12, 1, "", "in_table_c11"], [343, 12, 1, "", "in_table_c11_c12"], [343, 12, 1, "", "in_table_c12"], [343, 12, 1, "", "in_table_c21"], [343, 12, 1, "", "in_table_c21_c22"], [343, 12, 1, "", "in_table_c22"], [343, 12, 1, "", "in_table_c3"], [343, 12, 1, "", "in_table_c4"], [343, 12, 1, "", "in_table_c5"], [343, 12, 1, "", "in_table_c6"], [343, 12, 1, "", "in_table_c7"], [343, 12, 1, "", "in_table_c8"], [343, 12, 1, "", "in_table_c9"], [343, 12, 1, "", "in_table_d1"], [343, 12, 1, "", "in_table_d2"], [343, 12, 1, "", "map_table_b2"], [343, 12, 1, "", "map_table_b3"]], "struct": [[344, 11, 1, "", "Struct"], [344, 12, 1, "", "calcsize"], [344, 6, 1, "", "error"], [344, 12, 1, "", "iter_unpack"], [344, 12, 1, "", "pack"], [344, 12, 1, "", "pack_into"], [344, 12, 1, "", "unpack"], [344, 12, 1, "", "unpack_from"]], "struct.Struct": [[344, 7, 1, "", "format"], [344, 8, 1, "", "iter_unpack"], [344, 8, 1, "", "pack"], [344, 8, 1, "", "pack_into"], [344, 7, 1, "", "size"], [344, 8, 1, "", "unpack"], [344, 8, 1, "", "unpack_from"]], "subprocess": [[345, 9, 1, "", "ABOVE_NORMAL_PRIORITY_CLASS"], [345, 9, 1, "", "BELOW_NORMAL_PRIORITY_CLASS"], [345, 9, 1, "", "CREATE_BREAKAWAY_FROM_JOB"], [345, 9, 1, "", "CREATE_DEFAULT_ERROR_MODE"], [345, 9, 1, "", "CREATE_NEW_CONSOLE"], [345, 9, 1, "", "CREATE_NEW_PROCESS_GROUP"], [345, 9, 1, "", "CREATE_NO_WINDOW"], [345, 6, 1, "", "CalledProcessError"], [345, 11, 1, "", "CompletedProcess"], [345, 9, 1, "", "DETACHED_PROCESS"], [345, 9, 1, "", "DEVNULL"], [345, 9, 1, "", "HIGH_PRIORITY_CLASS"], [345, 9, 1, "", "IDLE_PRIORITY_CLASS"], [345, 9, 1, "", "NORMAL_PRIORITY_CLASS"], [345, 9, 1, "", "PIPE"], [345, 11, 1, "", "Popen"], [345, 9, 1, "", "REALTIME_PRIORITY_CLASS"], [345, 9, 1, "", "STARTF_USESHOWWINDOW"], [345, 9, 1, "", "STARTF_USESTDHANDLES"], [345, 11, 1, "", "STARTUPINFO"], [345, 9, 1, "", "STDOUT"], [345, 9, 1, "", "STD_ERROR_HANDLE"], [345, 9, 1, "", "STD_INPUT_HANDLE"], [345, 9, 1, "", "STD_OUTPUT_HANDLE"], [345, 9, 1, "", "SW_HIDE"], [345, 6, 1, "", "SubprocessError"], [345, 6, 1, "", "TimeoutExpired"], [345, 12, 1, "", "call"], [345, 12, 1, "", "check_call"], [345, 12, 1, "", "check_output"], [345, 12, 1, "", "getoutput"], [345, 12, 1, "", "getstatusoutput"], [345, 12, 1, "", "run"]], "subprocess.CalledProcessError": [[345, 7, 1, "", "cmd"], [345, 7, 1, "", "output"], [345, 7, 1, "", "returncode"], [345, 7, 1, "", "stderr"], [345, 7, 1, "", "stdout"]], "subprocess.CompletedProcess": [[345, 7, 1, "", "args"], [345, 8, 1, "", "check_returncode"], [345, 7, 1, "", "returncode"], [345, 7, 1, "", "stderr"], [345, 7, 1, "", "stdout"]], "subprocess.Popen": [[345, 7, 1, "", "args"], [345, 8, 1, "", "communicate"], [345, 8, 1, "", "kill"], [345, 7, 1, "", "pid"], [345, 8, 1, "", "poll"], [345, 7, 1, "", "returncode"], [345, 8, 1, "", "send_signal"], [345, 7, 1, "", "stderr"], [345, 7, 1, "", "stdin"], [345, 7, 1, "", "stdout"], [345, 8, 1, "", "terminate"], [345, 8, 1, "", "wait"]], "subprocess.STARTUPINFO": [[345, 7, 1, "", "dwFlags"], [345, 7, 1, "", "hStdError"], [345, 7, 1, "", "hStdInput"], [345, 7, 1, "", "hStdOutput"], [345, 7, 1, "", "lpAttributeList"], [345, 7, 1, "", "wShowWindow"]], "subprocess.TimeoutExpired": [[345, 7, 1, "", "cmd"], [345, 7, 1, "", "output"], [345, 7, 1, "", "stderr"], [345, 7, 1, "", "stdout"], [345, 7, 1, "", "timeout"]], "sunau": [[346, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G721"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G722"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G723_3"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G723_5"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_ALAW_8"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_DOUBLE"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_FLOAT"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_16"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_24"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_32"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_8"], [346, 9, 1, "", "AUDIO_FILE_ENCODING_MULAW_8"], [346, 9, 1, "", "AUDIO_FILE_MAGIC"], [346, 6, 1, "", "Error"], [346, 12, 1, "", "open"]], "sunau.AU_read": [[346, 8, 1, "", "close"], [346, 8, 1, "", "getcompname"], [346, 8, 1, "", "getcomptype"], [346, 8, 1, "", "getframerate"], [346, 8, 1, "", "getmark"], [346, 8, 1, "", "getmarkers"], [346, 8, 1, "", "getnchannels"], [346, 8, 1, "", "getnframes"], [346, 8, 1, "", "getparams"], [346, 8, 1, "", "getsampwidth"], [346, 8, 1, "", "readframes"], [346, 8, 1, "", "rewind"], [346, 8, 1, "", "setpos"], [346, 8, 1, "", "tell"]], "sunau.AU_write": [[346, 8, 1, "", "close"], [346, 8, 1, "", "setcomptype"], [346, 8, 1, "", "setframerate"], [346, 8, 1, "", "setnchannels"], [346, 8, 1, "", "setnframes"], [346, 8, 1, "", "setparams"], [346, 8, 1, "", "setsampwidth"], [346, 8, 1, "", "tell"], [346, 8, 1, "", "writeframes"], [346, 8, 1, "", "writeframesraw"]], "symtable": [[348, 11, 1, "", "Class"], [348, 11, 1, "", "Function"], [348, 11, 1, "", "Symbol"], [348, 11, 1, "", "SymbolTable"], [348, 12, 1, "", "symtable"]], "symtable.Class": [[348, 8, 1, "", "get_methods"]], "symtable.Function": [[348, 8, 1, "", "get_frees"], [348, 8, 1, "", "get_globals"], [348, 8, 1, "", "get_locals"], [348, 8, 1, "", "get_nonlocals"], [348, 8, 1, "", "get_parameters"]], "symtable.Symbol": [[348, 8, 1, "", "get_name"], [348, 8, 1, "", "get_namespace"], [348, 8, 1, "", "get_namespaces"], [348, 8, 1, "", "is_annotated"], [348, 8, 1, "", "is_assigned"], [348, 8, 1, "", "is_declared_global"], [348, 8, 1, "", "is_free"], [348, 8, 1, "", "is_global"], [348, 8, 1, "", "is_imported"], [348, 8, 1, "", "is_local"], [348, 8, 1, "", "is_namespace"], [348, 8, 1, "", "is_nonlocal"], [348, 8, 1, "", "is_parameter"], [348, 8, 1, "", "is_referenced"]], "symtable.SymbolTable": [[348, 8, 1, "", "get_children"], [348, 8, 1, "", "get_id"], [348, 8, 1, "", "get_identifiers"], [348, 8, 1, "", "get_lineno"], [348, 8, 1, "", "get_name"], [348, 8, 1, "", "get_symbols"], [348, 8, 1, "", "get_type"], [348, 8, 1, "", "has_children"], [348, 8, 1, "", "is_nested"], [348, 8, 1, "", "is_optimized"], [348, 8, 1, "", "lookup"]], "sys": [[349, 9, 1, "", "__breakpointhook__"], [349, 9, 1, "", "__displayhook__"], [349, 9, 1, "", "__excepthook__"], [349, 9, 1, "", "__interactivehook__"], [349, 9, 1, "", "__stderr__"], [349, 9, 1, "", "__stdin__"], [349, 9, 1, "", "__stdout__"], [349, 9, 1, "", "__unraisablehook__"], [349, 12, 1, "", "_clear_type_cache"], [349, 12, 1, "", "_current_exceptions"], [349, 12, 1, "", "_current_frames"], [349, 12, 1, "", "_debugmallocstats"], [349, 9, 1, "", "_emscripten_info"], [349, 12, 1, "", "_enablelegacywindowsfsencoding"], [349, 12, 1, "", "_getframe"], [349, 12, 1, "", "_getframemodulename"], [349, 9, 1, "", "_xoptions"], [349, 9, 1, "", "abiflags"], [349, 12, 1, "", "activate_stack_trampoline"], [349, 12, 1, "", "addaudithook"], [349, 9, 1, "", "api_version"], [349, 9, 1, "", "argv"], [349, 12, 1, "", "audit"], [349, 9, 1, "", "base_exec_prefix"], [349, 9, 1, "", "base_prefix"], [349, 12, 1, "", "breakpointhook"], [349, 9, 1, "", "builtin_module_names"], [349, 9, 1, "", "byteorder"], [349, 12, 1, "", "call_tracing"], [349, 9, 1, "", "copyright"], [349, 12, 1, "", "deactivate_stack_trampoline"], [349, 12, 1, "", "displayhook"], [349, 9, 1, "", "dllhandle"], [349, 9, 1, "", "dont_write_bytecode"], [349, 12, 1, "", "exc_info"], [349, 12, 1, "", "excepthook"], [349, 12, 1, "", "exception"], [349, 9, 1, "", "exec_prefix"], [349, 9, 1, "", "executable"], [349, 12, 1, "", "exit"], [349, 9, 1, "", "flags"], [349, 9, 1, "", "float_info"], [349, 9, 1, "", "float_repr_style"], [349, 12, 1, "", "get_asyncgen_hooks"], [349, 12, 1, "", "get_coroutine_origin_tracking_depth"], [349, 12, 1, "", "get_int_max_str_digits"], [349, 12, 1, "", "getallocatedblocks"], [349, 12, 1, "", "getandroidapilevel"], [349, 12, 1, "", "getdefaultencoding"], [349, 12, 1, "", "getdlopenflags"], [349, 12, 1, "", "getfilesystemencodeerrors"], [349, 12, 1, "", "getfilesystemencoding"], [349, 12, 1, "", "getprofile"], [349, 12, 1, "", "getrecursionlimit"], [349, 12, 1, "", "getrefcount"], [349, 12, 1, "", "getsizeof"], [349, 12, 1, "", "getswitchinterval"], [349, 12, 1, "", "gettrace"], [349, 12, 1, "", "getunicodeinternedsize"], [349, 12, 1, "", "getwindowsversion"], [349, 9, 1, "", "hash_info"], [349, 9, 1, "", "hexversion"], [349, 9, 1, "", "implementation"], [349, 9, 1, "", "int_info"], [349, 12, 1, "", "intern"], [349, 12, 1, "", "is_finalizing"], [349, 12, 1, "", "is_stack_trampoline_active"], [349, 9, 1, "", "last_exc"], [349, 9, 1, "", "last_traceback"], [349, 9, 1, "", "last_type"], [349, 9, 1, "", "last_value"], [349, 9, 1, "", "maxsize"], [349, 9, 1, "", "maxunicode"], [349, 9, 1, "", "meta_path"], [349, 9, 1, "", "modules"], [350, 10, 0, "-", "monitoring"], [349, 9, 1, "", "orig_argv"], [349, 9, 1, "", "path"], [349, 9, 1, "", "path_hooks"], [349, 9, 1, "", "path_importer_cache"], [349, 9, 1, "", "platform"], [349, 9, 1, "", "platlibdir"], [349, 9, 1, "", "prefix"], [349, 9, 1, "", "ps1"], [349, 9, 1, "", "ps2"], [349, 9, 1, "", "pycache_prefix"], [349, 12, 1, "", "set_asyncgen_hooks"], [349, 12, 1, "", "set_coroutine_origin_tracking_depth"], [349, 12, 1, "", "set_int_max_str_digits"], [349, 12, 1, "", "setdlopenflags"], [349, 12, 1, "", "setprofile"], [349, 12, 1, "", "setrecursionlimit"], [349, 12, 1, "", "setswitchinterval"], [349, 12, 1, "", "settrace"], [349, 9, 1, "", "stderr"], [349, 9, 1, "", "stdin"], [349, 9, 1, "", "stdlib_module_names"], [349, 9, 1, "", "stdout"], [349, 9, 1, "", "thread_info"], [349, 9, 1, "", "tracebacklimit"], [349, 12, 1, "", "unraisablehook"], [349, 9, 1, "", "version"], [349, 9, 1, "", "version_info"], [349, 9, 1, "", "warnoptions"], [349, 9, 1, "", "winver"]], "sys._emscripten_info": [[349, 7, 1, "", "emscripten_version"], [349, 7, 1, "", "pthreads"], [349, 7, 1, "", "runtime"], [349, 7, 1, "", "shared_memory"]], "sys.flags": [[349, 7, 1, "", "bytes_warning"], [349, 7, 1, "", "debug"], [349, 7, 1, "", "dev_mode"], [349, 7, 1, "", "dont_write_bytecode"], [349, 7, 1, "", "hash_randomization"], [349, 7, 1, "", "ignore_environment"], [349, 7, 1, "", "inspect"], [349, 7, 1, "", "int_max_str_digits"], [349, 7, 1, "", "interactive"], [349, 7, 1, "", "isolated"], [349, 7, 1, "", "no_site"], [349, 7, 1, "", "no_user_site"], [349, 7, 1, "", "optimize"], [349, 7, 1, "", "quiet"], [349, 7, 1, "", "safe_path"], [349, 7, 1, "", "utf8_mode"], [349, 7, 1, "", "verbose"], [349, 7, 1, "", "warn_default_encoding"]], "sys.float_info": [[349, 7, 1, "", "dig"], [349, 7, 1, "", "epsilon"], [349, 7, 1, "", "mant_dig"], [349, 7, 1, "", "max"], [349, 7, 1, "", "max_10_exp"], [349, 7, 1, "", "max_exp"], [349, 7, 1, "", "min"], [349, 7, 1, "", "min_10_exp"], [349, 7, 1, "", "min_exp"], [349, 7, 1, "", "radix"], [349, 7, 1, "", "rounds"]], "sys.hash_info": [[349, 7, 1, "", "algorithm"], [349, 7, 1, "", "hash_bits"], [349, 7, 1, "", "imag"], [349, 7, 1, "", "inf"], [349, 7, 1, "", "modulus"], [349, 7, 1, "", "nan"], [349, 7, 1, "", "seed_bits"], [349, 7, 1, "", "width"]], "sys.int_info": [[349, 7, 1, "", "bits_per_digit"], [349, 7, 1, "", "default_max_str_digits"], [349, 7, 1, "", "sizeof_digit"], [349, 7, 1, "", "str_digits_check_threshold"]], "sys.monitoring": [[350, 9, 1, "", "DISABLE"], [350, 9, 1, "", "MISSING"], [350, 12, 1, "", "free_tool_id"], [350, 12, 1, "", "get_events"], [350, 12, 1, "", "get_local_events"], [350, 12, 1, "", "get_tool"], [350, 12, 1, "", "register_callback"], [350, 12, 1, "", "restart_events"], [350, 12, 1, "", "set_events"], [350, 12, 1, "", "set_local_events"], [350, 12, 1, "", "use_tool_id"]], "sys.thread_info": [[349, 7, 1, "", "lock"], [349, 7, 1, "", "name"], [349, 7, 1, "", "version"]], "sysconfig": [[352, 12, 1, "", "_get_preferred_schemes"], [352, 12, 1, "", "get_config_h_filename"], [352, 12, 1, "", "get_config_var"], [352, 12, 1, "", "get_config_vars"], [352, 12, 1, "", "get_default_scheme"], [352, 12, 1, "", "get_makefile_filename"], [352, 12, 1, "", "get_path"], [352, 12, 1, "", "get_path_names"], [352, 12, 1, "", "get_paths"], [352, 12, 1, "", "get_platform"], [352, 12, 1, "", "get_preferred_scheme"], [352, 12, 1, "", "get_python_version"], [352, 12, 1, "", "get_scheme_names"], [352, 12, 1, "", "is_python_build"], [352, 12, 1, "", "parse_config_h"]], "syslog": [[353, 12, 1, "", "closelog"], [353, 12, 1, "", "openlog"], [353, 12, 1, "", "setlogmask"], [353, 12, 1, "", "syslog"]], "tabnanny": [[354, 6, 1, "", "NannyNag"], [354, 12, 1, "", "check"], [354, 9, 1, "", "filename_only"], [354, 12, 1, "", "process_tokens"], [354, 9, 1, "", "verbose"]], "tarfile": [[355, 9, 1, "", "AREGTYPE"], [355, 6, 1, "", "AbsoluteLinkError"], [355, 6, 1, "", "AbsolutePathError"], [355, 9, 1, "", "BLKTYPE"], [355, 9, 1, "", "CHRTYPE"], [355, 9, 1, "", "CONTTYPE"], [355, 6, 1, "", "CompressionError"], [355, 9, 1, "", "DEFAULT_FORMAT"], [355, 9, 1, "", "DIRTYPE"], [355, 9, 1, "", "ENCODING"], [355, 6, 1, "", "ExtractError"], [355, 9, 1, "", "FIFOTYPE"], [355, 6, 1, "", "FilterError"], [355, 9, 1, "", "GNUTYPE_LONGLINK"], [355, 9, 1, "", "GNUTYPE_LONGNAME"], [355, 9, 1, "", "GNUTYPE_SPARSE"], [355, 9, 1, "", "GNU_FORMAT"], [355, 6, 1, "", "HeaderError"], [355, 9, 1, "", "LNKTYPE"], [355, 6, 1, "", "LinkOutsideDestinationError"], [355, 6, 1, "", "OutsideDestinationError"], [355, 9, 1, "", "PAX_FORMAT"], [355, 9, 1, "", "REGTYPE"], [355, 6, 1, "", "ReadError"], [355, 9, 1, "", "SYMTYPE"], [355, 6, 1, "", "SpecialFileError"], [355, 6, 1, "", "StreamError"], [355, 6, 1, "", "TarError"], [355, 11, 1, "", "TarFile"], [355, 11, 1, "", "TarInfo"], [355, 9, 1, "", "USTAR_FORMAT"], [355, 12, 1, "", "data_filter"], [355, 12, 1, "", "fully_trusted_filter"], [355, 12, 1, "", "is_tarfile"], [355, 12, 1, "", "open"], [355, 12, 1, "", "tar_filter"], [355, 14, 1, "cmdoption-tarfile-create", "--create"], [355, 14, 1, "cmdoption-tarfile-extract", "--extract"], [355, 14, 1, "cmdoption-tarfile-filter", "--filter"], [355, 14, 1, "cmdoption-tarfile-list", "--list"], [355, 14, 1, "cmdoption-tarfile-test", "--test"], [355, 14, 1, "cmdoption-tarfile-v", "--verbose"], [355, 14, 1, "cmdoption-tarfile-c", "-c"], [355, 14, 1, "cmdoption-tarfile-e", "-e"], [355, 14, 1, "cmdoption-tarfile-l", "-l"], [355, 14, 1, "cmdoption-tarfile-t", "-t"], [355, 14, 1, "cmdoption-tarfile-v", "-v"]], "tarfile.FilterError": [[355, 7, 1, "", "tarinfo"]], "tarfile.TarFile": [[355, 8, 1, "", "add"], [355, 8, 1, "", "addfile"], [355, 8, 1, "", "close"], [355, 7, 1, "", "errorlevel"], [355, 8, 1, "", "extract"], [355, 8, 1, "", "extractall"], [355, 8, 1, "", "extractfile"], [355, 7, 1, "", "extraction_filter"], [355, 8, 1, "", "getmember"], [355, 8, 1, "", "getmembers"], [355, 8, 1, "", "getnames"], [355, 8, 1, "", "gettarinfo"], [355, 8, 1, "", "list"], [355, 8, 1, "", "next"], [355, 8, 1, "", "open"], [355, 7, 1, "", "pax_headers"]], "tarfile.TarInfo": [[355, 7, 1, "", "chksum"], [355, 7, 1, "", "devmajor"], [355, 7, 1, "", "devminor"], [355, 8, 1, "", "frombuf"], [355, 8, 1, "", "fromtarfile"], [355, 7, 1, "", "gid"], [355, 7, 1, "", "gname"], [355, 8, 1, "", "isblk"], [355, 8, 1, "", "ischr"], [355, 8, 1, "", "isdev"], [355, 8, 1, "", "isdir"], [355, 8, 1, "", "isfifo"], [355, 8, 1, "", "isfile"], [355, 8, 1, "", "islnk"], [355, 8, 1, "", "isreg"], [355, 8, 1, "", "issym"], [355, 7, 1, "", "linkname"], [355, 7, 1, "", "mode"], [355, 7, 1, "", "mtime"], [355, 7, 1, "", "name"], [355, 7, 1, "", "offset"], [355, 7, 1, "", "offset_data"], [355, 7, 1, "", "pax_headers"], [355, 8, 1, "", "replace"], [355, 7, 1, "", "size"], [355, 7, 1, "", "sparse"], [355, 8, 1, "", "tobuf"], [355, 7, 1, "", "type"], [355, 7, 1, "", "uid"], [355, 7, 1, "", "uname"]], "telnetlib": [[356, 11, 1, "", "Telnet"]], "telnetlib.Telnet": [[356, 8, 1, "", "close"], [356, 8, 1, "", "expect"], [356, 8, 1, "", "fileno"], [356, 8, 1, "", "get_socket"], [356, 8, 1, "", "interact"], [356, 8, 1, "", "msg"], [356, 8, 1, "", "mt_interact"], [356, 8, 1, "", "open"], [356, 8, 1, "", "read_all"], [356, 8, 1, "", "read_eager"], [356, 8, 1, "", "read_lazy"], [356, 8, 1, "", "read_sb_data"], [356, 8, 1, "", "read_some"], [356, 8, 1, "", "read_until"], [356, 8, 1, "", "read_very_eager"], [356, 8, 1, "", "read_very_lazy"], [356, 8, 1, "", "set_debuglevel"], [356, 8, 1, "", "set_option_negotiation_callback"], [356, 8, 1, "", "write"]], "tempfile": [[357, 12, 1, "", "NamedTemporaryFile"], [357, 11, 1, "", "SpooledTemporaryFile"], [357, 11, 1, "", "TemporaryDirectory"], [357, 12, 1, "", "TemporaryFile"], [357, 12, 1, "", "gettempdir"], [357, 12, 1, "", "gettempdirb"], [357, 12, 1, "", "gettempprefix"], [357, 12, 1, "", "gettempprefixb"], [357, 12, 1, "", "mkdtemp"], [357, 12, 1, "", "mkstemp"], [357, 12, 1, "", "mktemp"], [357, 9, 1, "", "tempdir"]], "tempfile.SpooledTemporaryFile": [[357, 8, 1, "", "rollover"]], "tempfile.TemporaryDirectory": [[357, 8, 1, "", "cleanup"], [357, 7, 1, "", "name"]], "termios": [[358, 9, 1, "", "TCSADRAIN"], [358, 9, 1, "", "TCSAFLUSH"], [358, 9, 1, "", "TCSANOW"], [358, 12, 1, "", "tcdrain"], [358, 12, 1, "", "tcflow"], [358, 12, 1, "", "tcflush"], [358, 12, 1, "", "tcgetattr"], [358, 12, 1, "", "tcgetwinsize"], [358, 12, 1, "", "tcsendbreak"], [358, 12, 1, "", "tcsetattr"], [358, 12, 1, "", "tcsetwinsize"]], "test": [[359, 10, 0, "-", "regrtest"], [359, 10, 0, "-", "support"]], "test.support": [[359, 9, 1, "", "ALWAYS_EQ"], [359, 9, 1, "", "HAVE_DOCSTRINGS"], [359, 9, 1, "", "INTERNET_TIMEOUT"], [359, 9, 1, "", "LARGEST"], [359, 9, 1, "", "LONG_TIMEOUT"], [359, 9, 1, "", "LOOPBACK_TIMEOUT"], [359, 9, 1, "", "MAX_Py_ssize_t"], [359, 9, 1, "", "MISSING_C_DOCSTRINGS"], [359, 11, 1, "", "Matcher"], [359, 9, 1, "", "NEVER_EQ"], [359, 9, 1, "", "PGO"], [359, 9, 1, "", "PIPE_MAX_SIZE"], [359, 9, 1, "", "Py_DEBUG"], [359, 6, 1, "", "ResourceDenied"], [359, 9, 1, "", "SHORT_TIMEOUT"], [359, 9, 1, "", "SMALLEST"], [359, 9, 1, "", "SOCK_MAX_SIZE"], [359, 11, 1, "", "SaveSignals"], [359, 11, 1, "", "SuppressCrashReport"], [359, 9, 1, "", "TEST_DATA_DIR"], [359, 9, 1, "", "TEST_HOME_DIR"], [359, 9, 1, "", "TEST_HTTP_URL"], [359, 9, 1, "", "TEST_SUPPORT_DIR"], [359, 6, 1, "", "TestFailed"], [359, 12, 1, "", "adjust_int_max_str_digits"], [359, 12, 1, "", "anticipate_failure"], [359, 12, 1, "", "args_from_interpreter_flags"], [359, 12, 1, "", "bigaddrspacetest"], [359, 12, 1, "", "bigmemtest"], [359, 12, 1, "", "busy_retry"], [359, 10, 0, "-", "bytecode_helper"], [359, 12, 1, "", "calcobjsize"], [359, 12, 1, "", "calcvobjsize"], [359, 12, 1, "", "captured_stderr"], [359, 12, 1, "", "captured_stdin"], [359, 12, 1, "", "captured_stdout"], [359, 12, 1, "", "catch_unraisable_exception"], [359, 12, 1, "", "check__all__"], [359, 12, 1, "", "check_disallow_instantiation"], [359, 12, 1, "", "check_free_after_iterating"], [359, 12, 1, "", "check_impl_detail"], [359, 12, 1, "", "check_syntax_error"], [359, 12, 1, "", "checksizeof"], [359, 12, 1, "", "cpython_only"], [359, 12, 1, "", "detect_api_mismatch"], [359, 12, 1, "", "disable_faulthandler"], [359, 12, 1, "", "disable_gc"], [359, 12, 1, "", "findfile"], [359, 12, 1, "", "flush_std_streams"], [359, 12, 1, "", "gc_collect"], [359, 12, 1, "", "get_attribute"], [359, 12, 1, "", "get_original_stdout"], [359, 12, 1, "", "get_pagesize"], [359, 12, 1, "", "impl_detail"], [359, 10, 0, "-", "import_helper"], [359, 9, 1, "", "is_android"], [359, 9, 1, "", "is_jython"], [359, 12, 1, "", "is_resource_enabled"], [359, 12, 1, "", "load_package_tests"], [359, 9, 1, "", "max_memuse"], [359, 12, 1, "", "missing_compiler_executable"], [359, 12, 1, "", "no_tracing"], [359, 12, 1, "", "open_urlresource"], [359, 12, 1, "", "optim_args_from_interpreter_flags"], [359, 10, 0, "-", "os_helper"], [359, 12, 1, "", "patch"], [359, 12, 1, "", "print_warning"], [359, 12, 1, "", "python_is_optimized"], [359, 9, 1, "", "real_max_memuse"], [359, 12, 1, "", "reap_children"], [359, 12, 1, "", "record_original_stdout"], [359, 12, 1, "", "refcount_test"], [359, 12, 1, "", "requires"], [359, 12, 1, "", "requires_IEEE_754"], [359, 12, 1, "", "requires_bz2"], [359, 12, 1, "", "requires_docstrings"], [359, 12, 1, "", "requires_freebsd_version"], [359, 12, 1, "", "requires_gzip"], [359, 12, 1, "", "requires_limited_api"], [359, 12, 1, "", "requires_linux_version"], [359, 12, 1, "", "requires_lzma"], [359, 12, 1, "", "requires_mac_version"], [359, 12, 1, "", "requires_resource"], [359, 12, 1, "", "requires_zlib"], [359, 12, 1, "", "run_in_subinterp"], [359, 12, 1, "", "run_with_locale"], [359, 12, 1, "", "run_with_tz"], [359, 10, 0, "-", "script_helper"], [359, 12, 1, "", "set_memlimit"], [359, 12, 1, "", "setswitchinterval"], [359, 12, 1, "", "skip_if_broken_multiprocessing_synchronize"], [359, 12, 1, "", "sleeping_retry"], [359, 10, 0, "-", "socket_helper"], [359, 12, 1, "", "sortdict"], [359, 12, 1, "", "swap_attr"], [359, 12, 1, "", "swap_item"], [359, 12, 1, "", "system_must_validate_cert"], [359, 10, 0, "-", "threading_helper"], [359, 9, 1, "", "unix_shell"], [359, 9, 1, "", "verbose"], [359, 12, 1, "", "wait_process"], [359, 10, 0, "-", "warnings_helper"], [359, 12, 1, "", "with_pymalloc"]], "test.support.Matcher": [[359, 8, 1, "", "match_value"], [359, 8, 1, "", "matches"]], "test.support.SaveSignals": [[359, 8, 1, "", "restore"], [359, 8, 1, "", "save"]], "test.support.bytecode_helper": [[359, 11, 1, "", "BytecodeTestCase"]], "test.support.bytecode_helper.BytecodeTestCase": [[359, 8, 1, "", "assertInBytecode"], [359, 8, 1, "", "assertNotInBytecode"], [359, 8, 1, "", "get_disassembly_as_string"]], "test.support.import_helper": [[359, 11, 1, "", "CleanImport"], [359, 11, 1, "", "DirsOnSysPath"], [359, 12, 1, "", "forget"], [359, 12, 1, "", "import_fresh_module"], [359, 12, 1, "", "import_module"], [359, 12, 1, "", "make_legacy_pyc"], [359, 12, 1, "", "modules_cleanup"], [359, 12, 1, "", "modules_setup"], [359, 12, 1, "", "unload"]], "test.support.os_helper": [[359, 11, 1, "", "EnvironmentVarGuard"], [359, 9, 1, "", "FS_NONASCII"], [359, 11, 1, "", "FakePath"], [359, 9, 1, "", "SAVEDCWD"], [359, 9, 1, "", "TESTFN"], [359, 9, 1, "", "TESTFN_NONASCII"], [359, 9, 1, "", "TESTFN_UNDECODABLE"], [359, 9, 1, "", "TESTFN_UNENCODABLE"], [359, 9, 1, "", "TESTFN_UNICODE"], [359, 12, 1, "", "can_symlink"], [359, 12, 1, "", "can_xattr"], [359, 12, 1, "", "change_cwd"], [359, 12, 1, "", "create_empty_file"], [359, 12, 1, "", "fd_count"], [359, 12, 1, "", "fs_is_case_insensitive"], [359, 12, 1, "", "make_bad_fd"], [359, 12, 1, "", "rmdir"], [359, 12, 1, "", "rmtree"], [359, 12, 1, "", "skip_unless_symlink"], [359, 12, 1, "", "skip_unless_xattr"], [359, 12, 1, "", "temp_cwd"], [359, 12, 1, "", "temp_dir"], [359, 12, 1, "", "temp_umask"], [359, 12, 1, "", "unlink"]], "test.support.os_helper.EnvironmentVarGuard": [[359, 8, 1, "", "set"], [359, 8, 1, "", "unset"]], "test.support.script_helper": [[359, 12, 1, "", "assert_python_failure"], [359, 12, 1, "", "assert_python_ok"], [359, 12, 1, "", "interpreter_requires_environment"], [359, 12, 1, "", "kill_python"], [359, 12, 1, "", "make_pkg"], [359, 12, 1, "", "make_script"], [359, 12, 1, "", "make_zip_pkg"], [359, 12, 1, "", "make_zip_script"], [359, 12, 1, "", "run_python_until_end"], [359, 12, 1, "", "spawn_python"]], "test.support.socket_helper": [[359, 9, 1, "", "IPV6_ENABLED"], [359, 12, 1, "", "bind_port"], [359, 12, 1, "", "bind_unix_socket"], [359, 12, 1, "", "find_unused_port"], [359, 12, 1, "", "skip_unless_bind_unix_socket"], [359, 12, 1, "", "transient_internet"]], "test.support.threading_helper": [[359, 12, 1, "", "catch_threading_exception"], [359, 12, 1, "", "join_thread"], [359, 12, 1, "", "reap_threads"], [359, 12, 1, "", "start_threads"], [359, 12, 1, "", "threading_cleanup"], [359, 12, 1, "", "threading_setup"], [359, 12, 1, "", "wait_threads_exit"]], "test.support.warnings_helper": [[359, 11, 1, "", "WarningsRecorder"], [359, 12, 1, "", "check_no_resource_warning"], [359, 12, 1, "", "check_syntax_warning"], [359, 12, 1, "", "check_warnings"], [359, 12, 1, "", "ignore_warnings"]], "textwrap": [[361, 11, 1, "", "TextWrapper"], [361, 12, 1, "", "dedent"], [361, 12, 1, "", "fill"], [361, 12, 1, "", "indent"], [361, 12, 1, "", "shorten"], [361, 12, 1, "", "wrap"]], "textwrap.TextWrapper": [[361, 7, 1, "", "break_long_words"], [361, 7, 1, "", "break_on_hyphens"], [361, 7, 1, "", "drop_whitespace"], [361, 7, 1, "", "expand_tabs"], [361, 8, 1, "", "fill"], [361, 7, 1, "", "fix_sentence_endings"], [361, 7, 1, "", "initial_indent"], [361, 7, 1, "", "max_lines"], [361, 7, 1, "", "placeholder"], [361, 7, 1, "", "replace_whitespace"], [361, 7, 1, "", "subsequent_indent"], [361, 7, 1, "", "tabsize"], [361, 7, 1, "", "width"], [361, 8, 1, "", "wrap"]], "threading": [[362, 11, 1, "", "Barrier"], [362, 11, 1, "", "BoundedSemaphore"], [362, 6, 1, "", "BrokenBarrierError"], [362, 11, 1, "", "Condition"], [362, 11, 1, "", "Event"], [362, 11, 1, "", "Lock"], [362, 11, 1, "", "RLock"], [362, 11, 1, "", "Semaphore"], [362, 9, 1, "", "TIMEOUT_MAX"], [362, 11, 1, "", "Thread"], [362, 11, 1, "", "Timer"], [362, 9, 1, "", "__excepthook__"], [362, 12, 1, "", "active_count"], [362, 12, 1, "", "current_thread"], [362, 12, 1, "", "enumerate"], [362, 12, 1, "", "excepthook"], [362, 12, 1, "", "get_ident"], [362, 12, 1, "", "get_native_id"], [362, 12, 1, "", "getprofile"], [362, 12, 1, "", "gettrace"], [362, 11, 1, "", "local"], [362, 12, 1, "", "main_thread"], [362, 12, 1, "", "setprofile"], [362, 12, 1, "", "setprofile_all_threads"], [362, 12, 1, "", "settrace"], [362, 12, 1, "", "settrace_all_threads"], [362, 12, 1, "", "stack_size"]], "threading.Barrier": [[362, 8, 1, "", "abort"], [362, 7, 1, "", "broken"], [362, 7, 1, "", "n_waiting"], [362, 7, 1, "", "parties"], [362, 8, 1, "", "reset"], [362, 8, 1, "", "wait"]], "threading.Condition": [[362, 8, 1, "", "acquire"], [362, 8, 1, "", "notify"], [362, 8, 1, "", "notify_all"], [362, 8, 1, "", "release"], [362, 8, 1, "", "wait"], [362, 8, 1, "", "wait_for"]], "threading.Event": [[362, 8, 1, "", "clear"], [362, 8, 1, "", "is_set"], [362, 8, 1, "", "set"], [362, 8, 1, "", "wait"]], "threading.Lock": [[362, 8, 1, "", "acquire"], [362, 8, 1, "", "locked"], [362, 8, 1, "", "release"]], "threading.RLock": [[362, 8, 1, "", "acquire"], [362, 8, 1, "", "release"]], "threading.Semaphore": [[362, 8, 1, "", "acquire"], [362, 8, 1, "", "release"]], "threading.Thread": [[362, 7, 1, "", "daemon"], [362, 8, 1, "", "getName"], [362, 7, 1, "", "ident"], [362, 8, 1, "", "isDaemon"], [362, 8, 1, "", "is_alive"], [362, 8, 1, "", "join"], [362, 7, 1, "", "name"], [362, 7, 1, "", "native_id"], [362, 8, 1, "", "run"], [362, 8, 1, "", "setDaemon"], [362, 8, 1, "", "setName"], [362, 8, 1, "", "start"]], "threading.Timer": [[362, 8, 1, "", "cancel"]], "time": [[363, 9, 1, "", "CLOCK_BOOTTIME"], [363, 9, 1, "", "CLOCK_HIGHRES"], [363, 9, 1, "", "CLOCK_MONOTONIC"], [363, 9, 1, "", "CLOCK_MONOTONIC_RAW"], [363, 9, 1, "", "CLOCK_PROCESS_CPUTIME_ID"], [363, 9, 1, "", "CLOCK_PROF"], [363, 9, 1, "", "CLOCK_REALTIME"], [363, 9, 1, "", "CLOCK_TAI"], [363, 9, 1, "", "CLOCK_THREAD_CPUTIME_ID"], [363, 9, 1, "", "CLOCK_UPTIME"], [363, 9, 1, "", "CLOCK_UPTIME_RAW"], [363, 9, 1, "", "altzone"], [363, 12, 1, "", "asctime"], [363, 12, 1, "", "clock_getres"], [363, 12, 1, "", "clock_gettime"], [363, 12, 1, "", "clock_gettime_ns"], [363, 12, 1, "", "clock_settime"], [363, 12, 1, "", "clock_settime_ns"], [363, 12, 1, "", "ctime"], [363, 9, 1, "", "daylight"], [363, 12, 1, "", "get_clock_info"], [363, 12, 1, "", "gmtime"], [363, 12, 1, "", "localtime"], [363, 12, 1, "", "mktime"], [363, 12, 1, "", "monotonic"], [363, 12, 1, "", "monotonic_ns"], [363, 12, 1, "", "perf_counter"], [363, 12, 1, "", "perf_counter_ns"], [363, 12, 1, "", "process_time"], [363, 12, 1, "", "process_time_ns"], [363, 12, 1, "", "pthread_getcpuclockid"], [363, 12, 1, "", "sleep"], [363, 12, 1, "", "strftime"], [363, 12, 1, "", "strptime"], [363, 11, 1, "", "struct_time"], [363, 12, 1, "", "thread_time"], [363, 12, 1, "", "thread_time_ns"], [363, 12, 1, "", "time"], [363, 12, 1, "", "time_ns"], [363, 9, 1, "", "timezone"], [363, 9, 1, "", "tzname"], [363, 12, 1, "", "tzset"]], "time.struct_time": [[363, 7, 1, "", "tm_day"], [363, 7, 1, "", "tm_gmtoff"], [363, 7, 1, "", "tm_hour"], [363, 7, 1, "", "tm_isdst"], [363, 7, 1, "", "tm_min"], [363, 7, 1, "", "tm_mon"], [363, 7, 1, "", "tm_sec"], [363, 7, 1, "", "tm_wday"], [363, 7, 1, "", "tm_yday"], [363, 7, 1, "", "tm_year"], [363, 7, 1, "", "tm_zone"]], "timeit": [[364, 11, 1, "", "Timer"], [364, 12, 1, "", "default_timer"], [364, 12, 1, "", "repeat"], [364, 12, 1, "", "timeit"], [364, 14, 1, "cmdoption-timeit-h", "--help"], [364, 14, 1, "cmdoption-timeit-n", "--number"], [364, 14, 1, "cmdoption-timeit-p", "--process"], [364, 14, 1, "cmdoption-timeit-r", "--repeat"], [364, 14, 1, "cmdoption-timeit-s", "--setup"], [364, 14, 1, "cmdoption-timeit-u", "--unit"], [364, 14, 1, "cmdoption-timeit-v", "--verbose"], [364, 14, 1, "cmdoption-timeit-h", "-h"], [364, 14, 1, "cmdoption-timeit-n", "-n"], [364, 14, 1, "cmdoption-timeit-p", "-p"], [364, 14, 1, "cmdoption-timeit-r", "-r"], [364, 14, 1, "cmdoption-timeit-s", "-s"], [364, 14, 1, "cmdoption-timeit-u", "-u"], [364, 14, 1, "cmdoption-timeit-v", "-v"]], "timeit.Timer": [[364, 8, 1, "", "autorange"], [364, 8, 1, "", "print_exc"], [364, 8, 1, "", "repeat"], [364, 8, 1, "", "timeit"]], "tkinter": [[366, 12, 1, "", "Tcl"], [366, 11, 1, "", "Tk"], [367, 10, 0, "-", "colorchooser"], [186, 10, 0, "-", "commondialog"], [368, 10, 0, "-", "dnd"], [186, 10, 0, "-", "filedialog"], [369, 10, 0, "-", "font"], [370, 10, 0, "-", "messagebox"], [371, 10, 0, "-", "scrolledtext"], [186, 10, 0, "-", "simpledialog"], [372, 10, 0, "-", "tix"], [373, 10, 0, "-", "ttk"]], "tkinter.Tk": [[366, 7, 1, "", "children"], [366, 7, 1, "", "master"], [366, 7, 1, "", "tk"]], "tkinter.colorchooser": [[367, 11, 1, "", "Chooser"], [367, 12, 1, "", "askcolor"]], "tkinter.commondialog": [[186, 11, 1, "", "Dialog"]], "tkinter.commondialog.Dialog": [[186, 8, 1, "", "show"]], "tkinter.dnd": [[368, 11, 1, "", "DndHandler"], [368, 12, 1, "", "dnd_start"]], "tkinter.dnd.DndHandler": [[368, 8, 1, "", "cancel"], [368, 8, 1, "", "finish"], [368, 8, 1, "", "on_motion"], [368, 8, 1, "", "on_release"]], "tkinter.filedialog": [[186, 11, 1, "", "Directory"], [186, 11, 1, "", "FileDialog"], [186, 11, 1, "", "LoadFileDialog"], [186, 11, 1, "", "Open"], [186, 11, 1, "", "SaveAs"], [186, 11, 1, "", "SaveFileDialog"], [186, 12, 1, "", "askdirectory"], [186, 12, 1, "", "askopenfile"], [186, 12, 1, "", "askopenfilename"], [186, 12, 1, "", "askopenfilenames"], [186, 12, 1, "", "askopenfiles"], [186, 12, 1, "", "asksaveasfile"], [186, 12, 1, "", "asksaveasfilename"]], "tkinter.filedialog.FileDialog": [[186, 8, 1, "", "cancel_command"], [186, 8, 1, "", "dirs_double_event"], [186, 8, 1, "", "dirs_select_event"], [186, 8, 1, "", "files_double_event"], [186, 8, 1, "", "files_select_event"], [186, 8, 1, "", "filter_command"], [186, 8, 1, "", "get_filter"], [186, 8, 1, "", "get_selection"], [186, 8, 1, "", "go"], [186, 8, 1, "", "ok_event"], [186, 8, 1, "", "quit"], [186, 8, 1, "", "set_filter"], [186, 8, 1, "", "set_selection"]], "tkinter.filedialog.LoadFileDialog": [[186, 8, 1, "", "ok_command"]], "tkinter.filedialog.SaveFileDialog": [[186, 8, 1, "", "ok_command"]], "tkinter.font": [[369, 9, 1, "", "BOLD"], [369, 11, 1, "", "Font"], [369, 9, 1, "", "ITALIC"], [369, 9, 1, "", "NORMAL"], [369, 9, 1, "", "ROMAN"], [369, 12, 1, "", "families"], [369, 12, 1, "", "names"], [369, 12, 1, "", "nametofont"]], "tkinter.font.Font": [[369, 8, 1, "", "actual"], [369, 8, 1, "", "cget"], [369, 8, 1, "", "config"], [369, 8, 1, "", "copy"], [369, 8, 1, "", "measure"], [369, 8, 1, "", "metrics"]], "tkinter.messagebox": [[370, 9, 1, "", "ABORT"], [370, 9, 1, "", "ABORTRETRYIGNORE"], [370, 9, 1, "", "CANCEL"], [370, 9, 1, "", "ERROR"], [370, 9, 1, "", "IGNORE"], [370, 9, 1, "", "INFO"], [370, 11, 1, "", "Message"], [370, 9, 1, "", "NO"], [370, 9, 1, "", "OK"], [370, 9, 1, "", "OKCANCEL"], [370, 9, 1, "", "QUESTION"], [370, 9, 1, "", "RETRY"], [370, 9, 1, "", "RETRYCANCEL"], [370, 9, 1, "", "WARNING"], [370, 9, 1, "", "YES"], [370, 9, 1, "", "YESNO"], [370, 9, 1, "", "YESNOCANCEL"], [370, 12, 1, "", "askokcancel"], [370, 12, 1, "", "askquestion"], [370, 12, 1, "", "askretrycancel"], [370, 12, 1, "", "askyesno"], [370, 12, 1, "", "askyesnocancel"], [370, 12, 1, "", "showerror"], [370, 12, 1, "", "showinfo"], [370, 12, 1, "", "showwarning"]], "tkinter.messagebox.Message": [[370, 8, 1, "", "show"]], "tkinter.scrolledtext": [[371, 11, 1, "", "ScrolledText"]], "tkinter.scrolledtext.ScrolledText": [[371, 7, 1, "", "frame"], [371, 7, 1, "", "vbar"]], "tkinter.simpledialog": [[186, 11, 1, "", "Dialog"], [186, 12, 1, "", "askfloat"], [186, 12, 1, "", "askinteger"], [186, 12, 1, "", "askstring"]], "tkinter.simpledialog.Dialog": [[186, 8, 1, "", "body"], [186, 8, 1, "", "buttonbox"]], "tkinter.tix": [[372, 11, 1, "", "Balloon"], [372, 11, 1, "", "ButtonBox"], [372, 11, 1, "", "CheckList"], [372, 11, 1, "", "ComboBox"], [372, 11, 1, "", "Control"], [372, 11, 1, "", "DirList"], [372, 11, 1, "", "DirSelectBox"], [372, 11, 1, "", "DirSelectDialog"], [372, 11, 1, "", "DirTree"], [372, 11, 1, "", "ExFileSelectBox"], [372, 11, 1, "", "FileEntry"], [372, 11, 1, "", "FileSelectBox"], [372, 11, 1, "", "Form"], [372, 11, 1, "", "HList"], [372, 11, 1, "", "InputOnly"], [372, 11, 1, "", "LabelEntry"], [372, 11, 1, "", "LabelFrame"], [372, 11, 1, "", "ListNoteBook"], [372, 11, 1, "", "Meter"], [372, 11, 1, "", "NoteBook"], [372, 11, 1, "", "OptionMenu"], [372, 11, 1, "", "PanedWindow"], [372, 11, 1, "", "PopupMenu"], [372, 11, 1, "", "Select"], [372, 11, 1, "", "StdButtonBox"], [372, 11, 1, "", "TList"], [372, 11, 1, "", "Tk"], [372, 11, 1, "", "Tree"], [372, 11, 1, "", "tixCommand"]], "tkinter.tix.tixCommand": [[372, 8, 1, "", "tix_addbitmapdir"], [372, 8, 1, "", "tix_cget"], [372, 8, 1, "", "tix_configure"], [372, 8, 1, "", "tix_filedialog"], [372, 8, 1, "", "tix_getbitmap"], [372, 8, 1, "", "tix_getimage"], [372, 8, 1, "", "tix_option_get"], [372, 8, 1, "", "tix_resetoptions"]], "tkinter.ttk": [[373, 11, 1, "", "Combobox"], [373, 11, 1, "", "Notebook"], [373, 11, 1, "", "Progressbar"], [373, 11, 1, "", "Spinbox"], [373, 11, 1, "", "Style"], [373, 11, 1, "", "Treeview"], [373, 11, 1, "", "Widget"]], "tkinter.ttk.Combobox": [[373, 8, 1, "", "current"], [373, 8, 1, "", "get"], [373, 8, 1, "", "set"]], "tkinter.ttk.Notebook": [[373, 8, 1, "", "add"], [373, 8, 1, "", "enable_traversal"], [373, 8, 1, "", "forget"], [373, 8, 1, "", "hide"], [373, 8, 1, "", "identify"], [373, 8, 1, "", "index"], [373, 8, 1, "", "insert"], [373, 8, 1, "", "select"], [373, 8, 1, "", "tab"], [373, 8, 1, "", "tabs"]], "tkinter.ttk.Progressbar": [[373, 8, 1, "", "start"], [373, 8, 1, "", "step"], [373, 8, 1, "", "stop"]], "tkinter.ttk.Spinbox": [[373, 8, 1, "", "get"], [373, 8, 1, "", "set"]], "tkinter.ttk.Style": [[373, 8, 1, "", "configure"], [373, 8, 1, "", "element_create"], [373, 8, 1, "", "element_names"], [373, 8, 1, "", "element_options"], [373, 8, 1, "", "layout"], [373, 8, 1, "", "lookup"], [373, 8, 1, "", "map"], [373, 8, 1, "", "theme_create"], [373, 8, 1, "", "theme_names"], [373, 8, 1, "", "theme_settings"], [373, 8, 1, "", "theme_use"]], "tkinter.ttk.Treeview": [[373, 8, 1, "", "bbox"], [373, 8, 1, "", "column"], [373, 8, 1, "", "delete"], [373, 8, 1, "", "detach"], [373, 8, 1, "", "exists"], [373, 8, 1, "", "focus"], [373, 8, 1, "", "get_children"], [373, 8, 1, "", "heading"], [373, 8, 1, "", "identify"], [373, 8, 1, "", "identify_column"], [373, 8, 1, "", "identify_element"], [373, 8, 1, "", "identify_region"], [373, 8, 1, "", "identify_row"], [373, 8, 1, "", "index"], [373, 8, 1, "", "insert"], [373, 8, 1, "", "item"], [373, 8, 1, "", "move"], [373, 8, 1, "", "next"], [373, 8, 1, "", "parent"], [373, 8, 1, "", "prev"], [373, 8, 1, "", "reattach"], [373, 8, 1, "", "see"], [373, 8, 1, "", "selection"], [373, 8, 1, "", "selection_add"], [373, 8, 1, "", "selection_remove"], [373, 8, 1, "", "selection_set"], [373, 8, 1, "", "selection_toggle"], [373, 8, 1, "", "set"], [373, 8, 1, "", "set_children"], [373, 8, 1, "", "tag_bind"], [373, 8, 1, "", "tag_configure"], [373, 8, 1, "", "tag_has"], [373, 8, 1, "", "xview"], [373, 8, 1, "", "yview"]], "tkinter.ttk.Widget": [[373, 8, 1, "", "identify"], [373, 8, 1, "", "instate"], [373, 8, 1, "", "state"]], "token": [[374, 9, 1, "", "AMPER"], [374, 9, 1, "", "AMPEREQUAL"], [374, 9, 1, "", "ASYNC"], [374, 9, 1, "", "AT"], [374, 9, 1, "", "ATEQUAL"], [374, 9, 1, "", "AWAIT"], [374, 9, 1, "", "CIRCUMFLEX"], [374, 9, 1, "", "CIRCUMFLEXEQUAL"], [374, 9, 1, "", "COLON"], [374, 9, 1, "", "COLONEQUAL"], [374, 9, 1, "", "COMMA"], [374, 9, 1, "", "COMMENT"], [374, 9, 1, "", "DEDENT"], [374, 9, 1, "", "DOT"], [374, 9, 1, "", "DOUBLESLASH"], [374, 9, 1, "", "DOUBLESLASHEQUAL"], [374, 9, 1, "", "DOUBLESTAR"], [374, 9, 1, "", "DOUBLESTAREQUAL"], [374, 9, 1, "", "ELLIPSIS"], [374, 9, 1, "", "ENCODING"], [374, 9, 1, "", "ENDMARKER"], [374, 9, 1, "", "EQEQUAL"], [374, 9, 1, "", "EQUAL"], [374, 9, 1, "", "ERRORTOKEN"], [374, 9, 1, "", "EXCLAMATION"], [374, 9, 1, "", "FSTRING_END"], [374, 9, 1, "", "FSTRING_MIDDLE"], [374, 9, 1, "", "FSTRING_START"], [374, 9, 1, "", "GREATER"], [374, 9, 1, "", "GREATEREQUAL"], [374, 9, 1, "", "INDENT"], [374, 12, 1, "", "ISEOF"], [374, 12, 1, "", "ISNONTERMINAL"], [374, 12, 1, "", "ISTERMINAL"], [374, 9, 1, "", "LBRACE"], [374, 9, 1, "", "LEFTSHIFT"], [374, 9, 1, "", "LEFTSHIFTEQUAL"], [374, 9, 1, "", "LESS"], [374, 9, 1, "", "LESSEQUAL"], [374, 9, 1, "", "LPAR"], [374, 9, 1, "", "LSQB"], [374, 9, 1, "", "MINEQUAL"], [374, 9, 1, "", "MINUS"], [374, 9, 1, "", "NAME"], [374, 9, 1, "", "NEWLINE"], [374, 9, 1, "", "NL"], [374, 9, 1, "", "NOTEQUAL"], [374, 9, 1, "", "NT_OFFSET"], [374, 9, 1, "", "NUMBER"], [374, 9, 1, "", "N_TOKENS"], [374, 9, 1, "", "OP"], [374, 9, 1, "", "PERCENT"], [374, 9, 1, "", "PERCENTEQUAL"], [374, 9, 1, "", "PLUS"], [374, 9, 1, "", "PLUSEQUAL"], [374, 9, 1, "", "RARROW"], [374, 9, 1, "", "RBRACE"], [374, 9, 1, "", "RIGHTSHIFT"], [374, 9, 1, "", "RIGHTSHIFTEQUAL"], [374, 9, 1, "", "RPAR"], [374, 9, 1, "", "RSQB"], [374, 9, 1, "", "SEMI"], [374, 9, 1, "", "SLASH"], [374, 9, 1, "", "SLASHEQUAL"], [374, 9, 1, "", "SOFT_KEYWORD"], [374, 9, 1, "", "STAR"], [374, 9, 1, "", "STAREQUAL"], [374, 9, 1, "", "STRING"], [374, 9, 1, "", "TILDE"], [374, 9, 1, "", "TYPE_COMMENT"], [374, 9, 1, "", "TYPE_IGNORE"], [374, 9, 1, "", "VBAR"], [374, 9, 1, "", "VBAREQUAL"], [374, 9, 1, "", "tok_name"]], "tokenize": [[375, 6, 1, "", "TokenError"], [375, 12, 1, "", "detect_encoding"], [375, 12, 1, "", "generate_tokens"], [375, 12, 1, "", "open"], [375, 12, 1, "", "tokenize"], [375, 12, 1, "", "untokenize"], [375, 14, 1, "cmdoption-tokenize-e", "--exact"], [375, 14, 1, "cmdoption-tokenize-h", "--help"], [375, 14, 1, "cmdoption-tokenize-e", "-e"], [375, 14, 1, "cmdoption-tokenize-h", "-h"]], "tomllib": [[376, 6, 1, "", "TOMLDecodeError"], [376, 12, 1, "", "load"], [376, 12, 1, "", "loads"]], "trace": [[377, 11, 1, "", "CoverageResults"], [377, 11, 1, "", "Trace"], [377, 14, 1, "cmdoption-trace-c", "--count"], [377, 14, 1, "cmdoption-trace-C", "--coverdir"], [377, 14, 1, "cmdoption-trace-f", "--file"], [377, 14, 1, "cmdoption-trace-help", "--help"], [377, 14, 1, "cmdoption-trace-ignore-dir", "--ignore-dir"], [377, 14, 1, "cmdoption-trace-ignore-module", "--ignore-module"], [377, 14, 1, "cmdoption-trace-l", "--listfuncs"], [377, 14, 1, "cmdoption-trace-m", "--missing"], [377, 14, 1, "cmdoption-trace-R", "--no-report"], [377, 14, 1, "cmdoption-trace-r", "--report"], [377, 14, 1, "cmdoption-trace-s", "--summary"], [377, 14, 1, "cmdoption-trace-g", "--timing"], [377, 14, 1, "cmdoption-trace-t", "--trace"], [377, 14, 1, "cmdoption-trace-T", "--trackcalls"], [377, 14, 1, "cmdoption-trace-version", "--version"], [377, 14, 1, "cmdoption-trace-C", "-C"], [377, 14, 1, "cmdoption-trace-R", "-R"], [377, 14, 1, "cmdoption-trace-T", "-T"], [377, 14, 1, "cmdoption-trace-c", "-c"], [377, 14, 1, "cmdoption-trace-f", "-f"], [377, 14, 1, "cmdoption-trace-g", "-g"], [377, 14, 1, "cmdoption-trace-l", "-l"], [377, 14, 1, "cmdoption-trace-m", "-m"], [377, 14, 1, "cmdoption-trace-r", "-r"], [377, 14, 1, "cmdoption-trace-s", "-s"], [377, 14, 1, "cmdoption-trace-t", "-t"]], "trace.CoverageResults": [[377, 8, 1, "", "update"], [377, 8, 1, "", "write_results"]], "trace.Trace": [[377, 8, 1, "", "results"], [377, 8, 1, "", "run"], [377, 8, 1, "", "runctx"], [377, 8, 1, "", "runfunc"]], "traceback": [[378, 11, 1, "", "FrameSummary"], [378, 11, 1, "", "StackSummary"], [378, 11, 1, "", "TracebackException"], [378, 12, 1, "", "clear_frames"], [378, 12, 1, "", "extract_stack"], [378, 12, 1, "", "extract_tb"], [378, 12, 1, "", "format_exc"], [378, 12, 1, "", "format_exception"], [378, 12, 1, "", "format_exception_only"], [378, 12, 1, "", "format_list"], [378, 12, 1, "", "format_stack"], [378, 12, 1, "", "format_tb"], [378, 12, 1, "", "print_exc"], [378, 12, 1, "", "print_exception"], [378, 12, 1, "", "print_last"], [378, 12, 1, "", "print_stack"], [378, 12, 1, "", "print_tb"], [425, 7, 1, "", "tb_frame"], [425, 7, 1, "", "tb_lasti"], [425, 7, 1, "", "tb_lineno"], [425, 7, 1, "", "tb_next"], [378, 12, 1, "", "walk_stack"], [378, 12, 1, "", "walk_tb"]], "traceback.FrameSummary": [[378, 7, 1, "", "filename"], [378, 7, 1, "", "line"], [378, 7, 1, "", "lineno"], [378, 7, 1, "", "name"]], "traceback.StackSummary": [[378, 8, 1, "", "extract"], [378, 8, 1, "", "format"], [378, 8, 1, "", "format_frame_summary"], [378, 8, 1, "", "from_list"]], "traceback.TracebackException": [[378, 7, 1, "", "__cause__"], [378, 7, 1, "", "__context__"], [378, 7, 1, "", "__notes__"], [378, 7, 1, "", "__suppress_context__"], [378, 7, 1, "", "end_lineno"], [378, 7, 1, "", "end_offset"], [378, 7, 1, "", "exc_type"], [378, 7, 1, "", "exceptions"], [378, 7, 1, "", "filename"], [378, 8, 1, "", "format"], [378, 8, 1, "", "format_exception_only"], [378, 8, 1, "", "from_exception"], [378, 7, 1, "", "lineno"], [378, 7, 1, "", "msg"], [378, 7, 1, "", "offset"], [378, 8, 1, "", "print"], [378, 7, 1, "", "stack"], [378, 7, 1, "", "text"]], "tracemalloc": [[379, 11, 1, "", "DomainFilter"], [379, 11, 1, "", "Filter"], [379, 11, 1, "", "Frame"], [379, 11, 1, "", "Snapshot"], [379, 11, 1, "", "Statistic"], [379, 11, 1, "", "StatisticDiff"], [379, 11, 1, "", "Trace"], [379, 11, 1, "", "Traceback"], [379, 12, 1, "", "clear_traces"], [379, 12, 1, "", "get_object_traceback"], [379, 12, 1, "", "get_traceback_limit"], [379, 12, 1, "", "get_traced_memory"], [379, 12, 1, "", "get_tracemalloc_memory"], [379, 12, 1, "", "is_tracing"], [379, 12, 1, "", "reset_peak"], [379, 12, 1, "", "start"], [379, 12, 1, "", "stop"], [379, 12, 1, "", "take_snapshot"]], "tracemalloc.DomainFilter": [[379, 7, 1, "", "domain"], [379, 7, 1, "", "inclusive"]], "tracemalloc.Filter": [[379, 7, 1, "", "all_frames"], [379, 7, 1, "", "domain"], [379, 7, 1, "", "filename_pattern"], [379, 7, 1, "", "inclusive"], [379, 7, 1, "", "lineno"]], "tracemalloc.Frame": [[379, 7, 1, "", "filename"], [379, 7, 1, "", "lineno"]], "tracemalloc.Snapshot": [[379, 8, 1, "", "compare_to"], [379, 8, 1, "", "dump"], [379, 8, 1, "", "filter_traces"], [379, 8, 1, "", "load"], [379, 8, 1, "", "statistics"], [379, 7, 1, "", "traceback_limit"], [379, 7, 1, "", "traces"]], "tracemalloc.Statistic": [[379, 7, 1, "", "count"], [379, 7, 1, "", "size"], [379, 7, 1, "", "traceback"]], "tracemalloc.StatisticDiff": [[379, 7, 1, "", "count"], [379, 7, 1, "", "count_diff"], [379, 7, 1, "", "size"], [379, 7, 1, "", "size_diff"], [379, 7, 1, "", "traceback"]], "tracemalloc.Trace": [[379, 7, 1, "", "domain"], [379, 7, 1, "", "size"], [379, 7, 1, "", "traceback"]], "tracemalloc.Traceback": [[379, 8, 1, "", "format"], [379, 7, 1, "", "total_nframe"]], "tty": [[380, 12, 1, "", "cfmakecbreak"], [380, 12, 1, "", "cfmakeraw"], [380, 12, 1, "", "setcbreak"], [380, 12, 1, "", "setraw"]], "turtle": [[381, 11, 1, "", "RawPen"], [381, 11, 1, "", "RawTurtle"], [381, 11, 1, "", "Screen"], [381, 11, 1, "", "ScrolledCanvas"], [381, 11, 1, "", "Shape"], [381, 11, 1, "", "Turtle"], [381, 11, 1, "", "TurtleScreen"], [381, 11, 1, "", "Vec2D"], [381, 12, 1, "", "addshape"], [381, 12, 1, "", "back"], [381, 12, 1, "", "backward"], [381, 12, 1, "", "begin_fill"], [381, 12, 1, "", "begin_poly"], [381, 12, 1, "", "bgcolor"], [381, 12, 1, "", "bgpic"], [381, 12, 1, "", "bk"], [381, 12, 1, "", "bye"], [381, 12, 1, "", "circle"], [381, 12, 1, "", "clear"], [381, 12, 1, "", "clearscreen"], [381, 12, 1, "", "clearstamp"], [381, 12, 1, "", "clearstamps"], [381, 12, 1, "", "clone"], [381, 12, 1, "", "color"], [381, 12, 1, "", "colormode"], [381, 12, 1, "", "degrees"], [381, 12, 1, "", "delay"], [381, 12, 1, "", "distance"], [381, 12, 1, "", "done"], [381, 12, 1, "", "dot"], [381, 12, 1, "", "down"], [381, 12, 1, "", "end_fill"], [381, 12, 1, "", "end_poly"], [381, 12, 1, "", "exitonclick"], [381, 12, 1, "", "fd"], [381, 12, 1, "", "fillcolor"], [381, 12, 1, "", "filling"], [381, 12, 1, "", "forward"], [381, 12, 1, "", "get_poly"], [381, 12, 1, "", "get_shapepoly"], [381, 12, 1, "", "getcanvas"], [381, 12, 1, "", "getpen"], [381, 12, 1, "", "getscreen"], [381, 12, 1, "", "getshapes"], [381, 12, 1, "", "getturtle"], [381, 12, 1, "", "goto"], [381, 12, 1, "", "heading"], [381, 12, 1, "", "hideturtle"], [381, 12, 1, "", "home"], [381, 12, 1, "", "ht"], [381, 12, 1, "", "isdown"], [381, 12, 1, "", "isvisible"], [381, 12, 1, "", "left"], [381, 12, 1, "", "listen"], [381, 12, 1, "", "lt"], [381, 12, 1, "", "mainloop"], [381, 12, 1, "", "mode"], [381, 12, 1, "", "numinput"], [381, 12, 1, "", "onclick"], [381, 12, 1, "", "ondrag"], [381, 12, 1, "", "onkey"], [381, 12, 1, "", "onkeypress"], [381, 12, 1, "", "onkeyrelease"], [381, 12, 1, "", "onrelease"], [381, 12, 1, "", "onscreenclick"], [381, 12, 1, "", "ontimer"], [381, 12, 1, "", "pd"], [381, 12, 1, "", "pen"], [381, 12, 1, "", "pencolor"], [381, 12, 1, "", "pendown"], [381, 12, 1, "", "pensize"], [381, 12, 1, "", "penup"], [381, 12, 1, "", "pos"], [381, 12, 1, "", "position"], [381, 12, 1, "", "pu"], [381, 12, 1, "", "radians"], [381, 12, 1, "", "register_shape"], [381, 12, 1, "", "reset"], [381, 12, 1, "", "resetscreen"], [381, 12, 1, "", "resizemode"], [381, 12, 1, "", "right"], [381, 12, 1, "", "rt"], [381, 12, 1, "", "screensize"], [381, 12, 1, "", "seth"], [381, 12, 1, "", "setheading"], [381, 12, 1, "", "setpos"], [381, 12, 1, "", "setposition"], [381, 12, 1, "", "settiltangle"], [381, 12, 1, "", "setundobuffer"], [381, 12, 1, "", "setup"], [381, 12, 1, "", "setworldcoordinates"], [381, 12, 1, "", "setx"], [381, 12, 1, "", "sety"], [381, 12, 1, "", "shape"], [381, 12, 1, "", "shapesize"], [381, 12, 1, "", "shapetransform"], [381, 12, 1, "", "shearfactor"], [381, 12, 1, "", "showturtle"], [381, 12, 1, "", "speed"], [381, 12, 1, "", "st"], [381, 12, 1, "", "stamp"], [381, 12, 1, "", "teleport"], [381, 12, 1, "", "textinput"], [381, 12, 1, "", "tilt"], [381, 12, 1, "", "tiltangle"], [381, 12, 1, "", "title"], [381, 12, 1, "", "towards"], [381, 12, 1, "", "tracer"], [381, 12, 1, "", "turtles"], [381, 12, 1, "", "turtlesize"], [381, 12, 1, "", "undo"], [381, 12, 1, "", "undobufferentries"], [381, 12, 1, "", "up"], [381, 12, 1, "", "update"], [381, 12, 1, "", "width"], [381, 12, 1, "", "window_height"], [381, 12, 1, "", "window_width"], [381, 12, 1, "", "write"], [381, 12, 1, "", "write_docstringdict"], [381, 12, 1, "", "xcor"], [381, 12, 1, "", "ycor"]], "turtle.Shape": [[381, 8, 1, "", "addcomponent"]], "types": [[382, 9, 1, "", "AsyncGeneratorType"], [382, 9, 1, "", "BuiltinFunctionType"], [382, 9, 1, "", "BuiltinMethodType"], [382, 9, 1, "", "CellType"], [382, 9, 1, "", "ClassMethodDescriptorType"], [382, 11, 1, "", "CodeType"], [382, 9, 1, "", "CoroutineType"], [382, 12, 1, "", "DynamicClassAttribute"], [382, 9, 1, "", "EllipsisType"], [382, 9, 1, "", "FrameType"], [382, 9, 1, "", "FunctionType"], [382, 9, 1, "", "GeneratorType"], [382, 11, 1, "", "GenericAlias"], [382, 9, 1, "", "GetSetDescriptorType"], [382, 9, 1, "", "LambdaType"], [382, 11, 1, "", "MappingProxyType"], [382, 9, 1, "", "MemberDescriptorType"], [382, 9, 1, "", "MethodDescriptorType"], [382, 9, 1, "", "MethodType"], [382, 9, 1, "", "MethodWrapperType"], [382, 11, 1, "", "ModuleType"], [382, 9, 1, "", "NoneType"], [382, 9, 1, "", "NotImplementedType"], [382, 11, 1, "", "SimpleNamespace"], [382, 11, 1, "", "TracebackType"], [382, 11, 1, "", "UnionType"], [382, 9, 1, "", "WrapperDescriptorType"], [382, 12, 1, "", "coroutine"], [382, 12, 1, "", "get_original_bases"], [382, 12, 1, "", "new_class"], [382, 12, 1, "", "prepare_class"], [382, 12, 1, "", "resolve_bases"]], "types.CodeType": [[382, 8, 1, "", "replace"]], "types.MappingProxyType": [[382, 8, 1, "", "copy"], [382, 8, 1, "", "get"], [382, 8, 1, "", "items"], [382, 8, 1, "", "keys"], [382, 8, 1, "", "values"]], "types.ModuleType": [[382, 7, 1, "", "__doc__"], [382, 7, 1, "", "__loader__"], [382, 7, 1, "", "__name__"], [382, 7, 1, "", "__package__"], [382, 7, 1, "", "__spec__"]], "typing": [[383, 11, 1, "", "AbstractSet"], [383, 9, 1, "", "Annotated"], [383, 9, 1, "", "Any"], [383, 9, 1, "", "AnyStr"], [383, 11, 1, "", "AsyncContextManager"], [383, 11, 1, "", "AsyncGenerator"], [383, 11, 1, "", "AsyncIterable"], [383, 11, 1, "", "AsyncIterator"], [383, 11, 1, "", "Awaitable"], [383, 11, 1, "", "BinaryIO"], [383, 11, 1, "", "ByteString"], [383, 9, 1, "", "Callable"], [383, 11, 1, "", "ChainMap"], [383, 9, 1, "", "ClassVar"], [383, 11, 1, "", "Collection"], [383, 9, 1, "", "Concatenate"], [383, 11, 1, "", "Container"], [383, 11, 1, "", "ContextManager"], [383, 11, 1, "", "Coroutine"], [383, 11, 1, "", "Counter"], [383, 11, 1, "", "DefaultDict"], [383, 11, 1, "", "Deque"], [383, 11, 1, "", "Dict"], [383, 9, 1, "", "Final"], [383, 11, 1, "", "ForwardRef"], [383, 11, 1, "", "FrozenSet"], [383, 11, 1, "", "Generator"], [383, 11, 1, "", "Generic"], [383, 11, 1, "", "Hashable"], [383, 11, 1, "", "IO"], [383, 11, 1, "", "ItemsView"], [383, 11, 1, "", "Iterable"], [383, 11, 1, "", "Iterator"], [383, 11, 1, "", "KeysView"], [383, 11, 1, "", "List"], [383, 9, 1, "", "Literal"], [383, 9, 1, "", "LiteralString"], [383, 11, 1, "", "Mapping"], [383, 11, 1, "", "MappingView"], [383, 11, 1, "", "Match"], [383, 11, 1, "", "MutableMapping"], [383, 11, 1, "", "MutableSequence"], [383, 11, 1, "", "MutableSet"], [383, 11, 1, "", "NamedTuple"], [383, 9, 1, "", "Never"], [383, 11, 1, "", "NewType"], [383, 9, 1, "", "NoReturn"], [383, 9, 1, "", "NotRequired"], [383, 9, 1, "", "Optional"], [383, 11, 1, "", "OrderedDict"], [383, 11, 1, "", "ParamSpec"], [383, 9, 1, "", "ParamSpecArgs"], [383, 9, 1, "", "ParamSpecKwargs"], [383, 11, 1, "", "Pattern"], [383, 11, 1, "", "Protocol"], [383, 9, 1, "", "Required"], [383, 11, 1, "", "Reversible"], [383, 9, 1, "", "Self"], [383, 11, 1, "", "Sequence"], [383, 11, 1, "", "Set"], [383, 11, 1, "", "Sized"], [383, 11, 1, "", "SupportsAbs"], [383, 11, 1, "", "SupportsBytes"], [383, 11, 1, "", "SupportsComplex"], [383, 11, 1, "", "SupportsFloat"], [383, 11, 1, "", "SupportsIndex"], [383, 11, 1, "", "SupportsInt"], [383, 11, 1, "", "SupportsRound"], [383, 9, 1, "", "TYPE_CHECKING"], [383, 11, 1, "", "Text"], [383, 11, 1, "", "TextIO"], [383, 9, 1, "", "Tuple"], [383, 11, 1, "", "Type"], [383, 9, 1, "", "TypeAlias"], [383, 11, 1, "", "TypeAliasType"], [383, 9, 1, "", "TypeGuard"], [383, 11, 1, "", "TypeVar"], [383, 11, 1, "", "TypeVarTuple"], [383, 11, 1, "", "TypedDict"], [383, 9, 1, "", "Union"], [383, 9, 1, "", "Unpack"], [383, 11, 1, "", "ValuesView"], [383, 12, 1, "", "assert_never"], [383, 12, 1, "", "assert_type"], [383, 12, 1, "", "cast"], [383, 12, 1, "", "clear_overloads"], [383, 12, 1, "", "dataclass_transform"], [383, 12, 1, "", "final"], [383, 12, 1, "", "get_args"], [383, 12, 1, "", "get_origin"], [383, 12, 1, "", "get_overloads"], [383, 12, 1, "", "get_type_hints"], [383, 12, 1, "", "is_typeddict"], [383, 12, 1, "", "no_type_check"], [383, 12, 1, "", "no_type_check_decorator"], [383, 12, 1, "", "overload"], [383, 12, 1, "", "override"], [383, 12, 1, "", "reveal_type"], [383, 12, 1, "", "runtime_checkable"], [383, 12, 1, "", "type_check_only"]], "typing.NewType": [[383, 7, 1, "", "__module__"], [383, 7, 1, "", "__name__"], [383, 7, 1, "", "__supertype__"]], "typing.ParamSpec": [[383, 7, 1, "", "__name__"], [383, 7, 1, "", "args"], [383, 7, 1, "", "kwargs"]], "typing.TypeAliasType": [[383, 7, 1, "", "__module__"], [383, 7, 1, "", "__name__"], [383, 7, 1, "", "__type_params__"], [383, 7, 1, "", "__value__"]], "typing.TypeVar": [[383, 7, 1, "", "__bound__"], [383, 7, 1, "", "__constraints__"], [383, 7, 1, "", "__contravariant__"], [383, 7, 1, "", "__covariant__"], [383, 7, 1, "", "__infer_variance__"], [383, 7, 1, "", "__name__"]], "typing.TypeVarTuple": [[383, 7, 1, "", "__name__"]], "typing.TypedDict": [[383, 7, 1, "", "__optional_keys__"], [383, 7, 1, "", "__required_keys__"], [383, 7, 1, "", "__total__"]], "unicodedata": [[384, 12, 1, "", "bidirectional"], [384, 12, 1, "", "category"], [384, 12, 1, "", "combining"], [384, 12, 1, "", "decimal"], [384, 12, 1, "", "decomposition"], [384, 12, 1, "", "digit"], [384, 12, 1, "", "east_asian_width"], [384, 12, 1, "", "is_normalized"], [384, 12, 1, "", "lookup"], [384, 12, 1, "", "mirrored"], [384, 12, 1, "", "name"], [384, 12, 1, "", "normalize"], [384, 12, 1, "", "numeric"], [384, 9, 1, "", "ucd_3_2_0"], [384, 9, 1, "", "unidata_version"]], "unittest": [[385, 11, 1, "", "FunctionTestCase"], [385, 11, 1, "", "IsolatedAsyncioTestCase"], [385, 6, 1, "", "SkipTest"], [385, 11, 1, "", "TestCase"], [385, 11, 1, "", "TestLoader"], [385, 11, 1, "", "TestResult"], [385, 11, 1, "", "TestSuite"], [385, 11, 1, "", "TextTestResult"], [385, 11, 1, "", "TextTestRunner"], [385, 12, 1, "", "addModuleCleanup"], [385, 9, 1, "", "defaultTestLoader"], [385, 12, 1, "", "doModuleCleanups"], [385, 8, 1, "", "enterModuleContext"], [385, 12, 1, "", "expectedFailure"], [385, 12, 1, "", "installHandler"], [385, 12, 1, "", "main"], [386, 10, 0, "-", "mock"], [385, 12, 1, "", "registerResult"], [385, 12, 1, "", "removeHandler"], [385, 12, 1, "", "removeResult"], [385, 12, 1, "", "skip"], [385, 12, 1, "", "skipIf"], [385, 12, 1, "", "skipUnless"], [385, 14, 1, "cmdoption-unittest-b", "--buffer"], [385, 14, 1, "cmdoption-unittest-c", "--catch"], [385, 14, 1, "cmdoption-unittest-durations", "--durations"], [385, 14, 1, "cmdoption-unittest-f", "--failfast"], [385, 14, 1, "cmdoption-unittest-locals", "--locals"], [385, 14, 1, "cmdoption-unittest-b", "-b"], [385, 14, 1, "cmdoption-unittest-c", "-c"], [385, 14, 1, "cmdoption-unittest-f", "-f"], [385, 14, 1, "cmdoption-unittest-k", "-k"]], "unittest.IsolatedAsyncioTestCase": [[385, 8, 1, "", "addAsyncCleanup"], [385, 8, 1, "", "asyncSetUp"], [385, 8, 1, "", "asyncTearDown"], [385, 8, 1, "", "enterAsyncContext"], [385, 8, 1, "", "run"]], "unittest.TestCase": [[385, 8, 1, "", "addClassCleanup"], [385, 8, 1, "", "addCleanup"], [385, 8, 1, "", "addTypeEqualityFunc"], [385, 8, 1, "", "assertAlmostEqual"], [385, 8, 1, "", "assertCountEqual"], [385, 8, 1, "", "assertDictEqual"], [385, 8, 1, "", "assertEqual"], [385, 8, 1, "", "assertFalse"], [385, 8, 1, "", "assertGreater"], [385, 8, 1, "", "assertGreaterEqual"], [385, 8, 1, "", "assertIn"], [385, 8, 1, "", "assertIs"], [385, 8, 1, "", "assertIsInstance"], [385, 8, 1, "", "assertIsNone"], [385, 8, 1, "", "assertIsNot"], [385, 8, 1, "", "assertIsNotNone"], [385, 8, 1, "", "assertLess"], [385, 8, 1, "", "assertLessEqual"], [385, 8, 1, "", "assertListEqual"], [385, 8, 1, "", "assertLogs"], [385, 8, 1, "", "assertMultiLineEqual"], [385, 8, 1, "", "assertNoLogs"], [385, 8, 1, "", "assertNotAlmostEqual"], [385, 8, 1, "", "assertNotEqual"], [385, 8, 1, "", "assertNotIn"], [385, 8, 1, "", "assertNotIsInstance"], [385, 8, 1, "", "assertNotRegex"], [385, 8, 1, "", "assertRaises"], [385, 8, 1, "", "assertRaisesRegex"], [385, 8, 1, "", "assertRegex"], [385, 8, 1, "", "assertSequenceEqual"], [385, 8, 1, "", "assertSetEqual"], [385, 8, 1, "", "assertTrue"], [385, 8, 1, "", "assertTupleEqual"], [385, 8, 1, "", "assertWarns"], [385, 8, 1, "", "assertWarnsRegex"], [385, 8, 1, "", "countTestCases"], [385, 8, 1, "", "debug"], [385, 8, 1, "", "defaultTestResult"], [385, 8, 1, "", "doClassCleanups"], [385, 8, 1, "", "doCleanups"], [385, 8, 1, "", "enterClassContext"], [385, 8, 1, "", "enterContext"], [385, 8, 1, "", "fail"], [385, 7, 1, "", "failureException"], [385, 8, 1, "", "id"], [385, 7, 1, "", "longMessage"], [385, 7, 1, "", "maxDiff"], [385, 7, 1, "", "output"], [385, 7, 1, "", "records"], [385, 8, 1, "", "run"], [385, 8, 1, "", "setUp"], [385, 8, 1, "", "setUpClass"], [385, 8, 1, "", "shortDescription"], [385, 8, 1, "", "skipTest"], [385, 8, 1, "", "subTest"], [385, 8, 1, "", "tearDown"], [385, 8, 1, "", "tearDownClass"]], "unittest.TestLoader": [[385, 8, 1, "", "discover"], [385, 7, 1, "", "errors"], [385, 8, 1, "", "getTestCaseNames"], [385, 8, 1, "", "loadTestsFromModule"], [385, 8, 1, "", "loadTestsFromName"], [385, 8, 1, "", "loadTestsFromNames"], [385, 8, 1, "", "loadTestsFromTestCase"], [385, 7, 1, "", "sortTestMethodsUsing"], [385, 7, 1, "", "suiteClass"], [385, 7, 1, "", "testMethodPrefix"], [385, 7, 1, "", "testNamePatterns"]], "unittest.TestResult": [[385, 8, 1, "", "addDuration"], [385, 8, 1, "", "addError"], [385, 8, 1, "", "addExpectedFailure"], [385, 8, 1, "", "addFailure"], [385, 8, 1, "", "addSkip"], [385, 8, 1, "", "addSubTest"], [385, 8, 1, "", "addSuccess"], [385, 8, 1, "", "addUnexpectedSuccess"], [385, 7, 1, "", "buffer"], [385, 7, 1, "", "collectedDurations"], [385, 7, 1, "", "errors"], [385, 7, 1, "", "expectedFailures"], [385, 7, 1, "", "failfast"], [385, 7, 1, "", "failures"], [385, 7, 1, "", "shouldStop"], [385, 7, 1, "", "skipped"], [385, 8, 1, "", "startTest"], [385, 8, 1, "", "startTestRun"], [385, 8, 1, "", "stop"], [385, 8, 1, "", "stopTest"], [385, 8, 1, "", "stopTestRun"], [385, 7, 1, "", "tb_locals"], [385, 7, 1, "", "testsRun"], [385, 7, 1, "", "unexpectedSuccesses"], [385, 8, 1, "", "wasSuccessful"]], "unittest.TestSuite": [[385, 8, 1, "", "__iter__"], [385, 8, 1, "", "addTest"], [385, 8, 1, "", "addTests"], [385, 8, 1, "", "countTestCases"], [385, 8, 1, "", "debug"], [385, 8, 1, "", "run"]], "unittest.TextTestRunner": [[385, 8, 1, "", "_makeResult"], [385, 8, 1, "", "run"]], "unittest.mock": [[386, 9, 1, "", "ANY"], [386, 11, 1, "", "AsyncMock"], [386, 9, 1, "", "DEFAULT"], [386, 9, 1, "", "FILTER_DIR"], [386, 11, 1, "", "MagicMock"], [386, 11, 1, "", "Mock"], [386, 11, 1, "", "NonCallableMagicMock"], [386, 11, 1, "", "NonCallableMock"], [386, 11, 1, "", "PropertyMock"], [386, 12, 1, "", "call"], [386, 12, 1, "", "create_autospec"], [386, 12, 1, "", "mock_open"], [386, 12, 1, "", "patch"], [386, 12, 1, "", "seal"], [386, 9, 1, "", "sentinel"]], "unittest.mock.AsyncMock": [[386, 8, 1, "", "assert_any_await"], [386, 8, 1, "", "assert_awaited"], [386, 8, 1, "", "assert_awaited_once"], [386, 8, 1, "", "assert_awaited_once_with"], [386, 8, 1, "", "assert_awaited_with"], [386, 8, 1, "", "assert_has_awaits"], [386, 8, 1, "", "assert_not_awaited"], [386, 7, 1, "", "await_args"], [386, 7, 1, "", "await_args_list"], [386, 7, 1, "", "await_count"], [386, 8, 1, "", "reset_mock"]], "unittest.mock.Mock": [[386, 7, 1, "", "__class__"], [386, 8, 1, "", "__dir__"], [386, 8, 1, "", "_get_child_mock"], [386, 8, 1, "", "assert_any_call"], [386, 8, 1, "", "assert_called"], [386, 8, 1, "", "assert_called_once"], [386, 8, 1, "", "assert_called_once_with"], [386, 8, 1, "", "assert_called_with"], [386, 8, 1, "", "assert_has_calls"], [386, 8, 1, "", "assert_not_called"], [386, 8, 1, "", "attach_mock"], [386, 7, 1, "", "call_args"], [386, 7, 1, "", "call_args_list"], [386, 7, 1, "", "call_count"], [386, 7, 1, "", "called"], [386, 8, 1, "", "configure_mock"], [386, 7, 1, "", "method_calls"], [386, 8, 1, "", "mock_add_spec"], [386, 7, 1, "", "mock_calls"], [386, 8, 1, "", "reset_mock"], [386, 7, 1, "", "return_value"], [386, 7, 1, "", "side_effect"]], "unittest.mock.call": [[386, 8, 1, "", "call_list"]], "unittest.mock.patch": [[386, 12, 1, "", "dict"], [386, 12, 1, "", "multiple"], [386, 12, 1, "", "object"], [386, 12, 1, "", "stopall"]], "urllib": [[390, 10, 0, "-", "error"], [391, 10, 0, "-", "parse"], [392, 10, 0, "-", "request"], [392, 10, 0, "-", "response"], [393, 10, 0, "-", "robotparser"]], "urllib.error": [[390, 6, 1, "", "ContentTooShortError"], [390, 6, 1, "", "HTTPError"], [390, 6, 1, "", "URLError"]], "urllib.error.ContentTooShortError": [[390, 7, 1, "", "content"]], "urllib.error.HTTPError": [[390, 7, 1, "", "code"], [390, 7, 1, "", "fp"], [390, 7, 1, "", "headers"], [390, 7, 1, "", "reason"], [390, 7, 1, "", "url"]], "urllib.error.URLError": [[390, 7, 1, "", "reason"]], "urllib.parse": [[391, 11, 1, "", "DefragResult"], [391, 11, 1, "", "DefragResultBytes"], [391, 11, 1, "", "ParseResult"], [391, 11, 1, "", "ParseResultBytes"], [391, 11, 1, "", "SplitResult"], [391, 11, 1, "", "SplitResultBytes"], [391, 12, 1, "", "parse_qs"], [391, 12, 1, "", "parse_qsl"], [391, 12, 1, "", "quote"], [391, 12, 1, "", "quote_from_bytes"], [391, 12, 1, "", "quote_plus"], [391, 12, 1, "", "unquote"], [391, 12, 1, "", "unquote_plus"], [391, 12, 1, "", "unquote_to_bytes"], [391, 12, 1, "", "unwrap"], [391, 12, 1, "", "urldefrag"], [391, 12, 1, "", "urlencode"], [391, 12, 1, "", "urljoin"], [391, 12, 1, "", "urlparse"], [391, 12, 1, "", "urlsplit"], [391, 12, 1, "", "urlunparse"], [391, 12, 1, "", "urlunsplit"]], "urllib.parse.urllib.parse.SplitResult": [[391, 8, 1, "", "geturl"]], "urllib.request": [[392, 11, 1, "", "AbstractBasicAuthHandler"], [392, 11, 1, "", "AbstractDigestAuthHandler"], [392, 11, 1, "", "BaseHandler"], [392, 11, 1, "", "CacheFTPHandler"], [392, 11, 1, "", "DataHandler"], [392, 11, 1, "", "FTPHandler"], [392, 11, 1, "", "FancyURLopener"], [392, 11, 1, "", "FileHandler"], [392, 11, 1, "", "HTTPBasicAuthHandler"], [392, 11, 1, "", "HTTPCookieProcessor"], [392, 11, 1, "", "HTTPDefaultErrorHandler"], [392, 11, 1, "", "HTTPDigestAuthHandler"], [392, 11, 1, "", "HTTPErrorProcessor"], [392, 11, 1, "", "HTTPHandler"], [392, 11, 1, "", "HTTPPasswordMgr"], [392, 11, 1, "", "HTTPPasswordMgrWithDefaultRealm"], [392, 11, 1, "", "HTTPPasswordMgrWithPriorAuth"], [392, 11, 1, "", "HTTPRedirectHandler"], [392, 11, 1, "", "HTTPSHandler"], [392, 11, 1, "", "OpenerDirector"], [392, 11, 1, "", "ProxyBasicAuthHandler"], [392, 11, 1, "", "ProxyDigestAuthHandler"], [392, 11, 1, "", "ProxyHandler"], [392, 11, 1, "", "Request"], [392, 11, 1, "", "URLopener"], [392, 11, 1, "", "UnknownHandler"], [392, 12, 1, "", "build_opener"], [392, 12, 1, "", "getproxies"], [392, 12, 1, "", "install_opener"], [392, 12, 1, "", "pathname2url"], [392, 12, 1, "", "url2pathname"], [392, 12, 1, "", "urlcleanup"], [392, 12, 1, "", "urlopen"], [392, 12, 1, "", "urlretrieve"]], "urllib.request.AbstractBasicAuthHandler": [[392, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.AbstractDigestAuthHandler": [[392, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.BaseHandler": [[392, 8, 1, "", "add_parent"], [392, 8, 1, "", "close"], [392, 8, 1, "", "default_open"], [392, 8, 1, "", "http_error_default"], [392, 7, 1, "", "parent"], [392, 8, 1, "", "unknown_open"]], "urllib.request.CacheFTPHandler": [[392, 8, 1, "", "setMaxConns"], [392, 8, 1, "", "setTimeout"]], "urllib.request.DataHandler": [[392, 8, 1, "", "data_open"]], "urllib.request.FTPHandler": [[392, 8, 1, "", "ftp_open"]], "urllib.request.FancyURLopener": [[392, 8, 1, "", "prompt_user_passwd"]], "urllib.request.FileHandler": [[392, 8, 1, "", "file_open"]], "urllib.request.HTTPBasicAuthHandler": [[392, 8, 1, "", "http_error_401"]], "urllib.request.HTTPCookieProcessor": [[392, 7, 1, "", "cookiejar"]], "urllib.request.HTTPDigestAuthHandler": [[392, 8, 1, "", "http_error_401"]], "urllib.request.HTTPErrorProcessor": [[392, 8, 1, "", "http_response"], [392, 8, 1, "", "https_response"]], "urllib.request.HTTPHandler": [[392, 8, 1, "", "http_open"]], "urllib.request.HTTPPasswordMgr": [[392, 8, 1, "", "add_password"], [392, 8, 1, "", "find_user_password"]], "urllib.request.HTTPPasswordMgrWithPriorAuth": [[392, 8, 1, "", "add_password"], [392, 8, 1, "", "find_user_password"], [392, 8, 1, "", "is_authenticated"], [392, 8, 1, "", "update_authenticated"]], "urllib.request.HTTPRedirectHandler": [[392, 8, 1, "", "http_error_301"], [392, 8, 1, "", "http_error_302"], [392, 8, 1, "", "http_error_303"], [392, 8, 1, "", "http_error_307"], [392, 8, 1, "", "http_error_308"], [392, 8, 1, "", "redirect_request"]], "urllib.request.HTTPSHandler": [[392, 8, 1, "", "https_open"]], "urllib.request.OpenerDirector": [[392, 8, 1, "", "add_handler"], [392, 8, 1, "", "error"], [392, 8, 1, "", "open"]], "urllib.request.ProxyBasicAuthHandler": [[392, 8, 1, "", "http_error_407"]], "urllib.request.ProxyDigestAuthHandler": [[392, 8, 1, "", "http_error_407"]], "urllib.request.Request": [[392, 8, 1, "", "add_header"], [392, 8, 1, "", "add_unredirected_header"], [392, 7, 1, "", "data"], [392, 7, 1, "", "full_url"], [392, 8, 1, "", "get_full_url"], [392, 8, 1, "", "get_header"], [392, 8, 1, "", "get_method"], [392, 8, 1, "", "has_header"], [392, 8, 1, "", "header_items"], [392, 7, 1, "", "host"], [392, 7, 1, "", "method"], [392, 7, 1, "", "origin_req_host"], [392, 8, 1, "", "remove_header"], [392, 7, 1, "", "selector"], [392, 8, 1, "", "set_proxy"], [392, 7, 1, "", "type"], [392, 7, 1, "", "unverifiable"]], "urllib.request.URLopener": [[392, 8, 1, "", "open"], [392, 8, 1, "", "open_unknown"], [392, 8, 1, "", "retrieve"], [392, 7, 1, "", "version"]], "urllib.request.UnknownHandler": [[392, 8, 1, "", "unknown_open"]], "urllib.response": [[392, 11, 1, "", "addinfourl"]], "urllib.response.addinfourl": [[392, 7, 1, "", "code"], [392, 8, 1, "", "getcode"], [392, 8, 1, "", "geturl"], [392, 7, 1, "", "headers"], [392, 8, 1, "", "info"], [392, 7, 1, "", "status"], [392, 7, 1, "", "url"]], "urllib.robotparser": [[393, 11, 1, "", "RobotFileParser"]], "urllib.robotparser.RobotFileParser": [[393, 8, 1, "", "can_fetch"], [393, 8, 1, "", "crawl_delay"], [393, 8, 1, "", "modified"], [393, 8, 1, "", "mtime"], [393, 8, 1, "", "parse"], [393, 8, 1, "", "read"], [393, 8, 1, "", "request_rate"], [393, 8, 1, "", "set_url"], [393, 8, 1, "", "site_maps"]], "uu": [[394, 6, 1, "", "Error"], [394, 12, 1, "", "decode"], [394, 12, 1, "", "encode"]], "uuid": [[395, 9, 1, "", "NAMESPACE_DNS"], [395, 9, 1, "", "NAMESPACE_OID"], [395, 9, 1, "", "NAMESPACE_URL"], [395, 9, 1, "", "NAMESPACE_X500"], [395, 9, 1, "", "RESERVED_FUTURE"], [395, 9, 1, "", "RESERVED_MICROSOFT"], [395, 9, 1, "", "RESERVED_NCS"], [395, 9, 1, "", "RFC_4122"], [395, 11, 1, "", "SafeUUID"], [395, 11, 1, "", "UUID"], [395, 12, 1, "", "getnode"], [395, 12, 1, "", "uuid1"], [395, 12, 1, "", "uuid3"], [395, 12, 1, "", "uuid4"], [395, 12, 1, "", "uuid5"], [395, 14, 1, "cmdoption-uuid-h", "--help"], [395, 14, 1, "cmdoption-uuid-name", "--name"], [395, 14, 1, "cmdoption-uuid-namespace", "--namespace"], [395, 14, 1, "cmdoption-uuid-uuid", "--uuid"], [395, 14, 1, "cmdoption-uuid-N", "-N"], [395, 14, 1, "cmdoption-uuid-h", "-h"], [395, 14, 1, "cmdoption-uuid-n", "-n"], [395, 14, 1, "cmdoption-uuid-u", "-u"]], "uuid.SafeUUID": [[395, 7, 1, "", "safe"], [395, 7, 1, "", "unknown"], [395, 7, 1, "", "unsafe"]], "uuid.UUID": [[395, 7, 1, "", "bytes"], [395, 7, 1, "", "bytes_le"], [395, 7, 1, "", "clock_seq"], [395, 7, 1, "", "clock_seq_hi_variant"], [395, 7, 1, "", "clock_seq_low"], [395, 7, 1, "", "fields"], [395, 7, 1, "", "hex"], [395, 7, 1, "", "int"], [395, 7, 1, "", "is_safe"], [395, 7, 1, "", "node"], [395, 7, 1, "", "time"], [395, 7, 1, "", "time_hi_version"], [395, 7, 1, "", "time_low"], [395, 7, 1, "", "time_mid"], [395, 7, 1, "", "urn"], [395, 7, 1, "", "variant"], [395, 7, 1, "", "version"]], "venv": [[396, 11, 1, "", "EnvBuilder"], [396, 12, 1, "", "create"]], "venv.EnvBuilder": [[396, 8, 1, "", "create"], [396, 8, 1, "", "create_configuration"], [396, 8, 1, "", "ensure_directories"], [396, 8, 1, "", "install_scripts"], [396, 8, 1, "", "post_setup"], [396, 8, 1, "", "setup_python"], [396, 8, 1, "", "setup_scripts"], [396, 8, 1, "", "upgrade_dependencies"]], "warnings": [[397, 11, 1, "", "catch_warnings"], [397, 12, 1, "", "filterwarnings"], [397, 12, 1, "", "formatwarning"], [397, 12, 1, "", "resetwarnings"], [397, 12, 1, "", "showwarning"], [397, 12, 1, "", "simplefilter"], [397, 12, 1, "", "warn"], [397, 12, 1, "", "warn_explicit"]], "wave": [[398, 6, 1, "", "Error"], [398, 11, 1, "", "Wave_read"], [398, 11, 1, "", "Wave_write"], [398, 12, 1, "", "open"]], "wave.Wave_read": [[398, 8, 1, "", "close"], [398, 8, 1, "", "getcompname"], [398, 8, 1, "", "getcomptype"], [398, 8, 1, "", "getframerate"], [398, 8, 1, "", "getmark"], [398, 8, 1, "", "getmarkers"], [398, 8, 1, "", "getnchannels"], [398, 8, 1, "", "getnframes"], [398, 8, 1, "", "getparams"], [398, 8, 1, "", "getsampwidth"], [398, 8, 1, "", "readframes"], [398, 8, 1, "", "rewind"], [398, 8, 1, "", "setpos"], [398, 8, 1, "", "tell"]], "wave.Wave_write": [[398, 8, 1, "", "close"], [398, 8, 1, "", "setcomptype"], [398, 8, 1, "", "setframerate"], [398, 8, 1, "", "setnchannels"], [398, 8, 1, "", "setnframes"], [398, 8, 1, "", "setparams"], [398, 8, 1, "", "setsampwidth"], [398, 8, 1, "", "tell"], [398, 8, 1, "", "writeframes"], [398, 8, 1, "", "writeframesraw"]], "weakref": [[399, 9, 1, "", "CallableProxyType"], [399, 9, 1, "", "ProxyType"], [399, 9, 1, "", "ProxyTypes"], [399, 9, 1, "", "ReferenceType"], [399, 11, 1, "", "WeakKeyDictionary"], [399, 11, 1, "", "WeakMethod"], [399, 11, 1, "", "WeakSet"], [399, 11, 1, "", "WeakValueDictionary"], [399, 11, 1, "", "finalize"], [399, 12, 1, "", "getweakrefcount"], [399, 12, 1, "", "getweakrefs"], [399, 12, 1, "", "proxy"], [399, 11, 1, "", "ref"]], "weakref.WeakKeyDictionary": [[399, 8, 1, "", "keyrefs"]], "weakref.WeakValueDictionary": [[399, 8, 1, "", "valuerefs"]], "weakref.finalize": [[399, 8, 1, "", "__call__"], [399, 7, 1, "", "alive"], [399, 7, 1, "", "atexit"], [399, 8, 1, "", "detach"], [399, 8, 1, "", "peek"]], "weakref.ref": [[399, 7, 1, "", "__callback__"]], "webbrowser": [[400, 6, 1, "", "Error"], [400, 12, 1, "", "get"], [400, 7, 1, "", "name"], [400, 12, 1, "", "open"], [400, 12, 1, "", "open_new"], [400, 12, 1, "", "open_new_tab"], [400, 12, 1, "", "register"]], "webbrowser.controller": [[400, 8, 1, "", "open"], [400, 8, 1, "", "open_new"], [400, 8, 1, "", "open_new_tab"]], "winreg": [[402, 12, 1, "", "CloseKey"], [402, 12, 1, "", "ConnectRegistry"], [402, 12, 1, "", "CreateKey"], [402, 12, 1, "", "CreateKeyEx"], [402, 12, 1, "", "DeleteKey"], [402, 12, 1, "", "DeleteKeyEx"], [402, 12, 1, "", "DeleteValue"], [402, 12, 1, "", "DisableReflectionKey"], [402, 12, 1, "", "EnableReflectionKey"], [402, 12, 1, "", "EnumKey"], [402, 12, 1, "", "EnumValue"], [402, 12, 1, "", "ExpandEnvironmentStrings"], [402, 12, 1, "", "FlushKey"], [402, 9, 1, "", "HKEY_CLASSES_ROOT"], [402, 9, 1, "", "HKEY_CURRENT_CONFIG"], [402, 9, 1, "", "HKEY_CURRENT_USER"], [402, 9, 1, "", "HKEY_DYN_DATA"], [402, 9, 1, "", "HKEY_LOCAL_MACHINE"], [402, 9, 1, "", "HKEY_PERFORMANCE_DATA"], [402, 9, 1, "", "HKEY_USERS"], [402, 9, 1, "", "KEY_ALL_ACCESS"], [402, 9, 1, "", "KEY_CREATE_LINK"], [402, 9, 1, "", "KEY_CREATE_SUB_KEY"], [402, 9, 1, "", "KEY_ENUMERATE_SUB_KEYS"], [402, 9, 1, "", "KEY_EXECUTE"], [402, 9, 1, "", "KEY_NOTIFY"], [402, 9, 1, "", "KEY_QUERY_VALUE"], [402, 9, 1, "", "KEY_READ"], [402, 9, 1, "", "KEY_SET_VALUE"], [402, 9, 1, "", "KEY_WOW64_32KEY"], [402, 9, 1, "", "KEY_WOW64_64KEY"], [402, 9, 1, "", "KEY_WRITE"], [402, 12, 1, "", "LoadKey"], [402, 12, 1, "", "OpenKey"], [402, 12, 1, "", "OpenKeyEx"], [402, 12, 1, "", "QueryInfoKey"], [402, 12, 1, "", "QueryReflectionKey"], [402, 12, 1, "", "QueryValue"], [402, 12, 1, "", "QueryValueEx"], [402, 9, 1, "", "REG_BINARY"], [402, 9, 1, "", "REG_DWORD"], [402, 9, 1, "", "REG_DWORD_BIG_ENDIAN"], [402, 9, 1, "", "REG_DWORD_LITTLE_ENDIAN"], [402, 9, 1, "", "REG_EXPAND_SZ"], [402, 9, 1, "", "REG_FULL_RESOURCE_DESCRIPTOR"], [402, 9, 1, "", "REG_LINK"], [402, 9, 1, "", "REG_MULTI_SZ"], [402, 9, 1, "", "REG_NONE"], [402, 9, 1, "", "REG_QWORD"], [402, 9, 1, "", "REG_QWORD_LITTLE_ENDIAN"], [402, 9, 1, "", "REG_RESOURCE_LIST"], [402, 9, 1, "", "REG_RESOURCE_REQUIREMENTS_LIST"], [402, 9, 1, "", "REG_SZ"], [402, 12, 1, "", "SaveKey"], [402, 12, 1, "", "SetValue"], [402, 12, 1, "", "SetValueEx"]], "winreg.PyHKEY": [[402, 8, 1, "", "Close"], [402, 8, 1, "", "Detach"], [402, 8, 1, "", "__enter__"], [402, 8, 1, "", "__exit__"]], "winsound": [[403, 12, 1, "", "Beep"], [403, 9, 1, "", "MB_ICONASTERISK"], [403, 9, 1, "", "MB_ICONEXCLAMATION"], [403, 9, 1, "", "MB_ICONHAND"], [403, 9, 1, "", "MB_ICONQUESTION"], [403, 9, 1, "", "MB_OK"], [403, 12, 1, "", "MessageBeep"], [403, 12, 1, "", "PlaySound"], [403, 9, 1, "", "SND_ALIAS"], [403, 9, 1, "", "SND_ASYNC"], [403, 9, 1, "", "SND_FILENAME"], [403, 9, 1, "", "SND_LOOP"], [403, 9, 1, "", "SND_MEMORY"], [403, 9, 1, "", "SND_NODEFAULT"], [403, 9, 1, "", "SND_NOSTOP"], [403, 9, 1, "", "SND_NOWAIT"], [403, 9, 1, "", "SND_PURGE"]], "wsgiref": [[404, 10, 0, "-", "handlers"], [404, 10, 0, "-", "headers"], [404, 10, 0, "-", "simple_server"], [404, 10, 0, "-", "types"], [404, 10, 0, "-", "util"], [404, 10, 0, "-", "validate"]], "wsgiref.handlers": [[404, 11, 1, "", "BaseCGIHandler"], [404, 11, 1, "", "BaseHandler"], [404, 11, 1, "", "CGIHandler"], [404, 11, 1, "", "IISCGIHandler"], [404, 11, 1, "", "SimpleHandler"], [404, 12, 1, "", "read_environ"]], "wsgiref.handlers.BaseHandler": [[404, 8, 1, "", "_flush"], [404, 8, 1, "", "_write"], [404, 8, 1, "", "add_cgi_vars"], [404, 7, 1, "", "error_body"], [404, 7, 1, "", "error_headers"], [404, 8, 1, "", "error_output"], [404, 7, 1, "", "error_status"], [404, 8, 1, "", "get_scheme"], [404, 8, 1, "", "get_stderr"], [404, 8, 1, "", "get_stdin"], [404, 7, 1, "", "http_version"], [404, 8, 1, "", "log_exception"], [404, 7, 1, "", "origin_server"], [404, 7, 1, "", "os_environ"], [404, 8, 1, "", "run"], [404, 8, 1, "", "sendfile"], [404, 7, 1, "", "server_software"], [404, 8, 1, "", "setup_environ"], [404, 7, 1, "", "traceback_limit"], [404, 7, 1, "", "wsgi_file_wrapper"], [404, 7, 1, "", "wsgi_multiprocess"], [404, 7, 1, "", "wsgi_multithread"], [404, 7, 1, "", "wsgi_run_once"]], "wsgiref.headers": [[404, 11, 1, "", "Headers"]], "wsgiref.headers.Headers": [[404, 8, 1, "", "add_header"], [404, 8, 1, "", "get_all"]], "wsgiref.simple_server": [[404, 11, 1, "", "WSGIRequestHandler"], [404, 11, 1, "", "WSGIServer"], [404, 12, 1, "", "demo_app"], [404, 12, 1, "", "make_server"]], "wsgiref.simple_server.WSGIRequestHandler": [[404, 8, 1, "", "get_environ"], [404, 8, 1, "", "get_stderr"], [404, 8, 1, "", "handle"]], "wsgiref.simple_server.WSGIServer": [[404, 8, 1, "", "get_app"], [404, 8, 1, "", "set_app"]], "wsgiref.types": [[404, 11, 1, "", "ErrorStream"], [404, 11, 1, "", "FileWrapper"], [404, 11, 1, "", "InputStream"], [404, 11, 1, "", "StartResponse"], [404, 9, 1, "", "WSGIApplication"], [404, 9, 1, "", "WSGIEnvironment"]], "wsgiref.util": [[404, 11, 1, "", "FileWrapper"], [404, 12, 1, "", "application_uri"], [404, 12, 1, "", "guess_scheme"], [404, 12, 1, "", "is_hop_by_hop"], [404, 12, 1, "", "request_uri"], [404, 12, 1, "", "setup_testing_defaults"], [404, 12, 1, "", "shift_path_info"]], "wsgiref.validate": [[404, 12, 1, "", "validator"]], "xdrlib": [[405, 6, 1, "", "ConversionError"], [405, 6, 1, "", "Error"], [405, 11, 1, "", "Packer"], [405, 11, 1, "", "Unpacker"]], "xdrlib.Packer": [[405, 8, 1, "", "get_buffer"], [405, 8, 1, "", "pack_array"], [405, 8, 1, "", "pack_bytes"], [405, 8, 1, "", "pack_double"], [405, 8, 1, "", "pack_farray"], [405, 8, 1, "", "pack_float"], [405, 8, 1, "", "pack_fopaque"], [405, 8, 1, "", "pack_fstring"], [405, 8, 1, "", "pack_list"], [405, 8, 1, "", "pack_opaque"], [405, 8, 1, "", "pack_string"], [405, 8, 1, "", "reset"]], "xdrlib.Unpacker": [[405, 8, 1, "", "done"], [405, 8, 1, "", "get_buffer"], [405, 8, 1, "", "get_position"], [405, 8, 1, "", "reset"], [405, 8, 1, "", "set_position"], [405, 8, 1, "", "unpack_array"], [405, 8, 1, "", "unpack_bytes"], [405, 8, 1, "", "unpack_double"], [405, 8, 1, "", "unpack_farray"], [405, 8, 1, "", "unpack_float"], [405, 8, 1, "", "unpack_fopaque"], [405, 8, 1, "", "unpack_fstring"], [405, 8, 1, "", "unpack_list"], [405, 8, 1, "", "unpack_opaque"], [405, 8, 1, "", "unpack_string"]], "xml": [[407, 10, 0, "-", "dom"], [411, 10, 0, "-", "sax"]], "xml.dom.Attr": [[407, 7, 1, "", "localName"], [407, 7, 1, "", "name"], [407, 7, 1, "", "prefix"], [407, 7, 1, "", "value"]], "xml.dom.Comment": [[407, 7, 1, "", "data"]], "xml.dom": [[407, 6, 1, "", "DOMException"], [407, 6, 1, "", "DomstringSizeErr"], [407, 9, 1, "", "EMPTY_NAMESPACE"], [407, 6, 1, "", "HierarchyRequestErr"], [407, 6, 1, "", "IndexSizeErr"], [407, 6, 1, "", "InuseAttributeErr"], [407, 6, 1, "", "InvalidAccessErr"], [407, 6, 1, "", "InvalidCharacterErr"], [407, 6, 1, "", "InvalidModificationErr"], [407, 6, 1, "", "InvalidStateErr"], [407, 6, 1, "", "NamespaceErr"], [407, 6, 1, "", "NoDataAllowedErr"], [407, 6, 1, "", "NoModificationAllowedErr"], [407, 6, 1, "", "NotFoundErr"], [407, 6, 1, "", "NotSupportedErr"], [407, 6, 1, "", "SyntaxErr"], [407, 6, 1, "", "WrongDocumentErr"], [407, 9, 1, "", "XHTML_NAMESPACE"], [407, 9, 1, "", "XMLNS_NAMESPACE"], [407, 9, 1, "", "XML_NAMESPACE"], [407, 12, 1, "", "getDOMImplementation"], [408, 10, 0, "-", "minidom"], [409, 10, 0, "-", "pulldom"], [407, 12, 1, "", "registerDOMImplementation"]], "xml.dom.DOMImplementation": [[407, 8, 1, "", "createDocument"], [407, 8, 1, "", "createDocumentType"], [407, 8, 1, "", "hasFeature"]], "xml.dom.Document": [[407, 8, 1, "", "createAttribute"], [407, 8, 1, "", "createAttributeNS"], [407, 8, 1, "", "createComment"], [407, 8, 1, "", "createElement"], [407, 8, 1, "", "createElementNS"], [407, 8, 1, "", "createProcessingInstruction"], [407, 8, 1, "", "createTextNode"], [407, 7, 1, "", "documentElement"], [407, 8, 1, "", "getElementsByTagName"], [407, 8, 1, "", "getElementsByTagNameNS"]], "xml.dom.DocumentType": [[407, 7, 1, "", "entities"], [407, 7, 1, "", "internalSubset"], [407, 7, 1, "", "name"], [407, 7, 1, "", "notations"], [407, 7, 1, "", "publicId"], [407, 7, 1, "", "systemId"]], "xml.dom.Element": [[407, 8, 1, "", "getAttribute"], [407, 8, 1, "", "getAttributeNS"], [407, 8, 1, "", "getAttributeNode"], [407, 8, 1, "", "getAttributeNodeNS"], [407, 8, 1, "", "getElementsByTagName"], [407, 8, 1, "", "getElementsByTagNameNS"], [407, 8, 1, "", "hasAttribute"], [407, 8, 1, "", "hasAttributeNS"], [407, 8, 1, "", "removeAttribute"], [407, 8, 1, "", "removeAttributeNS"], [407, 8, 1, "", "removeAttributeNode"], [407, 8, 1, "", "setAttribute"], [407, 8, 1, "", "setAttributeNS"], [407, 8, 1, "", "setAttributeNode"], [407, 8, 1, "", "setAttributeNodeNS"], [407, 7, 1, "", "tagName"]], "xml.dom.NamedNodeMap": [[407, 8, 1, "", "item"], [407, 7, 1, "", "length"]], "xml.dom.Node": [[407, 8, 1, "", "appendChild"], [407, 7, 1, "", "attributes"], [407, 7, 1, "", "childNodes"], [407, 8, 1, "", "cloneNode"], [407, 7, 1, "", "firstChild"], [407, 8, 1, "", "hasAttributes"], [407, 8, 1, "", "hasChildNodes"], [407, 8, 1, "", "insertBefore"], [407, 8, 1, "", "isSameNode"], [407, 7, 1, "", "lastChild"], [407, 7, 1, "", "localName"], [407, 7, 1, "", "namespaceURI"], [407, 7, 1, "", "nextSibling"], [407, 7, 1, "", "nodeName"], [407, 7, 1, "", "nodeType"], [407, 7, 1, "", "nodeValue"], [407, 8, 1, "", "normalize"], [407, 7, 1, "", "parentNode"], [407, 7, 1, "", "prefix"], [407, 7, 1, "", "previousSibling"], [407, 8, 1, "", "removeChild"], [407, 8, 1, "", "replaceChild"]], "xml.dom.NodeList": [[407, 8, 1, "", "item"], [407, 7, 1, "", "length"]], "xml.dom.ProcessingInstruction": [[407, 7, 1, "", "data"], [407, 7, 1, "", "target"]], "xml.dom.Text": [[407, 7, 1, "", "data"]], "xml.dom.minidom.Node": [[408, 8, 1, "", "toprettyxml"], [408, 8, 1, "", "toxml"], [408, 8, 1, "", "unlink"], [408, 8, 1, "", "writexml"]], "xml.dom.minidom": [[408, 12, 1, "", "parse"], [408, 12, 1, "", "parseString"]], "xml.dom.pulldom": [[409, 11, 1, "", "DOMEventStream"], [409, 11, 1, "", "PullDom"], [409, 11, 1, "", "SAX2DOM"], [409, 9, 1, "", "default_bufsize"], [409, 12, 1, "", "parse"], [409, 12, 1, "", "parseString"]], "xml.dom.pulldom.DOMEventStream": [[409, 8, 1, "", "expandNode"], [409, 8, 1, "", "getEvent"], [409, 8, 1, "", "reset"]], "xml.etree": [[410, 10, 0, "-", "ElementInclude"], [410, 10, 0, "-", "ElementTree"]], "xml.etree.ElementInclude": [[410, 12, 1, "", "default_loader"], [410, 12, 1, "", "include"]], "xml.etree.ElementTree": [[410, 11, 1, "", "C14NWriterTarget"], [410, 12, 1, "", "Comment"], [410, 11, 1, "", "Element"], [410, 11, 1, "", "ElementTree"], [410, 11, 1, "", "ParseError"], [410, 12, 1, "", "ProcessingInstruction"], [410, 11, 1, "", "QName"], [410, 12, 1, "", "SubElement"], [410, 11, 1, "", "TreeBuilder"], [410, 12, 1, "", "XML"], [410, 12, 1, "", "XMLID"], [410, 11, 1, "", "XMLParser"], [410, 11, 1, "", "XMLPullParser"], [410, 12, 1, "", "canonicalize"], [410, 12, 1, "", "dump"], [410, 12, 1, "", "fromstring"], [410, 12, 1, "", "fromstringlist"], [410, 12, 1, "", "indent"], [410, 12, 1, "", "iselement"], [410, 12, 1, "", "iterparse"], [410, 12, 1, "", "parse"], [410, 12, 1, "", "register_namespace"], [410, 12, 1, "", "tostring"], [410, 12, 1, "", "tostringlist"]], "xml.etree.ElementTree.Element": [[410, 8, 1, "", "append"], [410, 7, 1, "", "attrib"], [410, 8, 1, "", "clear"], [410, 8, 1, "", "extend"], [410, 8, 1, "", "find"], [410, 8, 1, "", "findall"], [410, 8, 1, "", "findtext"], [410, 8, 1, "", "get"], [410, 8, 1, "", "insert"], [410, 8, 1, "", "items"], [410, 8, 1, "", "iter"], [410, 8, 1, "", "iterfind"], [410, 8, 1, "", "itertext"], [410, 8, 1, "", "keys"], [410, 8, 1, "", "makeelement"], [410, 8, 1, "", "remove"], [410, 8, 1, "", "set"], [410, 7, 1, "", "tag"], [410, 7, 1, "", "tail"], [410, 7, 1, "", "text"]], "xml.etree.ElementTree.ElementTree": [[410, 8, 1, "", "_setroot"], [410, 8, 1, "", "find"], [410, 8, 1, "", "findall"], [410, 8, 1, "", "findtext"], [410, 8, 1, "", "getroot"], [410, 8, 1, "", "iter"], [410, 8, 1, "", "iterfind"], [410, 8, 1, "", "parse"], [410, 8, 1, "", "write"]], "xml.etree.ElementTree.ParseError": [[410, 7, 1, "", "code"], [410, 7, 1, "", "position"]], "xml.etree.ElementTree.TreeBuilder": [[410, 8, 1, "", "close"], [410, 8, 1, "", "comment"], [410, 8, 1, "", "data"], [410, 8, 1, "", "doctype"], [410, 8, 1, "", "end"], [410, 8, 1, "", "end_ns"], [410, 8, 1, "", "pi"], [410, 8, 1, "", "start"], [410, 8, 1, "", "start_ns"]], "xml.etree.ElementTree.XMLParser": [[410, 8, 1, "", "close"], [410, 8, 1, "", "feed"]], "xml.etree.ElementTree.XMLPullParser": [[410, 8, 1, "", "close"], [410, 8, 1, "", "feed"], [410, 8, 1, "", "read_events"]], "xml.parsers": [[311, 10, 0, "-", "expat"]], "xml.parsers.expat": [[311, 12, 1, "", "ErrorString"], [311, 6, 1, "", "ExpatError"], [311, 12, 1, "", "ParserCreate"], [311, 9, 1, "", "XMLParserType"], [311, 6, 1, "", "error"], [311, 10, 0, "-", "errors"], [311, 10, 0, "-", "model"]], "xml.parsers.expat.ExpatError": [[311, 7, 1, "", "code"], [311, 7, 1, "", "lineno"], [311, 7, 1, "", "offset"]], "xml.parsers.expat.errors": [[311, 9, 1, "", "XML_ERROR_ABORTED"], [311, 9, 1, "", "XML_ERROR_AMPLIFICATION_LIMIT_BREACH"], [311, 9, 1, "", "XML_ERROR_ASYNC_ENTITY"], [311, 9, 1, "", "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"], [311, 9, 1, "", "XML_ERROR_BAD_CHAR_REF"], [311, 9, 1, "", "XML_ERROR_BINARY_ENTITY_REF"], [311, 9, 1, "", "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"], [311, 9, 1, "", "XML_ERROR_DUPLICATE_ATTRIBUTE"], [311, 9, 1, "", "XML_ERROR_ENTITY_DECLARED_IN_PE"], [311, 9, 1, "", "XML_ERROR_EXTERNAL_ENTITY_HANDLING"], [311, 9, 1, "", "XML_ERROR_FEATURE_REQUIRES_XML_DTD"], [311, 9, 1, "", "XML_ERROR_FINISHED"], [311, 9, 1, "", "XML_ERROR_INCOMPLETE_PE"], [311, 9, 1, "", "XML_ERROR_INCORRECT_ENCODING"], [311, 9, 1, "", "XML_ERROR_INVALID_ARGUMENT"], [311, 9, 1, "", "XML_ERROR_INVALID_TOKEN"], [311, 9, 1, "", "XML_ERROR_JUNK_AFTER_DOC_ELEMENT"], [311, 9, 1, "", "XML_ERROR_MISPLACED_XML_PI"], [311, 9, 1, "", "XML_ERROR_NOT_STANDALONE"], [311, 9, 1, "", "XML_ERROR_NOT_SUSPENDED"], [311, 9, 1, "", "XML_ERROR_NO_BUFFER"], [311, 9, 1, "", "XML_ERROR_NO_ELEMENTS"], [311, 9, 1, "", "XML_ERROR_NO_MEMORY"], [311, 9, 1, "", "XML_ERROR_PARAM_ENTITY_REF"], [311, 9, 1, "", "XML_ERROR_PARTIAL_CHAR"], [311, 9, 1, "", "XML_ERROR_PUBLICID"], [311, 9, 1, "", "XML_ERROR_RECURSIVE_ENTITY_REF"], [311, 9, 1, "", "XML_ERROR_RESERVED_NAMESPACE_URI"], [311, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XML"], [311, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XMLNS"], [311, 9, 1, "", "XML_ERROR_SUSPENDED"], [311, 9, 1, "", "XML_ERROR_SUSPEND_PE"], [311, 9, 1, "", "XML_ERROR_SYNTAX"], [311, 9, 1, "", "XML_ERROR_TAG_MISMATCH"], [311, 9, 1, "", "XML_ERROR_TEXT_DECL"], [311, 9, 1, "", "XML_ERROR_UNBOUND_PREFIX"], [311, 9, 1, "", "XML_ERROR_UNCLOSED_CDATA_SECTION"], [311, 9, 1, "", "XML_ERROR_UNCLOSED_TOKEN"], [311, 9, 1, "", "XML_ERROR_UNDECLARING_PREFIX"], [311, 9, 1, "", "XML_ERROR_UNDEFINED_ENTITY"], [311, 9, 1, "", "XML_ERROR_UNEXPECTED_STATE"], [311, 9, 1, "", "XML_ERROR_UNKNOWN_ENCODING"], [311, 9, 1, "", "XML_ERROR_XML_DECL"], [311, 9, 1, "", "codes"], [311, 9, 1, "", "messages"]], "xml.parsers.expat.xmlparser": [[311, 8, 1, "", "AttlistDeclHandler"], [311, 8, 1, "", "CharacterDataHandler"], [311, 8, 1, "", "CommentHandler"], [311, 7, 1, "", "CurrentByteIndex"], [311, 7, 1, "", "CurrentColumnNumber"], [311, 7, 1, "", "CurrentLineNumber"], [311, 8, 1, "", "DefaultHandler"], [311, 8, 1, "", "DefaultHandlerExpand"], [311, 8, 1, "", "ElementDeclHandler"], [311, 8, 1, "", "EndCdataSectionHandler"], [311, 8, 1, "", "EndDoctypeDeclHandler"], [311, 8, 1, "", "EndElementHandler"], [311, 8, 1, "", "EndNamespaceDeclHandler"], [311, 8, 1, "", "EntityDeclHandler"], [311, 7, 1, "", "ErrorByteIndex"], [311, 7, 1, "", "ErrorCode"], [311, 7, 1, "", "ErrorColumnNumber"], [311, 7, 1, "", "ErrorLineNumber"], [311, 8, 1, "", "ExternalEntityParserCreate"], [311, 8, 1, "", "ExternalEntityRefHandler"], [311, 8, 1, "", "GetBase"], [311, 8, 1, "", "GetInputContext"], [311, 8, 1, "", "NotStandaloneHandler"], [311, 8, 1, "", "NotationDeclHandler"], [311, 8, 1, "", "Parse"], [311, 8, 1, "", "ParseFile"], [311, 8, 1, "", "ProcessingInstructionHandler"], [311, 8, 1, "", "SetBase"], [311, 8, 1, "", "SetParamEntityParsing"], [311, 8, 1, "", "StartCdataSectionHandler"], [311, 8, 1, "", "StartDoctypeDeclHandler"], [311, 8, 1, "", "StartElementHandler"], [311, 8, 1, "", "StartNamespaceDeclHandler"], [311, 8, 1, "", "UnparsedEntityDeclHandler"], [311, 8, 1, "", "UseForeignDTD"], [311, 8, 1, "", "XmlDeclHandler"], [311, 7, 1, "", "buffer_size"], [311, 7, 1, "", "buffer_text"], [311, 7, 1, "", "buffer_used"], [311, 7, 1, "", "ordered_attributes"], [311, 7, 1, "", "specified_attributes"]], "xml.sax": [[411, 6, 1, "", "SAXException"], [411, 6, 1, "", "SAXNotRecognizedException"], [411, 6, 1, "", "SAXNotSupportedException"], [411, 6, 1, "", "SAXParseException"], [412, 10, 0, "-", "handler"], [411, 12, 1, "", "make_parser"], [411, 12, 1, "", "parse"], [411, 12, 1, "", "parseString"], [414, 10, 0, "-", "saxutils"], [413, 10, 0, "-", "xmlreader"]], "xml.sax.SAXException": [[411, 8, 1, "", "getException"], [411, 8, 1, "", "getMessage"]], "xml.sax.handler": [[412, 11, 1, "", "ContentHandler"], [412, 11, 1, "", "DTDHandler"], [412, 11, 1, "", "EntityResolver"], [412, 11, 1, "", "ErrorHandler"], [412, 11, 1, "", "LexicalHandler"], [412, 9, 1, "", "all_features"], [412, 9, 1, "", "all_properties"], [412, 9, 1, "", "feature_external_ges"], [412, 9, 1, "", "feature_external_pes"], [412, 9, 1, "", "feature_namespace_prefixes"], [412, 9, 1, "", "feature_namespaces"], [412, 9, 1, "", "feature_string_interning"], [412, 9, 1, "", "feature_validation"], [412, 9, 1, "", "property_declaration_handler"], [412, 9, 1, "", "property_dom_node"], [412, 9, 1, "", "property_lexical_handler"], [412, 9, 1, "", "property_xml_string"]], "xml.sax.handler.ContentHandler": [[412, 8, 1, "", "characters"], [412, 8, 1, "", "endDocument"], [412, 8, 1, "", "endElement"], [412, 8, 1, "", "endElementNS"], [412, 8, 1, "", "endPrefixMapping"], [412, 8, 1, "", "ignorableWhitespace"], [412, 8, 1, "", "processingInstruction"], [412, 8, 1, "", "setDocumentLocator"], [412, 8, 1, "", "skippedEntity"], [412, 8, 1, "", "startDocument"], [412, 8, 1, "", "startElement"], [412, 8, 1, "", "startElementNS"], [412, 8, 1, "", "startPrefixMapping"]], "xml.sax.handler.DTDHandler": [[412, 8, 1, "", "notationDecl"], [412, 8, 1, "", "unparsedEntityDecl"]], "xml.sax.handler.EntityResolver": [[412, 8, 1, "", "resolveEntity"]], "xml.sax.handler.ErrorHandler": [[412, 8, 1, "", "error"], [412, 8, 1, "", "fatalError"], [412, 8, 1, "", "warning"]], "xml.sax.handler.LexicalHandler": [[412, 8, 1, "", "comment"], [412, 8, 1, "", "endCDATA"], [412, 8, 1, "", "endDTD"], [412, 8, 1, "", "startCDATA"], [412, 8, 1, "", "startDTD"]], "xml.sax.saxutils": [[414, 11, 1, "", "XMLFilterBase"], [414, 11, 1, "", "XMLGenerator"], [414, 12, 1, "", "escape"], [414, 12, 1, "", "prepare_input_source"], [414, 12, 1, "", "quoteattr"], [414, 12, 1, "", "unescape"]], "xml.sax.xmlreader.Attributes": [[413, 8, 1, "", "getLength"], [413, 8, 1, "", "getNames"], [413, 8, 1, "", "getType"], [413, 8, 1, "", "getValue"]], "xml.sax.xmlreader": [[413, 11, 1, "", "AttributesImpl"], [413, 11, 1, "", "AttributesNSImpl"], [413, 11, 1, "", "IncrementalParser"], [413, 11, 1, "", "InputSource"], [413, 11, 1, "", "Locator"], [413, 11, 1, "", "XMLReader"]], "xml.sax.xmlreader.AttributesNS": [[413, 8, 1, "", "getNameByQName"], [413, 8, 1, "", "getQNameByName"], [413, 8, 1, "", "getQNames"], [413, 8, 1, "", "getValueByQName"]], "xml.sax.xmlreader.IncrementalParser": [[413, 8, 1, "", "close"], [413, 8, 1, "", "feed"], [413, 8, 1, "", "reset"]], "xml.sax.xmlreader.InputSource": [[413, 8, 1, "", "getByteStream"], [413, 8, 1, "", "getCharacterStream"], [413, 8, 1, "", "getEncoding"], [413, 8, 1, "", "getPublicId"], [413, 8, 1, "", "getSystemId"], [413, 8, 1, "", "setByteStream"], [413, 8, 1, "", "setCharacterStream"], [413, 8, 1, "", "setEncoding"], [413, 8, 1, "", "setPublicId"], [413, 8, 1, "", "setSystemId"]], "xml.sax.xmlreader.Locator": [[413, 8, 1, "", "getColumnNumber"], [413, 8, 1, "", "getLineNumber"], [413, 8, 1, "", "getPublicId"], [413, 8, 1, "", "getSystemId"]], "xml.sax.xmlreader.XMLReader": [[413, 8, 1, "", "getContentHandler"], [413, 8, 1, "", "getDTDHandler"], [413, 8, 1, "", "getEntityResolver"], [413, 8, 1, "", "getErrorHandler"], [413, 8, 1, "", "getFeature"], [413, 8, 1, "", "getProperty"], [413, 8, 1, "", "parse"], [413, 8, 1, "", "setContentHandler"], [413, 8, 1, "", "setDTDHandler"], [413, 8, 1, "", "setEntityResolver"], [413, 8, 1, "", "setErrorHandler"], [413, 8, 1, "", "setFeature"], [413, 8, 1, "", "setLocale"], [413, 8, 1, "", "setProperty"]], "xmlrpc": [[416, 10, 0, "-", "client"], [417, 10, 0, "-", "server"]], "xmlrpc.client": [[416, 11, 1, "", "Binary"], [416, 11, 1, "", "DateTime"], [416, 11, 1, "", "Fault"], [416, 11, 1, "", "MultiCall"], [416, 11, 1, "", "ProtocolError"], [416, 11, 1, "", "ServerProxy"], [416, 12, 1, "", "dumps"], [416, 12, 1, "", "loads"]], "xmlrpc.client.Binary": [[416, 7, 1, "", "data"], [416, 8, 1, "", "decode"], [416, 8, 1, "", "encode"]], "xmlrpc.client.DateTime": [[416, 8, 1, "", "decode"], [416, 8, 1, "", "encode"]], "xmlrpc.client.Fault": [[416, 7, 1, "", "faultCode"], [416, 7, 1, "", "faultString"]], "xmlrpc.client.ProtocolError": [[416, 7, 1, "", "errcode"], [416, 7, 1, "", "errmsg"], [416, 7, 1, "", "headers"], [416, 7, 1, "", "url"]], "xmlrpc.client.ServerProxy.system": [[416, 8, 1, "", "listMethods"], [416, 8, 1, "", "methodHelp"], [416, 8, 1, "", "methodSignature"]], "xmlrpc.server": [[417, 11, 1, "", "CGIXMLRPCRequestHandler"], [417, 11, 1, "", "DocCGIXMLRPCRequestHandler"], [417, 11, 1, "", "DocXMLRPCRequestHandler"], [417, 11, 1, "", "DocXMLRPCServer"], [417, 11, 1, "", "SimpleXMLRPCRequestHandler"], [417, 11, 1, "", "SimpleXMLRPCServer"]], "xmlrpc.server.CGIXMLRPCRequestHandler": [[417, 8, 1, "", "handle_request"], [417, 8, 1, "", "register_function"], [417, 8, 1, "", "register_instance"], [417, 8, 1, "", "register_introspection_functions"], [417, 8, 1, "", "register_multicall_functions"]], "xmlrpc.server.DocCGIXMLRPCRequestHandler": [[417, 8, 1, "", "set_server_documentation"], [417, 8, 1, "", "set_server_name"], [417, 8, 1, "", "set_server_title"]], "xmlrpc.server.DocXMLRPCServer": [[417, 8, 1, "", "set_server_documentation"], [417, 8, 1, "", "set_server_name"], [417, 8, 1, "", "set_server_title"]], "xmlrpc.server.SimpleXMLRPCRequestHandler": [[417, 7, 1, "", "rpc_paths"]], "xmlrpc.server.SimpleXMLRPCServer": [[417, 8, 1, "", "register_function"], [417, 8, 1, "", "register_instance"], [417, 8, 1, "", "register_introspection_functions"], [417, 8, 1, "", "register_multicall_functions"]], "zipapp": [[418, 12, 1, "", "create_archive"], [418, 12, 1, "", "get_interpreter"], [418, 14, 1, "cmdoption-zipapp-c", "--compress"], [418, 14, 1, "cmdoption-zipapp-h", "--help"], [418, 14, 1, "cmdoption-zipapp-info", "--info"], [418, 14, 1, "cmdoption-zipapp-m", "--main"], [418, 14, 1, "cmdoption-zipapp-o", "--output"], [418, 14, 1, "cmdoption-zipapp-p", "--python"], [418, 14, 1, "cmdoption-zipapp-c", "-c"], [418, 14, 1, "cmdoption-zipapp-h", "-h"], [418, 14, 1, "cmdoption-zipapp-m", "-m"], [418, 14, 1, "cmdoption-zipapp-o", "-o"], [418, 14, 1, "cmdoption-zipapp-p", "-p"]], "zipfile": [[419, 6, 1, "", "BadZipFile"], [419, 6, 1, "", "BadZipfile"], [419, 6, 1, "", "LargeZipFile"], [419, 11, 1, "", "Path"], [419, 11, 1, "", "PyZipFile"], [419, 9, 1, "", "ZIP_BZIP2"], [419, 9, 1, "", "ZIP_DEFLATED"], [419, 9, 1, "", "ZIP_LZMA"], [419, 9, 1, "", "ZIP_STORED"], [419, 11, 1, "", "ZipFile"], [419, 11, 1, "", "ZipInfo"], [419, 12, 1, "", "is_zipfile"], [419, 14, 1, "cmdoption-zipfile-create", "--create"], [419, 14, 1, "cmdoption-zipfile-extract", "--extract"], [419, 14, 1, "cmdoption-zipfile-list", "--list"], [419, 14, 1, "cmdoption-zipfile-metadata-encoding", "--metadata-encoding"], [419, 14, 1, "cmdoption-zipfile-test", "--test"], [419, 14, 1, "cmdoption-zipfile-c", "-c"], [419, 14, 1, "cmdoption-zipfile-e", "-e"], [419, 14, 1, "cmdoption-zipfile-l", "-l"], [419, 14, 1, "cmdoption-zipfile-t", "-t"]], "zipfile.Path": [[419, 8, 1, "", "exists"], [419, 8, 1, "", "is_dir"], [419, 8, 1, "", "is_file"], [419, 8, 1, "", "iterdir"], [419, 8, 1, "", "joinpath"], [419, 7, 1, "", "name"], [419, 8, 1, "", "open"], [419, 8, 1, "", "read_bytes"], [419, 8, 1, "", "read_text"], [419, 9, 1, "", "stem"], [419, 9, 1, "", "suffix"], [419, 9, 1, "", "suffixes"]], "zipfile.PyZipFile": [[419, 8, 1, "", "writepy"]], "zipfile.ZipFile": [[419, 8, 1, "", "close"], [419, 7, 1, "", "comment"], [419, 7, 1, "", "debug"], [419, 8, 1, "", "extract"], [419, 8, 1, "", "extractall"], [419, 7, 1, "", "filename"], [419, 8, 1, "", "getinfo"], [419, 8, 1, "", "infolist"], [419, 8, 1, "", "mkdir"], [419, 8, 1, "", "namelist"], [419, 8, 1, "", "open"], [419, 8, 1, "", "printdir"], [419, 8, 1, "", "read"], [419, 8, 1, "", "setpassword"], [419, 8, 1, "", "testzip"], [419, 8, 1, "", "write"], [419, 8, 1, "", "writestr"]], "zipfile.ZipInfo": [[419, 7, 1, "", "CRC"], [419, 7, 1, "", "comment"], [419, 7, 1, "", "compress_size"], [419, 7, 1, "", "compress_type"], [419, 7, 1, "", "create_system"], [419, 7, 1, "", "create_version"], [419, 7, 1, "", "date_time"], [419, 7, 1, "", "external_attr"], [419, 7, 1, "", "extra"], [419, 7, 1, "", "extract_version"], [419, 7, 1, "", "file_size"], [419, 7, 1, "", "filename"], [419, 7, 1, "", "flag_bits"], [419, 8, 1, "", "from_file"], [419, 7, 1, "", "header_offset"], [419, 7, 1, "", "internal_attr"], [419, 8, 1, "", "is_dir"], [419, 7, 1, "", "reserved"], [419, 7, 1, "", "volume"]], "zipimport": [[420, 6, 1, "", "ZipImportError"], [420, 11, 1, "", "zipimporter"]], "zipimport.zipimporter": [[420, 7, 1, "", "archive"], [420, 8, 1, "", "create_module"], [420, 8, 1, "", "exec_module"], [420, 8, 1, "", "find_spec"], [420, 8, 1, "", "get_code"], [420, 8, 1, "", "get_data"], [420, 8, 1, "", "get_filename"], [420, 8, 1, "", "get_source"], [420, 8, 1, "", "invalidate_caches"], [420, 8, 1, "", "is_package"], [420, 8, 1, "", "load_module"], [420, 7, 1, "", "prefix"]], "zlib.Compress": [[421, 8, 1, "", "compress"], [421, 8, 1, "", "copy"], [421, 8, 1, "", "flush"]], "zlib.Decompress": [[421, 8, 1, "", "copy"], [421, 8, 1, "", "decompress"], [421, 7, 1, "", "eof"], [421, 8, 1, "", "flush"], [421, 7, 1, "", "unconsumed_tail"], [421, 7, 1, "", "unused_data"]], "zlib": [[421, 9, 1, "", "ZLIB_RUNTIME_VERSION"], [421, 9, 1, "", "ZLIB_VERSION"], [421, 12, 1, "", "adler32"], [421, 12, 1, "", "compress"], [421, 12, 1, "", "compressobj"], [421, 12, 1, "", "crc32"], [421, 12, 1, "", "decompress"], [421, 12, 1, "", "decompressobj"], [421, 6, 1, "", "error"]], "zoneinfo": [[422, 6, 1, "", "InvalidTZPathWarning"], [422, 9, 1, "", "TZPATH"], [422, 11, 1, "", "ZoneInfo"], [422, 6, 1, "", "ZoneInfoNotFoundError"], [422, 12, 1, "", "available_timezones"], [422, 12, 1, "", "reset_tzpath"]], "zoneinfo.ZoneInfo": [[422, 8, 1, "", "clear_cache"], [422, 8, 1, "", "from_file"], [422, 7, 1, "", "key"], [422, 8, 1, "", "no_cache"]], "json.tool": [[259, 14, 1, "cmdoption-json.tool-indent", "--compact"], [259, 14, 1, "cmdoption-json.tool-h", "--help"], [259, 14, 1, "cmdoption-json.tool-indent", "--indent"], [259, 14, 1, "cmdoption-json.tool-json-lines", "--json-lines"], [259, 14, 1, "cmdoption-json.tool-no-ensure-ascii", "--no-ensure-ascii"], [259, 14, 1, "cmdoption-json.tool-indent", "--no-indent"], [259, 14, 1, "cmdoption-json.tool-sort-keys", "--sort-keys"], [259, 14, 1, "cmdoption-json.tool-indent", "--tab"], [259, 14, 1, "cmdoption-json.tool-h", "-h"], [259, 14, 1, "cmdoption-json.tool-arg-infile", "infile"], [259, 14, 1, "cmdoption-json.tool-arg-outfile", "outfile"]], "python--m-py_compile": [[308, 14, 1, "cmdoption-python-m-py_compile", "-"], [308, 14, 1, "cmdoption-python-m-py_compile-q", "--quiet"], [308, 14, 1, "cmdoption-python-m-py_compile-q", "-q"], [308, 14, 1, "cmdoption-python-m-py_compile-arg-file", "&lt;file&gt;"]], "python--m-sqlite3-[-h]-[-v]-[filename]-[sql]": [[337, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-h", "--help"], [337, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-v", "--version"], [337, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-h", "-h"], [337, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-v", "-v"]], "unittest-discover": [[385, 14, 1, "cmdoption-unittest-discover-p", "--pattern"], [385, 14, 1, "cmdoption-unittest-discover-s", "--start-directory"], [385, 14, 1, "cmdoption-unittest-discover-t", "--top-level-directory"], [385, 14, 1, "cmdoption-unittest-discover-v", "--verbose"], [385, 14, 1, "cmdoption-unittest-discover-p", "-p"], [385, 14, 1, "cmdoption-unittest-discover-s", "-s"], [385, 14, 1, "cmdoption-unittest-discover-t", "-t"], [385, 14, 1, "cmdoption-unittest-discover-v", "-v"]]}, "objtypes": {"0": "c:member", "1": "c:macro", "2": "c:function", "3": "c:functionParam", "4": "c:type", "5": "c:struct", "6": "py:exception", "7": "py:attribute", "8": "py:method", "9": "py:data", "10": "py:module", "11": "py:class", "12": "py:function", "13": "std:pdbcommand", "14": "std:cmdoption", "15": "std:envvar", "16": "std:opcode", "17": "std:monitoring-event", "18": "std:2to3fixer"}, "objnames": {"0": ["c", "member", "C member"], "1": ["c", "macro", "C macro"], "2": ["c", "function", "C function"], "3": ["c", "functionParam", "C function parameter"], "4": ["c", "type", "C type"], "5": ["c", "struct", "C struct"], "6": ["py", "exception", "Python exception"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "method", "Python method"], "9": ["py", "data", "Python data"], "10": ["py", "module", "Python module"], "11": ["py", "class", "Python class"], "12": ["py", "function", "Python function"], "13": ["std", "pdbcommand", "pdbcommand"], "14": ["std", "cmdoption", "program option"], "15": ["std", "envvar", "environment variable"], "16": ["std", "opcode", "opcode"], "17": ["std", "monitoring-event", "monitoring-event"], "18": ["std", "2to3fixer", "2to3fixer"]}, "titleterms": {"about": [0, 32, 79, 84, 148, 190, 437, 459, 470], "document": [0, 1, 67, 79, 83, 94, 198, 310, 407, 410, 417, 423, 438, 465, 466, 472, 473, 474, 477, 478], "contributor": 0, "python": [0, 1, 15, 31, 32, 33, 34, 41, 67, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 94, 95, 98, 101, 102, 106, 108, 109, 111, 155, 156, 160, 173, 177, 185, 188, 190, 211, 251, 260, 261, 263, 264, 271, 290, 294, 296, 305, 308, 309, 312, 321, 327, 330, 337, 351, 352, 355, 359, 364, 366, 374, 375, 377, 381, 418, 423, 430, 434, 435, 437, 442, 445, 446, 447, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "deal": [1, 100], "bug": [1, 32, 79, 84, 373], "us": [1, 34, 76, 77, 78, 79, 83, 84, 93, 97, 99, 100, 102, 103, 104, 107, 109, 133, 148, 160, 166, 193, 232, 267, 276, 279, 280, 293, 305, 311, 323, 337, 345, 350, 352, 359, 362, 372, 373, 374, 381, 385, 387, 392, 422, 423, 425, 439, 445, 446, 452, 456, 457, 458, 464, 465, 470, 471, 473, 478], "issu": [1, 23, 98, 108, 211, 355, 441, 458, 465], "tracker": [1, 465], "get": [1, 77, 79, 80, 83, 84, 88, 97, 129, 133, 379, 381, 387, 456, 457, 458], "start": [1, 85, 91, 164, 183, 280, 381, 386, 387, 458], "contribut": 1, "yourself": 1, "abstract": [2, 74, 87, 91, 92, 98, 102, 103, 104, 113, 119, 158, 247, 250, 286, 465], "object": [2, 3, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 37, 38, 41, 42, 43, 44, 45, 48, 49, 54, 55, 57, 59, 60, 61, 62, 63, 66, 74, 78, 83, 84, 87, 92, 93, 97, 98, 99, 100, 117, 123, 126, 129, 136, 145, 152, 154, 155, 157, 163, 164, 172, 174, 176, 180, 183, 187, 190, 200, 203, 205, 220, 223, 232, 239, 240, 241, 245, 252, 256, 259, 264, 265, 268, 271, 273, 278, 280, 283, 285, 290, 292, 293, 296, 298, 302, 304, 309, 311, 313, 316, 318, 322, 325, 327, 328, 332, 334, 335, 337, 338, 340, 341, 345, 346, 350, 355, 356, 362, 378, 381, 383, 386, 387, 392, 395, 398, 399, 400, 402, 405, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 425, 437, 443, 462, 463, 465, 466, 470, 473, 474], "layer": [2, 16, 65, 107, 475], "alloc": [3, 32, 41, 60, 74, 379, 462, 474], "heap": [3, 60, 62, 98, 233], "api": [4, 5, 8, 10, 14, 31, 32, 33, 41, 56, 72, 85, 93, 112, 120, 121, 123, 127, 164, 190, 193, 204, 207, 227, 248, 296, 337, 341, 345, 379, 396, 407, 410, 418, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "abi": [4, 56, 469, 472, 478], "version": [4, 79, 87, 97, 102, 108, 248, 289, 338, 355, 397, 457, 458, 471, 472], "pars": [5, 117, 204, 289, 301, 311, 328, 374, 376, 391, 410, 466, 469, 472, 477, 479], "argument": [5, 84, 88, 89, 117, 173, 289, 290, 345, 350, 387, 425, 438, 445, 448, 458, 474, 476], "build": [5, 34, 70, 72, 76, 383, 409, 410, 453, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "valu": [5, 72, 78, 83, 84, 93, 94, 117, 118, 164, 173, 178, 183, 259, 289, 315, 337, 341, 387, 402, 424, 425, 427, 438], "string": [5, 18, 63, 77, 83, 84, 93, 103, 106, 256, 289, 316, 341, 342, 343, 344, 345, 422, 432, 438, 443, 448, 459, 462, 463, 465, 467, 470, 471, 473, 476, 477, 478, 479], "buffer": [5, 7, 47, 62, 100, 130, 252, 255, 296, 317, 425, 465, 471, 473, 478], "number": [5, 15, 46, 62, 79, 83, 84, 107, 151, 166, 218, 259, 272, 286, 290, 315, 323, 425, 446, 465, 469], "other": [5, 16, 75, 77, 78, 83, 84, 93, 97, 99, 100, 117, 136, 256, 279, 289, 296, 323, 334, 341, 350, 352, 383, 432, 439, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "function": [5, 7, 8, 14, 16, 25, 27, 44, 57, 58, 63, 72, 77, 78, 84, 92, 93, 94, 98, 103, 105, 117, 119, 126, 147, 148, 151, 157, 160, 163, 166, 169, 170, 173, 174, 176, 178, 188, 221, 222, 223, 229, 247, 248, 249, 252, 256, 258, 264, 265, 272, 279, 285, 288, 296, 309, 315, 316, 320, 323, 334, 337, 338, 340, 341, 342, 344, 345, 349, 350, 352, 357, 363, 379, 380, 381, 382, 383, 385, 387, 397, 402, 410, 416, 422, 423, 424, 425, 427, 438, 447, 459, 460, 463, 464, 465, 467, 470, 473, 475, 476, 477], "boolean": [6, 93, 289, 341, 427, 462], "protocol": [7, 10, 35, 39, 46, 47, 48, 53, 74, 92, 98, 127, 130, 164, 220, 239, 245, 253, 285, 302, 332, 338, 383, 385, 429, 465, 471, 473, 475, 476, 478], "structur": [7, 15, 57, 62, 100, 164, 173, 229, 270, 383, 391, 426, 432, 439, 443, 469], "request": [7, 335, 390, 392, 476], "type": [7, 8, 34, 57, 60, 61, 62, 63, 74, 75, 77, 93, 94, 98, 102, 106, 117, 119, 173, 178, 179, 180, 208, 246, 252, 273, 286, 289, 296, 333, 337, 341, 366, 372, 382, 383, 402, 404, 407, 424, 425, 433, 439, 461, 462, 463, 464, 465, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "independ": [7, 463], "field": [7, 157, 173, 178, 383, 469], "readonli": 7, "format": [7, 18, 99, 100, 172, 180, 214, 244, 265, 268, 280, 296, 341, 342, 344, 355, 418, 443, 449, 465, 466, 467, 468, 475, 476], "shape": [7, 381], "stride": 7, "suboffset": 7, "contigu": 7, "compound": [7, 381, 424], "complex": [7, 15, 105, 151, 341, 387, 425, 469], "arrai": [7, 8, 84, 118, 144, 173, 259, 469, 471, 473, 476], "numpi": 7, "style": [7, 84, 100, 225, 228, 341, 358, 373, 438, 464], "pil": 7, "relat": [7, 107, 147, 247, 340, 429, 457, 461, 469, 470, 471], "byte": [8, 9, 106, 160, 173, 315, 323, 341, 344, 391, 432, 465, 475], "check": [8, 84, 85, 102, 170, 190, 247, 289, 316, 387, 404, 425, 479], "macro": [8, 34, 57], "direct": [8, 190, 281, 383, 460], "call": [10, 72, 77, 78, 79, 84, 94, 173, 212, 289, 303, 386, 387, 423, 427, 470, 475, 478], "The": [10, 41, 45, 65, 72, 75, 87, 88, 91, 94, 102, 103, 106, 107, 117, 162, 212, 213, 227, 230, 247, 251, 252, 280, 286, 289, 294, 303, 305, 307, 336, 341, 350, 351, 366, 381, 383, 386, 397, 406, 407, 410, 413, 418, 422, 424, 425, 427, 429, 430, 433, 435, 438, 439, 442, 443, 445, 447, 456, 458, 461, 462, 463, 464, 465, 466, 472], "tp_call": 10, "vectorcal": [10, 478], "recurs": [10, 23], "control": [10, 23, 28, 58, 75, 84, 119, 337, 358, 380, 381, 397, 400, 438, 448], "support": [10, 14, 28, 32, 40, 44, 49, 50, 63, 74, 75, 77, 93, 94, 100, 101, 102, 106, 125, 128, 146, 148, 152, 164, 166, 167, 169, 208, 227, 231, 235, 253, 275, 303, 309, 338, 355, 359, 368, 383, 386, 409, 410, 411, 422, 459, 462, 465, 474, 475, 476, 477, 478, 479], "capsul": [11, 466], "cell": [12, 174], "code": [13, 32, 34, 77, 84, 102, 106, 107, 109, 111, 117, 122, 123, 154, 156, 180, 238, 244, 247, 252, 341, 350, 364, 385, 397, 423, 425, 438, 445, 458, 462, 470, 472, 473, 474, 475, 479], "extra": 13, "inform": [13, 79, 91, 100, 278, 290, 319, 352, 446], "codec": [14, 63, 155, 462, 469, 472, 473, 474], "registri": [14, 155, 402, 458], "lookup": [14, 44, 92, 425], "unicod": [14, 23, 63, 106, 155, 355, 384, 459, 461, 462, 467, 472, 473], "encod": [14, 63, 106, 140, 155, 195, 255, 259, 314, 337, 391, 394, 405, 432, 445, 462, 469, 476], "error": [14, 23, 72, 84, 85, 107, 123, 155, 183, 185, 196, 278, 289, 311, 355, 390, 435, 440, 441, 448, 462, 469, 470, 471], "handler": [14, 83, 99, 100, 107, 123, 137, 155, 211, 264, 265, 266, 330, 335, 366, 404, 412], "c": [15, 31, 41, 44, 56, 70, 71, 72, 76, 77, 78, 83, 84, 225, 453, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "concret": [16, 210, 293, 383], "fundament": [16, 173], "numer": [16, 83, 118, 286, 287, 341, 425, 432, 476], "sequenc": [16, 53, 59, 62, 84, 315, 341, 345, 424, 425, 432, 439], "contain": [16, 77, 117, 157, 158, 256, 383, 425], "context": [17, 100, 132, 166, 167, 183, 190, 210, 244, 280, 337, 338, 341, 387, 397, 425, 463, 464, 465, 469, 473], "variabl": [17, 32, 84, 99, 119, 166, 167, 173, 178, 220, 232, 289, 290, 352, 357, 366, 437, 452, 458, 466, 469, 476], "convers": [18, 98, 151, 159, 173, 256, 272, 341, 363, 376, 427, 463], "coroutin": [19, 122, 136, 252, 382, 424, 425, 475], "datetim": [20, 180, 416, 470, 472, 473, 476, 477, 478, 479], "descriptor": [21, 92, 123, 178, 185, 211, 290, 386, 425, 461, 474, 476], "dictionari": [22, 77, 100, 265, 341, 387, 425, 427, 439, 466, 468, 472, 473, 479], "except": [23, 34, 72, 77, 84, 99, 100, 107, 117, 121, 122, 124, 131, 163, 164, 166, 190, 196, 210, 229, 256, 259, 268, 280, 289, 311, 316, 330, 334, 337, 338, 340, 344, 345, 387, 390, 405, 407, 410, 422, 424, 426, 440, 464, 465, 466, 467, 470, 473], "handl": [23, 80, 100, 107, 123, 132, 174, 191, 240, 269, 282, 289, 296, 337, 338, 385, 389, 402, 435, 440, 462, 465, 466, 474, 475], "print": [23, 78, 117, 289, 378, 465, 467], "clear": 23, "rais": [23, 84, 99, 289, 387, 390, 433, 440], "warn": [23, 190, 210, 264, 359, 397, 422, 460, 466, 470, 476, 477], "queri": [23, 28, 289, 290, 329, 337], "indic": 23, "signal": [23, 83, 123, 183, 211, 330, 385, 473, 475, 477, 479], "class": [23, 77, 78, 84, 92, 93, 98, 100, 113, 117, 119, 154, 155, 158, 163, 178, 196, 210, 213, 227, 247, 250, 252, 255, 278, 280, 286, 296, 305, 309, 313, 326, 341, 344, 381, 382, 383, 385, 386, 387, 390, 392, 404, 412, 422, 424, 425, 432, 437, 461, 464, 465, 469, 470, 473, 476], "standard": [23, 34, 84, 155, 186, 209, 251, 259, 288, 289, 341, 344, 373, 382, 408, 425, 429, 447, 448, 449, 462, 470, 479], "categori": [23, 238, 397], "file": [24, 34, 63, 78, 83, 84, 85, 99, 100, 102, 106, 114, 117, 123, 146, 164, 172, 185, 186, 190, 211, 213, 214, 216, 231, 232, 244, 247, 248, 255, 265, 267, 269, 275, 278, 279, 283, 290, 301, 303, 308, 317, 329, 333, 346, 351, 355, 357, 366, 372, 376, 387, 394, 398, 410, 419, 425, 434, 435, 443, 447, 448, 453, 457, 458, 462, 472, 474, 475, 476, 477, 478], "float": [25, 77, 183, 341, 425, 432, 441, 449, 463], "point": [25, 77, 93, 183, 248, 432, 441, 449], "pack": [25, 344], "unpack": [25, 405, 438, 475], "frame": [26, 379, 425, 470, 476], "intern": [26, 265, 271, 341, 425], "cyclic": [28, 75], "garbag": [28, 75, 77, 98, 224, 459], "collect": [28, 75, 77, 98, 157, 158, 188, 383, 459, 466, 469, 472, 473, 474, 475, 476, 477, 478, 479], "collector": [28, 224], "state": [28, 32, 98, 211, 241, 252, 280, 296, 355, 373, 381], "gener": [29, 63, 74, 77, 79, 80, 83, 84, 94, 115, 147, 198, 236, 252, 289, 293, 301, 310, 315, 323, 330, 338, 341, 348, 357, 359, 383, 387, 424, 425, 427, 437, 452, 453, 461, 462, 463, 464, 470, 475, 476, 477, 479], "import": [30, 84, 111, 119, 208, 247, 248, 264, 265, 266, 277, 359, 366, 387, 420, 429, 433, 447, 460, 462, 463, 464, 465, 470, 473, 474], "modul": [30, 44, 69, 72, 78, 83, 84, 90, 91, 94, 97, 98, 99, 100, 103, 105, 108, 110, 148, 153, 163, 165, 170, 172, 178, 207, 208, 220, 221, 227, 238, 247, 255, 256, 264, 276, 277, 280, 287, 293, 296, 303, 305, 309, 316, 321, 330, 331, 334, 337, 341, 345, 347, 351, 366, 381, 383, 385, 389, 406, 407, 415, 420, 425, 429, 435, 447, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "refer": [31, 34, 51, 62, 66, 72, 74, 79, 84, 94, 106, 173, 220, 280, 289, 305, 337, 366, 381, 399, 404, 410, 427, 429, 430, 447, 449, 460], "manual": [31, 87, 167, 305, 338, 366, 443], "initi": [32, 33, 44, 72, 351, 475, 478], "final": [32, 74, 166, 399, 424, 464, 474], "thread": [32, 77, 83, 100, 112, 123, 134, 136, 183, 255, 264, 330, 359, 362, 366, 449, 469, 470, 471, 472, 473, 474, 475, 477, 478], "befor": [32, 79], "global": [32, 83, 84, 98, 296, 350, 422, 433], "configur": [32, 33, 99, 100, 164, 265, 331, 341, 352, 381, 422, 453, 456, 458, 466, 472, 478], "interpret": [32, 73, 77, 83, 98, 152, 154, 177, 252, 339, 344, 382, 418, 444, 445, 461, 464, 465, 466, 470, 471], "process": [32, 58, 98, 100, 123, 129, 178, 270, 280, 281, 283, 290, 338, 360, 406, 459, 465], "wide": 32, "paramet": [32, 72, 84, 100, 119, 172, 173, 178, 290, 349, 366, 383, 424, 438, 469, 471, 478], "lock": [32, 83, 135, 362, 473], "releas": [32, 466, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "gil": [32, 471], "from": [32, 72, 78, 83, 84, 85, 92, 98, 99, 100, 136, 151, 166, 173, 203, 210, 215, 279, 345, 381, 387, 419, 420, 447, 458, 462, 465], "extens": [32, 57, 70, 72, 73, 74, 75, 76, 78, 83, 90, 98, 108, 176, 244, 263, 299, 372, 392, 453, 473, 475], "non": [32, 103, 104, 259, 337, 338, 410, 474], "creat": [32, 60, 63, 73, 78, 79, 83, 84, 93, 94, 97, 100, 104, 117, 123, 134, 136, 203, 232, 258, 289, 334, 337, 387, 396, 418, 425, 450, 474], "caution": 32, "fork": 32, "high": [32, 65, 71, 120, 121, 255, 326, 329, 345], "level": [32, 44, 65, 71, 84, 99, 100, 103, 111, 112, 120, 121, 127, 148, 255, 256, 259, 264, 325, 326, 329, 334, 345, 434, 475], "low": [32, 44, 112, 120, 127, 334, 471], "sub": [32, 62, 117], "A": [32, 72, 76, 92, 97, 99, 100, 173, 176, 187, 313, 335, 366, 437, 462, 465, 467, 471, 473, 474, 475], "per": [32, 98, 350, 387, 465, 471], "caveat": [32, 56, 263, 418], "asynchron": [32, 120, 252, 330, 335, 383, 387, 423, 425, 427, 476], "notif": [32, 92], "profil": [32, 101, 182, 305], "trace": [32, 377, 379, 423], "advanc": [32, 88, 99, 190, 465], "debugg": [32, 84, 141, 294], "local": [32, 63, 84, 227, 263, 350, 362, 458, 463, 469, 470, 471, 475, 476, 477], "storag": [32, 477], "specif": [32, 74, 77, 94, 155, 331, 342, 349, 373, 381, 388, 401, 402, 428, 462, 463, 464, 465, 466, 469], "tss": 32, "dynam": [32, 92, 173, 382, 426], "method": [32, 43, 57, 63, 72, 75, 77, 78, 83, 84, 92, 93, 98, 103, 117, 123, 127, 166, 170, 237, 238, 280, 285, 289, 293, 334, 337, 341, 381, 386, 387, 399, 407, 425, 427, 437, 443, 459, 463, 464, 467, 473, 475, 476, 477, 479], "tl": [32, 123, 338], "exampl": [33, 41, 62, 72, 75, 92, 96, 99, 100, 117, 123, 130, 131, 133, 134, 137, 144, 146, 152, 157, 158, 163, 164, 166, 169, 170, 172, 180, 185, 187, 190, 197, 211, 231, 232, 233, 237, 239, 240, 241, 245, 247, 267, 268, 276, 280, 289, 296, 301, 302, 304, 306, 311, 315, 316, 317, 326, 327, 329, 330, 332, 334, 335, 338, 340, 342, 344, 353, 355, 356, 357, 358, 362, 364, 375, 376, 378, 379, 385, 387, 392, 395, 396, 399, 404, 408, 410, 416, 417, 418, 420, 427, 437, 438], "pywidestringlist": 33, "pystatu": 33, "pypreconfig": 33, "preiniti": 33, "pyconfig": 33, "isol": [33, 98], "path": [33, 247, 291, 293, 351, 352, 419, 429, 447, 457, 458, 469, 471, 476, 478], "py_runmain": 33, "py_getargcargv": 33, "multi": [33, 44, 255, 338, 449, 463, 472, 475], "phase": [33, 44, 475], "privat": [33, 125, 437], "provision": [33, 473], "introduct": [34, 92, 94, 97, 103, 106, 107, 148, 247, 254, 280, 305, 326, 381, 431, 446, 450, 459, 460, 461], "includ": [34, 448], "count": [34, 51, 72], "detail": [34, 97, 102, 158, 180, 263, 265, 340], "embed": [34, 71, 73, 78, 351, 458, 459], "debug": [34, 41, 78, 94, 122, 123, 148, 182, 190, 244, 452, 453, 466, 469, 478], "iter": [35, 36, 84, 93, 94, 201, 215, 256, 258, 341, 385, 387, 425, 427, 437, 461, 463, 467, 475], "list": [37, 77, 79, 84, 94, 97, 144, 317, 341, 424, 427, 438, 439, 446, 449, 459, 465, 467], "integ": [38, 84, 256, 315, 341, 432, 461, 463, 465, 467], "map": [39, 50, 62, 63, 164, 248, 273, 275, 288, 341, 407, 424, 425], "data": [40, 75, 77, 83, 84, 93, 94, 99, 102, 104, 106, 107, 116, 133, 138, 140, 142, 150, 173, 178, 179, 208, 267, 282, 295, 296, 300, 304, 314, 344, 362, 366, 405, 422, 425, 439, 443, 448, 449, 458, 463, 467, 470, 478], "marshal": [40, 271, 296, 474], "memori": [41, 77, 267, 275, 281, 338, 341, 379, 470, 474, 475], "manag": [41, 74, 77, 92, 98, 100, 132, 149, 166, 167, 181, 194, 241, 280, 290, 323, 337, 341, 345, 366, 372, 387, 397, 418, 423, 425, 450, 464, 465, 469], "overview": [41, 71, 92, 97, 248, 255, 424, 467], "domain": [41, 155], "raw": [41, 63, 77, 84, 138, 255, 316], "interfac": [41, 56, 77, 78, 80, 83, 97, 148, 153, 181, 187, 188, 207, 224, 231, 252, 255, 256, 259, 284, 290, 296, 297, 298, 308, 317, 331, 334, 337, 355, 359, 364, 365, 366, 377, 385, 392, 403, 413, 418, 419, 448, 452, 472], "default": [41, 84, 117, 178, 289, 337, 338, 355, 386, 397, 419, 438, 458, 466, 474], "custom": [41, 92, 93, 99, 100, 117, 125, 129, 164, 173, 177, 200, 256, 265, 267, 280, 296, 305, 337, 342, 425, 435, 457, 458, 474, 476, 477], "hook": [41, 247, 317, 331, 429, 460, 462, 478], "pymalloc": [41, 462], "arena": 41, "tracemalloc": [41, 379, 474, 476, 477, 479], "memoryview": [42, 341, 466, 473], "instanc": [43, 84, 92, 93, 97, 178, 194, 296, 341, 425, 437], "singl": [44, 83, 84, 100, 166], "creation": [44, 97, 290, 335, 338, 382, 396, 425, 476], "none": [45, 83, 425], "old": [47, 385, 443, 461], "implement": [49, 57, 77, 78, 83, 100, 123, 166, 181, 233, 247, 259, 286, 318, 404, 408, 425, 431, 470, 473, 474, 476, 477], "perf": [50, 101], "reflect": 52, "set": [54, 123, 129, 192, 244, 247, 330, 338, 341, 350, 366, 381, 387, 425, 427, 439, 458, 462, 463], "slice": [55, 425, 427, 462], "ellipsi": [55, 341, 425], "stabil": [56, 105], "unstabl": 56, "stabl": [56, 79, 469, 472], "applic": [56, 71, 73, 80, 83, 85, 91, 92, 100, 155, 227, 237, 244, 344, 418, 456, 458, 464, 475], "binari": [56, 83, 84, 102, 104, 108, 142, 143, 155, 255, 341, 344, 416, 427, 449], "limit": [56, 98, 259, 305, 319, 341, 419, 441, 458], "scope": [56, 98, 426, 437, 460, 461], "perform": [56, 83, 84, 103, 144, 255, 296, 448, 453, 467, 473], "platform": [56, 128, 254, 300, 329, 373, 457, 458, 460, 469, 477], "consider": [56, 111, 140, 242, 265, 324, 338, 345, 429], "content": [56, 67, 77, 78, 79, 80, 83, 84, 85, 92, 110, 172, 178, 194, 208, 303, 311, 316, 330, 331, 334, 383, 387, 407], "common": [57, 83, 103, 108, 148, 180, 291, 303, 341, 342, 467], "base": [57, 84, 100, 113, 130, 154, 155, 158, 210, 227, 247, 250, 255, 280, 286, 362, 404, 412, 429, 465, 466, 472, 477], "access": [57, 63, 78, 83, 87, 93, 98, 164, 173, 216, 248, 249, 262, 263, 265, 281, 292, 293, 300, 348, 352, 363, 402, 416, 423, 425, 448, 461, 471, 477], "attribut": [57, 74, 75, 77, 84, 91, 92, 93, 100, 170, 232, 252, 264, 285, 289, 290, 337, 341, 349, 386, 387, 413, 425, 427, 429, 460, 461, 476, 477], "member": [57, 92, 93, 252], "flag": [57, 93, 103, 117, 119, 166, 190, 252, 289, 316, 453], "defin": [57, 74, 75, 84, 97, 98, 265, 289, 383, 425, 438, 440, 469, 472], "getter": [57, 98], "setter": [57, 98], "oper": [58, 77, 84, 94, 105, 115, 168, 223, 229, 240, 256, 279, 286, 288, 290, 293, 316, 329, 338, 341, 342, 427, 432, 448, 461, 467, 469, 470, 473, 474, 475, 479], "system": [58, 63, 71, 78, 108, 115, 148, 159, 209, 212, 290, 303, 310, 345, 349, 419, 429, 448, 453, 460, 473, 474, 475, 476], "util": [58, 64, 117, 166, 173, 175, 206, 208, 247, 285, 299, 306, 359, 382, 404, 414, 470], "tupl": [59, 77, 78, 84, 157, 341, 349, 383, 439], "struct": [59, 344, 473, 474, 476], "hint": [61, 263, 355, 383, 469, 470, 471, 475, 479], "quick": [62, 117, 164, 183, 386], "tp": 62, "slot": [62, 63, 98], "typedef": 62, "pytypeobject": 62, "definit": [62, 77, 92, 106, 110, 119, 236, 256, 424, 437, 476], "pyobject": 62, "pyvarobject": 62, "static": [62, 84, 92, 96, 98, 102, 252, 404, 425, 470, 471], "async": [62, 119, 424, 475], "charact": [63, 103, 174, 175, 192, 259, 344], "properti": [63, 92, 106, 180, 293, 465], "wchar_t": 63, "built": [63, 94, 145, 165, 210, 222, 341, 382, 383, 425, 459, 463, 477], "utf": [63, 155, 290, 337, 458, 476, 477], "8": [63, 98, 155, 290, 337, 458, 467, 476, 477, 478], "32": 63, "16": 63, "7": [63, 466, 476, 477], "escap": [63, 432], "latin": 63, "1": [63, 85, 107, 289, 338, 423, 459, 460, 464, 466, 468, 472, 477, 478, 479], "ascii": [63, 143, 175, 391], "mbc": [63, 155], "window": [63, 76, 85, 91, 128, 155, 174, 186, 244, 300, 345, 366, 381, 401, 402, 403, 458, 462, 465, 466, 470, 473, 476, 477], "veri": [65, 71], "weak": [66, 74, 399, 449, 460], "copyright": [68, 79], "distribut": [69, 189, 248, 315, 340, 456], "setuptool": 70, "anoth": [71, 84], "beyond": [71, 117], "an": [71, 72, 77, 78, 83, 84, 85, 87, 92, 97, 100, 106, 132, 133, 166, 180, 191, 193, 202, 246, 247, 259, 345, 387, 396, 410, 446, 458, 466], "pure": [71, 92, 293], "extend": [71, 72, 73, 78, 84, 125, 248, 289, 290, 396, 459, 462], "compil": [71, 72, 77, 78, 103, 119, 156, 160, 308, 348, 422, 447, 453, 458, 470, 478], "link": [71, 117, 173, 461], "under": [71, 85], "unix": [71, 76, 83, 123, 148, 170, 181, 217, 228, 300, 353, 388, 457], "like": [71, 79, 100, 229], "simpl": [72, 77, 92, 99, 103, 190, 232, 237, 328, 353, 404, 433, 461, 462, 469], "intermezzo": [72, 438], "back": 72, "": [72, 78, 79, 83, 84, 106, 109, 190, 284, 300, 305, 348, 352, 381, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "tabl": [72, 139, 278, 296, 348, 376], "linkag": 72, "extract": [72, 78, 355, 419], "keyword": [72, 84, 178, 260, 432, 438, 469, 475, 476], "arbitrari": [72, 78, 99, 289, 438, 470], "ownership": 72, "rule": [72, 84, 328, 330, 461], "thin": 72, "ic": 72, "null": [72, 341], "pointer": [72, 173], "write": [72, 78, 83, 84, 106, 114, 125, 130, 172, 267, 278, 316, 337, 346, 355, 359, 398, 443, 464, 465, 470], "provid": [72, 75, 99, 296, 352], "recommend": [73, 341], "third": 73, "parti": 73, "tool": [73, 83, 84, 184, 255, 270, 293, 297, 350, 359, 404, 438, 449, 466, 469, 471, 478], "without": [73, 85, 244, 458, 469], "cpython": [73, 77, 96, 469, 470, 471, 474, 476, 477, 478, 479], "runtim": [73, 85, 279, 312, 422, 470, 477, 478], "larger": 73, "assort": 74, "topic": 74, "de": [74, 146], "present": [74, 467], "comparison": [74, 93, 97, 105, 213, 256, 296, 341, 427, 460, 467], "more": [74, 77, 88, 91, 97, 100, 103, 286, 381, 387, 438, 439, 447, 470, 471], "suggest": 74, "tutori": [75, 79, 88, 92, 99, 117, 120, 173, 183, 289, 337, 381, 410, 442], "basic": [75, 88, 99, 105, 107, 108, 180, 190, 233, 259, 293, 364, 372, 381, 385, 417, 418, 425], "ad": [75, 78, 100, 117, 165, 286, 289, 466, 473, 476], "finer": [75, 93, 473], "over": [75, 84, 215], "subclass": [75, 84, 93, 100, 240, 318, 387, 425], "cookbook": [76, 93, 100], "approach": [76, 467, 469], "differ": [76, 84, 93, 102, 187, 232, 379, 381], "between": [76, 84, 102, 106, 143, 159, 280, 289, 340, 432], "dll": [76, 85, 173], "practic": [76, 84, 87, 92, 323], "design": 77, "histori": [77, 94, 104, 317, 423, 444], "faq": [77, 78, 79, 80, 82, 83, 84, 85, 183, 470], "why": [77, 78, 79, 80, 82, 83, 84, 85, 463, 470], "doe": [77, 79, 84, 85, 366], "indent": [77, 244, 354, 432], "group": [77, 94, 103, 117, 136, 210, 230, 289, 385, 424, 470], "statement": [77, 78, 110, 119, 166, 362, 377, 424, 425, 433, 438, 439, 464, 465], "am": [77, 84], "i": [77, 78, 79, 80, 82, 83, 84, 85, 91, 99, 108, 111, 120, 180, 255, 279, 305, 325, 326, 366, 425, 463, 465, 467, 470], "strang": 77, "result": [77, 84, 101, 339, 391], "arithmet": [77, 183, 256, 286, 427, 441, 449], "ar": [77, 78, 79, 83, 84, 93, 190, 289, 474], "calcul": [77, 446], "so": [77, 85, 472], "inaccur": 77, "immut": [77, 84, 341, 425], "must": 77, "self": [77, 84, 338, 470, 478], "explicitli": 77, "can": [77, 78, 79, 80, 82, 83, 84, 85, 247, 296, 470], "t": [77, 80, 83, 84, 452, 470], "assign": [77, 427, 433, 459, 478], "express": [77, 78, 94, 103, 106, 119, 316, 427, 433, 434, 437, 438, 463, 464, 478], "some": [77, 78], "e": [77, 78], "g": [77, 78], "index": [77, 84, 121, 127, 366, 462, 464], "len": 77, "join": [77, 432], "instead": [77, 84, 102, 467], "how": [77, 78, 79, 80, 83, 84, 85, 88, 89, 93, 100, 101, 102, 105, 108, 190, 289, 323, 337, 366, 381, 396, 456, 470], "fast": [77, 311, 478], "isn": 77, "switch": [77, 473], "case": [77, 98, 385, 424, 460], "you": [77, 83, 84, 102, 452, 479], "emul": [77, 425], "reli": [77, 84], "o": [77, 80, 83, 120, 210, 255, 279, 290, 291, 293, 325, 326, 345, 359, 425, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "lambda": [77, 84, 94, 427, 438], "machin": [77, 82], "languag": [77, 79, 84, 227, 235, 261, 342, 381, 430, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "doesn": [77, 83], "tradit": 77, "scheme": [77, 79, 352], "all": [77, 84, 128, 280, 289, 316, 379, 387, 466, 475, 476], "freed": 77, "when": [77, 84, 93, 97, 99, 104], "exit": [77, 117, 137], "separ": [77, 373, 462, 466, 468], "kei": [77, 80, 105, 108, 232, 234, 244, 280, 338, 469, 473], "sort": [77, 84, 105, 144], "return": [77, 84, 92, 173, 387, 433, 458], "do": [77, 78, 79, 80, 83, 84, 85, 108, 366], "specifi": [77, 84, 88, 102, 173, 267, 383, 418, 466, 468], "enforc": 77, "spec": [77, 429], "goto": 77, "r": 77, "end": [77, 84, 91, 105, 437], "backslash": [77, 84, 103], "have": [77, 79, 80, 84, 102], "don": [77, 83, 84, 470], "colon": 77, "requir": [77, 117, 173, 248, 453, 470], "while": [77, 80, 424], "def": 77, "allow": [77, 93], "comma": [77, 84, 462], "my": [78, 82, 83, 84, 85, 470], "own": [78, 173], "hard": 78, "ani": [78, 79, 83, 87, 166, 383, 386, 470], "altern": [78, 100, 315, 318, 431, 444, 458], "execut": [78, 83, 85, 123, 161, 190, 244, 321, 330, 350, 359, 364, 377, 418, 423, 425, 426, 435, 447, 458, 464], "evalu": [78, 426, 427, 476, 477], "py_buildvalu": 78, "length": [78, 232, 341], "catch": [78, 166], "output": [78, 83, 84, 88, 100, 244, 329, 443, 448, 449], "pyerr_print": 78, "anyth": 78, "stdout": [78, 83], "stderr": [78, 83], "written": 78, "setup": [78, 102, 455], "make": [78, 83, 84, 85, 98, 102, 316, 381, 459, 466, 471, 475, 476], "fail": [78, 97, 475], "want": [78, 84], "linux": [78, 101, 108, 290, 300, 457], "miss": [78, 85], "tell": [78, 381], "incomplet": [78, 173], "input": [78, 83, 91, 174, 186, 215, 226, 340, 375, 381, 434, 443, 444], "invalid": [78, 117, 429], "find": [78, 83, 84, 173, 276, 316, 410, 458], "undefin": 78, "symbol": [78, 209, 348], "__builtin_new": 78, "__pure_virtu": 78, "through": [78, 423], "inherit": [78, 178, 210, 290, 381, 437, 461, 474], "what": [79, 80, 82, 83, 84, 91, 99, 111, 190, 289, 296, 305, 366, 451, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "softwar": [79, 189, 423, 464], "foundat": 79, "restrict": [79, 93, 296, 327, 392, 426], "wa": 79, "first": [79, 437, 446], "place": [79, 84, 288], "good": [79, 102], "work": [79, 80, 83, 84, 108, 123, 183, 190, 255, 337, 383, 396, 419, 449], "obtain": [79, 101, 127], "copi": [79, 83, 84, 168, 329], "sourc": [79, 83, 84, 85, 106, 244, 247, 252, 308, 375, 422, 445, 462], "ve": 79, "never": [79, 122], "program": [79, 83, 84, 85, 91, 94, 104, 106, 132, 174, 219, 221, 227, 263, 280, 366, 426, 434, 446, 448, 456], "newsgroup": 79, "mail": [79, 83], "devot": 79, "beta": 79, "test": [79, 83, 84, 94, 102, 148, 190, 260, 338, 341, 359, 385, 387, 397, 423, 427, 475], "submit": 79, "report": 79, "patch": [79, 386, 387], "publish": 79, "articl": [79, 107], "book": 79, "where": [79, 83, 386], "world": [79, 120, 123, 366], "www": [79, 83], "org": [79, 458], "locat": [79, 321, 340, 413, 470], "monti": 79, "fly": [79, 227], "circu": 79, "real": [79, 315, 425], "mani": [79, 84, 323], "peopl": 79, "signific": [79, 474], "project": 79, "been": 79, "done": 79, "new": [79, 94, 181, 289, 397, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481], "develop": [79, 122, 184, 185, 244, 297, 459, 465, 477], "expect": [79, 385], "futur": [79, 100, 110, 123, 125, 126, 163, 433, 466, 470, 471, 472, 475, 476, 477, 479], "reason": 79, "propos": 79, "incompat": 79, "chang": [79, 84, 98, 99, 227, 381, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "begin": 79, "programm": 79, "graphic": [80, 365, 381], "user": [80, 91, 108, 211, 244, 265, 305, 352, 365, 383, 425, 440, 465, 469], "gui": [80, 100, 278, 456], "question": [80, 81, 83, 84], "toolkit": 80, "exist": [80, 130, 387], "tkinter": [80, 186, 244, 366, 367, 368, 369, 370, 371, 372, 373, 470, 471, 475, 476, 477, 478], "freez": 80, "tk": [80, 365, 366, 372, 373, 466], "event": [80, 100, 123, 125, 127, 135, 139, 322, 330, 350, 362, 366, 373, 381], "wait": [80, 133, 136, 325], "bind": [80, 244, 337, 366, 426], "frequent": [81, 345], "ask": 81, "instal": [82, 108, 148, 207, 278, 352, 453, 456, 457, 458, 459, 474], "comput": [82, 187, 379], "delet": [82, 83, 84, 386, 459], "librari": [83, 99, 100, 109, 160, 173, 251, 256, 353, 386, 392, 448, 449, 453, 465, 467, 470], "task": [83, 121, 123, 125, 136, 163], "x": [83, 84, 465, 466, 477], "math": [83, 272, 470, 471, 472, 473, 475, 476, 477, 478, 479], "py": [83, 102, 111, 470], "socket": [83, 100, 104, 107, 123, 130, 133, 334, 338, 359, 423, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479], "regex": 83, "etc": [83, 84], "script": [83, 84, 85, 148, 149, 276, 352, 381, 435, 447, 453, 456, 458, 464], "curs": [83, 91, 174, 175, 176, 469, 473, 475, 478, 479], "termcap": 83, "packag": [83, 107, 108, 111, 162, 189, 191, 248, 249, 299, 359, 406, 429, 447, 450, 456, 458, 460, 462, 464, 465, 473], "equival": [83, 84, 92], "onexit": 83, "compon": [83, 391, 434], "doc": 83, "keypress": [83, 85], "time": [83, 99, 100, 180, 363, 364, 422, 448, 462, 470, 472, 473, 475, 476, 477, 478, 479], "seem": 83, "run": [83, 85, 100, 122, 123, 132, 136, 244, 359, 385, 456, 458], "parcel": 83, "out": [83, 98, 296, 478], "among": 83, "bunch": 83, "worker": [83, 280], "kind": [83, 92], "mutat": 83, "safe": [83, 98, 474], "we": 83, "rid": 83, "And": [83, 87, 467], "read": [83, 98, 106, 114, 123, 130, 150, 172, 249, 267, 278, 346, 355, 398, 425, 443], "pipe": [83, 123, 280, 298], "popen": [83, 345, 472], "serial": [83, 271, 296, 422], "rs232": 83, "port": [83, 90, 102, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "close": [83, 92], "sy": [83, 117, 349, 350, 351, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "stdin": 83, "realli": 83, "network": [83, 97, 100, 123, 256, 257, 334, 335, 466], "internet": [83, 107, 253, 282, 343, 448], "mimic": 83, "cgi": [83, 148, 149, 475], "form": [83, 372, 383, 427], "submiss": 83, "post": [83, 178], "should": [83, 98, 323, 470, 479], "help": [83, 84, 117, 244, 289, 310, 381], "html": [83, 235, 236, 237, 472, 473, 474], "send": [83, 100], "avoid": [83, 98, 100], "block": [83, 85, 100, 102, 104, 122, 338, 379, 410, 424, 467], "connect": [83, 123, 130, 265, 280, 334, 337], "databas": [83, 181, 230, 278, 307, 336, 337, 384], "persist": [83, 295, 296, 327], "mathemat": [83, 151, 272, 287, 340, 448], "random": [83, 232, 262, 290, 315, 323, 338, 437, 471, 472, 476, 479], "breakpoint": [84, 477], "step": [84, 99, 446, 453, 458], "analysi": [84, 188, 328, 432], "stand": 84, "alon": 84, "guid": [84, 92, 120, 289, 337, 386], "core": [84, 117, 255, 459, 477], "unboundlocalerror": 84, "ha": 84, "loop": [84, 123, 125, 127, 130, 258, 438, 439], "same": [84, 85, 100, 387, 478], "share": [84, 173, 280, 281, 473], "across": [84, 100, 281], "best": [84, 87, 101, 323, 338], "pass": [84, 94, 100, 173, 433, 438, 445], "option": [84, 88, 102, 117, 190, 225, 231, 244, 259, 289, 297, 355, 366, 373, 377, 385, 419, 452, 453, 469, 476], "one": 84, "did": 84, "y": 84, "also": [84, 425], "higher": [84, 148, 223], "order": [84, 173, 178, 223, 265, 289, 344, 387, 427, 466, 467, 468, 476], "discov": 84, "name": [84, 92, 93, 103, 117, 155, 157, 208, 259, 290, 349, 355, 382, 386, 387, 425, 426, 427, 437, 462, 473], "up": [84, 107, 166, 247, 440], "preced": [84, 427], "ternari": 84, "possibl": [84, 381], "obfusc": 84, "liner": 84, "slash": 84, "mean": 84, "hexadecim": 84, "octal": 84, "22": 84, "10": [84, 87, 379, 469, 476, 477], "3": [84, 87, 90, 98, 102, 108, 109, 289, 338, 381, 423, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "int": [84, 341], "liter": [84, 106, 119, 424, 427, 432, 443, 465, 469, 470, 473, 476], "syntaxerror": [84, 469], "convert": [84, 106, 143, 337, 345], "modifi": [84, 103, 377, 410, 458], "perl": 84, "chomp": 84, "remov": [84, 458, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479], "trail": 84, "newlin": [84, 462], "scanf": [84, 316], "sscanf": 84, "unicodedecodeerror": 84, "unicodeencodeerror": 84, "odd": [84, 105, 437], "too": 84, "slow": 84, "speed": 84, "most": [84, 303], "effici": [84, 118, 258, 329], "wai": 84, "concaten": [84, 432], "togeth": [84, 289], "neg": 84, "revers": [84, 463], "duplic": [84, 93], "multipl": [84, 98, 99, 100, 108, 215, 386, 387, 437, 440, 447, 461, 475], "item": [84, 373, 470], "multidimension": 84, "appli": [84, 387], "a_tupl": 84, "addit": [84, 204, 341, 382, 456, 458, 475], "complic": 84, "schwartzian": 84, "transform": [84, 155, 470], "given": 84, "deleg": [84, 98, 473], "deriv": [84, 93, 232], "organ": [84, 385], "easier": 84, "overload": 84, "constructor": [84, 125, 227, 232, 345], "try": [84, 166, 424, 464], "__spam": 84, "_someclassname__spam": 84, "__del__": [84, 399], "id": [84, 363, 454, 456], "appear": [84, 381], "uniqu": [84, 93], "ident": [84, 427], "store": [84, 289, 458], "cach": [84, 429, 478], "pyc": [84, 472, 477], "current": [84, 108, 123, 252, 379], "mutual": [84, 117], "each": 84, "__import__": 84, "z": 84, "edit": [84, 244, 444], "reimport": 84, "show": [84, 477], "thi": [84, 98], "happen": [84, 99], "sometim": 85, "take": 85, "long": [85, 461, 463], "pyd": 85, "emb": [85, 263], "keep": 85, "editor": [85, 244, 454], "insert": [85, 100], "tab": [85, 373, 444], "solv": 85, "m": [85, 279, 401], "win": 85, "crt": 85, "l1": 85, "0": [85, 337, 381, 423, 459, 465, 467, 472, 479], "glossari": 86, "annot": [87, 341, 383, 426, 433, 438, 476, 477], "dict": [87, 100, 341, 386, 387, 476], "Of": [87, 467], "In": [87, 288, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "newer": 87, "9": [87, 423, 479], "older": [87, 345, 355], "un": 87, "stringiz": 87, "For": [87, 91, 263, 397, 466], "__annotations__": 87, "quirk": 87, "argpars": [88, 117, 466, 469, 472, 474, 475, 477], "concept": [88, 366], "introduc": 88, "posit": [88, 289, 316, 381, 425, 438, 469, 478], "short": [88, 102], "combin": [88, 93, 338], "littl": 88, "ambigu": [88, 354], "conflict": [88, 289], "translat": [88, 109, 227, 381, 477], "conclus": 88, "clinic": [89, 474], "To": [89, 467], "pad": 91, "displai": [91, 99, 123, 174, 379, 427, 460], "text": [91, 102, 155, 174, 190, 244, 255, 262, 316, 337, 341, 360, 361, 371, 407, 446, 467], "color": [91, 159, 244, 367, 381], "howto": [92, 93, 94, 95, 99, 103, 104, 106, 107], "primer": 92, "constant": [92, 134, 151, 165, 174, 180, 183, 232, 272, 275, 311, 334, 337, 338, 342, 345, 363, 374, 383, 402], "thought": 92, "complet": [92, 244, 317, 320, 325, 434, 444], "valid": [92, 404], "technic": [92, 180], "invoc": [92, 345], "super": 92, "summari": [92, 278, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "logic": [92, 183, 256, 432], "automat": [92, 93, 244], "orm": 92, "__slots__": [92, 425, 469], "enum": [93, 208, 469, 470, 471, 474, 475, 476, 477], "programmat": [93, 247, 297, 377], "enumer": [93, 208, 462], "ensur": 93, "dataclass": [93, 178, 469, 470, 477], "pickl": [93, 169, 296, 297, 422, 462, 473, 474, 475, 476, 478], "intenum": 93, "strenum": 93, "intflag": 93, "__new__": 93, "v": [93, 316, 383, 467], "__init__": [93, 178], "__dunder__": [93, 208], "_sunder_": [93, 208], "_private__nam": 93, "mix": 93, "minutia": 93, "aka": 93, "omit": 93, "auto": 93, "descript": [93, 117, 158, 311], "orderedenum": 93, "duplicatefreeenum": 93, "planet": 93, "timeperiod": 93, "enumtyp": 93, "formal": [94, 471], "provabl": 94, "modular": 94, "eas": 94, "compos": 94, "That": 94, "comprehens": [94, 119, 439, 459, 471, 476], "itertool": [94, 258, 469, 471, 472, 473, 477, 478], "element": [94, 407, 410], "select": [94, 100, 186, 325, 338, 423, 472, 473, 474], "combinator": 94, "functool": [94, 223, 470, 472, 473, 474, 475, 477, 478], "small": [94, 364], "revis": [94, 465], "acknowledg": [94, 106, 227, 423, 459, 460, 461, 462, 463, 464, 465, 466], "instrument": 96, "dtrace": [96, 476], "systemtap": [96, 476], "enabl": [96, 101, 123, 466, 474], "marker": 96, "probe": [96, 476], "avail": [96, 180, 254, 397], "tapset": 96, "ipaddress": [97, 256, 473, 474, 475, 477, 479], "address": [97, 256, 280], "note": [97, 144, 183, 204, 208, 233, 254, 286, 315, 330, 334, 335, 338, 345, 373, 440, 470], "ip": [97, 256], "host": [97, 256], "inspect": [97, 252, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "who": 98, "background": [98, 263, 289], "enter": 98, "surpris": [98, 173], "edg": [98, 325], "opt": [98, 255], "One": [98, 146], "tp_travers": 98, "lower": 98, "tp_dealloc": 98, "Not": 98, "overrid": [98, 397, 471], "tp_free": 98, "pyobject_new": 98, "regular": [98, 103, 106, 316, 429], "lifetim": [98, 125], "open": [98, 100, 107, 123, 133, 249, 392], "lossless": 98, "log": [99, 100, 122, 264, 265, 266, 280, 449, 462, 466, 470, 472, 473, 474, 475, 476, 477, 478], "messag": [99, 100, 193, 202, 204, 227, 232, 234, 263, 268, 370, 469, 471], "date": [99, 123, 180, 448, 462], "next": 99, "flow": [99, 119, 438], "logger": [99, 100, 264], "formatt": [99, 100, 264], "dure": 99, "optim": [99, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "resourc": [99, 100, 107, 249, 250, 319, 419, 456, 471, 473, 474, 477], "destin": 100, "server": [100, 123, 130, 133, 242, 335, 338, 404, 415, 416, 417, 472, 477], "receiv": 100, "listen": [100, 280], "product": 100, "contextu": 100, "your": [100, 102, 148, 173, 227, 289, 387, 436, 479], "loggeradapt": [100, 264], "impart": 100, "than": 100, "filter": [100, 264, 267, 355, 377, 379, 397], "contextvar": [100, 167, 477], "concurr": [100, 122, 136, 161, 162, 163, 472, 475, 476, 477, 479], "processpoolexecutor": [100, 163], "deploi": 100, "web": [100, 240, 400, 472], "gunicorn": 100, "uwsgi": 100, "rotat": 100, "logrecord": [100, 264], "queuehandl": [100, 265, 266], "zeromq": 100, "queuelisten": [100, 265, 266], "namer": 100, "elabor": 100, "multiprocess": [100, 280, 281, 465, 473, 474, 475, 476, 477, 478, 479], "bom": [100, 155], "sent": 100, "sysloghandl": [100, 266], "dictconfig": 100, "particular": 100, "throughout": 100, "factori": [100, 136, 157, 178, 256, 337], "speak": 100, "them": 100, "condition": 100, "email": [100, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 472, 473, 474, 475, 476], "utc": 100, "gmt": 100, "via": [100, 337, 458], "cli": [100, 153], "starter": 100, "templat": [100, 186, 298, 342, 449], "qt": 100, "syslog": [100, 353], "rfc5424": 100, "treat": 100, "stream": [100, 121, 130, 133, 155, 215, 255, 296], "pattern": [100, 103, 119, 217, 228, 381, 424, 425, 448, 469], "nullhandl": [100, 266], "lot": 100, "2": [102, 107, 109, 289, 337, 381, 423, 459, 460, 461, 462, 463, 464, 465, 466, 467, 472, 476, 477, 479], "explan": [102, 337, 381], "sure": 102, "proper": 102, "coverag": 102, "Be": 102, "awar": [102, 106, 180, 475], "updat": [102, 397, 466, 479], "divis": [102, 461], "versu": [102, 103, 425], "featur": [102, 278, 383, 426, 464, 466, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "detect": [102, 122, 354], "prevent": 102, "compat": [102, 292, 328, 373, 421], "regress": [102, 359], "which": [102, 190], "depend": [102, 329, 397], "transit": 102, "denot": 102, "continu": [102, 173, 433, 438], "integr": [102, 264, 425], "stai": 102, "consid": 102, "match": [103, 117, 119, 217, 316, 387, 424, 425, 438, 448, 469], "repeat": [103, 259], "thing": 103, "plagu": 103, "power": [103, 151, 272, 427], "metacharact": 103, "captur": [103, 424], "lookahead": 103, "assert": [103, 387, 433], "split": 103, "search": [103, 144, 244, 248, 316, 351, 429, 447], "replac": [103, 166, 244, 345, 429, 470], "problem": [103, 148, 340], "greedi": 103, "re": [103, 178, 316, 385, 470, 473, 474, 475, 476, 477], "verbos": [103, 387], "feedback": 103, "ipc": 104, "disconnect": 104, "die": 104, "TO": 105, "ascend": 105, "descend": 105, "decor": [105, 166, 208, 383, 386, 387, 463, 465, 471], "undecor": 105, "compar": [106, 399, 439], "filenam": [106, 217, 273], "tip": [106, 263], "unknown": 106, "fetch": [107, 252], "urllib": [107, 389, 390, 391, 392, 393, 469, 472, 473, 474, 475, 476, 477, 479], "url": [107, 389, 391, 392], "header": [107, 133, 199, 200, 404, 473], "urlerror": 107, "httperror": 107, "wrap": [107, 361, 366], "info": 107, "geturl": 107, "authent": [107, 234, 280], "proxi": [107, 280, 386], "footnot": 107, "term": [108, 423], "usag": [108, 111, 117, 119, 146, 147, 180, 190, 231, 232, 244, 259, 276, 297, 319, 375, 377, 395, 416, 455, 473], "pip": [108, 207, 450, 466, 474], "prior": 108, "4": [108, 289, 463, 470, 474, 475, 476], "just": 108, "scientif": 108, "parallel": [108, 163, 280, 362, 478], "2to3": 109, "autom": 109, "fixer": 109, "lib2to3": 109, "__future__": [110, 460], "__main__": [111, 429, 477], "top": [111, 259, 379, 434], "environ": [111, 290, 351, 381, 396, 404, 422, 445, 450, 452, 458, 466, 473, 475, 476], "__name__": 111, "idiomat": 111, "_thread": [112, 469], "abc": [113, 158, 247, 250, 286, 383, 469, 472, 473, 474, 475, 479], "aifc": [114, 474, 477], "aiff": 114, "servic": [115, 142, 171, 227, 261, 263, 274, 312, 360, 388, 401, 423], "compress": [116, 146, 267, 421, 448], "archiv": [116, 329, 355, 418, 419, 420, 462], "parser": [117, 164, 204, 225, 237, 289, 311, 393, 411, 413, 465, 479], "command": [117, 119, 147, 152, 153, 160, 187, 188, 207, 225, 231, 244, 252, 259, 289, 290, 294, 297, 308, 331, 337, 345, 355, 359, 364, 372, 375, 377, 385, 395, 418, 419, 448, 452, 458, 466, 472, 473, 474, 476], "line": [117, 119, 147, 152, 153, 160, 187, 188, 207, 215, 225, 231, 244, 252, 259, 262, 289, 290, 297, 308, 317, 331, 337, 355, 359, 364, 375, 377, 385, 395, 418, 419, 432, 448, 452, 458, 463, 466, 469, 472, 473], "add_argu": 117, "argumentpars": 117, "prog": 117, "epilog": 117, "parent": 117, "formatter_class": 117, "prefix_char": 117, "fromfile_prefix_char": 117, "argument_default": 117, "allow_abbrev": 117, "conflict_handl": 117, "add_help": 117, "exit_on_error": 117, "action": [117, 289, 440], "narg": 117, "const": 117, "choic": 117, "metavar": 117, "dest": 117, "parse_arg": 117, "syntax": [117, 119, 316, 342, 410, 437, 440, 465, 467, 469, 471, 473, 475, 476], "abbrevi": 117, "prefix": [117, 256, 352, 479], "argv": 117, "namespac": [117, 381, 410, 425, 429, 437, 473], "filetyp": 117, "exclus": 117, "partial": [117, 223, 387, 409, 464], "intermix": 117, "upgrad": [117, 123], "optpars": [117, 289, 462], "ast": [119, 465, 472, 476, 478, 479], "tree": [119, 232, 374, 409, 410], "grammar": [119, 428], "node": [119, 407], "root": 119, "subscript": [119, 427], "await": [119, 122, 136, 425, 427, 475], "helper": [119, 187, 342, 345, 383, 386], "asyncio": [120, 122, 132, 167, 423, 469, 470, 471, 474, 475, 476, 477, 478, 479], "hello": [120, 123, 366], "queue": [121, 131, 233, 280, 313, 439, 477], "subprocess": [121, 123, 128, 130, 134, 244, 345, 463, 473, 474, 475, 476, 477], "synchron": [121, 135, 280, 313], "mode": [122, 123, 183, 185, 232, 290, 435, 445, 452, 458, 466, 477], "multithread": 122, "retriev": [122, 252, 378], "stop": [123, 386], "schedul": [123, 136, 290, 322], "callback": [123, 173, 289, 350, 462], "delai": 123, "transfer": 123, "watch": 123, "directli": [123, 247], "dn": 123, "pool": [123, 280], "call_soon": 123, "call_lat": 123, "sigint": 123, "sigterm": 123, "transport": [127, 130], "polici": [127, 129, 205, 473], "maco": [128, 244, 300, 453, 479], "watcher": 129, "hierarchi": [130, 210, 255, 425, 465, 473], "onli": [130, 178, 244, 425, 438, 469, 477, 478], "datagram": 130, "tcp": [130, 133], "echo": [130, 133], "client": [130, 133, 220, 239, 240, 245, 280, 285, 302, 332, 338, 356, 415, 416, 466, 472, 474, 475, 476, 477], "udp": 130, "subprocess_exec": 130, "subprocessprotocol": 130, "prioriti": [131, 233], "lifo": 131, "runner": 132, "keyboard": 132, "interrupt": [132, 419], "streamread": [133, 155], "streamwrit": [133, 155], "http": [133, 238, 239, 240, 241, 242, 404, 466, 472, 473, 474, 475, 476, 477, 479], "regist": [133, 169, 337, 350], "interact": [134, 154, 190, 426, 434, 435, 444, 445, 460, 464], "primit": [135, 136, 280, 383], "condit": [135, 289, 362, 423, 427, 439, 464], "semaphor": [135, 362], "boundedsemaphor": 135, "barrier": [135, 362], "cancel": 136, "sleep": 136, "eager": 136, "shield": 136, "timeout": [136, 211, 334], "introspect": [136, 252, 383], "atexit": 137, "audioop": [138, 423, 474], "manipul": [138, 256, 268, 289, 291], "audio": [138, 292], "audit": [139, 478], "base64": [140, 469, 473, 474], "base16": 140, "base32": 140, "base85": 140, "secur": [140, 148, 232, 242, 265, 323, 324, 338, 345, 391, 453, 466, 474], "bdb": [141, 469], "framework": [141, 219, 335, 385, 460, 473], "binascii": [143, 473, 476, 477], "bisect": [144, 469], "algorithm": [144, 232, 233, 248, 267, 381, 474], "builtin": [145, 386, 426, 467, 470, 473, 478], "bz2": [146, 473, 475], "bzip2": 146, "increment": [146, 155, 265], "shot": 146, "calendar": [147, 471, 477], "gatewai": [148, 404, 472], "care": 148, "solut": 148, "cgitb": 149, "traceback": [149, 211, 378, 379, 425, 469, 470, 474, 475, 476], "chunk": 150, "iff": 150, "cmath": [151, 475, 476], "polar": 151, "coordin": 151, "logarithm": [151, 272], "trigonometr": [151, 272], "hyperbol": [151, 272], "classif": 151, "cmd": 152, "orient": [152, 293, 381], "consol": [154, 279, 476], "stateless": 155, "decod": [155, 259, 314, 394, 405], "incrementalencod": 155, "incrementaldecod": 155, "streamreaderwrit": 155, "streamrecod": 155, "idna": 155, "internation": [155, 199, 227, 243, 263], "ansi": 155, "codepag": 155, "utf_8_sig": 155, "signatur": [155, 252, 473], "codeop": 156, "datatyp": [157, 164, 462], "chainmap": 157, "recip": [157, 158, 166, 183, 258, 315, 323, 337, 340], "counter": 157, "dequ": 157, "defaultdict": 157, "namedtupl": 157, "ordereddict": 157, "userdict": 157, "userlist": 157, "userstr": 157, "colorsi": [159, 474], "compileal": [160, 475, 477, 479], "public": [160, 381], "launch": 163, "executor": 163, "threadpoolexecutor": 163, "configpars": [164, 471, 472, 475], "fallback": 164, "ini": [164, 458], "interpol": 164, "behaviour": 164, "legaci": [164, 345, 392, 477], "rawconfigpars": 164, "site": [165, 331, 465, 469, 472, 476], "contextlib": [166, 383, 464, 465, 469, 470, 472, 473, 474, 475, 476, 477], "__enter__": 166, "clean": [166, 440], "reusabl": 166, "reentrant": 166, "shallow": 168, "deep": 168, "copyreg": 169, "crypt": [170, 473, 477], "password": [170, 226, 307, 336], "hash": [170, 232, 234, 341, 474, 477], "cryptograph": 171, "csv": [172, 471, 472, 475, 478], "dialect": 172, "reader": 172, "writer": [172, 263], "ctype": [173, 280, 464, 465, 472, 478], "foreign": 173, "load": [173, 186, 385, 429], "variad": [173, 470], "prototyp": 173, "union": [173, 341, 469], "align": [173, 344], "bit": [173, 252, 402, 467], "export": 173, "size": [173, 232, 290, 329, 344, 379], "termin": [174, 290, 306, 329, 380, 448], "textpad": 174, "widget": [174, 366, 371, 372, 373, 466], "textbox": 174, "panel": 176, "stack": [176, 252, 378, 439], "init": [178, 317], "frozen": [178, 470], "mutabl": [178, 341, 387, 425], "naiv": [180, 340], "determin": [180, 246, 333, 425], "timedelta": 180, "tzinfo": 180, "timezon": [180, 363], "strftime": 180, "strptime": 180, "behavior": [180, 419, 469, 474, 475, 476, 477, 478], "dbm": [181, 472, 474, 475, 476, 477], "gnu": [181, 227, 317, 320], "ndbm": 181, "dumb": 181, "portabl": [181, 226], "decim": [183, 449, 463, 472, 473, 476, 477], "fix": [183, 289, 460, 461, 462, 466], "operand": 183, "round": 183, "mitig": 183, "off": [183, 350], "increas": 183, "precis": [183, 469, 471], "special": [183, 272, 341, 381, 383, 425, 429, 438, 462, 467, 470], "effect": [185, 387], "resourcewarn": 185, "bad": 185, "dialog": [186, 367], "simpledialog": 186, "filedialog": 186, "nativ": [186, 344], "save": [186, 443], "commondialog": 186, "difflib": [187, 475], "delta": 187, "sequencematch": 187, "ndiff": 187, "di": [188, 471, 472, 474, 477], "disassembl": 188, "bytecod": [188, 359, 429, 469, 470, 471, 476, 477, 478, 479], "instruct": 188, "opcod": [188, 470], "doctest": [190, 463, 469, 474, 475], "docstr": [190, 381], "It": 190, "examin": [190, 348], "recogn": 190, "unittest": [190, 385, 386, 387, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "doctestfind": 190, "doctestpars": 190, "doctestrunn": 190, "outputcheck": 190, "soapbox": 190, "mime": [191, 194, 198, 203, 273, 314], "charset": 192, "repres": [192, 193, 202], "compat32": 193, "contentmanag": 194, "defect": 196, "headerregistri": 200, "scratch": 203, "feedpars": 204, "miscellan": [206, 267, 280, 290, 372, 452, 457, 467], "ensurepip": [207, 466, 471, 474], "bootstrap": [207, 466, 474], "errno": 209, "faulthandl": [211, 469, 473, 475, 476], "dump": 211, "fault": [211, 416], "after": 211, "fcntl": [212, 470, 479], "ioctl": 212, "filecmp": [213, 474], "directori": [213, 216, 278, 290, 329, 357, 447, 465, 472, 475], "dircmp": 213, "fileinput": [215, 469, 476], "fnmatch": 217, "fraction": [218, 465, 470, 471, 472], "ration": 218, "ftplib": [220, 471, 473, 479], "ftp": [220, 472], "ftp_tl": 220, "callabl": [223, 252, 337, 383, 425], "gc": [224, 469, 473, 474, 477, 478, 479], "getopt": 225, "getpass": 226, "gettext": [227, 477, 478], "multilingu": 227, "nulltransl": 227, "gnutransl": 227, "solari": 227, "catalog": [227, 263], "defer": 227, "glob": [228, 469, 474, 475], "pathnam": [228, 291], "expans": 228, "graphlib": [229, 479], "graph": 229, "grp": [230, 476], "gzip": [231, 421, 471, 472, 475, 478], "hashlib": [232, 464, 469, 470, 471, 472, 474, 476, 479], "digest": 232, "shake": 232, "blake2": 232, "person": 232, "credit": 232, "heapq": [233, 475], "theori": 233, "hmac": [234, 469, 473, 474, 477], "hypertext": 235, "markup": [235, 270], "entiti": 236, "xhtml": 237, "htmlparser": 237, "statu": 238, "httpconnect": 239, "httprespons": 239, "httpmessag": 239, "cookiejar": 240, "cooki": [240, 241, 423], "filecookiejar": 240, "co": 240, "browser": [240, 309, 400], "cookiepolici": 240, "defaultcookiepolici": 240, "morsel": 241, "idl": [244, 459, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479], "menu": 244, "shell": [244, 298, 328, 345], "navig": [244, 366], "calltip": 244, "startup": [244, 317, 435, 470], "failur": [244, 385], "prefer": 244, "idlelib": [244, 469, 470, 474, 475, 476, 477, 478, 479], "imaplib": [245, 472, 473, 475, 479], "imap4": 245, "imghdr": [246, 475], "imag": [246, 366, 372], "importlib": [247, 248, 249, 250, 429, 466, 469, 471, 473, 474, 475, 476, 477, 479], "machineri": 247, "lazi": [247, 426, 470], "approxim": [247, 340, 475], "import_modul": 247, "metadata": [248, 460, 462, 464, 469], "entri": [248, 425, 429], "discoveri": [248, 385], "deprec": [249, 337, 357, 383, 459, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "live": 252, "webassembli": [254, 453], "io": [255, 383, 471, 472, 473, 475, 477, 478], "encodingwarn": [255, 469], "reentranc": 255, "ipv4": 256, "ipv6": 256, "conveni": [256, 400, 416], "net": 256, "mask": 256, "interprocess": 257, "commun": 257, "json": [259, 296, 443, 465, 475, 476, 478], "complianc": 259, "interoper": 259, "infinit": 259, "nan": 259, "within": 259, "linecach": [262, 469, 475], "facil": 264, "safeti": 264, "config": 265, "schema": 265, "extern": [265, 296], "resolut": [265, 426, 477], "streamhandl": 266, "filehandl": [266, 392], "watchedfilehandl": 266, "baserotatinghandl": 266, "rotatingfilehandl": 266, "timedrotatingfilehandl": 266, "sockethandl": 266, "datagramhandl": 266, "nteventloghandl": 266, "smtphandler": 266, "memoryhandl": 266, "httphandler": [266, 392], "lzma": [267, 473, 475], "decompress": [267, 419], "chain": [267, 338, 387, 440], "mailbox": [268, 472], "variou": 268, "maildir": 268, "mbox": 268, "mh": 268, "babyl": 268, "mmdf": 268, "maildirmessag": 268, "mboxmessag": 268, "mhmessag": 268, "babylmessag": 268, "mmdfmessag": 268, "mailcap": 269, "theoret": 272, "represent": [272, 422, 441, 473], "angular": 272, "mimetyp": [273, 477], "multimedia": 274, "mmap": [275, 473, 474, 478], "madv_": 275, "map_": 275, "modulefind": 276, "msilib": [278, 477], "microsoft": [278, 458], "view": [278, 341, 466, 467], "record": [278, 379, 449], "cab": 278, "precomput": 278, "msvcrt": 279, "routin": [279, 353], "vc": 279, "exchang": 280, "sharedctyp": 280, "remot": [280, 423], "cleanup": [280, 289, 474], "dummi": 280, "guidelin": 280, "spawn": [280, 345], "forkserv": 280, "shared_memori": 281, "netrc": 283, "ni": 284, "sun": [284, 346], "yellow": 284, "page": 284, "nntplib": [285, 473, 479], "nntp": [285, 472], "tower": 286, "implementor": 286, "terminologi": 289, "understand": [289, 366], "put": 289, "popul": 289, "trivial": 289, "5": [289, 464, 470, 475, 476, 478], "6": [289, 381, 423, 459, 465, 467, 476, 477], "ossaudiodev": 292, "oss": 292, "devic": 292, "mixer": 292, "pathlib": [293, 469, 470, 471, 474, 475, 476, 477, 478, 479], "filesystem": [293, 476, 478], "individu": [293, 470], "part": [293, 449], "correspond": [293, 381], "pdb": [294, 471, 472, 473, 474, 476, 477, 479], "relationship": [296, 459], "unpickl": 296, "dispatch": 296, "reduct": 296, "band": [296, 478], "consum": 296, "pickletool": [297, 476], "pipelin": [298, 345], "pkgutil": 299, "underli": 300, "identifi": [300, 350, 373, 427, 432], "cross": [300, 453], "java": 300, "plistlib": [301, 465, 474, 478], "appl": [301, 479], "plist": 301, "poplib": [302, 472, 474, 475, 479], "pop3": 302, "posix": [303, 358], "larg": 303, "notabl": [303, 470, 475, 476, 477, 478, 479], "pprint": [304, 469, 474, 478, 479], "pretti": [304, 379], "printer": 304, "prettyprint": 304, "instant": 305, "cprofil": [305, 477, 478], "stat": [305, 339, 473, 474], "determinist": 305, "calibr": 305, "timer": [305, 362], "pty": [306, 474], "pseudo": [306, 315], "pwd": 307, "py_compil": [308, 469, 477, 478], "pyclbr": [309, 469], "pydoc": [310, 472, 473, 474, 476, 477, 479], "onlin": 310, "xml": [311, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 423, 459, 469, 471, 473, 474, 475, 477, 478, 479], "expat": [311, 423], "xmlparser": [311, 410], "expaterror": 311, "model": [311, 366, 407, 425, 426, 460], "simplequeu": 313, "quopri": 314, "quot": [314, 391], "printabl": 314, "bookkeep": 315, "discret": 315, "reproduc": 315, "pair": 316, "simul": [316, 340], "phonebook": 316, "mung": 316, "adverb": 316, "notat": [316, 431, 465], "token": [316, 323, 374, 375, 432, 471, 478], "readlin": [317, 320, 331, 475, 476], "reprlib": [318, 472], "repr": [318, 429], "rlcomplet": [320, 476], "runpi": 321, "sched": [322, 473], "secret": [323, 476], "dev": [325, 477], "poll": 325, "trigger": 325, "epol": 325, "kqueue": [325, 423], "kevent": 325, "selector": [326, 372, 474, 475], "multiplex": 326, "shelv": [327, 469, 474], "shlex": [328, 473, 476, 478], "lexic": [328, 432], "improv": [328, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "shutil": [329, 470, 471, 472, 473, 474, 475, 478], "copytre": 329, "rmtree": 329, "base_dir": 329, "sigpip": 330, "sitecustom": 331, "usercustom": 331, "smtplib": [332, 473, 474, 475, 479], "smtp": 332, "sndhdr": [333, 475], "sound": [333, 403], "famili": [334, 345], "accept": 334, "socketserv": [335, 473, 476, 477], "tcpserver": 335, "udpserv": 335, "mixin": 335, "spwd": 336, "shadow": 336, "sqlite3": [337, 464, 469, 470, 471, 472, 473, 474, 475, 476, 477], "db": 337, "sqlite": 337, "cursor": 337, "row": 337, "blob": 337, "prepareprotocol": 337, "adapt": [337, 470], "placehold": 337, "sql": 337, "shortcut": 337, "uri": 337, "transact": 337, "autocommit": 337, "isolation_level": 337, "ssl": [338, 465, 469, 471, 472, 473, 474, 475, 476, 477, 478], "wrapper": [338, 369], "certif": [338, 466, 472, 474], "ca": 338, "sign": 338, "side": [338, 387], "bio": [338, 475], "session": 338, "verifi": 338, "cipher": 338, "statist": [340, 379, 469, 471, 474, 476, 478], "averag": 340, "measur": [340, 364, 381, 448], "central": 340, "spread": 340, "two": [340, 466], "normaldist": 340, "classic": 340, "probabl": 340, "mont": 340, "carlo": 340, "binomi": 340, "bayesian": 340, "classifi": 340, "kernel": 340, "densiti": 340, "estim": 340, "truth": 341, "bitwis": [341, 427], "bool": 341, "rang": [341, 438], "str": 341, "printf": 341, "bytearrai": [341, 475], "frozenset": 341, "alia": 341, "genericalia": 341, "notimpl": [341, 425], "affect": 341, "mini": 342, "stringprep": 343, "prepar": [343, 425], "bin": 345, "sh": 345, "substitut": [345, 444, 463], "popen2": 345, "popen3": 345, "disabl": [345, 350], "vfork": 345, "posix_spawn": 345, "sunau": [346, 474, 477], "au": 346, "au_read": 346, "au_writ": 346, "supersed": 347, "symtabl": 348, "float_info": 349, "monitor": [350, 471], "ancillari": 350, "stop_iter": 350, "turn": 350, "virtual": [351, 373, 396, 450, 458, 473, 475], "_pth": 351, "sysconfig": [352, 466, 470, 472, 475], "posix_us": 352, "nt_user": 352, "osx_framework_us": 352, "home": 352, "posix_hom": 352, "posix_prefix": 352, "nt": [352, 462], "tabnanni": 354, "tarfil": [355, 470, 472, 473, 474, 475, 478], "tar": 355, "tarinfo": 355, "further": [355, 387], "verif": [355, 466, 474], "telnetlib": [356, 476], "telnet": 356, "tempfil": [357, 470, 471, 472, 473], "temporari": [357, 458], "termio": 358, "tty": [358, 380], "unit": [359, 385], "suit": [359, 423], "socket_help": 359, "script_help": 359, "bytecode_help": 359, "correct": 359, "threading_help": 359, "os_help": 359, "import_help": 359, "warnings_help": 359, "textwrap": [361, 473, 474], "fill": [361, 381], "rlock": 362, "clock": 363, "timeit": [364, 475, 476], "snippet": 364, "tcl": 366, "architectur": 366, "life": 366, "preserv": [366, 476], "handi": 366, "packer": [366, 405], "coupl": 366, "colorchoos": 367, "choos": 367, "dnd": 368, "drag": 368, "drop": 368, "font": 369, "messagebox": 370, "prompt": 370, "scrolledtext": 371, "scroll": 371, "tix": 372, "hierarch": 372, "listbox": 372, "tabular": 372, "geometri": 372, "ttk": [373, 466], "theme": [373, 466], "scrollabl": 373, "label": 373, "combobox": 373, "spinbox": 373, "notebook": 373, "progressbar": 373, "sizegrip": 373, "treeview": 373, "tag": [373, 472], "column": 373, "layout": [373, 449], "tomllib": 376, "toml": 376, "track": [377, 387], "main": [377, 453, 465], "tracebackexcept": 378, "stacksummari": 378, "framesummari": 378, "peak": 379, "domainfilt": 379, "snapshot": 379, "statisticdiff": 379, "turtl": 381, "star": 381, "draw": 381, "pen": 381, "quickli": 381, "turtlescreen": 381, "screen": 381, "rawturtl": 381, "motion": 381, "visibl": [381, 473], "anim": 381, "turtledemo": [381, 472], "demo": [381, 471, 478], "sinc": 381, "relev": 383, "pep": [383, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "alias": [383, 424], "newtyp": 383, "nomin": 383, "subtyp": 383, "recognis": 383, "timelin": 383, "major": 383, "unicodedata": [384, 470, 471, 475, 476, 477, 478, 479], "skip": 385, "distinguish": 385, "subtest": 385, "load_test": 385, "fixtur": 385, "setupclass": 385, "teardownclass": 385, "setupmodul": 385, "teardownmodul": 385, "mock": [386, 387, 475, 476, 477], "attach": 386, "patcher": 386, "test_prefix": 386, "nest": [386, 387, 439, 460, 461, 469], "magicmock": [386, 387], "magic": 386, "sentinel": 386, "create_autospec": 386, "filter_dir": 386, "mock_open": 386, "autospecc": 386, "seal": 386, "side_effect": 387, "everi": 387, "unbound": 387, "cope": 387, "less": 387, "openerdirector": 392, "basehandl": 392, "httpredirecthandl": 392, "httpcookieprocessor": 392, "proxyhandl": 392, "httppasswordmgr": 392, "httppasswordmgrwithpriorauth": 392, "abstractbasicauthhandl": 392, "httpbasicauthhandl": 392, "proxybasicauthhandl": 392, "abstractdigestauthhandl": 392, "httpdigestauthhandl": 392, "proxydigestauthhandl": 392, "httpshandler": 392, "datahandl": 392, "ftphandler": 392, "cacheftphandl": 392, "unknownhandl": 392, "httperrorprocessor": 392, "respons": [392, 404], "robotpars": [393, 476], "robot": 393, "txt": 393, "uu": [394, 477], "uuencod": [394, 423], "uuid": [395, 471, 477], "accord": 395, "rfc": 395, "4122": 395, "venv": [396, 470, 474, 476, 478, 479], "envbuild": 396, "describ": 397, "temporarili": 397, "suppress": [397, 473], "wave": [398, 474, 477], "wav": 398, "wave_read": 398, "wave_writ": 398, "weakref": [399, 474, 478], "webbrows": [400, 471, 473], "winreg": [402, 476], "hkey_": 402, "right": 402, "64": 402, "winsound": [403, 476], "plai": 403, "wsgiref": [404, 464, 475], "wsgi": 404, "simple_serv": 404, "conform": [404, 407], "checker": 404, "xdrlib": 405, "xdr": 405, "vulner": 406, "defusedxml": 406, "dom": [407, 408, 409, 459], "domimplement": 407, "nodelist": 407, "documenttyp": 407, "attr": 407, "namednodemap": 407, "comment": [407, 432], "cdatasect": 407, "processinginstruct": 407, "accessor": 407, "minidom": 408, "minim": 408, "pulldom": 409, "domeventstream": 409, "etre": [410, 471, 473, 474, 477], "elementtre": [410, 464, 466, 471, 472, 473], "pull": 410, "interest": 410, "xpath": 410, "xinclud": 410, "qname": 410, "treebuild": 410, "xmlpullpars": 410, "sax": [411, 412, 413, 414, 475], "sax2": [411, 459], "saxexcept": 411, "contenthandl": 412, "dtdhandler": 412, "entityresolv": 412, "errorhandl": 412, "lexicalhandl": 412, "xmlreader": 413, "incrementalpars": 413, "inputsourc": 413, "attributesn": 413, "saxutil": 414, "xmlrpc": [415, 416, 417, 475, 476, 477, 478], "rpc": [416, 417], "serverproxi": 416, "protocolerror": 416, "multical": 416, "simplexmlrpcserv": 417, "cgixmlrpcrequesthandl": 417, "docxmlrpcserv": 417, "doccgixmlrpcrequesthandl": 417, "zipapp": [418, 475, 477], "zip": [418, 419, 420, 462], "standalon": 418, "zipfil": [419, 470, 472, 474, 475, 476, 477], "pyzipfil": 419, "zipinfo": 419, "pitfal": 419, "itself": 419, "zipimport": [420, 469, 471], "zlib": [421, 423, 473, 476], "zoneinfo": [422, 479], "iana": 422, "zone": 422, "licens": 423, "otherwis": 423, "psf": 423, "agreement": 423, "FOR": 423, "12": [423, 470, 471, 478], "beopen": 423, "com": 423, "cnri": 423, "cwi": 423, "zero": 423, "claus": [423, 424, 438], "bsd": 423, "IN": 423, "THE": 423, "incorpor": 423, "mersenn": 423, "twister": 423, "uudecod": 423, "procedur": 423, "test_epol": 423, "siphash24": 423, "strtod": 423, "dtoa": 423, "openssl": [423, 457, 470], "libffi": 423, "cfuhash": 423, "libmpdec": 423, "w3c": 423, "c14n": 423, "els": [424, 438], "guard": [424, 469], "irrefut": 424, "OR": 424, "AS": 424, "wildcard": [424, 448, 469], "writabl": 425, "known": [425, 458], "invok": [425, 445], "metaclass": 425, "resolv": 425, "mro": 425, "appropri": 425, "bodi": 425, "purpos": 425, "__class_getitem__": 425, "__getitem__": 425, "With": [425, 477], "atom": 427, "parenthes": [427, 469], "yield": [427, 433], "primari": 427, "unari": 427, "shift": 427, "membership": 427, "full": [428, 458], "finder": 429, "loader": 429, "meta": 429, "submodul": 429, "__path__": 429, "rel": [429, 464, 465], "__spec__": 429, "physic": 432, "declar": [432, 469], "explicit": [432, 465, 473, 474], "implicit": [432, 473], "blank": 432, "whitespac": 432, "soft": 432, "reserv": 432, "f": [432, 471, 478], "imaginari": 432, "delimit": 432, "augment": [433, 459], "del": [433, 439], "break": [433, 438], "nonloc": 433, "appendix": 435, "whet": 436, "appetit": 436, "word": 437, "look": 437, "remark": 437, "recap": 438, "techniqu": 439, "predefin": 440, "unrel": 440, "enrich": [440, 470], "fancier": 443, "Its": 445, "toward": 446, "dir": 447, "intra": 447, "brief": [448, 449], "tour": [448, 449], "redirect": [448, 458], "qualiti": 448, "batteri": 448, "ii": 449, "now": 451, "shouldn": 452, "linker": 453, "makefil": 453, "target": [453, 466, 475, 476], "preprocessor": 453, "mac": [456, 465, 466, 479], "macpython": 456, "latest": 457, "On": 457, "freebsd": [457, 466], "openbsd": 457, "max_path": 458, "ui": 458, "download": 458, "nuget": 458, "embedd": 458, "bundl": 458, "excursu": 458, "launcher": [458, 470, 473, 475], "associ": 458, "shebang": 458, "diagnost": 458, "dry": 458, "demand": 458, "pywin32": 458, "cx_freez": 458, "cycl": 459, "minor": 459, "distutil": [459, 462, 469, 471, 475, 476, 477, 479], "easi": 459, "pyxml": 459, "227": [460, 461], "236": 460, "207": 460, "rich": 460, "230": 460, "229": 460, "205": 460, "232": 460, "235": 460, "insensit": 460, "217": 460, "208": 460, "coercion": [460, 477], "241": 460, "252": 461, "253": 461, "diamond": 461, "234": 461, "255": [461, 462], "237": [461, 463], "unifi": [461, 463, 464], "238": 461, "218": [462, 463], "263": 462, "273": 462, "277": 462, "278": 462, "univers": 462, "279": 462, "282": 462, "285": 462, "293": 462, "301": 462, "302": 462, "305": 462, "307": 462, "enhanc": [462, 465, 466, 476], "289": 463, "292": 463, "simpler": [463, 476], "318": 463, "322": 463, "324": 463, "327": 463, "need": 463, "328": [463, 464], "331": 463, "cookielib": 463, "308": 464, "309": 464, "314": 464, "v1": [464, 472], "absolut": 464, "338": 464, "341": 464, "342": 464, "343": [464, 465], "352": 464, "353": 464, "ssize_t": 464, "357": 464, "__index__": 464, "roundup": 465, "restructuredtext": 465, "sphinx": 465, "366": 465, "370": 465, "371": 465, "3101": [465, 467], "3105": 465, "As": 465, "3110": 465, "3112": 465, "3116": 465, "3118": [465, 473], "3119": 465, "3127": 465, "3129": 465, "3141": 465, "future_builtin": 465, "javascript": 465, "irix": 465, "372": [466, 468], "378": [466, 468], "thousand": [466, 468], "389": [466, 472], "391": [466, 472], "3106": 466, "3137": 466, "mainten": 466, "434": 466, "branch": 466, "466": 466, "477": 466, "backport": 466, "453": [466, 474], "By": [466, 474], "476": [466, 474], "stdlib": [466, 474], "493": 466, "migrat": 466, "regen": [466, 475, 476], "touch": [466, 475, 476], "stumbl": 467, "alreadi": 467, "highlight": [469, 470, 471, 473, 474, 475, 476, 477, 478, 479], "better": [469, 475], "indentationerror": 469, "attributeerror": 469, "nameerror": 469, "626": 469, "634": 469, "604": 469, "612": 469, "613": 469, "typealia": 469, "647": 469, "asynchat": [469, 471, 476], "asyncor": [469, 471, 472, 476], "smtpd": [469, 471, 473, 474, 475], "652": 469, "maintain": 469, "11": [470, 479], "657": 470, "fine": 470, "grain": [470, 473], "654": 470, "678": 470, "ex": 470, "646": 470, "655": 470, "mark": 470, "typeddict": [470, 471], "673": 470, "675": 470, "681": 470, "563": [470, 477], "mai": 470, "faster": [470, 475], "cheaper": 470, "inlin": [470, 471], "659": 470, "misc": 470, "speedup": 470, "Will": 470, "see": 470, "workload": 470, "jit": 470, "pend": [470, 471], "695": 471, "701": 471, "syntact": 471, "684": 471, "669": 471, "impact": 471, "688": 471, "709": 471, "692": 471, "kwarg": 471, "698": 471, "13": [471, 476], "14": 471, "15": 471, "imp": 471, "384": 472, "3148": 472, "3147": 472, "repositori": 472, "3149": 472, "3333": 472, "405": 473, "420": 473, "393": 473, "flexibl": 473, "397": 473, "3151": 473, "rework": 473, "380": 473, "subgener": 473, "409": 473, "414": 473, "3155": 473, "qualifi": 473, "412": 473, "362": 473, "421": 473, "simplenamespac": 473, "unsupport": [473, 475], "446": 474, "newli": 474, "451": 474, "modulespec": 474, "445": 474, "442": 474, "456": 474, "interchang": 474, "436": 474, "No": 474, "longer": 474, "492": 475, "465": 475, "dedic": 475, "infix": 475, "matrix": 475, "448": 475, "461": 475, "percent": 475, "484": 475, "471": 475, "scandir": 475, "475": 475, "retri": 475, "eintr": 475, "479": 475, "stopiter": 475, "insid": 475, "485": 475, "equal": 475, "486": 475, "488": 475, "elimin": 475, "pyo": 475, "489": 475, "negoti": 475, "498": 476, "526": 476, "515": 476, "underscor": 476, "525": 476, "530": 476, "487": 476, "519": 476, "495": 476, "disambigu": 476, "529": 476, "528": 476, "520": 476, "468": 476, "523": 476, "pythonmalloc": 476, "postpon": 477, "538": 477, "540": 477, "forc": 477, "553": 477, "539": 477, "562": 477, "564": 477, "nanosecond": 477, "565": 477, "deprecationwarn": [477, 479], "560": 477, "552": 477, "545": 477, "macpath": 477, "578": 478, "587": 478, "590": 478, "merg": 479, "suffix": 479, "big": 479, "sur": 479, "silicon": 479, "changelog": 480}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About these documents": [[0, "about-these-documents"]], "Contributors to the Python Documentation": [[0, "contributors-to-the-python-documentation"]], "Dealing with Bugs": [[1, "dealing-with-bugs"]], "Documentation bugs": [[1, "documentation-bugs"]], "Using the Python issue tracker": [[1, "using-the-python-issue-tracker"]], "Getting started contributing to Python yourself": [[1, "getting-started-contributing-to-python-yourself"]], "Abstract Objects Layer": [[2, "abstract-objects-layer"]], "Allocating Objects on the Heap": [[3, "allocating-objects-on-the-heap"]], "API and ABI Versioning": [[4, "api-and-abi-versioning"]], "Parsing arguments and building values": [[5, "parsing-arguments-and-building-values"]], "Parsing arguments": [[5, "parsing-arguments"], [117, "parsing-arguments"], [289, "parsing-arguments"]], "Strings and buffers": [[5, "strings-and-buffers"]], "Numbers": [[5, "numbers"], [446, "numbers"]], "Other objects": [[5, "other-objects"]], "API Functions": [[5, "api-functions"]], "Building values": [[5, "building-values"]], "Boolean Objects": [[6, "boolean-objects"]], "Buffer Protocol": [[7, "buffer-protocol"]], "Buffer structure": [[7, "buffer-structure"]], "Buffer request types": [[7, "buffer-request-types"]], "request-independent fields": [[7, "request-independent-fields"]], "readonly, format": [[7, "readonly-format"]], "shape, strides, suboffsets": [[7, "shape-strides-suboffsets"]], "contiguity requests": [[7, "contiguity-requests"]], "compound requests": [[7, "compound-requests"]], "Complex arrays": [[7, "complex-arrays"]], "NumPy-style: shape and strides": [[7, "numpy-style-shape-and-strides"]], "PIL-style: shape, strides and suboffsets": [[7, "pil-style-shape-strides-and-suboffsets"]], "Buffer-related functions": [[7, "buffer-related-functions"]], "Byte Array Objects": [[8, "byte-array-objects"]], "Type check macros": [[8, "type-check-macros"]], "Direct API functions": [[8, "direct-api-functions"]], "Macros": [[8, "macros"]], "Bytes Objects": [[9, "bytes-objects"], [341, "bytes-objects"]], "Call Protocol": [[10, "call-protocol"]], "The tp_call Protocol": [[10, "the-tp-call-protocol"]], "The Vectorcall Protocol": [[10, "the-vectorcall-protocol"]], "Recursion Control": [[10, "recursion-control"], [23, "recursion-control"]], "Vectorcall Support API": [[10, "vectorcall-support-api"]], "Object Calling API": [[10, "object-calling-api"]], "Call Support API": [[10, "call-support-api"]], "Capsules": [[11, "capsules"], [466, "capsules"]], "Cell Objects": [[12, "cell-objects"]], "Code Objects": [[13, "code-objects"], [341, "code-objects"]], "Extra information": [[13, "extra-information"]], "Codec registry and support functions": [[14, "codec-registry-and-support-functions"]], "Codec lookup API": [[14, "codec-lookup-api"]], "Registry API for Unicode encoding error handlers": [[14, "registry-api-for-unicode-encoding-error-handlers"]], "Complex Number Objects": [[15, "complex-number-objects"]], "Complex Numbers as C Structures": [[15, "complex-numbers-as-c-structures"]], "Complex Numbers as Python Objects": [[15, "complex-numbers-as-python-objects"]], "Concrete Objects Layer": [[16, "concrete-objects-layer"]], "Fundamental Objects": [[16, "fundamental-objects"]], "Numeric Objects": [[16, "numeric-objects"]], "Sequence Objects": [[16, "sequence-objects"]], "Container Objects": [[16, "container-objects"]], "Function Objects": [[16, "function-objects"], [27, "function-objects"], [309, "function-objects"]], "Other Objects": [[16, "other-objects"]], "Context Variables Objects": [[17, "context-variables-objects"]], "String conversion and formatting": [[18, "string-conversion-and-formatting"]], "Coroutine Objects": [[19, "coroutine-objects"], [425, "coroutine-objects"]], "DateTime Objects": [[20, "datetime-objects"], [416, "datetime-objects"]], "Descriptor Objects": [[21, "descriptor-objects"]], "Dictionary Objects": [[22, "dictionary-objects"]], "Exception Handling": [[23, "exception-handling"]], "Printing and clearing": [[23, "printing-and-clearing"]], "Raising exceptions": [[23, "raising-exceptions"]], "Issuing warnings": [[23, "issuing-warnings"]], "Querying the error indicator": [[23, "querying-the-error-indicator"]], "Signal Handling": [[23, "signal-handling"], [385, "signal-handling"]], "Exception Classes": [[23, "exception-classes"]], "Exception Objects": [[23, "exception-objects"]], "Unicode Exception Objects": [[23, "unicode-exception-objects"]], "Standard Exceptions": [[23, "standard-exceptions"]], "Standard Warning Categories": [[23, "standard-warning-categories"]], "File Objects": [[24, "file-objects"]], "Floating Point Objects": [[25, "floating-point-objects"]], "Pack and Unpack functions": [[25, "pack-and-unpack-functions"]], "Pack functions": [[25, "pack-functions"]], "Unpack functions": [[25, "unpack-functions"]], "Frame Objects": [[26, "frame-objects"]], "Internal Frames": [[26, "internal-frames"]], "Supporting Cyclic Garbage Collection": [[28, "supporting-cyclic-garbage-collection"]], "Controlling the Garbage Collector State": [[28, "controlling-the-garbage-collector-state"]], "Querying Garbage Collector State": [[28, "querying-garbage-collector-state"]], "Generator Objects": [[29, "generator-objects"]], "Importing Modules": [[30, "importing-modules"], [277, "importing-modules"]], "Python/C API Reference Manual": [[31, "python-c-api-reference-manual"]], "Initialization, Finalization, and Threads": [[32, "initialization-finalization-and-threads"]], "Before Python Initialization": [[32, "before-python-initialization"]], "Global configuration variables": [[32, "global-configuration-variables"]], "Initializing and finalizing the interpreter": [[32, "initializing-and-finalizing-the-interpreter"]], "Process-wide parameters": [[32, "process-wide-parameters"]], "Thread State and the Global Interpreter Lock": [[32, "thread-state-and-the-global-interpreter-lock"]], "Releasing the GIL from extension code": [[32, "releasing-the-gil-from-extension-code"]], "Non-Python created threads": [[32, "non-python-created-threads"]], "Cautions about fork()": [[32, "cautions-about-fork"]], "High-level API": [[32, "high-level-api"]], "Low-level API": [[32, "low-level-api"]], "Sub-interpreter support": [[32, "sub-interpreter-support"]], "A Per-Interpreter GIL": [[32, "a-per-interpreter-gil"]], "Bugs and caveats": [[32, "bugs-and-caveats"]], "Asynchronous Notifications": [[32, "asynchronous-notifications"]], "Profiling and Tracing": [[32, "profiling-and-tracing"]], "Advanced Debugger Support": [[32, "advanced-debugger-support"]], "Thread Local Storage Support": [[32, "thread-local-storage-support"]], "Thread Specific Storage (TSS) API": [[32, "thread-specific-storage-tss-api"]], "Dynamic Allocation": [[32, "dynamic-allocation"]], "Methods": [[32, "methods"], [285, "methods"], [293, "methods"], [341, "methods"]], "Thread Local Storage (TLS) API": [[32, "thread-local-storage-tls-api"]], "Python Initialization Configuration": [[33, "python-initialization-configuration"]], "Example": [[33, "example"], [117, "example"], [169, "example"], [211, "example"], [241, "example"], [296, "example"], [304, "example"], [306, "example"], [311, "example"], [317, "example"], [327, "example"], [334, "example"], [358, "example"], [395, "example"], [399, "example"], [410, "example"], [410, "id3"]], "PyWideStringList": [[33, "pywidestringlist"]], "PyStatus": [[33, "pystatus"]], "PyPreConfig": [[33, "pypreconfig"]], "Preinitialize Python with PyPreConfig": [[33, "preinitialize-python-with-pypreconfig"]], "PyConfig": [[33, "pyconfig"]], "Initialization with PyConfig": [[33, "initialization-with-pyconfig"]], "Isolated Configuration": [[33, "isolated-configuration"]], "Python Configuration": [[33, "python-configuration"]], "Python Path Configuration": [[33, "python-path-configuration"]], "Py_RunMain()": [[33, "py-runmain"]], "Py_GetArgcArgv()": [[33, "py-getargcargv"]], "Multi-Phase Initialization Private Provisional API": [[33, "multi-phase-initialization-private-provisional-api"]], "Introduction": [[34, "introduction"], [94, "introduction"], [103, "introduction"], [107, "introduction"], [148, "introduction"], [247, "introduction"], [254, "introduction"], [280, "introduction"], [326, "introduction"], [381, "introduction"], [431, "introduction"], [450, "introduction"], [459, "introduction"], [460, "introduction"], [461, "introduction"]], "Coding standards": [[34, "coding-standards"]], "Include Files": [[34, "include-files"]], "Useful macros": [[34, "useful-macros"]], "Objects, Types and Reference Counts": [[34, "objects-types-and-reference-counts"]], "Reference Counts": [[34, "reference-counts"], [72, "reference-counts"]], "Reference Count Details": [[34, "reference-count-details"]], "Types": [[34, "types"]], "Exceptions": [[34, "exceptions"], [117, "exceptions"], [121, "exceptions"], [124, "exceptions"], [131, "exceptions"], [164, "exceptions"], [229, "exceptions"], [259, "exceptions"], [268, "exceptions"], [289, "exceptions"], [316, "exceptions"], [334, "exceptions"], [337, "exceptions"], [338, "exceptions"], [340, "exceptions"], [345, "exceptions"], [405, "exceptions"], [407, "exceptions"], [410, "exceptions"], [426, "exceptions"], [440, "exceptions"]], "Embedding Python": [[34, "embedding-python"], [458, "embedding-python"]], "Debugging Builds": [[34, "debugging-builds"]], "Iterator Protocol": [[35, "iterator-protocol"]], "Iterator Objects": [[36, "iterator-objects"]], "List Objects": [[37, "list-objects"]], "Integer Objects": [[38, "integer-objects"]], "Mapping Protocol": [[39, "mapping-protocol"]], "Data marshalling support": [[40, "data-marshalling-support"]], "Memory Management": [[41, "memory-management"]], "Overview": [[41, "overview"], [97, null], [248, "overview"], [255, "overview"], [424, "overview"]], "Allocator Domains": [[41, "allocator-domains"]], "Raw Memory Interface": [[41, "raw-memory-interface"]], "Memory Interface": [[41, "memory-interface"]], "Object allocators": [[41, "object-allocators"]], "Default Memory Allocators": [[41, "default-memory-allocators"]], "Customize Memory Allocators": [[41, "customize-memory-allocators"]], "Debug hooks on the Python memory allocators": [[41, "debug-hooks-on-the-python-memory-allocators"]], "The pymalloc allocator": [[41, "the-pymalloc-allocator"]], "Customize pymalloc Arena Allocator": [[41, "customize-pymalloc-arena-allocator"]], "tracemalloc C API": [[41, "tracemalloc-c-api"]], "Examples": [[41, "examples"], [62, "examples"], [96, "examples"], [123, "examples"], [130, "examples"], [131, "examples"], [133, "examples"], [134, "examples"], [144, "examples"], [170, "examples"], [172, "examples"], [232, "examples"], [237, "examples"], [239, "examples"], [240, "examples"], [247, "examples"], [267, "examples"], [268, "examples"], [280, "examples"], [296, "examples"], [301, "examples"], [315, "examples"], [326, "examples"], [330, "examples"], [335, "examples"], [338, "examples"], [344, "examples"], [353, "examples"], [355, "examples"], [357, "examples"], [364, "examples"], [375, "examples"], [376, "examples"], [379, "examples"], [392, "examples"], [404, "examples"], [418, "examples"], [420, "examples"], [427, "examples"]], "MemoryView objects": [[42, "index-0"]], "Instance Method Objects": [[43, "instance-method-objects"]], "Method Objects": [[43, "method-objects"], [437, "method-objects"]], "Module Objects": [[44, "module-objects"]], "Initializing C modules": [[44, "initializing-c-modules"]], "Single-phase initialization": [[44, "single-phase-initialization"]], "Multi-phase initialization": [[44, "multi-phase-initialization"]], "Low-level module creation functions": [[44, "low-level-module-creation-functions"]], "Support functions": [[44, "support-functions"]], "Module lookup": [[44, "module-lookup"]], "The None Object": [[45, "the-none-object"]], "Number Protocol": [[46, "number-protocol"]], "Old Buffer Protocol": [[47, "old-buffer-protocol"]], "Object Protocol": [[48, "object-protocol"]], "Object Implementation Support": [[49, "object-implementation-support"]], "Support for Perf Maps": [[50, "support-for-perf-maps"]], "Reference Counting": [[51, "reference-counting"]], "Reflection": [[52, "reflection"]], "Sequence Protocol": [[53, "sequence-protocol"]], "Set Objects": [[54, "set-objects"]], "Slice Objects": [[55, "slice-objects"]], "Ellipsis Object": [[55, "ellipsis-object"]], "C API Stability": [[56, "c-api-stability"]], "Unstable C API": [[56, "unstable-c-api"]], "Stable Application Binary Interface": [[56, "stable-application-binary-interface"]], "Limited C API": [[56, "limited-c-api"]], "Stable ABI": [[56, "stable-abi"]], "Limited API Scope and Performance": [[56, "limited-api-scope-and-performance"]], "Limited API Caveats": [[56, "limited-api-caveats"]], "Platform Considerations": [[56, "platform-considerations"]], "Contents of Limited API": [[56, "contents-of-limited-api"]], "Common Object Structures": [[57, "common-object-structures"]], "Base object types and macros": [[57, "base-object-types-and-macros"]], "Implementing functions and methods": [[57, "implementing-functions-and-methods"]], "Accessing attributes of extension types": [[57, "accessing-attributes-of-extension-types"]], "Member flags": [[57, "member-flags"]], "Member types": [[57, "member-types"]], "Defining Getters and Setters": [[57, "defining-getters-and-setters"]], "Operating System Utilities": [[58, "operating-system-utilities"]], "System Functions": [[58, "system-functions"]], "Process Control": [[58, "process-control"]], "Tuple Objects": [[59, "tuple-objects"]], "Struct Sequence Objects": [[59, "struct-sequence-objects"]], "Type Objects": [[60, "type-objects"], [62, "type-objects"], [341, "type-objects"]], "Creating Heap-Allocated Types": [[60, "creating-heap-allocated-types"]], "Objects for Type Hinting": [[61, "objects-for-type-hinting"]], "Quick Reference": [[62, "quick-reference"]], "\u201ctp slots\u201d": [[62, "tp-slots"]], "sub-slots": [[62, "sub-slots"]], "slot typedefs": [[62, "slot-typedefs"]], "PyTypeObject Definition": [[62, "pytypeobject-definition"]], "PyObject Slots": [[62, "pyobject-slots"]], "PyVarObject Slots": [[62, "pyvarobject-slots"]], "PyTypeObject Slots": [[62, "pytypeobject-slots"]], "Static Types": [[62, "static-types"]], "Heap Types": [[62, "heap-types"], [98, "heap-types"]], "Number Object Structures": [[62, "number-object-structures"]], "Mapping Object Structures": [[62, "mapping-object-structures"]], "Sequence Object Structures": [[62, "sequence-object-structures"]], "Buffer Object Structures": [[62, "buffer-object-structures"]], "Async Object Structures": [[62, "async-object-structures"]], "Slot Type typedefs": [[62, "slot-type-typedefs"]], "Unicode Objects and Codecs": [[63, "unicode-objects-and-codecs"]], "Unicode Objects": [[63, "unicode-objects"]], "Unicode Type": [[63, "unicode-type"]], "Unicode Character Properties": [[63, "unicode-character-properties"]], "Creating and accessing Unicode strings": [[63, "creating-and-accessing-unicode-strings"]], "Locale Encoding": [[63, "locale-encoding"]], "File System Encoding": [[63, "file-system-encoding"]], "wchar_t Support": [[63, "wchar-t-support"]], "Built-in Codecs": [[63, "built-in-codecs"]], "Generic Codecs": [[63, "generic-codecs"]], "UTF-8 Codecs": [[63, "utf-8-codecs"]], "UTF-32 Codecs": [[63, "utf-32-codecs"]], "UTF-16 Codecs": [[63, "utf-16-codecs"]], "UTF-7 Codecs": [[63, "utf-7-codecs"]], "Unicode-Escape Codecs": [[63, "unicode-escape-codecs"]], "Raw-Unicode-Escape Codecs": [[63, "raw-unicode-escape-codecs"]], "Latin-1 Codecs": [[63, "latin-1-codecs"]], "ASCII Codecs": [[63, "ascii-codecs"]], "Character Map Codecs": [[63, "character-map-codecs"]], "MBCS codecs for Windows": [[63, "mbcs-codecs-for-windows"]], "Methods & Slots": [[63, "methods-slots"]], "Methods and Slot Functions": [[63, "methods-and-slot-functions"]], "Utilities": [[64, "utilities"], [166, "utilities"]], "The Very High Level Layer": [[65, "the-very-high-level-layer"]], "Weak Reference Objects": [[66, "weak-reference-objects"], [399, "weak-reference-objects"]], "Python Documentation contents": [[67, "python-documentation-contents"]], "Copyright": [[68, "copyright"]], "Distributing Python Modules": [[69, "distributing-python-modules"]], "Building C and C++ Extensions": [[70, "building-c-and-c-extensions"]], "Building C and C++ Extensions with setuptools": [[70, "building-c-and-c-extensions-with-setuptools"]], "Embedding Python in Another Application": [[71, "embedding-python-in-another-application"]], "Very High Level Embedding": [[71, "very-high-level-embedding"]], "Beyond Very High Level Embedding: An overview": [[71, "beyond-very-high-level-embedding-an-overview"]], "Pure Embedding": [[71, "pure-embedding"]], "Extending Embedded Python": [[71, "extending-embedded-python"]], "Embedding Python in C++": [[71, "embedding-python-in-c"]], "Compiling and Linking under Unix-like systems": [[71, "compiling-and-linking-under-unix-like-systems"]], "Extending Python with C or C++": [[72, "extending-python-with-c-or-c"]], "A Simple Example": [[72, "a-simple-example"]], "Intermezzo: Errors and Exceptions": [[72, "intermezzo-errors-and-exceptions"]], "Back to the Example": [[72, "back-to-the-example"]], "The Module\u2019s Method Table and Initialization Function": [[72, "the-module-s-method-table-and-initialization-function"]], "Compilation and Linkage": [[72, "compilation-and-linkage"]], "Calling Python Functions from C": [[72, "calling-python-functions-from-c"]], "Extracting Parameters in Extension Functions": [[72, "extracting-parameters-in-extension-functions"]], "Keyword Parameters for Extension Functions": [[72, "keyword-parameters-for-extension-functions"]], "Building Arbitrary Values": [[72, "building-arbitrary-values"]], "Reference Counting in Python": [[72, "reference-counting-in-python"]], "Ownership Rules": [[72, "ownership-rules"]], "Thin Ice": [[72, "thin-ice"]], "NULL Pointers": [[72, "null-pointers"]], "Writing Extensions in C++": [[72, "writing-extensions-in-c"]], "Providing a C API for an Extension Module": [[72, "providing-a-c-api-for-an-extension-module"]], "Extending and Embedding the Python Interpreter": [[73, "extending-and-embedding-the-python-interpreter"]], "Recommended third party tools": [[73, "recommended-third-party-tools"]], "Creating extensions without third party tools": [[73, "creating-extensions-without-third-party-tools"]], "Embedding the CPython runtime in a larger application": [[73, "embedding-the-cpython-runtime-in-a-larger-application"]], "Defining Extension Types: Assorted Topics": [[74, "defining-extension-types-assorted-topics"]], "Finalization and De-allocation": [[74, "finalization-and-de-allocation"]], "Object Presentation": [[74, "object-presentation"]], "Attribute Management": [[74, "attribute-management"]], "Generic Attribute Management": [[74, "generic-attribute-management"]], "Type-specific Attribute Management": [[74, "type-specific-attribute-management"]], "Object Comparison": [[74, "object-comparison"]], "Abstract Protocol Support": [[74, "abstract-protocol-support"]], "Weak Reference Support": [[74, "weak-reference-support"]], "More Suggestions": [[74, "more-suggestions"]], "Defining Extension Types: Tutorial": [[75, "defining-extension-types-tutorial"]], "The Basics": [[75, "the-basics"]], "Adding data and methods to the Basic example": [[75, "adding-data-and-methods-to-the-basic-example"]], "Providing finer control over data attributes": [[75, "providing-finer-control-over-data-attributes"]], "Supporting cyclic garbage collection": [[75, "supporting-cyclic-garbage-collection"]], "Subclassing other types": [[75, "subclassing-other-types"]], "Building C and C++ Extensions on Windows": [[76, "building-c-and-c-extensions-on-windows"]], "A Cookbook Approach": [[76, "a-cookbook-approach"]], "Differences Between Unix and Windows": [[76, "differences-between-unix-and-windows"]], "Using DLLs in Practice": [[76, "using-dlls-in-practice"]], "Design and History FAQ": [[77, "design-and-history-faq"]], "Contents": [[77, "contents"], [78, "contents"], [79, "contents"], [80, "contents"], [83, "contents"], [84, "contents"], [85, "contents"], [92, "contents"]], "Why does Python use indentation for grouping of statements?": [[77, "why-does-python-use-indentation-for-grouping-of-statements"]], "Why am I getting strange results with simple arithmetic operations?": [[77, "why-am-i-getting-strange-results-with-simple-arithmetic-operations"]], "Why are floating-point calculations so inaccurate?": [[77, "why-are-floating-point-calculations-so-inaccurate"]], "Why are Python strings immutable?": [[77, "why-are-python-strings-immutable"]], "Why must \u2018self\u2019 be used explicitly in method definitions and calls?": [[77, "why-must-self-be-used-explicitly-in-method-definitions-and-calls"]], "Why can\u2019t I use an assignment in an expression?": [[77, "why-can-t-i-use-an-assignment-in-an-expression"]], "Why does Python use methods for some functionality (e.g. list.index()) but functions for other (e.g. len(list))?": [[77, "why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list"]], "Why is join() a string method instead of a list or tuple method?": [[77, "why-is-join-a-string-method-instead-of-a-list-or-tuple-method"]], "How fast are exceptions?": [[77, "how-fast-are-exceptions"]], "Why isn\u2019t there a switch or case statement in Python?": [[77, "why-isn-t-there-a-switch-or-case-statement-in-python"]], "Can\u2019t you emulate threads in the interpreter instead of relying on an OS-specific thread implementation?": [[77, "can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation"]], "Why can\u2019t lambda expressions contain statements?": [[77, "why-can-t-lambda-expressions-contain-statements"]], "Can Python be compiled to machine code, C or some other language?": [[77, "can-python-be-compiled-to-machine-code-c-or-some-other-language"]], "How does Python manage memory?": [[77, "how-does-python-manage-memory"]], "Why doesn\u2019t CPython use a more traditional garbage collection scheme?": [[77, "why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme"]], "Why isn\u2019t all memory freed when CPython exits?": [[77, "why-isn-t-all-memory-freed-when-cpython-exits"]], "Why are there separate tuple and list data types?": [[77, "why-are-there-separate-tuple-and-list-data-types"]], "How are lists implemented in CPython?": [[77, "how-are-lists-implemented-in-cpython"]], "How are dictionaries implemented in CPython?": [[77, "how-are-dictionaries-implemented-in-cpython"]], "Why must dictionary keys be immutable?": [[77, "why-must-dictionary-keys-be-immutable"]], "Why doesn\u2019t list.sort() return the sorted list?": [[77, "why-doesn-t-list-sort-return-the-sorted-list"]], "How do you specify and enforce an interface spec in Python?": [[77, "how-do-you-specify-and-enforce-an-interface-spec-in-python"]], "Why is there no goto?": [[77, "why-is-there-no-goto"]], "Why can\u2019t raw strings (r-strings) end with a backslash?": [[77, "why-can-t-raw-strings-r-strings-end-with-a-backslash"]], "Why doesn\u2019t Python have a \u201cwith\u201d statement for attribute assignments?": [[77, "why-doesn-t-python-have-a-with-statement-for-attribute-assignments"]], "Why don\u2019t generators support the with statement?": [[77, "why-don-t-generators-support-the-with-statement"]], "Why are colons required for the if/while/def/class statements?": [[77, "why-are-colons-required-for-the-if-while-def-class-statements"]], "Why does Python allow commas at the end of lists and tuples?": [[77, "why-does-python-allow-commas-at-the-end-of-lists-and-tuples"]], "Extending/Embedding FAQ": [[78, "extending-embedding-faq"]], "Can I create my own functions in C?": [[78, "can-i-create-my-own-functions-in-c"]], "Can I create my own functions in C++?": [[78, "id1"]], "Writing C is hard; are there any alternatives?": [[78, "writing-c-is-hard-are-there-any-alternatives"]], "How can I execute arbitrary Python statements from C?": [[78, "how-can-i-execute-arbitrary-python-statements-from-c"]], "How can I evaluate an arbitrary Python expression from C?": [[78, "how-can-i-evaluate-an-arbitrary-python-expression-from-c"]], "How do I extract C values from a Python object?": [[78, "how-do-i-extract-c-values-from-a-python-object"]], "How do I use Py_BuildValue() to create a tuple of arbitrary length?": [[78, "how-do-i-use-py-buildvalue-to-create-a-tuple-of-arbitrary-length"]], "How do I call an object\u2019s method from C?": [[78, "how-do-i-call-an-object-s-method-from-c"]], "How do I catch the output from PyErr_Print() (or anything that prints to stdout/stderr)?": [[78, "how-do-i-catch-the-output-from-pyerr-print-or-anything-that-prints-to-stdout-stderr"]], "How do I access a module written in Python from C?": [[78, "how-do-i-access-a-module-written-in-python-from-c"]], "How do I interface to C++ objects from Python?": [[78, "how-do-i-interface-to-c-objects-from-python"]], "I added a module using the Setup file and the make fails; why?": [[78, "i-added-a-module-using-the-setup-file-and-the-make-fails-why"]], "How do I debug an extension?": [[78, "how-do-i-debug-an-extension"]], "I want to compile a Python module on my Linux system, but some files are missing. Why?": [[78, "i-want-to-compile-a-python-module-on-my-linux-system-but-some-files-are-missing-why"]], "How do I tell \u201cincomplete input\u201d from \u201cinvalid input\u201d?": [[78, "how-do-i-tell-incomplete-input-from-invalid-input"]], "How do I find undefined g++ symbols __builtin_new or __pure_virtual?": [[78, "how-do-i-find-undefined-g-symbols-builtin-new-or-pure-virtual"]], "Can I create an object class with some methods implemented in C and others in Python (e.g. through inheritance)?": [[78, "can-i-create-an-object-class-with-some-methods-implemented-in-c-and-others-in-python-e-g-through-inheritance"]], "General Python FAQ": [[79, "general-python-faq"]], "General Information": [[79, "general-information"]], "What is Python?": [[79, "what-is-python"], [82, "what-is-python"]], "What is the Python Software Foundation?": [[79, "what-is-the-python-software-foundation"]], "Are there copyright restrictions on the use of Python?": [[79, "are-there-copyright-restrictions-on-the-use-of-python"]], "Why was Python created in the first place?": [[79, "why-was-python-created-in-the-first-place"]], "What is Python good for?": [[79, "what-is-python-good-for"]], "How does the Python version numbering scheme work?": [[79, "how-does-the-python-version-numbering-scheme-work"]], "How do I obtain a copy of the Python source?": [[79, "how-do-i-obtain-a-copy-of-the-python-source"]], "How do I get documentation on Python?": [[79, "how-do-i-get-documentation-on-python"]], "I\u2019ve never programmed before. Is there a Python tutorial?": [[79, "i-ve-never-programmed-before-is-there-a-python-tutorial"]], "Is there a newsgroup or mailing list devoted to Python?": [[79, "is-there-a-newsgroup-or-mailing-list-devoted-to-python"]], "How do I get a beta test version of Python?": [[79, "how-do-i-get-a-beta-test-version-of-python"]], "How do I submit bug reports and patches for Python?": [[79, "how-do-i-submit-bug-reports-and-patches-for-python"]], "Are there any published articles about Python that I can reference?": [[79, "are-there-any-published-articles-about-python-that-i-can-reference"]], "Are there any books on Python?": [[79, "are-there-any-books-on-python"]], "Where in the world is www.python.org located?": [[79, "where-in-the-world-is-www-python-org-located"]], "Why is it called Python?": [[79, "why-is-it-called-python"]], "Do I have to like \u201cMonty Python\u2019s Flying Circus\u201d?": [[79, "do-i-have-to-like-monty-python-s-flying-circus"]], "Python in the real world": [[79, "python-in-the-real-world"]], "How stable is Python?": [[79, "how-stable-is-python"]], "How many people are using Python?": [[79, "how-many-people-are-using-python"]], "Have any significant projects been done in Python?": [[79, "have-any-significant-projects-been-done-in-python"]], "What new developments are expected for Python in the future?": [[79, "what-new-developments-are-expected-for-python-in-the-future"]], "Is it reasonable to propose incompatible changes to Python?": [[79, "is-it-reasonable-to-propose-incompatible-changes-to-python"]], "Is Python a good language for beginning programmers?": [[79, "is-python-a-good-language-for-beginning-programmers"]], "Graphic User Interface FAQ": [[80, "graphic-user-interface-faq"]], "General GUI Questions": [[80, "general-gui-questions"]], "What GUI toolkits exist for Python?": [[80, "what-gui-toolkits-exist-for-python"]], "Tkinter questions": [[80, "tkinter-questions"]], "How do I freeze Tkinter applications?": [[80, "how-do-i-freeze-tkinter-applications"]], "Can I have Tk events handled while waiting for I/O?": [[80, "can-i-have-tk-events-handled-while-waiting-for-i-o"]], "I can\u2019t get key bindings to work in Tkinter: why?": [[80, "i-can-t-get-key-bindings-to-work-in-tkinter-why"]], "Python Frequently Asked Questions": [[81, "python-frequently-asked-questions"]], "\u201cWhy is Python Installed on my Computer?\u201d FAQ": [[82, "why-is-python-installed-on-my-computer-faq"]], "Why is Python installed on my machine?": [[82, "why-is-python-installed-on-my-machine"]], "Can I delete Python?": [[82, "can-i-delete-python"]], "Library and Extension FAQ": [[83, "library-and-extension-faq"]], "General Library Questions": [[83, "general-library-questions"]], "How do I find a module or application to perform task X?": [[83, "how-do-i-find-a-module-or-application-to-perform-task-x"]], "Where is the math.py (socket.py, regex.py, etc.) source file?": [[83, "where-is-the-math-py-socket-py-regex-py-etc-source-file"]], "How do I make a Python script executable on Unix?": [[83, "how-do-i-make-a-python-script-executable-on-unix"]], "Is there a curses/termcap package for Python?": [[83, "is-there-a-curses-termcap-package-for-python"]], "Is there an equivalent to C\u2019s onexit() in Python?": [[83, "is-there-an-equivalent-to-c-s-onexit-in-python"]], "Why don\u2019t my signal handlers work?": [[83, "why-don-t-my-signal-handlers-work"]], "Common tasks": [[83, "common-tasks"]], "How do I test a Python program or component?": [[83, "how-do-i-test-a-python-program-or-component"]], "How do I create documentation from doc strings?": [[83, "how-do-i-create-documentation-from-doc-strings"]], "How do I get a single keypress at a time?": [[83, "how-do-i-get-a-single-keypress-at-a-time"]], "Threads": [[83, "threads"]], "How do I program using threads?": [[83, "how-do-i-program-using-threads"]], "None of my threads seem to run: why?": [[83, "none-of-my-threads-seem-to-run-why"]], "How do I parcel out work among a bunch of worker threads?": [[83, "how-do-i-parcel-out-work-among-a-bunch-of-worker-threads"]], "What kinds of global value mutation are thread-safe?": [[83, "what-kinds-of-global-value-mutation-are-thread-safe"]], "Can\u2019t we get rid of the Global Interpreter Lock?": [[83, "can-t-we-get-rid-of-the-global-interpreter-lock"]], "Input and Output": [[83, "input-and-output"], [443, "input-and-output"]], "How do I delete a file? (And other file questions\u2026)": [[83, "how-do-i-delete-a-file-and-other-file-questions"]], "How do I copy a file?": [[83, "how-do-i-copy-a-file"]], "How do I read (or write) binary data?": [[83, "how-do-i-read-or-write-binary-data"]], "I can\u2019t seem to use os.read() on a pipe created with os.popen(); why?": [[83, "i-can-t-seem-to-use-os-read-on-a-pipe-created-with-os-popen-why"]], "How do I access the serial (RS232) port?": [[83, "how-do-i-access-the-serial-rs232-port"]], "Why doesn\u2019t closing sys.stdout (stdin, stderr) really close it?": [[83, "why-doesn-t-closing-sys-stdout-stdin-stderr-really-close-it"]], "Network/Internet Programming": [[83, "network-internet-programming"]], "What WWW tools are there for Python?": [[83, "what-www-tools-are-there-for-python"]], "How can I mimic CGI form submission (METHOD=POST)?": [[83, "how-can-i-mimic-cgi-form-submission-method-post"]], "What module should I use to help with generating HTML?": [[83, "what-module-should-i-use-to-help-with-generating-html"]], "How do I send mail from a Python script?": [[83, "how-do-i-send-mail-from-a-python-script"]], "How do I avoid blocking in the connect() method of a socket?": [[83, "how-do-i-avoid-blocking-in-the-connect-method-of-a-socket"]], "Databases": [[83, "databases"]], "Are there any interfaces to database packages in Python?": [[83, "are-there-any-interfaces-to-database-packages-in-python"]], "How do you implement persistent objects in Python?": [[83, "how-do-you-implement-persistent-objects-in-python"]], "Mathematics and Numerics": [[83, "mathematics-and-numerics"]], "How do I generate random numbers in Python?": [[83, "how-do-i-generate-random-numbers-in-python"]], "Programming FAQ": [[84, "programming-faq"]], "General Questions": [[84, "general-questions"]], "Is there a source code level debugger with breakpoints, single-stepping, etc.?": [[84, "is-there-a-source-code-level-debugger-with-breakpoints-single-stepping-etc"]], "Are there tools to help find bugs or perform static analysis?": [[84, "are-there-tools-to-help-find-bugs-or-perform-static-analysis"]], "How can I create a stand-alone binary from a Python script?": [[84, "how-can-i-create-a-stand-alone-binary-from-a-python-script"]], "Are there coding standards or a style guide for Python programs?": [[84, "are-there-coding-standards-or-a-style-guide-for-python-programs"]], "Core Language": [[84, "core-language"]], "Why am I getting an UnboundLocalError when the variable has a value?": [[84, "why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value"]], "What are the rules for local and global variables in Python?": [[84, "what-are-the-rules-for-local-and-global-variables-in-python"]], "Why do lambdas defined in a loop with different values all return the same result?": [[84, "why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result"]], "How do I share global variables across modules?": [[84, "how-do-i-share-global-variables-across-modules"]], "What are the \u201cbest practices\u201d for using import in a module?": [[84, "what-are-the-best-practices-for-using-import-in-a-module"]], "Why are default values shared between objects?": [[84, "why-are-default-values-shared-between-objects"]], "How can I pass optional or keyword parameters from one function to another?": [[84, "how-can-i-pass-optional-or-keyword-parameters-from-one-function-to-another"]], "What is the difference between arguments and parameters?": [[84, "what-is-the-difference-between-arguments-and-parameters"]], "Why did changing list \u2018y\u2019 also change list \u2018x\u2019?": [[84, "why-did-changing-list-y-also-change-list-x"]], "How do I write a function with output parameters (call by reference)?": [[84, "how-do-i-write-a-function-with-output-parameters-call-by-reference"]], "How do you make a higher order function in Python?": [[84, "how-do-you-make-a-higher-order-function-in-python"]], "How do I copy an object in Python?": [[84, "how-do-i-copy-an-object-in-python"]], "How can I find the methods or attributes of an object?": [[84, "how-can-i-find-the-methods-or-attributes-of-an-object"]], "How can my code discover the name of an object?": [[84, "how-can-my-code-discover-the-name-of-an-object"]], "What\u2019s up with the comma operator\u2019s precedence?": [[84, "what-s-up-with-the-comma-operator-s-precedence"]], "Is there an equivalent of C\u2019s \u201c?:\u201d ternary operator?": [[84, "is-there-an-equivalent-of-c-s-ternary-operator"]], "Is it possible to write obfuscated one-liners in Python?": [[84, "is-it-possible-to-write-obfuscated-one-liners-in-python"]], "What does the slash(/) in the parameter list of a function mean?": [[84, "what-does-the-slash-in-the-parameter-list-of-a-function-mean"]], "Numbers and strings": [[84, "numbers-and-strings"]], "How do I specify hexadecimal and octal integers?": [[84, "how-do-i-specify-hexadecimal-and-octal-integers"]], "Why does -22 // 10 return -3?": [[84, "why-does-22-10-return-3"]], "How do I get int literal attribute instead of SyntaxError?": [[84, "how-do-i-get-int-literal-attribute-instead-of-syntaxerror"]], "How do I convert a string to a number?": [[84, "how-do-i-convert-a-string-to-a-number"]], "How do I convert a number to a string?": [[84, "how-do-i-convert-a-number-to-a-string"]], "How do I modify a string in place?": [[84, "how-do-i-modify-a-string-in-place"]], "How do I use strings to call functions/methods?": [[84, "how-do-i-use-strings-to-call-functions-methods"]], "Is there an equivalent to Perl\u2019s chomp() for removing trailing newlines from strings?": [[84, "is-there-an-equivalent-to-perl-s-chomp-for-removing-trailing-newlines-from-strings"]], "Is there a scanf() or sscanf() equivalent?": [[84, "is-there-a-scanf-or-sscanf-equivalent"]], "What does \u2018UnicodeDecodeError\u2019 or \u2018UnicodeEncodeError\u2019 error  mean?": [[84, "what-does-unicodedecodeerror-or-unicodeencodeerror-error-mean"]], "Can I end a raw string with an odd number of backslashes?": [[84, "can-i-end-a-raw-string-with-an-odd-number-of-backslashes"]], "Performance": [[84, "performance"], [255, "performance"], [296, "performance"], [467, "performance"]], "My program is too slow. How do I speed it up?": [[84, "my-program-is-too-slow-how-do-i-speed-it-up"]], "What is the most efficient way to concatenate many strings together?": [[84, "what-is-the-most-efficient-way-to-concatenate-many-strings-together"]], "Sequences (Tuples/Lists)": [[84, "sequences-tuples-lists"]], "How do I convert between tuples and lists?": [[84, "how-do-i-convert-between-tuples-and-lists"]], "What\u2019s a negative index?": [[84, "what-s-a-negative-index"]], "How do I iterate over a sequence in reverse order?": [[84, "how-do-i-iterate-over-a-sequence-in-reverse-order"]], "How do you remove duplicates from a list?": [[84, "how-do-you-remove-duplicates-from-a-list"]], "How do you remove multiple items from a list": [[84, "how-do-you-remove-multiple-items-from-a-list"]], "How do you make an array in Python?": [[84, "how-do-you-make-an-array-in-python"]], "How do I create a multidimensional list?": [[84, "how-do-i-create-a-multidimensional-list"]], "How do I apply a method or function to a sequence of objects?": [[84, "how-do-i-apply-a-method-or-function-to-a-sequence-of-objects"]], "Why does a_tuple[i] += [\u2018item\u2019] raise an exception when the addition works?": [[84, "why-does-a-tuple-i-item-raise-an-exception-when-the-addition-works"]], "I want to do a complicated sort: can you do a Schwartzian Transform in Python?": [[84, "i-want-to-do-a-complicated-sort-can-you-do-a-schwartzian-transform-in-python"]], "How can I sort one list by values from another list?": [[84, "how-can-i-sort-one-list-by-values-from-another-list"]], "Objects": [[84, "objects"]], "What is a class?": [[84, "what-is-a-class"]], "What is a method?": [[84, "what-is-a-method"]], "What is self?": [[84, "what-is-self"]], "How do I check if an object is an instance of a given class or of a subclass of it?": [[84, "how-do-i-check-if-an-object-is-an-instance-of-a-given-class-or-of-a-subclass-of-it"]], "What is delegation?": [[84, "what-is-delegation"]], "How do I call a method defined in a base class from a derived class that extends it?": [[84, "how-do-i-call-a-method-defined-in-a-base-class-from-a-derived-class-that-extends-it"]], "How can I organize my code to make it easier to change the base class?": [[84, "how-can-i-organize-my-code-to-make-it-easier-to-change-the-base-class"]], "How do I create static class data and static class methods?": [[84, "how-do-i-create-static-class-data-and-static-class-methods"]], "How can I overload constructors (or methods) in Python?": [[84, "how-can-i-overload-constructors-or-methods-in-python"]], "I try to use __spam and I get an error about _SomeClassName__spam.": [[84, "i-try-to-use-spam-and-i-get-an-error-about-someclassname-spam"]], "My class defines __del__ but it is not called when I delete the object.": [[84, "my-class-defines-del-but-it-is-not-called-when-i-delete-the-object"]], "How do I get a list of all instances of a given class?": [[84, "how-do-i-get-a-list-of-all-instances-of-a-given-class"]], "Why does the result of id() appear to be not unique?": [[84, "why-does-the-result-of-id-appear-to-be-not-unique"]], "When can I rely on identity tests with the is operator?": [[84, "when-can-i-rely-on-identity-tests-with-the-is-operator"]], "How can a subclass control what data is stored in an immutable instance?": [[84, "how-can-a-subclass-control-what-data-is-stored-in-an-immutable-instance"]], "How do I cache method calls?": [[84, "how-do-i-cache-method-calls"]], "Modules": [[84, "modules"], [341, "modules"], [425, "modules"], [447, "modules"], [470, "modules"]], "How do I create a .pyc file?": [[84, "how-do-i-create-a-pyc-file"]], "How do I find the current module name?": [[84, "how-do-i-find-the-current-module-name"]], "How can I have modules that mutually import each other?": [[84, "how-can-i-have-modules-that-mutually-import-each-other"]], "__import__(\u2018x.y.z\u2019) returns <module \u2018x\u2019>; how do I get z?": [[84, "import-x-y-z-returns-module-x-how-do-i-get-z"]], "When I edit an imported module and reimport it, the changes don\u2019t show up.  Why does this happen?": [[84, "when-i-edit-an-imported-module-and-reimport-it-the-changes-don-t-show-up-why-does-this-happen"]], "Python on Windows FAQ": [[85, "python-on-windows-faq"]], "How do I run a Python program under Windows?": [[85, "how-do-i-run-a-python-program-under-windows"]], "How do I make Python scripts executable?": [[85, "how-do-i-make-python-scripts-executable"]], "Why does Python sometimes take so long to start?": [[85, "why-does-python-sometimes-take-so-long-to-start"]], "How do I make an executable from a Python script?": [[85, "how-do-i-make-an-executable-from-a-python-script"]], "Is a *.pyd file the same as a DLL?": [[85, "is-a-pyd-file-the-same-as-a-dll"]], "How can I embed Python into a Windows application?": [[85, "how-can-i-embed-python-into-a-windows-application"]], "How do I keep editors from inserting tabs into my Python source?": [[85, "how-do-i-keep-editors-from-inserting-tabs-into-my-python-source"]], "How do I check for a keypress without blocking?": [[85, "how-do-i-check-for-a-keypress-without-blocking"]], "How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll error?": [[85, "how-do-i-solve-the-missing-api-ms-win-crt-runtime-l1-1-0-dll-error"]], "Glossary": [[86, "glossary"]], "Annotations Best Practices": [[87, "annotations-best-practices"]], "Abstract": [[87, null], [91, null], [92, "abstract"], [98, null], [102, null], [103, null], [104, null]], "Accessing The Annotations Dict Of An Object In Python 3.10 And Newer": [[87, "accessing-the-annotations-dict-of-an-object-in-python-3-10-and-newer"]], "Accessing The Annotations Dict Of An Object In Python 3.9 And Older": [[87, "accessing-the-annotations-dict-of-an-object-in-python-3-9-and-older"]], "Manually Un-Stringizing Stringized Annotations": [[87, "manually-un-stringizing-stringized-annotations"]], "Best Practices For __annotations__ In Any Python Version": [[87, "best-practices-for-annotations-in-any-python-version"]], "__annotations__ Quirks": [[87, "annotations-quirks"]], "Argparse Tutorial": [[88, "argparse-tutorial"]], "Concepts": [[88, "concepts"]], "The basics": [[88, "the-basics"]], "Introducing Positional arguments": [[88, "introducing-positional-arguments"]], "Introducing Optional arguments": [[88, "introducing-optional-arguments"]], "Short options": [[88, "short-options"]], "Combining Positional and Optional arguments": [[88, "combining-positional-and-optional-arguments"]], "Getting a little more advanced": [[88, "getting-a-little-more-advanced"]], "Specifying ambiguous arguments": [[88, "specifying-ambiguous-arguments"]], "Conflicting options": [[88, "conflicting-options"]], "How to translate the argparse output": [[88, "how-to-translate-the-argparse-output"]], "Conclusion": [[88, "conclusion"]], "Argument Clinic How-To": [[89, "argument-clinic-how-to"]], "Porting Extension Modules to Python 3": [[90, "porting-extension-modules-to-python-3"]], "Curses Programming with Python": [[91, "curses-programming-with-python"]], "What is curses?": [[91, "what-is-curses"]], "The Python curses module": [[91, "the-python-curses-module"]], "Starting and ending a curses application": [[91, "starting-and-ending-a-curses-application"]], "Windows and Pads": [[91, "windows-and-pads"]], "Displaying Text": [[91, "displaying-text"]], "Attributes and Color": [[91, "attributes-and-color"]], "User Input": [[91, "user-input"]], "For More Information": [[91, "for-more-information"]], "Descriptor HowTo Guide": [[92, "descriptor-howto-guide"]], "Primer": [[92, "primer"]], "Simple example: A descriptor that returns a constant": [[92, "simple-example-a-descriptor-that-returns-a-constant"]], "Dynamic lookups": [[92, "dynamic-lookups"]], "Managed attributes": [[92, "managed-attributes"]], "Customized names": [[92, "customized-names"]], "Closing thoughts": [[92, "closing-thoughts"]], "Complete Practical Example": [[92, "complete-practical-example"]], "Validator class": [[92, "validator-class"]], "Custom validators": [[92, "custom-validators"]], "Practical application": [[92, "practical-application"]], "Technical Tutorial": [[92, "technical-tutorial"]], "Definition and introduction": [[92, "definition-and-introduction"]], "Descriptor protocol": [[92, "descriptor-protocol"]], "Overview of descriptor invocation": [[92, "overview-of-descriptor-invocation"]], "Invocation from an instance": [[92, "invocation-from-an-instance"]], "Invocation from a class": [[92, "invocation-from-a-class"]], "Invocation from super": [[92, "invocation-from-super"]], "Summary of invocation logic": [[92, "summary-of-invocation-logic"]], "Automatic name notification": [[92, "automatic-name-notification"]], "ORM example": [[92, "orm-example"]], "Pure Python Equivalents": [[92, "pure-python-equivalents"]], "Properties": [[92, "properties"]], "Functions and methods": [[92, "functions-and-methods"]], "Kinds of methods": [[92, "kinds-of-methods"]], "Static methods": [[92, "static-methods"]], "Class methods": [[92, "class-methods"]], "Member objects and __slots__": [[92, "member-objects-and-slots"]], "Enum HOWTO": [[93, "enum-howto"]], "Programmatic access to enumeration members and their attributes": [[93, "programmatic-access-to-enumeration-members-and-their-attributes"]], "Duplicating enum members and values": [[93, "duplicating-enum-members-and-values"]], "Ensuring unique enumeration values": [[93, "ensuring-unique-enumeration-values"]], "Using automatic values": [[93, "using-automatic-values"]], "Iteration": [[93, "iteration"], [256, "iteration"]], "Comparisons": [[93, "comparisons"], [97, "comparisons"], [341, "comparisons"], [427, "comparisons"]], "Allowed members and attributes of enumerations": [[93, "allowed-members-and-attributes-of-enumerations"]], "Restricted Enum subclassing": [[93, "restricted-enum-subclassing"]], "Dataclass support": [[93, "dataclass-support"]], "Pickling": [[93, "pickling"]], "Functional API": [[93, "functional-api"], [248, "functional-api"]], "Derived Enumerations": [[93, "derived-enumerations"]], "IntEnum": [[93, "intenum"]], "StrEnum": [[93, "strenum"]], "IntFlag": [[93, "intflag"]], "Flag": [[93, "flag"]], "Others": [[93, "others"], [471, "others"]], "When to use __new__() vs. __init__()": [[93, "when-to-use-new-vs-init"]], "Finer Points": [[93, "finer-points"]], "Supported __dunder__ names": [[93, "supported-dunder-names"], [208, "supported-dunder-names"]], "Supported _sunder_ names": [[93, "supported-sunder-names"], [208, "supported-sunder-names"]], "_Private__names": [[93, "private-names"]], "Enum member type": [[93, "enum-member-type"]], "Creating members that are mixed with other data types": [[93, "creating-members-that-are-mixed-with-other-data-types"]], "Boolean value of Enum classes and members": [[93, "boolean-value-of-enum-classes-and-members"]], "Enum classes with methods": [[93, "enum-classes-with-methods"]], "Combining members of Flag": [[93, "combining-members-of-flag"]], "Flag and IntFlag minutia": [[93, "flag-and-intflag-minutia"]], "How are Enums and Flags different?": [[93, "how-are-enums-and-flags-different"]], "Enum Classes": [[93, "enum-classes"]], "Flag Classes": [[93, "flag-classes"]], "Enum Members (aka instances)": [[93, "enum-members-aka-instances"]], "Flag Members": [[93, "flag-members"]], "Enum Cookbook": [[93, "enum-cookbook"]], "Omitting values": [[93, "omitting-values"]], "Using auto": [[93, "using-auto"]], "Using object": [[93, "using-object"]], "Using a descriptive string": [[93, "using-a-descriptive-string"]], "Using a custom __new__()": [[93, "using-a-custom-new"]], "OrderedEnum": [[93, "orderedenum"]], "DuplicateFreeEnum": [[93, "duplicatefreeenum"]], "Planet": [[93, "planet"]], "TimePeriod": [[93, "timeperiod"]], "Subclassing EnumType": [[93, "subclassing-enumtype"]], "Functional Programming HOWTO": [[94, "functional-programming-howto"]], "Formal provability": [[94, "formal-provability"]], "Modularity": [[94, "modularity"]], "Ease of debugging and testing": [[94, "ease-of-debugging-and-testing"]], "Composability": [[94, "composability"]], "Iterators": [[94, "iterators"], [437, "iterators"]], "Data Types That Support Iterators": [[94, "data-types-that-support-iterators"]], "Generator expressions and list comprehensions": [[94, "generator-expressions-and-list-comprehensions"]], "Generators": [[94, "generators"], [437, "generators"]], "Passing values into a generator": [[94, "passing-values-into-a-generator"]], "Built-in functions": [[94, "built-in-functions"], [425, "built-in-functions"]], "The itertools module": [[94, "the-itertools-module"]], "Creating new iterators": [[94, "creating-new-iterators"]], "Calling functions on elements": [[94, "calling-functions-on-elements"]], "Selecting elements": [[94, "selecting-elements"]], "Combinatoric functions": [[94, "combinatoric-functions"]], "Grouping elements": [[94, "grouping-elements"]], "The functools module": [[94, "the-functools-module"]], "The operator module": [[94, "the-operator-module"]], "Small functions and the lambda expression": [[94, "small-functions-and-the-lambda-expression"]], "Revision History and Acknowledgements": [[94, "revision-history-and-acknowledgements"]], "References": [[94, "references"], [106, "references"], [106, "id2"], [106, "id3"], [429, "references"]], "General": [[94, "general"]], "Python-specific": [[94, "python-specific"]], "Python documentation": [[94, "python-documentation"]], "Python HOWTOs": [[95, "python-howtos"]], "Instrumenting CPython with DTrace and SystemTap": [[96, "instrumenting-cpython-with-dtrace-and-systemtap"]], "Enabling the static markers": [[96, "enabling-the-static-markers"]], "Static DTrace probes": [[96, "static-dtrace-probes"]], "Static SystemTap markers": [[96, "static-systemtap-markers"]], "Available static markers": [[96, "available-static-markers"]], "SystemTap Tapsets": [[96, "systemtap-tapsets"]], "An introduction to the ipaddress module": [[97, "an-introduction-to-the-ipaddress-module"]], "Creating Address/Network/Interface objects": [[97, "creating-address-network-interface-objects"]], "A Note on IP Versions": [[97, "a-note-on-ip-versions"]], "IP Host Addresses": [[97, "ip-host-addresses"]], "Defining Networks": [[97, "defining-networks"]], "Host Interfaces": [[97, "host-interfaces"]], "Inspecting Address/Network/Interface Objects": [[97, "inspecting-address-network-interface-objects"]], "Networks as lists of Addresses": [[97, "networks-as-lists-of-addresses"]], "Using IP Addresses with other modules": [[97, "using-ip-addresses-with-other-modules"]], "Getting more detail when instance creation fails": [[97, "getting-more-detail-when-instance-creation-fails"]], "Isolating Extension Modules": [[98, "isolating-extension-modules"]], "Who should read this": [[98, "who-should-read-this"]], "Background": [[98, "background"], [289, "background"]], "Enter Per-Module State": [[98, "enter-per-module-state"]], "Isolated Module Objects": [[98, "isolated-module-objects"]], "Surprising Edge Cases": [[98, "surprising-edge-cases"]], "Making Modules Safe with Multiple Interpreters": [[98, "making-modules-safe-with-multiple-interpreters"]], "Managing Global State": [[98, "managing-global-state"]], "Managing Per-Module State": [[98, "managing-per-module-state"]], "Opt-Out: Limiting to One Module Object per Process": [[98, "opt-out-limiting-to-one-module-object-per-process"]], "Module State Access from Functions": [[98, "module-state-access-from-functions"]], "Changing Static Types to Heap Types": [[98, "changing-static-types-to-heap-types"]], "Defining Heap Types": [[98, "defining-heap-types"]], "Garbage-Collection Protocol": [[98, "garbage-collection-protocol"]], "tp_traverse in Python 3.8 and lower": [[98, "tp-traverse-in-python-3-8-and-lower"]], "Delegating tp_traverse": [[98, "delegating-tp-traverse"]], "Defining tp_dealloc": [[98, "defining-tp-dealloc"]], "Not overriding tp_free": [[98, "not-overriding-tp-free"]], "Avoiding PyObject_New": [[98, "avoiding-pyobject-new"]], "Module State Access from Classes": [[98, "module-state-access-from-classes"]], "Module State Access from Regular Methods": [[98, "module-state-access-from-regular-methods"]], "Module State Access from Slot Methods, Getters and Setters": [[98, "module-state-access-from-slot-methods-getters-and-setters"]], "Lifetime of the Module State": [[98, "lifetime-of-the-module-state"]], "Open Issues": [[98, "open-issues"]], "Per-Class Scope": [[98, "per-class-scope"]], "Lossless Conversion to Heap Types": [[98, "lossless-conversion-to-heap-types"]], "Logging HOWTO": [[99, "logging-howto"]], "Basic Logging Tutorial": [[99, "basic-logging-tutorial"]], "When to use logging": [[99, "when-to-use-logging"]], "A simple example": [[99, "a-simple-example"]], "Logging to a file": [[99, "logging-to-a-file"]], "Logging from multiple modules": [[99, "logging-from-multiple-modules"]], "Logging variable data": [[99, "logging-variable-data"]], "Changing the format of displayed messages": [[99, "changing-the-format-of-displayed-messages"]], "Displaying the date/time in messages": [[99, "displaying-the-date-time-in-messages"]], "Next Steps": [[99, "next-steps"]], "Advanced Logging Tutorial": [[99, "advanced-logging-tutorial"]], "Logging Flow": [[99, "logging-flow"]], "Loggers": [[99, "loggers"]], "Handlers": [[99, "handlers"]], "Formatters": [[99, "formatters"]], "Configuring Logging": [[99, "configuring-logging"]], "What happens if no configuration is provided": [[99, "what-happens-if-no-configuration-is-provided"]], "Configuring Logging for a Library": [[99, "configuring-logging-for-a-library"]], "Logging Levels": [[99, "logging-levels"], [264, "logging-levels"]], "Custom Levels": [[99, "custom-levels"]], "Useful Handlers": [[99, "useful-handlers"]], "Exceptions raised during logging": [[99, "exceptions-raised-during-logging"]], "Using arbitrary objects as messages": [[99, "using-arbitrary-objects-as-messages"]], "Optimization": [[99, "optimization"]], "Other resources": [[99, "other-resources"], [100, "other-resources"]], "Logging Cookbook": [[100, "logging-cookbook"]], "Using logging in multiple modules": [[100, "using-logging-in-multiple-modules"]], "Logging from multiple threads": [[100, "logging-from-multiple-threads"]], "Multiple handlers and formatters": [[100, "multiple-handlers-and-formatters"]], "Logging to multiple destinations": [[100, "logging-to-multiple-destinations"]], "Custom handling of levels": [[100, "custom-handling-of-levels"]], "Configuration server example": [[100, "configuration-server-example"]], "Dealing with handlers that block": [[100, "dealing-with-handlers-that-block"]], "Sending and receiving logging events across a network": [[100, "sending-and-receiving-logging-events-across-a-network"]], "Running a logging socket listener in production": [[100, "running-a-logging-socket-listener-in-production"]], "Adding contextual information to your logging output": [[100, "adding-contextual-information-to-your-logging-output"]], "Using LoggerAdapters to impart contextual information": [[100, "using-loggeradapters-to-impart-contextual-information"]], "Using objects other than dicts to pass contextual information": [[100, "using-objects-other-than-dicts-to-pass-contextual-information"]], "Using Filters to impart contextual information": [[100, "using-filters-to-impart-contextual-information"]], "Use of contextvars": [[100, "use-of-contextvars"]], "Imparting contextual information in handlers": [[100, "imparting-contextual-information-in-handlers"]], "Logging to a single file from multiple processes": [[100, "logging-to-a-single-file-from-multiple-processes"]], "Using concurrent.futures.ProcessPoolExecutor": [[100, "using-concurrent-futures-processpoolexecutor"]], "Deploying Web applications using Gunicorn and uWSGI": [[100, "deploying-web-applications-using-gunicorn-and-uwsgi"]], "Using file rotation": [[100, "using-file-rotation"]], "Use of alternative formatting styles": [[100, "use-of-alternative-formatting-styles"]], "Customizing LogRecord": [[100, "customizing-logrecord"]], "Subclassing QueueHandler - a ZeroMQ example": [[100, "subclassing-queuehandler-a-zeromq-example"]], "Subclassing QueueListener - a ZeroMQ example": [[100, "subclassing-queuelistener-a-zeromq-example"]], "An example dictionary-based configuration": [[100, "an-example-dictionary-based-configuration"]], "Using a rotator and namer to customize log rotation processing": [[100, "using-a-rotator-and-namer-to-customize-log-rotation-processing"]], "A more elaborate multiprocessing example": [[100, "a-more-elaborate-multiprocessing-example"]], "Inserting a BOM into messages sent to a SysLogHandler": [[100, "inserting-a-bom-into-messages-sent-to-a-sysloghandler"]], "Implementing structured logging": [[100, "implementing-structured-logging"]], "Customizing handlers with dictConfig()": [[100, "customizing-handlers-with-dictconfig"]], "Using particular formatting styles throughout your application": [[100, "using-particular-formatting-styles-throughout-your-application"]], "Using LogRecord factories": [[100, "using-logrecord-factories"]], "Using custom message objects": [[100, "using-custom-message-objects"]], "Configuring filters with dictConfig()": [[100, "configuring-filters-with-dictconfig"]], "Customized exception formatting": [[100, "customized-exception-formatting"]], "Speaking logging messages": [[100, "speaking-logging-messages"]], "Buffering logging messages and outputting them conditionally": [[100, "buffering-logging-messages-and-outputting-them-conditionally"]], "Sending logging messages to email, with buffering": [[100, "sending-logging-messages-to-email-with-buffering"]], "Formatting times using UTC (GMT) via configuration": [[100, "formatting-times-using-utc-gmt-via-configuration"]], "Using a context manager for selective logging": [[100, "using-a-context-manager-for-selective-logging"]], "A CLI application starter template": [[100, "a-cli-application-starter-template"]], "A Qt GUI for logging": [[100, "a-qt-gui-for-logging"]], "Logging to syslog with RFC5424 support": [[100, "logging-to-syslog-with-rfc5424-support"]], "How to treat a logger like an output stream": [[100, "how-to-treat-a-logger-like-an-output-stream"]], "Patterns to avoid": [[100, "patterns-to-avoid"]], "Opening the same log file multiple times": [[100, "opening-the-same-log-file-multiple-times"]], "Using loggers as attributes in a class or passing them as parameters": [[100, "using-loggers-as-attributes-in-a-class-or-passing-them-as-parameters"]], "Adding handlers other than NullHandler to a logger in a library": [[100, "adding-handlers-other-than-nullhandler-to-a-logger-in-a-library"]], "Creating a lot of loggers": [[100, "creating-a-lot-of-loggers"]], "Python support for the Linux perf profiler": [[101, "python-support-for-the-linux-perf-profiler"]], "How to enable perf profiling support": [[101, "how-to-enable-perf-profiling-support"]], "How to obtain the best results": [[101, "how-to-obtain-the-best-results"]], "How to port Python 2 Code to Python 3": [[102, "how-to-port-python-2-code-to-python-3"]], "The Short Explanation": [[102, "the-short-explanation"]], "Details": [[102, "details"]], "Different versions of Python 2": [[102, "different-versions-of-python-2"]], "Make sure you specify the proper version support in your setup.py file": [[102, "make-sure-you-specify-the-proper-version-support-in-your-setup-py-file"]], "Have good test coverage": [[102, "have-good-test-coverage"]], "Be aware of the differences between Python 2 and 3": [[102, "be-aware-of-the-differences-between-python-2-and-3"]], "Update your code": [[102, "update-your-code"]], "Division": [[102, "division"]], "Text versus binary data": [[102, "text-versus-binary-data"]], "Use feature detection instead of version detection": [[102, "use-feature-detection-instead-of-version-detection"]], "Prevent compatibility regressions": [[102, "prevent-compatibility-regressions"]], "Check which dependencies block your transition": [[102, "check-which-dependencies-block-your-transition"]], "Update your setup.py file to denote Python 3 compatibility": [[102, "update-your-setup-py-file-to-denote-python-3-compatibility"]], "Use continuous integration to stay compatible": [[102, "use-continuous-integration-to-stay-compatible"]], "Consider using optional static type checking": [[102, "consider-using-optional-static-type-checking"]], "Regular Expression HOWTO": [[103, "regular-expression-howto"]], "Simple Patterns": [[103, "simple-patterns"]], "Matching Characters": [[103, "matching-characters"]], "Repeating Things": [[103, "repeating-things"]], "Using Regular Expressions": [[103, "using-regular-expressions"]], "Compiling Regular Expressions": [[103, "compiling-regular-expressions"]], "The Backslash Plague": [[103, "the-backslash-plague"]], "Performing Matches": [[103, "performing-matches"]], "Module-Level Functions": [[103, "module-level-functions"], [264, "module-level-functions"]], "Compilation Flags": [[103, "compilation-flags"]], "More Pattern Power": [[103, "more-pattern-power"]], "More Metacharacters": [[103, "more-metacharacters"]], "Grouping": [[103, "grouping"]], "Non-capturing and Named Groups": [[103, "non-capturing-and-named-groups"]], "Lookahead Assertions": [[103, "lookahead-assertions"]], "Modifying Strings": [[103, "modifying-strings"]], "Splitting Strings": [[103, "splitting-strings"]], "Search and Replace": [[103, "search-and-replace"], [244, "search-and-replace"]], "Common Problems": [[103, "common-problems"]], "Use String Methods": [[103, "use-string-methods"]], "match() versus search()": [[103, "match-versus-search"]], "Greedy versus Non-Greedy": [[103, "greedy-versus-non-greedy"]], "Using re.VERBOSE": [[103, "using-re-verbose"]], "Feedback": [[103, "feedback"]], "Socket Programming HOWTO": [[104, "socket-programming-howto"]], "Sockets": [[104, "sockets"], [423, "sockets"]], "History": [[104, "history"]], "Creating a Socket": [[104, "creating-a-socket"]], "IPC": [[104, "ipc"]], "Using a Socket": [[104, "using-a-socket"]], "Binary Data": [[104, "binary-data"]], "Disconnecting": [[104, "disconnecting"]], "When Sockets Die": [[104, "when-sockets-die"]], "Non-blocking Sockets": [[104, "non-blocking-sockets"]], "Sorting HOW TO": [[105, "sorting-how-to"]], "Sorting Basics": [[105, "sorting-basics"]], "Key Functions": [[105, "key-functions"]], "Operator Module Functions": [[105, "operator-module-functions"]], "Ascending and Descending": [[105, "ascending-and-descending"]], "Sort Stability and Complex Sorts": [[105, "sort-stability-and-complex-sorts"]], "Decorate-Sort-Undecorate": [[105, "decorate-sort-undecorate"]], "Comparison Functions": [[105, "comparison-functions"]], "Odds and Ends": [[105, "odds-and-ends"], [437, "odds-and-ends"]], "Unicode HOWTO": [[106, "unicode-howto"]], "Introduction to Unicode": [[106, "introduction-to-unicode"]], "Definitions": [[106, "definitions"]], "Encodings": [[106, "encodings"]], "Python\u2019s Unicode Support": [[106, "python-s-unicode-support"]], "The String Type": [[106, "the-string-type"]], "Converting to Bytes": [[106, "converting-to-bytes"]], "Unicode Literals in Python Source Code": [[106, "unicode-literals-in-python-source-code"]], "Unicode Properties": [[106, "unicode-properties"]], "Comparing Strings": [[106, "comparing-strings"]], "Unicode Regular Expressions": [[106, "unicode-regular-expressions"]], "Reading and Writing Unicode Data": [[106, "reading-and-writing-unicode-data"]], "Unicode filenames": [[106, "unicode-filenames"]], "Tips for Writing Unicode-aware Programs": [[106, "tips-for-writing-unicode-aware-programs"]], "Converting Between File Encodings": [[106, "converting-between-file-encodings"]], "Files in an Unknown Encoding": [[106, "files-in-an-unknown-encoding"]], "Acknowledgements": [[106, "acknowledgements"], [227, "acknowledgements"], [459, "acknowledgements"], [460, "acknowledgements"], [461, "acknowledgements"], [462, "acknowledgements"], [463, "acknowledgements"], [464, "acknowledgements"], [465, "acknowledgements"], [466, "acknowledgements"]], "HOWTO Fetch Internet Resources Using The urllib Package": [[107, "howto-fetch-internet-resources-using-the-urllib-package"]], "Related Articles": [[107, null]], "Fetching URLs": [[107, "fetching-urls"]], "Data": [[107, "data"]], "Headers": [[107, "headers"]], "Handling Exceptions": [[107, "handling-exceptions"], [440, "handling-exceptions"]], "URLError": [[107, "urlerror"]], "HTTPError": [[107, "httperror"]], "Error Codes": [[107, "error-codes"]], "Wrapping it Up": [[107, "wrapping-it-up"]], "Number 1": [[107, "number-1"]], "Number 2": [[107, "number-2"]], "info and geturl": [[107, "info-and-geturl"]], "Openers and Handlers": [[107, "openers-and-handlers"]], "Basic Authentication": [[107, "id5"]], "Proxies": [[107, "proxies"]], "Sockets and Layers": [[107, "sockets-and-layers"]], "Footnotes": [[107, "footnotes"]], "Installing Python Modules": [[108, "installing-python-modules"]], "Key terms": [[108, "key-terms"]], "Basic usage": [[108, "basic-usage"]], "How do I \u2026?": [[108, "how-do-i"]], "\u2026 install pip in versions of Python prior to Python 3.4?": [[108, "install-pip-in-versions-of-python-prior-to-python-3-4"]], "\u2026 install packages just for the current user?": [[108, "install-packages-just-for-the-current-user"]], "\u2026 install scientific Python packages?": [[108, "install-scientific-python-packages"]], "\u2026 work with multiple versions of Python installed in parallel?": [[108, "work-with-multiple-versions-of-python-installed-in-parallel"]], "Common installation issues": [[108, "common-installation-issues"]], "Installing into the system Python on Linux": [[108, "installing-into-the-system-python-on-linux"]], "Pip not installed": [[108, "pip-not-installed"]], "Installing binary extensions": [[108, "installing-binary-extensions"]], "2to3 \u2014 Automated Python 2 to 3 code translation": [[109, "to3-automated-python-2-to-3-code-translation"]], "Using 2to3": [[109, "using-2to3"]], "Fixers": [[109, "fixers"]], "lib2to3 \u2014 2to3\u2019s library": [[109, "module-lib2to3"]], "__future__ \u2014 Future statement definitions": [[110, "module-__future__"]], "Module Contents": [[110, "module-contents"], [172, "module-contents"], [208, "module-contents"], [316, "module-contents"], [407, "module-contents"]], "__main__ \u2014 Top-level code environment": [[111, "module-__main__"]], "__name__ == '__main__'": [[111, "name-main"]], "What is the \u201ctop-level code environment\u201d?": [[111, "what-is-the-top-level-code-environment"]], "Idiomatic Usage": [[111, "idiomatic-usage"], [111, "id1"]], "Packaging Considerations": [[111, "packaging-considerations"]], "__main__.py in Python Packages": [[111, "main-py-in-python-packages"]], "import __main__": [[111, "import-main"]], "_thread \u2014 Low-level threading API": [[112, "module-_thread"]], "abc \u2014 Abstract Base Classes": [[113, "module-abc"]], "aifc \u2014 Read and write AIFF and AIFC files": [[114, "module-aifc"]], "Generic Operating System Services": [[115, "generic-operating-system-services"]], "Data Compression and Archiving": [[116, "data-compression-and-archiving"]], "argparse \u2014 Parser for command-line options, arguments and sub-commands": [[117, "module-argparse"]], "Tutorial": [[117, null], [289, "tutorial"], [337, "tutorial"], [381, "tutorial"], [410, "tutorial"]], "Core Functionality": [[117, "core-functionality"]], "Quick Links for add_argument()": [[117, "quick-links-for-add-argument"]], "Creating a parser": [[117, "creating-a-parser"]], "Adding arguments": [[117, "adding-arguments"]], "ArgumentParser objects": [[117, "argumentparser-objects"]], "prog": [[117, "prog"]], "usage": [[117, "usage"]], "description": [[117, "description"]], "epilog": [[117, "epilog"]], "parents": [[117, "parents"]], "formatter_class": [[117, "formatter-class"]], "prefix_chars": [[117, "prefix-chars"]], "fromfile_prefix_chars": [[117, "fromfile-prefix-chars"]], "argument_default": [[117, "argument-default"]], "allow_abbrev": [[117, "allow-abbrev"]], "conflict_handler": [[117, "conflict-handler"]], "add_help": [[117, "add-help"]], "exit_on_error": [[117, "exit-on-error"]], "The add_argument() method": [[117, "the-add-argument-method"]], "name or flags": [[117, "name-or-flags"]], "action": [[117, "action"]], "nargs": [[117, "nargs"]], "const": [[117, "const"]], "default": [[117, "default"]], "type": [[117, "type"]], "choices": [[117, "choices"]], "required": [[117, "required"]], "help": [[117, "help"]], "metavar": [[117, "metavar"]], "dest": [[117, "dest"]], "Action classes": [[117, "action-classes"]], "The parse_args() method": [[117, "the-parse-args-method"]], "Option value syntax": [[117, "option-value-syntax"]], "Invalid arguments": [[117, "invalid-arguments"]], "Arguments containing -": [[117, "arguments-containing"]], "Argument abbreviations (prefix matching)": [[117, "argument-abbreviations-prefix-matching"]], "Beyond sys.argv": [[117, "beyond-sys-argv"]], "The Namespace object": [[117, "the-namespace-object"]], "Other utilities": [[117, "other-utilities"]], "Sub-commands": [[117, "sub-commands"]], "FileType objects": [[117, "filetype-objects"]], "Argument groups": [[117, "argument-groups"]], "Mutual exclusion": [[117, "mutual-exclusion"]], "Parser defaults": [[117, "parser-defaults"]], "Printing help": [[117, "printing-help"]], "Partial parsing": [[117, "partial-parsing"]], "Customizing file parsing": [[117, "customizing-file-parsing"]], "Exiting methods": [[117, "exiting-methods"]], "Intermixed parsing": [[117, "intermixed-parsing"]], "Upgrading optparse code": [[117, "upgrading-optparse-code"]], "array \u2014 Efficient arrays of numeric values": [[118, "module-array"]], "ast \u2014 Abstract Syntax Trees": [[119, "module-ast"]], "Abstract Grammar": [[119, "abstract-grammar"]], "Node classes": [[119, "node-classes"]], "Root nodes": [[119, "root-nodes"]], "Literals": [[119, "literals"], [427, "literals"], [432, "literals"]], "Variables": [[119, "variables"]], "Expressions": [[119, "expressions"], [427, "expressions"]], "Subscripting": [[119, "subscripting"]], "Comprehensions": [[119, "comprehensions"]], "Statements": [[119, "statements"]], "Imports": [[119, "imports"]], "Control flow": [[119, "control-flow"]], "Pattern matching": [[119, "pattern-matching"]], "Type parameters": [[119, "type-parameters"]], "Function and class definitions": [[119, "function-and-class-definitions"]], "Async and await": [[119, "async-and-await"]], "ast Helpers": [[119, "ast-helpers"]], "Compiler Flags": [[119, "compiler-flags"]], "Command-Line Usage": [[119, "command-line-usage"], [147, "command-line-usage"], [375, "command-line-usage"], [377, "command-line-usage"], [395, "command-line-usage"]], "asyncio \u2014 Asynchronous I/O": [[120, "module-asyncio"]], "Hello World!": [[120, null]], "High-level APIs": [[120, null]], "Low-level APIs": [[120, null]], "Guides and Tutorials": [[120, null]], "High-level API Index": [[121, "high-level-api-index"]], "Tasks": [[121, "tasks"]], "Queues": [[121, "queues"], [131, "queues"]], "Subprocesses": [[121, "subprocesses"], [134, "subprocesses"]], "Streams": [[121, "streams"], [133, "streams"]], "Synchronization": [[121, "synchronization"]], "Developing with asyncio": [[122, "developing-with-asyncio"]], "Debug Mode": [[122, "debug-mode"]], "Concurrency and Multithreading": [[122, "concurrency-and-multithreading"]], "Running Blocking Code": [[122, "running-blocking-code"]], "Logging": [[122, "logging"], [280, "logging"], [449, "logging"]], "Detect never-awaited coroutines": [[122, "detect-never-awaited-coroutines"]], "Detect never-retrieved exceptions": [[122, "detect-never-retrieved-exceptions"]], "Event Loop": [[123, "event-loop"]], "Event Loop Methods": [[123, "event-loop-methods"], [127, "event-loop-methods"]], "Running and stopping the loop": [[123, "running-and-stopping-the-loop"]], "Scheduling callbacks": [[123, "scheduling-callbacks"]], "Scheduling delayed callbacks": [[123, "scheduling-delayed-callbacks"]], "Creating Futures and Tasks": [[123, "creating-futures-and-tasks"]], "Opening network connections": [[123, "opening-network-connections"]], "Creating network servers": [[123, "creating-network-servers"]], "Transferring files": [[123, "transferring-files"]], "TLS Upgrade": [[123, "tls-upgrade"]], "Watching file descriptors": [[123, "watching-file-descriptors"]], "Working with socket objects directly": [[123, "working-with-socket-objects-directly"]], "DNS": [[123, "dns"]], "Working with pipes": [[123, "working-with-pipes"]], "Unix signals": [[123, "unix-signals"]], "Executing code in thread or process pools": [[123, "executing-code-in-thread-or-process-pools"]], "Error Handling API": [[123, "error-handling-api"]], "Enabling debug mode": [[123, "enabling-debug-mode"]], "Running Subprocesses": [[123, "running-subprocesses"]], "Callback Handles": [[123, "callback-handles"]], "Server Objects": [[123, "server-objects"], [335, "server-objects"]], "Event Loop Implementations": [[123, "event-loop-implementations"]], "Hello World with call_soon()": [[123, "hello-world-with-call-soon"]], "Display the current date with call_later()": [[123, "display-the-current-date-with-call-later"]], "Watch a file descriptor for read events": [[123, "watch-a-file-descriptor-for-read-events"]], "Set signal handlers for SIGINT and SIGTERM": [[123, "set-signal-handlers-for-sigint-and-sigterm"]], "Extending": [[125, "extending"]], "Writing a Custom Event Loop": [[125, "writing-a-custom-event-loop"]], "Future and Task private constructors": [[125, "future-and-task-private-constructors"]], "Task lifetime support": [[125, "task-lifetime-support"]], "Futures": [[126, "futures"]], "Future Functions": [[126, "future-functions"]], "Future Object": [[126, "future-object"]], "Low-level API Index": [[127, "low-level-api-index"]], "Obtaining the Event Loop": [[127, "obtaining-the-event-loop"]], "Transports": [[127, "transports"], [130, "transports"]], "Protocols": [[127, "protocols"], [130, "protocols"], [383, "protocols"]], "Event Loop Policies": [[127, "event-loop-policies"]], "Platform Support": [[128, "platform-support"]], "All Platforms": [[128, "all-platforms"]], "Windows": [[128, "windows"]], "Subprocess Support on Windows": [[128, "subprocess-support-on-windows"]], "macOS": [[128, "macos"]], "Policies": [[129, "policies"]], "Getting and Setting the Policy": [[129, "getting-and-setting-the-policy"]], "Policy Objects": [[129, "policy-objects"]], "Process Watchers": [[129, "process-watchers"]], "Custom Policies": [[129, "custom-policies"]], "Transports and Protocols": [[130, "transports-and-protocols"]], "Transports Hierarchy": [[130, "transports-hierarchy"]], "Base Transport": [[130, "base-transport"]], "Read-only Transports": [[130, "read-only-transports"]], "Write-only Transports": [[130, "write-only-transports"]], "Datagram Transports": [[130, "datagram-transports"]], "Subprocess Transports": [[130, "subprocess-transports"]], "Base Protocols": [[130, "base-protocols"]], "Base Protocol": [[130, "base-protocol"]], "Streaming Protocols": [[130, "streaming-protocols"]], "Buffered Streaming Protocols": [[130, "buffered-streaming-protocols"]], "Datagram Protocols": [[130, "datagram-protocols"]], "Subprocess Protocols": [[130, "subprocess-protocols"]], "TCP Echo Server": [[130, "tcp-echo-server"]], "TCP Echo Client": [[130, "tcp-echo-client"]], "UDP Echo Server": [[130, "udp-echo-server"]], "UDP Echo Client": [[130, "udp-echo-client"]], "Connecting Existing Sockets": [[130, "connecting-existing-sockets"]], "loop.subprocess_exec() and SubprocessProtocol": [[130, "loop-subprocess-exec-and-subprocessprotocol"]], "Queue": [[131, "queue"]], "Priority Queue": [[131, "priority-queue"]], "LIFO Queue": [[131, "lifo-queue"]], "Runners": [[132, "runners"]], "Running an asyncio Program": [[132, "running-an-asyncio-program"]], "Runner context manager": [[132, "runner-context-manager"]], "Handling Keyboard Interruption": [[132, "handling-keyboard-interruption"]], "StreamReader": [[133, "streamreader"]], "StreamWriter": [[133, "streamwriter"]], "TCP echo client using streams": [[133, "tcp-echo-client-using-streams"]], "TCP echo server using streams": [[133, "tcp-echo-server-using-streams"]], "Get HTTP headers": [[133, "get-http-headers"]], "Register an open socket to wait for data using streams": [[133, "register-an-open-socket-to-wait-for-data-using-streams"]], "Creating Subprocesses": [[134, "creating-subprocesses"]], "Constants": [[134, "constants"], [151, "constants"], [174, "constants"], [180, "constants"], [183, "constants"], [232, "constants"], [272, "constants"], [334, "constants"], [338, "constants"], [402, "constants"]], "Interacting with Subprocesses": [[134, "interacting-with-subprocesses"]], "Subprocess and Threads": [[134, "subprocess-and-threads"]], "Synchronization Primitives": [[135, "synchronization-primitives"]], "Lock": [[135, "lock"]], "Event": [[135, "event"]], "Condition": [[135, "condition"]], "Semaphore": [[135, "semaphore"]], "BoundedSemaphore": [[135, "boundedsemaphore"]], "Barrier": [[135, "barrier"]], "Coroutines and Tasks": [[136, "coroutines-and-tasks"]], "Coroutines": [[136, "coroutines"], [424, "coroutines"], [425, "coroutines"]], "Awaitables": [[136, "awaitables"]], "Creating Tasks": [[136, "creating-tasks"]], "Task Cancellation": [[136, "task-cancellation"]], "Task Groups": [[136, "task-groups"]], "Sleeping": [[136, "sleeping"]], "Running Tasks Concurrently": [[136, "running-tasks-concurrently"]], "Eager Task Factory": [[136, "eager-task-factory"]], "Shielding From Cancellation": [[136, "shielding-from-cancellation"]], "Timeouts": [[136, "timeouts"]], "Waiting Primitives": [[136, "waiting-primitives"]], "Running in Threads": [[136, "running-in-threads"]], "Scheduling From Other Threads": [[136, "scheduling-from-other-threads"]], "Introspection": [[136, "introspection"]], "Task Object": [[136, "task-object"]], "atexit \u2014 Exit handlers": [[137, "module-atexit"]], "atexit Example": [[137, "atexit-example"]], "audioop \u2014 Manipulate raw audio data": [[138, "module-audioop"]], "Audit events table": [[139, "audit-events-table"]], "base64 \u2014 Base16, Base32, Base64, Base85 Data Encodings": [[140, "module-base64"]], "Security Considerations": [[140, "security-considerations"], [242, "security-considerations"], [324, "security-considerations"], [345, "security-considerations"]], "bdb \u2014 Debugger framework": [[141, "module-bdb"]], "Binary Data Services": [[142, "binary-data-services"]], "binascii \u2014 Convert between binary and ASCII": [[143, "module-binascii"]], "bisect \u2014 Array bisection algorithm": [[144, "module-bisect"]], "Performance Notes": [[144, "performance-notes"]], "Searching Sorted Lists": [[144, "searching-sorted-lists"]], "builtins \u2014 Built-in objects": [[145, "module-builtins"]], "bz2 \u2014 Support for bzip2 compression": [[146, "module-bz2"]], "(De)compression of files": [[146, "de-compression-of-files"]], "Incremental (de)compression": [[146, "incremental-de-compression"]], "One-shot (de)compression": [[146, "one-shot-de-compression"]], "Examples of usage": [[146, "examples-of-usage"], [231, "examples-of-usage"]], "calendar \u2014 General calendar-related functions": [[147, "module-calendar"]], "cgi \u2014 Common Gateway Interface support": [[148, "module-cgi"]], "Using the cgi module": [[148, "using-the-cgi-module"]], "Higher Level Interface": [[148, "higher-level-interface"]], "Functions": [[148, "functions"], [174, "functions"], [176, "functions"], [247, "functions"], [316, "functions"], [334, "functions"], [341, "functions"], [363, "functions"], [379, "functions"], [402, "functions"], [410, "functions"], [410, "elementinclude-functions"], [422, "functions"]], "Caring about security": [[148, "caring-about-security"]], "Installing your CGI script on a Unix system": [[148, "installing-your-cgi-script-on-a-unix-system"]], "Testing your CGI script": [[148, "testing-your-cgi-script"]], "Debugging CGI scripts": [[148, "debugging-cgi-scripts"]], "Common problems and solutions": [[148, "common-problems-and-solutions"]], "cgitb \u2014 Traceback manager for CGI scripts": [[149, "module-cgitb"]], "chunk \u2014 Read IFF chunked data": [[150, "module-chunk"]], "cmath \u2014 Mathematical functions for complex numbers": [[151, "module-cmath"]], "Conversions to and from polar coordinates": [[151, "conversions-to-and-from-polar-coordinates"]], "Power and logarithmic functions": [[151, "power-and-logarithmic-functions"], [272, "power-and-logarithmic-functions"]], "Trigonometric functions": [[151, "trigonometric-functions"], [272, "trigonometric-functions"]], "Hyperbolic functions": [[151, "hyperbolic-functions"], [272, "hyperbolic-functions"]], "Classification functions": [[151, "classification-functions"]], "cmd \u2014 Support for line-oriented command interpreters": [[152, "module-cmd"]], "Cmd Objects": [[152, "cmd-objects"]], "Cmd Example": [[152, "cmd-example"]], "Modules command-line interface (CLI)": [[153, "modules-command-line-interface-cli"]], "code \u2014 Interpreter base classes": [[154, "module-code"]], "Interactive Interpreter Objects": [[154, "interactive-interpreter-objects"]], "Interactive Console Objects": [[154, "interactive-console-objects"]], "codecs \u2014 Codec registry and base classes": [[155, "module-codecs"]], "Codec Base Classes": [[155, "codec-base-classes"]], "Error Handlers": [[155, "error-handlers"]], "Stateless Encoding and Decoding": [[155, "stateless-encoding-and-decoding"]], "Incremental Encoding and Decoding": [[155, "incremental-encoding-and-decoding"]], "IncrementalEncoder Objects": [[155, "incrementalencoder-objects"]], "IncrementalDecoder Objects": [[155, "incrementaldecoder-objects"]], "Stream Encoding and Decoding": [[155, "stream-encoding-and-decoding"]], "StreamWriter Objects": [[155, "streamwriter-objects"]], "StreamReader Objects": [[155, "streamreader-objects"]], "StreamReaderWriter Objects": [[155, "streamreaderwriter-objects"]], "StreamRecoder Objects": [[155, "streamrecoder-objects"]], "Encodings and Unicode": [[155, "encodings-and-unicode"]], "Standard Encodings": [[155, "standard-encodings"]], "Python Specific Encodings": [[155, "python-specific-encodings"]], "Text Encodings": [[155, "text-encodings"]], "Binary Transforms": [[155, "binary-transforms"]], "Text Transforms": [[155, "text-transforms"]], "encodings.idna \u2014 Internationalized Domain Names in Applications": [[155, "module-encodings.idna"]], "encodings.mbcs \u2014 Windows ANSI codepage": [[155, "module-encodings.mbcs"]], "encodings.utf_8_sig \u2014 UTF-8 codec with BOM signature": [[155, "module-encodings.utf_8_sig"]], "codeop \u2014 Compile Python code": [[156, "module-codeop"]], "collections \u2014 Container datatypes": [[157, "module-collections"]], "ChainMap objects": [[157, "chainmap-objects"]], "ChainMap Examples and Recipes": [[157, "chainmap-examples-and-recipes"]], "Counter objects": [[157, "counter-objects"]], "deque objects": [[157, "deque-objects"]], "deque Recipes": [[157, "deque-recipes"]], "defaultdict objects": [[157, "defaultdict-objects"]], "defaultdict Examples": [[157, "defaultdict-examples"]], "namedtuple() Factory Function for Tuples with Named Fields": [[157, "namedtuple-factory-function-for-tuples-with-named-fields"]], "OrderedDict objects": [[157, "ordereddict-objects"]], "OrderedDict Examples and Recipes": [[157, "ordereddict-examples-and-recipes"]], "UserDict objects": [[157, "userdict-objects"]], "UserList objects": [[157, "userlist-objects"]], "UserString objects": [[157, "userstring-objects"]], "collections.abc \u2014 Abstract Base Classes for Containers": [[158, "module-collections.abc"]], "Collections Abstract Base Classes": [[158, "collections-abstract-base-classes"]], "Collections Abstract Base Classes \u2013 Detailed Descriptions": [[158, "collections-abstract-base-classes-detailed-descriptions"]], "Examples and Recipes": [[158, "examples-and-recipes"], [166, "examples-and-recipes"]], "colorsys \u2014 Conversions between color systems": [[159, "module-colorsys"]], "compileall \u2014 Byte-compile Python libraries": [[160, "module-compileall"]], "Command-line use": [[160, "command-line-use"]], "Public functions": [[160, "public-functions"]], "Concurrent Execution": [[161, "concurrent-execution"]], "The concurrent package": [[162, "the-concurrent-package"]], "concurrent.futures \u2014 Launching parallel tasks": [[163, "module-concurrent.futures"]], "Executor Objects": [[163, "executor-objects"]], "ThreadPoolExecutor": [[163, "threadpoolexecutor"]], "ThreadPoolExecutor Example": [[163, "threadpoolexecutor-example"]], "ProcessPoolExecutor": [[163, "processpoolexecutor"]], "ProcessPoolExecutor Example": [[163, "processpoolexecutor-example"]], "Future Objects": [[163, "future-objects"]], "Module Functions": [[163, "module-functions"], [170, "module-functions"]], "Exception classes": [[163, "exception-classes"]], "configparser \u2014 Configuration file parser": [[164, "module-configparser"]], "Quick Start": [[164, "quick-start"]], "Supported Datatypes": [[164, "supported-datatypes"]], "Fallback Values": [[164, "fallback-values"]], "Supported INI File Structure": [[164, "supported-ini-file-structure"]], "Interpolation of values": [[164, "interpolation-of-values"]], "Mapping Protocol Access": [[164, "mapping-protocol-access"]], "Customizing Parser Behaviour": [[164, "customizing-parser-behaviour"]], "Legacy API Examples": [[164, "legacy-api-examples"]], "ConfigParser Objects": [[164, "configparser-objects"]], "RawConfigParser Objects": [[164, "rawconfigparser-objects"]], "Built-in Constants": [[165, "built-in-constants"]], "Constants added by the site module": [[165, "constants-added-by-the-site-module"]], "contextlib \u2014 Utilities for with-statement contexts": [[166, "module-contextlib"]], "Supporting a variable number of context managers": [[166, "supporting-a-variable-number-of-context-managers"]], "Catching exceptions from __enter__ methods": [[166, "catching-exceptions-from-enter-methods"]], "Cleaning up in an __enter__ implementation": [[166, "cleaning-up-in-an-enter-implementation"]], "Replacing any use of try-finally and flag variables": [[166, "replacing-any-use-of-try-finally-and-flag-variables"]], "Using a context manager as a function decorator": [[166, "using-a-context-manager-as-a-function-decorator"]], "Single use, reusable and reentrant context managers": [[166, "single-use-reusable-and-reentrant-context-managers"]], "Reentrant context managers": [[166, "reentrant-context-managers"]], "Reusable context managers": [[166, "reusable-context-managers"]], "contextvars \u2014 Context Variables": [[167, "module-contextvars"]], "Context Variables": [[167, "context-variables"]], "Manual Context Management": [[167, "manual-context-management"]], "asyncio support": [[167, "asyncio-support"]], "copy \u2014 Shallow and deep copy operations": [[168, "module-copy"]], "copyreg \u2014 Register pickle support functions": [[169, "module-copyreg"]], "crypt \u2014 Function to check Unix passwords": [[170, "module-crypt"]], "Hashing Methods": [[170, "hashing-methods"]], "Module Attributes": [[170, "module-attributes"]], "Cryptographic Services": [[171, "cryptographic-services"]], "csv \u2014 CSV File Reading and Writing": [[172, "module-csv"]], "Dialects and Formatting Parameters": [[172, "dialects-and-formatting-parameters"]], "Reader Objects": [[172, "reader-objects"]], "Writer Objects": [[172, "writer-objects"]], "ctypes \u2014 A foreign function library for Python": [[173, "module-ctypes"]], "ctypes tutorial": [[173, "ctypes-tutorial"]], "Loading dynamic link libraries": [[173, "loading-dynamic-link-libraries"]], "Accessing functions from loaded dlls": [[173, "accessing-functions-from-loaded-dlls"]], "Calling functions": [[173, "calling-functions"]], "Fundamental data types": [[173, "fundamental-data-types"], [173, "ctypes-fundamental-data-types-2"]], "Calling functions, continued": [[173, "calling-functions-continued"]], "Calling variadic functions": [[173, "calling-variadic-functions"]], "Calling functions with your own custom data types": [[173, "calling-functions-with-your-own-custom-data-types"]], "Specifying the required argument types (function prototypes)": [[173, "specifying-the-required-argument-types-function-prototypes"]], "Return types": [[173, "return-types"]], "Passing pointers (or: passing parameters by reference)": [[173, "passing-pointers-or-passing-parameters-by-reference"]], "Structures and unions": [[173, "structures-and-unions"]], "Structure/union alignment and byte order": [[173, "structure-union-alignment-and-byte-order"]], "Bit fields in structures and unions": [[173, "bit-fields-in-structures-and-unions"]], "Arrays": [[173, "arrays"]], "Pointers": [[173, "pointers"]], "Type conversions": [[173, "type-conversions"]], "Incomplete Types": [[173, "incomplete-types"]], "Callback functions": [[173, "callback-functions"]], "Accessing values exported from dlls": [[173, "accessing-values-exported-from-dlls"]], "Surprises": [[173, "surprises"]], "Variable-sized data types": [[173, "variable-sized-data-types"]], "ctypes reference": [[173, "ctypes-reference"]], "Finding shared libraries": [[173, "finding-shared-libraries"]], "Loading shared libraries": [[173, "loading-shared-libraries"]], "Foreign functions": [[173, "foreign-functions"]], "Function prototypes": [[173, "function-prototypes"]], "Utility functions": [[173, "utility-functions"], [285, "utility-functions"]], "Data types": [[173, "data-types"]], "Structured data types": [[173, "structured-data-types"]], "Arrays and pointers": [[173, "arrays-and-pointers"]], "curses \u2014 Terminal handling for character-cell displays": [[174, "module-curses"]], "Window Objects": [[174, "window-objects"]], "curses.textpad \u2014 Text input widget for curses programs": [[174, "module-curses.textpad"]], "Textbox objects": [[174, "textbox-objects"]], "curses.ascii \u2014 Utilities for ASCII characters": [[175, "module-curses.ascii"]], "curses.panel \u2014 A panel stack extension for curses": [[176, "module-curses.panel"]], "Panel Objects": [[176, "panel-objects"]], "Custom Python Interpreters": [[177, "custom-python-interpreters"]], "dataclasses \u2014 Data Classes": [[178, "module-dataclasses"]], "Module contents": [[178, "module-contents"], [330, "module-contents"], [331, "module-contents"], [334, "module-contents"], [383, "module-contents"]], "Post-init processing": [[178, "post-init-processing"]], "Class variables": [[178, "class-variables"]], "Init-only variables": [[178, "init-only-variables"]], "Frozen instances": [[178, "frozen-instances"]], "Inheritance": [[178, "inheritance"], [437, "inheritance"]], "Re-ordering of keyword-only parameters in __init__()": [[178, "re-ordering-of-keyword-only-parameters-in-init"]], "Default factory functions": [[178, "default-factory-functions"]], "Mutable default values": [[178, "mutable-default-values"]], "Descriptor-typed fields": [[178, "descriptor-typed-fields"]], "Data Types": [[179, "data-types"], [208, "data-types"]], "datetime \u2014 Basic date and time types": [[180, "module-datetime"]], "Aware and Naive Objects": [[180, "aware-and-naive-objects"]], "Available Types": [[180, "available-types"]], "Common Properties": [[180, "common-properties"]], "Determining if an Object is Aware or Naive": [[180, "determining-if-an-object-is-aware-or-naive"]], "timedelta Objects": [[180, "timedelta-objects"]], "Examples of usage: timedelta": [[180, "examples-of-usage-timedelta"]], "date Objects": [[180, "date-objects"]], "Examples of Usage: date": [[180, "examples-of-usage-date"]], "datetime Objects": [[180, "datetime-objects"]], "Examples of Usage: datetime": [[180, "examples-of-usage-datetime"]], "time Objects": [[180, "time-objects"]], "Examples of Usage: time": [[180, "examples-of-usage-time"]], "tzinfo Objects": [[180, "tzinfo-objects"]], "timezone Objects": [[180, "timezone-objects"]], "strftime() and strptime() Behavior": [[180, "strftime-and-strptime-behavior"]], "strftime() and strptime() Format Codes": [[180, "strftime-and-strptime-format-codes"]], "Technical Detail": [[180, "technical-detail"]], "dbm \u2014 Interfaces to Unix \u201cdatabases\u201d": [[181, "module-dbm"]], "dbm.gnu \u2014 GNU database manager": [[181, "module-dbm.gnu"]], "dbm.ndbm \u2014 New Database Manager": [[181, "module-dbm.ndbm"]], "dbm.dumb \u2014 Portable DBM implementation": [[181, "module-dbm.dumb"]], "Debugging and Profiling": [[182, "debugging-and-profiling"]], "decimal \u2014 Decimal fixed point and floating point arithmetic": [[183, "module-decimal"]], "Quick-start Tutorial": [[183, "quick-start-tutorial"]], "Decimal objects": [[183, "decimal-objects"]], "Logical operands": [[183, "logical-operands"]], "Context objects": [[183, "context-objects"]], "Rounding modes": [[183, "rounding-modes"]], "Signals": [[183, "signals"]], "Floating Point Notes": [[183, "floating-point-notes"]], "Mitigating round-off error with increased precision": [[183, "mitigating-round-off-error-with-increased-precision"]], "Special values": [[183, "special-values"]], "Working with threads": [[183, "working-with-threads"]], "Recipes": [[183, "recipes"], [315, "recipes"]], "Decimal FAQ": [[183, "decimal-faq"]], "Development Tools": [[184, "development-tools"]], "Python Development Mode": [[185, "python-development-mode"]], "Effects of the Python Development Mode": [[185, "effects-of-the-python-development-mode"]], "ResourceWarning Example": [[185, "resourcewarning-example"]], "Bad file descriptor error example": [[185, "bad-file-descriptor-error-example"]], "Tkinter Dialogs": [[186, "tkinter-dialogs"]], "tkinter.simpledialog \u2014 Standard Tkinter input dialogs": [[186, "module-tkinter.simpledialog"]], "tkinter.filedialog \u2014 File selection dialogs": [[186, "module-tkinter.filedialog"]], "Native Load/Save Dialogs": [[186, "native-load-save-dialogs"]], "tkinter.commondialog \u2014 Dialog window templates": [[186, "module-tkinter.commondialog"]], "difflib \u2014 Helpers for computing deltas": [[187, "module-difflib"]], "SequenceMatcher Objects": [[187, "sequencematcher-objects"]], "SequenceMatcher Examples": [[187, "sequencematcher-examples"]], "Differ Objects": [[187, "differ-objects"]], "Differ Example": [[187, "differ-example"]], "A command-line interface to difflib": [[187, "a-command-line-interface-to-difflib"]], "ndiff example": [[187, "ndiff-example"]], "dis \u2014 Disassembler for Python bytecode": [[188, "module-dis"]], "Command-line interface": [[188, "command-line-interface"], [337, "command-line-interface"]], "Bytecode analysis": [[188, "bytecode-analysis"]], "Analysis functions": [[188, "analysis-functions"]], "Python Bytecode Instructions": [[188, "python-bytecode-instructions"]], "Opcode collections": [[188, "opcode-collections"]], "Software Packaging and Distribution": [[189, "software-packaging-and-distribution"]], "doctest \u2014 Test interactive Python examples": [[190, "module-doctest"]], "Simple Usage: Checking Examples in Docstrings": [[190, "simple-usage-checking-examples-in-docstrings"]], "Simple Usage: Checking Examples in a Text File": [[190, "simple-usage-checking-examples-in-a-text-file"]], "How It Works": [[190, "how-it-works"]], "Which Docstrings Are Examined?": [[190, "which-docstrings-are-examined"]], "How are Docstring Examples Recognized?": [[190, "how-are-docstring-examples-recognized"]], "What\u2019s the Execution Context?": [[190, "what-s-the-execution-context"]], "What About Exceptions?": [[190, "what-about-exceptions"]], "Option Flags": [[190, "option-flags"]], "Directives": [[190, "directives"]], "Warnings": [[190, "warnings"], [210, "warnings"]], "Basic API": [[190, "basic-api"]], "Unittest API": [[190, "unittest-api"]], "Advanced API": [[190, "advanced-api"]], "DocTest Objects": [[190, "doctest-objects"]], "Example Objects": [[190, "example-objects"]], "DocTestFinder objects": [[190, "doctestfinder-objects"]], "DocTestParser objects": [[190, "doctestparser-objects"]], "DocTestRunner objects": [[190, "doctestrunner-objects"]], "OutputChecker objects": [[190, "outputchecker-objects"]], "Debugging": [[190, "debugging"]], "Soapbox": [[190, "soapbox"]], "email \u2014 An email and MIME handling package": [[191, "module-email"]], "email.charset: Representing character sets": [[192, "module-email.charset"]], "email.message.Message: Representing an email message using the compat32 API": [[193, "email-message-message-representing-an-email-message-using-the-compat32-api"]], "email.contentmanager: Managing MIME Content": [[194, "module-email.contentmanager"]], "Content Manager Instances": [[194, "content-manager-instances"]], "email.encoders: Encoders": [[195, "module-email.encoders"]], "email.errors: Exception and Defect classes": [[196, "module-email.errors"]], "email: Examples": [[197, "email-examples"]], "email.generator: Generating MIME documents": [[198, "module-email.generator"]], "email.header: Internationalized headers": [[199, "module-email.header"]], "email.headerregistry: Custom Header Objects": [[200, "module-email.headerregistry"]], "email.iterators: Iterators": [[201, "module-email.iterators"]], "email.message: Representing an email message": [[202, "module-email.message"]], "email.mime: Creating email and MIME objects from scratch": [[203, "module-email.mime"]], "email.parser: Parsing email messages": [[204, "module-email.parser"]], "FeedParser API": [[204, "feedparser-api"]], "Parser API": [[204, "parser-api"]], "Additional notes": [[204, "additional-notes"]], "email.policy: Policy Objects": [[205, "module-email.policy"]], "email.utils: Miscellaneous utilities": [[206, "module-email.utils"]], "ensurepip \u2014 Bootstrapping the pip installer": [[207, "module-ensurepip"]], "Command line interface": [[207, "command-line-interface"]], "Module API": [[207, "module-api"]], "enum \u2014 Support for enumerations": [[208, "module-enum"]], "Important": [[208, null], [264, "index-0"], [265, null], [266, null]], "Utilities and Decorators": [[208, "utilities-and-decorators"]], "Notes": [[208, "notes"], [345, "notes"]], "errno \u2014 Standard errno system symbols": [[209, "module-errno"]], "Built-in Exceptions": [[210, "built-in-exceptions"]], "Exception context": [[210, "exception-context"]], "Inheriting from built-in exceptions": [[210, "inheriting-from-built-in-exceptions"]], "Base classes": [[210, "base-classes"]], "Concrete exceptions": [[210, "concrete-exceptions"]], "OS exceptions": [[210, "os-exceptions"]], "Exception groups": [[210, "exception-groups"]], "Exception hierarchy": [[210, "exception-hierarchy"]], "faulthandler \u2014 Dump the Python traceback": [[211, "module-faulthandler"]], "Dumping the traceback": [[211, "dumping-the-traceback"]], "Fault handler state": [[211, "fault-handler-state"]], "Dumping the tracebacks after a timeout": [[211, "dumping-the-tracebacks-after-a-timeout"]], "Dumping the traceback on a user signal": [[211, "dumping-the-traceback-on-a-user-signal"]], "Issue with file descriptors": [[211, "issue-with-file-descriptors"]], "fcntl \u2014 The fcntl and ioctl system calls": [[212, "module-fcntl"]], "filecmp \u2014 File and Directory Comparisons": [[213, "module-filecmp"]], "The dircmp class": [[213, "the-dircmp-class"]], "File Formats": [[214, "file-formats"]], "fileinput \u2014 Iterate over lines from multiple input streams": [[215, "module-fileinput"]], "File and Directory Access": [[216, "file-and-directory-access"]], "fnmatch \u2014 Unix filename pattern matching": [[217, "module-fnmatch"]], "fractions \u2014 Rational numbers": [[218, "module-fractions"]], "Program Frameworks": [[219, "program-frameworks"]], "ftplib \u2014 FTP protocol client": [[220, "module-ftplib"]], "Reference": [[220, "reference"], [280, "reference"], [337, "reference"], [410, "reference"], [410, "id4"]], "FTP objects": [[220, "ftp-objects"]], "FTP_TLS objects": [[220, "ftp-tls-objects"]], "Module variables": [[220, "module-variables"]], "Functional Programming Modules": [[221, "functional-programming-modules"]], "Built-in Functions": [[222, "built-in-functions"]], "functools \u2014 Higher-order functions and operations on callable objects": [[223, "module-functools"]], "partial Objects": [[223, "partial-objects"]], "gc \u2014 Garbage Collector interface": [[224, "module-gc"]], "getopt \u2014 C-style parser for command line options": [[225, "module-getopt"]], "getpass \u2014 Portable password input": [[226, "module-getpass"]], "gettext \u2014 Multilingual internationalization services": [[227, "module-gettext"]], "GNU gettext API": [[227, "gnu-gettext-api"]], "Class-based API": [[227, "class-based-api"]], "The NullTranslations class": [[227, "the-nulltranslations-class"]], "The GNUTranslations class": [[227, "the-gnutranslations-class"]], "Solaris message catalog support": [[227, "solaris-message-catalog-support"]], "The Catalog constructor": [[227, "the-catalog-constructor"]], "Internationalizing your programs and modules": [[227, "internationalizing-your-programs-and-modules"]], "Localizing your module": [[227, "localizing-your-module"]], "Localizing your application": [[227, "localizing-your-application"]], "Changing languages on the fly": [[227, "changing-languages-on-the-fly"]], "Deferred translations": [[227, "deferred-translations"]], "glob \u2014 Unix style pathname pattern expansion": [[228, "module-glob"]], "graphlib \u2014 Functionality to operate with graph-like structures": [[229, "module-graphlib"]], "grp \u2014 The group database": [[230, "module-grp"]], "gzip \u2014 Support for gzip files": [[231, "module-gzip"]], "Command Line Interface": [[231, "command-line-interface"], [252, "command-line-interface"], [259, "module-json.tool"], [331, "command-line-interface"]], "Command line options": [[231, "command-line-options"], [259, "command-line-options"], [297, "command-line-options"]], "hashlib \u2014 Secure hashes and message digests": [[232, "module-hashlib"]], "Hash algorithms": [[232, "hash-algorithms"]], "Usage": [[232, "usage"]], "Constructors": [[232, "constructors"]], "Attributes": [[232, "attributes"], [285, "attributes"]], "Hash Objects": [[232, "hash-objects"]], "SHAKE variable length digests": [[232, "shake-variable-length-digests"]], "File hashing": [[232, "file-hashing"]], "Key derivation": [[232, "key-derivation"]], "BLAKE2": [[232, "blake2"]], "Creating hash objects": [[232, "creating-hash-objects"]], "Simple hashing": [[232, "simple-hashing"]], "Using different digest sizes": [[232, "using-different-digest-sizes"]], "Keyed hashing": [[232, "keyed-hashing"]], "Randomized hashing": [[232, "randomized-hashing"]], "Personalization": [[232, "personalization"]], "Tree mode": [[232, "tree-mode"]], "Credits": [[232, "credits"]], "heapq \u2014 Heap queue algorithm": [[233, "module-heapq"]], "Basic Examples": [[233, "basic-examples"], [364, "basic-examples"]], "Priority Queue Implementation Notes": [[233, "priority-queue-implementation-notes"]], "Theory": [[233, "theory"]], "hmac \u2014 Keyed-Hashing for Message Authentication": [[234, "module-hmac"]], "html \u2014 HyperText Markup Language support": [[235, "module-html"]], "html.entities \u2014 Definitions of HTML general entities": [[236, "module-html.entities"]], "html.parser \u2014 Simple HTML and XHTML parser": [[237, "module-html.parser"]], "Example HTML Parser Application": [[237, "example-html-parser-application"]], "HTMLParser Methods": [[237, "htmlparser-methods"]], "http \u2014 HTTP modules": [[238, "module-http"]], "HTTP status codes": [[238, "http-status-codes"]], "HTTP status category": [[238, "http-status-category"]], "HTTP methods": [[238, "http-methods"]], "http.client \u2014 HTTP protocol client": [[239, "module-http.client"]], "HTTPConnection Objects": [[239, "httpconnection-objects"]], "HTTPResponse Objects": [[239, "httpresponse-objects"]], "HTTPMessage Objects": [[239, "httpmessage-objects"]], "http.cookiejar \u2014 Cookie handling for HTTP clients": [[240, "module-http.cookiejar"]], "CookieJar and FileCookieJar Objects": [[240, "cookiejar-and-filecookiejar-objects"]], "FileCookieJar subclasses and co-operation with web browsers": [[240, "filecookiejar-subclasses-and-co-operation-with-web-browsers"]], "CookiePolicy Objects": [[240, "cookiepolicy-objects"]], "DefaultCookiePolicy Objects": [[240, "defaultcookiepolicy-objects"]], "Cookie Objects": [[240, "cookie-objects"], [241, "cookie-objects"]], "http.cookies \u2014 HTTP state management": [[241, "module-http.cookies"]], "Morsel Objects": [[241, "morsel-objects"]], "http.server \u2014 HTTP servers": [[242, "module-http.server"]], "Internationalization": [[243, "internationalization"]], "IDLE": [[244, "idle"], [468, "idle"], [472, "idle"]], "Menus": [[244, "menus"]], "File menu (Shell and Editor)": [[244, "file-menu-shell-and-editor"]], "Edit menu (Shell and Editor)": [[244, "edit-menu-shell-and-editor"]], "Format menu (Editor window only)": [[244, "format-menu-editor-window-only"]], "Run menu (Editor window only)": [[244, "run-menu-editor-window-only"]], "Shell menu (Shell window only)": [[244, "shell-menu-shell-window-only"]], "Debug menu (Shell window only)": [[244, "debug-menu-shell-window-only"]], "Options menu (Shell and Editor)": [[244, "options-menu-shell-and-editor"]], "Window menu (Shell and Editor)": [[244, "window-menu-shell-and-editor"]], "Help menu (Shell and Editor)": [[244, "help-menu-shell-and-editor"]], "Context menus": [[244, "context-menus"]], "Editing and Navigation": [[244, "editing-and-navigation"]], "Editor windows": [[244, "editor-windows"]], "Key bindings": [[244, "key-bindings"]], "Automatic indentation": [[244, "automatic-indentation"]], "Completions": [[244, "completions"]], "Calltips": [[244, "calltips"]], "Code Context": [[244, "code-context"]], "Shell window": [[244, "shell-window"]], "Text colors": [[244, "text-colors"]], "Startup and Code Execution": [[244, "startup-and-code-execution"]], "Command line usage": [[244, "command-line-usage"], [297, "command-line-usage"]], "Startup failure": [[244, "startup-failure"]], "Running user code": [[244, "running-user-code"]], "User output in Shell": [[244, "user-output-in-shell"]], "Developing tkinter applications": [[244, "developing-tkinter-applications"]], "Running without a subprocess": [[244, "running-without-a-subprocess"]], "Help and Preferences": [[244, "help-and-preferences"]], "Help sources": [[244, "help-sources"]], "Setting preferences": [[244, "setting-preferences"]], "IDLE on macOS": [[244, "idle-on-macos"]], "Extensions": [[244, "extensions"]], "idlelib": [[244, "module-idlelib"]], "imaplib \u2014 IMAP4 protocol client": [[245, "module-imaplib"]], "IMAP4 Objects": [[245, "imap4-objects"]], "IMAP4 Example": [[245, "imap4-example"]], "imghdr \u2014 Determine the type of an image": [[246, "module-imghdr"]], "importlib \u2014 The implementation of import": [[247, "module-importlib"]], "importlib.abc \u2013 Abstract base classes related to import": [[247, "module-importlib.abc"]], "importlib.machinery \u2013 Importers and path hooks": [[247, "module-importlib.machinery"]], "importlib.util \u2013 Utility code for importers": [[247, "module-importlib.util"]], "Importing programmatically": [[247, "importing-programmatically"]], "Checking if a module can be imported": [[247, "checking-if-a-module-can-be-imported"]], "Importing a source file directly": [[247, "importing-a-source-file-directly"]], "Implementing lazy imports": [[247, "implementing-lazy-imports"]], "Setting up an importer": [[247, "setting-up-an-importer"]], "Approximating importlib.import_module()": [[247, "approximating-importlib-import-module"]], "importlib.metadata \u2013 Accessing package metadata": [[248, "module-importlib.metadata"]], "Entry points": [[248, "entry-points"]], "Distribution metadata": [[248, "distribution-metadata"]], "Distribution versions": [[248, "distribution-versions"]], "Distribution files": [[248, "distribution-files"]], "Distribution requirements": [[248, "distribution-requirements"]], "Mapping import to distribution packages": [[248, "mapping-import-to-distribution-packages"]], "Distributions": [[248, "distributions"]], "Distribution Discovery": [[248, "distribution-discovery"]], "Extending the search algorithm": [[248, "extending-the-search-algorithm"]], "importlib.resources \u2013 Package resource reading, opening and access": [[249, "module-importlib.resources"]], "Deprecated functions": [[249, "deprecated-functions"]], "importlib.resources.abc \u2013 Abstract base classes for resources": [[250, "module-importlib.resources.abc"]], "The Python Standard Library": [[251, "the-python-standard-library"]], "inspect \u2014 Inspect live objects": [[252, "inspect-inspect-live-objects"]], "Types and members": [[252, "types-and-members"]], "Retrieving source code": [[252, "retrieving-source-code"]], "Introspecting callables with the Signature object": [[252, "introspecting-callables-with-the-signature-object"]], "Classes and functions": [[252, "classes-and-functions"], [385, "classes-and-functions"]], "The interpreter stack": [[252, "the-interpreter-stack"]], "Fetching attributes statically": [[252, "fetching-attributes-statically"]], "Current State of Generators, Coroutines, and Asynchronous Generators": [[252, "current-state-of-generators-coroutines-and-asynchronous-generators"]], "Code Objects Bit Flags": [[252, "code-objects-bit-flags"]], "Buffer flags": [[252, "buffer-flags"]], "Internet Protocols and Support": [[253, "internet-protocols-and-support"]], "Notes on availability": [[254, "notes-on-availability"]], "WebAssembly platforms": [[254, "webassembly-platforms"]], "io \u2014 Core tools for working with streams": [[255, "module-io"]], "Text I/O": [[255, "text-i-o"], [255, "id1"], [255, "id3"]], "Binary I/O": [[255, "binary-i-o"], [255, "id2"]], "Raw I/O": [[255, "raw-i-o"]], "Text Encoding": [[255, "text-encoding"]], "Opt-in EncodingWarning": [[255, "opt-in-encodingwarning"]], "High-level Module Interface": [[255, "high-level-module-interface"]], "Class hierarchy": [[255, "class-hierarchy"]], "I/O Base Classes": [[255, "i-o-base-classes"]], "Raw File I/O": [[255, "raw-file-i-o"]], "Buffered Streams": [[255, "buffered-streams"]], "Multi-threading": [[255, "multi-threading"], [449, "multi-threading"], [472, "multi-threading"]], "Reentrancy": [[255, "reentrancy"]], "ipaddress \u2014 IPv4/IPv6 manipulation library": [[256, "module-ipaddress"]], "Convenience factory functions": [[256, "convenience-factory-functions"]], "IP Addresses": [[256, "ip-addresses"]], "Address objects": [[256, "address-objects"]], "Conversion to Strings and Integers": [[256, "conversion-to-strings-and-integers"]], "Operators": [[256, "operators"], [256, "id1"], [256, "id2"], [293, "operators"], [432, "operators"]], "Comparison operators": [[256, "comparison-operators"]], "Arithmetic operators": [[256, "arithmetic-operators"]], "IP Network definitions": [[256, "ip-network-definitions"]], "Prefix, net mask and host mask": [[256, "prefix-net-mask-and-host-mask"]], "Network objects": [[256, "network-objects"]], "Logical operators": [[256, "logical-operators"], [256, "id3"]], "Networks as containers of addresses": [[256, "networks-as-containers-of-addresses"]], "Interface objects": [[256, "interface-objects"]], "Other Module Level Functions": [[256, "other-module-level-functions"]], "Custom Exceptions": [[256, "custom-exceptions"]], "Networking and Interprocess Communication": [[257, "networking-and-interprocess-communication"]], "itertools \u2014 Functions creating iterators for efficient looping": [[258, "module-itertools"]], "Itertool functions": [[258, "itertool-functions"]], "Itertools Recipes": [[258, "itertools-recipes"]], "json \u2014 JSON encoder and decoder": [[259, "module-json"]], "Basic Usage": [[259, "basic-usage"]], "Encoders and Decoders": [[259, "encoders-and-decoders"]], "Standard Compliance and Interoperability": [[259, "standard-compliance-and-interoperability"]], "Character Encodings": [[259, "character-encodings"]], "Infinite and NaN Number Values": [[259, "infinite-and-nan-number-values"]], "Repeated Names Within an Object": [[259, "repeated-names-within-an-object"]], "Top-level Non-Object, Non-Array Values": [[259, "top-level-non-object-non-array-values"]], "Implementation Limitations": [[259, "implementation-limitations"]], "keyword \u2014 Testing for Python keywords": [[260, "module-keyword"]], "Python Language Services": [[261, "python-language-services"]], "linecache \u2014 Random access to text lines": [[262, "module-linecache"]], "locale \u2014 Internationalization services": [[263, "module-locale"]], "Background, details, hints, tips and caveats": [[263, "background-details-hints-tips-and-caveats"]], "For extension writers and programs that embed Python": [[263, "for-extension-writers-and-programs-that-embed-python"]], "Access to message catalogs": [[263, "access-to-message-catalogs"]], "logging \u2014 Logging facility for Python": [[264, "module-logging"]], "Logger Objects": [[264, "logger-objects"]], "Handler Objects": [[264, "handler-objects"]], "Formatter Objects": [[264, "formatter-objects"]], "Filter Objects": [[264, "filter-objects"]], "LogRecord Objects": [[264, "logrecord-objects"]], "LogRecord attributes": [[264, "logrecord-attributes"]], "LoggerAdapter Objects": [[264, "loggeradapter-objects"]], "Thread Safety": [[264, "thread-safety"]], "Module-Level Attributes": [[264, "module-level-attributes"]], "Integration with the warnings module": [[264, "integration-with-the-warnings-module"]], "logging.config \u2014 Logging configuration": [[265, "module-logging.config"]], "Configuration functions": [[265, "configuration-functions"]], "Security considerations": [[265, "security-considerations"], [338, "security-considerations"]], "Configuration dictionary schema": [[265, "configuration-dictionary-schema"]], "Dictionary Schema Details": [[265, "dictionary-schema-details"]], "Incremental Configuration": [[265, "incremental-configuration"]], "Object connections": [[265, "object-connections"]], "User-defined objects": [[265, "user-defined-objects"]], "Handler configuration order": [[265, "handler-configuration-order"]], "Access to external objects": [[265, "access-to-external-objects"]], "Access to internal objects": [[265, "access-to-internal-objects"]], "Import resolution and custom importers": [[265, "import-resolution-and-custom-importers"]], "Configuring QueueHandler and QueueListener": [[265, "configuring-queuehandler-and-queuelistener"]], "Configuration file format": [[265, "configuration-file-format"]], "logging.handlers \u2014 Logging handlers": [[266, "module-logging.handlers"]], "StreamHandler": [[266, "streamhandler"]], "FileHandler": [[266, "filehandler"]], "NullHandler": [[266, "nullhandler"]], "WatchedFileHandler": [[266, "watchedfilehandler"]], "BaseRotatingHandler": [[266, "baserotatinghandler"]], "RotatingFileHandler": [[266, "rotatingfilehandler"]], "TimedRotatingFileHandler": [[266, "timedrotatingfilehandler"]], "SocketHandler": [[266, "sockethandler"]], "DatagramHandler": [[266, "datagramhandler"]], "SysLogHandler": [[266, "sysloghandler"]], "NTEventLogHandler": [[266, "nteventloghandler"]], "SMTPHandler": [[266, "smtphandler"]], "MemoryHandler": [[266, "memoryhandler"]], "HTTPHandler": [[266, "httphandler"]], "QueueHandler": [[266, "queuehandler"]], "QueueListener": [[266, "queuelistener"]], "lzma \u2014 Compression using the LZMA algorithm": [[267, "module-lzma"]], "Reading and writing compressed files": [[267, "reading-and-writing-compressed-files"]], "Compressing and decompressing data in memory": [[267, "compressing-and-decompressing-data-in-memory"]], "Miscellaneous": [[267, "miscellaneous"], [280, "miscellaneous"], [457, "miscellaneous"]], "Specifying custom filter chains": [[267, "specifying-custom-filter-chains"]], "mailbox \u2014 Manipulate mailboxes in various formats": [[268, "module-mailbox"]], "Mailbox objects": [[268, "mailbox-objects"]], "Maildir objects": [[268, "maildir-objects"]], "mbox objects": [[268, "mbox-objects"]], "MH objects": [[268, "mh-objects"]], "Babyl objects": [[268, "babyl-objects"]], "MMDF objects": [[268, "mmdf-objects"]], "Message objects": [[268, "message-objects"]], "MaildirMessage objects": [[268, "maildirmessage-objects"]], "mboxMessage objects": [[268, "mboxmessage-objects"]], "MHMessage objects": [[268, "mhmessage-objects"]], "BabylMessage objects": [[268, "babylmessage-objects"]], "MMDFMessage objects": [[268, "mmdfmessage-objects"]], "mailcap \u2014 Mailcap file handling": [[269, "module-mailcap"]], "Structured Markup Processing Tools": [[270, "structured-markup-processing-tools"]], "marshal \u2014 Internal Python object serialization": [[271, "module-marshal"]], "math \u2014 Mathematical functions": [[272, "module-math"]], "Number-theoretic and representation functions": [[272, "number-theoretic-and-representation-functions"]], "Angular conversion": [[272, "angular-conversion"]], "Special functions": [[272, "special-functions"]], "mimetypes \u2014 Map filenames to MIME types": [[273, "module-mimetypes"]], "MimeTypes Objects": [[273, "mimetypes-objects"]], "Multimedia Services": [[274, "multimedia-services"]], "mmap \u2014 Memory-mapped file support": [[275, "module-mmap"]], "MADV_* Constants": [[275, "madv-constants"]], "MAP_* Constants": [[275, "map-constants"]], "modulefinder \u2014 Find modules used by a script": [[276, "module-modulefinder"]], "Example usage of ModuleFinder": [[276, "example-usage-of-modulefinder"]], "msilib \u2014 Read and write Microsoft Installer files": [[278, "module-msilib"]], "Database Objects": [[278, "database-objects"]], "View Objects": [[278, "view-objects"]], "Summary Information Objects": [[278, "summary-information-objects"]], "Record Objects": [[278, "record-objects"]], "Errors": [[278, "errors"]], "CAB Objects": [[278, "cab-objects"]], "Directory Objects": [[278, "directory-objects"]], "Features": [[278, "features"], [473, "features"], [473, "id1"]], "GUI classes": [[278, "gui-classes"]], "Precomputed tables": [[278, "precomputed-tables"]], "msvcrt \u2014 Useful routines from the MS VC++ runtime": [[279, "module-msvcrt"]], "File Operations": [[279, "file-operations"]], "Console I/O": [[279, "console-i-o"]], "Other Functions": [[279, "other-functions"]], "multiprocessing \u2014 Process-based parallelism": [[280, "module-multiprocessing"]], "The Process class": [[280, "the-process-class"]], "Contexts and start methods": [[280, "contexts-and-start-methods"]], "Exchanging objects between processes": [[280, "exchanging-objects-between-processes"]], "Synchronization between processes": [[280, "synchronization-between-processes"]], "Sharing state between processes": [[280, "sharing-state-between-processes"]], "Using a pool of workers": [[280, "using-a-pool-of-workers"]], "Process and exceptions": [[280, "process-and-exceptions"]], "Pipes and Queues": [[280, "pipes-and-queues"]], "Connection Objects": [[280, "connection-objects"]], "Synchronization primitives": [[280, "synchronization-primitives"]], "Shared ctypes Objects": [[280, "shared-ctypes-objects"]], "The multiprocessing.sharedctypes module": [[280, "module-multiprocessing.sharedctypes"]], "Managers": [[280, "managers"]], "Customized managers": [[280, "customized-managers"]], "Using a remote manager": [[280, "using-a-remote-manager"]], "Proxy Objects": [[280, "proxy-objects"]], "Cleanup": [[280, "cleanup"], [289, "cleanup"]], "Process Pools": [[280, "module-multiprocessing.pool"]], "Listeners and Clients": [[280, "module-multiprocessing.connection"]], "Address Formats": [[280, "address-formats"]], "Authentication keys": [[280, "authentication-keys"]], "The multiprocessing.dummy module": [[280, "module-multiprocessing.dummy"]], "Programming guidelines": [[280, "programming-guidelines"]], "All start methods": [[280, "all-start-methods"]], "The spawn and forkserver start methods": [[280, "the-spawn-and-forkserver-start-methods"]], "multiprocessing.shared_memory \u2014 Shared memory for direct access across processes": [[281, "module-multiprocessing.shared_memory"]], "Internet Data Handling": [[282, "internet-data-handling"]], "netrc \u2014 netrc file processing": [[283, "module-netrc"]], "netrc Objects": [[283, "netrc-objects"]], "nis \u2014 Interface to Sun\u2019s NIS (Yellow Pages)": [[284, "module-nis"]], "nntplib \u2014 NNTP protocol client": [[285, "module-nntplib"]], "NNTP Objects": [[285, "nntp-objects"]], "numbers \u2014 Numeric abstract base classes": [[286, "module-numbers"]], "The numeric tower": [[286, "the-numeric-tower"]], "Notes for type implementors": [[286, "notes-for-type-implementors"]], "Adding More Numeric ABCs": [[286, "adding-more-numeric-abcs"]], "Implementing the arithmetic operations": [[286, "implementing-the-arithmetic-operations"]], "Numeric and Mathematical Modules": [[287, "numeric-and-mathematical-modules"]], "operator \u2014 Standard operators as functions": [[288, "module-operator"]], "Mapping Operators to Functions": [[288, "mapping-operators-to-functions"]], "In-place Operators": [[288, "in-place-operators"]], "optparse \u2014 Parser for command line options": [[289, "module-optparse"]], "Terminology": [[289, "terminology"]], "What are options for?": [[289, "what-are-options-for"]], "What are positional arguments for?": [[289, "what-are-positional-arguments-for"]], "Understanding option actions": [[289, "understanding-option-actions"]], "The store action": [[289, "the-store-action"]], "Handling boolean (flag) options": [[289, "handling-boolean-flag-options"]], "Other actions": [[289, "other-actions"]], "Default values": [[289, "default-values"]], "Generating help": [[289, "generating-help"]], "Grouping Options": [[289, "grouping-options"]], "Printing a version string": [[289, "printing-a-version-string"]], "How optparse handles errors": [[289, "how-optparse-handles-errors"]], "Putting it all together": [[289, "putting-it-all-together"]], "Reference Guide": [[289, "reference-guide"]], "Creating the parser": [[289, "creating-the-parser"]], "Populating the parser": [[289, "populating-the-parser"]], "Defining options": [[289, "defining-options"]], "Option attributes": [[289, "option-attributes"]], "Standard option actions": [[289, "standard-option-actions"]], "Standard option types": [[289, "standard-option-types"]], "Querying and manipulating your option parser": [[289, "querying-and-manipulating-your-option-parser"]], "Conflicts between options": [[289, "conflicts-between-options"]], "Other methods": [[289, "other-methods"]], "Option Callbacks": [[289, "option-callbacks"]], "Defining a callback option": [[289, "defining-a-callback-option"]], "How callbacks are called": [[289, "how-callbacks-are-called"]], "Raising errors in a callback": [[289, "raising-errors-in-a-callback"]], "Callback example 1: trivial callback": [[289, "callback-example-1-trivial-callback"]], "Callback example 2: check option order": [[289, "callback-example-2-check-option-order"]], "Callback example 3: check option order (generalized)": [[289, "callback-example-3-check-option-order-generalized"]], "Callback example 4: check arbitrary condition": [[289, "callback-example-4-check-arbitrary-condition"]], "Callback example 5: fixed arguments": [[289, "callback-example-5-fixed-arguments"]], "Callback example 6: variable arguments": [[289, "callback-example-6-variable-arguments"]], "Extending optparse": [[289, "extending-optparse"]], "Adding new types": [[289, "adding-new-types"]], "Adding new actions": [[289, "adding-new-actions"]], "os \u2014 Miscellaneous operating system interfaces": [[290, "module-os"]], "File Names, Command Line Arguments, and Environment Variables": [[290, "file-names-command-line-arguments-and-environment-variables"]], "Python UTF-8 Mode": [[290, "python-utf-8-mode"]], "Process Parameters": [[290, "process-parameters"]], "File Object Creation": [[290, "file-object-creation"]], "File Descriptor Operations": [[290, "file-descriptor-operations"]], "Querying the size of a terminal": [[290, "querying-the-size-of-a-terminal"]], "Inheritance of File Descriptors": [[290, "inheritance-of-file-descriptors"]], "Files and Directories": [[290, "files-and-directories"]], "Linux extended attributes": [[290, "linux-extended-attributes"]], "Process Management": [[290, "process-management"]], "Interface to the scheduler": [[290, "interface-to-the-scheduler"]], "Miscellaneous System Information": [[290, "miscellaneous-system-information"]], "Random numbers": [[290, "random-numbers"], [323, "random-numbers"]], "os.path \u2014 Common pathname manipulations": [[291, "module-os.path"]], "ossaudiodev \u2014 Access to OSS-compatible audio devices": [[292, "module-ossaudiodev"]], "Audio Device Objects": [[292, "audio-device-objects"]], "Mixer Device Objects": [[292, "mixer-device-objects"]], "pathlib \u2014 Object-oriented filesystem paths": [[293, "module-pathlib"]], "Basic use": [[293, "basic-use"]], "Pure paths": [[293, "pure-paths"]], "General properties": [[293, "general-properties"]], "Accessing individual parts": [[293, "accessing-individual-parts"]], "Methods and properties": [[293, "methods-and-properties"]], "Concrete paths": [[293, "concrete-paths"]], "Correspondence to tools in the os module": [[293, "correspondence-to-tools-in-the-os-module"]], "pdb \u2014 The Python Debugger": [[294, "module-pdb"]], "Debugger Commands": [[294, "debugger-commands"]], "Data Persistence": [[295, "data-persistence"]], "pickle \u2014 Python object serialization": [[296, "module-pickle"]], "Relationship to other Python modules": [[296, "relationship-to-other-python-modules"]], "Comparison with marshal": [[296, "comparison-with-marshal"]], "Comparison with json": [[296, "comparison-with-json"]], "Data stream format": [[296, "data-stream-format"]], "Module Interface": [[296, "module-interface"]], "What can be pickled and unpickled?": [[296, "what-can-be-pickled-and-unpickled"]], "Pickling Class Instances": [[296, "pickling-class-instances"]], "Persistence of External Objects": [[296, "persistence-of-external-objects"]], "Dispatch Tables": [[296, "dispatch-tables"]], "Handling Stateful Objects": [[296, "handling-stateful-objects"]], "Custom Reduction for Types, Functions, and Other Objects": [[296, "custom-reduction-for-types-functions-and-other-objects"]], "Out-of-band Buffers": [[296, "out-of-band-buffers"]], "Provider API": [[296, "provider-api"]], "Consumer API": [[296, "consumer-api"]], "Restricting Globals": [[296, "restricting-globals"]], "pickletools \u2014 Tools for pickle developers": [[297, "module-pickletools"]], "Programmatic Interface": [[297, "programmatic-interface"], [377, "programmatic-interface"]], "pipes \u2014 Interface to shell pipelines": [[298, "module-pipes"]], "Template Objects": [[298, "template-objects"]], "pkgutil \u2014 Package extension utility": [[299, "module-pkgutil"]], "platform \u2014  Access to underlying platform\u2019s identifying data": [[300, "module-platform"]], "Cross Platform": [[300, "cross-platform"]], "Java Platform": [[300, "java-platform"]], "Windows Platform": [[300, "windows-platform"]], "macOS Platform": [[300, "macos-platform"]], "Unix Platforms": [[300, "unix-platforms"]], "Linux Platforms": [[300, "linux-platforms"]], "plistlib \u2014 Generate and parse Apple .plist files": [[301, "module-plistlib"]], "poplib \u2014 POP3 protocol client": [[302, "module-poplib"]], "POP3 Objects": [[302, "pop3-objects"]], "POP3 Example": [[302, "pop3-example"]], "posix \u2014 The most common POSIX system calls": [[303, "module-posix"]], "Large File Support": [[303, "large-file-support"]], "Notable Module Contents": [[303, "notable-module-contents"]], "pprint \u2014 Data pretty printer": [[304, "module-pprint"]], "PrettyPrinter Objects": [[304, "prettyprinter-objects"]], "The Python Profilers": [[305, "the-python-profilers"]], "Introduction to the profilers": [[305, "introduction-to-the-profilers"]], "Instant User\u2019s Manual": [[305, "instant-user-s-manual"]], "profile and cProfile Module Reference": [[305, "module-cProfile"]], "The Stats Class": [[305, "the-stats-class"]], "What Is Deterministic Profiling?": [[305, "what-is-deterministic-profiling"]], "Limitations": [[305, "limitations"]], "Calibration": [[305, "calibration"]], "Using a custom timer": [[305, "using-a-custom-timer"]], "pty \u2014 Pseudo-terminal utilities": [[306, "module-pty"]], "pwd \u2014 The password database": [[307, "module-pwd"]], "py_compile \u2014 Compile Python source files": [[308, "module-py_compile"]], "Command-Line Interface": [[308, "command-line-interface"], [355, "command-line-interface"], [364, "command-line-interface"], [385, "command-line-interface"], [418, "command-line-interface"], [419, "command-line-interface"]], "pyclbr \u2014 Python module browser support": [[309, "module-pyclbr"]], "Class Objects": [[309, "class-objects"], [437, "class-objects"]], "pydoc \u2014 Documentation generator and online help system": [[310, "module-pydoc"]], "xml.parsers.expat \u2014 Fast XML parsing using Expat": [[311, "module-xml.parsers.expat"]], "XMLParser Objects": [[311, "xmlparser-objects"], [410, "xmlparser-objects"]], "ExpatError Exceptions": [[311, "expaterror-exceptions"]], "Content Model Descriptions": [[311, "module-xml.parsers.expat.model"]], "Expat error constants": [[311, "module-xml.parsers.expat.errors"]], "Python Runtime Services": [[312, "python-runtime-services"]], "queue \u2014 A synchronized queue class": [[313, "module-queue"]], "Queue Objects": [[313, "queue-objects"]], "SimpleQueue Objects": [[313, "simplequeue-objects"]], "quopri \u2014 Encode and decode MIME quoted-printable data": [[314, "module-quopri"]], "random \u2014 Generate pseudo-random numbers": [[315, "module-random"]], "Bookkeeping functions": [[315, "bookkeeping-functions"]], "Functions for bytes": [[315, "functions-for-bytes"]], "Functions for integers": [[315, "functions-for-integers"]], "Functions for sequences": [[315, "functions-for-sequences"]], "Discrete distributions": [[315, "discrete-distributions"]], "Real-valued distributions": [[315, "real-valued-distributions"]], "Alternative Generator": [[315, "alternative-generator"]], "Notes on Reproducibility": [[315, "notes-on-reproducibility"]], "re \u2014 Regular expression operations": [[316, "module-re"]], "Regular Expression Syntax": [[316, "regular-expression-syntax"]], "Flags": [[316, "flags"]], "Regular Expression Objects": [[316, "regular-expression-objects"]], "Match Objects": [[316, "match-objects"]], "Regular Expression Examples": [[316, "regular-expression-examples"]], "Checking for a Pair": [[316, "checking-for-a-pair"]], "Simulating scanf()": [[316, "simulating-scanf"]], "search() vs. match()": [[316, "search-vs-match"]], "Making a Phonebook": [[316, "making-a-phonebook"]], "Text Munging": [[316, "text-munging"]], "Finding all Adverbs": [[316, "finding-all-adverbs"]], "Finding all Adverbs and their Positions": [[316, "finding-all-adverbs-and-their-positions"]], "Raw String Notation": [[316, "raw-string-notation"]], "Writing a Tokenizer": [[316, "writing-a-tokenizer"]], "readline \u2014 GNU readline interface": [[317, "module-readline"]], "Init file": [[317, "init-file"]], "Line buffer": [[317, "line-buffer"]], "History file": [[317, "history-file"]], "History list": [[317, "history-list"]], "Startup hooks": [[317, "startup-hooks"]], "Completion": [[317, "completion"]], "reprlib \u2014 Alternate repr() implementation": [[318, "module-reprlib"]], "Repr Objects": [[318, "repr-objects"]], "Subclassing Repr Objects": [[318, "subclassing-repr-objects"]], "resource \u2014 Resource usage information": [[319, "module-resource"]], "Resource Limits": [[319, "resource-limits"]], "Resource Usage": [[319, "resource-usage"]], "rlcompleter \u2014 Completion function for GNU readline": [[320, "module-rlcompleter"]], "runpy \u2014 Locating and executing Python modules": [[321, "module-runpy"]], "sched \u2014 Event scheduler": [[322, "module-sched"]], "Scheduler Objects": [[322, "scheduler-objects"]], "secrets \u2014 Generate secure random numbers for managing secrets": [[323, "module-secrets"]], "Generating tokens": [[323, "generating-tokens"]], "How many bytes should tokens use?": [[323, "how-many-bytes-should-tokens-use"]], "Other functions": [[323, "other-functions"], [334, "other-functions"], [352, "other-functions"]], "Recipes and best practices": [[323, "recipes-and-best-practices"]], "select \u2014 Waiting for I/O completion": [[325, "module-select"]], "/dev/poll Polling Objects": [[325, "dev-poll-polling-objects"]], "Edge and Level Trigger Polling (epoll) Objects": [[325, "edge-and-level-trigger-polling-epoll-objects"]], "Polling Objects": [[325, "polling-objects"]], "Kqueue Objects": [[325, "kqueue-objects"]], "Kevent Objects": [[325, "kevent-objects"]], "selectors \u2014 High-level I/O multiplexing": [[326, "module-selectors"]], "Classes": [[326, "classes"], [344, "classes"], [425, "classes"], [437, "classes"]], "shelve \u2014 Python object persistence": [[327, "module-shelve"]], "Restrictions": [[327, "restrictions"]], "shlex \u2014 Simple lexical analysis": [[328, "module-shlex"]], "shlex Objects": [[328, "shlex-objects"]], "Parsing Rules": [[328, "parsing-rules"]], "Improved Compatibility with Shells": [[328, "improved-compatibility-with-shells"]], "shutil \u2014 High-level file operations": [[329, "module-shutil"]], "Directory and files operations": [[329, "directory-and-files-operations"]], "Platform-dependent efficient copy operations": [[329, "platform-dependent-efficient-copy-operations"]], "copytree example": [[329, "copytree-example"]], "rmtree example": [[329, "rmtree-example"]], "Archiving operations": [[329, "archiving-operations"]], "Archiving example": [[329, "archiving-example"]], "Archiving example with base_dir": [[329, "archiving-example-with-base-dir"]], "Querying the size of the output terminal": [[329, "querying-the-size-of-the-output-terminal"]], "signal \u2014 Set handlers for asynchronous events": [[330, "module-signal"]], "General rules": [[330, "general-rules"]], "Execution of Python signal handlers": [[330, "execution-of-python-signal-handlers"]], "Signals and threads": [[330, "signals-and-threads"]], "Note on SIGPIPE": [[330, "note-on-sigpipe"]], "Note on Signal Handlers and Exceptions": [[330, "note-on-signal-handlers-and-exceptions"]], "site \u2014 Site-specific configuration hook": [[331, "module-site"]], "sitecustomize": [[331, "module-sitecustomize"]], "usercustomize": [[331, "module-usercustomize"]], "Readline configuration": [[331, "readline-configuration"]], "smtplib \u2014 SMTP protocol client": [[332, "module-smtplib"]], "SMTP Objects": [[332, "smtp-objects"]], "SMTP Example": [[332, "smtp-example"]], "sndhdr \u2014 Determine type of sound file": [[333, "module-sndhdr"]], "socket \u2014 Low-level networking interface": [[334, "module-socket"]], "Socket families": [[334, "socket-families"]], "Creating sockets": [[334, "creating-sockets"]], "Socket Objects": [[334, "socket-objects"]], "Notes on socket timeouts": [[334, "notes-on-socket-timeouts"]], "Timeouts and the connect method": [[334, "timeouts-and-the-connect-method"]], "Timeouts and the accept method": [[334, "timeouts-and-the-accept-method"]], "socketserver \u2014 A framework for network servers": [[335, "module-socketserver"]], "Server Creation Notes": [[335, "server-creation-notes"]], "Request Handler Objects": [[335, "request-handler-objects"]], "socketserver.TCPServer Example": [[335, "socketserver-tcpserver-example"]], "socketserver.UDPServer Example": [[335, "socketserver-udpserver-example"]], "Asynchronous Mixins": [[335, "asynchronous-mixins"]], "spwd \u2014 The shadow password database": [[336, "module-spwd"]], "sqlite3 \u2014 DB-API 2.0 interface for SQLite databases": [[337, "module-sqlite3"]], "Module functions": [[337, "module-functions"]], "Module constants": [[337, "module-constants"]], "Connection objects": [[337, "connection-objects"]], "Cursor objects": [[337, "cursor-objects"]], "Row objects": [[337, "row-objects"]], "Blob objects": [[337, "blob-objects"]], "PrepareProtocol objects": [[337, "prepareprotocol-objects"]], "SQLite and Python types": [[337, "sqlite-and-python-types"]], "Default adapters and converters (deprecated)": [[337, "default-adapters-and-converters-deprecated"]], "How-to guides": [[337, "how-to-guides"]], "How to use placeholders to bind values in SQL queries": [[337, "how-to-use-placeholders-to-bind-values-in-sql-queries"]], "How to adapt custom Python types to SQLite values": [[337, "how-to-adapt-custom-python-types-to-sqlite-values"]], "How to write adaptable objects": [[337, "how-to-write-adaptable-objects"]], "How to register adapter callables": [[337, "how-to-register-adapter-callables"]], "How to convert SQLite values to custom Python types": [[337, "how-to-convert-sqlite-values-to-custom-python-types"]], "Adapter and converter recipes": [[337, "adapter-and-converter-recipes"]], "How to use connection shortcut methods": [[337, "how-to-use-connection-shortcut-methods"]], "How to use the connection context manager": [[337, "how-to-use-the-connection-context-manager"]], "How to work with SQLite URIs": [[337, "how-to-work-with-sqlite-uris"]], "How to create and use row factories": [[337, "how-to-create-and-use-row-factories"]], "How to handle non-UTF-8 text encodings": [[337, "how-to-handle-non-utf-8-text-encodings"]], "Explanation": [[337, "explanation"], [381, "explanation"]], "Transaction control": [[337, "transaction-control"]], "Transaction control via the autocommit attribute": [[337, "transaction-control-via-the-autocommit-attribute"]], "Transaction control via the isolation_level attribute": [[337, "transaction-control-via-the-isolation-level-attribute"]], "ssl \u2014 TLS/SSL wrapper for socket objects": [[338, "module-ssl"]], "Functions, Constants, and Exceptions": [[338, "functions-constants-and-exceptions"]], "Socket creation": [[338, "socket-creation"]], "Context creation": [[338, "context-creation"]], "Random generation": [[338, "random-generation"]], "Certificate handling": [[338, "certificate-handling"]], "SSL Sockets": [[338, "ssl-sockets"]], "SSL Contexts": [[338, "ssl-contexts"]], "Certificates": [[338, "certificates"]], "Certificate chains": [[338, "certificate-chains"]], "CA certificates": [[338, "ca-certificates"]], "Combined key and certificate": [[338, "combined-key-and-certificate"]], "Self-signed certificates": [[338, "self-signed-certificates"]], "Testing for SSL support": [[338, "testing-for-ssl-support"]], "Client-side operation": [[338, "client-side-operation"]], "Server-side operation": [[338, "server-side-operation"]], "Notes on non-blocking sockets": [[338, "notes-on-non-blocking-sockets"]], "Memory BIO Support": [[338, "memory-bio-support"], [475, "memory-bio-support"]], "SSL session": [[338, "ssl-session"]], "Best defaults": [[338, "best-defaults"]], "Manual settings": [[338, "manual-settings"]], "Verifying certificates": [[338, "verifying-certificates"]], "Protocol versions": [[338, "protocol-versions"]], "Cipher selection": [[338, "cipher-selection"]], "Multi-processing": [[338, "multi-processing"]], "TLS 1.3": [[338, "tls-1-3"]], "stat \u2014 Interpreting stat() results": [[339, "module-stat"]], "statistics \u2014 Mathematical statistics functions": [[340, "module-statistics"]], "Averages and measures of central location": [[340, "averages-and-measures-of-central-location"]], "Measures of spread": [[340, "measures-of-spread"]], "Statistics for relations between two inputs": [[340, "statistics-for-relations-between-two-inputs"]], "Function details": [[340, "function-details"]], "NormalDist objects": [[340, "normaldist-objects"]], "NormalDist Examples and Recipes": [[340, "normaldist-examples-and-recipes"]], "Classic probability problems": [[340, "classic-probability-problems"]], "Monte Carlo inputs for simulations": [[340, "monte-carlo-inputs-for-simulations"]], "Approximating binomial distributions": [[340, "approximating-binomial-distributions"]], "Naive bayesian classifier": [[340, "naive-bayesian-classifier"]], "Kernel density estimation": [[340, "kernel-density-estimation"]], "Built-in Types": [[341, "built-in-types"]], "Truth Value Testing": [[341, "truth-value-testing"]], "Boolean Operations \u2014 and, or, not": [[341, "boolean-operations-and-or-not"]], "Numeric Types \u2014 int, float, complex": [[341, "numeric-types-int-float-complex"]], "Bitwise Operations on Integer Types": [[341, "bitwise-operations-on-integer-types"]], "Additional Methods on Integer Types": [[341, "additional-methods-on-integer-types"]], "Additional Methods on Float": [[341, "additional-methods-on-float"]], "Hashing of numeric types": [[341, "hashing-of-numeric-types"]], "Boolean Type - bool": [[341, "boolean-type-bool"]], "Iterator Types": [[341, "iterator-types"]], "Generator Types": [[341, "generator-types"]], "Sequence Types \u2014 list, tuple, range": [[341, "sequence-types-list-tuple-range"]], "Common Sequence Operations": [[341, "common-sequence-operations"]], "Immutable Sequence Types": [[341, "immutable-sequence-types"]], "Mutable Sequence Types": [[341, "mutable-sequence-types"]], "Lists": [[341, "lists"], [446, "lists"]], "Tuples": [[341, "tuples"]], "Ranges": [[341, "ranges"]], "Text Sequence Type \u2014 str": [[341, "text-sequence-type-str"]], "String Methods": [[341, "string-methods"], [459, "string-methods"]], "printf-style String Formatting": [[341, "printf-style-string-formatting"]], "Binary Sequence Types \u2014 bytes, bytearray, memoryview": [[341, "binary-sequence-types-bytes-bytearray-memoryview"]], "Bytearray Objects": [[341, "bytearray-objects"]], "Bytes and Bytearray Operations": [[341, "bytes-and-bytearray-operations"]], "printf-style Bytes Formatting": [[341, "printf-style-bytes-formatting"]], "Memory Views": [[341, "memory-views"]], "Set Types \u2014 set, frozenset": [[341, "set-types-set-frozenset"]], "Mapping Types \u2014 dict": [[341, "mapping-types-dict"]], "Dictionary view objects": [[341, "dictionary-view-objects"]], "Context Manager Types": [[341, "context-manager-types"]], "Type Annotation Types \u2014 Generic Alias, Union": [[341, "type-annotation-types-generic-alias-union"]], "Generic Alias Type": [[341, "generic-alias-type"]], "Standard Generic Classes": [[341, "standard-generic-classes"]], "Special Attributes of GenericAlias objects": [[341, "special-attributes-of-genericalias-objects"]], "Union Type": [[341, "union-type"]], "Other Built-in Types": [[341, "other-built-in-types"]], "Classes and Class Instances": [[341, "classes-and-class-instances"]], "The Null Object": [[341, "the-null-object"]], "The Ellipsis Object": [[341, "the-ellipsis-object"]], "The NotImplemented Object": [[341, "the-notimplemented-object"]], "Internal Objects": [[341, "internal-objects"]], "Special Attributes": [[341, "special-attributes"]], "Integer string conversion length limitation": [[341, "integer-string-conversion-length-limitation"]], "Affected APIs": [[341, "affected-apis"]], "Configuring the limit": [[341, "configuring-the-limit"]], "Recommended configuration": [[341, "recommended-configuration"]], "string \u2014 Common string operations": [[342, "module-string"]], "String constants": [[342, "string-constants"]], "Custom String Formatting": [[342, "custom-string-formatting"]], "Format String Syntax": [[342, "format-string-syntax"]], "Format Specification Mini-Language": [[342, "format-specification-mini-language"]], "Format examples": [[342, "format-examples"]], "Template strings": [[342, "template-strings"]], "Helper functions": [[342, "helper-functions"]], "stringprep \u2014 Internet String Preparation": [[343, "module-stringprep"]], "struct \u2014 Interpret bytes as packed binary data": [[344, "module-struct"]], "Functions and Exceptions": [[344, "functions-and-exceptions"]], "Format Strings": [[344, "format-strings"]], "Byte Order, Size, and Alignment": [[344, "byte-order-size-and-alignment"]], "Format Characters": [[344, "format-characters"]], "Applications": [[344, "applications"]], "Native Formats": [[344, "native-formats"]], "Standard Formats": [[344, "standard-formats"]], "subprocess \u2014 Subprocess management": [[345, "module-subprocess"]], "Using the subprocess Module": [[345, "using-the-subprocess-module"]], "Frequently Used Arguments": [[345, "frequently-used-arguments"]], "Popen Constructor": [[345, "popen-constructor"]], "Popen Objects": [[345, "popen-objects"]], "Windows Popen Helpers": [[345, "windows-popen-helpers"]], "Windows Constants": [[345, "windows-constants"]], "Older high-level API": [[345, "older-high-level-api"]], "Replacing Older Functions with the subprocess Module": [[345, "replacing-older-functions-with-the-subprocess-module"]], "Replacing /bin/sh shell command substitution": [[345, "replacing-bin-sh-shell-command-substitution"]], "Replacing shell pipeline": [[345, "replacing-shell-pipeline"]], "Replacing os.system()": [[345, "replacing-os-system"]], "Replacing the os.spawn family": [[345, "replacing-the-os-spawn-family"]], "Replacing os.popen(), os.popen2(), os.popen3()": [[345, "replacing-os-popen-os-popen2-os-popen3"]], "Replacing functions from the popen2 module": [[345, "replacing-functions-from-the-popen2-module"]], "Legacy Shell Invocation Functions": [[345, "legacy-shell-invocation-functions"]], "Converting an argument sequence to a string on Windows": [[345, "converting-an-argument-sequence-to-a-string-on-windows"]], "Disabling use of vfork() or posix_spawn()": [[345, "disabling-use-of-vfork-or-posix-spawn"]], "sunau \u2014 Read and write Sun AU files": [[346, "module-sunau"]], "AU_read Objects": [[346, "au-read-objects"]], "AU_write Objects": [[346, "au-write-objects"]], "Superseded Modules": [[347, "superseded-modules"]], "symtable \u2014 Access to the compiler\u2019s symbol tables": [[348, "module-symtable"]], "Generating Symbol Tables": [[348, "generating-symbol-tables"]], "Examining Symbol Tables": [[348, "examining-symbol-tables"]], "sys \u2014 System-specific parameters and functions": [[349, "module-sys"]], "Attributes of the float_info named tuple": [[349, "id2"]], "sys.monitoring \u2014 Execution event monitoring": [[350, "module-sys.monitoring"]], "Tool identifiers": [[350, "tool-identifiers"]], "Registering and using tools": [[350, "registering-and-using-tools"]], "Events": [[350, "events"]], "Local events": [[350, "local-events"]], "Ancillary events": [[350, "ancillary-events"]], "Other events": [[350, "other-events"]], "The STOP_ITERATION event": [[350, "the-stop-iteration-event"]], "Turning events on and off": [[350, "turning-events-on-and-off"]], "Setting events globally": [[350, "setting-events-globally"]], "Per code object events": [[350, "per-code-object-events"]], "Disabling events": [[350, "disabling-events"]], "Registering callback functions": [[350, "registering-callback-functions"]], "Callback function arguments": [[350, "callback-function-arguments"]], "The initialization of the sys.path module search path": [[351, "the-initialization-of-the-sys-path-module-search-path"]], "Virtual environments": [[351, "virtual-environments"], [458, "virtual-environments"]], "_pth files": [[351, "pth-files"]], "Embedded Python": [[351, "embedded-python"]], "sysconfig \u2014 Provide access to Python\u2019s configuration information": [[352, "module-sysconfig"]], "Configuration variables": [[352, "configuration-variables"]], "Installation paths": [[352, "installation-paths"]], "User scheme": [[352, "user-scheme"]], "posix_user": [[352, "posix-user"]], "nt_user": [[352, "nt-user"]], "osx_framework_user": [[352, "osx-framework-user"]], "Home scheme": [[352, "home-scheme"]], "posix_home": [[352, "posix-home"]], "Prefix scheme": [[352, "prefix-scheme"]], "posix_prefix": [[352, "posix-prefix"]], "nt": [[352, "nt"]], "Installation path functions": [[352, "installation-path-functions"]], "Using sysconfig as a script": [[352, "using-sysconfig-as-a-script"]], "syslog \u2014 Unix syslog library routines": [[353, "module-syslog"]], "Simple example": [[353, "simple-example"]], "tabnanny \u2014 Detection of ambiguous indentation": [[354, "module-tabnanny"]], "tarfile \u2014 Read and write tar archive files": [[355, "module-tarfile"]], "TarFile Objects": [[355, "tarfile-objects"]], "TarInfo Objects": [[355, "tarinfo-objects"]], "Extraction filters": [[355, "extraction-filters"]], "Default named filters": [[355, "default-named-filters"]], "Filter errors": [[355, "filter-errors"]], "Hints for further verification": [[355, "hints-for-further-verification"]], "Supporting older Python versions": [[355, "supporting-older-python-versions"]], "Stateful extraction filter example": [[355, "stateful-extraction-filter-example"]], "Command-line options": [[355, "command-line-options"], [385, "command-line-options"], [419, "command-line-options"]], "Supported tar formats": [[355, "supported-tar-formats"]], "Unicode issues": [[355, "unicode-issues"]], "telnetlib \u2014 Telnet client": [[356, "module-telnetlib"]], "Telnet Objects": [[356, "telnet-objects"]], "Telnet Example": [[356, "telnet-example"]], "tempfile \u2014 Generate temporary files and directories": [[357, "module-tempfile"]], "Deprecated functions and variables": [[357, "deprecated-functions-and-variables"]], "termios \u2014 POSIX style tty control": [[358, "module-termios"]], "test \u2014 Regression tests package for Python": [[359, "module-test"]], "Writing Unit Tests for the test package": [[359, "writing-unit-tests-for-the-test-package"]], "Running tests using the command-line interface": [[359, "module-test.regrtest"]], "test.support \u2014 Utilities for the Python test suite": [[359, "module-test.support"]], "test.support.socket_helper \u2014 Utilities for socket tests": [[359, "module-test.support.socket_helper"]], "test.support.script_helper \u2014 Utilities for the Python execution tests": [[359, "module-test.support.script_helper"]], "test.support.bytecode_helper \u2014 Support tools for testing correct bytecode generation": [[359, "module-test.support.bytecode_helper"]], "test.support.threading_helper \u2014 Utilities for threading tests": [[359, "module-test.support.threading_helper"]], "test.support.os_helper \u2014 Utilities for os tests": [[359, "module-test.support.os_helper"]], "test.support.import_helper \u2014 Utilities for import tests": [[359, "module-test.support.import_helper"]], "test.support.warnings_helper \u2014 Utilities for warnings tests": [[359, "module-test.support.warnings_helper"]], "Text Processing Services": [[360, "text-processing-services"]], "textwrap \u2014 Text wrapping and filling": [[361, "module-textwrap"]], "threading \u2014 Thread-based parallelism": [[362, "module-threading"]], "Thread-Local Data": [[362, "thread-local-data"]], "Thread Objects": [[362, "thread-objects"]], "Lock Objects": [[362, "lock-objects"]], "RLock Objects": [[362, "rlock-objects"]], "Condition Objects": [[362, "condition-objects"]], "Semaphore Objects": [[362, "semaphore-objects"]], "Semaphore Example": [[362, "semaphore-example"]], "Event Objects": [[362, "event-objects"]], "Timer Objects": [[362, "timer-objects"]], "Barrier Objects": [[362, "barrier-objects"]], "Using locks, conditions, and semaphores in the with statement": [[362, "using-locks-conditions-and-semaphores-in-the-with-statement"]], "time \u2014 Time access and conversions": [[363, "module-time"]], "Clock ID Constants": [[363, "clock-id-constants"]], "Timezone Constants": [[363, "timezone-constants"]], "timeit \u2014 Measure execution time of small code snippets": [[364, "module-timeit"]], "Python Interface": [[364, "python-interface"]], "Graphical User Interfaces with Tk": [[365, "graphical-user-interfaces-with-tk"]], "tkinter \u2014 Python interface to Tcl/Tk": [[366, "module-tkinter"]], "Architecture": [[366, "architecture"]], "Tkinter Modules": [[366, "tkinter-modules"]], "Tkinter Life Preserver": [[366, "tkinter-life-preserver"]], "A Hello World Program": [[366, "a-hello-world-program"]], "Important Tk Concepts": [[366, "important-tk-concepts"]], "Understanding How Tkinter Wraps Tcl/Tk": [[366, "understanding-how-tkinter-wraps-tcl-tk"]], "How do I\u2026? What option does\u2026?": [[366, "how-do-i-what-option-does"]], "Navigating the Tcl/Tk Reference Manual": [[366, "navigating-the-tcl-tk-reference-manual"]], "Threading model": [[366, "threading-model"]], "Handy Reference": [[366, "handy-reference"]], "Setting Options": [[366, "setting-options"]], "The Packer": [[366, "the-packer"]], "Packer Options": [[366, "packer-options"]], "Coupling Widget Variables": [[366, "coupling-widget-variables"]], "The Window Manager": [[366, "the-window-manager"]], "Tk Option Data Types": [[366, "tk-option-data-types"]], "Bindings and Events": [[366, "bindings-and-events"]], "The index Parameter": [[366, "the-index-parameter"]], "Images": [[366, "images"]], "File Handlers": [[366, "file-handlers"]], "tkinter.colorchooser \u2014 Color choosing dialog": [[367, "module-tkinter.colorchooser"]], "tkinter.dnd \u2014 Drag and drop support": [[368, "module-tkinter.dnd"]], "tkinter.font \u2014 Tkinter font wrapper": [[369, "module-tkinter.font"]], "tkinter.messagebox \u2014 Tkinter message prompts": [[370, "module-tkinter.messagebox"]], "tkinter.scrolledtext \u2014 Scrolled Text Widget": [[371, "module-tkinter.scrolledtext"]], "tkinter.tix \u2014 Extension widgets for Tk": [[372, "module-tkinter.tix"]], "Using Tix": [[372, "using-tix"]], "Tix Widgets": [[372, "tix-widgets"]], "Basic Widgets": [[372, "basic-widgets"]], "File Selectors": [[372, "file-selectors"]], "Hierarchical ListBox": [[372, "hierarchical-listbox"]], "Tabular ListBox": [[372, "tabular-listbox"]], "Manager Widgets": [[372, "manager-widgets"]], "Image Types": [[372, "image-types"]], "Miscellaneous Widgets": [[372, "miscellaneous-widgets"]], "Form Geometry Manager": [[372, "form-geometry-manager"]], "Tix Commands": [[372, "tix-commands"]], "tkinter.ttk \u2014 Tk themed widgets": [[373, "module-tkinter.ttk"]], "Using Ttk": [[373, "using-ttk"]], "Ttk Widgets": [[373, "ttk-widgets"]], "Widget": [[373, "widget"]], "Standard Options": [[373, "standard-options"]], "Scrollable Widget Options": [[373, "scrollable-widget-options"]], "Label Options": [[373, "label-options"]], "Compatibility Options": [[373, "compatibility-options"]], "Widget States": [[373, "widget-states"]], "ttk.Widget": [[373, "ttk-widget"]], "Combobox": [[373, "combobox"]], "Options": [[373, "options"], [373, "id1"], [373, "id3"], [373, "id5"], [373, "id6"], [373, "id7"]], "Virtual events": [[373, "virtual-events"], [373, "id2"]], "ttk.Combobox": [[373, "ttk-combobox"]], "Spinbox": [[373, "spinbox"]], "ttk.Spinbox": [[373, "ttk-spinbox"]], "Notebook": [[373, "notebook"]], "Tab Options": [[373, "tab-options"]], "Tab Identifiers": [[373, "tab-identifiers"]], "Virtual Events": [[373, "id4"], [373, "id8"]], "ttk.Notebook": [[373, "ttk-notebook"]], "Progressbar": [[373, "progressbar"]], "ttk.Progressbar": [[373, "ttk-progressbar"]], "Separator": [[373, "separator"]], "Sizegrip": [[373, "sizegrip"]], "Platform-specific notes": [[373, "platform-specific-notes"]], "Bugs": [[373, "bugs"]], "Treeview": [[373, "treeview"]], "Item Options": [[373, "item-options"]], "Tag Options": [[373, "tag-options"]], "Column Identifiers": [[373, "column-identifiers"]], "ttk.Treeview": [[373, "ttk-treeview"]], "Ttk Styling": [[373, "ttk-styling"]], "Layouts": [[373, "layouts"]], "token \u2014 Constants used with Python parse trees": [[374, "module-token"]], "tokenize \u2014 Tokenizer for Python source": [[375, "module-tokenize"]], "Tokenizing Input": [[375, "tokenizing-input"]], "tomllib \u2014 Parse TOML files": [[376, "module-tomllib"]], "Conversion Table": [[376, "conversion-table"]], "trace \u2014 Trace or track Python statement execution": [[377, "module-trace"]], "Main options": [[377, "main-options"]], "Modifiers": [[377, "modifiers"]], "Filters": [[377, "filters"]], "traceback \u2014 Print or retrieve a stack traceback": [[378, "module-traceback"]], "TracebackException Objects": [[378, "tracebackexception-objects"]], "StackSummary Objects": [[378, "stacksummary-objects"]], "FrameSummary Objects": [[378, "framesummary-objects"]], "Traceback Examples": [[378, "traceback-examples"]], "tracemalloc \u2014 Trace memory allocations": [[379, "module-tracemalloc"]], "Display the top 10": [[379, "display-the-top-10"]], "Compute differences": [[379, "compute-differences"]], "Get the traceback of a memory block": [[379, "get-the-traceback-of-a-memory-block"]], "Pretty top": [[379, "pretty-top"]], "Record the current and peak size of all traced memory blocks": [[379, "record-the-current-and-peak-size-of-all-traced-memory-blocks"]], "API": [[379, "api"], [396, "api"]], "DomainFilter": [[379, "domainfilter"]], "Filter": [[379, "filter"]], "Frame": [[379, "frame"]], "Snapshot": [[379, "snapshot"]], "Statistic": [[379, "statistic"]], "StatisticDiff": [[379, "statisticdiff"]], "Trace": [[379, "trace"]], "Traceback": [[379, "traceback"]], "tty \u2014 Terminal control functions": [[380, "module-tty"]], "turtle \u2014 Turtle graphics": [[381, "module-turtle"]], "Turtle star": [[381, null]], "Starting a turtle environment": [[381, "starting-a-turtle-environment"]], "Basic drawing": [[381, "basic-drawing"]], "Pen control": [[381, "pen-control"], [381, "id1"]], "The turtle\u2019s position": [[381, "the-turtle-s-position"]], "Making algorithmic patterns": [[381, "making-algorithmic-patterns"]], "How to\u2026": [[381, "how-to"]], "Get started as quickly as possible": [[381, "get-started-as-quickly-as-possible"]], "Use the turtle module namespace": [[381, "use-the-turtle-module-namespace"]], "Use turtle graphics in a script": [[381, "use-turtle-graphics-in-a-script"]], "Use object-oriented turtle graphics": [[381, "use-object-oriented-turtle-graphics"]], "Turtle graphics reference": [[381, "turtle-graphics-reference"]], "Turtle methods": [[381, "turtle-methods"]], "Methods of TurtleScreen/Screen": [[381, "methods-of-turtlescreen-screen"]], "Methods of RawTurtle/Turtle and corresponding functions": [[381, "methods-of-rawturtle-turtle-and-corresponding-functions"]], "Turtle motion": [[381, "turtle-motion"]], "Tell Turtle\u2019s state": [[381, "tell-turtle-s-state"]], "Settings for measurement": [[381, "settings-for-measurement"]], "Drawing state": [[381, "drawing-state"]], "Color control": [[381, "color-control"]], "Filling": [[381, "filling"]], "More drawing control": [[381, "more-drawing-control"]], "Turtle state": [[381, "turtle-state"]], "Visibility": [[381, "visibility"]], "Appearance": [[381, "appearance"]], "Using events": [[381, "using-events"]], "Special Turtle methods": [[381, "special-turtle-methods"]], "Compound shapes": [[381, "compound-shapes"]], "Methods of TurtleScreen/Screen and corresponding functions": [[381, "methods-of-turtlescreen-screen-and-corresponding-functions"]], "Window control": [[381, "window-control"]], "Animation control": [[381, "animation-control"]], "Using screen events": [[381, "using-screen-events"]], "Input methods": [[381, "input-methods"]], "Settings and special methods": [[381, "settings-and-special-methods"]], "Methods specific to Screen, not inherited from TurtleScreen": [[381, "methods-specific-to-screen-not-inherited-from-turtlescreen"]], "Public classes": [[381, "public-classes"]], "Help and configuration": [[381, "help-and-configuration"]], "How to use help": [[381, "how-to-use-help"]], "Translation of docstrings into different languages": [[381, "translation-of-docstrings-into-different-languages"]], "How to configure Screen and Turtles": [[381, "how-to-configure-screen-and-turtles"]], "turtledemo \u2014 Demo scripts": [[381, "module-turtledemo"]], "Changes since Python 2.6": [[381, "changes-since-python-2-6"]], "Changes since Python 3.0": [[381, "changes-since-python-3-0"]], "types \u2014 Dynamic type creation and names for built-in types": [[382, "module-types"]], "Dynamic Type Creation": [[382, "dynamic-type-creation"]], "Standard Interpreter Types": [[382, "standard-interpreter-types"]], "Additional Utility Classes and Functions": [[382, "additional-utility-classes-and-functions"]], "Coroutine Utility Functions": [[382, "coroutine-utility-functions"]], "typing \u2014 Support for type hints": [[383, "typing-support-for-type-hints"]], "Relevant PEPs": [[383, "relevant-peps"]], "Type aliases": [[383, "type-aliases"]], "NewType": [[383, "newtype"]], "Annotating callable objects": [[383, "annotating-callable-objects"]], "Generics": [[383, "generics"]], "Annotating tuples": [[383, "annotating-tuples"]], "The type of class objects": [[383, "the-type-of-class-objects"]], "User-defined generic types": [[383, "user-defined-generic-types"]], "The Any type": [[383, "the-any-type"]], "Nominal vs structural subtyping": [[383, "nominal-vs-structural-subtyping"]], "Special typing primitives": [[383, "special-typing-primitives"]], "Special types": [[383, "special-types"]], "Special forms": [[383, "special-forms"]], "Building generic types and type aliases": [[383, "building-generic-types-and-type-aliases"]], "Other special directives": [[383, "other-special-directives"]], "ABCs for working with IO": [[383, "abcs-for-working-with-io"]], "Functions and decorators": [[383, "functions-and-decorators"]], "Recognised parameters for field specifiers": [[383, "id7"]], "Introspection helpers": [[383, "introspection-helpers"]], "Constant": [[383, "constant"]], "Deprecated aliases": [[383, "deprecated-aliases"]], "Aliases to built-in types": [[383, "aliases-to-built-in-types"]], "Aliases to types in collections": [[383, "aliases-to-types-in-collections"]], "Aliases to other concrete types": [[383, "aliases-to-other-concrete-types"]], "Aliases to container ABCs in collections.abc": [[383, "aliases-to-container-abcs-in-collections-abc"]], "Aliases to asynchronous ABCs in collections.abc": [[383, "aliases-to-asynchronous-abcs-in-collections-abc"]], "Aliases to other ABCs in collections.abc": [[383, "aliases-to-other-abcs-in-collections-abc"]], "Aliases to contextlib ABCs": [[383, "aliases-to-contextlib-abcs"]], "Deprecation Timeline of Major Features": [[383, "deprecation-timeline-of-major-features"]], "unicodedata \u2014 Unicode Database": [[384, "module-unicodedata"]], "unittest \u2014 Unit testing framework": [[385, "module-unittest"]], "Basic example": [[385, "basic-example"]], "Test Discovery": [[385, "test-discovery"]], "Organizing test code": [[385, "organizing-test-code"]], "Re-using old test code": [[385, "re-using-old-test-code"]], "Skipping tests and expected failures": [[385, "skipping-tests-and-expected-failures"]], "Distinguishing test iterations using subtests": [[385, "distinguishing-test-iterations-using-subtests"]], "Test cases": [[385, "test-cases"]], "Grouping tests": [[385, "grouping-tests"]], "Loading and running tests": [[385, "loading-and-running-tests"]], "load_tests Protocol": [[385, "load-tests-protocol"]], "Class and Module Fixtures": [[385, "class-and-module-fixtures"]], "setUpClass and tearDownClass": [[385, "setupclass-and-teardownclass"]], "setUpModule and tearDownModule": [[385, "setupmodule-and-teardownmodule"]], "unittest.mock \u2014 mock object library": [[386, "module-unittest.mock"]], "Quick Guide": [[386, "quick-guide"]], "The Mock Class": [[386, "the-mock-class"]], "Calling": [[386, "calling"]], "Deleting Attributes": [[386, "deleting-attributes"]], "Mock names and the name attribute": [[386, "mock-names-and-the-name-attribute"]], "Attaching Mocks as Attributes": [[386, "attaching-mocks-as-attributes"]], "The patchers": [[386, "the-patchers"]], "patch": [[386, "patch"]], "patch.object": [[386, "patch-object"]], "patch.dict": [[386, "patch-dict"]], "patch.multiple": [[386, "patch-multiple"]], "patch methods: start and stop": [[386, "patch-methods-start-and-stop"]], "patch builtins": [[386, "patch-builtins"]], "TEST_PREFIX": [[386, "test-prefix"]], "Nesting Patch Decorators": [[386, "nesting-patch-decorators"]], "Where to patch": [[386, "where-to-patch"]], "Patching Descriptors and Proxy Objects": [[386, "patching-descriptors-and-proxy-objects"]], "MagicMock and magic method support": [[386, "magicmock-and-magic-method-support"]], "Mocking Magic Methods": [[386, "mocking-magic-methods"]], "Magic Mock": [[386, "magic-mock"]], "Helpers": [[386, "helpers"]], "sentinel": [[386, "sentinel"]], "DEFAULT": [[386, "default"]], "call": [[386, "call"]], "create_autospec": [[386, "create-autospec"]], "ANY": [[386, "any"]], "FILTER_DIR": [[386, "filter-dir"]], "mock_open": [[386, "mock-open"]], "Autospeccing": [[386, "autospeccing"]], "Sealing mocks": [[386, "sealing-mocks"]], "unittest.mock \u2014 getting started": [[387, "unittest-mock-getting-started"]], "Using Mock": [[387, "using-mock"]], "Mock Patching Methods": [[387, "mock-patching-methods"]], "Mock for Method Calls on an Object": [[387, "mock-for-method-calls-on-an-object"]], "Mocking Classes": [[387, "mocking-classes"]], "Naming your mocks": [[387, "naming-your-mocks"]], "Tracking all Calls": [[387, "tracking-all-calls"]], "Setting Return Values and Attributes": [[387, "setting-return-values-and-attributes"]], "Raising exceptions with mocks": [[387, "raising-exceptions-with-mocks"]], "Side effect functions and iterables": [[387, "side-effect-functions-and-iterables"]], "Mocking asynchronous iterators": [[387, "mocking-asynchronous-iterators"]], "Mocking asynchronous context manager": [[387, "mocking-asynchronous-context-manager"]], "Creating a Mock from an Existing Object": [[387, "creating-a-mock-from-an-existing-object"]], "Using side_effect to return per file content": [[387, "using-side-effect-to-return-per-file-content"]], "Patch Decorators": [[387, "patch-decorators"]], "Further Examples": [[387, "further-examples"]], "Mocking chained calls": [[387, "mocking-chained-calls"]], "Partial mocking": [[387, "partial-mocking"]], "Mocking a Generator Method": [[387, "mocking-a-generator-method"]], "Applying the same patch to every test method": [[387, "applying-the-same-patch-to-every-test-method"]], "Mocking Unbound Methods": [[387, "mocking-unbound-methods"]], "Checking multiple calls with mock": [[387, "checking-multiple-calls-with-mock"]], "Coping with mutable arguments": [[387, "coping-with-mutable-arguments"]], "Nesting Patches": [[387, "nesting-patches"]], "Mocking a dictionary with MagicMock": [[387, "mocking-a-dictionary-with-magicmock"]], "Mock subclasses and their attributes": [[387, "mock-subclasses-and-their-attributes"]], "Mocking imports with patch.dict": [[387, "mocking-imports-with-patch-dict"]], "Tracking order of calls and less verbose call assertions": [[387, "tracking-order-of-calls-and-less-verbose-call-assertions"]], "More complex argument matching": [[387, "more-complex-argument-matching"]], "Unix Specific Services": [[388, "unix-specific-services"]], "urllib \u2014 URL handling modules": [[389, "module-urllib"]], "urllib.error \u2014 Exception classes raised by urllib.request": [[390, "module-urllib.error"]], "urllib.parse \u2014 Parse URLs into components": [[391, "module-urllib.parse"]], "URL Parsing": [[391, "url-parsing"]], "URL parsing security": [[391, "url-parsing-security"]], "Parsing ASCII Encoded Bytes": [[391, "parsing-ascii-encoded-bytes"]], "Structured Parse Results": [[391, "structured-parse-results"]], "URL Quoting": [[391, "url-quoting"]], "urllib.request \u2014 Extensible library for opening URLs": [[392, "module-urllib.request"]], "Request Objects": [[392, "request-objects"]], "OpenerDirector Objects": [[392, "openerdirector-objects"]], "BaseHandler Objects": [[392, "basehandler-objects"]], "HTTPRedirectHandler Objects": [[392, "httpredirecthandler-objects"]], "HTTPCookieProcessor Objects": [[392, "httpcookieprocessor-objects"]], "ProxyHandler Objects": [[392, "proxyhandler-objects"]], "HTTPPasswordMgr Objects": [[392, "httppasswordmgr-objects"]], "HTTPPasswordMgrWithPriorAuth Objects": [[392, "httppasswordmgrwithpriorauth-objects"]], "AbstractBasicAuthHandler Objects": [[392, "abstractbasicauthhandler-objects"]], "HTTPBasicAuthHandler Objects": [[392, "httpbasicauthhandler-objects"]], "ProxyBasicAuthHandler Objects": [[392, "proxybasicauthhandler-objects"]], "AbstractDigestAuthHandler Objects": [[392, "abstractdigestauthhandler-objects"]], "HTTPDigestAuthHandler Objects": [[392, "httpdigestauthhandler-objects"]], "ProxyDigestAuthHandler Objects": [[392, "proxydigestauthhandler-objects"]], "HTTPHandler Objects": [[392, "httphandler-objects"]], "HTTPSHandler Objects": [[392, "httpshandler-objects"]], "FileHandler Objects": [[392, "filehandler-objects"]], "DataHandler Objects": [[392, "datahandler-objects"]], "FTPHandler Objects": [[392, "ftphandler-objects"]], "CacheFTPHandler Objects": [[392, "cacheftphandler-objects"]], "UnknownHandler Objects": [[392, "unknownhandler-objects"]], "HTTPErrorProcessor Objects": [[392, "httperrorprocessor-objects"]], "Legacy interface": [[392, "legacy-interface"]], "urllib.request Restrictions": [[392, "urllib-request-restrictions"]], "urllib.response \u2014 Response classes used by urllib": [[392, "module-urllib.response"]], "urllib.robotparser \u2014  Parser for robots.txt": [[393, "module-urllib.robotparser"]], "uu \u2014 Encode and decode uuencode files": [[394, "module-uu"]], "uuid \u2014 UUID objects according to RFC 4122": [[395, "module-uuid"]], "Command-Line Example": [[395, "command-line-example"]], "venv \u2014 Creation of virtual environments": [[396, "module-venv"]], "Creating virtual environments": [[396, "creating-virtual-environments"]], "How venvs work": [[396, "how-venvs-work"]], "An example of extending EnvBuilder": [[396, "an-example-of-extending-envbuilder"]], "warnings \u2014 Warning control": [[397, "module-warnings"]], "Warning Categories": [[397, "warning-categories"]], "The Warnings Filter": [[397, "the-warnings-filter"]], "Describing Warning Filters": [[397, "describing-warning-filters"]], "Default Warning Filter": [[397, "default-warning-filter"]], "Overriding the default filter": [[397, "overriding-the-default-filter"]], "Temporarily Suppressing Warnings": [[397, "temporarily-suppressing-warnings"]], "Testing Warnings": [[397, "testing-warnings"]], "Updating Code For New Versions of Dependencies": [[397, "updating-code-for-new-versions-of-dependencies"]], "Available Functions": [[397, "available-functions"]], "Available Context Managers": [[397, "available-context-managers"]], "wave \u2014 Read and write WAV files": [[398, "module-wave"]], "Wave_read Objects": [[398, "wave-read-objects"]], "Wave_write Objects": [[398, "wave-write-objects"]], "weakref \u2014 Weak references": [[399, "module-weakref"]], "Finalizer Objects": [[399, "finalizer-objects"]], "Comparing finalizers with __del__() methods": [[399, "comparing-finalizers-with-del-methods"]], "webbrowser \u2014 Convenient web-browser controller": [[400, "module-webbrowser"]], "Browser Controller Objects": [[400, "browser-controller-objects"]], "MS Windows Specific Services": [[401, "ms-windows-specific-services"]], "winreg \u2014 Windows registry access": [[402, "module-winreg"]], "HKEY_* Constants": [[402, "hkey-constants"]], "Access Rights": [[402, "access-rights"]], "64-bit Specific": [[402, "bit-specific"]], "Value Types": [[402, "value-types"]], "Registry Handle Objects": [[402, "registry-handle-objects"]], "winsound \u2014 Sound-playing interface for Windows": [[403, "module-winsound"]], "wsgiref \u2014 WSGI Utilities and Reference Implementation": [[404, "module-wsgiref"]], "wsgiref.util \u2013 WSGI environment utilities": [[404, "module-wsgiref.util"]], "wsgiref.headers \u2013 WSGI response header tools": [[404, "module-wsgiref.headers"]], "wsgiref.simple_server \u2013 a simple WSGI HTTP server": [[404, "module-wsgiref.simple_server"]], "wsgiref.validate \u2014 WSGI conformance checker": [[404, "module-wsgiref.validate"]], "wsgiref.handlers \u2013 server/gateway base classes": [[404, "module-wsgiref.handlers"]], "wsgiref.types \u2013 WSGI types for static type checking": [[404, "module-wsgiref.types"]], "xdrlib \u2014 Encode and decode XDR data": [[405, "module-xdrlib"]], "Packer Objects": [[405, "packer-objects"]], "Unpacker Objects": [[405, "unpacker-objects"]], "XML Processing Modules": [[406, "module-xml"]], "XML vulnerabilities": [[406, "xml-vulnerabilities"]], "The defusedxml Package": [[406, "the-defusedxml-package"]], "xml.dom \u2014 The Document Object Model API": [[407, "module-xml.dom"]], "Objects in the DOM": [[407, "objects-in-the-dom"]], "DOMImplementation Objects": [[407, "domimplementation-objects"]], "Node Objects": [[407, "node-objects"]], "NodeList Objects": [[407, "nodelist-objects"]], "DocumentType Objects": [[407, "documenttype-objects"]], "Document Objects": [[407, "document-objects"]], "Element Objects": [[407, "element-objects"], [410, "element-objects"]], "Attr Objects": [[407, "attr-objects"]], "NamedNodeMap Objects": [[407, "namednodemap-objects"]], "Comment Objects": [[407, "comment-objects"]], "Text and CDATASection Objects": [[407, "text-and-cdatasection-objects"]], "ProcessingInstruction Objects": [[407, "processinginstruction-objects"]], "Conformance": [[407, "conformance"]], "Type Mapping": [[407, "type-mapping"]], "Accessor Methods": [[407, "accessor-methods"]], "xml.dom.minidom \u2014 Minimal DOM implementation": [[408, "module-xml.dom.minidom"]], "DOM Objects": [[408, "dom-objects"]], "DOM Example": [[408, "dom-example"]], "minidom and the DOM standard": [[408, "minidom-and-the-dom-standard"]], "xml.dom.pulldom \u2014 Support for building partial DOM trees": [[409, "module-xml.dom.pulldom"]], "DOMEventStream Objects": [[409, "domeventstream-objects"]], "xml.etree.ElementTree \u2014 The ElementTree XML API": [[410, "module-xml.etree.ElementTree"]], "XML tree and elements": [[410, "xml-tree-and-elements"]], "Parsing XML": [[410, "parsing-xml"]], "Pull API for non-blocking parsing": [[410, "pull-api-for-non-blocking-parsing"]], "Finding interesting elements": [[410, "finding-interesting-elements"]], "Modifying an XML File": [[410, "modifying-an-xml-file"]], "Building XML documents": [[410, "building-xml-documents"]], "Parsing XML with Namespaces": [[410, "parsing-xml-with-namespaces"]], "XPath support": [[410, "xpath-support"]], "Supported XPath syntax": [[410, "supported-xpath-syntax"]], "XInclude support": [[410, "xinclude-support"]], "ElementTree Objects": [[410, "elementtree-objects"]], "QName Objects": [[410, "qname-objects"]], "TreeBuilder Objects": [[410, "treebuilder-objects"]], "XMLPullParser Objects": [[410, "xmlpullparser-objects"]], "xml.sax \u2014 Support for SAX2 parsers": [[411, "module-xml.sax"]], "SAXException Objects": [[411, "saxexception-objects"]], "xml.sax.handler \u2014 Base classes for SAX handlers": [[412, "module-xml.sax.handler"]], "ContentHandler Objects": [[412, "contenthandler-objects"]], "DTDHandler Objects": [[412, "dtdhandler-objects"]], "EntityResolver Objects": [[412, "entityresolver-objects"]], "ErrorHandler Objects": [[412, "errorhandler-objects"]], "LexicalHandler Objects": [[412, "lexicalhandler-objects"]], "xml.sax.xmlreader \u2014 Interface for XML parsers": [[413, "module-xml.sax.xmlreader"]], "XMLReader Objects": [[413, "xmlreader-objects"]], "IncrementalParser Objects": [[413, "incrementalparser-objects"]], "Locator Objects": [[413, "locator-objects"]], "InputSource Objects": [[413, "inputsource-objects"]], "The Attributes Interface": [[413, "the-attributes-interface"]], "The AttributesNS Interface": [[413, "the-attributesns-interface"]], "xml.sax.saxutils \u2014 SAX Utilities": [[414, "module-xml.sax.saxutils"]], "xmlrpc \u2014 XMLRPC server and client modules": [[415, "xmlrpc-xmlrpc-server-and-client-modules"]], "xmlrpc.client \u2014 XML-RPC client access": [[416, "module-xmlrpc.client"]], "ServerProxy Objects": [[416, "serverproxy-objects"]], "Binary Objects": [[416, "binary-objects"]], "Fault Objects": [[416, "fault-objects"]], "ProtocolError Objects": [[416, "protocolerror-objects"]], "MultiCall Objects": [[416, "multicall-objects"]], "Convenience Functions": [[416, "convenience-functions"]], "Example of Client Usage": [[416, "example-of-client-usage"]], "Example of Client and Server Usage": [[416, "example-of-client-and-server-usage"]], "xmlrpc.server \u2014 Basic XML-RPC servers": [[417, "module-xmlrpc.server"]], "SimpleXMLRPCServer Objects": [[417, "simplexmlrpcserver-objects"]], "SimpleXMLRPCServer Example": [[417, "simplexmlrpcserver-example"]], "CGIXMLRPCRequestHandler": [[417, "cgixmlrpcrequesthandler"]], "Documenting XMLRPC server": [[417, "documenting-xmlrpc-server"]], "DocXMLRPCServer Objects": [[417, "docxmlrpcserver-objects"]], "DocCGIXMLRPCRequestHandler": [[417, "doccgixmlrpcrequesthandler"]], "zipapp \u2014 Manage executable Python zip archives": [[418, "module-zipapp"]], "Basic Example": [[418, "basic-example"]], "Python API": [[418, "python-api"]], "Specifying the Interpreter": [[418, "specifying-the-interpreter"]], "Creating Standalone Applications with zipapp": [[418, "creating-standalone-applications-with-zipapp"]], "Caveats": [[418, "caveats"]], "The Python Zip Application Archive Format": [[418, "the-python-zip-application-archive-format"]], "zipfile \u2014 Work with ZIP archives": [[419, "module-zipfile"]], "ZipFile Objects": [[419, "zipfile-objects"]], "Path Objects": [[419, "path-objects"]], "PyZipFile Objects": [[419, "pyzipfile-objects"]], "ZipInfo Objects": [[419, "zipinfo-objects"]], "Decompression pitfalls": [[419, "decompression-pitfalls"]], "From file itself": [[419, "from-file-itself"]], "File System limitations": [[419, "file-system-limitations"]], "Resources limitations": [[419, "resources-limitations"]], "Interruption": [[419, "interruption"]], "Default behaviors of extraction": [[419, "default-behaviors-of-extraction"]], "zipimport \u2014 Import modules from Zip archives": [[420, "module-zipimport"]], "zipimporter Objects": [[420, "zipimporter-objects"]], "zlib \u2014 Compression compatible with gzip": [[421, "module-zlib"]], "zoneinfo \u2014 IANA time zone support": [[422, "module-zoneinfo"]], "Using ZoneInfo": [[422, "using-zoneinfo"]], "Data sources": [[422, "data-sources"]], "Configuring the data sources": [[422, "configuring-the-data-sources"]], "Compile-time configuration": [[422, "compile-time-configuration"]], "Environment configuration": [[422, "environment-configuration"]], "Runtime configuration": [[422, "runtime-configuration"]], "The ZoneInfo class": [[422, "the-zoneinfo-class"]], "String representations": [[422, "string-representations"]], "Pickle serialization": [[422, "pickle-serialization"]], "Globals": [[422, "globals"]], "Exceptions and warnings": [[422, "exceptions-and-warnings"]], "History and License": [[423, "history-and-license"]], "History of the software": [[423, "history-of-the-software"]], "Terms and conditions for accessing or otherwise using Python": [[423, "terms-and-conditions-for-accessing-or-otherwise-using-python"]], "PSF LICENSE AGREEMENT FOR PYTHON 3.12.2": [[423, "psf-license-agreement-for-python-release"]], "BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0": [[423, "beopen-com-license-agreement-for-python-2-0"]], "CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1": [[423, "cnri-license-agreement-for-python-1-6-1"]], "CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2": [[423, "cwi-license-agreement-for-python-0-9-0-through-1-2"]], "ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON 3.12.2 DOCUMENTATION": [[423, "zero-clause-bsd-license-for-code-in-the-python-release-documentation"]], "Licenses and Acknowledgements for Incorporated Software": [[423, "licenses-and-acknowledgements-for-incorporated-software"]], "Mersenne Twister": [[423, "mersenne-twister"]], "Asynchronous socket services": [[423, "asynchronous-socket-services"]], "Cookie management": [[423, "cookie-management"]], "Execution tracing": [[423, "execution-tracing"]], "UUencode and UUdecode functions": [[423, "uuencode-and-uudecode-functions"]], "XML Remote Procedure Calls": [[423, "xml-remote-procedure-calls"]], "test_epoll": [[423, "test-epoll"]], "Select kqueue": [[423, "select-kqueue"]], "SipHash24": [[423, "siphash24"]], "strtod and dtoa": [[423, "strtod-and-dtoa"]], "OpenSSL": [[423, "openssl"], [470, "openssl"]], "expat": [[423, "expat"]], "libffi": [[423, "libffi"]], "zlib": [[423, "zlib"], [473, "zlib"], [476, "zlib"]], "cfuhash": [[423, "cfuhash"]], "libmpdec": [[423, "libmpdec"]], "W3C C14N test suite": [[423, "w3c-c14n-test-suite"]], "Audioop": [[423, "audioop"]], "asyncio": [[423, "asyncio"], [469, "asyncio"], [470, "asyncio"], [471, "asyncio"], [474, "asyncio"], [475, "asyncio"], [476, "asyncio"], [477, "asyncio"], [477, "whatsnew37-asyncio-deprecated"], [478, "asyncio"], [479, "asyncio"]], "Compound statements": [[424, "compound-statements"]], "The if statement": [[424, "the-if-statement"]], "The while statement": [[424, "the-while-statement"]], "The for statement": [[424, "the-for-statement"]], "The try statement": [[424, "the-try-statement"]], "except clause": [[424, "except-clause"]], "except* clause": [[424, "except-star"]], "else clause": [[424, "else-clause"]], "finally clause": [[424, "finally-clause"]], "The with statement": [[424, "the-with-statement"]], "The match statement": [[424, "the-match-statement"]], "Guards": [[424, "guards"]], "Irrefutable Case Blocks": [[424, "irrefutable-case-blocks"]], "Patterns": [[424, "patterns"]], "OR Patterns": [[424, "or-patterns"]], "AS Patterns": [[424, "as-patterns"]], "Literal Patterns": [[424, "literal-patterns"]], "Capture Patterns": [[424, "capture-patterns"]], "Wildcard Patterns": [[424, "wildcard-patterns"]], "Value Patterns": [[424, "value-patterns"]], "Group Patterns": [[424, "group-patterns"]], "Sequence Patterns": [[424, "sequence-patterns"]], "Mapping Patterns": [[424, "mapping-patterns"]], "Class Patterns": [[424, "class-patterns"]], "Function definitions": [[424, "function-definitions"]], "Class definitions": [[424, "class-definitions"]], "Coroutine function definition": [[424, "coroutine-function-definition"]], "The async for statement": [[424, "the-async-for-statement"]], "The async with statement": [[424, "the-async-with-statement"]], "Type parameter lists": [[424, "type-parameter-lists"]], "Generic functions": [[424, "generic-functions"]], "Generic classes": [[424, "generic-classes"]], "Generic type aliases": [[424, "generic-type-aliases"]], "Data model": [[425, "data-model"]], "Objects, values and types": [[425, "objects-values-and-types"]], "The standard type hierarchy": [[425, "the-standard-type-hierarchy"]], "None": [[425, "none"]], "NotImplemented": [[425, "notimplemented"]], "Ellipsis": [[425, "ellipsis"]], "numbers.Number": [[425, "numbers-number"]], "numbers.Integral": [[425, "numbers-integral"]], "numbers.Real (float)": [[425, "numbers-real-float"]], "numbers.Complex (complex)": [[425, "numbers-complex-complex"]], "Sequences": [[425, "sequences"]], "Immutable sequences": [[425, "immutable-sequences"]], "Mutable sequences": [[425, "mutable-sequences"]], "Set types": [[425, "set-types"]], "Mappings": [[425, "mappings"]], "Dictionaries": [[425, "dictionaries"], [439, "dictionaries"]], "Callable types": [[425, "callable-types"]], "User-defined functions": [[425, "user-defined-functions"]], "Special read-only attributes": [[425, "special-read-only-attributes"], [425, "index-58"], [425, "index-64"]], "Special writable attributes": [[425, "special-writable-attributes"], [425, "index-65"]], "Instance methods": [[425, "instance-methods"]], "Generator functions": [[425, "generator-functions"]], "Coroutine functions": [[425, "coroutine-functions"]], "Asynchronous generator functions": [[425, "asynchronous-generator-functions"], [427, "asynchronous-generator-functions"]], "Built-in methods": [[425, "built-in-methods"]], "Class Instances": [[425, "class-instances"]], "Custom classes": [[425, "custom-classes"]], "Class instances": [[425, "id3"]], "I/O objects (also known as file objects)": [[425, "i-o-objects-also-known-as-file-objects"]], "Internal types": [[425, "internal-types"]], "Code objects": [[425, "code-objects"]], "Methods on code objects": [[425, "methods-on-code-objects"]], "Frame objects": [[425, "frame-objects"]], "Frame object methods": [[425, "frame-object-methods"]], "Traceback objects": [[425, "traceback-objects"]], "Slice objects": [[425, "slice-objects"]], "Static method objects": [[425, "static-method-objects"]], "Class method objects": [[425, "class-method-objects"]], "Special method names": [[425, "special-method-names"]], "Basic customization": [[425, "basic-customization"]], "Customizing attribute access": [[425, "customizing-attribute-access"]], "Customizing module attribute access": [[425, "customizing-module-attribute-access"]], "Implementing Descriptors": [[425, "implementing-descriptors"]], "Invoking Descriptors": [[425, "invoking-descriptors"]], "__slots__": [[425, "slots"], [469, "slots"]], "Customizing class creation": [[425, "customizing-class-creation"]], "Metaclasses": [[425, "metaclasses"]], "Resolving MRO entries": [[425, "resolving-mro-entries"]], "Determining the appropriate metaclass": [[425, "determining-the-appropriate-metaclass"]], "Preparing the class namespace": [[425, "preparing-the-class-namespace"]], "Executing the class body": [[425, "executing-the-class-body"]], "Creating the class object": [[425, "creating-the-class-object"]], "Uses for metaclasses": [[425, "uses-for-metaclasses"]], "Customizing instance and subclass checks": [[425, "customizing-instance-and-subclass-checks"]], "Emulating generic types": [[425, "emulating-generic-types"]], "The purpose of __class_getitem__": [[425, "the-purpose-of-class-getitem"]], "__class_getitem__ versus __getitem__": [[425, "class-getitem-versus-getitem"]], "Emulating callable objects": [[425, "emulating-callable-objects"]], "Emulating container types": [[425, "emulating-container-types"]], "Emulating numeric types": [[425, "emulating-numeric-types"]], "With Statement Context Managers": [[425, "with-statement-context-managers"]], "Customizing positional arguments in class pattern matching": [[425, "customizing-positional-arguments-in-class-pattern-matching"]], "Emulating buffer types": [[425, "emulating-buffer-types"]], "Special method lookup": [[425, "special-method-lookup"]], "Awaitable Objects": [[425, "awaitable-objects"]], "Asynchronous Iterators": [[425, "asynchronous-iterators"]], "Asynchronous Context Managers": [[425, "asynchronous-context-managers"]], "Execution model": [[426, "execution-model"]], "Structure of a program": [[426, "structure-of-a-program"]], "Naming and binding": [[426, "naming-and-binding"]], "Binding of names": [[426, "binding-of-names"]], "Resolution of names": [[426, "resolution-of-names"]], "Annotation scopes": [[426, "annotation-scopes"]], "Lazy evaluation": [[426, "lazy-evaluation"]], "Builtins and restricted execution": [[426, "builtins-and-restricted-execution"]], "Interaction with dynamic features": [[426, "interaction-with-dynamic-features"]], "Arithmetic conversions": [[427, "arithmetic-conversions"]], "Atoms": [[427, "atoms"]], "Identifiers (Names)": [[427, "atom-identifiers"]], "Parenthesized forms": [[427, "parenthesized-forms"]], "Displays for lists, sets and dictionaries": [[427, "displays-for-lists-sets-and-dictionaries"]], "List displays": [[427, "list-displays"]], "Set displays": [[427, "set-displays"]], "Dictionary displays": [[427, "dictionary-displays"]], "Generator expressions": [[427, "generator-expressions"]], "Yield expressions": [[427, "yield-expressions"]], "Generator-iterator methods": [[427, "generator-iterator-methods"]], "Asynchronous generator-iterator methods": [[427, "asynchronous-generator-iterator-methods"]], "Primaries": [[427, "primaries"]], "Attribute references": [[427, "attribute-references"]], "Subscriptions": [[427, "subscriptions"]], "Slicings": [[427, "slicings"]], "Calls": [[427, "calls"]], "Await expression": [[427, "await-expression"]], "The power operator": [[427, "the-power-operator"]], "Unary arithmetic and bitwise operations": [[427, "unary-arithmetic-and-bitwise-operations"]], "Binary arithmetic operations": [[427, "binary-arithmetic-operations"]], "Shifting operations": [[427, "shifting-operations"]], "Binary bitwise operations": [[427, "binary-bitwise-operations"]], "Value comparisons": [[427, "value-comparisons"]], "Membership test operations": [[427, "membership-test-operations"]], "Identity comparisons": [[427, "is-not"]], "Boolean operations": [[427, "boolean-operations"]], "Assignment expressions": [[427, "assignment-expressions"], [478, "assignment-expressions"]], "Conditional expressions": [[427, "conditional-expressions"]], "Lambdas": [[427, "lambda"]], "Expression lists": [[427, "expression-lists"]], "Evaluation order": [[427, "evaluation-order"]], "Operator precedence": [[427, "operator-precedence"]], "Full Grammar specification": [[428, "full-grammar-specification"]], "The import system": [[429, "the-import-system"]], "importlib": [[429, "importlib"], [471, "importlib"], [474, "importlib"], [475, "importlib"], [476, "importlib"], [476, "id3"], [477, "importlib"], [477, "id6"], [479, "importlib"]], "Packages": [[429, "packages"], [447, "packages"]], "Regular packages": [[429, "regular-packages"]], "Namespace packages": [[429, "namespace-packages"]], "Searching": [[429, "searching"]], "The module cache": [[429, "the-module-cache"]], "Finders and loaders": [[429, "finders-and-loaders"]], "Import hooks": [[429, "import-hooks"]], "The meta path": [[429, "the-meta-path"]], "Loading": [[429, "loading"]], "Loaders": [[429, "loaders"]], "Submodules": [[429, "submodules"]], "Module spec": [[429, "module-spec"]], "Import-related module attributes": [[429, "import-related-module-attributes"]], "module.__path__": [[429, "module-path"]], "Module reprs": [[429, "module-reprs"]], "Cached bytecode invalidation": [[429, "cached-bytecode-invalidation"]], "The Path Based Finder": [[429, "the-path-based-finder"]], "Path entry finders": [[429, "path-entry-finders"]], "Path entry finder protocol": [[429, "path-entry-finder-protocol"]], "Replacing the standard import system": [[429, "replacing-the-standard-import-system"]], "Package Relative Imports": [[429, "package-relative-imports"]], "Special considerations for __main__": [[429, "special-considerations-for-main"]], "__main__.__spec__": [[429, "main-spec"]], "The Python Language Reference": [[430, "the-python-language-reference"]], "Alternate Implementations": [[431, "alternate-implementations"]], "Notation": [[431, "notation"]], "Lexical analysis": [[432, "lexical-analysis"]], "Line structure": [[432, "line-structure"]], "Logical lines": [[432, "logical-lines"]], "Physical lines": [[432, "physical-lines"]], "Comments": [[432, "comments"]], "Encoding declarations": [[432, "encoding-declarations"]], "Explicit line joining": [[432, "explicit-line-joining"]], "Implicit line joining": [[432, "implicit-line-joining"]], "Blank lines": [[432, "blank-lines"]], "Indentation": [[432, "indentation"]], "Whitespace between tokens": [[432, "whitespace-between-tokens"]], "Other tokens": [[432, "other-tokens"]], "Identifiers and keywords": [[432, "identifiers"]], "Keywords": [[432, "keywords"]], "Soft Keywords": [[432, "soft-keywords"]], "Reserved classes of identifiers": [[432, "reserved-classes-of-identifiers"]], "String and Bytes literals": [[432, "string-and-bytes-literals"]], "Escape sequences": [[432, "escape-sequences"]], "String literal concatenation": [[432, "string-literal-concatenation"]], "f-strings": [[432, "formatted-string-literals"]], "Numeric literals": [[432, "numeric-literals"]], "Integer literals": [[432, "integer-literals"]], "Floating point literals": [[432, "floating-point-literals"]], "Imaginary literals": [[432, "imaginary-literals"]], "Delimiters": [[432, "delimiters"]], "Simple statements": [[433, "simple-statements"]], "Expression statements": [[433, "expression-statements"]], "Assignment statements": [[433, "assignment-statements"]], "Augmented assignment statements": [[433, "augmented-assignment-statements"]], "Annotated assignment statements": [[433, "annotated-assignment-statements"]], "The assert statement": [[433, "the-assert-statement"]], "The pass statement": [[433, "the-pass-statement"]], "The del statement": [[433, "the-del-statement"], [439, "the-del-statement"]], "The return statement": [[433, "the-return-statement"]], "The yield statement": [[433, "the-yield-statement"]], "The raise statement": [[433, "the-raise-statement"]], "The break statement": [[433, "the-break-statement"]], "The continue statement": [[433, "the-continue-statement"]], "The import statement": [[433, "the-import-statement"]], "Future statements": [[433, "future-statements"]], "The global statement": [[433, "the-global-statement"]], "The nonlocal statement": [[433, "the-nonlocal-statement"]], "The type statement": [[433, "the-type-statement"]], "Top-level components": [[434, "top-level-components"]], "Complete Python programs": [[434, "complete-python-programs"]], "File input": [[434, "file-input"]], "Interactive input": [[434, "interactive-input"]], "Expression input": [[434, "expression-input"]], "Appendix": [[435, "appendix"]], "Interactive Mode": [[435, "interactive-mode"], [445, "interactive-mode"]], "Error Handling": [[435, "error-handling"]], "Executable Python Scripts": [[435, "executable-python-scripts"]], "The Interactive Startup File": [[435, "the-interactive-startup-file"]], "The Customization Modules": [[435, "the-customization-modules"]], "Whetting Your Appetite": [[436, "whetting-your-appetite"]], "A Word About Names and Objects": [[437, "a-word-about-names-and-objects"]], "Python Scopes and Namespaces": [[437, "python-scopes-and-namespaces"]], "Scopes and Namespaces Example": [[437, "scopes-and-namespaces-example"]], "A First Look at Classes": [[437, "a-first-look-at-classes"]], "Class Definition Syntax": [[437, "class-definition-syntax"]], "Instance Objects": [[437, "instance-objects"]], "Class and Instance Variables": [[437, "class-and-instance-variables"]], "Random Remarks": [[437, "random-remarks"]], "Multiple Inheritance": [[437, "multiple-inheritance"]], "Private Variables": [[437, "private-variables"]], "Generator Expressions": [[437, "generator-expressions"]], "More Control Flow Tools": [[438, "more-control-flow-tools"]], "if Statements": [[438, "if-statements"]], "for Statements": [[438, "for-statements"]], "The range() Function": [[438, "the-range-function"]], "break and continue Statements, and else Clauses on Loops": [[438, "break-and-continue-statements-and-else-clauses-on-loops"]], "pass Statements": [[438, "pass-statements"]], "match Statements": [[438, "match-statements"]], "Defining Functions": [[438, "defining-functions"]], "More on Defining Functions": [[438, "more-on-defining-functions"]], "Default Argument Values": [[438, "default-argument-values"]], "Keyword Arguments": [[438, "keyword-arguments"]], "Special parameters": [[438, "special-parameters"]], "Positional-or-Keyword Arguments": [[438, "positional-or-keyword-arguments"]], "Positional-Only Parameters": [[438, "positional-only-parameters"]], "Keyword-Only Arguments": [[438, "keyword-only-arguments"]], "Function Examples": [[438, "function-examples"]], "Recap": [[438, "recap"]], "Arbitrary Argument Lists": [[438, "arbitrary-argument-lists"]], "Unpacking Argument Lists": [[438, "unpacking-argument-lists"]], "Lambda Expressions": [[438, "lambda-expressions"]], "Documentation Strings": [[438, "documentation-strings"]], "Function Annotations": [[438, "function-annotations"]], "Intermezzo: Coding Style": [[438, "intermezzo-coding-style"]], "Data Structures": [[439, "data-structures"]], "More on Lists": [[439, "more-on-lists"]], "Using Lists as Stacks": [[439, "using-lists-as-stacks"]], "Using Lists as Queues": [[439, "using-lists-as-queues"]], "List Comprehensions": [[439, "list-comprehensions"], [459, "list-comprehensions"]], "Nested List Comprehensions": [[439, "nested-list-comprehensions"]], "Tuples and Sequences": [[439, "tuples-and-sequences"]], "Sets": [[439, "sets"]], "Looping Techniques": [[439, "looping-techniques"]], "More on Conditions": [[439, "more-on-conditions"]], "Comparing Sequences and Other Types": [[439, "comparing-sequences-and-other-types"]], "Errors and Exceptions": [[440, "errors-and-exceptions"]], "Syntax Errors": [[440, "syntax-errors"]], "Raising Exceptions": [[440, "raising-exceptions"]], "Exception Chaining": [[440, "exception-chaining"]], "User-defined Exceptions": [[440, "user-defined-exceptions"]], "Defining Clean-up Actions": [[440, "defining-clean-up-actions"]], "Predefined Clean-up Actions": [[440, "predefined-clean-up-actions"]], "Raising and Handling Multiple Unrelated Exceptions": [[440, "raising-and-handling-multiple-unrelated-exceptions"]], "Enriching Exceptions with Notes": [[440, "enriching-exceptions-with-notes"]], "Floating Point Arithmetic:  Issues and Limitations": [[441, "floating-point-arithmetic-issues-and-limitations"]], "Representation Error": [[441, "representation-error"]], "The Python Tutorial": [[442, "the-python-tutorial"]], "Fancier Output Formatting": [[443, "fancier-output-formatting"]], "Formatted String Literals": [[443, "formatted-string-literals"]], "The String format() Method": [[443, "the-string-format-method"]], "Manual String Formatting": [[443, "manual-string-formatting"]], "Old string formatting": [[443, "old-string-formatting"]], "Reading and Writing Files": [[443, "reading-and-writing-files"]], "Methods of File Objects": [[443, "methods-of-file-objects"]], "Saving structured data with json": [[443, "saving-structured-data-with-json"]], "Interactive Input Editing and History Substitution": [[444, "interactive-input-editing-and-history-substitution"]], "Tab Completion and History Editing": [[444, "tab-completion-and-history-editing"]], "Alternatives to the Interactive Interpreter": [[444, "alternatives-to-the-interactive-interpreter"]], "Using the Python Interpreter": [[445, "using-the-python-interpreter"]], "Invoking the Interpreter": [[445, "invoking-the-interpreter"]], "Argument Passing": [[445, "argument-passing"]], "The Interpreter and Its Environment": [[445, "the-interpreter-and-its-environment"]], "Source Code Encoding": [[445, "source-code-encoding"]], "An Informal Introduction to Python": [[446, "an-informal-introduction-to-python"]], "Using Python as a Calculator": [[446, "using-python-as-a-calculator"]], "Text": [[446, "text"]], "First Steps Towards Programming": [[446, "first-steps-towards-programming"]], "More on Modules": [[447, "more-on-modules"]], "Executing modules as scripts": [[447, "executing-modules-as-scripts"]], "The Module Search Path": [[447, "the-module-search-path"]], "\u201cCompiled\u201d Python files": [[447, "compiled-python-files"]], "Standard Modules": [[447, "standard-modules"]], "The dir() Function": [[447, "the-dir-function"]], "Importing * From a Package": [[447, "importing-from-a-package"]], "Intra-package References": [[447, "intra-package-references"]], "Packages in Multiple Directories": [[447, "packages-in-multiple-directories"]], "Brief Tour of the Standard Library": [[448, "brief-tour-of-the-standard-library"]], "Operating System Interface": [[448, "operating-system-interface"]], "File Wildcards": [[448, "file-wildcards"]], "Command Line Arguments": [[448, "command-line-arguments"]], "Error Output Redirection and Program Termination": [[448, "error-output-redirection-and-program-termination"]], "String Pattern Matching": [[448, "string-pattern-matching"]], "Mathematics": [[448, "mathematics"]], "Internet Access": [[448, "internet-access"]], "Dates and Times": [[448, "dates-and-times"]], "Data Compression": [[448, "data-compression"]], "Performance Measurement": [[448, "performance-measurement"]], "Quality Control": [[448, "quality-control"]], "Batteries Included": [[448, "batteries-included"]], "Brief Tour of the Standard Library \u2014 Part II": [[449, "brief-tour-of-the-standard-library-part-ii"]], "Output Formatting": [[449, "output-formatting"]], "Templating": [[449, "templating"]], "Working with Binary Data Record Layouts": [[449, "working-with-binary-data-record-layouts"]], "Weak References": [[449, "weak-references"]], "Tools for Working with Lists": [[449, "tools-for-working-with-lists"]], "Decimal Floating Point Arithmetic": [[449, "decimal-floating-point-arithmetic"]], "Virtual Environments and Packages": [[450, "virtual-environments-and-packages"]], "Creating Virtual Environments": [[450, "creating-virtual-environments"]], "Managing Packages with pip": [[450, "managing-packages-with-pip"]], "What Now?": [[451, "what-now"]], "Command line and environment": [[452, "command-line-and-environment"]], "Command line": [[452, "command-line"]], "Interface options": [[452, "interface-options"]], "Generic options": [[452, "generic-options"]], "Miscellaneous options": [[452, "miscellaneous-options"]], "Options you shouldn\u2019t use": [[452, "options-you-shouldn-t-use"]], "Environment variables": [[452, "environment-variables"]], "Debug-mode variables": [[452, "debug-mode-variables"]], "Configure Python": [[453, "configure-python"]], "Build Requirements": [[453, "build-requirements"]], "Generated files": [[453, "generated-files"]], "configure script": [[453, "configure-script"]], "Configure Options": [[453, "configure-options"]], "General Options": [[453, "general-options"]], "WebAssembly Options": [[453, "webassembly-options"]], "Install Options": [[453, "install-options"]], "Performance options": [[453, "performance-options"]], "Python Debug Build": [[453, "python-debug-build"]], "Debug options": [[453, "debug-options"]], "Linker options": [[453, "linker-options"]], "Libraries options": [[453, "libraries-options"]], "Security Options": [[453, "security-options"]], "macOS Options": [[453, "macos-options"]], "Cross Compiling Options": [[453, "cross-compiling-options"]], "Python Build System": [[453, "python-build-system"]], "Main files of the build system": [[453, "main-files-of-the-build-system"]], "Main build steps": [[453, "main-build-steps"]], "Main Makefile targets": [[453, "main-makefile-targets"]], "C extensions": [[453, "c-extensions"]], "Compiler and linker flags": [[453, "compiler-and-linker-flags"]], "Preprocessor flags": [[453, "preprocessor-flags"]], "Compiler flags": [[453, "compiler-flags"]], "Linker flags": [[453, "linker-flags"]], "Editors and IDEs": [[454, "editors-and-ides"]], "Python Setup and Usage": [[455, "python-setup-and-usage"]], "Using Python on a Mac": [[456, "using-python-on-a-mac"]], "Getting and Installing MacPython": [[456, "getting-and-installing-macpython"]], "How to run a Python script": [[456, "how-to-run-a-python-script"]], "Running scripts with a GUI": [[456, "running-scripts-with-a-gui"]], "Configuration": [[456, "configuration"]], "The IDE": [[456, "the-ide"]], "Installing Additional Python Packages": [[456, "installing-additional-python-packages"]], "GUI Programming on the Mac": [[456, "gui-programming-on-the-mac"]], "Distributing Python Applications on the Mac": [[456, "distributing-python-applications-on-the-mac"]], "Other Resources": [[456, "other-resources"]], "Using Python on Unix platforms": [[457, "using-python-on-unix-platforms"]], "Getting and installing the latest version of Python": [[457, "getting-and-installing-the-latest-version-of-python"]], "On Linux": [[457, "on-linux"]], "On FreeBSD and OpenBSD": [[457, "on-freebsd-and-openbsd"]], "Building Python": [[457, "building-python"]], "Python-related paths and files": [[457, "python-related-paths-and-files"]], "Custom OpenSSL": [[457, "custom-openssl"]], "Using Python on Windows": [[458, "using-python-on-windows"]], "The full installer": [[458, "the-full-installer"]], "Installation steps": [[458, "installation-steps"]], "Removing the MAX_PATH Limitation": [[458, "removing-the-max-path-limitation"]], "Installing Without UI": [[458, "installing-without-ui"]], "Installing Without Downloading": [[458, "installing-without-downloading"]], "Modifying an install": [[458, "modifying-an-install"]], "The Microsoft Store package": [[458, "the-microsoft-store-package"]], "Known issues": [[458, "known-issues"]], "Redirection of local data, registry, and temporary paths": [[458, "redirection-of-local-data-registry-and-temporary-paths"]], "The nuget.org packages": [[458, "the-nuget-org-packages"]], "The embeddable package": [[458, "the-embeddable-package"]], "Python Application": [[458, "python-application"]], "Alternative bundles": [[458, "alternative-bundles"]], "Configuring Python": [[458, "configuring-python"]], "Excursus: Setting environment variables": [[458, "excursus-setting-environment-variables"]], "Finding the Python executable": [[458, "finding-the-python-executable"]], "UTF-8 mode": [[458, "utf-8-mode"]], "Python Launcher for Windows": [[458, "python-launcher-for-windows"]], "Getting started": [[458, "getting-started"]], "From the command-line": [[458, "from-the-command-line"]], "From a script": [[458, "from-a-script"]], "From file associations": [[458, "from-file-associations"]], "Shebang Lines": [[458, "shebang-lines"]], "Arguments in shebang lines": [[458, "arguments-in-shebang-lines"]], "Customization": [[458, "customization"]], "Customization via INI files": [[458, "customization-via-ini-files"]], "Customizing default Python versions": [[458, "customizing-default-python-versions"]], "Diagnostics": [[458, "diagnostics"]], "Dry Run": [[458, "dry-run"]], "Install on demand": [[458, "install-on-demand"]], "Return codes": [[458, "return-codes"]], "Finding modules": [[458, "finding-modules"]], "Additional modules": [[458, "additional-modules"]], "PyWin32": [[458, "pywin32"]], "cx_Freeze": [[458, "cx-freeze"]], "Compiling Python on Windows": [[458, "compiling-python-on-windows"]], "Other Platforms": [[458, "other-platforms"]], "What\u2019s New in Python 2.0": [[459, "what-s-new-in-python-2-0"]], "What About Python 1.6?": [[459, "what-about-python-1-6"]], "New Development Process": [[459, "new-development-process"]], "Unicode": [[459, "unicode"], [472, "unicode"]], "Augmented Assignment": [[459, "augmented-assignment"]], "Garbage Collection of Cycles": [[459, "garbage-collection-of-cycles"]], "Other Core Changes": [[459, "other-core-changes"]], "Minor Language Changes": [[459, "minor-language-changes"]], "Changes to Built-in Functions": [[459, "changes-to-built-in-functions"]], "Porting to 2.0": [[459, "porting-to-2-0"]], "Extending/Embedding Changes": [[459, "extending-embedding-changes"]], "Distutils: Making Modules Easy to Install": [[459, "distutils-making-modules-easy-to-install"]], "XML Modules": [[459, "xml-modules"]], "SAX2 Support": [[459, "sax2-support"]], "DOM Support": [[459, "dom-support"]], "Relationship to PyXML": [[459, "relationship-to-pyxml"]], "Module changes": [[459, "module-changes"]], "New modules": [[459, "new-modules"]], "IDLE Improvements": [[459, "idle-improvements"]], "Deleted and Deprecated Modules": [[459, "deleted-and-deprecated-modules"]], "What\u2019s New in Python 2.1": [[460, "what-s-new-in-python-2-1"]], "PEP 227: Nested Scopes": [[460, "pep-227-nested-scopes"], [461, "pep-227-nested-scopes"]], "PEP 236: __future__ Directives": [[460, "pep-236-future-directives"]], "PEP 207: Rich Comparisons": [[460, "pep-207-rich-comparisons"]], "PEP 230: Warning Framework": [[460, "pep-230-warning-framework"]], "PEP 229: New Build System": [[460, "pep-229-new-build-system"]], "PEP 205: Weak References": [[460, "pep-205-weak-references"]], "PEP 232: Function Attributes": [[460, "pep-232-function-attributes"]], "PEP 235: Importing Modules on Case-Insensitive Platforms": [[460, "pep-235-importing-modules-on-case-insensitive-platforms"]], "PEP 217: Interactive Display Hook": [[460, "pep-217-interactive-display-hook"]], "PEP 208: New Coercion Model": [[460, "pep-208-new-coercion-model"]], "PEP 241: Metadata in Python Packages": [[460, "pep-241-metadata-in-python-packages"]], "New and Improved Modules": [[460, "new-and-improved-modules"], [461, "new-and-improved-modules"], [465, "new-and-improved-modules"], [466, "new-and-improved-modules"]], "Other Changes and Fixes": [[460, "other-changes-and-fixes"], [461, "other-changes-and-fixes"], [462, "other-changes-and-fixes"], [466, "other-changes-and-fixes"]], "What\u2019s New in Python 2.2": [[461, "what-s-new-in-python-2-2"]], "PEPs 252 and 253: Type and Class Changes": [[461, "peps-252-and-253-type-and-class-changes"]], "Old and New Classes": [[461, "old-and-new-classes"]], "Descriptors": [[461, "descriptors"]], "Multiple Inheritance: The Diamond Rule": [[461, "multiple-inheritance-the-diamond-rule"]], "Attribute Access": [[461, "attribute-access"]], "Related Links": [[461, "related-links"]], "PEP 234: Iterators": [[461, "pep-234-iterators"]], "PEP 255: Simple Generators": [[461, "pep-255-simple-generators"], [462, "pep-255-simple-generators"]], "PEP 237: Unifying Long Integers and Integers": [[461, "pep-237-unifying-long-integers-and-integers"], [463, "pep-237-unifying-long-integers-and-integers"]], "PEP 238: Changing the Division Operator": [[461, "pep-238-changing-the-division-operator"]], "Unicode Changes": [[461, "unicode-changes"]], "Interpreter Changes and Fixes": [[461, "interpreter-changes-and-fixes"]], "What\u2019s New in Python 2.3": [[462, "what-s-new-in-python-2-3"]], "PEP 218: A Standard Set Datatype": [[462, "pep-218-a-standard-set-datatype"]], "PEP 263: Source Code Encodings": [[462, "pep-263-source-code-encodings"]], "PEP 273: Importing Modules from ZIP Archives": [[462, "pep-273-importing-modules-from-zip-archives"]], "PEP 277: Unicode file name support for Windows NT": [[462, "pep-277-unicode-file-name-support-for-windows-nt"]], "PEP 278: Universal Newline Support": [[462, "pep-278-universal-newline-support"]], "PEP 279: enumerate()": [[462, "pep-279-enumerate"]], "PEP 282: The logging Package": [[462, "pep-282-the-logging-package"]], "PEP 285: A Boolean Type": [[462, "pep-285-a-boolean-type"]], "PEP 293: Codec Error Handling Callbacks": [[462, "pep-293-codec-error-handling-callbacks"]], "PEP 301: Package Index and Metadata for Distutils": [[462, "pep-301-package-index-and-metadata-for-distutils"]], "PEP 302: New Import Hooks": [[462, "pep-302-new-import-hooks"]], "PEP 305: Comma-separated Files": [[462, "pep-305-comma-separated-files"]], "PEP 307: Pickle Enhancements": [[462, "pep-307-pickle-enhancements"]], "Extended Slices": [[462, "extended-slices"]], "Other Language Changes": [[462, "other-language-changes"], [463, "other-language-changes"], [464, "other-language-changes"], [465, "other-language-changes"], [466, "other-language-changes"], [468, "other-language-changes"], [469, "other-language-changes"], [470, "other-language-changes"], [471, "other-language-changes"], [472, "other-language-changes"], [473, "other-language-changes"], [474, "other-language-changes"], [475, "other-language-changes"], [476, "other-language-changes"], [477, "other-language-changes"], [478, "other-language-changes"], [479, "other-language-changes"]], "String Changes": [[462, "string-changes"]], "Optimizations": [[462, "optimizations"], [463, "optimizations"], [464, "optimizations"], [465, "optimizations"], [466, "optimizations"], [468, "optimizations"], [469, "optimizations"], [470, "optimizations"], [471, "optimizations"], [472, "optimizations"], [473, "optimizations"], [475, "optimizations"], [476, "optimizations"], [477, "optimizations"], [478, "optimizations"], [479, "optimizations"]], "New, Improved, and Deprecated Modules": [[462, "new-improved-and-deprecated-modules"], [463, "new-improved-and-deprecated-modules"], [468, "new-improved-and-deprecated-modules"], [472, "new-improved-and-deprecated-modules"]], "Date/Time Type": [[462, "date-time-type"]], "The optparse Module": [[462, "the-optparse-module"]], "Pymalloc: A Specialized Object Allocator": [[462, "pymalloc-a-specialized-object-allocator"]], "Build and C API Changes": [[462, "build-and-c-api-changes"], [463, "build-and-c-api-changes"], [464, "build-and-c-api-changes"], [465, "build-and-c-api-changes"], [466, "build-and-c-api-changes"], [467, "build-and-c-api-changes"], [468, "build-and-c-api-changes"], [472, "build-and-c-api-changes"], [473, "build-and-c-api-changes"], [475, "build-and-c-api-changes"], [476, "build-and-c-api-changes"], [478, "build-and-c-api-changes"]], "Port-Specific Changes": [[462, "port-specific-changes"], [463, "port-specific-changes"], [464, "port-specific-changes"]], "Porting to Python 2.3": [[462, "porting-to-python-2-3"]], "What\u2019s New in Python 2.4": [[463, "what-s-new-in-python-2-4"]], "PEP 218: Built-In Set Objects": [[463, "pep-218-built-in-set-objects"]], "PEP 289: Generator Expressions": [[463, "pep-289-generator-expressions"]], "PEP 292: Simpler String Substitutions": [[463, "pep-292-simpler-string-substitutions"]], "PEP 318: Decorators for Functions and Methods": [[463, "pep-318-decorators-for-functions-and-methods"]], "PEP 322: Reverse Iteration": [[463, "pep-322-reverse-iteration"]], "PEP 324: New subprocess Module": [[463, "pep-324-new-subprocess-module"]], "PEP 327: Decimal Data Type": [[463, "pep-327-decimal-data-type"]], "Why is Decimal needed?": [[463, "why-is-decimal-needed"]], "The Decimal type": [[463, "the-decimal-type"]], "The Context type": [[463, "the-context-type"]], "PEP 328: Multi-line Imports": [[463, "pep-328-multi-line-imports"]], "PEP 331: Locale-Independent Float/String Conversions": [[463, "pep-331-locale-independent-float-string-conversions"]], "cookielib": [[463, "cookielib"]], "doctest": [[463, "doctest"], [469, "doctest"], [474, "doctest"], [475, "doctest"]], "Porting to Python 2.4": [[463, "porting-to-python-2-4"]], "What\u2019s New in Python 2.5": [[464, "what-s-new-in-python-2-5"]], "PEP 308: Conditional Expressions": [[464, "pep-308-conditional-expressions"]], "PEP 309: Partial Function Application": [[464, "pep-309-partial-function-application"]], "PEP 314: Metadata for Python Software Packages v1.1": [[464, "pep-314-metadata-for-python-software-packages-v1-1"]], "PEP 328: Absolute and Relative Imports": [[464, "pep-328-absolute-and-relative-imports"]], "PEP 338: Executing Modules as Scripts": [[464, "pep-338-executing-modules-as-scripts"]], "PEP 341: Unified try/except/finally": [[464, "pep-341-unified-try-except-finally"]], "PEP 342: New Generator Features": [[464, "pep-342-new-generator-features"]], "PEP 343: The \u2018with\u2019 statement": [[464, "pep-343-the-with-statement"], [465, "pep-343-the-with-statement"]], "Writing Context Managers": [[464, "writing-context-managers"], [465, "writing-context-managers"]], "The contextlib module": [[464, "the-contextlib-module"], [465, "the-contextlib-module"]], "PEP 352: Exceptions as New-Style Classes": [[464, "pep-352-exceptions-as-new-style-classes"]], "PEP 353: Using ssize_t as the index type": [[464, "pep-353-using-ssize-t-as-the-index-type"]], "PEP 357: The \u2018__index__\u2019 method": [[464, "pep-357-the-index-method"]], "Interactive Interpreter Changes": [[464, "interactive-interpreter-changes"]], "New, Improved, and Removed Modules": [[464, "new-improved-and-removed-modules"]], "The ctypes package": [[464, "the-ctypes-package"]], "The ElementTree package": [[464, "the-elementtree-package"]], "The hashlib package": [[464, "the-hashlib-package"]], "The sqlite3 package": [[464, "the-sqlite3-package"]], "The wsgiref package": [[464, "the-wsgiref-package"]], "Porting to Python 2.5": [[464, "porting-to-python-2-5"]], "What\u2019s New in Python 2.6": [[465, "what-s-new-in-python-2-6"]], "Python 3.0": [[465, "python-3-0"]], "Changes to the Development Process": [[465, "changes-to-the-development-process"]], "New Issue Tracker: Roundup": [[465, "new-issue-tracker-roundup"]], "New Documentation Format: reStructuredText Using Sphinx": [[465, "new-documentation-format-restructuredtext-using-sphinx"]], "PEP 366: Explicit Relative Imports From a Main Module": [[465, "pep-366-explicit-relative-imports-from-a-main-module"]], "PEP 370: Per-user site-packages Directory": [[465, "pep-370-per-user-site-packages-directory"]], "PEP 371: The multiprocessing Package": [[465, "pep-371-the-multiprocessing-package"]], "PEP 3101: Advanced String Formatting": [[465, "pep-3101-advanced-string-formatting"]], "PEP 3105: print As a Function": [[465, "pep-3105-print-as-a-function"]], "PEP 3110: Exception-Handling Changes": [[465, "pep-3110-exception-handling-changes"]], "PEP 3112: Byte Literals": [[465, "pep-3112-byte-literals"]], "PEP 3116: New I/O Library": [[465, "pep-3116-new-i-o-library"]], "PEP 3118: Revised Buffer Protocol": [[465, "pep-3118-revised-buffer-protocol"]], "PEP 3119: Abstract Base Classes": [[465, "pep-3119-abstract-base-classes"]], "PEP 3127: Integer Literal Support and Syntax": [[465, "pep-3127-integer-literal-support-and-syntax"]], "PEP 3129: Class Decorators": [[465, "pep-3129-class-decorators"]], "PEP 3141: A Type Hierarchy for Numbers": [[465, "pep-3141-a-type-hierarchy-for-numbers"]], "The fractions Module": [[465, "the-fractions-module"]], "Interpreter Changes": [[465, "interpreter-changes"], [466, "interpreter-changes"]], "The ast module": [[465, "the-ast-module"]], "The future_builtins module": [[465, "the-future-builtins-module"]], "The json module: JavaScript Object Notation": [[465, "the-json-module-javascript-object-notation"]], "The plistlib module: A Property-List Parser": [[465, "the-plistlib-module-a-property-list-parser"]], "ctypes Enhancements": [[465, "ctypes-enhancements"]], "Improved SSL Support": [[465, "improved-ssl-support"]], "Deprecations and Removals": [[465, "deprecations-and-removals"]], "Port-Specific Changes: Windows": [[465, "port-specific-changes-windows"], [466, "port-specific-changes-windows"]], "Port-Specific Changes: Mac OS X": [[465, "port-specific-changes-mac-os-x"], [466, "port-specific-changes-mac-os-x"]], "Port-Specific Changes: IRIX": [[465, "port-specific-changes-irix"]], "Porting to Python 2.6": [[465, "porting-to-python-2-6"]], "What\u2019s New in Python 2.7": [[466, "what-s-new-in-python-2-7"]], "The Future for Python 2.x": [[466, "the-future-for-python-2-x"]], "Changes to the Handling of Deprecation Warnings": [[466, "changes-to-the-handling-of-deprecation-warnings"]], "Python 3.1 Features": [[466, "python-3-1-features"]], "PEP 372: Adding an Ordered Dictionary to collections": [[466, "pep-372-adding-an-ordered-dictionary-to-collections"]], "PEP 378: Format Specifier for Thousands Separator": [[466, "pep-378-format-specifier-for-thousands-separator"], [468, "pep-378-format-specifier-for-thousands-separator"]], "PEP 389: The argparse Module for Parsing Command Lines": [[466, "pep-389-the-argparse-module-for-parsing-command-lines"]], "PEP 391: Dictionary-Based Configuration For Logging": [[466, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3106: Dictionary Views": [[466, "pep-3106-dictionary-views"]], "PEP 3137: The memoryview Object": [[466, "pep-3137-the-memoryview-object"]], "New module: importlib": [[466, "new-module-importlib"]], "New module: sysconfig": [[466, "new-module-sysconfig"]], "ttk: Themed Widgets for Tk": [[466, "ttk-themed-widgets-for-tk"]], "Updated module: unittest": [[466, "updated-module-unittest"]], "Updated module: ElementTree 1.3": [[466, "updated-module-elementtree-1-3"]], "Port-Specific Changes: FreeBSD": [[466, "port-specific-changes-freebsd"]], "Porting to Python 2.7": [[466, "porting-to-python-2-7"]], "New Features Added to Python 2.7 Maintenance Releases": [[466, "new-features-added-to-python-2-7-maintenance-releases"]], "Two new environment variables for debug mode": [[466, "two-new-environment-variables-for-debug-mode"]], "PEP 434: IDLE Enhancement Exception for All Branches": [[466, "pep-434-idle-enhancement-exception-for-all-branches"]], "PEP 466: Network Security Enhancements for Python 2.7": [[466, "pep-466-network-security-enhancements-for-python-2-7"]], "PEP 477: Backport ensurepip (PEP 453) to Python 2.7": [[466, "pep-477-backport-ensurepip-pep-453-to-python-2-7"]], "Bootstrapping pip By Default": [[466, "bootstrapping-pip-by-default"], [474, "bootstrapping-pip-by-default"]], "Documentation Changes": [[466, "documentation-changes"], [474, "documentation-changes"]], "PEP 476: Enabling certificate verification by default for stdlib http clients": [[466, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"], [474, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"]], "PEP 493: HTTPS verification migration tools for Python 2.7": [[466, "pep-493-https-verification-migration-tools-for-python-2-7"]], "New make regen-all build target": [[466, "new-make-regen-all-build-target"], [475, "new-make-regen-all-build-target"], [476, "new-make-regen-all-build-target"]], "Removal of make touch build target": [[466, "removal-of-make-touch-build-target"], [475, "removal-of-make-touch-build-target"], [476, "removal-of-make-touch-build-target"]], "What\u2019s New In Python 3.0": [[467, "what-s-new-in-python-3-0"]], "Common Stumbling Blocks": [[467, "common-stumbling-blocks"]], "Print Is A Function": [[467, "print-is-a-function"]], "Views And Iterators Instead Of Lists": [[467, "views-and-iterators-instead-of-lists"]], "Ordering Comparisons": [[467, "ordering-comparisons"]], "Integers": [[467, "integers"]], "Text Vs. Data Instead Of Unicode Vs. 8-bit": [[467, "text-vs-data-instead-of-unicode-vs-8-bit"]], "Overview Of Syntax Changes": [[467, "overview-of-syntax-changes"]], "New Syntax": [[467, "new-syntax"]], "Changed Syntax": [[467, "changed-syntax"]], "Removed Syntax": [[467, "removed-syntax"]], "Changes Already Present In Python 2.6": [[467, "changes-already-present-in-python-2-6"]], "Library Changes": [[467, "library-changes"]], "PEP 3101: A New Approach To String Formatting": [[467, "pep-3101-a-new-approach-to-string-formatting"]], "Changes To Exceptions": [[467, "changes-to-exceptions"]], "Miscellaneous Other Changes": [[467, "miscellaneous-other-changes"]], "Operators And Special Methods": [[467, "operators-and-special-methods"]], "Builtins": [[467, "builtins"]], "Porting To Python 3.0": [[467, "porting-to-python-3-0"]], "What\u2019s New In Python 3.1": [[468, "what-s-new-in-python-3-1"]], "PEP 372: Ordered Dictionaries": [[468, "pep-372-ordered-dictionaries"]], "Porting to Python 3.1": [[468, "porting-to-python-3-1"]], "What\u2019s New In Python 3.10": [[469, "what-s-new-in-python-3-10"]], "Summary \u2013 Release highlights": [[469, "summary-release-highlights"], [470, "summary-release-highlights"], [471, "summary-release-highlights"], [473, "summary-release-highlights"], [475, "summary-release-highlights"], [476, "summary-release-highlights"], [478, "summary-release-highlights"], [479, "summary-release-highlights"]], "New Features": [[469, "new-features"], [469, "id1"], [470, "new-features"], [470, "whatsnew311-c-api-new-features"], [471, "new-features"], [471, "id4"], [474, "new-features"], [475, "new-features"], [476, "new-features"], [477, "new-features"], [478, "new-features"], [479, "new-features"], [479, "id1"]], "Parenthesized context managers": [[469, "parenthesized-context-managers"]], "Better error messages": [[469, "better-error-messages"]], "SyntaxErrors": [[469, "syntaxerrors"]], "IndentationErrors": [[469, "indentationerrors"]], "AttributeErrors": [[469, "attributeerrors"]], "NameErrors": [[469, "nameerrors"]], "PEP 626: Precise line numbers for debugging and other tools": [[469, "pep-626-precise-line-numbers-for-debugging-and-other-tools"]], "PEP 634: Structural Pattern Matching": [[469, "pep-634-structural-pattern-matching"]], "Syntax and operations": [[469, "syntax-and-operations"]], "Declarative approach": [[469, "declarative-approach"]], "Simple pattern: match to a literal": [[469, "simple-pattern-match-to-a-literal"]], "Behavior without the wildcard": [[469, "behavior-without-the-wildcard"]], "Patterns with a literal and variable": [[469, "patterns-with-a-literal-and-variable"]], "Patterns and classes": [[469, "patterns-and-classes"]], "Patterns with positional parameters": [[469, "patterns-with-positional-parameters"]], "Nested patterns": [[469, "nested-patterns"]], "Complex patterns and the wildcard": [[469, "complex-patterns-and-the-wildcard"]], "Guard": [[469, "guard"]], "Other Key Features": [[469, "other-key-features"]], "Optional EncodingWarning and encoding=\"locale\" option": [[469, "optional-encodingwarning-and-encoding-locale-option"]], "New Features Related to Type Hints": [[469, "new-features-related-to-type-hints"], [470, "new-features-related-to-type-hints"], [471, "new-features-related-to-type-hints"]], "PEP 604: New Type Union Operator": [[469, "pep-604-new-type-union-operator"]], "PEP 612: Parameter Specification Variables": [[469, "pep-612-parameter-specification-variables"]], "PEP 613: TypeAlias": [[469, "pep-613-typealias"]], "PEP 647: User-Defined Type Guards": [[469, "pep-647-user-defined-type-guards"]], "New Modules": [[469, "new-modules"], [470, "new-modules"], [471, "new-modules"], [473, "new-modules"], [474, "new-modules"], [475, "new-modules"], [476, "new-modules"], [477, "new-modules"], [478, "new-modules"], [479, "new-modules"]], "Improved Modules": [[469, "improved-modules"], [470, "improved-modules"], [471, "improved-modules"], [473, "improved-modules"], [474, "improved-modules"], [475, "improved-modules"], [476, "improved-modules"], [477, "improved-modules"], [478, "improved-modules"], [479, "improved-modules"]], "argparse": [[469, "argparse"], [474, "argparse"], [475, "argparse"], [477, "argparse"]], "array": [[469, "array"], [471, "array"], [473, "array"], [476, "array"]], "asynchat, asyncore, smtpd": [[469, "asynchat-asyncore-smtpd"]], "base64": [[469, "base64"], [473, "base64"], [474, "base64"]], "bdb": [[469, "bdb"]], "bisect": [[469, "bisect"]], "codecs": [[469, "codecs"], [473, "codecs"]], "collections.abc": [[469, "collections-abc"], [475, "collections-abc"], [479, "collections-abc"]], "contextlib": [[469, "contextlib"], [470, "contextlib"], [472, "contextlib"], [473, "contextlib"], [474, "contextlib"], [475, "contextlib"], [476, "contextlib"], [477, "contextlib"]], "curses": [[469, "curses"], [473, "curses"], [475, "curses"], [478, "curses"], [479, "curses"]], "dataclasses": [[469, "dataclasses"], [470, "dataclasses"], [477, "dataclasses"]], "Keyword-only fields": [[469, "keyword-only-fields"]], "distutils": [[469, "distutils"], [471, "distutils"], [475, "distutils"], [476, "distutils"], [476, "id2"], [477, "distutils"], [479, "distutils"]], "encodings": [[469, "encodings"], [476, "encodings"]], "enum": [[469, "enum"], [470, "enum"], [471, "enum"], [474, "enum"], [475, "enum"], [476, "enum"], [477, "enum"], [477, "id5"]], "fileinput": [[469, "fileinput"], [476, "fileinput"]], "faulthandler": [[469, "faulthandler"], [473, "faulthandler"], [475, "faulthandler"], [476, "faulthandler"]], "gc": [[469, "gc"], [473, "gc"], [474, "gc"], [477, "gc"], [478, "gc"], [479, "gc"]], "glob": [[469, "glob"], [474, "glob"], [475, "glob"]], "hashlib": [[469, "hashlib"], [470, "hashlib"], [471, "hashlib"], [472, "hashlib"], [474, "hashlib"], [476, "hashlib"], [479, "hashlib"]], "hmac": [[469, "hmac"], [473, "hmac"], [474, "hmac"], [477, "hmac"]], "IDLE and idlelib": [[469, "idle-and-idlelib"], [470, "whatsnew311-idle"], [478, "idle-and-idlelib"], [479, "idle-and-idlelib"]], "importlib.metadata": [[469, "importlib-metadata"]], "inspect": [[469, "inspect"], [470, "inspect"], [471, "inspect"], [472, "inspect"], [473, "inspect"], [474, "inspect"], [475, "inspect"], [476, "inspect"], [478, "inspect"], [479, "inspect"]], "itertools": [[469, "itertools"], [471, "itertools"], [472, "itertools"], [473, "itertools"], [477, "itertools"], [478, "itertools"]], "linecache": [[469, "linecache"], [475, "linecache"]], "os": [[469, "os"], [470, "os"], [471, "os"], [472, "os"], [473, "os"], [474, "os"], [475, "os"], [476, "os"], [476, "id4"], [477, "os"], [478, "os"], [479, "os"]], "os.path": [[469, "os-path"], [471, "os-path"], [478, "os-path"]], "pathlib": [[469, "pathlib"], [470, "pathlib"], [471, "pathlib"], [474, "pathlib"], [475, "pathlib"], [476, "pathlib"], [477, "pathlib"], [478, "pathlib"], [479, "pathlib"]], "platform": [[469, "platform"]], "pprint": [[469, "pprint"], [474, "pprint"], [478, "pprint"], [479, "pprint"]], "py_compile": [[469, "py-compile"], [477, "py-compile"], [478, "py-compile"]], "pyclbr": [[469, "pyclbr"]], "shelve": [[469, "shelve"], [474, "shelve"]], "statistics": [[469, "statistics"], [471, "statistics"], [474, "statistics"], [476, "statistics"], [478, "statistics"]], "site": [[469, "site"], [472, "site"], [476, "site"]], "socket": [[469, "socket"], [470, "socket"], [472, "socket"], [473, "socket"], [474, "socket"], [475, "socket"], [476, "socket"], [477, "socket"], [477, "id8"], [478, "socket"], [479, "socket"]], "ssl": [[469, "ssl"], [471, "ssl"], [472, "ssl"], [473, "ssl"], [474, "ssl"], [475, "ssl"], [476, "ssl"], [476, "id6"], [477, "ssl"], [477, "id9"], [478, "ssl"]], "sqlite3": [[469, "sqlite3"], [470, "sqlite3"], [471, "sqlite3"], [471, "id2"], [472, "sqlite3"], [473, "sqlite3"], [474, "sqlite3"], [475, "sqlite3"], [476, "sqlite3"], [477, "sqlite3"]], "sys": [[469, "sys"], [470, "sys"], [471, "sys"], [473, "sys"], [474, "sys"], [475, "sys"], [476, "sys"], [477, "sys"], [477, "id10"], [478, "sys"], [479, "sys"]], "_thread": [[469, "thread"]], "threading": [[469, "threading"], [470, "threading"], [471, "threading"], [472, "threading"], [473, "threading"], [474, "threading"], [475, "threading"], [477, "threading"], [478, "threading"]], "traceback": [[469, "traceback"], [470, "traceback"], [474, "traceback"], [475, "traceback"], [476, "traceback"]], "types": [[469, "types"], [471, "types"], [473, "types"], [474, "types"], [475, "types"], [477, "types"]], "typing": [[469, "typing"], [470, "typing"], [471, "typing"], [475, "typing"], [476, "typing"], [478, "typing"], [479, "typing"], [479, "id4"]], "unittest": [[469, "unittest"], [470, "unittest"], [471, "unittest"], [471, "id3"], [472, "unittest"], [473, "unittest"], [474, "unittest"], [475, "unittest"], [477, "unittest"], [478, "unittest"]], "urllib.parse": [[469, "urllib-parse"], [472, "urllib-parse"], [477, "urllib-parse"], [479, "urllib-parse"]], "xml": [[469, "xml"], [478, "xml"], [479, "xml"]], "zipimport": [[469, "zipimport"], [471, "zipimport"]], "Deprecated": [[469, "deprecated"], [469, "id3"], [470, "deprecated"], [470, "whatsnew311-c-api-deprecated"], [471, "deprecated"], [471, "id6"], [473, "deprecated"], [474, "deprecated"], [475, "deprecated"], [476, "deprecated"], [478, "deprecated"], [479, "deprecated"]], "Removed": [[469, "removed"], [469, "id4"], [470, "removed"], [470, "whatsnew311-c-api-removed"], [471, "removed"], [471, "id10"], [474, "removed"], [475, "removed"], [476, "removed"], [479, "removed"], [479, "id3"]], "Porting to Python 3.10": [[469, "porting-to-python-3-10"], [469, "id2"]], "Changes in the Python syntax": [[469, "changes-in-the-python-syntax"]], "Changes in the Python API": [[469, "changes-in-the-python-api"], [471, "changes-in-the-python-api"], [474, "changes-in-the-python-api"], [475, "changes-in-the-python-api"], [476, "changes-in-the-python-api"], [477, "changes-in-the-python-api"], [478, "changes-in-the-python-api"], [479, "changes-in-the-python-api"]], "Changes in the C API": [[469, "changes-in-the-c-api"], [474, "changes-in-the-c-api"], [475, "changes-in-the-c-api"], [476, "changes-in-the-c-api"], [477, "changes-in-the-c-api"], [478, "changes-in-the-c-api"], [479, "changes-in-the-c-api"]], "CPython bytecode changes": [[469, "cpython-bytecode-changes"], [470, "cpython-bytecode-changes"], [471, "cpython-bytecode-changes"], [476, "cpython-bytecode-changes"], [477, "cpython-bytecode-changes"], [478, "cpython-bytecode-changes"], [479, "cpython-bytecode-changes"]], "Build Changes": [[469, "build-changes"], [470, "build-changes"], [471, "build-changes"], [477, "build-changes"], [479, "build-changes"]], "C API Changes": [[469, "c-api-changes"], [470, "c-api-changes"], [471, "c-api-changes"], [477, "c-api-changes"], [479, "c-api-changes"]], "PEP 652: Maintaining the Stable ABI": [[469, "pep-652-maintaining-the-stable-abi"]], "What\u2019s New In Python 3.11": [[470, "what-s-new-in-python-3-11"]], "PEP 657: Fine-grained error locations in tracebacks": [[470, "pep-657-fine-grained-error-locations-in-tracebacks"]], "PEP 654: Exception Groups and except*": [[470, "pep-654-exception-groups-and-except"]], "PEP 678: Exceptions can be enriched with notes": [[470, "pep-678-exceptions-can-be-enriched-with-notes"]], "Windows py.exe launcher improvements": [[470, "windows-py-exe-launcher-improvements"]], "PEP 646: Variadic generics": [[470, "pep-646-variadic-generics"]], "PEP 655: Marking individual TypedDict items as required or not-required": [[470, "pep-655-marking-individual-typeddict-items-as-required-or-not-required"]], "PEP 673: Self type": [[470, "pep-673-self-type"]], "PEP 675: Arbitrary literal string type": [[470, "pep-675-arbitrary-literal-string-type"]], "PEP 681: Data class transforms": [[470, "pep-681-data-class-transforms"]], "PEP 563 may not be the future": [[470, "pep-563-may-not-be-the-future"]], "Other CPython Implementation Changes": [[470, "other-cpython-implementation-changes"], [477, "other-cpython-implementation-changes"]], "datetime": [[470, "datetime"], [473, "datetime"], [476, "datetime"], [477, "datetime"], [478, "datetime"], [479, "datetime"]], "fcntl": [[470, "fcntl"], [479, "fcntl"]], "fractions": [[470, "fractions"], [471, "fractions"]], "functools": [[470, "functools"], [472, "functools"], [473, "functools"], [474, "functools"], [475, "functools"], [477, "functools"], [478, "functools"]], "locale": [[470, "locale"], [471, "locale"], [475, "locale"], [477, "locale"], [477, "id7"]], "logging": [[470, "logging"], [472, "logging"], [473, "logging"], [474, "logging"], [475, "logging"], [476, "logging"], [477, "logging"], [478, "logging"]], "math": [[470, "math"], [471, "math"], [472, "math"], [473, "math"], [475, "math"], [476, "math"], [477, "math"], [478, "math"], [479, "math"]], "operator": [[470, "operator"], [474, "operator"], [475, "operator"]], "re": [[470, "re"], [473, "re"], [474, "re"], [475, "re"], [476, "re"], [476, "id5"], [477, "re"]], "shutil": [[470, "shutil"], [471, "shutil"], [472, "shutil"], [473, "shutil"], [474, "shutil"], [475, "shutil"], [478, "shutil"]], "string": [[470, "string"], [477, "string"]], "sysconfig": [[470, "sysconfig"], [472, "sysconfig"], [475, "sysconfig"]], "tempfile": [[470, "tempfile"], [471, "tempfile"], [472, "tempfile"], [473, "tempfile"]], "time": [[470, "time"], [473, "time"], [475, "time"], [476, "time"], [477, "time"], [478, "time"], [479, "time"]], "tkinter": [[470, "tkinter"], [471, "tkinter"], [475, "tkinter"], [476, "tkinter"], [476, "id7"], [477, "tkinter"], [478, "tkinter"]], "unicodedata": [[470, "unicodedata"], [471, "unicodedata"], [475, "unicodedata"], [476, "unicodedata"], [477, "unicodedata"], [478, "unicodedata"], [479, "unicodedata"]], "venv": [[470, "venv"], [474, "venv"], [476, "venv"], [476, "whatsnew36-venv"], [478, "venv"], [479, "venv"]], "warnings": [[470, "warnings"], [476, "warnings"], [477, "warnings"]], "zipfile": [[470, "zipfile"], [474, "zipfile"], [475, "zipfile"], [476, "zipfile"], [477, "zipfile"]], "Faster CPython": [[470, "faster-cpython"]], "Faster Startup": [[470, "faster-startup"]], "Frozen imports / Static code objects": [[470, "frozen-imports-static-code-objects"]], "Faster Runtime": [[470, "faster-runtime"]], "Cheaper, lazy Python frames": [[470, "cheaper-lazy-python-frames"]], "Inlined Python function calls": [[470, "inlined-python-function-calls"]], "PEP 659: Specializing Adaptive Interpreter": [[470, "pep-659-specializing-adaptive-interpreter"]], "Misc": [[470, "misc"]], "FAQ": [[470, "faq"]], "How should I write my code to utilize these speedups?": [[470, "how-should-i-write-my-code-to-utilize-these-speedups"]], "Will CPython 3.11 use more memory?": [[470, "will-cpython-3-11-use-more-memory"]], "I don\u2019t see any speedups in my workload. Why?": [[470, "i-don-t-see-any-speedups-in-my-workload-why"]], "Is there a JIT compiler?": [[470, "is-there-a-jit-compiler"]], "About": [[470, "about"]], "New opcodes": [[470, "new-opcodes"]], "Replaced opcodes": [[470, "replaced-opcodes"]], "Changed/removed opcodes": [[470, "changed-removed-opcodes"]], "Language/Builtins": [[470, "language-builtins"]], "Standard Library": [[470, "standard-library"]], "Pending Removal in Python 3.12": [[470, "pending-removal-in-python-3-12"], [470, "whatsnew311-c-api-pending-removal"]], "Porting to Python 3.11": [[470, "porting-to-python-3-11"], [470, "whatsnew311-c-api-porting"]], "Notable changes in 3.11.4": [[470, "notable-changes-in-3-11-4"]], "tarfile": [[470, "tarfile"], [472, "tarfile"], [473, "tarfile"], [474, "tarfile"], [475, "tarfile"], [478, "tarfile"]], "Notable changes in 3.11.5": [[470, "notable-changes-in-3-11-5"]], "What\u2019s New In Python 3.12": [[471, "what-s-new-in-python-3-12"]], "PEP 695: Type Parameter Syntax": [[471, "pep-695-type-parameter-syntax"]], "PEP 701: Syntactic formalization of f-strings": [[471, "pep-701-syntactic-formalization-of-f-strings"]], "PEP 684: A Per-Interpreter GIL": [[471, "pep-684-a-per-interpreter-gil"]], "PEP 669: Low impact monitoring for CPython": [[471, "pep-669-low-impact-monitoring-for-cpython"]], "PEP 688: Making the buffer protocol accessible in Python": [[471, "pep-688-making-the-buffer-protocol-accessible-in-python"]], "PEP 709: Comprehension inlining": [[471, "pep-709-comprehension-inlining"]], "Improved Error Messages": [[471, "improved-error-messages"]], "PEP 692: Using TypedDict for more precise **kwargs typing": [[471, "pep-692-using-typeddict-for-more-precise-kwargs-typing"]], "PEP 698: Override Decorator for Static Typing": [[471, "pep-698-override-decorator-for-static-typing"]], "calendar": [[471, "calendar"], [477, "calendar"]], "csv": [[471, "csv"], [472, "csv"], [475, "csv"], [478, "csv"]], "dis": [[471, "dis"], [472, "dis"], [474, "dis"], [477, "dis"]], "importlib.resources": [[471, "importlib-resources"], [477, "importlib-resources"]], "pdb": [[471, "pdb"], [472, "pdb"], [473, "pdb"], [474, "pdb"], [476, "pdb"], [477, "pdb"], [479, "pdb"]], "random": [[471, "random"], [472, "random"], [476, "random"], [479, "random"]], "tokenize": [[471, "tokenize"], [478, "tokenize"]], "uuid": [[471, "uuid"], [477, "uuid"]], "Demos and Tools": [[471, "demos-and-tools"], [478, "demos-and-tools"]], "Pending Removal in Python 3.13": [[471, "pending-removal-in-python-3-13"]], "Pending Removal in Python 3.14": [[471, "pending-removal-in-python-3-14"], [471, "id7"]], "Pending Removal in Python 3.15": [[471, "pending-removal-in-python-3-15"], [471, "id8"]], "Pending Removal in Future Versions": [[471, "pending-removal-in-future-versions"], [471, "id9"]], "asynchat and asyncore": [[471, "asynchat-and-asyncore"]], "configparser": [[471, "configparser"], [472, "configparser"], [475, "configparser"]], "ensurepip": [[471, "ensurepip"], [474, "ensurepip"]], "ftplib": [[471, "ftplib"], [473, "ftplib"], [479, "ftplib"]], "gzip": [[471, "gzip"], [475, "gzip"], [478, "gzip"]], "imp": [[471, "imp"]], "io": [[471, "io"], [472, "io"], [473, "io"], [475, "io"], [477, "io"], [478, "io"]], "smtpd": [[471, "smtpd"], [473, "smtpd"], [474, "smtpd"], [475, "smtpd"]], "webbrowser": [[471, "webbrowser"], [473, "webbrowser"]], "xml.etree.ElementTree": [[471, "xml-etree-elementtree"], [473, "xml-etree-elementtree"]], "Porting to Python 3.12": [[471, "porting-to-python-3-12"], [471, "id5"]], "What\u2019s New In Python 3.2": [[472, "what-s-new-in-python-3-2"]], "PEP 384: Defining a Stable ABI": [[472, "pep-384-defining-a-stable-abi"]], "PEP 389: Argparse Command Line Parsing Module": [[472, "pep-389-argparse-command-line-parsing-module"]], "PEP 391:  Dictionary Based Configuration for Logging": [[472, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3148:  The concurrent.futures module": [[472, "pep-3148-the-concurrent-futures-module"]], "PEP 3147:  PYC Repository Directories": [[472, "pep-3147-pyc-repository-directories"]], "PEP 3149: ABI Version Tagged .so Files": [[472, "pep-3149-abi-version-tagged-so-files"]], "PEP 3333: Python Web Server Gateway Interface v1.0.1": [[472, "pep-3333-python-web-server-gateway-interface-v1-0-1"]], "email": [[472, "email"], [473, "email"], [474, "email"], [475, "email"], [476, "email"]], "elementtree": [[472, "elementtree"]], "collections": [[472, "collections"], [473, "collections"], [474, "collections"], [475, "collections"], [476, "collections"], [477, "collections"], [477, "id3"], [478, "collections"]], "datetime and time": [[472, "datetime-and-time"]], "abc": [[472, "abc"], [473, "abc"], [474, "abc"]], "reprlib": [[472, "reprlib"]], "decimal and fractions": [[472, "decimal-and-fractions"]], "ftp": [[472, "ftp"]], "popen": [[472, "popen"]], "select": [[472, "select"], [473, "select"], [474, "select"]], "gzip and zipfile": [[472, "gzip-and-zipfile"]], "ast": [[472, "ast"], [476, "ast"], [478, "ast"], [479, "ast"]], "html": [[472, "html"], [473, "html"], [474, "html"]], "nntp": [[472, "nntp"]], "certificates": [[472, "certificates"]], "imaplib": [[472, "imaplib"], [473, "imaplib"], [475, "imaplib"], [479, "imaplib"]], "http.client": [[472, "http-client"], [475, "http-client"], [476, "http-client"], [477, "http-client"]], "poplib": [[472, "poplib"], [474, "poplib"], [475, "poplib"], [479, "poplib"]], "asyncore": [[472, "asyncore"], [476, "asyncore"]], "pydoc": [[472, "pydoc"], [473, "pydoc"], [474, "pydoc"], [476, "pydoc"], [477, "pydoc"], [479, "pydoc"]], "dbm": [[472, "dbm"], [474, "dbm"], [475, "dbm"], [476, "dbm"], [477, "dbm"], [477, "id4"]], "ctypes": [[472, "ctypes"], [478, "ctypes"]], "mailbox": [[472, "mailbox"]], "turtledemo": [[472, "turtledemo"]], "Codecs": [[472, "codecs"]], "Documentation": [[472, "documentation"]], "Code Repository": [[472, "code-repository"]], "Porting to Python 3.2": [[472, "porting-to-python-3-2"]], "What\u2019s New In Python 3.3": [[473, "what-s-new-in-python-3-3"]], "PEP 405: Virtual Environments": [[473, "pep-405-virtual-environments"]], "PEP 420: Implicit Namespace Packages": [[473, "pep-420-implicit-namespace-packages"]], "PEP 3118: New memoryview implementation and buffer protocol documentation": [[473, "pep-3118-new-memoryview-implementation-and-buffer-protocol-documentation"]], "API changes": [[473, "api-changes"], [473, "id2"]], "PEP 393: Flexible String Representation": [[473, "pep-393-flexible-string-representation"]], "Functionality": [[473, "functionality"]], "Performance and resource usage": [[473, "performance-and-resource-usage"]], "PEP 397: Python Launcher for Windows": [[473, "pep-397-python-launcher-for-windows"]], "PEP 3151: Reworking the OS and IO exception hierarchy": [[473, "pep-3151-reworking-the-os-and-io-exception-hierarchy"]], "PEP 380: Syntax for Delegating to a Subgenerator": [[473, "pep-380-syntax-for-delegating-to-a-subgenerator"]], "PEP 409: Suppressing exception context": [[473, "pep-409-suppressing-exception-context"]], "PEP 414: Explicit Unicode literals": [[473, "pep-414-explicit-unicode-literals"]], "PEP 3155: Qualified name for classes and functions": [[473, "pep-3155-qualified-name-for-classes-and-functions"]], "PEP 412: Key-Sharing Dictionary": [[473, "pep-412-key-sharing-dictionary"]], "PEP 362: Function Signature Object": [[473, "pep-362-function-signature-object"]], "PEP 421: Adding sys.implementation": [[473, "pep-421-adding-sys-implementation"]], "SimpleNamespace": [[473, "simplenamespace"]], "Using importlib as the Implementation of Import": [[473, "using-importlib-as-the-implementation-of-import"]], "New APIs": [[473, "new-apis"]], "Visible Changes": [[473, "visible-changes"]], "A Finer-Grained Import Lock": [[473, "a-finer-grained-import-lock"]], "Builtin functions and types": [[473, "builtin-functions-and-types"]], "ipaddress": [[473, "ipaddress"], [474, "ipaddress"], [475, "ipaddress"], [477, "ipaddress"], [479, "ipaddress"]], "lzma": [[473, "lzma"], [475, "lzma"]], "binascii": [[473, "binascii"], [476, "binascii"], [477, "binascii"]], "bz2": [[473, "bz2"], [475, "bz2"]], "crypt": [[473, "crypt"], [477, "crypt"]], "decimal": [[473, "decimal"], [476, "decimal"], [477, "decimal"]], "Policy Framework": [[473, "policy-framework"]], "Provisional Policy with New Header API": [[473, "provisional-policy-with-new-header-api"]], "Other API Changes": [[473, "other-api-changes"]], "http": [[473, "http"], [474, "http"], [475, "http"], [479, "http"]], "mmap": [[473, "mmap"], [474, "mmap"], [478, "mmap"]], "multiprocessing": [[473, "multiprocessing"], [474, "multiprocessing"], [475, "multiprocessing"], [476, "multiprocessing"], [477, "multiprocessing"], [478, "multiprocessing"], [479, "multiprocessing"]], "nntplib": [[473, "nntplib"], [479, "nntplib"]], "pickle": [[473, "pickle"], [474, "pickle"], [475, "pickle"], [476, "pickle"], [478, "pickle"]], "sched": [[473, "sched"]], "shlex": [[473, "shlex"], [476, "shlex"], [478, "shlex"]], "signal": [[473, "signal"], [475, "signal"], [477, "signal"], [479, "signal"]], "smtplib": [[473, "smtplib"], [474, "smtplib"], [475, "smtplib"], [479, "smtplib"]], "socketserver": [[473, "socketserver"], [476, "socketserver"], [477, "socketserver"]], "stat": [[473, "stat"], [474, "stat"]], "struct": [[473, "struct"], [474, "struct"], [476, "struct"]], "subprocess": [[473, "subprocess"], [474, "subprocess"], [475, "subprocess"], [476, "subprocess"], [477, "subprocess"]], "textwrap": [[473, "textwrap"], [474, "textwrap"]], "urllib": [[473, "urllib"], [474, "urllib"], [475, "urllib"]], "Unsupported Operating Systems": [[473, "unsupported-operating-systems"], [475, "unsupported-operating-systems"]], "Deprecated Python modules, functions and methods": [[473, "deprecated-python-modules-functions-and-methods"], [475, "deprecated-python-modules-functions-and-methods"], [476, "deprecated-python-modules-functions-and-methods"], [477, "deprecated-python-modules-functions-and-methods"]], "Deprecated functions and types of the C API": [[473, "deprecated-functions-and-types-of-the-c-api"], [476, "deprecated-functions-and-types-of-the-c-api"], [477, "deprecated-functions-and-types-of-the-c-api"]], "Deprecated features": [[473, "deprecated-features"]], "Porting to Python 3.3": [[473, "porting-to-python-3-3"]], "Porting Python code": [[473, "porting-python-code"]], "Porting C code": [[473, "porting-c-code"]], "Building C extensions": [[473, "building-c-extensions"]], "Command Line Switch Changes": [[473, "command-line-switch-changes"]], "What\u2019s New In Python 3.4": [[474, "what-s-new-in-python-3-4"]], "Summary \u2013 Release Highlights": [[474, "summary-release-highlights"], [477, "summary-release-highlights"]], "PEP 453: Explicit Bootstrapping of PIP in Python Installations": [[474, "pep-453-explicit-bootstrapping-of-pip-in-python-installations"]], "PEP 446: Newly Created File Descriptors Are Non-Inheritable": [[474, "pep-446-newly-created-file-descriptors-are-non-inheritable"]], "Improvements to Codec Handling": [[474, "improvements-to-codec-handling"]], "PEP 451: A ModuleSpec Type for the Import System": [[474, "pep-451-a-modulespec-type-for-the-import-system"]], "selectors": [[474, "selectors"], [475, "selectors"]], "tracemalloc": [[474, "tracemalloc"], [476, "tracemalloc"], [477, "tracemalloc"], [479, "tracemalloc"]], "aifc": [[474, "aifc"], [477, "aifc"]], "audioop": [[474, "audioop"]], "colorsys": [[474, "colorsys"]], "filecmp": [[474, "filecmp"]], "idlelib and IDLE": [[474, "idlelib-and-idle"], [475, "idlelib-and-idle"], [476, "idlelib-and-idle"], [477, "idlelib-and-idle"]], "marshal": [[474, "marshal"]], "plistlib": [[474, "plistlib"], [478, "plistlib"]], "pty": [[474, "pty"]], "resource": [[474, "resource"]], "sunau": [[474, "sunau"], [477, "sunau"]], "wave": [[474, "wave"], [477, "wave"]], "weakref": [[474, "weakref"], [478, "weakref"]], "xml.etree": [[474, "xml-etree"], [477, "xml-etree"]], "CPython Implementation Changes": [[474, "cpython-implementation-changes"]], "PEP 445: Customization of CPython Memory Allocators": [[474, "pep-445-customization-of-cpython-memory-allocators"]], "PEP 442: Safe Object Finalization": [[474, "pep-442-safe-object-finalization"]], "PEP 456: Secure and Interchangeable Hash Algorithm": [[474, "pep-456-secure-and-interchangeable-hash-algorithm"]], "PEP 436: Argument Clinic": [[474, "pep-436-argument-clinic"]], "Other Build and C API Changes": [[474, "other-build-and-c-api-changes"]], "Other Improvements": [[474, "other-improvements"], [476, "other-improvements"]], "Significant Optimizations": [[474, "significant-optimizations"]], "Deprecations in the Python API": [[474, "deprecations-in-the-python-api"]], "Deprecated Features": [[474, "deprecated-features"]], "Operating Systems No Longer Supported": [[474, "operating-systems-no-longer-supported"]], "API and Feature Removals": [[474, "api-and-feature-removals"], [475, "api-and-feature-removals"], [476, "api-and-feature-removals"], [477, "api-and-feature-removals"], [478, "api-and-feature-removals"]], "Code Cleanups": [[474, "code-cleanups"]], "Porting to Python 3.4": [[474, "porting-to-python-3-4"]], "Changes in \u2018python\u2019 Command Behavior": [[474, "changes-in-python-command-behavior"], [476, "changes-in-python-command-behavior"]], "Changed in 3.4.3": [[474, "changed-in-3-4-3"]], "What\u2019s New In Python 3.5": [[475, "what-s-new-in-python-3-5"]], "PEP 492 - Coroutines with async and await syntax": [[475, "pep-492-coroutines-with-async-and-await-syntax"]], "PEP 465 - A dedicated infix operator for matrix multiplication": [[475, "pep-465-a-dedicated-infix-operator-for-matrix-multiplication"]], "PEP 448 - Additional Unpacking Generalizations": [[475, "pep-448-additional-unpacking-generalizations"]], "PEP 461 - percent formatting support for bytes and bytearray": [[475, "pep-461-percent-formatting-support-for-bytes-and-bytearray"]], "PEP 484 - Type Hints": [[475, "pep-484-type-hints"]], "PEP 471 - os.scandir() function \u2013 a better and faster directory iterator": [[475, "pep-471-os-scandir-function-a-better-and-faster-directory-iterator"]], "PEP 475: Retry system calls failing with EINTR": [[475, "pep-475-retry-system-calls-failing-with-eintr"]], "PEP 479: Change StopIteration handling inside generators": [[475, "pep-479-change-stopiteration-handling-inside-generators"]], "PEP 485: A function for testing approximate equality": [[475, "pep-485-a-function-for-testing-approximate-equality"]], "PEP 486: Make the Python Launcher aware of virtual environments": [[475, "pep-486-make-the-python-launcher-aware-of-virtual-environments"]], "PEP 488: Elimination of PYO files": [[475, "pep-488-elimination-of-pyo-files"]], "PEP 489: Multi-phase extension module initialization": [[475, "pep-489-multi-phase-extension-module-initialization"]], "zipapp": [[475, "zipapp"], [477, "zipapp"]], "cgi": [[475, "cgi"]], "cmath": [[475, "cmath"], [476, "cmath"]], "code": [[475, "code"]], "compileall": [[475, "compileall"], [477, "compileall"], [479, "compileall"]], "concurrent.futures": [[475, "concurrent-futures"], [476, "concurrent-futures"], [477, "concurrent-futures"], [479, "concurrent-futures"]], "difflib": [[475, "difflib"]], "heapq": [[475, "heapq"]], "imghdr": [[475, "imghdr"]], "json": [[475, "json"], [476, "json"]], "readline": [[475, "readline"], [476, "readline"]], "sndhdr": [[475, "sndhdr"]], "Application-Layer Protocol Negotiation Support": [[475, "application-layer-protocol-negotiation-support"]], "Other Changes": [[475, "other-changes"]], "timeit": [[475, "timeit"], [476, "timeit"]], "unittest.mock": [[475, "unittest-mock"], [476, "unittest-mock"], [477, "unittest-mock"]], "wsgiref": [[475, "wsgiref"]], "xmlrpc": [[475, "xmlrpc"], [478, "xmlrpc"]], "xml.sax": [[475, "xml-sax"]], "Other module-level changes": [[475, "other-module-level-changes"]], "New Keywords": [[475, "new-keywords"], [476, "new-keywords"]], "Deprecated Python Behavior": [[475, "deprecated-python-behavior"], [477, "deprecated-python-behavior"]], "Porting to Python 3.5": [[475, "porting-to-python-3-5"]], "Changes in Python behavior": [[475, "changes-in-python-behavior"], [478, "changes-in-python-behavior"]], "Notable changes in Python 3.5.4": [[475, "notable-changes-in-python-3-5-4"]], "What\u2019s New In Python 3.6": [[476, "what-s-new-in-python-3-6"]], "PEP 498: Formatted string literals": [[476, "pep-498-formatted-string-literals"]], "PEP 526: Syntax for variable annotations": [[476, "pep-526-syntax-for-variable-annotations"]], "PEP 515: Underscores in Numeric Literals": [[476, "pep-515-underscores-in-numeric-literals"]], "PEP 525: Asynchronous Generators": [[476, "pep-525-asynchronous-generators"]], "PEP 530: Asynchronous Comprehensions": [[476, "pep-530-asynchronous-comprehensions"]], "PEP 487: Simpler customization of class creation": [[476, "pep-487-simpler-customization-of-class-creation"]], "PEP 487: Descriptor Protocol Enhancements": [[476, "pep-487-descriptor-protocol-enhancements"]], "PEP 519: Adding a file system path protocol": [[476, "pep-519-adding-a-file-system-path-protocol"]], "PEP 495: Local Time Disambiguation": [[476, "pep-495-local-time-disambiguation"]], "PEP 529: Change Windows filesystem encoding to UTF-8": [[476, "pep-529-change-windows-filesystem-encoding-to-utf-8"]], "PEP 528: Change Windows console encoding to UTF-8": [[476, "pep-528-change-windows-console-encoding-to-utf-8"]], "PEP 520: Preserving Class Attribute Definition Order": [[476, "pep-520-preserving-class-attribute-definition-order"]], "PEP 468: Preserving Keyword Argument Order": [[476, "pep-468-preserving-keyword-argument-order"]], "New dict implementation": [[476, "new-dict-implementation"]], "PEP 523: Adding a frame evaluation API to CPython": [[476, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "PYTHONMALLOC environment variable": [[476, "pythonmalloc-environment-variable"]], "DTrace and SystemTap probing support": [[476, "dtrace-and-systemtap-probing-support"]], "secrets": [[476, "secrets"]], "pickletools": [[476, "pickletools"]], "rlcompleter": [[476, "rlcompleter"]], "telnetlib": [[476, "telnetlib"]], "urllib.request": [[476, "urllib-request"]], "urllib.robotparser": [[476, "urllib-robotparser"]], "winreg": [[476, "winreg"]], "winsound": [[476, "winsound"]], "xmlrpc.client": [[476, "xmlrpc-client"]], "Deprecated Python behavior": [[476, "deprecated-python-behavior"]], "asynchat": [[476, "asynchat"]], "grp": [[476, "grp"]], "Deprecated Build Options": [[476, "deprecated-build-options"]], "Porting to Python 3.6": [[476, "porting-to-python-3-6"]], "Notable changes in Python 3.6.2": [[476, "notable-changes-in-python-3-6-2"]], "Notable changes in Python 3.6.4": [[476, "notable-changes-in-python-3-6-4"]], "Notable changes in Python 3.6.5": [[476, "notable-changes-in-python-3-6-5"]], "Notable changes in Python 3.6.7": [[476, "notable-changes-in-python-3-6-7"]], "Notable changes in Python 3.6.10": [[476, "notable-changes-in-python-3-6-10"]], "Notable changes in Python 3.6.13": [[476, "notable-changes-in-python-3-6-13"]], "What\u2019s New In Python 3.7": [[477, "what-s-new-in-python-3-7"]], "PEP 563: Postponed Evaluation of Annotations": [[477, "pep-563-postponed-evaluation-of-annotations"]], "PEP 538: Legacy C Locale Coercion": [[477, "pep-538-legacy-c-locale-coercion"]], "PEP 540: Forced UTF-8 Runtime Mode": [[477, "pep-540-forced-utf-8-runtime-mode"]], "PEP 553: Built-in breakpoint()": [[477, "pep-553-built-in-breakpoint"]], "PEP 539: New C API for Thread-Local Storage": [[477, "pep-539-new-c-api-for-thread-local-storage"]], "PEP 562: Customization of Access to Module Attributes": [[477, "pep-562-customization-of-access-to-module-attributes"]], "PEP 564: New Time Functions With Nanosecond Resolution": [[477, "pep-564-new-time-functions-with-nanosecond-resolution"]], "PEP 565: Show DeprecationWarning in __main__": [[477, "pep-565-show-deprecationwarning-in-main"]], "PEP 560: Core Support for typing module and Generic Types": [[477, "pep-560-core-support-for-typing-module-and-generic-types"]], "PEP 552: Hash-based .pyc Files": [[477, "pep-552-hash-based-pyc-files"]], "PEP 545: Python Documentation Translations": [[477, "pep-545-python-documentation-translations"]], "Python Development Mode (-X dev)": [[477, "python-development-mode-x-dev"]], "contextvars": [[477, "contextvars"]], "cProfile": [[477, "cprofile"], [478, "cprofile"]], "http.server": [[477, "http-server"]], "mimetypes": [[477, "mimetypes"]], "msilib": [[477, "msilib"]], "queue": [[477, "queue"]], "uu": [[477, "uu"]], "xmlrpc.server": [[477, "xmlrpc-server"]], "gettext": [[477, "gettext"], [478, "gettext"]], "macpath": [[477, "macpath"]], "Platform Support Removals": [[477, "platform-support-removals"]], "Module Removals": [[477, "module-removals"]], "Windows-only Changes": [[477, "windows-only-changes"], [477, "id12"]], "Porting to Python 3.7": [[477, "porting-to-python-3-7"]], "Changes in Python Behavior": [[477, "changes-in-python-behavior"]], "Other CPython implementation changes": [[477, "id13"]], "Notable changes in Python 3.7.1": [[477, "notable-changes-in-python-3-7-1"]], "Notable changes in Python 3.7.2": [[477, "notable-changes-in-python-3-7-2"]], "Notable changes in Python 3.7.6": [[477, "notable-changes-in-python-3-7-6"]], "Notable changes in Python 3.7.10": [[477, "notable-changes-in-python-3-7-10"]], "What\u2019s New In Python 3.8": [[478, "what-s-new-in-python-3-8"]], "Positional-only parameters": [[478, "positional-only-parameters"]], "Parallel filesystem cache for compiled bytecode files": [[478, "parallel-filesystem-cache-for-compiled-bytecode-files"]], "Debug build uses the same ABI as release build": [[478, "debug-build-uses-the-same-abi-as-release-build"]], "f-strings support = for self-documenting expressions and debugging": [[478, "f-strings-support-for-self-documenting-expressions-and-debugging"]], "PEP 578: Python Runtime Audit Hooks": [[478, "pep-578-python-runtime-audit-hooks"]], "PEP 587: Python Initialization Configuration": [[478, "pep-587-python-initialization-configuration"]], "PEP 590: Vectorcall: a fast calling protocol for CPython": [[478, "pep-590-vectorcall-a-fast-calling-protocol-for-cpython"]], "Pickle protocol 5 with out-of-band data buffers": [[478, "pickle-protocol-5-with-out-of-band-data-buffers"]], "builtins": [[478, "builtins"]], "json.tool": [[478, "json-tool"]], "Porting to Python 3.8": [[478, "porting-to-python-3-8"]], "Notable changes in Python 3.8.1": [[478, "notable-changes-in-python-3-8-1"]], "Notable changes in Python 3.8.8": [[478, "notable-changes-in-python-3-8-8"]], "Notable changes in Python 3.8.12": [[478, "notable-changes-in-python-3-8-12"]], "What\u2019s New In Python 3.9": [[479, "what-s-new-in-python-3-9"]], "You should check for DeprecationWarning in your code": [[479, "you-should-check-for-deprecationwarning-in-your-code"]], "Dictionary Merge & Update Operators": [[479, "dictionary-merge-update-operators"]], "New String Methods to Remove Prefixes and Suffixes": [[479, "new-string-methods-to-remove-prefixes-and-suffixes"]], "Type Hinting Generics in Standard Collections": [[479, "type-hinting-generics-in-standard-collections"]], "New Parser": [[479, "new-parser"]], "zoneinfo": [[479, "zoneinfo"]], "graphlib": [[479, "graphlib"]], "Porting to Python 3.9": [[479, "porting-to-python-3-9"], [479, "id2"]], "Notable changes in Python 3.9.1": [[479, "notable-changes-in-python-3-9-1"]], "macOS 11.0 (Big Sur) and Apple Silicon Mac support": [[479, "macos-11-0-big-sur-and-apple-silicon-mac-support"]], "Notable changes in Python 3.9.2": [[479, "notable-changes-in-python-3-9-2"]], "Changelog": [[480, "changelog"]], "What\u2019s New in Python": [[481, "what-s-new-in-python"]]}, "indexentries": {"pyobject_del (c function)": [[3, "c.PyObject_Del"]], "pyobject_init (c function)": [[3, "c.PyObject_Init"]], "pyobject_initvar (c function)": [[3, "c.PyObject_InitVar"]], "pyobject_new (c macro)": [[3, "c.PyObject_New"]], "pyobject_newvar (c macro)": [[3, "c.PyObject_NewVar"]], "_pyobject_new (c function)": [[3, "c._PyObject_New"]], "_pyobject_newvar (c function)": [[3, "c._PyObject_NewVar"]], "_py_nonestruct (c var)": [[3, "c._Py_NoneStruct"]], "py_major_version (c macro)": [[4, "c.PY_MAJOR_VERSION"]], "py_micro_version (c macro)": [[4, "c.PY_MICRO_VERSION"]], "py_minor_version (c macro)": [[4, "c.PY_MINOR_VERSION"]], "py_release_level (c macro)": [[4, "c.PY_RELEASE_LEVEL"]], "py_release_serial (c macro)": [[4, "c.PY_RELEASE_SERIAL"]], "py_version_hex (c macro)": [[4, "c.PY_VERSION_HEX"]], "py_version (c var)": [[4, "c.Py_Version"]], "pyarg_parse (c function)": [[5, "c.PyArg_Parse"]], "pyarg_parsetuple (c function)": [[5, "c.PyArg_ParseTuple"]], "pyarg_parsetupleandkeywords (c function)": [[5, "c.PyArg_ParseTupleAndKeywords"]], "pyarg_unpacktuple (c function)": [[5, "c.PyArg_UnpackTuple"]], "pyarg_vaparse (c function)": [[5, "c.PyArg_VaParse"]], "pyarg_vaparsetupleandkeywords (c function)": [[5, "c.PyArg_VaParseTupleAndKeywords"]], "pyarg_validatekeywordarguments (c function)": [[5, "c.PyArg_ValidateKeywordArguments"]], "py_buildvalue (c function)": [[5, "c.Py_BuildValue"]], "py_vabuildvalue (c function)": [[5, "c.Py_VaBuildValue"]], "pybool_check (c function)": [[6, "c.PyBool_Check"]], "pybool_fromlong (c function)": [[6, "c.PyBool_FromLong"]], "pybool_type (c var)": [[6, "c.PyBool_Type"]], "py_false (c var)": [[6, "c.Py_False"]], "py_return_false (c macro)": [[6, "c.Py_RETURN_FALSE"]], "py_return_true (c macro)": [[6, "c.Py_RETURN_TRUE"]], "py_true (c var)": [[6, "c.Py_True"]], "(see buffer protocol)": [[7, "index-0"]], "c-contiguous": [[7, "index-2"], [86, "index-10"]], "fortran contiguous": [[7, "index-2"], [86, "index-10"]], "pybuf_any_contiguous (c macro)": [[7, "c.PyBUF_ANY_CONTIGUOUS"]], "pybuf_contig (c macro)": [[7, "c.PyBUF_CONTIG"]], "pybuf_contig_ro (c macro)": [[7, "c.PyBUF_CONTIG_RO"]], "pybuf_c_contiguous (c macro)": [[7, "c.PyBUF_C_CONTIGUOUS"]], "pybuf_format (c macro)": [[7, "c.PyBUF_FORMAT"]], "pybuf_full (c macro)": [[7, "c.PyBUF_FULL"]], "pybuf_full_ro (c macro)": [[7, "c.PyBUF_FULL_RO"]], "pybuf_f_contiguous (c macro)": [[7, "c.PyBUF_F_CONTIGUOUS"]], "pybuf_indirect (c macro)": [[7, "c.PyBUF_INDIRECT"]], "pybuf_max_ndim (c macro)": [[7, "c.PyBUF_MAX_NDIM"]], "pybuf_nd (c macro)": [[7, "c.PyBUF_ND"]], "pybuf_records (c macro)": [[7, "c.PyBUF_RECORDS"]], "pybuf_records_ro (c macro)": [[7, "c.PyBUF_RECORDS_RO"]], "pybuf_simple (c macro)": [[7, "c.PyBUF_SIMPLE"]], "pybuf_strided (c macro)": [[7, "c.PyBUF_STRIDED"]], "pybuf_strided_ro (c macro)": [[7, "c.PyBUF_STRIDED_RO"]], "pybuf_strides (c macro)": [[7, "c.PyBUF_STRIDES"]], "pybuf_writable (c macro)": [[7, "c.PyBUF_WRITABLE"]], "pybufferprocs": [[7, "index-1"]], "pybuffer_fillcontiguousstrides (c function)": [[7, "c.PyBuffer_FillContiguousStrides"]], "pybuffer_fillinfo (c function)": [[7, "c.PyBuffer_FillInfo"]], "pybuffer_fromcontiguous (c function)": [[7, "c.PyBuffer_FromContiguous"]], "pybuffer_getpointer (c function)": [[7, "c.PyBuffer_GetPointer"]], "pybuffer_iscontiguous (c function)": [[7, "c.PyBuffer_IsContiguous"]], "pybuffer_release (c function)": [[7, "c.PyBuffer_Release"]], "pybuffer_sizefromformat (c function)": [[7, "c.PyBuffer_SizeFromFormat"]], "pybuffer_tocontiguous (c function)": [[7, "c.PyBuffer_ToContiguous"]], "pyobject_checkbuffer (c function)": [[7, "c.PyObject_CheckBuffer"]], "pyobject_copydata (c function)": [[7, "c.PyObject_CopyData"]], "pyobject_getbuffer (c function)": [[7, "c.PyObject_GetBuffer"]], "py_buffer (c type)": [[7, "c.Py_buffer"]], "py_buffer.buf (c member)": [[7, "c.Py_buffer.buf"]], "py_buffer.format (c member)": [[7, "c.Py_buffer.format"]], "py_buffer.internal (c member)": [[7, "c.Py_buffer.internal"]], "py_buffer.itemsize (c member)": [[7, "c.Py_buffer.itemsize"]], "py_buffer.len (c member)": [[7, "c.Py_buffer.len"]], "py_buffer.ndim (c member)": [[7, "c.Py_buffer.ndim"]], "py_buffer.obj (c member)": [[7, "c.Py_buffer.obj"]], "py_buffer.readonly (c member)": [[7, "c.Py_buffer.readonly"]], "py_buffer.shape (c member)": [[7, "c.Py_buffer.shape"]], "py_buffer.strides (c member)": [[7, "c.Py_buffer.strides"]], "py_buffer.suboffsets (c member)": [[7, "c.Py_buffer.suboffsets"]], "buffer interface": [[7, "index-0"]], "buffer object": [[7, "index-0"]], "buffer protocol": [[7, "index-0"], [341, "index-31"], [341, "index-39"]], "contiguous": [[7, "index-2"], [86, "term-contiguous"]], "pybytearrayobject (c type)": [[8, "c.PyByteArrayObject"]], "pybytearray_as_string (c function)": [[8, "c.PyByteArray_AS_STRING"]], "pybytearray_asstring (c function)": [[8, "c.PyByteArray_AsString"]], "pybytearray_check (c function)": [[8, "c.PyByteArray_Check"]], "pybytearray_checkexact (c function)": [[8, "c.PyByteArray_CheckExact"]], "pybytearray_concat (c function)": [[8, "c.PyByteArray_Concat"]], "pybytearray_fromobject (c function)": [[8, "c.PyByteArray_FromObject"]], "pybytearray_fromstringandsize (c function)": [[8, "c.PyByteArray_FromStringAndSize"]], "pybytearray_get_size (c function)": [[8, "c.PyByteArray_GET_SIZE"]], "pybytearray_resize (c function)": [[8, "c.PyByteArray_Resize"]], "pybytearray_size (c function)": [[8, "c.PyByteArray_Size"]], "pybytearray_type (c var)": [[8, "c.PyByteArray_Type"]], "bytearray": [[8, "index-0"], [341, "index-23"], [341, "index-40"], [341, "index-42"], [341, "index-43"], [341, "index-45"], [425, "index-26"]], "object": [[8, "index-0"], [9, "index-0"], [11, "index-0"], [13, "index-0"], [15, "index-0"], [16, "index-0"], [16, "index-1"], [16, "index-2"], [22, "index-0"], [24, "index-0"], [25, "index-0"], [27, "index-0"], [34, "index-3"], [37, "index-0"], [38, "index-0"], [42, "index-0"], [43, "index-0"], [43, "index-1"], [44, "index-0"], [45, "index-0"], [54, "index-0"], [59, "index-0"], [60, "index-0"], [74, "index-0"], [86, "term-object"], [222, "index-12"], [271, "index-1"], [334, "index-0"], [341, "index-11"], [341, "index-19"], [341, "index-22"], [341, "index-23"], [341, "index-25"], [341, "index-26"], [341, "index-27"], [341, "index-28"], [341, "index-29"], [341, "index-40"], [341, "index-41"], [341, "index-42"], [341, "index-51"], [341, "index-52"], [341, "index-56"], [341, "index-59"], [341, "index-61"], [341, "index-62"], [341, "index-8"], [349, "index-8"], [378, "index-0"], [424, "index-11"], [424, "index-28"], [424, "index-42"], [424, "index-6"], [425, "index-0"], [425, "index-10"], [425, "index-12"], [425, "index-13"], [425, "index-14"], [425, "index-15"], [425, "index-17"], [425, "index-20"], [425, "index-22"], [425, "index-25"], [425, "index-27"], [425, "index-28"], [425, "index-29"], [425, "index-30"], [425, "index-31"], [425, "index-33"], [425, "index-34"], [425, "index-37"], [425, "index-42"], [425, "index-43"], [425, "index-44"], [425, "index-47"], [425, "index-51"], [425, "index-53"], [425, "index-57"], [425, "index-59"], [425, "index-6"], [425, "index-63"], [425, "index-66"], [425, "index-7"], [425, "index-8"], [425, "index-80"], [425, "index-9"], [425, "index-99"], [427, "index-15"], [427, "index-16"], [427, "index-17"], [427, "index-20"], [427, "index-22"], [427, "index-31"], [427, "index-35"], [427, "index-40"], [427, "index-42"], [427, "index-45"], [427, "index-47"], [427, "index-52"], [427, "index-53"], [427, "index-54"], [427, "index-55"], [427, "index-7"], [427, "index-80"], [427, "index-92"], [433, "index-10"], [433, "index-11"], [433, "index-28"], [433, "index-3"], [433, "index-4"], [433, "index-9"], [437, "index-0"], [443, "index-0"]], "pybytesobject (c type)": [[9, "c.PyBytesObject"]], "pybytes_as_string (c function)": [[9, "c.PyBytes_AS_STRING"]], "pybytes_asstring (c function)": [[9, "c.PyBytes_AsString"]], "pybytes_asstringandsize (c function)": [[9, "c.PyBytes_AsStringAndSize"]], "pybytes_check (c function)": [[9, "c.PyBytes_Check"]], "pybytes_checkexact (c function)": [[9, "c.PyBytes_CheckExact"]], "pybytes_concat (c function)": [[9, "c.PyBytes_Concat"]], "pybytes_concatanddel (c function)": [[9, "c.PyBytes_ConcatAndDel"]], "pybytes_fromformat (c function)": [[9, "c.PyBytes_FromFormat"]], "pybytes_fromformatv (c function)": [[9, "c.PyBytes_FromFormatV"]], "pybytes_fromobject (c function)": [[9, "c.PyBytes_FromObject"]], "pybytes_fromstring (c function)": [[9, "c.PyBytes_FromString"]], "pybytes_fromstringandsize (c function)": [[9, "c.PyBytes_FromStringAndSize"]], "pybytes_get_size (c function)": [[9, "c.PyBytes_GET_SIZE"]], "pybytes_size (c function)": [[9, "c.PyBytes_Size"]], "pybytes_type (c var)": [[9, "c.PyBytes_Type"]], "_pybytes_resize (c function)": [[9, "c._PyBytes_Resize"]], "bytes": [[9, "index-0"], [48, "index-3"], [341, "index-31"], [341, "index-40"], [341, "index-41"], [341, "index-43"], [341, "index-45"], [425, "index-21"], [425, "index-77"]], "pep 590": [[10, "index-0"], [469, "index-33"], [470, "index-37"], [478, "index-7"], [479, "index-18"], [479, "index-8"]], "py_vectorcall_arguments_offset (c macro)": [[10, "c.PY_VECTORCALL_ARGUMENTS_OFFSET"]], "pycallable_check (c function)": [[10, "c.PyCallable_Check"]], "pyobject_call (c function)": [[10, "c.PyObject_Call"]], "pyobject_callfunction (c function)": [[10, "c.PyObject_CallFunction"]], "pyobject_callfunctionobjargs (c function)": [[10, "c.PyObject_CallFunctionObjArgs"]], "pyobject_callmethod (c function)": [[10, "c.PyObject_CallMethod"]], "pyobject_callmethodnoargs (c function)": [[10, "c.PyObject_CallMethodNoArgs"]], "pyobject_callmethodobjargs (c function)": [[10, "c.PyObject_CallMethodObjArgs"]], "pyobject_callmethodonearg (c function)": [[10, "c.PyObject_CallMethodOneArg"]], "pyobject_callnoargs (c function)": [[10, "c.PyObject_CallNoArgs"]], "pyobject_callobject (c function)": [[10, "c.PyObject_CallObject"]], "pyobject_callonearg (c function)": [[10, "c.PyObject_CallOneArg"]], "pyobject_vectorcall (c function)": [[10, "c.PyObject_Vectorcall"]], "pyobject_vectorcalldict (c function)": [[10, "c.PyObject_VectorcallDict"]], "pyobject_vectorcallmethod (c function)": [[10, "c.PyObject_VectorcallMethod"]], "pyvectorcall_call (c function)": [[10, "c.PyVectorcall_Call"]], "pyvectorcall_function (c function)": [[10, "c.PyVectorcall_Function"]], "pyvectorcall_nargs (c function)": [[10, "c.PyVectorcall_NARGS"]], "python enhancement proposals": [[10, "index-0"], [23, "index-5"], [26, "index-0"], [30, "index-3"], [32, "index-10"], [32, "index-39"], [32, "index-40"], [32, "index-41"], [32, "index-47"], [32, "index-49"], [32, "index-8"], [33, "index-0"], [33, "index-17"], [33, "index-33"], [33, "index-34"], [33, "index-37"], [33, "index-38"], [33, "index-7"], [34, "index-0"], [34, "index-1"], [34, "index-10"], [34, "index-2"], [44, "index-6"], [44, "index-7"], [44, "index-8"], [48, "index-4"], [48, "index-5"], [56, "index-0"], [58, "index-0"], [62, "index-3"], [62, "index-4"], [62, "index-5"], [63, "index-0"], [63, "index-1"], [63, "index-2"], [63, "index-3"], [63, "index-4"], [63, "index-5"], [65, "index-3"], [67, "index-23"], [70, "index-1"], [72, "index-0"], [74, "index-2"], [77, "index-0"], [79, "index-0"], [79, "index-1"], [79, "index-2"], [84, "index-0"], [84, "index-2"], [84, "index-3"], [85, "index-0"], [86, "index-0"], [86, "index-1"], [86, "index-11"], [86, "index-12"], [86, "index-13"], [86, "index-14"], [86, "index-15"], [86, "index-16"], [86, "index-17"], [86, "index-18"], [86, "index-2"], [86, "index-21"], [86, "index-22"], [86, "index-23"], [86, "index-24"], [86, "index-25"], [86, "index-27"], [86, "index-28"], [86, "index-29"], [86, "index-3"], [86, "index-30"], [86, "index-31"], [86, "index-32"], [86, "index-33"], [86, "index-35"], [86, "index-36"], [86, "index-37"], [86, "index-38"], [86, "index-39"], [86, "index-4"], [86, "index-40"], [86, "index-5"], [86, "index-6"], [86, "index-7"], [86, "index-8"], [86, "index-9"], [87, "index-0"], [94, "index-0"], [94, "index-1"], [94, "index-2"], [106, "index-0"], [109, "index-0"], [109, "index-1"], [110, "index-0"], [110, "index-1"], [110, "index-10"], [110, "index-11"], [110, "index-2"], [110, "index-3"], [110, "index-4"], [110, "index-5"], [110, "index-6"], [110, "index-7"], [110, "index-8"], [110, "index-9"], [113, "index-0"], [113, "index-1"], [114, "index-1"], [119, "index-2"], [119, "index-3"], [119, "index-4"], [119, "index-5"], [119, "index-6"], [119, "index-7"], [123, "index-0"], [123, "index-1"], [123, "index-2"], [126, "index-0"], [138, "index-0"], [139, "index-1"], [148, "index-1"], [149, "index-1"], [150, "index-1"], [151, "index-0"], [155, "index-2"], [155, "index-5"], [157, "index-0"], [157, "index-1"], [157, "index-2"], [157, "index-3"], [158, "index-0"], [158, "index-1"], [158, "index-2"], [158, "index-3"], [158, "index-4"], [158, "index-5"], [160, "index-0"], [160, "index-2"], [160, "index-3"], [163, "index-0"], [166, "index-0"], [167, "index-0"], [170, "index-1"], [172, "index-2"], [178, "index-0"], [178, "index-1"], [178, "index-2"], [188, "index-0"], [207, "index-0"], [210, "index-10"], [210, "index-11"], [210, "index-12"], [210, "index-3"], [210, "index-6"], [210, "index-7"], [210, "index-8"], [210, "index-9"], [218, "index-0"], [222, "index-10"], [222, "index-14"], [222, "index-15"], [222, "index-9"], [223, "index-0"], [224, "index-0"], [244, "index-7"], [246, "index-0"], [247, "index-0"], [247, "index-1"], [247, "index-10"], [247, "index-11"], [247, "index-12"], [247, "index-13"], [247, "index-14"], [247, "index-16"], [247, "index-17"], [247, "index-18"], [247, "index-19"], [247, "index-2"], [247, "index-20"], [247, "index-21"], [247, "index-22"], [247, "index-23"], [247, "index-24"], [247, "index-25"], [247, "index-26"], [247, "index-3"], [247, "index-4"], [247, "index-5"], [247, "index-6"], [247, "index-7"], [247, "index-8"], [247, "index-9"], [248, "index-0"], [252, "index-0"], [252, "index-1"], [252, "index-2"], [252, "index-3"], [255, "index-1"], [255, "index-2"], [262, "index-1"], [263, "index-6"], [263, "index-7"], [264, "index-1"], [269, "index-0"], [272, "index-0"], [278, "index-1"], [284, "index-0"], [285, "index-1"], [286, "index-0"], [290, "index-0"], [290, "index-22"], [290, "index-24"], [290, "index-25"], [290, "index-27"], [290, "index-44"], [290, "index-5"], [290, "index-53"], [290, "index-6"], [290, "index-7"], [292, "index-0"], [293, "index-1"], [296, "index-2"], [296, "index-3"], [296, "index-4"], [296, "index-8"], [298, "index-0"], [299, "index-0"], [299, "index-1"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [299, "index-5"], [299, "index-6"], [299, "index-7"], [308, "index-1"], [308, "index-2"], [308, "index-4"], [308, "index-5"], [319, "index-0"], [321, "index-1"], [321, "index-2"], [321, "index-3"], [321, "index-5"], [321, "index-6"], [321, "index-7"], [321, "index-8"], [323, "index-0"], [325, "index-0"], [325, "index-3"], [325, "index-4"], [325, "index-5"], [325, "index-6"], [325, "index-7"], [326, "index-0"], [329, "index-2"], [330, "index-0"], [330, "index-1"], [331, "index-9"], [333, "index-1"], [334, "index-1"], [334, "index-10"], [334, "index-11"], [334, "index-12"], [334, "index-13"], [334, "index-2"], [334, "index-4"], [334, "index-5"], [334, "index-7"], [334, "index-8"], [334, "index-9"], [336, "index-0"], [337, "index-0"], [337, "index-1"], [337, "index-10"], [337, "index-11"], [337, "index-12"], [337, "index-2"], [337, "index-3"], [337, "index-4"], [337, "index-5"], [337, "index-8"], [337, "index-9"], [338, "index-2"], [341, "index-38"], [341, "index-48"], [341, "index-49"], [341, "index-50"], [341, "index-57"], [341, "index-58"], [341, "index-60"], [342, "index-0"], [342, "index-1"], [342, "index-11"], [342, "index-12"], [342, "index-6"], [342, "index-9"], [345, "index-0"], [346, "index-0"], [349, "index-0"], [349, "index-1"], [349, "index-12"], [349, "index-13"], [349, "index-14"], [349, "index-15"], [349, "index-16"], [349, "index-19"], [349, "index-20"], [349, "index-25"], [349, "index-26"], [349, "index-30"], [349, "index-31"], [349, "index-32"], [349, "index-34"], [349, "index-9"], [350, "index-0"], [355, "index-0"], [356, "index-1"], [359, "index-3"], [359, "index-4"], [363, "index-8"], [375, "index-0"], [375, "index-1"], [382, "index-0"], [382, "index-1"], [382, "index-2"], [382, "index-3"], [382, "index-5"], [382, "index-6"], [383, "index-0"], [383, "index-1"], [383, "index-10"], [383, "index-100"], [383, "index-11"], [383, "index-12"], [383, "index-13"], [383, "index-14"], [383, "index-15"], [383, "index-16"], [383, "index-17"], [383, "index-18"], [383, "index-19"], [383, "index-2"], [383, "index-20"], [383, "index-21"], [383, "index-22"], [383, "index-23"], [383, "index-24"], [383, "index-25"], [383, "index-26"], [383, "index-27"], [383, "index-28"], [383, "index-29"], [383, "index-3"], [383, "index-30"], [383, "index-31"], [383, "index-32"], [383, "index-33"], [383, "index-34"], [383, "index-35"], [383, "index-36"], [383, "index-37"], [383, "index-38"], [383, "index-39"], [383, "index-4"], [383, "index-40"], [383, "index-41"], [383, "index-42"], [383, "index-43"], [383, "index-44"], [383, "index-45"], [383, "index-46"], [383, "index-47"], [383, "index-48"], [383, "index-49"], [383, "index-5"], [383, "index-50"], [383, "index-51"], [383, "index-52"], [383, "index-53"], [383, "index-54"], [383, "index-55"], [383, "index-56"], [383, "index-57"], [383, "index-58"], [383, "index-59"], [383, "index-6"], [383, "index-60"], [383, "index-61"], [383, "index-62"], [383, "index-63"], [383, "index-64"], [383, "index-65"], [383, "index-66"], [383, "index-67"], [383, "index-68"], [383, "index-69"], [383, "index-7"], [383, "index-70"], [383, "index-71"], [383, "index-72"], [383, "index-73"], [383, "index-74"], [383, "index-75"], [383, "index-76"], [383, "index-77"], [383, "index-78"], [383, "index-79"], [383, "index-8"], [383, "index-80"], [383, "index-81"], [383, "index-82"], [383, "index-83"], [383, "index-84"], [383, "index-85"], [383, "index-86"], [383, "index-87"], [383, "index-88"], [383, "index-89"], [383, "index-9"], [383, "index-90"], [383, "index-91"], [383, "index-92"], [383, "index-93"], [383, "index-94"], [383, "index-95"], [383, "index-96"], [383, "index-97"], [383, "index-98"], [383, "index-99"], [394, "index-0"], [396, "index-1"], [399, "index-0"], [399, "index-1"], [399, "index-2"], [404, "index-0"], [404, "index-1"], [404, "index-11"], [404, "index-12"], [404, "index-13"], [404, "index-14"], [404, "index-15"], [404, "index-16"], [404, "index-17"], [404, "index-18"], [404, "index-2"], [404, "index-3"], [404, "index-4"], [404, "index-6"], [404, "index-7"], [404, "index-8"], [404, "index-9"], [405, "index-1"], [420, "index-0"], [420, "index-1"], [420, "index-2"], [422, "index-0"], [422, "index-1"], [424, "index-17"], [424, "index-19"], [424, "index-20"], [424, "index-24"], [424, "index-25"], [424, "index-26"], [424, "index-30"], [424, "index-33"], [424, "index-36"], [424, "index-37"], [424, "index-38"], [424, "index-39"], [424, "index-40"], [424, "index-41"], [424, "index-44"], [424, "index-45"], [424, "index-46"], [424, "index-47"], [424, "index-52"], [425, "index-107"], [425, "index-108"], [425, "index-109"], [425, "index-111"], [425, "index-62"], [425, "index-84"], [425, "index-85"], [425, "index-87"], [425, "index-90"], [425, "index-93"], [425, "index-94"], [425, "index-95"], [425, "index-96"], [426, "index-11"], [426, "index-12"], [427, "index-14"], [427, "index-19"], [427, "index-21"], [427, "index-26"], [427, "index-27"], [427, "index-28"], [427, "index-29"], [427, "index-30"], [427, "index-51"], [427, "index-79"], [427, "index-87"], [427, "index-89"], [427, "index-94"], [428, "index-0"], [429, "index-1"], [429, "index-11"], [429, "index-12"], [429, "index-13"], [429, "index-14"], [429, "index-15"], [429, "index-19"], [429, "index-2"], [429, "index-20"], [429, "index-21"], [429, "index-22"], [429, "index-23"], [429, "index-24"], [429, "index-25"], [429, "index-26"], [429, "index-27"], [429, "index-6"], [432, "index-1"], [432, "index-11"], [432, "index-12"], [432, "index-21"], [432, "index-26"], [433, "index-13"], [433, "index-16"], [433, "index-17"], [433, "index-41"], [433, "index-42"], [433, "index-46"], [433, "index-48"], [438, "index-1"], [438, "index-10"], [438, "index-7"], [438, "index-8"], [447, "index-3"], [452, "index-0"], [452, "index-10"], [452, "index-11"], [452, "index-15"], [452, "index-37"], [452, "index-38"], [452, "index-40"], [452, "index-43"], [452, "index-7"], [452, "index-9"], [453, "index-0"], [453, "index-1"], [453, "index-3"], [454, "index-0"], [458, "index-0"], [458, "index-16"], [458, "index-17"], [458, "index-19"], [458, "index-21"], [458, "index-38"], [459, "index-0"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [460, "index-0"], [460, "index-1"], [460, "index-10"], [460, "index-12"], [460, "index-13"], [460, "index-14"], [460, "index-15"], [460, "index-16"], [460, "index-17"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [460, "index-7"], [460, "index-8"], [460, "index-9"], [461, "index-0"], [461, "index-1"], [461, "index-10"], [461, "index-11"], [461, "index-12"], [461, "index-13"], [461, "index-14"], [461, "index-15"], [461, "index-16"], [461, "index-2"], [461, "index-22"], [461, "index-3"], [461, "index-4"], [461, "index-5"], [461, "index-6"], [461, "index-7"], [461, "index-8"], [461, "index-9"], [462, "index-0"], [462, "index-1"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [462, "index-14"], [462, "index-15"], [462, "index-16"], [462, "index-17"], [462, "index-18"], [462, "index-19"], [462, "index-2"], [462, "index-20"], [462, "index-21"], [462, "index-22"], [462, "index-23"], [462, "index-3"], [462, "index-4"], [462, "index-5"], [462, "index-6"], [462, "index-7"], [462, "index-9"], [463, "index-0"], [463, "index-1"], [463, "index-10"], [463, "index-11"], [463, "index-12"], [463, "index-13"], [463, "index-14"], [463, "index-15"], [463, "index-16"], [463, "index-17"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [463, "index-5"], [463, "index-6"], [463, "index-8"], [463, "index-9"], [464, "index-0"], [464, "index-1"], [464, "index-10"], [464, "index-11"], [464, "index-12"], [464, "index-13"], [464, "index-14"], [464, "index-15"], [464, "index-16"], [464, "index-17"], [464, "index-18"], [464, "index-19"], [464, "index-2"], [464, "index-21"], [464, "index-24"], [464, "index-25"], [464, "index-26"], [464, "index-27"], [464, "index-28"], [464, "index-29"], [464, "index-3"], [464, "index-30"], [464, "index-31"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [464, "index-7"], [464, "index-8"], [464, "index-9"], [465, "index-0"], [465, "index-1"], [465, "index-10"], [465, "index-11"], [465, "index-12"], [465, "index-14"], [465, "index-15"], [465, "index-16"], [465, "index-17"], [465, "index-18"], [465, "index-19"], [465, "index-2"], [465, "index-25"], [465, "index-3"], [465, "index-7"], [465, "index-8"], [465, "index-9"], [466, "index-0"], [466, "index-16"], [466, "index-17"], [466, "index-18"], [466, "index-19"], [466, "index-2"], [466, "index-20"], [466, "index-21"], [466, "index-22"], [466, "index-23"], [466, "index-24"], [466, "index-25"], [466, "index-26"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [466, "index-7"], [467, "index-0"], [467, "index-1"], [467, "index-10"], [467, "index-11"], [467, "index-12"], [467, "index-13"], [467, "index-14"], [467, "index-15"], [467, "index-16"], [467, "index-17"], [467, "index-18"], [467, "index-19"], [467, "index-2"], [467, "index-20"], [467, "index-21"], [467, "index-22"], [467, "index-23"], [467, "index-24"], [467, "index-25"], [467, "index-26"], [467, "index-27"], [467, "index-28"], [467, "index-29"], [467, "index-3"], [467, "index-30"], [467, "index-31"], [467, "index-32"], [467, "index-33"], [467, "index-34"], [467, "index-35"], [467, "index-4"], [467, "index-5"], [467, "index-6"], [467, "index-7"], [467, "index-8"], [467, "index-9"], [468, "index-0"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [469, "index-0"], [469, "index-1"], [469, "index-10"], [469, "index-11"], [469, "index-12"], [469, "index-13"], [469, "index-14"], [469, "index-15"], [469, "index-16"], [469, "index-17"], [469, "index-19"], [469, "index-2"], [469, "index-20"], [469, "index-21"], [469, "index-22"], [469, "index-23"], [469, "index-24"], [469, "index-25"], [469, "index-26"], [469, "index-27"], [469, "index-28"], [469, "index-29"], [469, "index-3"], [469, "index-30"], [469, "index-31"], [469, "index-32"], [469, "index-33"], [469, "index-34"], [469, "index-35"], [469, "index-36"], [469, "index-37"], [469, "index-38"], [469, "index-4"], [469, "index-5"], [469, "index-6"], [469, "index-7"], [469, "index-8"], [469, "index-9"], [470, "index-0"], [470, "index-10"], [470, "index-11"], [470, "index-12"], [470, "index-13"], [470, "index-14"], [470, "index-15"], [470, "index-16"], [470, "index-17"], [470, "index-18"], [470, "index-19"], [470, "index-2"], [470, "index-20"], [470, "index-22"], [470, "index-23"], [470, "index-24"], [470, "index-25"], [470, "index-26"], [470, "index-27"], [470, "index-28"], [470, "index-29"], [470, "index-3"], [470, "index-30"], [470, "index-31"], [470, "index-32"], [470, "index-33"], [470, "index-34"], [470, "index-35"], [470, "index-36"], [470, "index-37"], [470, "index-38"], [470, "index-39"], [470, "index-4"], [470, "index-40"], [470, "index-41"], [470, "index-5"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [471, "index-0"], [471, "index-1"], [471, "index-10"], [471, "index-11"], [471, "index-12"], [471, "index-13"], [471, "index-14"], [471, "index-15"], [471, "index-16"], [471, "index-17"], [471, "index-18"], [471, "index-19"], [471, "index-2"], [471, "index-20"], [471, "index-21"], [471, "index-22"], [471, "index-24"], [471, "index-25"], [471, "index-26"], [471, "index-27"], [471, "index-28"], [471, "index-29"], [471, "index-3"], [471, "index-30"], [471, "index-31"], [471, "index-32"], [471, "index-33"], [471, "index-34"], [471, "index-35"], [471, "index-36"], [471, "index-37"], [471, "index-38"], [471, "index-39"], [471, "index-4"], [471, "index-40"], [471, "index-41"], [471, "index-42"], [471, "index-43"], [471, "index-44"], [471, "index-45"], [471, "index-46"], [471, "index-48"], [471, "index-5"], [471, "index-6"], [471, "index-7"], [471, "index-8"], [471, "index-9"], [472, "index-0"], [472, "index-1"], [472, "index-14"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-9"], [473, "index-0"], [473, "index-1"], [473, "index-10"], [473, "index-12"], [473, "index-13"], [473, "index-14"], [473, "index-15"], [473, "index-16"], [473, "index-17"], [473, "index-18"], [473, "index-19"], [473, "index-2"], [473, "index-20"], [473, "index-21"], [473, "index-22"], [473, "index-25"], [473, "index-28"], [473, "index-29"], [473, "index-3"], [473, "index-30"], [473, "index-31"], [473, "index-32"], [473, "index-33"], [473, "index-34"], [473, "index-36"], [473, "index-37"], [473, "index-38"], [473, "index-4"], [473, "index-5"], [473, "index-6"], [473, "index-7"], [473, "index-8"], [473, "index-9"], [474, "index-0"], [474, "index-1"], [474, "index-10"], [474, "index-11"], [474, "index-12"], [474, "index-13"], [474, "index-14"], [474, "index-15"], [474, "index-16"], [474, "index-17"], [474, "index-18"], [474, "index-19"], [474, "index-2"], [474, "index-20"], [474, "index-21"], [474, "index-22"], [474, "index-23"], [474, "index-24"], [474, "index-25"], [474, "index-26"], [474, "index-27"], [474, "index-28"], [474, "index-29"], [474, "index-3"], [474, "index-30"], [474, "index-31"], [474, "index-32"], [474, "index-33"], [474, "index-34"], [474, "index-35"], [474, "index-36"], [474, "index-37"], [474, "index-38"], [474, "index-39"], [474, "index-4"], [474, "index-42"], [474, "index-43"], [474, "index-44"], [474, "index-45"], [474, "index-46"], [474, "index-47"], [474, "index-48"], [474, "index-49"], [474, "index-5"], [474, "index-51"], [474, "index-52"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [474, "index-9"], [475, "index-0"], [475, "index-1"], [475, "index-10"], [475, "index-11"], [475, "index-12"], [475, "index-13"], [475, "index-14"], [475, "index-15"], [475, "index-16"], [475, "index-17"], [475, "index-18"], [475, "index-19"], [475, "index-2"], [475, "index-20"], [475, "index-21"], [475, "index-22"], [475, "index-23"], [475, "index-24"], [475, "index-25"], [475, "index-26"], [475, "index-27"], [475, "index-28"], [475, "index-29"], [475, "index-3"], [475, "index-30"], [475, "index-4"], [475, "index-45"], [475, "index-46"], [475, "index-47"], [475, "index-48"], [475, "index-49"], [475, "index-5"], [475, "index-50"], [475, "index-52"], [475, "index-6"], [475, "index-7"], [475, "index-8"], [475, "index-9"], [476, "index-0"], [476, "index-1"], [476, "index-10"], [476, "index-11"], [476, "index-12"], [476, "index-13"], [476, "index-14"], [476, "index-15"], [476, "index-16"], [476, "index-17"], [476, "index-18"], [476, "index-20"], [476, "index-22"], [476, "index-23"], [476, "index-24"], [476, "index-25"], [476, "index-26"], [476, "index-28"], [476, "index-29"], [476, "index-3"], [476, "index-30"], [476, "index-31"], [476, "index-32"], [476, "index-33"], [476, "index-34"], [476, "index-35"], [476, "index-36"], [476, "index-37"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [477, "index-0"], [477, "index-1"], [477, "index-10"], [477, "index-11"], [477, "index-13"], [477, "index-14"], [477, "index-15"], [477, "index-16"], [477, "index-17"], [477, "index-18"], [477, "index-19"], [477, "index-2"], [477, "index-20"], [477, "index-21"], [477, "index-22"], [477, "index-23"], [477, "index-24"], [477, "index-25"], [477, "index-28"], [477, "index-29"], [477, "index-3"], [477, "index-30"], [477, "index-32"], [477, "index-33"], [477, "index-37"], [477, "index-38"], [477, "index-5"], [477, "index-6"], [477, "index-7"], [477, "index-9"], [478, "index-0"], [478, "index-1"], [478, "index-10"], [478, "index-11"], [478, "index-12"], [478, "index-15"], [478, "index-16"], [478, "index-17"], [478, "index-18"], [478, "index-19"], [478, "index-23"], [478, "index-24"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [478, "index-9"], [479, "index-0"], [479, "index-1"], [479, "index-10"], [479, "index-11"], [479, "index-12"], [479, "index-13"], [479, "index-14"], [479, "index-15"], [479, "index-16"], [479, "index-17"], [479, "index-18"], [479, "index-19"], [479, "index-2"], [479, "index-20"], [479, "index-23"], [479, "index-24"], [479, "index-25"], [479, "index-26"], [479, "index-27"], [479, "index-3"], [479, "index-4"], [479, "index-5"], [479, "index-6"], [479, "index-7"], [479, "index-8"], [479, "index-9"], [481, "index-23"]], "vectorcallfunc (c type)": [[10, "c.vectorcallfunc"]], "capsule": [[11, "index-0"]], "pycapsule (c type)": [[11, "c.PyCapsule"]], "pycapsule_checkexact (c function)": [[11, "c.PyCapsule_CheckExact"]], "pycapsule_destructor (c type)": [[11, "c.PyCapsule_Destructor"]], "pycapsule_getcontext (c function)": [[11, "c.PyCapsule_GetContext"]], "pycapsule_getdestructor (c function)": [[11, "c.PyCapsule_GetDestructor"]], "pycapsule_getname (c function)": [[11, "c.PyCapsule_GetName"]], "pycapsule_getpointer (c function)": [[11, "c.PyCapsule_GetPointer"]], "pycapsule_import (c function)": [[11, "c.PyCapsule_Import"]], "pycapsule_isvalid (c function)": [[11, "c.PyCapsule_IsValid"]], "pycapsule_new (c function)": [[11, "c.PyCapsule_New"]], "pycapsule_setcontext (c function)": [[11, "c.PyCapsule_SetContext"]], "pycapsule_setdestructor (c function)": [[11, "c.PyCapsule_SetDestructor"]], "pycapsule_setname (c function)": [[11, "c.PyCapsule_SetName"]], "pycapsule_setpointer (c function)": [[11, "c.PyCapsule_SetPointer"]], "pycellobject (c type)": [[12, "c.PyCellObject"]], "pycell_check (c function)": [[12, "c.PyCell_Check"]], "pycell_get (c function)": [[12, "c.PyCell_GET"], [12, "c.PyCell_Get"]], "pycell_new (c function)": [[12, "c.PyCell_New"]], "pycell_set (c function)": [[12, "c.PyCell_SET"], [12, "c.PyCell_Set"]], "pycell_type (c var)": [[12, "c.PyCell_Type"]], "pycodeevent (c type)": [[13, "c.PyCodeEvent"]], "pycodeobject (c type)": [[13, "c.PyCodeObject"]], "pycode_addwatcher (c function)": [[13, "c.PyCode_AddWatcher"]], "pycode_addr2line (c function)": [[13, "c.PyCode_Addr2Line"]], "pycode_addr2location (c function)": [[13, "c.PyCode_Addr2Location"]], "pycode_check (c function)": [[13, "c.PyCode_Check"]], "pycode_clearwatcher (c function)": [[13, "c.PyCode_ClearWatcher"]], "pycode_getcellvars (c function)": [[13, "c.PyCode_GetCellvars"]], "pycode_getcode (c function)": [[13, "c.PyCode_GetCode"]], "pycode_getfreevars (c function)": [[13, "c.PyCode_GetFreevars"]], "pycode_getnumfree (c function)": [[13, "c.PyCode_GetNumFree"]], "pycode_getvarnames (c function)": [[13, "c.PyCode_GetVarnames"]], "pycode_new": [[13, "index-1"]], "pycode_newempty (c function)": [[13, "c.PyCode_NewEmpty"]], "pycode_newwithposonlyargs": [[13, "index-2"]], "pycode_type (c var)": [[13, "c.PyCode_Type"]], "pycode_watchcallback (c type)": [[13, "c.PyCode_WatchCallback"]], "pyunstable_code_getextra (c function)": [[13, "c.PyUnstable_Code_GetExtra"]], "pyunstable_code_new (c function)": [[13, "c.PyUnstable_Code_New"]], "pyunstable_code_newwithposonlyargs (c function)": [[13, "c.PyUnstable_Code_NewWithPosOnlyArgs"]], "pyunstable_code_setextra (c function)": [[13, "c.PyUnstable_Code_SetExtra"]], "pyunstable_eval_requestcodeextraindex (c function)": [[13, "c.PyUnstable_Eval_RequestCodeExtraIndex"]], "_pycode_getextra": [[13, "index-4"]], "_pycode_setextra": [[13, "index-5"]], "_pyeval_requestcodeextraindex": [[13, "index-3"]], "code": [[13, "index-0"], [154, "module-code"], [271, "index-1"], [341, "index-62"], [425, "index-57"], [426, "index-0"]], "code object": [[13, "index-0"], [271, "index-1"], [341, "index-62"], [425, "index-57"]], "pycodec_backslashreplaceerrors (c function)": [[14, "c.PyCodec_BackslashReplaceErrors"]], "pycodec_decode (c function)": [[14, "c.PyCodec_Decode"]], "pycodec_decoder (c function)": [[14, "c.PyCodec_Decoder"]], "pycodec_encode (c function)": [[14, "c.PyCodec_Encode"]], "pycodec_encoder (c function)": [[14, "c.PyCodec_Encoder"]], "pycodec_ignoreerrors (c function)": [[14, "c.PyCodec_IgnoreErrors"]], "pycodec_incrementaldecoder (c function)": [[14, "c.PyCodec_IncrementalDecoder"]], "pycodec_incrementalencoder (c function)": [[14, "c.PyCodec_IncrementalEncoder"]], "pycodec_knownencoding (c function)": [[14, "c.PyCodec_KnownEncoding"]], "pycodec_lookuperror (c function)": [[14, "c.PyCodec_LookupError"]], "pycodec_namereplaceerrors (c function)": [[14, "c.PyCodec_NameReplaceErrors"]], "pycodec_register (c function)": [[14, "c.PyCodec_Register"]], "pycodec_registererror (c function)": [[14, "c.PyCodec_RegisterError"]], "pycodec_replaceerrors (c function)": [[14, "c.PyCodec_ReplaceErrors"]], "pycodec_streamreader (c function)": [[14, "c.PyCodec_StreamReader"]], "pycodec_streamwriter (c function)": [[14, "c.PyCodec_StreamWriter"]], "pycodec_stricterrors (c function)": [[14, "c.PyCodec_StrictErrors"]], "pycodec_unregister (c function)": [[14, "c.PyCodec_Unregister"]], "pycodec_xmlcharrefreplaceerrors (c function)": [[14, "c.PyCodec_XMLCharRefReplaceErrors"]], "pycomplexobject (c type)": [[15, "c.PyComplexObject"]], "pycomplex_asccomplex (c function)": [[15, "c.PyComplex_AsCComplex"]], "pycomplex_check (c function)": [[15, "c.PyComplex_Check"]], "pycomplex_checkexact (c function)": [[15, "c.PyComplex_CheckExact"]], "pycomplex_fromccomplex (c function)": [[15, "c.PyComplex_FromCComplex"]], "pycomplex_fromdoubles (c function)": [[15, "c.PyComplex_FromDoubles"]], "pycomplex_imagasdouble (c function)": [[15, "c.PyComplex_ImagAsDouble"]], "pycomplex_realasdouble (c function)": [[15, "c.PyComplex_RealAsDouble"]], "pycomplex_type (c var)": [[15, "c.PyComplex_Type"]], "py_complex (c type)": [[15, "c.Py_complex"]], "_py_c_diff (c function)": [[15, "c._Py_c_diff"]], "_py_c_neg (c function)": [[15, "c._Py_c_neg"]], "_py_c_pow (c function)": [[15, "c._Py_c_pow"]], "_py_c_prod (c function)": [[15, "c._Py_c_prod"]], "_py_c_quot (c function)": [[15, "c._Py_c_quot"]], "_py_c_sum (c function)": [[15, "c._Py_c_sum"]], "complex number": [[15, "index-0"], [86, "term-complex-number"], [341, "index-11"], [341, "index-12"]], "mapping": [[16, "index-2"], [86, "term-mapping"], [341, "index-52"], [425, "index-30"], [425, "index-53"], [427, "index-42"], [433, "index-11"]], "numeric": [[16, "index-0"], [341, "index-11"], [341, "index-12"], [341, "index-14"], [341, "index-15"], [341, "index-8"], [425, "index-53"], [425, "index-9"]], "sequence": [[16, "index-1"], [86, "term-sequence"], [341, "index-18"], [341, "index-19"], [341, "index-20"], [341, "index-22"], [341, "index-23"], [341, "index-24"], [424, "index-6"], [425, "index-15"], [425, "index-53"], [427, "index-42"], [427, "index-45"], [427, "index-80"], [433, "index-10"]], "pycontext (c type)": [[17, "c.PyContext"]], "pycontexttoken (c type)": [[17, "c.PyContextToken"]], "pycontexttoken_checkexact (c function)": [[17, "c.PyContextToken_CheckExact"]], "pycontexttoken_type (c var)": [[17, "c.PyContextToken_Type"]], "pycontextvar (c type)": [[17, "c.PyContextVar"]], "pycontextvar_checkexact (c function)": [[17, "c.PyContextVar_CheckExact"]], "pycontextvar_get (c function)": [[17, "c.PyContextVar_Get"]], "pycontextvar_new (c function)": [[17, "c.PyContextVar_New"]], "pycontextvar_reset (c function)": [[17, "c.PyContextVar_Reset"]], "pycontextvar_set (c function)": [[17, "c.PyContextVar_Set"]], "pycontextvar_type (c var)": [[17, "c.PyContextVar_Type"]], "pycontext_checkexact (c function)": [[17, "c.PyContext_CheckExact"]], "pycontext_copy (c function)": [[17, "c.PyContext_Copy"]], "pycontext_copycurrent (c function)": [[17, "c.PyContext_CopyCurrent"]], "pycontext_enter (c function)": [[17, "c.PyContext_Enter"]], "pycontext_exit (c function)": [[17, "c.PyContext_Exit"]], "pycontext_new (c function)": [[17, "c.PyContext_New"]], "pycontext_type (c var)": [[17, "c.PyContext_Type"]], "pyos_double_to_string (c function)": [[18, "c.PyOS_double_to_string"]], "pyos_snprintf (c function)": [[18, "c.PyOS_snprintf"]], "pyos_stricmp (c function)": [[18, "c.PyOS_stricmp"]], "pyos_string_to_double (c function)": [[18, "c.PyOS_string_to_double"]], "pyos_strnicmp (c function)": [[18, "c.PyOS_strnicmp"]], "pyos_strtol (c function)": [[18, "c.PyOS_strtol"]], "pyos_strtoul (c function)": [[18, "c.PyOS_strtoul"]], "pyos_vsnprintf (c function)": [[18, "c.PyOS_vsnprintf"]], "pycoroobject (c type)": [[19, "c.PyCoroObject"]], "pycoro_checkexact (c function)": [[19, "c.PyCoro_CheckExact"]], "pycoro_new (c function)": [[19, "c.PyCoro_New"]], "pycoro_type (c var)": [[19, "c.PyCoro_Type"]], "pydatetime_check (c function)": [[20, "c.PyDateTime_Check"]], "pydatetime_checkexact (c function)": [[20, "c.PyDateTime_CheckExact"]], "pydatetime_date_get_fold (c function)": [[20, "c.PyDateTime_DATE_GET_FOLD"]], "pydatetime_date_get_hour (c function)": [[20, "c.PyDateTime_DATE_GET_HOUR"]], "pydatetime_date_get_microsecond (c function)": [[20, "c.PyDateTime_DATE_GET_MICROSECOND"]], "pydatetime_date_get_minute (c function)": [[20, "c.PyDateTime_DATE_GET_MINUTE"]], "pydatetime_date_get_second (c function)": [[20, "c.PyDateTime_DATE_GET_SECOND"]], "pydatetime_date_get_tzinfo (c function)": [[20, "c.PyDateTime_DATE_GET_TZINFO"]], "pydatetime_delta_get_days (c function)": [[20, "c.PyDateTime_DELTA_GET_DAYS"]], "pydatetime_delta_get_microseconds (c function)": [[20, "c.PyDateTime_DELTA_GET_MICROSECONDS"]], "pydatetime_delta_get_seconds (c function)": [[20, "c.PyDateTime_DELTA_GET_SECONDS"]], "pydatetime_date (c type)": [[20, "c.PyDateTime_Date"]], "pydatetime_datetime (c type)": [[20, "c.PyDateTime_DateTime"]], "pydatetime_datetimetype (c var)": [[20, "c.PyDateTime_DateTimeType"]], "pydatetime_datetype (c var)": [[20, "c.PyDateTime_DateType"]], "pydatetime_delta (c type)": [[20, "c.PyDateTime_Delta"]], "pydatetime_deltatype (c var)": [[20, "c.PyDateTime_DeltaType"]], "pydatetime_fromdateandtime (c function)": [[20, "c.PyDateTime_FromDateAndTime"]], "pydatetime_fromdateandtimeandfold (c function)": [[20, "c.PyDateTime_FromDateAndTimeAndFold"]], "pydatetime_fromtimestamp (c function)": [[20, "c.PyDateTime_FromTimestamp"]], "pydatetime_get_day (c function)": [[20, "c.PyDateTime_GET_DAY"]], "pydatetime_get_month (c function)": [[20, "c.PyDateTime_GET_MONTH"]], "pydatetime_get_year (c function)": [[20, "c.PyDateTime_GET_YEAR"]], "pydatetime_time_get_fold (c function)": [[20, "c.PyDateTime_TIME_GET_FOLD"]], "pydatetime_time_get_hour (c function)": [[20, "c.PyDateTime_TIME_GET_HOUR"]], "pydatetime_time_get_microsecond (c function)": [[20, "c.PyDateTime_TIME_GET_MICROSECOND"]], "pydatetime_time_get_minute (c function)": [[20, "c.PyDateTime_TIME_GET_MINUTE"]], "pydatetime_time_get_second (c function)": [[20, "c.PyDateTime_TIME_GET_SECOND"]], "pydatetime_time_get_tzinfo (c function)": [[20, "c.PyDateTime_TIME_GET_TZINFO"]], "pydatetime_tzinfotype (c var)": [[20, "c.PyDateTime_TZInfoType"]], "pydatetime_time (c type)": [[20, "c.PyDateTime_Time"]], "pydatetime_timetype (c var)": [[20, "c.PyDateTime_TimeType"]], "pydatetime_timezone_utc (c var)": [[20, "c.PyDateTime_TimeZone_UTC"]], "pydate_check (c function)": [[20, "c.PyDate_Check"]], "pydate_checkexact (c function)": [[20, "c.PyDate_CheckExact"]], "pydate_fromdate (c function)": [[20, "c.PyDate_FromDate"]], "pydate_fromtimestamp (c function)": [[20, "c.PyDate_FromTimestamp"]], "pydelta_check (c function)": [[20, "c.PyDelta_Check"]], "pydelta_checkexact (c function)": [[20, "c.PyDelta_CheckExact"]], "pydelta_fromdsu (c function)": [[20, "c.PyDelta_FromDSU"]], "pytzinfo_check (c function)": [[20, "c.PyTZInfo_Check"]], "pytzinfo_checkexact (c function)": [[20, "c.PyTZInfo_CheckExact"]], "pytimezone_fromoffset (c function)": [[20, "c.PyTimeZone_FromOffset"]], "pytimezone_fromoffsetandname (c function)": [[20, "c.PyTimeZone_FromOffsetAndName"]], "pytime_check (c function)": [[20, "c.PyTime_Check"]], "pytime_checkexact (c function)": [[20, "c.PyTime_CheckExact"]], "pytime_fromtime (c function)": [[20, "c.PyTime_FromTime"]], "pytime_fromtimeandfold (c function)": [[20, "c.PyTime_FromTimeAndFold"]], "pydescr_isdata (c function)": [[21, "c.PyDescr_IsData"]], "pydescr_newclassmethod (c function)": [[21, "c.PyDescr_NewClassMethod"]], "pydescr_newgetset (c function)": [[21, "c.PyDescr_NewGetSet"]], "pydescr_newmember (c function)": [[21, "c.PyDescr_NewMember"]], "pydescr_newmethod (c function)": [[21, "c.PyDescr_NewMethod"]], "pydescr_newwrapper (c function)": [[21, "c.PyDescr_NewWrapper"]], "pyproperty_type (c var)": [[21, "c.PyProperty_Type"]], "pywrapper_new (c function)": [[21, "c.PyWrapper_New"]], "pydictobject (c type)": [[22, "c.PyDictObject"]], "pydictproxy_new (c function)": [[22, "c.PyDictProxy_New"]], "pydict_addwatcher (c function)": [[22, "c.PyDict_AddWatcher"]], "pydict_check (c function)": [[22, "c.PyDict_Check"]], "pydict_checkexact (c function)": [[22, "c.PyDict_CheckExact"]], "pydict_clear (c function)": [[22, "c.PyDict_Clear"]], "pydict_clearwatcher (c function)": [[22, "c.PyDict_ClearWatcher"]], "pydict_contains (c function)": [[22, "c.PyDict_Contains"]], "pydict_copy (c function)": [[22, "c.PyDict_Copy"]], "pydict_delitem (c function)": [[22, "c.PyDict_DelItem"]], "pydict_delitemstring (c function)": [[22, "c.PyDict_DelItemString"]], "pydict_getitem (c function)": [[22, "c.PyDict_GetItem"]], "pydict_getitemstring (c function)": [[22, "c.PyDict_GetItemString"]], "pydict_getitemwitherror (c function)": [[22, "c.PyDict_GetItemWithError"]], "pydict_items (c function)": [[22, "c.PyDict_Items"]], "pydict_keys (c function)": [[22, "c.PyDict_Keys"]], "pydict_merge (c function)": [[22, "c.PyDict_Merge"]], "pydict_mergefromseq2 (c function)": [[22, "c.PyDict_MergeFromSeq2"]], "pydict_new (c function)": [[22, "c.PyDict_New"]], "pydict_next (c function)": [[22, "c.PyDict_Next"]], "pydict_setdefault (c function)": [[22, "c.PyDict_SetDefault"]], "pydict_setitem (c function)": [[22, "c.PyDict_SetItem"]], "pydict_setitemstring (c function)": [[22, "c.PyDict_SetItemString"]], "pydict_size (c function)": [[22, "c.PyDict_Size"]], "pydict_type (c var)": [[22, "c.PyDict_Type"]], "pydict_unwatch (c function)": [[22, "c.PyDict_Unwatch"]], "pydict_update (c function)": [[22, "c.PyDict_Update"]], "pydict_values (c function)": [[22, "c.PyDict_Values"]], "pydict_watch (c function)": [[22, "c.PyDict_Watch"]], "pydict_watchcallback (c type)": [[22, "c.PyDict_WatchCallback"]], "pydict_watchevent (c type)": [[22, "c.PyDict_WatchEvent"]], "built-in function": [[22, "index-1"], [30, "index-1"], [30, "index-2"], [37, "index-1"], [37, "index-2"], [39, "index-0"], [46, "index-0"], [46, "index-1"], [46, "index-2"], [46, "index-3"], [46, "index-4"], [46, "index-5"], [48, "index-0"], [48, "index-1"], [48, "index-3"], [48, "index-6"], [48, "index-7"], [48, "index-8"], [53, "index-0"], [53, "index-1"], [54, "index-1"], [57, "index-0"], [57, "index-1"], [62, "index-1"], [62, "index-2"], [74, "index-3"], [188, "index-1"], [222, "abs"], [222, "aiter"], [222, "all"], [222, "anext"], [222, "any"], [222, "ascii"], [222, "bin"], [222, "breakpoint"], [222, "callable"], [222, "chr"], [222, "classmethod"], [222, "compile"], [222, "delattr"], [222, "dir"], [222, "divmod"], [222, "enumerate"], [222, "eval"], [222, "exec"], [222, "filter"], [222, "format"], [222, "getattr"], [222, "globals"], [222, "hasattr"], [222, "hash"], [222, "help"], [222, "hex"], [222, "id"], [222, "import__"], [222, "index-2"], [222, "input"], [222, "isinstance"], [222, "issubclass"], [222, "iter"], [222, "len"], [222, "locals"], [222, "map"], [222, "max"], [222, "min"], [222, "next"], [222, "oct"], [222, "open"], [222, "ord"], [222, "pow"], [222, "print"], [222, "property.deleter"], [222, "property.getter"], [222, "property.setter"], [222, "repr"], [222, "reversed"], [222, "round"], [222, "setattr"], [222, "sorted"], [222, "staticmethod"], [222, "sum"], [222, "vars"], [222, "zip"], [280, "multiprocessing.Manager"], [304, "index-1"], [304, "index-2"], [341, "index-13"], [341, "index-20"], [341, "index-22"], [341, "index-52"], [341, "index-63"], [341, "index-64"], [341, "index-65"], [382, "index-4"], [410, "xml.etree.ElementInclude.default_loader"], [410, "xml.etree.ElementInclude.include"], [424, "index-8"], [425, "index-1"], [425, "index-100"], [425, "index-101"], [425, "index-102"], [425, "index-103"], [425, "index-104"], [425, "index-105"], [425, "index-15"], [425, "index-19"], [425, "index-27"], [425, "index-30"], [425, "index-42"], [425, "index-55"], [425, "index-69"], [425, "index-77"], [425, "index-78"], [425, "index-80"], [425, "index-86"], [425, "index-98"], [427, "index-53"], [433, "index-3"], [433, "index-44"], [434, "index-6"], [443, "index-0"], [448, "index-0"]], "dictionary": [[22, "index-0"], [86, "term-dictionary"], [341, "index-52"], [425, "index-31"], [425, "index-47"], [425, "index-80"], [427, "index-17"], [427, "index-18"], [427, "index-42"], [433, "index-11"]], "len": [[22, "index-1"], [37, "index-1"], [39, "index-0"], [48, "index-8"], [53, "index-0"], [54, "index-1"], [341, "index-20"], [341, "index-52"], [425, "index-15"], [425, "index-27"], [425, "index-30"], [425, "index-98"]], "keyboardinterrupt (built-in exception)": [[23, "index-1"], [23, "index-2"], [23, "index-3"]], "pep 3151": [[23, "index-5"], [210, "index-9"], [319, "index-0"], [325, "index-0"], [334, "index-2"], [473, "index-10"]], "pyerr_badargument (c function)": [[23, "c.PyErr_BadArgument"]], "pyerr_badinternalcall (c function)": [[23, "c.PyErr_BadInternalCall"]], "pyerr_checksignals (c function)": [[23, "c.PyErr_CheckSignals"]], "pyerr_clear (c function)": [[23, "c.PyErr_Clear"]], "pyerr_displayexception (c function)": [[23, "c.PyErr_DisplayException"]], "pyerr_exceptionmatches (c function)": [[23, "c.PyErr_ExceptionMatches"]], "pyerr_fetch (c function)": [[23, "c.PyErr_Fetch"]], "pyerr_format (c function)": [[23, "c.PyErr_Format"]], "pyerr_formatv (c function)": [[23, "c.PyErr_FormatV"]], "pyerr_getexcinfo (c function)": [[23, "c.PyErr_GetExcInfo"]], "pyerr_gethandledexception (c function)": [[23, "c.PyErr_GetHandledException"]], "pyerr_getraisedexception (c function)": [[23, "c.PyErr_GetRaisedException"]], "pyerr_givenexceptionmatches (c function)": [[23, "c.PyErr_GivenExceptionMatches"]], "pyerr_newexception (c function)": [[23, "c.PyErr_NewException"]], "pyerr_newexceptionwithdoc (c function)": [[23, "c.PyErr_NewExceptionWithDoc"]], "pyerr_nomemory (c function)": [[23, "c.PyErr_NoMemory"]], "pyerr_normalizeexception (c function)": [[23, "c.PyErr_NormalizeException"]], "pyerr_occurred (c function)": [[23, "c.PyErr_Occurred"]], "pyerr_print (c function)": [[23, "c.PyErr_Print"]], "pyerr_printex (c function)": [[23, "c.PyErr_PrintEx"]], "pyerr_resourcewarning (c function)": [[23, "c.PyErr_ResourceWarning"]], "pyerr_restore (c function)": [[23, "c.PyErr_Restore"]], "pyerr_setexcfromwindowserr (c function)": [[23, "c.PyErr_SetExcFromWindowsErr"]], "pyerr_setexcfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilename"]], "pyerr_setexcfromwindowserrwithfilenameobject (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObject"]], "pyerr_setexcfromwindowserrwithfilenameobjects (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects"]], "pyerr_setexcinfo (c function)": [[23, "c.PyErr_SetExcInfo"]], "pyerr_setfromerrno (c function)": [[23, "c.PyErr_SetFromErrno"]], "pyerr_setfromerrnowithfilename (c function)": [[23, "c.PyErr_SetFromErrnoWithFilename"]], "pyerr_setfromerrnowithfilenameobject (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObject"]], "pyerr_setfromerrnowithfilenameobjects (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObjects"]], "pyerr_setfromwindowserr (c function)": [[23, "c.PyErr_SetFromWindowsErr"]], "pyerr_setfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetFromWindowsErrWithFilename"]], "pyerr_sethandledexception (c function)": [[23, "c.PyErr_SetHandledException"]], "pyerr_setimporterror (c function)": [[23, "c.PyErr_SetImportError"]], "pyerr_setimporterrorsubclass (c function)": [[23, "c.PyErr_SetImportErrorSubclass"]], "pyerr_setinterrupt (c function)": [[23, "c.PyErr_SetInterrupt"]], "pyerr_setinterruptex (c function)": [[23, "c.PyErr_SetInterruptEx"]], "pyerr_setnone (c function)": [[23, "c.PyErr_SetNone"]], "pyerr_setobject (c function)": [[23, "c.PyErr_SetObject"]], "pyerr_setraisedexception (c function)": [[23, "c.PyErr_SetRaisedException"]], "pyerr_setstring (c function)": [[23, "c.PyErr_SetString"]], "pyerr_syntaxlocation (c function)": [[23, "c.PyErr_SyntaxLocation"]], "pyerr_syntaxlocationex (c function)": [[23, "c.PyErr_SyntaxLocationEx"]], "pyerr_syntaxlocationobject (c function)": [[23, "c.PyErr_SyntaxLocationObject"]], "pyerr_warnex (c function)": [[23, "c.PyErr_WarnEx"]], "pyerr_warnexplicit (c function)": [[23, "c.PyErr_WarnExplicit"]], "pyerr_warnexplicitobject (c function)": [[23, "c.PyErr_WarnExplicitObject"]], "pyerr_warnformat (c function)": [[23, "c.PyErr_WarnFormat"]], "pyerr_writeunraisable (c function)": [[23, "c.PyErr_WriteUnraisable"]], "pyexc_arithmeticerror": [[23, "index-4"]], "pyexc_assertionerror": [[23, "index-4"]], "pyexc_attributeerror": [[23, "index-4"]], "pyexc_baseexception": [[23, "index-4"]], "pyexc_blockingioerror": [[23, "index-4"]], "pyexc_brokenpipeerror": [[23, "index-4"]], "pyexc_buffererror": [[23, "index-4"]], "pyexc_byteswarning": [[23, "index-7"]], "pyexc_childprocesserror": [[23, "index-4"]], "pyexc_connectionabortederror": [[23, "index-4"]], "pyexc_connectionerror": [[23, "index-4"]], "pyexc_connectionrefusederror": [[23, "index-4"]], "pyexc_connectionreseterror": [[23, "index-4"]], "pyexc_deprecationwarning": [[23, "index-7"]], "pyexc_eoferror": [[23, "index-4"]], "pyexc_environmenterror": [[23, "index-6"]], "pyexc_exception": [[23, "index-4"]], "pyexc_fileexistserror": [[23, "index-4"]], "pyexc_filenotfounderror": [[23, "index-4"]], "pyexc_floatingpointerror": [[23, "index-4"]], "pyexc_futurewarning": [[23, "index-7"]], "pyexc_generatorexit": [[23, "index-4"]], "pyexc_ioerror": [[23, "index-6"]], "pyexc_importerror": [[23, "index-4"]], "pyexc_importwarning": [[23, "index-7"]], "pyexc_indentationerror": [[23, "index-4"]], "pyexc_indexerror": [[23, "index-4"]], "pyexc_interruptederror": [[23, "index-4"]], "pyexc_isadirectoryerror": [[23, "index-4"]], "pyexc_keyerror": [[23, "index-4"]], "pyexc_keyboardinterrupt": [[23, "index-4"]], "pyexc_lookuperror": [[23, "index-4"]], "pyexc_memoryerror": [[23, "index-4"]], "pyexc_modulenotfounderror": [[23, "index-4"]], "pyexc_nameerror": [[23, "index-4"]], "pyexc_notadirectoryerror": [[23, "index-4"]], "pyexc_notimplementederror": [[23, "index-4"]], "pyexc_oserror": [[23, "index-4"]], "pyexc_overflowerror": [[23, "index-4"]], "pyexc_pendingdeprecationwarning": [[23, "index-7"]], "pyexc_permissionerror": [[23, "index-4"]], "pyexc_processlookuperror": [[23, "index-4"]], "pyexc_recursionerror": [[23, "index-4"]], "pyexc_referenceerror": [[23, "index-4"]], "pyexc_resourcewarning": [[23, "index-7"]], "pyexc_runtimeerror": [[23, "index-4"]], "pyexc_runtimewarning": [[23, "index-7"]], "pyexc_stopasynciteration": [[23, "index-4"]], "pyexc_stopiteration": [[23, "index-4"]], "pyexc_syntaxerror": [[23, "index-4"]], "pyexc_syntaxwarning": [[23, "index-7"]], "pyexc_systemerror": [[23, "index-4"]], "pyexc_systemexit": [[23, "index-4"]], "pyexc_taberror": [[23, "index-4"]], "pyexc_timeouterror": [[23, "index-4"]], "pyexc_typeerror": [[23, "index-4"]], "pyexc_unboundlocalerror": [[23, "index-4"]], "pyexc_unicodedecodeerror": [[23, "index-4"]], "pyexc_unicodeencodeerror": [[23, "index-4"]], "pyexc_unicodeerror": [[23, "index-4"]], "pyexc_unicodetranslateerror": [[23, "index-4"]], "pyexc_unicodewarning": [[23, "index-7"]], "pyexc_userwarning": [[23, "index-7"]], "pyexc_valueerror": [[23, "index-4"]], "pyexc_warning": [[23, "index-7"]], "pyexc_windowserror": [[23, "index-6"]], "pyexc_zerodivisionerror": [[23, "index-4"]], "pyexception_getargs (c function)": [[23, "c.PyException_GetArgs"]], "pyexception_getcause (c function)": [[23, "c.PyException_GetCause"]], "pyexception_getcontext (c function)": [[23, "c.PyException_GetContext"]], "pyexception_gettraceback (c function)": [[23, "c.PyException_GetTraceback"]], "pyexception_setargs (c function)": [[23, "c.PyException_SetArgs"]], "pyexception_setcause (c function)": [[23, "c.PyException_SetCause"]], "pyexception_setcontext (c function)": [[23, "c.PyException_SetContext"]], "pyexception_settraceback (c function)": [[23, "c.PyException_SetTraceback"]], "pysignal_setwakeupfd (c function)": [[23, "c.PySignal_SetWakeupFd"]], "pyunicodedecodeerror_create (c function)": [[23, "c.PyUnicodeDecodeError_Create"]], "pyunicodedecodeerror_getencoding (c function)": [[23, "c.PyUnicodeDecodeError_GetEncoding"]], "pyunicodedecodeerror_getend (c function)": [[23, "c.PyUnicodeDecodeError_GetEnd"]], "pyunicodedecodeerror_getobject (c function)": [[23, "c.PyUnicodeDecodeError_GetObject"]], "pyunicodedecodeerror_getreason (c function)": [[23, "c.PyUnicodeDecodeError_GetReason"]], "pyunicodedecodeerror_getstart (c function)": [[23, "c.PyUnicodeDecodeError_GetStart"]], "pyunicodedecodeerror_setend (c function)": [[23, "c.PyUnicodeDecodeError_SetEnd"]], "pyunicodedecodeerror_setreason (c function)": [[23, "c.PyUnicodeDecodeError_SetReason"]], "pyunicodedecodeerror_setstart (c function)": [[23, "c.PyUnicodeDecodeError_SetStart"]], "pyunicodeencodeerror_getencoding (c function)": [[23, "c.PyUnicodeEncodeError_GetEncoding"]], "pyunicodeencodeerror_getend (c function)": [[23, "c.PyUnicodeEncodeError_GetEnd"]], "pyunicodeencodeerror_getobject (c function)": [[23, "c.PyUnicodeEncodeError_GetObject"]], "pyunicodeencodeerror_getreason (c function)": [[23, "c.PyUnicodeEncodeError_GetReason"]], "pyunicodeencodeerror_getstart (c function)": [[23, "c.PyUnicodeEncodeError_GetStart"]], "pyunicodeencodeerror_setend (c function)": [[23, "c.PyUnicodeEncodeError_SetEnd"]], "pyunicodeencodeerror_setreason (c function)": [[23, "c.PyUnicodeEncodeError_SetReason"]], "pyunicodeencodeerror_setstart (c function)": [[23, "c.PyUnicodeEncodeError_SetStart"]], "pyunicodetranslateerror_getend (c function)": [[23, "c.PyUnicodeTranslateError_GetEnd"]], "pyunicodetranslateerror_getobject (c function)": [[23, "c.PyUnicodeTranslateError_GetObject"]], "pyunicodetranslateerror_getreason (c function)": [[23, "c.PyUnicodeTranslateError_GetReason"]], "pyunicodetranslateerror_getstart (c function)": [[23, "c.PyUnicodeTranslateError_GetStart"]], "pyunicodetranslateerror_setend (c function)": [[23, "c.PyUnicodeTranslateError_SetEnd"]], "pyunicodetranslateerror_setreason (c function)": [[23, "c.PyUnicodeTranslateError_SetReason"]], "pyunicodetranslateerror_setstart (c function)": [[23, "c.PyUnicodeTranslateError_SetStart"]], "pyunstable_exc_prepreraisestar (c function)": [[23, "c.PyUnstable_Exc_PrepReraiseStar"]], "py_enterrecursivecall (c function)": [[23, "c.Py_EnterRecursiveCall"]], "py_leaverecursivecall (c function)": [[23, "c.Py_LeaveRecursiveCall"]], "py_reprenter (c function)": [[23, "c.Py_ReprEnter"]], "py_reprleave (c function)": [[23, "c.Py_ReprLeave"]], "sigint": [[23, "index-1"], [23, "index-2"]], "module": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [32, "index-15"], [32, "index-22"], [32, "index-23"], [32, "index-38"], [32, "index-42"], [32, "index-45"], [34, "index-18"], [44, "index-0"], [86, "term-module"], [109, "module-lib2to3"], [110, "module-__future__"], [111, "module-__main__"], [112, "index-2"], [112, "module-_thread"], [113, "module-abc"], [114, "module-aifc"], [117, "module-argparse"], [118, "module-array"], [119, "module-ast"], [120, "module-asyncio"], [137, "module-atexit"], [138, "module-audioop"], [140, "module-base64"], [141, "module-bdb"], [143, "index-0"], [143, "module-binascii"], [144, "module-bisect"], [145, "module-builtins"], [146, "module-bz2"], [147, "module-calendar"], [148, "module-cgi"], [149, "module-cgitb"], [150, "module-chunk"], [151, "index-1"], [151, "module-cmath"], [152, "module-cmd"], [154, "module-code"], [155, "module-codecs"], [155, "module-encodings.idna"], [155, "module-encodings.mbcs"], [155, "module-encodings.utf_8_sig"], [156, "module-codeop"], [157, "module-collections"], [158, "module-collections.abc"], [159, "module-colorsys"], [160, "module-compileall"], [163, "module-concurrent.futures"], [164, "module-configparser"], [166, "module-contextlib"], [167, "module-contextvars"], [168, "index-0"], [168, "module-copy"], [169, "index-0"], [169, "module-copyreg"], [170, "module-crypt"], [172, "module-csv"], [173, "module-ctypes"], [174, "module-curses"], [174, "module-curses.textpad"], [175, "module-curses.ascii"], [176, "module-curses.panel"], [178, "module-dataclasses"], [180, "module-datetime"], [181, "module-dbm"], [181, "module-dbm.dumb"], [181, "module-dbm.gnu"], [181, "module-dbm.ndbm"], [183, "module-decimal"], [186, "module-tkinter.commondialog"], [186, "module-tkinter.filedialog"], [186, "module-tkinter.simpledialog"], [187, "module-difflib"], [188, "module-dis"], [190, "module-doctest"], [191, "module-email"], [192, "module-email.charset"], [194, "module-email.contentmanager"], [195, "module-email.encoders"], [196, "module-email.errors"], [198, "module-email.generator"], [199, "module-email.header"], [200, "module-email.headerregistry"], [201, "module-email.iterators"], [202, "module-email.message"], [203, "module-email.mime"], [203, "module-email.mime.application"], [203, "module-email.mime.audio"], [203, "module-email.mime.base"], [203, "module-email.mime.image"], [203, "module-email.mime.message"], [203, "module-email.mime.multipart"], [203, "module-email.mime.nonmultipart"], [203, "module-email.mime.text"], [204, "module-email.parser"], [205, "module-email.policy"], [206, "module-email.utils"], [207, "module-ensurepip"], [208, "module-enum"], [209, "module-errno"], [210, "index-5"], [211, "module-faulthandler"], [212, "module-fcntl"], [213, "module-filecmp"], [215, "module-fileinput"], [217, "index-1"], [217, "index-3"], [217, "module-fnmatch"], [218, "module-fractions"], [220, "module-ftplib"], [222, "index-13"], [222, "index-8"], [223, "module-functools"], [224, "module-gc"], [225, "module-getopt"], [226, "module-getpass"], [227, "module-gettext"], [228, "module-glob"], [229, "module-graphlib"], [230, "module-grp"], [231, "module-gzip"], [232, "module-hashlib"], [233, "module-heapq"], [234, "module-hmac"], [235, "module-html"], [236, "module-html.entities"], [237, "module-html.parser"], [238, "module-http"], [239, "index-1"], [239, "module-http.client"], [240, "module-http.cookiejar"], [241, "module-http.cookies"], [242, "module-http.server"], [244, "module-idlelib"], [245, "module-imaplib"], [246, "module-imghdr"], [247, "module-importlib"], [247, "module-importlib.abc"], [247, "module-importlib.machinery"], [247, "module-importlib.util"], [248, "module-importlib.metadata"], [249, "module-importlib.resources"], [250, "module-importlib.resources.abc"], [252, "module-inspect"], [253, "index-1"], [255, "module-io"], [256, "module-ipaddress"], [258, "module-itertools"], [259, "module-json"], [259, "module-json.tool"], [260, "module-keyword"], [262, "index-0"], [262, "module-linecache"], [263, "index-0"], [263, "module-locale"], [264, "module-logging"], [265, "module-logging.config"], [266, "module-logging.handlers"], [267, "module-lzma"], [268, "module-mailbox"], [269, "module-mailcap"], [271, "index-0"], [271, "module-marshal"], [272, "module-math"], [273, "module-mimetypes"], [275, "module-mmap"], [276, "module-modulefinder"], [278, "module-msilib"], [279, "module-msvcrt"], [280, "module-multiprocessing"], [280, "module-multiprocessing.connection"], [280, "module-multiprocessing.dummy"], [280, "module-multiprocessing.managers"], [280, "module-multiprocessing.pool"], [280, "module-multiprocessing.sharedctypes"], [281, "module-multiprocessing.shared_memory"], [283, "module-netrc"], [284, "module-nis"], [285, "module-nntplib"], [286, "module-numbers"], [288, "module-operator"], [289, "module-optparse"], [290, "index-23"], [290, "index-30"], [290, "module-os"], [291, "index-2"], [291, "module-os.path"], [292, "module-ossaudiodev"], [293, "module-pathlib"], [294, "index-1"], [294, "module-pdb"], [296, "module-pickle"], [297, "module-pickletools"], [298, "module-pipes"], [299, "module-pkgutil"], [300, "module-platform"], [301, "module-plistlib"], [302, "module-poplib"], [303, "index-0"], [303, "module-posix"], [304, "module-pprint"], [305, "module-cProfile"], [305, "module-profile"], [305, "module-pstats"], [306, "module-pty"], [307, "index-0"], [307, "module-pwd"], [308, "module-py_compile"], [309, "module-pyclbr"], [310, "module-pydoc"], [311, "index-1"], [311, "module-xml.parsers.expat"], [311, "module-xml.parsers.expat.errors"], [311, "module-xml.parsers.expat.model"], [313, "module-queue"], [314, "module-quopri"], [315, "module-random"], [316, "module-re"], [317, "module-readline"], [318, "module-reprlib"], [319, "module-resource"], [320, "module-rlcompleter"], [321, "index-0"], [321, "index-4"], [321, "module-runpy"], [322, "module-sched"], [323, "module-secrets"], [325, "module-select"], [326, "module-selectors"], [327, "index-0"], [327, "index-1"], [327, "module-shelve"], [328, "module-shlex"], [329, "module-shutil"], [330, "module-signal"], [331, "index-0"], [331, "module-site"], [331, "module-sitecustomize"], [331, "module-usercustomize"], [332, "module-smtplib"], [333, "module-sndhdr"], [334, "index-14"], [334, "module-socket"], [335, "module-socketserver"], [336, "module-spwd"], [337, "module-sqlite3"], [338, "module-ssl"], [339, "module-stat"], [340, "module-statistics"], [341, "index-15"], [341, "index-33"], [341, "index-40"], [341, "index-65"], [342, "module-string"], [343, "module-stringprep"], [344, "module-struct"], [345, "module-subprocess"], [346, "module-sunau"], [348, "module-symtable"], [349, "index-21"], [349, "module-sys"], [350, "module-sys.monitoring"], [352, "module-sysconfig"], [353, "module-syslog"], [354, "module-tabnanny"], [355, "module-tarfile"], [356, "module-telnetlib"], [357, "module-tempfile"], [358, "module-termios"], [359, "module-test"], [359, "module-test.regrtest"], [359, "module-test.support"], [359, "module-test.support.bytecode_helper"], [359, "module-test.support.import_helper"], [359, "module-test.support.os_helper"], [359, "module-test.support.script_helper"], [359, "module-test.support.socket_helper"], [359, "module-test.support.threading_helper"], [359, "module-test.support.warnings_helper"], [361, "module-textwrap"], [362, "module-threading"], [363, "module-time"], [364, "module-timeit"], [366, "module-_tkinter"], [366, "module-tkinter"], [367, "module-tkinter.colorchooser"], [368, "module-tkinter.dnd"], [369, "module-tkinter.font"], [370, "module-tkinter.messagebox"], [371, "module-tkinter.scrolledtext"], [372, "module-tkinter.tix"], [373, "module-tkinter.ttk"], [374, "module-token"], [375, "module-tokenize"], [376, "module-tomllib"], [377, "module-trace"], [378, "module-traceback"], [379, "module-tracemalloc"], [380, "module-tty"], [381, "module-turtle"], [381, "module-turtledemo"], [382, "module-types"], [383, "module-typing"], [384, "module-unicodedata"], [385, "module-unittest"], [386, "module-unittest.mock"], [389, "module-urllib"], [390, "module-urllib.error"], [391, "module-urllib.parse"], [392, "module-urllib.request"], [392, "module-urllib.response"], [393, "module-urllib.robotparser"], [394, "module-uu"], [395, "module-uuid"], [396, "module-venv"], [397, "module-warnings"], [398, "module-wave"], [399, "module-weakref"], [400, "module-webbrowser"], [402, "module-winreg"], [403, "module-winsound"], [404, "module-wsgiref"], [404, "module-wsgiref.handlers"], [404, "module-wsgiref.headers"], [404, "module-wsgiref.simple_server"], [404, "module-wsgiref.types"], [404, "module-wsgiref.util"], [404, "module-wsgiref.validate"], [405, "module-xdrlib"], [406, "module-xml"], [407, "module-xml.dom"], [408, "module-xml.dom.minidom"], [409, "module-xml.dom.pulldom"], [410, "module-xml.etree.ElementInclude"], [410, "module-xml.etree.ElementTree"], [411, "module-xml.sax"], [412, "module-xml.sax.handler"], [413, "module-xml.sax.xmlreader"], [414, "module-xml.sax.saxutils"], [416, "module-xmlrpc.client"], [417, "module-xmlrpc.server"], [418, "module-zipapp"], [419, "module-zipfile"], [420, "module-zipimport"], [421, "module-zlib"], [422, "module-zoneinfo"], [424, "index-11"], [425, "index-23"], [425, "index-24"], [425, "index-32"], [425, "index-4"], [425, "index-44"], [425, "index-45"], [425, "index-55"], [426, "index-10"], [427, "index-40"], [433, "index-34"], [434, "index-2"], [434, "index-3"], [443, "index-1"], [447, "index-0"], [447, "index-4"], [447, "index-7"]], "signal": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [112, "index-2"], [330, "module-signal"]], "strerror()": [[23, "index-0"]], "eoferror (built-in exception)": [[24, "index-1"]], "pyfile_fromfd (c function)": [[24, "c.PyFile_FromFd"]], "pyfile_getline (c function)": [[24, "c.PyFile_GetLine"]], "pyfile_setopencodehook (c function)": [[24, "c.PyFile_SetOpenCodeHook"]], "pyfile_setopencodehook.py_opencodehookfunction (c type)": [[24, "c.PyFile_SetOpenCodeHook.Py_OpenCodeHookFunction"]], "pyfile_writeobject (c function)": [[24, "c.PyFile_WriteObject"]], "pyfile_writestring (c function)": [[24, "c.PyFile_WriteString"]], "pyobject_asfiledescriptor (c function)": [[24, "c.PyObject_AsFileDescriptor"]], "py_print_raw": [[24, "index-2"]], "file": [[24, "index-0"], [160, "cmdoption-compileall-arg-file"], [164, "index-0"], [222, "index-6"], [231, "cmdoption-gzip-arg-file"], [273, "index-2"], [294, "index-2"], [301, "index-0"], [303, "index-1"], [308, "index-0"], [329, "index-0"], [331, "index-4"], [357, "index-0"], [443, "index-0"]], "pyfloatobject (c type)": [[25, "c.PyFloatObject"]], "pyfloat_as_double (c function)": [[25, "c.PyFloat_AS_DOUBLE"]], "pyfloat_asdouble (c function)": [[25, "c.PyFloat_AsDouble"]], "pyfloat_check (c function)": [[25, "c.PyFloat_Check"]], "pyfloat_checkexact (c function)": [[25, "c.PyFloat_CheckExact"]], "pyfloat_fromdouble (c function)": [[25, "c.PyFloat_FromDouble"]], "pyfloat_fromstring (c function)": [[25, "c.PyFloat_FromString"]], "pyfloat_getinfo (c function)": [[25, "c.PyFloat_GetInfo"]], "pyfloat_getmax (c function)": [[25, "c.PyFloat_GetMax"]], "pyfloat_getmin (c function)": [[25, "c.PyFloat_GetMin"]], "pyfloat_pack2 (c function)": [[25, "c.PyFloat_Pack2"]], "pyfloat_pack4 (c function)": [[25, "c.PyFloat_Pack4"]], "pyfloat_pack8 (c function)": [[25, "c.PyFloat_Pack8"]], "pyfloat_type (c var)": [[25, "c.PyFloat_Type"]], "pyfloat_unpack2 (c function)": [[25, "c.PyFloat_Unpack2"]], "pyfloat_unpack4 (c function)": [[25, "c.PyFloat_Unpack4"]], "pyfloat_unpack8 (c function)": [[25, "c.PyFloat_Unpack8"]], "floating point": [[25, "index-0"], [341, "index-11"], [341, "index-12"], [425, "index-13"]], "pep 523": [[26, "index-0"], [32, "index-39"], [32, "index-40"], [470, "index-36"], [471, "index-41"], [476, "index-25"], [476, "index-26"], [479, "index-24"]], "pyframeobject (c type)": [[26, "c.PyFrameObject"]], "pyframe_check (c function)": [[26, "c.PyFrame_Check"]], "pyframe_getback (c function)": [[26, "c.PyFrame_GetBack"]], "pyframe_getbuiltins (c function)": [[26, "c.PyFrame_GetBuiltins"]], "pyframe_getcode (c function)": [[26, "c.PyFrame_GetCode"]], "pyframe_getgenerator (c function)": [[26, "c.PyFrame_GetGenerator"]], "pyframe_getglobals (c function)": [[26, "c.PyFrame_GetGlobals"]], "pyframe_getlasti (c function)": [[26, "c.PyFrame_GetLasti"]], "pyframe_getlinenumber (c function)": [[26, "c.PyFrame_GetLineNumber"]], "pyframe_getlocals (c function)": [[26, "c.PyFrame_GetLocals"]], "pyframe_getvar (c function)": [[26, "c.PyFrame_GetVar"]], "pyframe_getvarstring (c function)": [[26, "c.PyFrame_GetVarString"]], "pyframe_type (c var)": [[26, "c.PyFrame_Type"]], "pyunstable_interpreterframe_getcode (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetCode"]], "pyunstable_interpreterframe_getlasti (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetLasti"]], "pyunstable_interpreterframe_getline (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetLine"]], "_pyinterpreterframe (c struct)": [[26, "c._PyInterpreterFrame"]], "methodtype (in module types)": [[27, "index-1"], [43, "index-2"], [382, "types.MethodType"]], "pyfunctionobject (c type)": [[27, "c.PyFunctionObject"]], "pyfunction_addwatcher (c function)": [[27, "c.PyFunction_AddWatcher"]], "pyfunction_check (c function)": [[27, "c.PyFunction_Check"]], "pyfunction_clearwatcher (c function)": [[27, "c.PyFunction_ClearWatcher"]], "pyfunction_getannotations (c function)": [[27, "c.PyFunction_GetAnnotations"]], "pyfunction_getclosure (c function)": [[27, "c.PyFunction_GetClosure"]], "pyfunction_getcode (c function)": [[27, "c.PyFunction_GetCode"]], "pyfunction_getdefaults (c function)": [[27, "c.PyFunction_GetDefaults"]], "pyfunction_getglobals (c function)": [[27, "c.PyFunction_GetGlobals"]], "pyfunction_getmodule (c function)": [[27, "c.PyFunction_GetModule"]], "pyfunction_new (c function)": [[27, "c.PyFunction_New"]], "pyfunction_newwithqualname (c function)": [[27, "c.PyFunction_NewWithQualName"]], "pyfunction_setannotations (c function)": [[27, "c.PyFunction_SetAnnotations"]], "pyfunction_setclosure (c function)": [[27, "c.PyFunction_SetClosure"]], "pyfunction_setdefaults (c function)": [[27, "c.PyFunction_SetDefaults"]], "pyfunction_setvectorcall (c function)": [[27, "c.PyFunction_SetVectorcall"]], "pyfunction_type (c var)": [[27, "c.PyFunction_Type"]], "pyfunction_watchcallback (c type)": [[27, "c.PyFunction_WatchCallback"]], "pyfunction_watchevent (c type)": [[27, "c.PyFunction_WatchEvent"]], "function": [[27, "index-0"], [86, "term-function"], [424, "index-28"], [424, "index-34"], [425, "index-33"], [425, "index-34"], [425, "index-39"], [425, "index-40"], [425, "index-41"], [425, "index-42"], [427, "index-23"], [427, "index-52"], [427, "index-53"], [427, "index-90"], [433, "index-24"], [433, "index-26"], [438, "index-6"]], "pygc_collect (c function)": [[28, "c.PyGC_Collect"]], "pygc_disable (c function)": [[28, "c.PyGC_Disable"]], "pygc_enable (c function)": [[28, "c.PyGC_Enable"]], "pygc_isenabled (c function)": [[28, "c.PyGC_IsEnabled"]], "pyobject_gc_del (c function)": [[28, "c.PyObject_GC_Del"]], "pyobject_gc_isfinalized (c function)": [[28, "c.PyObject_GC_IsFinalized"]], "pyobject_gc_istracked (c function)": [[28, "c.PyObject_GC_IsTracked"]], "pyobject_gc_new (c macro)": [[28, "c.PyObject_GC_New"]], "pyobject_gc_newvar (c macro)": [[28, "c.PyObject_GC_NewVar"]], "pyobject_gc_resize (c function)": [[28, "c.PyObject_GC_Resize"]], "pyobject_gc_track (c function)": [[28, "c.PyObject_GC_Track"]], "pyobject_gc_untrack (c function)": [[28, "c.PyObject_GC_UnTrack"]], "pyobject_is_gc (c function)": [[28, "c.PyObject_IS_GC"]], "pyunstable_gc_visitobjects (c function)": [[28, "c.PyUnstable_GC_VisitObjects"]], "pyunstable_object_gc_newwithextradata (c function)": [[28, "c.PyUnstable_Object_GC_NewWithExtraData"]], "py_visit (c function)": [[28, "c.Py_VISIT"]], "gcvisitobjects_t (c type)": [[28, "c.gcvisitobjects_t"]], "inquiry (c type)": [[28, "c.inquiry"]], "traverseproc (c type)": [[28, "c.traverseproc"]], "visitproc (c type)": [[28, "c.visitproc"]], "pygenobject (c type)": [[29, "c.PyGenObject"]], "pygen_check (c function)": [[29, "c.PyGen_Check"]], "pygen_checkexact (c function)": [[29, "c.PyGen_CheckExact"]], "pygen_new (c function)": [[29, "c.PyGen_New"]], "pygen_newwithqualname (c function)": [[29, "c.PyGen_NewWithQualName"]], "pygen_type (c var)": [[29, "c.PyGen_Type"]], "pep 3147": [[30, "index-3"], [84, "index-3"], [160, "index-0"], [160, "index-2"], [160, "index-3"], [247, "index-11"], [247, "index-21"], [247, "index-23"], [247, "index-24"], [308, "index-1"], [308, "index-4"], [321, "index-2"], [359, "index-3"], [429, "index-13"], [447, "index-3"], [472, "index-5"], [473, "index-18"]], "pyimport_addmodule (c function)": [[30, "c.PyImport_AddModule"]], "pyimport_addmoduleobject (c function)": [[30, "c.PyImport_AddModuleObject"]], "pyimport_appendinittab (c function)": [[30, "c.PyImport_AppendInittab"]], "pyimport_execcodemodule (c function)": [[30, "c.PyImport_ExecCodeModule"]], "pyimport_execcodemoduleex (c function)": [[30, "c.PyImport_ExecCodeModuleEx"]], "pyimport_execcodemoduleobject (c function)": [[30, "c.PyImport_ExecCodeModuleObject"]], "pyimport_execcodemodulewithpathnames (c function)": [[30, "c.PyImport_ExecCodeModuleWithPathnames"]], "pyimport_extendinittab (c function)": [[30, "c.PyImport_ExtendInittab"]], "pyimport_frozenmodules (c var)": [[30, "c.PyImport_FrozenModules"]], "pyimport_getimporter (c function)": [[30, "c.PyImport_GetImporter"]], "pyimport_getmagicnumber (c function)": [[30, "c.PyImport_GetMagicNumber"]], "pyimport_getmagictag (c function)": [[30, "c.PyImport_GetMagicTag"]], "pyimport_getmodule (c function)": [[30, "c.PyImport_GetModule"]], "pyimport_getmoduledict (c function)": [[30, "c.PyImport_GetModuleDict"]], "pyimport_import (c function)": [[30, "c.PyImport_Import"]], "pyimport_importfrozenmodule (c function)": [[30, "c.PyImport_ImportFrozenModule"]], "pyimport_importfrozenmoduleobject (c function)": [[30, "c.PyImport_ImportFrozenModuleObject"]], "pyimport_importmodule (c function)": [[30, "c.PyImport_ImportModule"]], "pyimport_importmoduleex (c function)": [[30, "c.PyImport_ImportModuleEx"]], "pyimport_importmodulelevel (c function)": [[30, "c.PyImport_ImportModuleLevel"]], "pyimport_importmodulelevelobject (c function)": [[30, "c.PyImport_ImportModuleLevelObject"]], "pyimport_importmodulenoblock (c function)": [[30, "c.PyImport_ImportModuleNoBlock"]], "pyimport_reloadmodule (c function)": [[30, "c.PyImport_ReloadModule"]], "__all__": [[30, "index-0"], [447, "index-8"]], "__all__ (package variable)": [[30, "index-0"]], "__import__": [[30, "index-1"]], "_frozen (c struct)": [[30, "c._frozen"]], "_inittab (c struct)": [[30, "c._inittab"]], "_inittab.name (c member)": [[30, "c._inittab.name"]], "compile": [[30, "index-2"], [341, "index-63"], [382, "index-4"], [433, "index-44"]], "freeze utility": [[30, "index-4"]], "modules (in module sys)": [[30, "index-0"], [32, "index-15"], [349, "sys.modules"]], "package variable": [[30, "index-0"]], "pep 489": [[32, "index-41"], [44, "index-8"], [70, "index-1"], [72, "index-0"], [247, "index-17"], [247, "index-18"], [247, "index-19"], [247, "index-20"], [247, "index-26"], [247, "index-8"], [475, "index-26"], [475, "index-28"], [475, "index-45"]], "pep 528": [[32, "index-10"], [33, "index-17"], [458, "index-16"], [476, "index-22"]], "pep 529": [[32, "index-8"], [63, "index-5"], [290, "index-27"], [349, "index-34"], [349, "index-9"], [452, "index-40"], [458, "index-17"], [476, "index-20"], [478, "index-19"]], "pep 539": [[32, "index-49"], [477, "index-14"], [477, "index-15"]], "pep 554": [[32, "index-47"], [471, "index-10"]], "pythondebug": [[32, "index-0"], [33, "index-22"], [452, "envvar-PYTHONDEBUG"], [452, "index-2"], [453, "index-6"]], "pythondontwritebytecode": [[32, "index-1"], [33, "index-32"], [84, "index-4"], [349, "index-6"], [452, "envvar-PYTHONDONTWRITEBYTECODE"], [452, "index-1"], [465, "index-20"], [465, "index-24"]], "pythonhashseed": [[32, "index-2"], [32, "index-3"], [33, "index-11"], [425, "index-81"], [452, "envvar-PYTHONHASHSEED"], [452, "index-13"], [452, "index-14"], [452, "index-35"], [473, "index-23"], [473, "index-35"]], "pythonhome": [[32, "index-30"], [32, "index-31"], [32, "index-5"], [33, "index-12"], [34, "index-21"], [34, "index-24"], [351, "index-2"], [351, "index-4"], [359, "index-0"], [452, "envvar-PYTHONHOME"], [452, "index-28"], [452, "index-29"], [452, "index-32"], [452, "index-4"], [458, "index-33"], [458, "index-35"], [458, "index-37"], [471, "index-47"], [476, "index-2"]], "pythoninspect": [[32, "index-6"], [33, "index-14"], [452, "envvar-PYTHONINSPECT"], [452, "index-6"], [462, "index-28"]], "pythonioencoding": [[32, "index-17"], [32, "index-18"], [33, "index-26"], [290, "index-1"], [349, "index-35"], [452, "envvar-PYTHONIOENCODING"], [452, "index-41"], [465, "index-21"], [474, "index-53"]], "pythonlegacywindowsfsencoding": [[32, "index-7"], [33, "index-1"], [349, "index-33"], [452, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [476, "index-19"]], "pythonlegacywindowsstdio": [[32, "index-9"], [33, "index-16"], [349, "index-37"], [452, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [452, "index-36"], [476, "index-21"]], "pythonnousersite": [[32, "index-11"], [33, "index-29"], [331, "index-6"], [452, "envvar-PYTHONNOUSERSITE"], [465, "index-6"]], "pythonoptimize": [[32, "index-12"], [33, "index-21"], [452, "envvar-PYTHONOPTIMIZE"], [452, "index-8"]], "pythonpath": [[32, "index-4"], [33, "index-20"], [34, "index-22"], [34, "index-25"], [70, "index-0"], [148, "index-4"], [349, "index-22"], [349, "index-23"], [351, "index-0"], [351, "index-1"], [359, "index-1"], [429, "index-17"], [429, "index-18"], [447, "index-1"], [447, "index-5"], [447, "index-6"], [452, "envvar-PYTHONPATH"], [452, "index-3"], [452, "index-31"], [452, "index-33"], [452, "index-34"], [456, "index-0"], [458, "index-11"], [458, "index-32"], [458, "index-34"], [458, "index-36"], [474, "index-55"], [474, "index-56"]], "pythonunbuffered": [[32, "index-13"], [33, "index-5"], [349, "index-38"], [452, "envvar-PYTHONUNBUFFERED"], [452, "index-16"]], "pythonverbose": [[32, "index-14"], [33, "index-30"], [452, "envvar-PYTHONVERBOSE"], [452, "index-17"]], "pyeval_acquirelock (c function)": [[32, "c.PyEval_AcquireLock"]], "pyeval_acquirethread (c function)": [[32, "c.PyEval_AcquireThread"]], "pyeval_acquirethread()": [[32, "index-37"]], "pyeval_initthreads (c function)": [[32, "c.PyEval_InitThreads"]], "pyeval_initthreads()": [[32, "index-15"]], "pyeval_releaselock (c function)": [[32, "c.PyEval_ReleaseLock"]], "pyeval_releasethread (c function)": [[32, "c.PyEval_ReleaseThread"]], "pyeval_releasethread()": [[32, "index-37"]], "pyeval_restorethread (c function)": [[32, "c.PyEval_RestoreThread"]], "pyeval_restorethread()": [[32, "index-36"], [32, "index-37"]], "pyeval_savethread (c function)": [[32, "c.PyEval_SaveThread"]], "pyeval_savethread()": [[32, "index-36"], [32, "index-37"]], "pyeval_setprofile (c function)": [[32, "c.PyEval_SetProfile"]], "pyeval_setprofileallthreads (c function)": [[32, "c.PyEval_SetProfileAllThreads"]], "pyeval_settrace (c function)": [[32, "c.PyEval_SetTrace"]], "pyeval_settraceallthreads (c function)": [[32, "c.PyEval_SetTraceAllThreads"]], "pyeval_threadsinitialized (c function)": [[32, "c.PyEval_ThreadsInitialized"]], "pygilstate_check (c function)": [[32, "c.PyGILState_Check"]], "pygilstate_ensure (c function)": [[32, "c.PyGILState_Ensure"]], "pygilstate_getthisthreadstate (c function)": [[32, "c.PyGILState_GetThisThreadState"]], "pygilstate_release (c function)": [[32, "c.PyGILState_Release"]], "pyinterpreterconfig (c type)": [[32, "c.PyInterpreterConfig"]], "pyinterpreterconfig.allow_daemon_threads (c member)": [[32, "c.PyInterpreterConfig.allow_daemon_threads"]], "pyinterpreterconfig.allow_exec (c member)": [[32, "c.PyInterpreterConfig.allow_exec"]], "pyinterpreterconfig.allow_fork (c member)": [[32, "c.PyInterpreterConfig.allow_fork"]], "pyinterpreterconfig.allow_threads (c member)": [[32, "c.PyInterpreterConfig.allow_threads"]], "pyinterpreterconfig.check_multi_interp_extensions (c member)": [[32, "c.PyInterpreterConfig.check_multi_interp_extensions"]], "pyinterpreterconfig.gil (c member)": [[32, "c.PyInterpreterConfig.gil"]], "pyinterpreterconfig.use_main_obmalloc (c member)": [[32, "c.PyInterpreterConfig.use_main_obmalloc"]], "pyinterpreterconfig_default_gil (c macro)": [[32, "c.PyInterpreterConfig_DEFAULT_GIL"]], "pyinterpreterconfig_own_gil (c macro)": [[32, "c.PyInterpreterConfig_OWN_GIL"]], "pyinterpreterconfig_shared_gil (c macro)": [[32, "c.PyInterpreterConfig_SHARED_GIL"]], "pyinterpreterstate (c type)": [[32, "c.PyInterpreterState"]], "pyinterpreterstate_clear (c function)": [[32, "c.PyInterpreterState_Clear"]], "pyinterpreterstate_delete (c function)": [[32, "c.PyInterpreterState_Delete"]], "pyinterpreterstate_get (c function)": [[32, "c.PyInterpreterState_Get"]], "pyinterpreterstate_getdict (c function)": [[32, "c.PyInterpreterState_GetDict"]], "pyinterpreterstate_getid (c function)": [[32, "c.PyInterpreterState_GetID"]], "pyinterpreterstate_head (c function)": [[32, "c.PyInterpreterState_Head"]], "pyinterpreterstate_main (c function)": [[32, "c.PyInterpreterState_Main"]], "pyinterpreterstate_new (c function)": [[32, "c.PyInterpreterState_New"]], "pyinterpreterstate_next (c function)": [[32, "c.PyInterpreterState_Next"]], "pyinterpreterstate_threadhead (c function)": [[32, "c.PyInterpreterState_ThreadHead"]], "pysys_setargv (c function)": [[32, "c.PySys_SetArgv"]], "pysys_setargv()": [[32, "index-15"]], "pysys_setargvex (c function)": [[32, "c.PySys_SetArgvEx"]], "pysys_setargvex()": [[32, "index-15"]], "pythreadstate": [[32, "index-34"]], "pythreadstate (c type)": [[32, "c.PyThreadState"]], "pythreadstate.interp (c member)": [[32, "c.PyThreadState.interp"]], "pythreadstate_clear (c function)": [[32, "c.PyThreadState_Clear"]], "pythreadstate_delete (c function)": [[32, "c.PyThreadState_Delete"]], "pythreadstate_deletecurrent (c function)": [[32, "c.PyThreadState_DeleteCurrent"]], "pythreadstate_entertracing (c function)": [[32, "c.PyThreadState_EnterTracing"]], "pythreadstate_get (c function)": [[32, "c.PyThreadState_Get"]], "pythreadstate_getdict (c function)": [[32, "c.PyThreadState_GetDict"]], "pythreadstate_getframe (c function)": [[32, "c.PyThreadState_GetFrame"]], "pythreadstate_getid (c function)": [[32, "c.PyThreadState_GetID"]], "pythreadstate_getinterpreter (c function)": [[32, "c.PyThreadState_GetInterpreter"]], "pythreadstate_leavetracing (c function)": [[32, "c.PyThreadState_LeaveTracing"]], "pythreadstate_new (c function)": [[32, "c.PyThreadState_New"]], "pythreadstate_next (c function)": [[32, "c.PyThreadState_Next"]], "pythreadstate_setasyncexc (c function)": [[32, "c.PyThreadState_SetAsyncExc"]], "pythreadstate_swap (c function)": [[32, "c.PyThreadState_Swap"]], "pythread_reinittls (c function)": [[32, "c.PyThread_ReInitTLS"]], "pythread_create_key (c function)": [[32, "c.PyThread_create_key"]], "pythread_delete_key (c function)": [[32, "c.PyThread_delete_key"]], "pythread_delete_key_value (c function)": [[32, "c.PyThread_delete_key_value"]], "pythread_get_key_value (c function)": [[32, "c.PyThread_get_key_value"]], "pythread_set_key_value (c function)": [[32, "c.PyThread_set_key_value"]], "pythread_tss_alloc (c function)": [[32, "c.PyThread_tss_alloc"]], "pythread_tss_create (c function)": [[32, "c.PyThread_tss_create"]], "pythread_tss_delete (c function)": [[32, "c.PyThread_tss_delete"]], "pythread_tss_free (c function)": [[32, "c.PyThread_tss_free"]], "pythread_tss_get (c function)": [[32, "c.PyThread_tss_get"]], "pythread_tss_is_created (c function)": [[32, "c.PyThread_tss_is_created"]], "pythread_tss_set (c function)": [[32, "c.PyThread_tss_set"]], "pytrace_call (c var)": [[32, "c.PyTrace_CALL"]], "pytrace_c_call (c var)": [[32, "c.PyTrace_C_CALL"]], "pytrace_c_exception (c var)": [[32, "c.PyTrace_C_EXCEPTION"]], "pytrace_c_return (c var)": [[32, "c.PyTrace_C_RETURN"]], "pytrace_exception (c var)": [[32, "c.PyTrace_EXCEPTION"]], "pytrace_line (c var)": [[32, "c.PyTrace_LINE"]], "pytrace_opcode (c var)": [[32, "c.PyTrace_OPCODE"]], "pytrace_return (c var)": [[32, "c.PyTrace_RETURN"]], "py_addpendingcall (c function)": [[32, "c.Py_AddPendingCall"]], "py_addpendingcall()": [[32, "index-48"]], "py_begin_allow_threads": [[32, "index-35"]], "py_begin_allow_threads (c macro)": [[32, "c.Py_BEGIN_ALLOW_THREADS"]], "py_block_threads (c macro)": [[32, "c.Py_BLOCK_THREADS"]], "py_byteswarningflag (c var)": [[32, "c.Py_BytesWarningFlag"]], "py_debugflag (c var)": [[32, "c.Py_DebugFlag"]], "py_dontwritebytecodeflag (c var)": [[32, "c.Py_DontWriteBytecodeFlag"]], "py_end_allow_threads": [[32, "index-35"]], "py_end_allow_threads (c macro)": [[32, "c.Py_END_ALLOW_THREADS"]], "py_endinterpreter (c function)": [[32, "c.Py_EndInterpreter"]], "py_fatalerror()": [[32, "index-29"]], "py_finalize (c function)": [[32, "c.Py_Finalize"]], "py_finalizeex (c function)": [[32, "c.Py_FinalizeEx"]], "py_finalizeex()": [[32, "index-15"], [32, "index-43"], [32, "index-46"], [58, "index-2"], [58, "index-3"]], "py_frozenflag (c var)": [[32, "c.Py_FrozenFlag"]], "py_getbuildinfo (c function)": [[32, "c.Py_GetBuildInfo"]], "py_getcompiler (c function)": [[32, "c.Py_GetCompiler"]], "py_getcopyright (c function)": [[32, "c.Py_GetCopyright"]], "py_getexecprefix (c function)": [[32, "c.Py_GetExecPrefix"]], "py_getpath (c function)": [[32, "c.Py_GetPath"]], "py_getpath()": [[32, "index-19"], [32, "index-23"], [34, "index-23"]], "py_getplatform (c function)": [[32, "c.Py_GetPlatform"]], "py_getprefix (c function)": [[32, "c.Py_GetPrefix"]], "py_getprogramfullpath (c function)": [[32, "c.Py_GetProgramFullPath"]], "py_getprogramname (c function)": [[32, "c.Py_GetProgramName"]], "py_getpythonhome (c function)": [[32, "c.Py_GetPythonHome"]], "py_getversion (c function)": [[32, "c.Py_GetVersion"]], "py_hashrandomizationflag (c var)": [[32, "c.Py_HashRandomizationFlag"]], "py_ignoreenvironmentflag (c var)": [[32, "c.Py_IgnoreEnvironmentFlag"]], "py_initialize (c function)": [[32, "c.Py_Initialize"]], "py_initialize()": [[32, "index-16"], [32, "index-19"], [32, "index-43"], [34, "index-18"]], "py_initializeex (c function)": [[32, "c.Py_InitializeEx"]], "py_inspectflag (c var)": [[32, "c.Py_InspectFlag"]], "py_interactiveflag (c var)": [[32, "c.Py_InteractiveFlag"]], "py_isinitialized (c function)": [[32, "c.Py_IsInitialized"]], "py_isolatedflag (c var)": [[32, "c.Py_IsolatedFlag"]], "py_legacywindowsfsencodingflag (c var)": [[32, "c.Py_LegacyWindowsFSEncodingFlag"]], "py_legacywindowsstdioflag (c var)": [[32, "c.Py_LegacyWindowsStdioFlag"]], "py_newinterpreter (c function)": [[32, "c.Py_NewInterpreter"]], "py_newinterpreterfromconfig (c function)": [[32, "c.Py_NewInterpreterFromConfig"]], "py_nositeflag (c var)": [[32, "c.Py_NoSiteFlag"]], "py_nousersitedirectory (c var)": [[32, "c.Py_NoUserSiteDirectory"]], "py_optimizeflag (c var)": [[32, "c.Py_OptimizeFlag"]], "py_quietflag (c var)": [[32, "c.Py_QuietFlag"]], "py_setpath (c function)": [[32, "c.Py_SetPath"]], "py_setpath()": [[32, "index-22"]], "py_setprogramname (c function)": [[32, "c.Py_SetProgramName"]], "py_setprogramname()": [[32, "index-15"], [32, "index-20"], [32, "index-21"], [34, "index-23"]], "py_setpythonhome (c function)": [[32, "c.Py_SetPythonHome"]], "py_setstandardstreamencoding (c function)": [[32, "c.Py_SetStandardStreamEncoding"]], "py_unblock_threads (c macro)": [[32, "c.Py_UNBLOCK_THREADS"]], "py_unbufferedstdioflag (c var)": [[32, "c.Py_UnbufferedStdioFlag"]], "py_verboseflag (c var)": [[32, "c.Py_VerboseFlag"]], "py_tracefunc (c type)": [[32, "c.Py_tracefunc"]], "py_tss_needs_init (c macro)": [[32, "c.Py_tss_NEEDS_INIT"]], "py_tss_t (c type)": [[32, "c.Py_tss_t"]], "_pyframeevalfunction (c type)": [[32, "c._PyFrameEvalFunction"]], "_pyinterpreterstate_getevalframefunc (c function)": [[32, "c._PyInterpreterState_GetEvalFrameFunc"]], "_pyinterpreterstate_setevalframefunc (c function)": [[32, "c._PyInterpreterState_SetEvalFrameFunc"]], "__main__": [[32, "index-15"], [32, "index-42"], [32, "index-45"], [34, "index-18"], [111, "module-__main__"], [321, "index-0"], [321, "index-4"], [426, "index-10"], [434, "index-2"], [434, "index-3"]], "_thread": [[32, "index-38"], [112, "module-_thread"]], "argv (in module sys)": [[32, "index-29"], [349, "sys.argv"]], "builtins": [[32, "index-15"], [32, "index-42"], [32, "index-45"], [34, "index-18"], [145, "module-builtins"], [222, "index-13"], [434, "index-2"], [447, "index-7"]], "close() (in module os)": [[32, "index-44"], [290, "os.close"]], "copyright (in module sys)": [[32, "index-26"], [349, "sys.copyright"]], "environment variable": [[32, "index-0"], [32, "index-1"], [32, "index-11"], [32, "index-12"], [32, "index-13"], [32, "index-14"], [32, "index-17"], [32, "index-18"], [32, "index-2"], [32, "index-3"], [32, "index-30"], [32, "index-31"], [32, "index-4"], [32, "index-5"], [32, "index-6"], [32, "index-7"], [32, "index-9"], [33, "index-1"], [33, "index-10"], [33, "index-11"], [33, "index-12"], [33, "index-13"], [33, "index-14"], [33, "index-15"], [33, "index-16"], [33, "index-18"], [33, "index-19"], [33, "index-2"], [33, "index-20"], [33, "index-21"], [33, "index-22"], [33, "index-23"], [33, "index-24"], [33, "index-25"], [33, "index-26"], [33, "index-27"], [33, "index-28"], [33, "index-29"], [33, "index-3"], [33, "index-30"], [33, "index-31"], [33, "index-32"], [33, "index-35"], [33, "index-36"], [33, "index-4"], [33, "index-5"], [33, "index-6"], [33, "index-8"], [33, "index-9"], [34, "index-19"], [34, "index-20"], [34, "index-21"], [34, "index-22"], [34, "index-24"], [34, "index-25"], [41, "index-1"], [41, "index-2"], [41, "index-3"], [41, "index-4"], [41, "index-5"], [62, "index-0"], [70, "index-0"], [83, "index-0"], [83, "index-1"], [84, "index-4"], [101, "index-0"], [122, "index-0"], [123, "index-5"], [148, "index-3"], [148, "index-4"], [148, "index-6"], [160, "index-1"], [174, "index-0"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [174, "index-4"], [174, "index-5"], [174, "index-6"], [185, "index-0"], [185, "index-1"], [185, "index-2"], [185, "index-3"], [185, "index-4"], [185, "index-5"], [211, "index-0"], [222, "index-1"], [222, "index-16"], [225, "index-0"], [226, "index-0"], [226, "index-1"], [226, "index-2"], [227, "index-0"], [227, "index-1"], [227, "index-2"], [227, "index-3"], [227, "index-5"], [227, "index-6"], [227, "index-7"], [227, "index-8"], [244, "index-5"], [244, "index-6"], [255, "index-3"], [263, "index-1"], [263, "index-2"], [263, "index-3"], [290, "index-1"], [290, "index-10"], [290, "index-11"], [290, "index-2"], [290, "index-3"], [290, "index-33"], [290, "index-34"], [290, "index-35"], [290, "index-36"], [290, "index-39"], [290, "index-4"], [290, "index-40"], [290, "index-41"], [290, "index-42"], [290, "index-43"], [290, "index-52"], [291, "index-3"], [291, "index-4"], [291, "index-5"], [291, "index-6"], [291, "index-7"], [291, "index-8"], [292, "index-1"], [292, "index-2"], [308, "index-3"], [308, "index-6"], [308, "index-7"], [310, "index-1"], [310, "index-2"], [317, "index-0"], [324, "index-2"], [331, "index-3"], [331, "index-5"], [331, "index-6"], [331, "index-7"], [331, "index-8"], [338, "index-3"], [338, "index-4"], [341, "index-67"], [341, "index-68"], [345, "index-2"], [345, "index-3"], [345, "index-4"], [349, "index-17"], [349, "index-18"], [349, "index-22"], [349, "index-23"], [349, "index-24"], [349, "index-3"], [349, "index-33"], [349, "index-35"], [349, "index-36"], [349, "index-37"], [349, "index-38"], [349, "index-4"], [349, "index-5"], [349, "index-6"], [349, "index-7"], [351, "index-0"], [351, "index-1"], [351, "index-2"], [351, "index-3"], [351, "index-4"], [357, "index-1"], [357, "index-2"], [357, "index-3"], [359, "index-0"], [359, "index-1"], [359, "index-2"], [363, "index-13"], [363, "index-14"], [363, "index-15"], [363, "index-16"], [363, "index-17"], [363, "index-18"], [366, "index-0"], [366, "index-1"], [379, "index-0"], [379, "index-1"], [379, "index-2"], [392, "index-3"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [397, "index-1"], [397, "index-2"], [397, "index-3"], [397, "index-4"], [397, "index-5"], [400, "index-0"], [400, "index-1"], [400, "index-2"], [400, "index-3"], [407, "index-0"], [422, "envvar-PYTHONTZPATH"], [422, "index-2"], [425, "index-61"], [425, "index-81"], [429, "index-18"], [435, "index-0"], [435, "index-1"], [447, "index-1"], [447, "index-2"], [447, "index-5"], [447, "index-6"], [452, "envvar-PYTHONASYNCIODEBUG"], [452, "envvar-PYTHONBREAKPOINT"], [452, "envvar-PYTHONCASEOK"], [452, "envvar-PYTHONCOERCECLOCALE"], [452, "envvar-PYTHONDEBUG"], [452, "envvar-PYTHONDEVMODE"], [452, "envvar-PYTHONDONTWRITEBYTECODE"], [452, "envvar-PYTHONDUMPREFS"], [452, "envvar-PYTHONDUMPREFSFILE-FILENAME"], [452, "envvar-PYTHONEXECUTABLE"], [452, "envvar-PYTHONFAULTHANDLER"], [452, "envvar-PYTHONHASHSEED"], [452, "envvar-PYTHONHOME"], [452, "envvar-PYTHONINSPECT"], [452, "envvar-PYTHONINTMAXSTRDIGITS"], [452, "envvar-PYTHONIOENCODING"], [452, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [452, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [452, "envvar-PYTHONMALLOC"], [452, "envvar-PYTHONMALLOCSTATS"], [452, "envvar-PYTHONNODEBUGRANGES"], [452, "envvar-PYTHONNOUSERSITE"], [452, "envvar-PYTHONOPTIMIZE"], [452, "envvar-PYTHONPATH"], [452, "envvar-PYTHONPERFSUPPORT"], [452, "envvar-PYTHONPLATLIBDIR"], [452, "envvar-PYTHONPROFILEIMPORTTIME"], [452, "envvar-PYTHONPYCACHEPREFIX"], [452, "envvar-PYTHONSAFEPATH"], [452, "envvar-PYTHONSTARTUP"], [452, "envvar-PYTHONTRACEMALLOC"], [452, "envvar-PYTHONUNBUFFERED"], [452, "envvar-PYTHONUSERBASE"], [452, "envvar-PYTHONUTF8"], [452, "envvar-PYTHONVERBOSE"], [452, "envvar-PYTHONWARNDEFAULTENCODING"], [452, "envvar-PYTHONWARNINGS"], [452, "index-1"], [452, "index-12"], [452, "index-13"], [452, "index-14"], [452, "index-16"], [452, "index-17"], [452, "index-18"], [452, "index-19"], [452, "index-2"], [452, "index-20"], [452, "index-21"], [452, "index-22"], [452, "index-23"], [452, "index-24"], [452, "index-25"], [452, "index-26"], [452, "index-27"], [452, "index-28"], [452, "index-29"], [452, "index-3"], [452, "index-30"], [452, "index-31"], [452, "index-32"], [452, "index-33"], [452, "index-34"], [452, "index-35"], [452, "index-36"], [452, "index-39"], [452, "index-4"], [452, "index-41"], [452, "index-42"], [452, "index-5"], [452, "index-6"], [452, "index-8"], [453, "envvar-BASECFLAGS"], [453, "envvar-BASECPPFLAGS"], [453, "envvar-BLDSHARED"], [453, "envvar-CC"], [453, "envvar-CCSHARED"], [453, "envvar-CFLAGS"], [453, "envvar-CFLAGSFORSHARED"], [453, "envvar-CFLAGS_ALIASING"], [453, "envvar-CFLAGS_NODIST"], [453, "envvar-COMPILEALL_OPTS"], [453, "envvar-CONFIGURE_CFLAGS"], [453, "envvar-CONFIGURE_CFLAGS_NODIST"], [453, "envvar-CONFIGURE_CPPFLAGS"], [453, "envvar-CONFIGURE_LDFLAGS"], [453, "envvar-CONFIGURE_LDFLAGS_NODIST"], [453, "envvar-CPPFLAGS"], [453, "envvar-CXX"], [453, "envvar-EXTRA_CFLAGS"], [453, "envvar-LDFLAGS"], [453, "envvar-LDFLAGS_NODIST"], [453, "envvar-LDSHARED"], [453, "envvar-LIBS"], [453, "envvar-LINKCC"], [453, "envvar-OPT"], [453, "envvar-PROFILE_TASK"], [453, "envvar-PURIFY"], [453, "envvar-PY_BUILTIN_MODULE_CFLAGS"], [453, "envvar-PY_CFLAGS"], [453, "envvar-PY_CFLAGS_NODIST"], [453, "envvar-PY_CORE_CFLAGS"], [453, "envvar-PY_CORE_LDFLAGS"], [453, "envvar-PY_CPPFLAGS"], [453, "envvar-PY_LDFLAGS"], [453, "envvar-PY_LDFLAGS_NODIST"], [453, "envvar-PY_STDMODULE_CFLAGS"], [453, "index-10"], [453, "index-11"], [453, "index-12"], [453, "index-13"], [453, "index-14"], [453, "index-15"], [453, "index-16"], [453, "index-17"], [453, "index-18"], [453, "index-19"], [453, "index-2"], [453, "index-20"], [453, "index-21"], [453, "index-22"], [453, "index-23"], [453, "index-24"], [453, "index-25"], [453, "index-26"], [453, "index-27"], [453, "index-28"], [453, "index-4"], [453, "index-5"], [453, "index-6"], [453, "index-7"], [453, "index-8"], [453, "index-9"], [456, "index-0"], [457, "index-0"], [458, "index-1"], [458, "index-10"], [458, "index-11"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-15"], [458, "index-18"], [458, "index-2"], [458, "index-20"], [458, "index-22"], [458, "index-23"], [458, "index-24"], [458, "index-25"], [458, "index-26"], [458, "index-27"], [458, "index-28"], [458, "index-29"], [458, "index-3"], [458, "index-30"], [458, "index-31"], [458, "index-32"], [458, "index-33"], [458, "index-34"], [458, "index-35"], [458, "index-36"], [458, "index-37"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"], [460, "index-11"], [462, "index-24"], [462, "index-25"], [462, "index-26"], [462, "index-27"], [462, "index-28"], [465, "index-20"], [465, "index-21"], [465, "index-24"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [466, "index-1"], [466, "index-12"], [466, "index-14"], [466, "index-15"], [466, "index-8"], [466, "index-9"], [469, "index-18"], [470, "index-1"], [470, "index-21"], [470, "index-6"], [471, "index-23"], [471, "index-47"], [472, "index-10"], [473, "index-23"], [473, "index-24"], [473, "index-35"], [474, "index-40"], [474, "index-41"], [474, "index-50"], [474, "index-53"], [474, "index-54"], [474, "index-55"], [474, "index-56"], [474, "index-57"], [474, "index-58"], [476, "index-19"], [476, "index-2"], [476, "index-21"], [476, "index-27"], [476, "index-38"], [477, "index-12"], [477, "index-26"], [477, "index-27"], [477, "index-31"], [477, "index-36"], [477, "index-4"], [477, "index-8"], [478, "index-13"], [478, "index-14"], [478, "index-2"], [478, "index-20"], [478, "index-21"], [478, "index-22"], [478, "index-3"], [479, "index-21"]], "executable (in module sys)": [[32, "index-21"], [349, "sys.executable"]], "global interpreter lock": [[32, "index-32"], [86, "term-global-interpreter-lock"]], "interpreter lock": [[32, "index-32"]], "lock, interpreter": [[32, "index-32"]], "main()": [[32, "index-16"], [32, "index-19"], [32, "index-29"]], "path": [[32, "index-15"], [32, "index-22"], [32, "index-23"], [34, "index-19"], [34, "index-20"], [34, "index-18"], [83, "index-0"], [83, "index-1"], [148, "index-3"], [148, "index-6"], [262, "index-0"], [290, "index-33"], [290, "index-34"], [290, "index-35"], [290, "index-36"], [290, "index-39"], [290, "index-40"], [290, "index-41"], [290, "index-42"], [290, "index-52"], [291, "index-0"], [293, "index-0"], [331, "index-3"], [331, "index-0"], [331, "index-4"], [345, "index-2"], [349, "index-21"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [400, "index-3"], [429, "index-9"], [435, "index-0"], [447, "index-2"], [447, "index-0"], [452, "index-30"], [457, "index-0"], [458, "index-1"], [458, "index-10"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-18"], [458, "index-2"], [458, "index-20"], [458, "index-22"], [458, "index-23"], [458, "index-25"], [458, "index-3"], [458, "index-5"], [458, "index-9"], [474, "index-54"], [474, "index-57"], [474, "index-58"], [478, "index-22"]], "path (in module sys)": [[32, "index-15"], [32, "index-22"], [32, "index-23"], [34, "index-18"], [349, "sys.path"]], "platform (in module sys)": [[32, "index-25"], [349, "sys.platform"]], "sdterr": [[32, "index-16"]], "search": [[32, "index-15"], [32, "index-22"], [32, "index-23"], [34, "index-18"], [262, "index-0"], [331, "index-0"], [349, "index-21"], [447, "index-0"]], "setswitchinterval() (in module sys)": [[32, "index-33"], [349, "sys.setswitchinterval"]], "stderr (in module sys)": [[32, "index-42"], [32, "index-45"], [349, "sys.stderr"], [425, "index-55"]], "stdin": [[32, "index-16"]], "stdin (in module sys)": [[32, "index-42"], [32, "index-45"], [349, "sys.stdin"], [425, "index-55"]], "stdout": [[32, "index-16"]], "stdout (in module sys)": [[32, "index-42"], [32, "index-45"], [349, "sys.stdout"], [425, "index-55"]], "sys": [[32, "index-15"], [32, "index-42"], [32, "index-45"], [34, "index-18"], [222, "index-8"], [349, "module-sys"], [424, "index-11"], [434, "index-2"], [447, "index-4"]], "version (in module sys)": [[32, "index-24"], [32, "index-27"], [32, "index-28"], [349, "sys.version"]], "pep 432": [[33, "index-37"], [33, "index-38"], [477, "index-38"]], "pep 538": [[33, "index-33"], [263, "index-6"], [452, "index-43"], [453, "index-3"], [477, "index-10"], [477, "index-3"], [477, "index-6"], [477, "index-7"]], "pep 540": [[33, "index-34"], [263, "index-7"], [290, "index-0"], [477, "index-11"], [477, "index-9"]], "pep 552": [[33, "index-7"], [247, "index-9"], [308, "index-5"], [470, "index-23"], [477, "index-22"], [477, "index-23"]], "pep 587": [[33, "index-0"], [470, "index-38"], [478, "index-5"], [478, "index-6"]], "pythoncoerceclocale": [[33, "index-36"], [290, "index-4"], [452, "envvar-PYTHONCOERCECLOCALE"], [453, "index-2"], [477, "index-4"]], "pythondevmode": [[33, "index-8"], [185, "index-0"], [452, "envvar-PYTHONDEVMODE"], [477, "index-26"]], "pythondumprefs": [[33, "index-9"], [62, "index-0"], [452, "envvar-PYTHONDUMPREFS"], [453, "index-7"], [478, "index-3"]], "pythonexecutable": [[33, "index-23"], [452, "envvar-PYTHONEXECUTABLE"]], "pythonfaulthandler": [[33, "index-10"], [185, "index-4"], [211, "index-0"], [452, "envvar-PYTHONFAULTHANDLER"], [452, "index-19"], [473, "index-24"]], "pythonintmaxstrdigits": [[33, "index-15"], [341, "index-67"], [341, "index-68"], [349, "index-17"], [452, "envvar-PYTHONINTMAXSTRDIGITS"], [452, "index-21"]], "pythonmallocstats": [[33, "index-18"], [41, "index-2"], [452, "envvar-PYTHONMALLOCSTATS"]], "pythonnodebugranges": [[33, "index-6"], [425, "index-61"], [452, "envvar-PYTHONNODEBUGRANGES"], [452, "index-26"], [470, "index-6"]], "pythonperfsupport": [[33, "index-28"], [101, "index-0"], [452, "envvar-PYTHONPERFSUPPORT"], [452, "index-27"], [471, "index-23"]], "pythonplatlibdir": [[33, "index-19"], [351, "index-3"], [452, "envvar-PYTHONPLATLIBDIR"]], "pythonprofileimporttime": [[33, "index-13"], [452, "envvar-PYTHONPROFILEIMPORTTIME"], [452, "index-22"], [477, "index-27"]], "pythonpycacheprefix": [[33, "index-25"], [349, "index-7"], [452, "envvar-PYTHONPYCACHEPREFIX"], [452, "index-24"], [478, "index-2"]], "pythonsafepath": [[33, "index-3"], [324, "index-2"], [349, "index-24"], [452, "envvar-PYTHONSAFEPATH"], [452, "index-12"], [470, "index-1"], [470, "index-21"]], "pythontracemalloc": [[33, "index-27"], [379, "index-0"], [379, "index-1"], [379, "index-2"], [452, "envvar-PYTHONTRACEMALLOC"], [452, "index-20"]], "pythonutf8": [[33, "index-2"], [33, "index-35"], [290, "index-2"], [290, "index-3"], [349, "index-36"], [452, "envvar-PYTHONUTF8"], [452, "index-23"], [452, "index-42"], [458, "index-15"], [477, "index-8"]], "pythonwarnings": [[33, "index-31"], [185, "index-1"], [397, "index-1"], [397, "index-2"], [397, "index-3"], [397, "index-4"], [397, "index-5"], [452, "envvar-PYTHONWARNINGS"], [452, "index-18"], [466, "index-1"], [466, "index-8"], [472, "index-10"], [477, "index-36"]], "pyconfig (c type)": [[33, "c.PyConfig"]], "pyconfig.argv (c member)": [[33, "c.PyConfig.argv"]], "pyconfig.base_exec_prefix (c member)": [[33, "c.PyConfig.base_exec_prefix"]], "pyconfig.base_executable (c member)": [[33, "c.PyConfig.base_executable"]], "pyconfig.base_prefix (c member)": [[33, "c.PyConfig.base_prefix"]], "pyconfig.buffered_stdio (c member)": [[33, "c.PyConfig.buffered_stdio"]], "pyconfig.bytes_warning (c member)": [[33, "c.PyConfig.bytes_warning"]], "pyconfig.check_hash_pycs_mode (c member)": [[33, "c.PyConfig.check_hash_pycs_mode"]], "pyconfig.code_debug_ranges (c member)": [[33, "c.PyConfig.code_debug_ranges"]], "pyconfig.configure_c_stdio (c member)": [[33, "c.PyConfig.configure_c_stdio"]], "pyconfig.dev_mode (c member)": [[33, "c.PyConfig.dev_mode"]], "pyconfig.dump_refs (c member)": [[33, "c.PyConfig.dump_refs"]], "pyconfig.exec_prefix (c member)": [[33, "c.PyConfig.exec_prefix"]], "pyconfig.executable (c member)": [[33, "c.PyConfig.executable"]], "pyconfig.faulthandler (c member)": [[33, "c.PyConfig.faulthandler"]], "pyconfig.filesystem_encoding (c member)": [[33, "c.PyConfig.filesystem_encoding"]], "pyconfig.filesystem_errors (c member)": [[33, "c.PyConfig.filesystem_errors"]], "pyconfig.hash_seed (c member)": [[33, "c.PyConfig.hash_seed"]], "pyconfig.home (c member)": [[33, "c.PyConfig.home"]], "pyconfig.import_time (c member)": [[33, "c.PyConfig.import_time"]], "pyconfig.inspect (c member)": [[33, "c.PyConfig.inspect"]], "pyconfig.install_signal_handlers (c member)": [[33, "c.PyConfig.install_signal_handlers"]], "pyconfig.int_max_str_digits (c member)": [[33, "c.PyConfig.int_max_str_digits"]], "pyconfig.interactive (c member)": [[33, "c.PyConfig.interactive"]], "pyconfig.isolated (c member)": [[33, "c.PyConfig.isolated"]], "pyconfig.legacy_windows_stdio (c member)": [[33, "c.PyConfig.legacy_windows_stdio"]], "pyconfig.malloc_stats (c member)": [[33, "c.PyConfig.malloc_stats"]], "pyconfig.module_search_paths (c member)": [[33, "c.PyConfig.module_search_paths"]], "pyconfig.module_search_paths_set (c member)": [[33, "c.PyConfig.module_search_paths_set"]], "pyconfig.optimization_level (c member)": [[33, "c.PyConfig.optimization_level"]], "pyconfig.orig_argv (c member)": [[33, "c.PyConfig.orig_argv"]], "pyconfig.parse_argv (c member)": [[33, "c.PyConfig.parse_argv"]], "pyconfig.parser_debug (c member)": [[33, "c.PyConfig.parser_debug"]], "pyconfig.pathconfig_warnings (c member)": [[33, "c.PyConfig.pathconfig_warnings"]], "pyconfig.perf_profiling (c member)": [[33, "c.PyConfig.perf_profiling"]], "pyconfig.platlibdir (c member)": [[33, "c.PyConfig.platlibdir"]], "pyconfig.prefix (c member)": [[33, "c.PyConfig.prefix"]], "pyconfig.program_name (c member)": [[33, "c.PyConfig.program_name"]], "pyconfig.pycache_prefix (c member)": [[33, "c.PyConfig.pycache_prefix"]], "pyconfig.pythonpath_env (c member)": [[33, "c.PyConfig.pythonpath_env"]], "pyconfig.quiet (c member)": [[33, "c.PyConfig.quiet"]], "pyconfig.run_command (c member)": [[33, "c.PyConfig.run_command"]], "pyconfig.run_filename (c member)": [[33, "c.PyConfig.run_filename"]], "pyconfig.run_module (c member)": [[33, "c.PyConfig.run_module"]], "pyconfig.safe_path (c member)": [[33, "c.PyConfig.safe_path"]], "pyconfig.show_ref_count (c member)": [[33, "c.PyConfig.show_ref_count"]], "pyconfig.site_import (c member)": [[33, "c.PyConfig.site_import"]], "pyconfig.skip_source_first_line (c member)": [[33, "c.PyConfig.skip_source_first_line"]], "pyconfig.stdio_encoding (c member)": [[33, "c.PyConfig.stdio_encoding"]], "pyconfig.stdio_errors (c member)": [[33, "c.PyConfig.stdio_errors"]], "pyconfig.tracemalloc (c member)": [[33, "c.PyConfig.tracemalloc"]], "pyconfig.use_environment (c member)": [[33, "c.PyConfig.use_environment"]], "pyconfig.use_hash_seed (c member)": [[33, "c.PyConfig.use_hash_seed"]], "pyconfig.user_site_directory (c member)": [[33, "c.PyConfig.user_site_directory"]], "pyconfig.verbose (c member)": [[33, "c.PyConfig.verbose"]], "pyconfig.warn_default_encoding (c member)": [[33, "c.PyConfig.warn_default_encoding"]], "pyconfig.warnoptions (c member)": [[33, "c.PyConfig.warnoptions"]], "pyconfig.write_bytecode (c member)": [[33, "c.PyConfig.write_bytecode"]], "pyconfig.xoptions (c member)": [[33, "c.PyConfig.xoptions"]], "pyconfig_clear (c function)": [[33, "c.PyConfig_Clear"]], "pyconfig_initisolatedconfig (c function)": [[33, "c.PyConfig_InitIsolatedConfig"]], "pyconfig_initpythonconfig (c function)": [[33, "c.PyConfig_InitPythonConfig"]], "pyconfig_read (c function)": [[33, "c.PyConfig_Read"]], "pyconfig_setargv (c function)": [[33, "c.PyConfig_SetArgv"]], "pyconfig_setbytesargv (c function)": [[33, "c.PyConfig_SetBytesArgv"]], "pyconfig_setbytesstring (c function)": [[33, "c.PyConfig_SetBytesString"]], "pyconfig_setstring (c function)": [[33, "c.PyConfig_SetString"]], "pyconfig_setwidestringlist (c function)": [[33, "c.PyConfig_SetWideStringList"]], "pypreconfig (c type)": [[33, "c.PyPreConfig"]], "pypreconfig.allocator (c member)": [[33, "c.PyPreConfig.allocator"]], "pypreconfig.coerce_c_locale (c member)": [[33, "c.PyPreConfig.coerce_c_locale"]], "pypreconfig.coerce_c_locale_warn (c member)": [[33, "c.PyPreConfig.coerce_c_locale_warn"]], "pypreconfig.configure_locale (c member)": [[33, "c.PyPreConfig.configure_locale"]], "pypreconfig.dev_mode (c member)": [[33, "c.PyPreConfig.dev_mode"]], "pypreconfig.isolated (c member)": [[33, "c.PyPreConfig.isolated"]], "pypreconfig.legacy_windows_fs_encoding (c member)": [[33, "c.PyPreConfig.legacy_windows_fs_encoding"]], "pypreconfig.parse_argv (c member)": [[33, "c.PyPreConfig.parse_argv"]], "pypreconfig.use_environment (c member)": [[33, "c.PyPreConfig.use_environment"]], "pypreconfig.utf8_mode (c member)": [[33, "c.PyPreConfig.utf8_mode"]], "pypreconfig_initisolatedconfig (c function)": [[33, "c.PyPreConfig_InitIsolatedConfig"]], "pypreconfig_initpythonconfig (c function)": [[33, "c.PyPreConfig_InitPythonConfig"]], "pystatus (c type)": [[33, "c.PyStatus"]], "pystatus.err_msg (c member)": [[33, "c.PyStatus.err_msg"]], "pystatus.exitcode (c member)": [[33, "c.PyStatus.exitcode"]], "pystatus.func (c member)": [[33, "c.PyStatus.func"]], "pystatus_error (c function)": [[33, "c.PyStatus_Error"]], "pystatus_exception (c function)": [[33, "c.PyStatus_Exception"]], "pystatus_exit (c function)": [[33, "c.PyStatus_Exit"]], "pystatus_iserror (c function)": [[33, "c.PyStatus_IsError"]], "pystatus_isexit (c function)": [[33, "c.PyStatus_IsExit"]], "pystatus_nomemory (c function)": [[33, "c.PyStatus_NoMemory"]], "pystatus_ok (c function)": [[33, "c.PyStatus_Ok"]], "pywidestringlist (c type)": [[33, "c.PyWideStringList"]], "pywidestringlist.items (c member)": [[33, "c.PyWideStringList.items"]], "pywidestringlist.length (c member)": [[33, "c.PyWideStringList.length"]], "pywidestringlist_append (c function)": [[33, "c.PyWideStringList_Append"]], "pywidestringlist_insert (c function)": [[33, "c.PyWideStringList_Insert"]], "py_exitstatusexception (c function)": [[33, "c.Py_ExitStatusException"]], "py_getargcargv (c function)": [[33, "c.Py_GetArgcArgv"]], "py_initializefromconfig (c function)": [[33, "c.Py_InitializeFromConfig"]], "py_preinitialize (c function)": [[33, "c.Py_PreInitialize"]], "py_preinitializefromargs (c function)": [[33, "c.Py_PreInitializeFromArgs"]], "py_preinitializefrombytesargs (c function)": [[33, "c.Py_PreInitializeFromBytesArgs"]], "py_runmain (c function)": [[33, "c.Py_RunMain"]], "_py_initializemain (c function)": [[33, "c._Py_InitializeMain"]], "__pyvenv_launcher__": [[33, "index-24"], [33, "index-4"]], "pep 353": [[34, "index-10"], [464, "index-16"], [464, "index-17"], [464, "index-29"], [469, "index-36"]], "pep 7": [[34, "index-0"], [34, "index-1"], [34, "index-2"], [453, "index-0"], [476, "index-34"]], "pydoc_str (c macro)": [[34, "c.PyDoc_STR"]], "pydoc_strvar (c macro)": [[34, "c.PyDoc_STRVAR"]], "pyerr_clear()": [[34, "index-12"], [34, "index-17"]], "pyerr_exceptionmatches()": [[34, "index-17"]], "pyerr_occurred()": [[34, "index-11"]], "pyerr_setstring()": [[34, "index-12"]], "pylist_getitem()": [[34, "index-7"]], "pylist_setitem()": [[34, "index-5"]], "pymodinit_func (c macro)": [[34, "c.PyMODINIT_FUNC"]], "pysequence_getitem()": [[34, "index-7"]], "pytuple_setitem()": [[34, "index-5"]], "py_abs (c macro)": [[34, "c.Py_ABS"]], "py_always_inline (c macro)": [[34, "c.Py_ALWAYS_INLINE"]], "py_charmask (c macro)": [[34, "c.Py_CHARMASK"]], "py_decref()": [[34, "index-4"]], "py_deprecated (c macro)": [[34, "c.Py_DEPRECATED"]], "py_getenv (c macro)": [[34, "c.Py_GETENV"]], "py_getexecprefix()": [[34, "index-23"]], "py_getprefix()": [[34, "index-23"]], "py_getprogramfullpath()": [[34, "index-23"]], "py_incref()": [[34, "index-4"]], "py_isinitialized()": [[34, "index-26"]], "py_max (c macro)": [[34, "c.Py_MAX"]], "py_member_size (c macro)": [[34, "c.Py_MEMBER_SIZE"]], "py_min (c macro)": [[34, "c.Py_MIN"]], "py_no_inline (c macro)": [[34, "c.Py_NO_INLINE"]], "py_stringify (c macro)": [[34, "c.Py_STRINGIFY"]], "py_unreachable (c macro)": [[34, "c.Py_UNREACHABLE"]], "py_unused (c macro)": [[34, "c.Py_UNUSED"]], "py_xdecref()": [[34, "index-17"]], "py_ssize_t (c type)": [[34, "c.Py_ssize_t"]], "exc_info() (in module sys)": [[34, "index-13"], [349, "sys.exc_info"]], "incr_item()": [[34, "index-15"], [34, "index-16"]], "set_all()": [[34, "index-6"]], "sum_list()": [[34, "index-8"]], "sum_sequence()": [[34, "index-14"], [34, "index-9"]], "type": [[34, "index-3"], [48, "index-7"], [60, "index-0"], [86, "term-type"], [222, "index-0"], [222, "index-12"], [341, "index-24"], [341, "index-52"], [341, "index-59"], [341, "index-65"], [425, "index-1"], [425, "index-4"], [425, "index-86"], [427, "index-7"], [433, "index-47"]], "pyaiter_check (c function)": [[35, "c.PyAIter_Check"]], "pyiter_check (c function)": [[35, "c.PyIter_Check"]], "pyiter_next (c function)": [[35, "c.PyIter_Next"]], "pyiter_send (c function)": [[35, "c.PyIter_Send"]], "pysendresult (c type)": [[35, "c.PySendResult"]], "pycalliter_check (c function)": [[36, "c.PyCallIter_Check"]], "pycalliter_new (c function)": [[36, "c.PyCallIter_New"]], "pycalliter_type (c var)": [[36, "c.PyCallIter_Type"]], "pyseqiter_check (c function)": [[36, "c.PySeqIter_Check"]], "pyseqiter_new (c function)": [[36, "c.PySeqIter_New"]], "pyseqiter_type (c var)": [[36, "c.PySeqIter_Type"]], "pylistobject (c type)": [[37, "c.PyListObject"]], "pylist_append (c function)": [[37, "c.PyList_Append"]], "pylist_astuple (c function)": [[37, "c.PyList_AsTuple"]], "pylist_check (c function)": [[37, "c.PyList_Check"]], "pylist_checkexact (c function)": [[37, "c.PyList_CheckExact"]], "pylist_get_item (c function)": [[37, "c.PyList_GET_ITEM"]], "pylist_get_size (c function)": [[37, "c.PyList_GET_SIZE"]], "pylist_getitem (c function)": [[37, "c.PyList_GetItem"]], "pylist_getslice (c function)": [[37, "c.PyList_GetSlice"]], "pylist_insert (c function)": [[37, "c.PyList_Insert"]], "pylist_new (c function)": [[37, "c.PyList_New"]], "pylist_reverse (c function)": [[37, "c.PyList_Reverse"]], "pylist_set_item (c function)": [[37, "c.PyList_SET_ITEM"]], "pylist_setitem (c function)": [[37, "c.PyList_SetItem"]], "pylist_setslice (c function)": [[37, "c.PyList_SetSlice"]], "pylist_size (c function)": [[37, "c.PyList_Size"]], "pylist_sort (c function)": [[37, "c.PyList_Sort"]], "pylist_type (c var)": [[37, "c.PyList_Type"]], "list": [[37, "index-0"], [86, "term-list"], [341, "index-23"], [341, "index-24"], [341, "index-25"], [424, "index-6"], [425, "index-25"], [427, "index-15"], [427, "index-40"], [427, "index-42"], [427, "index-45"], [427, "index-91"], [433, "index-1"], [433, "index-10"], [433, "index-2"], [433, "index-21"], [433, "index-5"], [433, "index-6"]], "tuple": [[37, "index-2"], [53, "index-1"], [59, "index-0"], [341, "index-22"], [341, "index-26"], [425, "index-20"], [427, "index-42"], [427, "index-45"], [427, "index-9"], [427, "index-92"]], "long_max": [[38, "index-1"]], "overflowerror (built-in exception)": [[38, "index-1"], [38, "index-2"], [38, "index-3"], [38, "index-4"], [38, "index-5"], [38, "index-6"]], "py_ssize_t_max": [[38, "index-3"]], "pylongobject (c type)": [[38, "c.PyLongObject"]], "pylong_asdouble (c function)": [[38, "c.PyLong_AsDouble"]], "pylong_aslong (c function)": [[38, "c.PyLong_AsLong"]], "pylong_aslongandoverflow (c function)": [[38, "c.PyLong_AsLongAndOverflow"]], "pylong_aslonglong (c function)": [[38, "c.PyLong_AsLongLong"]], "pylong_aslonglongandoverflow (c function)": [[38, "c.PyLong_AsLongLongAndOverflow"]], "pylong_assize_t (c function)": [[38, "c.PyLong_AsSize_t"]], "pylong_asssize_t (c function)": [[38, "c.PyLong_AsSsize_t"]], "pylong_asunsignedlong (c function)": [[38, "c.PyLong_AsUnsignedLong"]], "pylong_asunsignedlonglong (c function)": [[38, "c.PyLong_AsUnsignedLongLong"]], "pylong_asunsignedlonglongmask (c function)": [[38, "c.PyLong_AsUnsignedLongLongMask"]], "pylong_asunsignedlongmask (c function)": [[38, "c.PyLong_AsUnsignedLongMask"]], "pylong_asvoidptr (c function)": [[38, "c.PyLong_AsVoidPtr"]], "pylong_check (c function)": [[38, "c.PyLong_Check"]], "pylong_checkexact (c function)": [[38, "c.PyLong_CheckExact"]], "pylong_fromdouble (c function)": [[38, "c.PyLong_FromDouble"]], "pylong_fromlong (c function)": [[38, "c.PyLong_FromLong"]], "pylong_fromlonglong (c function)": [[38, "c.PyLong_FromLongLong"]], "pylong_fromsize_t (c function)": [[38, "c.PyLong_FromSize_t"]], "pylong_fromssize_t (c function)": [[38, "c.PyLong_FromSsize_t"]], "pylong_fromstring (c function)": [[38, "c.PyLong_FromString"]], "pylong_fromunicodeobject (c function)": [[38, "c.PyLong_FromUnicodeObject"]], "pylong_fromunsignedlong (c function)": [[38, "c.PyLong_FromUnsignedLong"]], "pylong_fromunsignedlonglong (c function)": [[38, "c.PyLong_FromUnsignedLongLong"]], "pylong_fromvoidptr (c function)": [[38, "c.PyLong_FromVoidPtr"]], "pylong_type (c var)": [[38, "c.PyLong_Type"]], "pyunstable_long_compactvalue (c function)": [[38, "c.PyUnstable_Long_CompactValue"]], "pyunstable_long_iscompact (c function)": [[38, "c.PyUnstable_Long_IsCompact"]], "size_max": [[38, "index-5"]], "ulong_max": [[38, "index-4"]], "integer": [[38, "index-0"], [341, "index-11"], [341, "index-12"], [341, "index-16"], [425, "index-10"], [425, "index-11"], [425, "index-19"]], "long integer": [[38, "index-0"]], "pymapping_check (c function)": [[39, "c.PyMapping_Check"]], "pymapping_delitem (c function)": [[39, "c.PyMapping_DelItem"]], "pymapping_delitemstring (c function)": [[39, "c.PyMapping_DelItemString"]], "pymapping_getitemstring (c function)": [[39, "c.PyMapping_GetItemString"]], "pymapping_haskey (c function)": [[39, "c.PyMapping_HasKey"]], "pymapping_haskeystring (c function)": [[39, "c.PyMapping_HasKeyString"]], "pymapping_items (c function)": [[39, "c.PyMapping_Items"]], "pymapping_keys (c function)": [[39, "c.PyMapping_Keys"]], "pymapping_length (c function)": [[39, "c.PyMapping_Length"]], "pymapping_setitemstring (c function)": [[39, "c.PyMapping_SetItemString"]], "pymapping_size (c function)": [[39, "c.PyMapping_Size"]], "pymapping_values (c function)": [[39, "c.PyMapping_Values"]], "pymarshal_readlastobjectfromfile (c function)": [[40, "c.PyMarshal_ReadLastObjectFromFile"]], "pymarshal_readlongfromfile (c function)": [[40, "c.PyMarshal_ReadLongFromFile"]], "pymarshal_readobjectfromfile (c function)": [[40, "c.PyMarshal_ReadObjectFromFile"]], "pymarshal_readobjectfromstring (c function)": [[40, "c.PyMarshal_ReadObjectFromString"]], "pymarshal_readshortfromfile (c function)": [[40, "c.PyMarshal_ReadShortFromFile"]], "pymarshal_writelongtofile (c function)": [[40, "c.PyMarshal_WriteLongToFile"]], "pymarshal_writeobjecttofile (c function)": [[40, "c.PyMarshal_WriteObjectToFile"]], "pymarshal_writeobjecttostring (c function)": [[40, "c.PyMarshal_WriteObjectToString"]], "pymem_domain_mem (c macro)": [[41, "c.PYMEM_DOMAIN_MEM"]], "pymem_domain_obj (c macro)": [[41, "c.PYMEM_DOMAIN_OBJ"]], "pymem_domain_raw (c macro)": [[41, "c.PYMEM_DOMAIN_RAW"]], "pythonmalloc": [[41, "index-1"], [41, "index-3"], [41, "index-4"], [41, "index-5"], [185, "index-2"], [185, "index-3"], [452, "envvar-PYTHONMALLOC"], [452, "index-39"], [453, "index-5"], [476, "index-27"], [476, "index-38"]], "pymemallocatordomain (c type)": [[41, "c.PyMemAllocatorDomain"]], "pymemallocatorex (c type)": [[41, "c.PyMemAllocatorEx"]], "pymem_calloc (c function)": [[41, "c.PyMem_Calloc"]], "pymem_del (c function)": [[41, "c.PyMem_Del"]], "pymem_free (c function)": [[41, "c.PyMem_Free"]], "pymem_getallocator (c function)": [[41, "c.PyMem_GetAllocator"]], "pymem_malloc (c function)": [[41, "c.PyMem_Malloc"]], "pymem_new (c macro)": [[41, "c.PyMem_New"]], "pymem_rawcalloc (c function)": [[41, "c.PyMem_RawCalloc"]], "pymem_rawfree (c function)": [[41, "c.PyMem_RawFree"]], "pymem_rawmalloc (c function)": [[41, "c.PyMem_RawMalloc"]], "pymem_rawrealloc (c function)": [[41, "c.PyMem_RawRealloc"]], "pymem_realloc (c function)": [[41, "c.PyMem_Realloc"]], "pymem_resize (c macro)": [[41, "c.PyMem_Resize"]], "pymem_setallocator (c function)": [[41, "c.PyMem_SetAllocator"]], "pymem_setupdebughooks (c function)": [[41, "c.PyMem_SetupDebugHooks"]], "pyobjectarenaallocator (c type)": [[41, "c.PyObjectArenaAllocator"]], "pyobject_calloc (c function)": [[41, "c.PyObject_Calloc"]], "pyobject_free (c function)": [[41, "c.PyObject_Free"]], "pyobject_getarenaallocator (c function)": [[41, "c.PyObject_GetArenaAllocator"]], "pyobject_malloc (c function)": [[41, "c.PyObject_Malloc"]], "pyobject_realloc (c function)": [[41, "c.PyObject_Realloc"]], "pyobject_setarenaallocator (c function)": [[41, "c.PyObject_SetArenaAllocator"]], "pytracemalloc_track (c function)": [[41, "c.PyTraceMalloc_Track"]], "pytracemalloc_untrack (c function)": [[41, "c.PyTraceMalloc_Untrack"]], "calloc()": [[41, "index-0"]], "free()": [[41, "index-0"]], "malloc()": [[41, "index-0"]], "realloc()": [[41, "index-0"]], "pybuf_read (c macro)": [[42, "c.PyBUF_READ"]], "pybuf_write (c macro)": [[42, "c.PyBUF_WRITE"]], "pymemoryview_check (c function)": [[42, "c.PyMemoryView_Check"]], "pymemoryview_frombuffer (c function)": [[42, "c.PyMemoryView_FromBuffer"]], "pymemoryview_frommemory (c function)": [[42, "c.PyMemoryView_FromMemory"]], "pymemoryview_fromobject (c function)": [[42, "c.PyMemoryView_FromObject"]], "pymemoryview_get_base (c function)": [[42, "c.PyMemoryView_GET_BASE"]], "pymemoryview_get_buffer (c function)": [[42, "c.PyMemoryView_GET_BUFFER"]], "pymemoryview_getcontiguous (c function)": [[42, "c.PyMemoryView_GetContiguous"]], "memoryview": [[42, "index-0"], [341, "index-40"]], "pyinstancemethod_check (c function)": [[43, "c.PyInstanceMethod_Check"]], "pyinstancemethod_function (c function)": [[43, "c.PyInstanceMethod_Function"]], "pyinstancemethod_get_function (c function)": [[43, "c.PyInstanceMethod_GET_FUNCTION"]], "pyinstancemethod_new (c function)": [[43, "c.PyInstanceMethod_New"]], "pyinstancemethod_type (c var)": [[43, "c.PyInstanceMethod_Type"]], "pymethod_check (c function)": [[43, "c.PyMethod_Check"]], "pymethod_function (c function)": [[43, "c.PyMethod_Function"]], "pymethod_get_function (c function)": [[43, "c.PyMethod_GET_FUNCTION"]], "pymethod_get_self (c function)": [[43, "c.PyMethod_GET_SELF"]], "pymethod_new (c function)": [[43, "c.PyMethod_New"]], "pymethod_self (c function)": [[43, "c.PyMethod_Self"]], "pymethod_type (c var)": [[43, "c.PyMethod_Type"]], "instancemethod": [[43, "index-0"]], "method": [[43, "index-1"], [86, "index-26"], [86, "index-34"], [86, "term-method"], [341, "index-61"], [425, "index-37"], [425, "index-43"], [427, "index-53"], [437, "index-0"]], "moduletype (in module types)": [[44, "index-1"]], "pep 3121": [[44, "index-6"], [467, "index-34"]], "pep 451": [[44, "index-7"], [86, "index-16"], [247, "index-6"], [299, "index-1"], [299, "index-4"], [321, "index-3"], [321, "index-5"], [321, "index-8"], [349, "index-20"], [429, "index-27"], [469, "index-32"], [471, "index-36"], [474, "index-23"], [474, "index-3"], [475, "index-27"]], "pymoduledef (c type)": [[44, "c.PyModuleDef"]], "pymoduledef.m_base (c member)": [[44, "c.PyModuleDef.m_base"]], "pymoduledef.m_clear (c member)": [[44, "c.PyModuleDef.m_clear"]], "pymoduledef.m_doc (c member)": [[44, "c.PyModuleDef.m_doc"]], "pymoduledef.m_free (c member)": [[44, "c.PyModuleDef.m_free"]], "pymoduledef.m_methods (c member)": [[44, "c.PyModuleDef.m_methods"]], "pymoduledef.m_name (c member)": [[44, "c.PyModuleDef.m_name"]], "pymoduledef.m_size (c member)": [[44, "c.PyModuleDef.m_size"]], "pymoduledef.m_slots (c member)": [[44, "c.PyModuleDef.m_slots"]], "pymoduledef.m_slots.m_reload (c member)": [[44, "c.PyModuleDef.m_slots.m_reload"]], "pymoduledef.m_traverse (c member)": [[44, "c.PyModuleDef.m_traverse"]], "pymoduledef_init (c function)": [[44, "c.PyModuleDef_Init"]], "pymoduledef_slot (c type)": [[44, "c.PyModuleDef_Slot"]], "pymoduledef_slot.slot (c member)": [[44, "c.PyModuleDef_Slot.slot"]], "pymoduledef_slot.value (c member)": [[44, "c.PyModuleDef_Slot.value"]], "pymodule_addfunctions (c function)": [[44, "c.PyModule_AddFunctions"]], "pymodule_addintconstant (c function)": [[44, "c.PyModule_AddIntConstant"]], "pymodule_addintmacro (c macro)": [[44, "c.PyModule_AddIntMacro"]], "pymodule_addobject (c function)": [[44, "c.PyModule_AddObject"]], "pymodule_addobjectref (c function)": [[44, "c.PyModule_AddObjectRef"]], "pymodule_addstringconstant (c function)": [[44, "c.PyModule_AddStringConstant"]], "pymodule_addstringmacro (c macro)": [[44, "c.PyModule_AddStringMacro"]], "pymodule_addtype (c function)": [[44, "c.PyModule_AddType"]], "pymodule_check (c function)": [[44, "c.PyModule_Check"]], "pymodule_checkexact (c function)": [[44, "c.PyModule_CheckExact"]], "pymodule_create (c function)": [[44, "c.PyModule_Create"]], "pymodule_create2 (c function)": [[44, "c.PyModule_Create2"]], "pymodule_execdef (c function)": [[44, "c.PyModule_ExecDef"]], "pymodule_fromdefandspec (c function)": [[44, "c.PyModule_FromDefAndSpec"]], "pymodule_fromdefandspec2 (c function)": [[44, "c.PyModule_FromDefAndSpec2"]], "pymodule_getdef (c function)": [[44, "c.PyModule_GetDef"]], "pymodule_getdict (c function)": [[44, "c.PyModule_GetDict"]], "pymodule_getfilename (c function)": [[44, "c.PyModule_GetFilename"]], "pymodule_getfilenameobject (c function)": [[44, "c.PyModule_GetFilenameObject"]], "pymodule_getname (c function)": [[44, "c.PyModule_GetName"]], "pymodule_getnameobject (c function)": [[44, "c.PyModule_GetNameObject"]], "pymodule_getstate (c function)": [[44, "c.PyModule_GetState"]], "pymodule_new (c function)": [[44, "c.PyModule_New"]], "pymodule_newobject (c function)": [[44, "c.PyModule_NewObject"]], "pymodule_setdocstring (c function)": [[44, "c.PyModule_SetDocString"]], "pymodule_type (c var)": [[44, "c.PyModule_Type"]], "pystate_addmodule (c function)": [[44, "c.PyState_AddModule"]], "pystate_findmodule (c function)": [[44, "c.PyState_FindModule"]], "pystate_removemodule (c function)": [[44, "c.PyState_RemoveModule"]], "py_mod_multiple_interpreters_not_supported (c macro)": [[44, "c.Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED"]], "py_mod_multiple_interpreters_supported (c macro)": [[44, "c.Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED"]], "py_mod_per_interpreter_gil_supported (c macro)": [[44, "c.Py_MOD_PER_INTERPRETER_GIL_SUPPORTED"]], "py_mod_create (c macro)": [[44, "c.Py_mod_create"]], "py_mod_exec (c macro)": [[44, "c.Py_mod_exec"]], "py_mod_multiple_interpreters (c macro)": [[44, "c.Py_mod_multiple_interpreters"]], "systemerror (built-in exception)": [[44, "index-4"], [44, "index-5"]], "__dict__ (module attribute)": [[44, "index-3"], [425, "index-46"]], "__doc__ (module attribute)": [[44, "index-2"], [425, "index-45"]], "__file__ (module attribute)": [[44, "index-2"], [44, "index-5"], [425, "index-45"]], "__loader__ (module attribute)": [[44, "index-2"]], "__name__ (module attribute)": [[44, "index-2"], [44, "index-4"], [425, "index-45"]], "__package__ (module attribute)": [[44, "index-2"]], "none": [[45, "index-0"], [425, "index-6"], [433, "index-3"]], "py_none (c var)": [[45, "c.Py_None"]], "py_return_none (c macro)": [[45, "c.Py_RETURN_NONE"]], "pyindex_check (c function)": [[46, "c.PyIndex_Check"]], "pynumber_absolute (c function)": [[46, "c.PyNumber_Absolute"]], "pynumber_add (c function)": [[46, "c.PyNumber_Add"]], "pynumber_and (c function)": [[46, "c.PyNumber_And"]], "pynumber_asssize_t (c function)": [[46, "c.PyNumber_AsSsize_t"]], "pynumber_check (c function)": [[46, "c.PyNumber_Check"]], "pynumber_divmod (c function)": [[46, "c.PyNumber_Divmod"]], "pynumber_float (c function)": [[46, "c.PyNumber_Float"]], "pynumber_floordivide (c function)": [[46, "c.PyNumber_FloorDivide"]], "pynumber_inplaceadd (c function)": [[46, "c.PyNumber_InPlaceAdd"]], "pynumber_inplaceand (c function)": [[46, "c.PyNumber_InPlaceAnd"]], "pynumber_inplacefloordivide (c function)": [[46, "c.PyNumber_InPlaceFloorDivide"]], "pynumber_inplacelshift (c function)": [[46, "c.PyNumber_InPlaceLshift"]], "pynumber_inplacematrixmultiply (c function)": [[46, "c.PyNumber_InPlaceMatrixMultiply"]], "pynumber_inplacemultiply (c function)": [[46, "c.PyNumber_InPlaceMultiply"]], "pynumber_inplaceor (c function)": [[46, "c.PyNumber_InPlaceOr"]], "pynumber_inplacepower (c function)": [[46, "c.PyNumber_InPlacePower"]], "pynumber_inplaceremainder (c function)": [[46, "c.PyNumber_InPlaceRemainder"]], "pynumber_inplacershift (c function)": [[46, "c.PyNumber_InPlaceRshift"]], "pynumber_inplacesubtract (c function)": [[46, "c.PyNumber_InPlaceSubtract"]], "pynumber_inplacetruedivide (c function)": [[46, "c.PyNumber_InPlaceTrueDivide"]], "pynumber_inplacexor (c function)": [[46, "c.PyNumber_InPlaceXor"]], "pynumber_index (c function)": [[46, "c.PyNumber_Index"]], "pynumber_invert (c function)": [[46, "c.PyNumber_Invert"]], "pynumber_long (c function)": [[46, "c.PyNumber_Long"]], "pynumber_lshift (c function)": [[46, "c.PyNumber_Lshift"]], "pynumber_matrixmultiply (c function)": [[46, "c.PyNumber_MatrixMultiply"]], "pynumber_multiply (c function)": [[46, "c.PyNumber_Multiply"]], "pynumber_negative (c function)": [[46, "c.PyNumber_Negative"]], "pynumber_or (c function)": [[46, "c.PyNumber_Or"]], "pynumber_positive (c function)": [[46, "c.PyNumber_Positive"]], "pynumber_power (c function)": [[46, "c.PyNumber_Power"]], "pynumber_remainder (c function)": [[46, "c.PyNumber_Remainder"]], "pynumber_rshift (c function)": [[46, "c.PyNumber_Rshift"]], "pynumber_subtract (c function)": [[46, "c.PyNumber_Subtract"]], "pynumber_tobase (c function)": [[46, "c.PyNumber_ToBase"]], "pynumber_truedivide (c function)": [[46, "c.PyNumber_TrueDivide"]], "pynumber_xor (c function)": [[46, "c.PyNumber_Xor"]], "abs": [[46, "index-2"], [425, "index-103"]], "divmod": [[46, "index-0"], [425, "index-100"], [425, "index-101"]], "float": [[46, "index-5"], [341, "index-13"], [425, "index-104"]], "int": [[46, "index-4"], [341, "index-13"], [425, "index-104"]], "pow": [[46, "index-1"], [46, "index-3"], [425, "index-100"], [425, "index-101"], [425, "index-102"]], "pyobject_ascharbuffer (c function)": [[47, "c.PyObject_AsCharBuffer"]], "pyobject_asreadbuffer (c function)": [[47, "c.PyObject_AsReadBuffer"]], "pyobject_aswritebuffer (c function)": [[47, "c.PyObject_AsWriteBuffer"]], "pyobject_checkreadbuffer (c function)": [[47, "c.PyObject_CheckReadBuffer"]], "pep 3119": [[48, "index-4"], [48, "index-5"], [113, "index-0"], [158, "index-5"], [425, "index-94"], [465, "index-16"]], "pyobject_ascii (c function)": [[48, "c.PyObject_ASCII"]], "pyobject_bytes (c function)": [[48, "c.PyObject_Bytes"]], "pyobject_delattr (c function)": [[48, "c.PyObject_DelAttr"]], "pyobject_delattrstring (c function)": [[48, "c.PyObject_DelAttrString"]], "pyobject_delitem (c function)": [[48, "c.PyObject_DelItem"]], "pyobject_dir (c function)": [[48, "c.PyObject_Dir"]], "pyobject_format (c function)": [[48, "c.PyObject_Format"]], "pyobject_genericgetattr (c function)": [[48, "c.PyObject_GenericGetAttr"]], "pyobject_genericgetdict (c function)": [[48, "c.PyObject_GenericGetDict"]], "pyobject_genericsetattr (c function)": [[48, "c.PyObject_GenericSetAttr"]], "pyobject_genericsetdict (c function)": [[48, "c.PyObject_GenericSetDict"]], "pyobject_getaiter (c function)": [[48, "c.PyObject_GetAIter"]], "pyobject_getattr (c function)": [[48, "c.PyObject_GetAttr"]], "pyobject_getattrstring (c function)": [[48, "c.PyObject_GetAttrString"]], "pyobject_getitem (c function)": [[48, "c.PyObject_GetItem"]], "pyobject_getitemdata (c function)": [[48, "c.PyObject_GetItemData"]], "pyobject_getiter (c function)": [[48, "c.PyObject_GetIter"]], "pyobject_gettypedata (c function)": [[48, "c.PyObject_GetTypeData"]], "pyobject_hasattr (c function)": [[48, "c.PyObject_HasAttr"]], "pyobject_hasattrstring (c function)": [[48, "c.PyObject_HasAttrString"]], "pyobject_hash (c function)": [[48, "c.PyObject_Hash"]], "pyobject_hashnotimplemented (c function)": [[48, "c.PyObject_HashNotImplemented"]], "pyobject_isinstance (c function)": [[48, "c.PyObject_IsInstance"]], "pyobject_issubclass (c function)": [[48, "c.PyObject_IsSubclass"]], "pyobject_istrue (c function)": [[48, "c.PyObject_IsTrue"]], "pyobject_length (c function)": [[48, "c.PyObject_Length"]], "pyobject_lengthhint (c function)": [[48, "c.PyObject_LengthHint"]], "pyobject_not (c function)": [[48, "c.PyObject_Not"]], "pyobject_print (c function)": [[48, "c.PyObject_Print"]], "pyobject_repr (c function)": [[48, "c.PyObject_Repr"]], "pyobject_richcompare (c function)": [[48, "c.PyObject_RichCompare"]], "pyobject_richcomparebool (c function)": [[48, "c.PyObject_RichCompareBool"]], "pyobject_setattr (c function)": [[48, "c.PyObject_SetAttr"]], "pyobject_setattrstring (c function)": [[48, "c.PyObject_SetAttrString"]], "pyobject_setitem (c function)": [[48, "c.PyObject_SetItem"]], "pyobject_size (c function)": [[48, "c.PyObject_Size"]], "pyobject_str (c function)": [[48, "c.PyObject_Str"], [48, "index-2"]], "pyobject_type (c function)": [[48, "c.PyObject_Type"]], "pyobject_typecheck (c function)": [[48, "c.PyObject_TypeCheck"]], "pytype_gettypedatasize (c function)": [[48, "c.PyType_GetTypeDataSize"]], "py_notimplemented (c var)": [[48, "c.Py_NotImplemented"]], "py_print_raw (c macro)": [[48, "c.Py_PRINT_RAW"]], "py_return_notimplemented (c macro)": [[48, "c.Py_RETURN_NOTIMPLEMENTED"]], "_pyobject_getdictptr (c function)": [[48, "c._PyObject_GetDictPtr"]], "ascii": [[48, "index-1"], [431, "index-1"], [432, "index-17"]], "hash": [[48, "index-6"], [62, "index-2"], [341, "index-22"], [425, "index-80"]], "repr": [[48, "index-0"], [62, "index-1"], [74, "index-3"], [433, "index-3"]], "string": [[48, "index-2"], [74, "index-3"], [222, "index-11"], [222, "index-4"], [341, "index-28"], [341, "index-30"], [341, "index-32"], [341, "index-35"], [342, "module-string"], [425, "index-18"], [425, "index-76"], [425, "index-78"], [427, "index-42"], [427, "index-43"], [427, "index-45"], [432, "index-25"], [433, "index-3"]], "pyunstable_perfmapstate_fini (c function)": [[50, "c.PyUnstable_PerfMapState_Fini"]], "pyunstable_perfmapstate_init (c function)": [[50, "c.PyUnstable_PerfMapState_Init"]], "pyunstable_writeperfmapentry (c function)": [[50, "c.PyUnstable_WritePerfMapEntry"]], "py_clear (c function)": [[51, "c.Py_CLEAR"]], "py_decref (c function)": [[51, "c.Py_DECREF"], [51, "c.Py_DecRef"]], "py_incref (c function)": [[51, "c.Py_INCREF"], [51, "c.Py_IncRef"]], "py_newref (c function)": [[51, "c.Py_NewRef"]], "py_refcnt (c function)": [[51, "c.Py_REFCNT"]], "py_setref (c macro)": [[51, "c.Py_SETREF"]], "py_set_refcnt (c function)": [[51, "c.Py_SET_REFCNT"]], "py_xdecref (c function)": [[51, "c.Py_XDECREF"]], "py_xincref (c function)": [[51, "c.Py_XINCREF"]], "py_xnewref (c function)": [[51, "c.Py_XNewRef"]], "py_xsetref (c macro)": [[51, "c.Py_XSETREF"]], "pyeval_getbuiltins (c function)": [[52, "c.PyEval_GetBuiltins"]], "pyeval_getframe (c function)": [[52, "c.PyEval_GetFrame"]], "pyeval_getfuncdesc (c function)": [[52, "c.PyEval_GetFuncDesc"]], "pyeval_getfuncname (c function)": [[52, "c.PyEval_GetFuncName"]], "pyeval_getglobals (c function)": [[52, "c.PyEval_GetGlobals"]], "pyeval_getlocals (c function)": [[52, "c.PyEval_GetLocals"]], "pysequence_check (c function)": [[53, "c.PySequence_Check"]], "pysequence_concat (c function)": [[53, "c.PySequence_Concat"]], "pysequence_contains (c function)": [[53, "c.PySequence_Contains"]], "pysequence_count (c function)": [[53, "c.PySequence_Count"]], "pysequence_delitem (c function)": [[53, "c.PySequence_DelItem"]], "pysequence_delslice (c function)": [[53, "c.PySequence_DelSlice"]], "pysequence_fast (c function)": [[53, "c.PySequence_Fast"]], "pysequence_fast_get_item (c function)": [[53, "c.PySequence_Fast_GET_ITEM"]], "pysequence_fast_get_size (c function)": [[53, "c.PySequence_Fast_GET_SIZE"]], "pysequence_fast_items (c function)": [[53, "c.PySequence_Fast_ITEMS"]], "pysequence_getitem (c function)": [[53, "c.PySequence_GetItem"]], "pysequence_getslice (c function)": [[53, "c.PySequence_GetSlice"]], "pysequence_item (c function)": [[53, "c.PySequence_ITEM"]], "pysequence_inplaceconcat (c function)": [[53, "c.PySequence_InPlaceConcat"]], "pysequence_inplacerepeat (c function)": [[53, "c.PySequence_InPlaceRepeat"]], "pysequence_index (c function)": [[53, "c.PySequence_Index"]], "pysequence_length (c function)": [[53, "c.PySequence_Length"]], "pysequence_list (c function)": [[53, "c.PySequence_List"]], "pysequence_repeat (c function)": [[53, "c.PySequence_Repeat"]], "pysequence_setitem (c function)": [[53, "c.PySequence_SetItem"]], "pysequence_setslice (c function)": [[53, "c.PySequence_SetSlice"]], "pysequence_size (c function)": [[53, "c.PySequence_Size"]], "pysequence_tuple (c function)": [[53, "c.PySequence_Tuple"]], "pyanyset_check (c function)": [[54, "c.PyAnySet_Check"]], "pyanyset_checkexact (c function)": [[54, "c.PyAnySet_CheckExact"]], "pyfrozenset_check (c function)": [[54, "c.PyFrozenSet_Check"]], "pyfrozenset_checkexact (c function)": [[54, "c.PyFrozenSet_CheckExact"]], "pyfrozenset_new (c function)": [[54, "c.PyFrozenSet_New"]], "pyfrozenset_type (c var)": [[54, "c.PyFrozenSet_Type"]], "pysetobject (c type)": [[54, "c.PySetObject"]], "pyset_add (c function)": [[54, "c.PySet_Add"]], "pyset_check (c function)": [[54, "c.PySet_Check"]], "pyset_checkexact (c function)": [[54, "c.PySet_CheckExact"]], "pyset_clear (c function)": [[54, "c.PySet_Clear"]], "pyset_contains (c function)": [[54, "c.PySet_Contains"]], "pyset_discard (c function)": [[54, "c.PySet_Discard"]], "pyset_get_size (c function)": [[54, "c.PySet_GET_SIZE"]], "pyset_new (c function)": [[54, "c.PySet_New"]], "pyset_pop (c function)": [[54, "c.PySet_Pop"]], "pyset_size (c function)": [[54, "c.PySet_Size"]], "pyset_type (c var)": [[54, "c.PySet_Type"]], "frozenset": [[54, "index-0"], [425, "index-29"]], "set": [[54, "index-0"], [341, "index-51"], [425, "index-28"], [427, "index-16"]], "pyslice_adjustindices (c function)": [[55, "c.PySlice_AdjustIndices"]], "pyslice_check (c function)": [[55, "c.PySlice_Check"]], "pyslice_getindices (c function)": [[55, "c.PySlice_GetIndices"]], "pyslice_getindicesex (c function)": [[55, "c.PySlice_GetIndicesEx"]], "pyslice_new (c function)": [[55, "c.PySlice_New"]], "pyslice_type (c var)": [[55, "c.PySlice_Type"]], "pyslice_unpack (c function)": [[55, "c.PySlice_Unpack"]], "py_ellipsis (c var)": [[55, "c.Py_Ellipsis"]], "pep 387": [[56, "index-0"], [210, "index-11"], [210, "index-12"]], "pyunstable": [[56, "index-1"]], "py_limited_api (c macro)": [[56, "c.Py_LIMITED_API"]], "meth_class (c macro)": [[57, "c.METH_CLASS"]], "meth_coexist (c macro)": [[57, "c.METH_COEXIST"]], "meth_fastcall (c macro)": [[57, "c.METH_FASTCALL"]], "meth_keywords (c macro)": [[57, "c.METH_KEYWORDS"]], "meth_method (c macro)": [[57, "c.METH_METHOD"]], "meth_noargs (c macro)": [[57, "c.METH_NOARGS"]], "meth_o (c macro)": [[57, "c.METH_O"]], "meth_static (c macro)": [[57, "c.METH_STATIC"]], "meth_varargs (c macro)": [[57, "c.METH_VARARGS"]], "pycfunction (c type)": [[57, "c.PyCFunction"]], "pycfunctionwithkeywords (c type)": [[57, "c.PyCFunctionWithKeywords"]], "pycfunction_new (c function)": [[57, "c.PyCFunction_New"]], "pycfunction_newex (c function)": [[57, "c.PyCFunction_NewEx"]], "pycmethod (c type)": [[57, "c.PyCMethod"]], "pycmethod_new (c function)": [[57, "c.PyCMethod_New"]], "pygetsetdef (c type)": [[57, "c.PyGetSetDef"]], "pygetsetdef.closure (c member)": [[57, "c.PyGetSetDef.closure"]], "pygetsetdef.doc (c member)": [[57, "c.PyGetSetDef.doc"]], "pygetsetdef.get (c member)": [[57, "c.PyGetSetDef.get"]], "pygetsetdef.name (c member)": [[57, "c.PyGetSetDef.name"]], "pygetsetdef.set (c member)": [[57, "c.PyGetSetDef.set"]], "pymemberdef (c type)": [[57, "c.PyMemberDef"]], "pymemberdef.doc (c member)": [[57, "c.PyMemberDef.doc"]], "pymemberdef.flags (c member)": [[57, "c.PyMemberDef.flags"]], "pymemberdef.name (c member)": [[57, "c.PyMemberDef.name"]], "pymemberdef.offset (c member)": [[57, "c.PyMemberDef.offset"]], "pymemberdef.type (c member)": [[57, "c.PyMemberDef.type"]], "pymember_getone (c function)": [[57, "c.PyMember_GetOne"]], "pymember_setone (c function)": [[57, "c.PyMember_SetOne"]], "pymethoddef (c type)": [[57, "c.PyMethodDef"]], "pymethoddef.ml_doc (c member)": [[57, "c.PyMethodDef.ml_doc"]], "pymethoddef.ml_flags (c member)": [[57, "c.PyMethodDef.ml_flags"]], "pymethoddef.ml_meth (c member)": [[57, "c.PyMethodDef.ml_meth"]], "pymethoddef.ml_name (c member)": [[57, "c.PyMethodDef.ml_name"]], "pyobject (c type)": [[57, "c.PyObject"]], "pyobject_head (c macro)": [[57, "c.PyObject_HEAD"]], "pyobject_head_init (c macro)": [[57, "c.PyObject_HEAD_INIT"]], "pyobject_var_head (c macro)": [[57, "c.PyObject_VAR_HEAD"]], "pyvarobject (c type)": [[57, "c.PyVarObject"]], "pyvarobject_head_init (c macro)": [[57, "c.PyVarObject_HEAD_INIT"]], "py_audit_read (c macro)": [[57, "c.Py_AUDIT_READ"]], "py_is_type (c function)": [[57, "c.Py_IS_TYPE"]], "py_is (c function)": [[57, "c.Py_Is"]], "py_isfalse (c function)": [[57, "c.Py_IsFalse"]], "py_isnone (c function)": [[57, "c.Py_IsNone"]], "py_istrue (c function)": [[57, "c.Py_IsTrue"]], "py_readonly (c macro)": [[57, "c.Py_READONLY"]], "py_relative_offset (c macro)": [[57, "c.Py_RELATIVE_OFFSET"]], "py_set_size (c function)": [[57, "c.Py_SET_SIZE"]], "py_set_type (c function)": [[57, "c.Py_SET_TYPE"]], "py_size (c function)": [[57, "c.Py_SIZE"]], "py_type (c function)": [[57, "c.Py_TYPE"]], "py_t_bool (c macro)": [[57, "c.Py_T_BOOL"]], "py_t_byte (c macro)": [[57, "c.Py_T_BYTE"]], "py_t_char (c macro)": [[57, "c.Py_T_CHAR"]], "py_t_double (c macro)": [[57, "c.Py_T_DOUBLE"]], "py_t_float (c macro)": [[57, "c.Py_T_FLOAT"]], "py_t_int (c macro)": [[57, "c.Py_T_INT"]], "py_t_long (c macro)": [[57, "c.Py_T_LONG"]], "py_t_longlong (c macro)": [[57, "c.Py_T_LONGLONG"]], "py_t_object_ex (c macro)": [[57, "c.Py_T_OBJECT_EX"]], "py_t_pyssizet (c macro)": [[57, "c.Py_T_PYSSIZET"]], "py_t_short (c macro)": [[57, "c.Py_T_SHORT"]], "py_t_string (c macro)": [[57, "c.Py_T_STRING"]], "py_t_string_inplace (c macro)": [[57, "c.Py_T_STRING_INPLACE"]], "py_t_ubyte (c macro)": [[57, "c.Py_T_UBYTE"]], "py_t_uint (c macro)": [[57, "c.Py_T_UINT"]], "py_t_ulong (c macro)": [[57, "c.Py_T_ULONG"]], "py_t_ulonglong (c macro)": [[57, "c.Py_T_ULONGLONG"]], "py_t_ushort (c macro)": [[57, "c.Py_T_USHORT"]], "readonly": [[57, "index-3"]], "read_restricted": [[57, "index-2"]], "restricted": [[57, "index-2"], [426, "index-13"]], "t_bool": [[57, "index-4"]], "t_byte": [[57, "index-4"]], "t_char": [[57, "index-4"]], "t_double": [[57, "index-4"]], "t_float": [[57, "index-4"]], "t_int": [[57, "index-4"]], "t_long": [[57, "index-4"]], "t_longlong": [[57, "index-4"]], "t_none (c macro)": [[57, "c.T_NONE"]], "t_object (c macro)": [[57, "c.T_OBJECT"]], "t_object_ex": [[57, "index-4"]], "t_pyssizet": [[57, "index-4"]], "t_short": [[57, "index-4"]], "t_string": [[57, "index-4"]], "t_string_inplace": [[57, "index-4"]], "t_ubyte": [[57, "index-4"]], "t_uint": [[57, "index-4"]], "t_ulong": [[57, "index-4"]], "t_ulongulong": [[57, "index-4"]], "t_ushort": [[57, "index-4"]], "write_restricted": [[57, "index-2"]], "_pycfunctionfast (c type)": [[57, "c._PyCFunctionFast"]], "_pycfunctionfastwithkeywords (c type)": [[57, "c._PyCFunctionFastWithKeywords"]], "classmethod": [[57, "index-0"]], "getter (c type)": [[57, "c.getter"]], "setter (c type)": [[57, "c.setter"]], "staticmethod": [[57, "index-1"]], "structmember.h": [[57, "index-4"]], "pep 578": [[58, "index-0"], [139, "index-1"], [349, "index-1"], [478, "index-4"]], "pyos_afterfork (c function)": [[58, "c.PyOS_AfterFork"]], "pyos_afterfork_child (c function)": [[58, "c.PyOS_AfterFork_Child"]], "pyos_afterfork_parent (c function)": [[58, "c.PyOS_AfterFork_Parent"]], "pyos_beforefork (c function)": [[58, "c.PyOS_BeforeFork"]], "pyos_checkstack (c function)": [[58, "c.PyOS_CheckStack"]], "pyos_fspath (c function)": [[58, "c.PyOS_FSPath"]], "pyos_getsig (c function)": [[58, "c.PyOS_getsig"]], "pyos_setsig (c function)": [[58, "c.PyOS_setsig"]], "pysys_addaudithook (c function)": [[58, "c.PySys_AddAuditHook"]], "pysys_addwarnoption (c function)": [[58, "c.PySys_AddWarnOption"]], "pysys_addwarnoptionunicode (c function)": [[58, "c.PySys_AddWarnOptionUnicode"]], "pysys_addxoption (c function)": [[58, "c.PySys_AddXOption"]], "pysys_audit (c function)": [[58, "c.PySys_Audit"]], "pysys_formatstderr (c function)": [[58, "c.PySys_FormatStderr"]], "pysys_formatstdout (c function)": [[58, "c.PySys_FormatStdout"]], "pysys_getobject (c function)": [[58, "c.PySys_GetObject"]], "pysys_getxoptions (c function)": [[58, "c.PySys_GetXOptions"]], "pysys_resetwarnoptions (c function)": [[58, "c.PySys_ResetWarnOptions"]], "pysys_setobject (c function)": [[58, "c.PySys_SetObject"]], "pysys_setpath (c function)": [[58, "c.PySys_SetPath"]], "pysys_writestderr (c function)": [[58, "c.PySys_WriteStderr"]], "pysys_writestdout (c function)": [[58, "c.PySys_WriteStdout"]], "py_atexit (c function)": [[58, "c.Py_AtExit"]], "py_decodelocale (c function)": [[58, "c.Py_DecodeLocale"]], "py_encodelocale (c function)": [[58, "c.Py_EncodeLocale"]], "py_exit (c function)": [[58, "c.Py_Exit"]], "py_fatalerror (c function)": [[58, "c.Py_FatalError"]], "py_fdisinteractive (c function)": [[58, "c.Py_FdIsInteractive"]], "abort()": [[58, "index-1"]], "cleanup functions": [[58, "index-3"]], "exit()": [[58, "index-2"]], "pystructsequence_desc (c type)": [[59, "c.PyStructSequence_Desc"]], "pystructsequence_desc.doc (c member)": [[59, "c.PyStructSequence_Desc.doc"]], "pystructsequence_desc.fields (c member)": [[59, "c.PyStructSequence_Desc.fields"]], "pystructsequence_desc.n_in_sequence (c member)": [[59, "c.PyStructSequence_Desc.n_in_sequence"]], "pystructsequence_desc.name (c member)": [[59, "c.PyStructSequence_Desc.name"]], "pystructsequence_field (c type)": [[59, "c.PyStructSequence_Field"]], "pystructsequence_field.doc (c member)": [[59, "c.PyStructSequence_Field.doc"]], "pystructsequence_field.name (c member)": [[59, "c.PyStructSequence_Field.name"]], "pystructsequence_get_item (c function)": [[59, "c.PyStructSequence_GET_ITEM"]], "pystructsequence_getitem (c function)": [[59, "c.PyStructSequence_GetItem"]], "pystructsequence_inittype (c function)": [[59, "c.PyStructSequence_InitType"]], "pystructsequence_inittype2 (c function)": [[59, "c.PyStructSequence_InitType2"]], "pystructsequence_new (c function)": [[59, "c.PyStructSequence_New"]], "pystructsequence_newtype (c function)": [[59, "c.PyStructSequence_NewType"]], "pystructsequence_set_item (c function)": [[59, "c.PyStructSequence_SET_ITEM"]], "pystructsequence_setitem (c function)": [[59, "c.PyStructSequence_SetItem"]], "pystructsequence_unnamedfield (c var)": [[59, "c.PyStructSequence_UnnamedField"]], "pytupleobject (c type)": [[59, "c.PyTupleObject"]], "pytuple_check (c function)": [[59, "c.PyTuple_Check"]], "pytuple_checkexact (c function)": [[59, "c.PyTuple_CheckExact"]], "pytuple_get_item (c function)": [[59, "c.PyTuple_GET_ITEM"]], "pytuple_get_size (c function)": [[59, "c.PyTuple_GET_SIZE"]], "pytuple_getitem (c function)": [[59, "c.PyTuple_GetItem"]], "pytuple_getslice (c function)": [[59, "c.PyTuple_GetSlice"]], "pytuple_new (c function)": [[59, "c.PyTuple_New"]], "pytuple_pack (c function)": [[59, "c.PyTuple_Pack"]], "pytuple_set_item (c function)": [[59, "c.PyTuple_SET_ITEM"]], "pytuple_setitem (c function)": [[59, "c.PyTuple_SetItem"]], "pytuple_size (c function)": [[59, "c.PyTuple_Size"]], "pytuple_type (c var)": [[59, "c.PyTuple_Type"]], "_pytuple_resize (c function)": [[59, "c._PyTuple_Resize"]], "pytypeobject (c type)": [[60, "c.PyTypeObject"]], "pytype_addwatcher (c function)": [[60, "c.PyType_AddWatcher"]], "pytype_check (c function)": [[60, "c.PyType_Check"]], "pytype_checkexact (c function)": [[60, "c.PyType_CheckExact"]], "pytype_clearcache (c function)": [[60, "c.PyType_ClearCache"]], "pytype_clearwatcher (c function)": [[60, "c.PyType_ClearWatcher"]], "pytype_frommetaclass (c function)": [[60, "c.PyType_FromMetaclass"]], "pytype_frommoduleandspec (c function)": [[60, "c.PyType_FromModuleAndSpec"]], "pytype_fromspec (c function)": [[60, "c.PyType_FromSpec"]], "pytype_fromspecwithbases (c function)": [[60, "c.PyType_FromSpecWithBases"]], "pytype_genericalloc (c function)": [[60, "c.PyType_GenericAlloc"]], "pytype_genericnew (c function)": [[60, "c.PyType_GenericNew"]], "pytype_getdict (c function)": [[60, "c.PyType_GetDict"]], "pytype_getflags (c function)": [[60, "c.PyType_GetFlags"]], "pytype_getmodule (c function)": [[60, "c.PyType_GetModule"]], "pytype_getmodulebydef (c function)": [[60, "c.PyType_GetModuleByDef"]], "pytype_getmodulestate (c function)": [[60, "c.PyType_GetModuleState"]], "pytype_getname (c function)": [[60, "c.PyType_GetName"]], "pytype_getqualname (c function)": [[60, "c.PyType_GetQualName"]], "pytype_getslot (c function)": [[60, "c.PyType_GetSlot"]], "pytype_hasfeature (c function)": [[60, "c.PyType_HasFeature"]], "pytype_is_gc (c function)": [[60, "c.PyType_IS_GC"]], "pytype_issubtype (c function)": [[60, "c.PyType_IsSubtype"]], "pytype_modified (c function)": [[60, "c.PyType_Modified"]], "pytype_ready (c function)": [[60, "c.PyType_Ready"]], "pytype_slot (c type)": [[60, "c.PyType_Slot"]], "pytype_slot.pfunc (c member)": [[60, "c.PyType_Slot.pfunc"]], "pytype_slot.slot (c member)": [[60, "c.PyType_Slot.slot"]], "pytype_spec (c type)": [[60, "c.PyType_Spec"]], "pytype_spec.basicsize (c member)": [[60, "c.PyType_Spec.basicsize"]], "pytype_spec.flags (c member)": [[60, "c.PyType_Spec.flags"]], "pytype_spec.itemsize (c member)": [[60, "c.PyType_Spec.itemsize"]], "pytype_spec.name (c member)": [[60, "c.PyType_Spec.name"]], "pytype_spec.slots (c member)": [[60, "c.PyType_Spec.slots"]], "pytype_type (c var)": [[60, "c.PyType_Type"]], "pytype_watch (c function)": [[60, "c.PyType_Watch"]], "pytype_watchcallback (c type)": [[60, "c.PyType_WatchCallback"]], "pyunstable_type_assignversiontag (c function)": [[60, "c.PyUnstable_Type_AssignVersionTag"]], "py_genericalias (c function)": [[61, "c.Py_GenericAlias"]], "py_genericaliastype (c var)": [[61, "c.Py_GenericAliasType"]], "pep 442": [[62, "index-5"], [74, "index-2"], [224, "index-0"], [474, "index-15"], [474, "index-16"], [474, "index-45"], [474, "index-46"], [479, "index-20"]], "pep 634": [[62, "index-3"], [62, "index-4"], [109, "index-1"], [424, "index-19"], [424, "index-25"], [425, "index-108"], [469, "index-0"], [469, "index-15"]], "pyasyncmethods (c type)": [[62, "c.PyAsyncMethods"]], "pyasyncmethods.am_aiter (c member)": [[62, "c.PyAsyncMethods.am_aiter"]], "pyasyncmethods.am_anext (c member)": [[62, "c.PyAsyncMethods.am_anext"]], "pyasyncmethods.am_await (c member)": [[62, "c.PyAsyncMethods.am_await"]], "pyasyncmethods.am_send (c member)": [[62, "c.PyAsyncMethods.am_send"]], "pybufferprocs (c type)": [[62, "c.PyBufferProcs"]], "pybufferprocs.bf_getbuffer (c member)": [[62, "c.PyBufferProcs.bf_getbuffer"]], "pybufferprocs.bf_releasebuffer (c member)": [[62, "c.PyBufferProcs.bf_releasebuffer"]], "pymappingmethods (c type)": [[62, "c.PyMappingMethods"]], "pymappingmethods.mp_ass_subscript (c member)": [[62, "c.PyMappingMethods.mp_ass_subscript"]], "pymappingmethods.mp_length (c member)": [[62, "c.PyMappingMethods.mp_length"]], "pymappingmethods.mp_subscript (c member)": [[62, "c.PyMappingMethods.mp_subscript"]], "pynumbermethods (c type)": [[62, "c.PyNumberMethods"]], "pynumbermethods.nb_absolute (c member)": [[62, "c.PyNumberMethods.nb_absolute"]], "pynumbermethods.nb_add (c member)": [[62, "c.PyNumberMethods.nb_add"]], "pynumbermethods.nb_and (c member)": [[62, "c.PyNumberMethods.nb_and"]], "pynumbermethods.nb_bool (c member)": [[62, "c.PyNumberMethods.nb_bool"]], "pynumbermethods.nb_divmod (c member)": [[62, "c.PyNumberMethods.nb_divmod"]], "pynumbermethods.nb_float (c member)": [[62, "c.PyNumberMethods.nb_float"]], "pynumbermethods.nb_floor_divide (c member)": [[62, "c.PyNumberMethods.nb_floor_divide"]], "pynumbermethods.nb_index (c member)": [[62, "c.PyNumberMethods.nb_index"]], "pynumbermethods.nb_inplace_add (c member)": [[62, "c.PyNumberMethods.nb_inplace_add"]], "pynumbermethods.nb_inplace_and (c member)": [[62, "c.PyNumberMethods.nb_inplace_and"]], "pynumbermethods.nb_inplace_floor_divide (c member)": [[62, "c.PyNumberMethods.nb_inplace_floor_divide"]], "pynumbermethods.nb_inplace_lshift (c member)": [[62, "c.PyNumberMethods.nb_inplace_lshift"]], "pynumbermethods.nb_inplace_matrix_multiply (c member)": [[62, "c.PyNumberMethods.nb_inplace_matrix_multiply"]], "pynumbermethods.nb_inplace_multiply (c member)": [[62, "c.PyNumberMethods.nb_inplace_multiply"]], "pynumbermethods.nb_inplace_or (c member)": [[62, "c.PyNumberMethods.nb_inplace_or"]], "pynumbermethods.nb_inplace_power (c member)": [[62, "c.PyNumberMethods.nb_inplace_power"]], "pynumbermethods.nb_inplace_remainder (c member)": [[62, "c.PyNumberMethods.nb_inplace_remainder"]], "pynumbermethods.nb_inplace_rshift (c member)": [[62, "c.PyNumberMethods.nb_inplace_rshift"]], "pynumbermethods.nb_inplace_subtract (c member)": [[62, "c.PyNumberMethods.nb_inplace_subtract"]], "pynumbermethods.nb_inplace_true_divide (c member)": [[62, "c.PyNumberMethods.nb_inplace_true_divide"]], "pynumbermethods.nb_inplace_xor (c member)": [[62, "c.PyNumberMethods.nb_inplace_xor"]], "pynumbermethods.nb_int (c member)": [[62, "c.PyNumberMethods.nb_int"]], "pynumbermethods.nb_invert (c member)": [[62, "c.PyNumberMethods.nb_invert"]], "pynumbermethods.nb_lshift (c member)": [[62, "c.PyNumberMethods.nb_lshift"]], "pynumbermethods.nb_matrix_multiply (c member)": [[62, "c.PyNumberMethods.nb_matrix_multiply"]], "pynumbermethods.nb_multiply (c member)": [[62, "c.PyNumberMethods.nb_multiply"]], "pynumbermethods.nb_negative (c member)": [[62, "c.PyNumberMethods.nb_negative"]], "pynumbermethods.nb_or (c member)": [[62, "c.PyNumberMethods.nb_or"]], "pynumbermethods.nb_positive (c member)": [[62, "c.PyNumberMethods.nb_positive"]], "pynumbermethods.nb_power (c member)": [[62, "c.PyNumberMethods.nb_power"]], "pynumbermethods.nb_remainder (c member)": [[62, "c.PyNumberMethods.nb_remainder"]], "pynumbermethods.nb_reserved (c member)": [[62, "c.PyNumberMethods.nb_reserved"]], "pynumbermethods.nb_rshift (c member)": [[62, "c.PyNumberMethods.nb_rshift"]], "pynumbermethods.nb_subtract (c member)": [[62, "c.PyNumberMethods.nb_subtract"]], "pynumbermethods.nb_true_divide (c member)": [[62, "c.PyNumberMethods.nb_true_divide"]], "pynumbermethods.nb_xor (c member)": [[62, "c.PyNumberMethods.nb_xor"]], "pyobject._ob_next (c member)": [[62, "c.PyObject._ob_next"]], "pyobject._ob_prev (c member)": [[62, "c.PyObject._ob_prev"]], "pyobject.ob_refcnt (c member)": [[62, "c.PyObject.ob_refcnt"]], "pyobject.ob_type (c member)": [[62, "c.PyObject.ob_type"]], "pysequencemethods (c type)": [[62, "c.PySequenceMethods"]], "pysequencemethods.sq_ass_item (c member)": [[62, "c.PySequenceMethods.sq_ass_item"]], "pysequencemethods.sq_concat (c member)": [[62, "c.PySequenceMethods.sq_concat"]], "pysequencemethods.sq_contains (c member)": [[62, "c.PySequenceMethods.sq_contains"]], "pysequencemethods.sq_inplace_concat (c member)": [[62, "c.PySequenceMethods.sq_inplace_concat"]], "pysequencemethods.sq_inplace_repeat (c member)": [[62, "c.PySequenceMethods.sq_inplace_repeat"]], "pysequencemethods.sq_item (c member)": [[62, "c.PySequenceMethods.sq_item"]], "pysequencemethods.sq_length (c member)": [[62, "c.PySequenceMethods.sq_length"]], "pysequencemethods.sq_repeat (c member)": [[62, "c.PySequenceMethods.sq_repeat"]], "pytypeobject.tp_alloc (c member)": [[62, "c.PyTypeObject.tp_alloc"]], "pytypeobject.tp_as_async (c member)": [[62, "c.PyTypeObject.tp_as_async"]], "pytypeobject.tp_as_buffer (c member)": [[62, "c.PyTypeObject.tp_as_buffer"]], "pytypeobject.tp_as_mapping (c member)": [[62, "c.PyTypeObject.tp_as_mapping"]], "pytypeobject.tp_as_number (c member)": [[62, "c.PyTypeObject.tp_as_number"]], "pytypeobject.tp_as_sequence (c member)": [[62, "c.PyTypeObject.tp_as_sequence"]], "pytypeobject.tp_base (c member)": [[62, "c.PyTypeObject.tp_base"]], "pytypeobject.tp_bases (c member)": [[62, "c.PyTypeObject.tp_bases"]], "pytypeobject.tp_basicsize (c member)": [[62, "c.PyTypeObject.tp_basicsize"]], "pytypeobject.tp_cache (c member)": [[62, "c.PyTypeObject.tp_cache"]], "pytypeobject.tp_call (c member)": [[62, "c.PyTypeObject.tp_call"]], "pytypeobject.tp_clear (c member)": [[62, "c.PyTypeObject.tp_clear"]], "pytypeobject.tp_dealloc (c member)": [[62, "c.PyTypeObject.tp_dealloc"]], "pytypeobject.tp_del (c member)": [[62, "c.PyTypeObject.tp_del"]], "pytypeobject.tp_descr_get (c member)": [[62, "c.PyTypeObject.tp_descr_get"]], "pytypeobject.tp_descr_set (c member)": [[62, "c.PyTypeObject.tp_descr_set"]], "pytypeobject.tp_dict (c member)": [[62, "c.PyTypeObject.tp_dict"]], "pytypeobject.tp_dictoffset (c member)": [[62, "c.PyTypeObject.tp_dictoffset"]], "pytypeobject.tp_doc (c member)": [[62, "c.PyTypeObject.tp_doc"]], "pytypeobject.tp_finalize (c member)": [[62, "c.PyTypeObject.tp_finalize"]], "pytypeobject.tp_flags (c member)": [[62, "c.PyTypeObject.tp_flags"]], "pytypeobject.tp_free (c member)": [[62, "c.PyTypeObject.tp_free"]], "pytypeobject.tp_getattr (c member)": [[62, "c.PyTypeObject.tp_getattr"]], "pytypeobject.tp_getattro (c member)": [[62, "c.PyTypeObject.tp_getattro"]], "pytypeobject.tp_getset (c member)": [[62, "c.PyTypeObject.tp_getset"]], "pytypeobject.tp_hash (c member)": [[62, "c.PyTypeObject.tp_hash"]], "pytypeobject.tp_init (c member)": [[62, "c.PyTypeObject.tp_init"]], "pytypeobject.tp_is_gc (c member)": [[62, "c.PyTypeObject.tp_is_gc"]], "pytypeobject.tp_itemsize (c member)": [[62, "c.PyTypeObject.tp_itemsize"]], "pytypeobject.tp_iter (c member)": [[62, "c.PyTypeObject.tp_iter"]], "pytypeobject.tp_iternext (c member)": [[62, "c.PyTypeObject.tp_iternext"]], "pytypeobject.tp_members (c member)": [[62, "c.PyTypeObject.tp_members"]], "pytypeobject.tp_methods (c member)": [[62, "c.PyTypeObject.tp_methods"]], "pytypeobject.tp_mro (c member)": [[62, "c.PyTypeObject.tp_mro"]], "pytypeobject.tp_name (c member)": [[62, "c.PyTypeObject.tp_name"]], "pytypeobject.tp_new (c member)": [[62, "c.PyTypeObject.tp_new"]], "pytypeobject.tp_repr (c member)": [[62, "c.PyTypeObject.tp_repr"]], "pytypeobject.tp_richcompare (c member)": [[62, "c.PyTypeObject.tp_richcompare"]], "pytypeobject.tp_setattr (c member)": [[62, "c.PyTypeObject.tp_setattr"]], "pytypeobject.tp_setattro (c member)": [[62, "c.PyTypeObject.tp_setattro"]], "pytypeobject.tp_str (c member)": [[62, "c.PyTypeObject.tp_str"]], "pytypeobject.tp_subclasses (c member)": [[62, "c.PyTypeObject.tp_subclasses"]], "pytypeobject.tp_traverse (c member)": [[62, "c.PyTypeObject.tp_traverse"]], "pytypeobject.tp_vectorcall (c member)": [[62, "c.PyTypeObject.tp_vectorcall"]], "pytypeobject.tp_vectorcall_offset (c member)": [[62, "c.PyTypeObject.tp_vectorcall_offset"]], "pytypeobject.tp_version_tag (c member)": [[62, "c.PyTypeObject.tp_version_tag"]], "pytypeobject.tp_watched (c member)": [[62, "c.PyTypeObject.tp_watched"]], "pytypeobject.tp_weaklist (c member)": [[62, "c.PyTypeObject.tp_weaklist"]], "pytypeobject.tp_weaklistoffset (c member)": [[62, "c.PyTypeObject.tp_weaklistoffset"]], "pyvarobject.ob_size (c member)": [[62, "c.PyVarObject.ob_size"]], "py_eq (c macro)": [[62, "c.Py_EQ"]], "py_ge (c macro)": [[62, "c.Py_GE"]], "py_gt (c macro)": [[62, "c.Py_GT"]], "py_le (c macro)": [[62, "c.Py_LE"]], "py_lt (c macro)": [[62, "c.Py_LT"]], "py_ne (c macro)": [[62, "c.Py_NE"]], "py_return_richcompare (c macro)": [[62, "c.Py_RETURN_RICHCOMPARE"]], "py_tpflags_basetype (c macro)": [[62, "c.Py_TPFLAGS_BASETYPE"]], "py_tpflags_base_exc_subclass (c macro)": [[62, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS"]], "py_tpflags_bytes_subclass (c macro)": [[62, "c.Py_TPFLAGS_BYTES_SUBCLASS"]], "py_tpflags_default (c macro)": [[62, "c.Py_TPFLAGS_DEFAULT"]], "py_tpflags_dict_subclass (c macro)": [[62, "c.Py_TPFLAGS_DICT_SUBCLASS"]], "py_tpflags_disallow_instantiation (c macro)": [[62, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION"]], "py_tpflags_have_finalize (c macro)": [[62, "c.Py_TPFLAGS_HAVE_FINALIZE"]], "py_tpflags_have_gc (c macro)": [[62, "c.Py_TPFLAGS_HAVE_GC"]], "py_tpflags_have_vectorcall (c macro)": [[62, "c.Py_TPFLAGS_HAVE_VECTORCALL"]], "py_tpflags_heaptype (c macro)": [[62, "c.Py_TPFLAGS_HEAPTYPE"]], "py_tpflags_immutabletype (c macro)": [[62, "c.Py_TPFLAGS_IMMUTABLETYPE"]], "py_tpflags_items_at_end (c macro)": [[62, "c.Py_TPFLAGS_ITEMS_AT_END"]], "py_tpflags_list_subclass (c macro)": [[62, "c.Py_TPFLAGS_LIST_SUBCLASS"]], "py_tpflags_long_subclass (c macro)": [[62, "c.Py_TPFLAGS_LONG_SUBCLASS"]], "py_tpflags_managed_dict (c macro)": [[62, "c.Py_TPFLAGS_MANAGED_DICT"]], "py_tpflags_managed_weakref (c macro)": [[62, "c.Py_TPFLAGS_MANAGED_WEAKREF"]], "py_tpflags_mapping (c macro)": [[62, "c.Py_TPFLAGS_MAPPING"]], "py_tpflags_method_descriptor (c macro)": [[62, "c.Py_TPFLAGS_METHOD_DESCRIPTOR"]], "py_tpflags_ready (c macro)": [[62, "c.Py_TPFLAGS_READY"]], "py_tpflags_readying (c macro)": [[62, "c.Py_TPFLAGS_READYING"]], "py_tpflags_sequence (c macro)": [[62, "c.Py_TPFLAGS_SEQUENCE"]], "py_tpflags_tuple_subclass (c macro)": [[62, "c.Py_TPFLAGS_TUPLE_SUBCLASS"]], "py_tpflags_type_subclass (c macro)": [[62, "c.Py_TPFLAGS_TYPE_SUBCLASS"]], "py_tpflags_unicode_subclass (c macro)": [[62, "c.Py_TPFLAGS_UNICODE_SUBCLASS"]], "py_tpflags_valid_version_tag (c macro)": [[62, "c.Py_TPFLAGS_VALID_VERSION_TAG"]], "allocfunc (c type)": [[62, "c.allocfunc"]], "binaryfunc (c type)": [[62, "c.binaryfunc"]], "descrgetfunc (c type)": [[62, "c.descrgetfunc"]], "descrsetfunc (c type)": [[62, "c.descrsetfunc"]], "destructor (c type)": [[62, "c.destructor"]], "freefunc (c type)": [[62, "c.freefunc"]], "getattrfunc (c type)": [[62, "c.getattrfunc"]], "getattrofunc (c type)": [[62, "c.getattrofunc"]], "getbufferproc (c type)": [[62, "c.getbufferproc"]], "getiterfunc (c type)": [[62, "c.getiterfunc"]], "hashfunc (c type)": [[62, "c.hashfunc"]], "initproc (c type)": [[62, "c.initproc"]], "iternextfunc (c type)": [[62, "c.iternextfunc"]], "lenfunc (c type)": [[62, "c.lenfunc"]], "newfunc (c type)": [[62, "c.newfunc"]], "objobjargproc (c type)": [[62, "c.objobjargproc"]], "objobjproc (c type)": [[62, "c.objobjproc"]], "releasebufferproc (c type)": [[62, "c.releasebufferproc"]], "reprfunc (c type)": [[62, "c.reprfunc"]], "richcmpfunc (c type)": [[62, "c.richcmpfunc"]], "sendfunc (c type)": [[62, "c.sendfunc"]], "setattrfunc (c type)": [[62, "c.setattrfunc"]], "setattrofunc (c type)": [[62, "c.setattrofunc"]], "ssizeargfunc (c type)": [[62, "c.ssizeargfunc"]], "ssizeobjargproc (c type)": [[62, "c.ssizeobjargproc"]], "ternaryfunc (c type)": [[62, "c.ternaryfunc"]], "unaryfunc (c type)": [[62, "c.unaryfunc"]], "pep 383": [[63, "index-2"], [63, "index-3"], [63, "index-4"], [155, "index-2"], [334, "index-1"]], "pep 393": [[63, "index-0"], [155, "index-5"], [349, "index-19"], [469, "index-37"], [473, "index-30"], [473, "index-32"], [473, "index-33"], [473, "index-34"], [473, "index-38"], [473, "index-6"], [473, "index-7"], [473, "index-8"], [479, "index-25"], [479, "index-26"]], "pep 623": [[63, "index-1"], [469, "index-11"], [471, "index-1"], [471, "index-26"], [471, "index-48"]], "pyasciiobject (c type)": [[63, "c.PyASCIIObject"]], "pycompactunicodeobject (c type)": [[63, "c.PyCompactUnicodeObject"]], "pyunicodeobject (c type)": [[63, "c.PyUnicodeObject"]], "pyunicode_1byte_data (c function)": [[63, "c.PyUnicode_1BYTE_DATA"]], "pyunicode_1byte_kind (c macro)": [[63, "c.PyUnicode_1BYTE_KIND"]], "pyunicode_2byte_data (c function)": [[63, "c.PyUnicode_2BYTE_DATA"]], "pyunicode_2byte_kind (c macro)": [[63, "c.PyUnicode_2BYTE_KIND"]], "pyunicode_4byte_data (c function)": [[63, "c.PyUnicode_4BYTE_DATA"]], "pyunicode_4byte_kind (c macro)": [[63, "c.PyUnicode_4BYTE_KIND"]], "pyunicode_asasciistring (c function)": [[63, "c.PyUnicode_AsASCIIString"]], "pyunicode_ascharmapstring (c function)": [[63, "c.PyUnicode_AsCharmapString"]], "pyunicode_asencodedstring (c function)": [[63, "c.PyUnicode_AsEncodedString"]], "pyunicode_aslatin1string (c function)": [[63, "c.PyUnicode_AsLatin1String"]], "pyunicode_asmbcsstring (c function)": [[63, "c.PyUnicode_AsMBCSString"]], "pyunicode_asrawunicodeescapestring (c function)": [[63, "c.PyUnicode_AsRawUnicodeEscapeString"]], "pyunicode_asucs4 (c function)": [[63, "c.PyUnicode_AsUCS4"]], "pyunicode_asucs4copy (c function)": [[63, "c.PyUnicode_AsUCS4Copy"]], "pyunicode_asutf16string (c function)": [[63, "c.PyUnicode_AsUTF16String"]], "pyunicode_asutf32string (c function)": [[63, "c.PyUnicode_AsUTF32String"]], "pyunicode_asutf8 (c function)": [[63, "c.PyUnicode_AsUTF8"]], "pyunicode_asutf8andsize (c function)": [[63, "c.PyUnicode_AsUTF8AndSize"]], "pyunicode_asutf8string (c function)": [[63, "c.PyUnicode_AsUTF8String"]], "pyunicode_asunicodeescapestring (c function)": [[63, "c.PyUnicode_AsUnicodeEscapeString"]], "pyunicode_aswidechar (c function)": [[63, "c.PyUnicode_AsWideChar"]], "pyunicode_aswidecharstring (c function)": [[63, "c.PyUnicode_AsWideCharString"]], "pyunicode_check (c function)": [[63, "c.PyUnicode_Check"]], "pyunicode_checkexact (c function)": [[63, "c.PyUnicode_CheckExact"]], "pyunicode_compare (c function)": [[63, "c.PyUnicode_Compare"]], "pyunicode_comparewithasciistring (c function)": [[63, "c.PyUnicode_CompareWithASCIIString"]], "pyunicode_concat (c function)": [[63, "c.PyUnicode_Concat"]], "pyunicode_contains (c function)": [[63, "c.PyUnicode_Contains"]], "pyunicode_copycharacters (c function)": [[63, "c.PyUnicode_CopyCharacters"]], "pyunicode_count (c function)": [[63, "c.PyUnicode_Count"]], "pyunicode_data (c function)": [[63, "c.PyUnicode_DATA"]], "pyunicode_decode (c function)": [[63, "c.PyUnicode_Decode"]], "pyunicode_decodeascii (c function)": [[63, "c.PyUnicode_DecodeASCII"]], "pyunicode_decodecharmap (c function)": [[63, "c.PyUnicode_DecodeCharmap"]], "pyunicode_decodefsdefault (c function)": [[63, "c.PyUnicode_DecodeFSDefault"]], "pyunicode_decodefsdefaultandsize (c function)": [[63, "c.PyUnicode_DecodeFSDefaultAndSize"]], "pyunicode_decodelatin1 (c function)": [[63, "c.PyUnicode_DecodeLatin1"]], "pyunicode_decodelocale (c function)": [[63, "c.PyUnicode_DecodeLocale"]], "pyunicode_decodelocaleandsize (c function)": [[63, "c.PyUnicode_DecodeLocaleAndSize"]], "pyunicode_decodembcs (c function)": [[63, "c.PyUnicode_DecodeMBCS"]], "pyunicode_decodembcsstateful (c function)": [[63, "c.PyUnicode_DecodeMBCSStateful"]], "pyunicode_decoderawunicodeescape (c function)": [[63, "c.PyUnicode_DecodeRawUnicodeEscape"]], "pyunicode_decodeutf16 (c function)": [[63, "c.PyUnicode_DecodeUTF16"]], "pyunicode_decodeutf16stateful (c function)": [[63, "c.PyUnicode_DecodeUTF16Stateful"]], "pyunicode_decodeutf32 (c function)": [[63, "c.PyUnicode_DecodeUTF32"]], "pyunicode_decodeutf32stateful (c function)": [[63, "c.PyUnicode_DecodeUTF32Stateful"]], "pyunicode_decodeutf7 (c function)": [[63, "c.PyUnicode_DecodeUTF7"]], "pyunicode_decodeutf7stateful (c function)": [[63, "c.PyUnicode_DecodeUTF7Stateful"]], "pyunicode_decodeutf8 (c function)": [[63, "c.PyUnicode_DecodeUTF8"]], "pyunicode_decodeutf8stateful (c function)": [[63, "c.PyUnicode_DecodeUTF8Stateful"]], "pyunicode_decodeunicodeescape (c function)": [[63, "c.PyUnicode_DecodeUnicodeEscape"]], "pyunicode_encodecodepage (c function)": [[63, "c.PyUnicode_EncodeCodePage"]], "pyunicode_encodefsdefault (c function)": [[63, "c.PyUnicode_EncodeFSDefault"]], "pyunicode_encodelocale (c function)": [[63, "c.PyUnicode_EncodeLocale"]], "pyunicode_fsconverter (c function)": [[63, "c.PyUnicode_FSConverter"]], "pyunicode_fsdecoder (c function)": [[63, "c.PyUnicode_FSDecoder"]], "pyunicode_fill (c function)": [[63, "c.PyUnicode_Fill"]], "pyunicode_find (c function)": [[63, "c.PyUnicode_Find"]], "pyunicode_findchar (c function)": [[63, "c.PyUnicode_FindChar"]], "pyunicode_format (c function)": [[63, "c.PyUnicode_Format"]], "pyunicode_fromencodedobject (c function)": [[63, "c.PyUnicode_FromEncodedObject"]], "pyunicode_fromformat (c function)": [[63, "c.PyUnicode_FromFormat"]], "pyunicode_fromformatv (c function)": [[63, "c.PyUnicode_FromFormatV"]], "pyunicode_fromkindanddata (c function)": [[63, "c.PyUnicode_FromKindAndData"]], "pyunicode_fromobject (c function)": [[63, "c.PyUnicode_FromObject"]], "pyunicode_fromstring (c function)": [[63, "c.PyUnicode_FromString"]], "pyunicode_fromstringandsize (c function)": [[63, "c.PyUnicode_FromStringAndSize"]], "pyunicode_fromwidechar (c function)": [[63, "c.PyUnicode_FromWideChar"]], "pyunicode_get_length (c function)": [[63, "c.PyUnicode_GET_LENGTH"]], "pyunicode_getlength (c function)": [[63, "c.PyUnicode_GetLength"]], "pyunicode_internfromstring (c function)": [[63, "c.PyUnicode_InternFromString"]], "pyunicode_interninplace (c function)": [[63, "c.PyUnicode_InternInPlace"]], "pyunicode_isidentifier (c function)": [[63, "c.PyUnicode_IsIdentifier"]], "pyunicode_join (c function)": [[63, "c.PyUnicode_Join"]], "pyunicode_kind (c function)": [[63, "c.PyUnicode_KIND"]], "pyunicode_max_char_value (c function)": [[63, "c.PyUnicode_MAX_CHAR_VALUE"]], "pyunicode_new (c function)": [[63, "c.PyUnicode_New"]], "pyunicode_read (c function)": [[63, "c.PyUnicode_READ"]], "pyunicode_ready (c function)": [[63, "c.PyUnicode_READY"]], "pyunicode_read_char (c function)": [[63, "c.PyUnicode_READ_CHAR"]], "pyunicode_readchar (c function)": [[63, "c.PyUnicode_ReadChar"]], "pyunicode_replace (c function)": [[63, "c.PyUnicode_Replace"]], "pyunicode_richcompare (c function)": [[63, "c.PyUnicode_RichCompare"]], "pyunicode_split (c function)": [[63, "c.PyUnicode_Split"]], "pyunicode_splitlines (c function)": [[63, "c.PyUnicode_Splitlines"]], "pyunicode_substring (c function)": [[63, "c.PyUnicode_Substring"]], "pyunicode_tailmatch (c function)": [[63, "c.PyUnicode_Tailmatch"]], "pyunicode_translate (c function)": [[63, "c.PyUnicode_Translate"]], "pyunicode_type (c var)": [[63, "c.PyUnicode_Type"]], "pyunicode_write (c function)": [[63, "c.PyUnicode_WRITE"]], "pyunicode_writechar (c function)": [[63, "c.PyUnicode_WriteChar"]], "py_ucs1 (c type)": [[63, "c.Py_UCS1"]], "py_ucs2 (c type)": [[63, "c.Py_UCS2"]], "py_ucs4 (c type)": [[63, "c.Py_UCS4"]], "py_unicode (c type)": [[63, "c.Py_UNICODE"]], "py_unicode_isalnum (c function)": [[63, "c.Py_UNICODE_ISALNUM"]], "py_unicode_isalpha (c function)": [[63, "c.Py_UNICODE_ISALPHA"]], "py_unicode_isdecimal (c function)": [[63, "c.Py_UNICODE_ISDECIMAL"]], "py_unicode_isdigit (c function)": [[63, "c.Py_UNICODE_ISDIGIT"]], "py_unicode_islinebreak (c function)": [[63, "c.Py_UNICODE_ISLINEBREAK"]], "py_unicode_islower (c function)": [[63, "c.Py_UNICODE_ISLOWER"]], "py_unicode_isnumeric (c function)": [[63, "c.Py_UNICODE_ISNUMERIC"]], "py_unicode_isprintable (c function)": [[63, "c.Py_UNICODE_ISPRINTABLE"]], "py_unicode_isspace (c function)": [[63, "c.Py_UNICODE_ISSPACE"]], "py_unicode_istitle (c function)": [[63, "c.Py_UNICODE_ISTITLE"]], "py_unicode_isupper (c function)": [[63, "c.Py_UNICODE_ISUPPER"]], "py_unicode_is_high_surrogate (c function)": [[63, "c.Py_UNICODE_IS_HIGH_SURROGATE"]], "py_unicode_is_low_surrogate (c function)": [[63, "c.Py_UNICODE_IS_LOW_SURROGATE"]], "py_unicode_is_surrogate (c function)": [[63, "c.Py_UNICODE_IS_SURROGATE"]], "py_unicode_join_surrogates (c function)": [[63, "c.Py_UNICODE_JOIN_SURROGATES"]], "py_unicode_todecimal (c function)": [[63, "c.Py_UNICODE_TODECIMAL"]], "py_unicode_todigit (c function)": [[63, "c.Py_UNICODE_TODIGIT"]], "py_unicode_tolower (c function)": [[63, "c.Py_UNICODE_TOLOWER"]], "py_unicode_tonumeric (c function)": [[63, "c.Py_UNICODE_TONUMERIC"]], "py_unicode_totitle (c function)": [[63, "c.Py_UNICODE_TOTITLE"]], "py_unicode_toupper (c function)": [[63, "c.Py_UNICODE_TOUPPER"]], "co_future_division (c var)": [[65, "c.CO_FUTURE_DIVISION"]], "pep 238": [[65, "index-3"], [86, "index-17"], [110, "index-2"], [461, "index-11"], [461, "index-12"], [461, "index-13"], [467, "index-2"]], "pycompilerflags (c struct)": [[65, "c.PyCompilerFlags"]], "pycompilerflags.cf_feature_version (c member)": [[65, "c.PyCompilerFlags.cf_feature_version"]], "pycompilerflags.cf_flags (c member)": [[65, "c.PyCompilerFlags.cf_flags"]], "pyeval_evalcode (c function)": [[65, "c.PyEval_EvalCode"]], "pyeval_evalcodeex (c function)": [[65, "c.PyEval_EvalCodeEx"]], "pyeval_evalframe (c function)": [[65, "c.PyEval_EvalFrame"]], "pyeval_evalframeex (c function)": [[65, "c.PyEval_EvalFrameEx"]], "pyeval_mergecompilerflags (c function)": [[65, "c.PyEval_MergeCompilerFlags"]], "pyos_inputhook (c var)": [[65, "c.PyOS_InputHook"]], "pyos_readlinefunctionpointer (c var)": [[65, "c.PyOS_ReadlineFunctionPointer"]], "pyrun_anyfile (c function)": [[65, "c.PyRun_AnyFile"]], "pyrun_anyfileex (c function)": [[65, "c.PyRun_AnyFileEx"]], "pyrun_anyfileexflags (c function)": [[65, "c.PyRun_AnyFileExFlags"]], "pyrun_anyfileflags (c function)": [[65, "c.PyRun_AnyFileFlags"]], "pyrun_file (c function)": [[65, "c.PyRun_File"]], "pyrun_fileex (c function)": [[65, "c.PyRun_FileEx"]], "pyrun_fileexflags (c function)": [[65, "c.PyRun_FileExFlags"]], "pyrun_fileflags (c function)": [[65, "c.PyRun_FileFlags"]], "pyrun_interactiveloop (c function)": [[65, "c.PyRun_InteractiveLoop"]], "pyrun_interactiveloopflags (c function)": [[65, "c.PyRun_InteractiveLoopFlags"]], "pyrun_interactiveone (c function)": [[65, "c.PyRun_InteractiveOne"]], "pyrun_interactiveoneflags (c function)": [[65, "c.PyRun_InteractiveOneFlags"]], "pyrun_simplefile (c function)": [[65, "c.PyRun_SimpleFile"]], "pyrun_simplefileex (c function)": [[65, "c.PyRun_SimpleFileEx"]], "pyrun_simplefileexflags (c function)": [[65, "c.PyRun_SimpleFileExFlags"]], "pyrun_simplestring (c function)": [[65, "c.PyRun_SimpleString"]], "pyrun_simplestringflags (c function)": [[65, "c.PyRun_SimpleStringFlags"]], "pyrun_string (c function)": [[65, "c.PyRun_String"]], "pyrun_stringflags (c function)": [[65, "c.PyRun_StringFlags"]], "py_bytesmain (c function)": [[65, "c.Py_BytesMain"]], "py_compilestring (c function)": [[65, "c.Py_CompileString"]], "py_compilestring()": [[65, "index-0"], [65, "index-1"], [65, "index-2"]], "py_compilestringexflags (c function)": [[65, "c.Py_CompileStringExFlags"]], "py_compilestringflags (c function)": [[65, "c.Py_CompileStringFlags"]], "py_compilestringobject (c function)": [[65, "c.Py_CompileStringObject"]], "py_main (c function)": [[65, "c.Py_Main"]], "py_eval_input (c var)": [[65, "c.Py_eval_input"]], "py_file_input (c var)": [[65, "c.Py_file_input"]], "py_single_input (c var)": [[65, "c.Py_single_input"]], "pyobject_clearweakrefs (c function)": [[66, "c.PyObject_ClearWeakRefs"]], "pyweakref_check (c function)": [[66, "c.PyWeakref_Check"]], "pyweakref_checkproxy (c function)": [[66, "c.PyWeakref_CheckProxy"]], "pyweakref_checkref (c function)": [[66, "c.PyWeakref_CheckRef"]], "pyweakref_get_object (c function)": [[66, "c.PyWeakref_GET_OBJECT"]], "pyweakref_getobject (c function)": [[66, "c.PyWeakref_GetObject"]], "pyweakref_newproxy (c function)": [[66, "c.PyWeakref_NewProxy"]], "pyweakref_newref (c function)": [[66, "c.PyWeakref_NewRef"]], "pep 3101": [[67, "index-23"], [342, "index-0"], [342, "index-1"], [465, "index-9"], [467, "index-23"], [467, "index-24"], [481, "index-23"]], "rfc": [[67, "index-0"], [99, "index-0"], [100, "index-0"], [100, "index-1"], [100, "index-2"], [100, "index-3"], [100, "index-4"], [100, "index-5"], [107, "index-0"], [107, "index-1"], [107, "index-2"], [123, "index-3"], [123, "index-4"], [140, "index-1"], [140, "index-10"], [140, "index-11"], [140, "index-12"], [140, "index-2"], [140, "index-3"], [140, "index-4"], [140, "index-5"], [140, "index-6"], [140, "index-7"], [140, "index-8"], [140, "index-9"], [143, "index-1"], [143, "index-2"], [143, "index-3"], [155, "index-10"], [155, "index-11"], [155, "index-12"], [155, "index-13"], [155, "index-14"], [155, "index-6"], [155, "index-7"], [155, "index-8"], [155, "index-9"], [172, "index-1"], [191, "index-0"], [191, "index-1"], [191, "index-2"], [191, "index-3"], [191, "index-4"], [191, "index-5"], [191, "index-6"], [191, "index-7"], [193, "index-0"], [193, "index-1"], [193, "index-10"], [193, "index-11"], [193, "index-2"], [193, "index-3"], [193, "index-4"], [193, "index-5"], [193, "index-6"], [193, "index-7"], [193, "index-8"], [193, "index-9"], [194, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [198, "index-1"], [199, "index-0"], [199, "index-1"], [199, "index-10"], [199, "index-11"], [199, "index-12"], [199, "index-13"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [199, "index-5"], [199, "index-6"], [199, "index-7"], [199, "index-8"], [199, "index-9"], [200, "index-0"], [200, "index-1"], [200, "index-10"], [200, "index-11"], [200, "index-12"], [200, "index-13"], [200, "index-14"], [200, "index-2"], [200, "index-3"], [200, "index-4"], [200, "index-5"], [200, "index-6"], [200, "index-7"], [200, "index-8"], [200, "index-9"], [202, "index-0"], [202, "index-1"], [202, "index-10"], [202, "index-2"], [202, "index-3"], [202, "index-4"], [202, "index-5"], [202, "index-6"], [202, "index-7"], [202, "index-8"], [202, "index-9"], [204, "index-0"], [204, "index-1"], [205, "index-0"], [205, "index-1"], [205, "index-2"], [205, "index-3"], [205, "index-4"], [205, "index-5"], [205, "index-6"], [205, "index-7"], [205, "index-8"], [205, "index-9"], [206, "index-0"], [206, "index-1"], [206, "index-10"], [206, "index-2"], [206, "index-3"], [206, "index-4"], [206, "index-5"], [206, "index-6"], [206, "index-7"], [206, "index-8"], [206, "index-9"], [220, "index-1"], [220, "index-2"], [220, "index-3"], [220, "index-4"], [220, "index-5"], [220, "index-6"], [227, "index-9"], [232, "index-1"], [232, "index-3"], [232, "index-5"], [234, "index-0"], [238, "index-1"], [238, "index-10"], [238, "index-11"], [238, "index-12"], [238, "index-13"], [238, "index-14"], [238, "index-15"], [238, "index-16"], [238, "index-17"], [238, "index-18"], [238, "index-19"], [238, "index-2"], [238, "index-20"], [238, "index-21"], [238, "index-22"], [238, "index-23"], [238, "index-24"], [238, "index-25"], [238, "index-26"], [238, "index-27"], [238, "index-28"], [238, "index-29"], [238, "index-3"], [238, "index-30"], [238, "index-31"], [238, "index-32"], [238, "index-33"], [238, "index-34"], [238, "index-35"], [238, "index-36"], [238, "index-37"], [238, "index-38"], [238, "index-39"], [238, "index-4"], [238, "index-40"], [238, "index-41"], [238, "index-42"], [238, "index-43"], [238, "index-44"], [238, "index-45"], [238, "index-46"], [238, "index-47"], [238, "index-48"], [238, "index-49"], [238, "index-5"], [238, "index-50"], [238, "index-51"], [238, "index-52"], [238, "index-53"], [238, "index-54"], [238, "index-55"], [238, "index-56"], [238, "index-57"], [238, "index-58"], [238, "index-59"], [238, "index-6"], [238, "index-60"], [238, "index-61"], [238, "index-62"], [238, "index-63"], [238, "index-64"], [238, "index-65"], [238, "index-66"], [238, "index-67"], [238, "index-68"], [238, "index-69"], [238, "index-7"], [238, "index-70"], [238, "index-71"], [238, "index-72"], [238, "index-73"], [238, "index-74"], [238, "index-75"], [238, "index-76"], [238, "index-8"], [238, "index-9"], [239, "index-2"], [239, "index-3"], [239, "index-4"], [239, "index-5"], [239, "index-6"], [239, "index-7"], [240, "index-0"], [240, "index-1"], [240, "index-10"], [240, "index-11"], [240, "index-12"], [240, "index-13"], [240, "index-14"], [240, "index-15"], [240, "index-16"], [240, "index-17"], [240, "index-18"], [240, "index-19"], [240, "index-2"], [240, "index-20"], [240, "index-21"], [240, "index-22"], [240, "index-23"], [240, "index-24"], [240, "index-25"], [240, "index-3"], [240, "index-4"], [240, "index-5"], [240, "index-6"], [240, "index-7"], [240, "index-8"], [240, "index-9"], [241, "index-0"], [241, "index-1"], [241, "index-2"], [241, "index-3"], [241, "index-4"], [241, "index-5"], [241, "index-6"], [241, "index-7"], [242, "index-1"], [242, "index-2"], [245, "index-1"], [245, "index-2"], [245, "index-3"], [245, "index-4"], [245, "index-5"], [245, "index-6"], [245, "index-7"], [245, "index-8"], [251, "index-0"], [253, "index-0"], [256, "index-0"], [256, "index-1"], [256, "index-10"], [256, "index-11"], [256, "index-12"], [256, "index-13"], [256, "index-2"], [256, "index-3"], [256, "index-4"], [256, "index-5"], [256, "index-6"], [256, "index-7"], [256, "index-8"], [256, "index-9"], [259, "index-0"], [259, "index-1"], [259, "index-2"], [259, "index-3"], [259, "index-4"], [263, "index-4"], [263, "index-5"], [266, "index-0"], [268, "index-0"], [269, "index-1"], [269, "index-2"], [285, "index-10"], [285, "index-2"], [285, "index-3"], [285, "index-4"], [285, "index-5"], [285, "index-6"], [285, "index-7"], [285, "index-8"], [285, "index-9"], [302, "index-1"], [302, "index-2"], [302, "index-3"], [302, "index-4"], [302, "index-5"], [302, "index-6"], [314, "index-1"], [314, "index-2"], [314, "index-3"], [314, "index-4"], [324, "index-1"], [332, "index-1"], [332, "index-10"], [332, "index-11"], [332, "index-12"], [332, "index-2"], [332, "index-3"], [332, "index-4"], [332, "index-5"], [332, "index-6"], [332, "index-7"], [332, "index-8"], [332, "index-9"], [334, "index-15"], [334, "index-3"], [338, "index-10"], [338, "index-11"], [338, "index-12"], [338, "index-13"], [338, "index-16"], [338, "index-17"], [338, "index-18"], [338, "index-19"], [338, "index-20"], [338, "index-21"], [338, "index-22"], [338, "index-5"], [338, "index-6"], [338, "index-7"], [338, "index-8"], [338, "index-9"], [343, "index-0"], [343, "index-1"], [356, "index-2"], [356, "index-3"], [363, "index-10"], [363, "index-19"], [363, "index-20"], [363, "index-21"], [363, "index-22"], [390, "index-0"], [391, "index-1"], [391, "index-10"], [391, "index-11"], [391, "index-12"], [391, "index-13"], [391, "index-2"], [391, "index-3"], [391, "index-4"], [391, "index-5"], [391, "index-6"], [391, "index-7"], [391, "index-8"], [391, "index-9"], [392, "index-0"], [392, "index-1"], [392, "index-2"], [392, "index-4"], [392, "index-5"], [392, "index-6"], [392, "index-7"], [392, "index-8"], [395, "index-0"], [395, "index-1"], [395, "index-10"], [395, "index-11"], [395, "index-2"], [395, "index-3"], [395, "index-4"], [404, "index-10"], [404, "index-5"], [405, "index-2"], [405, "index-3"], [405, "index-4"], [405, "index-5"], [416, "index-0"], [448, "index-1"], [461, "index-17"], [461, "index-18"], [461, "index-19"], [461, "index-20"], [461, "index-21"], [463, "index-18"], [464, "index-22"], [464, "index-23"], [465, "index-22"], [465, "index-23"], [466, "index-10"], [466, "index-11"], [466, "index-13"], [472, "index-11"], [472, "index-12"], [472, "index-13"], [472, "index-7"], [472, "index-8"], [473, "index-26"], [473, "index-27"], [475, "index-31"], [475, "index-32"], [475, "index-33"], [475, "index-34"], [475, "index-35"], [475, "index-36"], [475, "index-37"], [475, "index-38"], [475, "index-39"], [475, "index-40"], [475, "index-41"], [475, "index-42"], [475, "index-43"], [475, "index-44"], [475, "index-51"], [477, "index-34"], [477, "index-35"], [479, "index-22"]], "rfc 4122": [[67, "index-0"], [251, "index-0"], [253, "index-0"], [395, "index-0"], [395, "index-1"], [395, "index-10"], [395, "index-11"], [395, "index-2"], [395, "index-3"], [395, "index-4"], [464, "index-22"], [464, "index-23"]], "pyinit_modulename (c function)": [[70, "c.PyInit_modulename"]], "philbrick, geoff": [[72, "index-4"]], "pyarg_parsetuple()": [[72, "index-2"]], "pyarg_parsetupleandkeywords()": [[72, "index-3"]], "pyobject_callobject()": [[72, "index-1"]], "pyerr_fetch()": [[74, "index-1"]], "pyerr_restore()": [[74, "index-1"]], "deallocation": [[74, "index-0"]], "deallocation, object": [[74, "index-0"]], "finalization": [[74, "index-0"]], "finalization, of objects": [[74, "index-0"]], "object representation": [[74, "index-3"]], "pep 572": [[77, "index-0"], [424, "index-24"], [427, "index-21"], [427, "index-87"], [471, "index-20"], [478, "index-0"], [478, "index-24"]], "pep 5": [[79, "index-2"], [460, "index-6"]], "pep 6": [[79, "index-0"]], "pep 602": [[79, "index-1"], [479, "index-10"]], "pep 8": [[84, "index-0"], [84, "index-2"], [85, "index-0"], [222, "index-10"], [427, "index-79"], [438, "index-10"], [454, "index-0"], [467, "index-21"]], "argument": [[84, "index-1"], [86, "term-argument"], [424, "index-31"], [425, "index-33"], [427, "index-47"]], "difference from argument": [[84, "index-1"]], "difference from parameter": [[84, "index-1"]], "parameter": [[84, "index-1"], [86, "term-parameter"], [424, "index-27"], [424, "index-31"], [427, "index-48"]], "...": [[86, "term-..."], [165, "index-0"], [190, "index-0"], [190, "index-3"], [304, "index-0"], [318, "index-0"], [341, "index-66"], [349, "index-27"], [361, "index-0"], [425, "index-8"]], "2to3": [[86, "term-2to3"]], ">>>": [[86, "term-0"], [190, "index-0"], [349, "index-27"]], "bdfl": [[86, "term-BDFL"]], "cpython": [[86, "term-CPython"]], "eafp": [[86, "term-EAFP"]], "gil": [[86, "term-GIL"]], "idle": [[86, "term-IDLE"], [244, "index-0"]], "lbyl": [[86, "term-LBYL"]], "mro": [[86, "term-MRO"]], "pep": [[86, "term-PEP"]], "pep 1": [[86, "index-30"], [459, "index-0"], [459, "index-1"]], "pep 278": [[86, "index-37"], [462, "index-9"]], "pep 302": [[86, "index-14"], [86, "index-25"], [222, "index-14"], [247, "index-12"], [247, "index-13"], [247, "index-14"], [247, "index-16"], [247, "index-2"], [262, "index-1"], [299, "index-0"], [299, "index-2"], [299, "index-3"], [299, "index-5"], [299, "index-6"], [299, "index-7"], [321, "index-1"], [349, "index-25"], [349, "index-26"], [420, "index-2"], [429, "index-1"], [429, "index-19"], [462, "index-17"], [462, "index-18"], [462, "index-19"], [462, "index-6"], [464, "index-21"], [468, "index-2"], [473, "index-20"], [473, "index-21"], [473, "index-37"]], "pep 3116": [[86, "index-38"], [465, "index-14"], [468, "index-3"]], "pep 3155": [[86, "index-33"], [473, "index-15"]], "pep 343": [[86, "index-9"], [110, "index-4"], [166, "index-0"], [424, "index-17"], [425, "index-107"], [464, "index-10"], [464, "index-14"], [465, "index-3"]], "pep 362": [[86, "index-2"], [86, "index-28"], [252, "index-0"], [473, "index-17"]], "pep 411": [[86, "index-32"], [349, "index-13"], [349, "index-14"], [349, "index-31"], [349, "index-32"]], "pep 420": [[86, "index-15"], [86, "index-27"], [86, "index-31"], [247, "index-5"], [429, "index-14"], [429, "index-15"], [429, "index-2"], [429, "index-20"], [429, "index-21"], [429, "index-22"], [429, "index-6"], [473, "index-2"], [473, "index-3"]], "pep 443": [[86, "index-21"], [474, "index-11"], [474, "index-36"]], "pep 483": [[86, "index-22"], [383, "index-1"], [383, "index-3"], [475, "index-12"]], "pep 484": [[86, "index-0"], [86, "index-18"], [86, "index-23"], [86, "index-35"], [86, "index-36"], [86, "index-39"], [119, "index-2"], [119, "index-3"], [119, "index-5"], [119, "index-6"], [341, "index-57"], [383, "index-0"], [383, "index-2"], [383, "index-23"], [383, "index-26"], [383, "index-27"], [383, "index-41"], [383, "index-54"], [424, "index-37"], [425, "index-95"], [433, "index-17"], [438, "index-8"], [469, "index-19"], [469, "index-21"], [469, "index-23"], [470, "index-11"], [470, "index-12"], [471, "index-15"], [471, "index-16"], [471, "index-3"], [475, "index-10"], [475, "index-11"], [476, "index-5"], [477, "index-20"], [478, "index-10"], [478, "index-12"]], "pep 492": [[86, "index-11"], [86, "index-12"], [86, "index-3"], [86, "index-4"], [86, "index-6"], [86, "index-7"], [86, "index-8"], [158, "index-3"], [252, "index-1"], [252, "index-2"], [424, "index-52"], [425, "index-111"], [427, "index-30"], [475, "index-1"], [475, "index-2"], [475, "index-47"], [475, "index-52"], [476, "index-35"], [476, "index-9"]], "pep 498": [[86, "index-13"], [432, "index-26"], [476, "index-3"], [476, "index-4"]], "pep 519": [[86, "index-29"], [476, "index-16"]], "pep 525": [[86, "index-5"], [158, "index-2"], [252, "index-3"], [349, "index-12"], [349, "index-30"], [427, "index-29"], [476, "index-10"]], "pep 526": [[86, "index-1"], [86, "index-40"], [119, "index-4"], [119, "index-7"], [178, "index-1"], [178, "index-2"], [383, "index-34"], [383, "index-4"], [383, "index-48"], [383, "index-50"], [424, "index-38"], [433, "index-16"], [469, "index-27"], [476, "index-33"], [476, "index-6"], [477, "index-1"], [478, "index-11"]], "pep 585": [[86, "index-24"], [158, "index-0"], [341, "index-58"], [382, "index-5"], [383, "index-59"], [383, "index-6"], [383, "index-61"], [383, "index-62"], [383, "index-63"], [383, "index-64"], [383, "index-65"], [383, "index-66"], [383, "index-67"], [383, "index-68"], [383, "index-69"], [383, "index-70"], [383, "index-71"], [383, "index-72"], [383, "index-73"], [383, "index-74"], [383, "index-75"], [383, "index-76"], [383, "index-77"], [383, "index-78"], [383, "index-79"], [383, "index-80"], [383, "index-81"], [383, "index-82"], [383, "index-83"], [383, "index-84"], [383, "index-85"], [383, "index-86"], [383, "index-87"], [383, "index-88"], [383, "index-89"], [383, "index-90"], [383, "index-91"], [383, "index-92"], [383, "index-93"], [383, "index-95"], [383, "index-96"], [383, "index-97"], [383, "index-98"], [383, "index-99"], [479, "index-13"], [479, "index-2"]], "python 3000": [[86, "term-Python-3000"]], "pythonic": [[86, "term-Pythonic"]], "zen of python": [[86, "term-Zen-of-Python"]], "__future__": [[86, "term-__future__"], [110, "module-__future__"], [433, "index-40"]], "__slots__": [[86, "term-__slots__"]], "abstract base class": [[86, "term-abstract-base-class"]], "annotation": [[86, "term-annotation"], [341, "index-55"]], "asynchronous context manager": [[86, "term-asynchronous-context-manager"]], "asynchronous generator": [[86, "term-asynchronous-generator"], [425, "index-41"]], "asynchronous generator iterator": [[86, "term-asynchronous-generator-iterator"]], "asynchronous iterable": [[86, "term-asynchronous-iterable"]], "asynchronous iterator": [[86, "term-asynchronous-iterator"], [425, "index-41"]], "attribute": [[86, "term-attribute"], [425, "index-47"], [425, "index-48"], [425, "index-5"], [425, "index-51"], [425, "index-52"], [427, "index-39"], [433, "index-23"], [433, "index-4"], [433, "index-8"]], "awaitable": [[86, "term-awaitable"]], "binary file": [[86, "term-binary-file"]], "borrowed reference": [[86, "term-borrowed-reference"]], "bytecode": [[86, "term-bytecode"], [425, "index-57"]], "bytes-like object": [[86, "term-bytes-like-object"]], "callable": [[86, "term-callable"], [425, "index-33"], [427, "index-47"]], "callback": [[86, "term-callback"]], "class": [[86, "term-class"], [424, "index-42"], [425, "index-47"], [425, "index-48"], [425, "index-51"], [425, "index-73"], [425, "index-91"], [427, "index-54"], [433, "index-24"]], "class variable": [[86, "term-class-variable"]], "context manager": [[86, "term-context-manager"], [341, "index-54"], [425, "index-106"]], "context variable": [[86, "term-context-variable"]], "coroutine": [[86, "term-coroutine"], [425, "index-110"], [425, "index-40"], [427, "index-24"]], "coroutine function": [[86, "term-coroutine-function"]], "decorator": [[86, "term-decorator"]], "descriptor": [[86, "term-descriptor"]], "dictionary comprehension": [[86, "term-dictionary-comprehension"]], "dictionary view": [[86, "term-dictionary-view"]], "docstring": [[86, "term-docstring"], [424, "index-42"]], "duck-typing": [[86, "term-duck-typing"]], "expression": [[86, "term-expression"], [424, "index-35"], [427, "index-0"], [427, "index-22"], [427, "index-23"], [427, "index-82"], [427, "index-88"], [427, "index-90"], [427, "index-91"], [433, "index-1"], [433, "index-2"]], "extension module": [[86, "term-extension-module"]], "f-string": [[86, "term-f-string"], [432, "index-25"]], "file object": [[86, "term-file-object"], [222, "index-5"], [255, "index-0"]], "file-like object": [[86, "term-file-like-object"]], "filesystem encoding and error handler": [[86, "term-filesystem-encoding-and-error-handler"]], "finder": [[86, "term-finder"], [429, "index-10"], [429, "index-8"]], "floor division": [[86, "term-floor-division"]], "function annotation": [[86, "term-function-annotation"]], "garbage collection": [[86, "term-garbage-collection"], [425, "index-2"]], "generator": [[86, "index-19"], [86, "term-generator"], [425, "index-39"], [425, "index-59"], [427, "index-22"], [427, "index-23"], [427, "index-31"], [433, "index-26"]], "generator expression": [[86, "index-20"], [86, "term-generator-expression"], [427, "index-22"]], "generator iterator": [[86, "term-generator-iterator"]], "generic function": [[86, "term-generic-function"]], "generic type": [[86, "term-generic-type"]], "hash-based pyc": [[86, "term-hash-based-pyc"]], "hashable": [[86, "term-hashable"], [427, "index-20"]], "immutable": [[86, "term-immutable"], [341, "index-22"], [425, "index-17"], [427, "index-20"], [427, "index-7"]], "import path": [[86, "term-import-path"]], "importer": [[86, "term-importer"]], "importing": [[86, "term-importing"], [433, "index-34"]], "interactive": [[86, "term-interactive"]], "interpreted": [[86, "term-interpreted"]], "interpreter shutdown": [[86, "term-interpreter-shutdown"]], "iterable": [[86, "term-iterable"], [427, "index-93"]], "iterator": [[86, "term-iterator"], [341, "index-18"], [425, "index-39"], [433, "index-26"]], "key function": [[86, "term-key-function"]], "keyword argument": [[86, "term-keyword-argument"]], "lambda": [[86, "term-lambda"], [424, "index-35"], [427, "index-90"]], "list comprehension": [[86, "term-list-comprehension"]], "loader": [[86, "term-loader"], [429, "index-8"]], "locale encoding": [[86, "term-locale-encoding"]], "magic": [[86, "index-26"]], "magic method": [[86, "term-magic-method"]], "meta path finder": [[86, "term-meta-path-finder"]], "metaclass": [[86, "term-metaclass"], [425, "index-86"]], "method resolution order": [[86, "term-method-resolution-order"]], "module spec": [[86, "term-module-spec"], [429, "index-8"]], "mutable": [[86, "term-mutable"], [341, "index-23"], [425, "index-22"], [433, "index-4"], [433, "index-9"]], "named tuple": [[86, "term-named-tuple"]], "namespace": [[86, "term-namespace"], [425, "index-35"], [425, "index-45"], [426, "index-3"], [429, "index-5"]], "namespace package": [[86, "term-namespace-package"]], "nested scope": [[86, "term-nested-scope"]], "new-style class": [[86, "term-new-style-class"]], "package": [[86, "term-package"], [331, "index-4"], [429, "index-3"], [429, "index-4"], [429, "index-5"]], "path based finder": [[86, "term-path-based-finder"], [429, "index-16"]], "path entry": [[86, "term-path-entry"]], "path entry finder": [[86, "term-path-entry-finder"]], "path entry hook": [[86, "term-path-entry-hook"]], "path-like object": [[86, "term-path-like-object"]], "portion": [[86, "term-portion"], [429, "index-5"]], "positional argument": [[86, "term-positional-argument"]], "provisional api": [[86, "term-provisional-API"]], "provisional package": [[86, "term-provisional-package"]], "qualified name": [[86, "term-qualified-name"]], "reference count": [[86, "term-reference-count"]], "regular package": [[86, "term-regular-package"]], "set comprehension": [[86, "term-set-comprehension"]], "single dispatch": [[86, "term-single-dispatch"]], "slice": [[86, "term-slice"], [188, "index-1"], [341, "index-20"], [341, "index-24"], [425, "index-69"], [425, "index-99"], [427, "index-44"]], "special": [[86, "index-34"], [425, "index-5"]], "special method": [[86, "term-special-method"]], "statement": [[86, "term-statement"], [210, "index-0"], [210, "index-1"], [210, "index-4"], [222, "index-13"], [331, "index-2"], [341, "index-1"], [341, "index-24"], [341, "index-52"], [424, "index-0"], [424, "index-13"], [424, "index-15"], [424, "index-16"], [424, "index-18"], [424, "index-28"], [424, "index-3"], [424, "index-4"], [424, "index-4"], [424, "index-42"], [424, "index-48"], [424, "index-5"], [424, "index-50"], [424, "index-51"], [424, "index-6"], [424, "index-6"], [424, "index-7"], [424, "index-9"], [425, "index-106"], [425, "index-22"], [425, "index-44"], [425, "index-67"], [425, "index-74"], [433, "index-0"], [433, "index-1"], [433, "index-14"], [433, "index-15"], [433, "index-18"], [433, "index-20"], [433, "index-21"], [433, "index-22"], [433, "index-24"], [433, "index-26"], [433, "index-27"], [433, "index-30"], [433, "index-30"], [433, "index-33"], [433, "index-33"], [433, "index-34"], [433, "index-4"], [433, "index-40"], [433, "index-43"], [433, "index-45"], [433, "index-47"], [438, "index-0"]], "static type checker": [[86, "term-static-type-checker"]], "strong reference": [[86, "term-strong-reference"]], "text encoding": [[86, "term-text-encoding"]], "text file": [[86, "term-text-file"]], "triple-quoted string": [[86, "term-triple-quoted-string"], [432, "index-18"]], "type alias": [[86, "term-type-alias"]], "type hint": [[86, "term-type-hint"]], "universal newlines": [[86, "term-universal-newlines"], [172, "index-3"], [222, "index-7"], [247, "index-15"], [255, "index-4"], [255, "index-5"], [341, "index-34"], [341, "index-44"], [345, "index-1"], [462, "index-8"], [463, "index-7"], [464, "index-20"], [465, "index-13"]], "variable annotation": [[86, "term-variable-annotation"]], "virtual environment": [[86, "term-virtual-environment"]], "virtual machine": [[86, "term-virtual-machine"]], "pep 604": [[87, "index-0"], [341, "index-60"], [383, "index-11"], [469, "index-20"], [469, "index-5"]], "pep 289": [[94, "index-1"], [463, "index-15"], [463, "index-2"]], "pep 342": [[94, "index-0"], [94, "index-2"], [158, "index-1"], [427, "index-27"], [464, "index-11"], [464, "index-31"], [464, "index-9"]], "rfc 3339": [[99, "index-0"]], "__init__() (logging.logging.formatter method)": [[99, "logging.logging.Formatter.__init__"]], "rfc 3164": [[100, "index-5"]], "rfc 5424": [[100, "index-0"], [100, "index-2"], [100, "index-3"], [100, "index-4"], [266, "index-0"]], "rfc 5424#section-6": [[100, "index-1"]], "pep 263": [[106, "index-0"], [247, "index-1"], [375, "index-0"], [375, "index-1"], [462, "index-3"], [464, "index-19"]], "rfc 2616": [[107, "index-0"], [107, "index-1"], [107, "index-2"], [390, "index-0"], [392, "index-5"], [392, "index-6"], [392, "index-8"], [404, "index-10"], [404, "index-5"], [472, "index-7"]], "pep 617": [[109, "index-0"], [428, "index-0"], [469, "index-14"], [470, "index-32"], [471, "index-8"], [479, "index-14"], [479, "index-19"], [479, "index-7"]], "apply (2to3 fixer)": [[109, "to3fixer-apply"]], "asserts (2to3 fixer)": [[109, "to3fixer-asserts"]], "basestring (2to3 fixer)": [[109, "to3fixer-basestring"]], "buffer (2to3 fixer)": [[109, "to3fixer-buffer"]], "dict (2to3 fixer)": [[109, "to3fixer-dict"]], "except (2to3 fixer)": [[109, "to3fixer-except"]], "exec (2to3 fixer)": [[109, "to3fixer-exec"]], "execfile (2to3 fixer)": [[109, "to3fixer-execfile"]], "exitfunc (2to3 fixer)": [[109, "to3fixer-exitfunc"]], "filter (2to3 fixer)": [[109, "to3fixer-filter"]], "funcattrs (2to3 fixer)": [[109, "to3fixer-funcattrs"]], "future (2to3 fixer)": [[109, "to3fixer-future"]], "getcwdu (2to3 fixer)": [[109, "to3fixer-getcwdu"]], "has_key (2to3 fixer)": [[109, "to3fixer-has_key"]], "idioms (2to3 fixer)": [[109, "to3fixer-idioms"]], "import (2to3 fixer)": [[109, "to3fixer-import"]], "imports (2to3 fixer)": [[109, "to3fixer-imports"]], "imports2 (2to3 fixer)": [[109, "to3fixer-imports2"]], "input (2to3 fixer)": [[109, "to3fixer-input"]], "intern (2to3 fixer)": [[109, "to3fixer-intern"]], "isinstance (2to3 fixer)": [[109, "to3fixer-isinstance"]], "itertools (2to3 fixer)": [[109, "to3fixer-itertools"]], "itertools_imports (2to3 fixer)": [[109, "to3fixer-itertools_imports"]], "lib2to3": [[109, "module-lib2to3"]], "long (2to3 fixer)": [[109, "to3fixer-long"]], "map (2to3 fixer)": [[109, "to3fixer-map"]], "metaclass (2to3 fixer)": [[109, "to3fixer-metaclass"]], "methodattrs (2to3 fixer)": [[109, "to3fixer-methodattrs"]], "ne (2to3 fixer)": [[109, "to3fixer-ne"]], "next (2to3 fixer)": [[109, "to3fixer-next"]], "nonzero (2to3 fixer)": [[109, "to3fixer-nonzero"]], "numliterals (2to3 fixer)": [[109, "to3fixer-numliterals"]], "operator (2to3 fixer)": [[109, "to3fixer-operator"]], "paren (2to3 fixer)": [[109, "to3fixer-paren"]], "print (2to3 fixer)": [[109, "to3fixer-print"]], "raise (2to3 fixer)": [[109, "to3fixer-raise"]], "raw_input (2to3 fixer)": [[109, "to3fixer-raw_input"]], "reduce (2to3 fixer)": [[109, "to3fixer-reduce"]], "reload (2to3 fixer)": [[109, "to3fixer-reload"]], "renames (2to3 fixer)": [[109, "to3fixer-renames"]], "repr (2to3 fixer)": [[109, "to3fixer-repr"]], "set_literal (2to3 fixer)": [[109, "to3fixer-set_literal"]], "standarderror (2to3 fixer)": [[109, "to3fixer-standarderror"]], "sys_exc (2to3 fixer)": [[109, "to3fixer-sys_exc"]], "throw (2to3 fixer)": [[109, "to3fixer-throw"]], "tuple_params (2to3 fixer)": [[109, "to3fixer-tuple_params"]], "types (2to3 fixer)": [[109, "to3fixer-types"]], "unicode (2to3 fixer)": [[109, "to3fixer-unicode"]], "urllib (2to3 fixer)": [[109, "to3fixer-urllib"]], "ws_comma (2to3 fixer)": [[109, "to3fixer-ws_comma"]], "xrange (2to3 fixer)": [[109, "to3fixer-xrange"]], "xreadlines (2to3 fixer)": [[109, "to3fixer-xreadlines"]], "zip (2to3 fixer)": [[109, "to3fixer-zip"]], "pep 227": [[110, "index-0"], [460, "index-2"], [461, "index-16"]], "pep 236": [[110, "index-11"], [433, "index-42"], [460, "index-0"], [460, "index-1"], [460, "index-3"]], "pep 255": [[110, "index-1"], [427, "index-26"], [461, "index-8"], [461, "index-9"], [462, "index-1"], [462, "index-2"]], "pep 3105": [[110, "index-5"], [465, "index-10"], [467, "index-0"]], "pep 3112": [[110, "index-6"], [465, "index-12"]], "pep 328": [[110, "index-3"], [222, "index-15"], [247, "index-3"], [429, "index-24"], [463, "index-10"], [463, "index-17"], [464, "index-5"], [464, "index-6"], [467, "index-16"], [473, "index-36"]], "pep 479": [[110, "index-7"], [210, "index-6"], [210, "index-7"], [475, "index-17"], [475, "index-18"], [477, "index-37"]], "pep 563": [[110, "index-8"], [110, "index-9"], [383, "index-57"], [383, "index-60"], [424, "index-39"], [433, "index-41"], [470, "index-20"], [477, "index-2"]], "pep 649": [[110, "index-10"], [426, "index-11"]], "_feature (class in __future__)": [[110, "future__._Feature"]], "compiler_flag (__future__._feature attribute)": [[110, "future__._Feature.compiler_flag"]], "getmandatoryrelease() (__future__._feature method)": [[110, "future__._Feature.getMandatoryRelease"]], "getoptionalrelease() (__future__._feature method)": [[110, "future__._Feature.getOptionalRelease"]], "locktype (in module _thread)": [[112, "thread.LockType"]], "posix": [[112, "index-1"], [303, "module-posix"], [358, "index-0"]], "timeout_max (in module _thread)": [[112, "thread.TIMEOUT_MAX"]], "acquire() (_thread.lock method)": [[112, "thread.lock.acquire"]], "allocate_lock() (in module _thread)": [[112, "thread.allocate_lock"]], "binary semaphores": [[112, "index-0"]], "error": [[112, "thread.error"], [138, "audioop.error"], [143, "binascii.Error"], [164, "configparser.Error"], [168, "copy.Error"], [172, "csv.Error"], [174, "curses.error"], [181, "dbm.dumb.error"], [181, "dbm.error"], [181, "dbm.gnu.error"], [181, "dbm.ndbm.error"], [225, "getopt.error"], [263, "locale.Error"], [268, "mailbox.Error"], [284, "nis.error"], [290, "os.error"], [311, "xml.parsers.expat.error"], [316, "re.error"], [319, "resource.error"], [325, "select.error"], [329, "shutil.Error"], [334, "socket.error"], [337, "sqlite3.Error"], [344, "struct.error"], [346, "sunau.Error"], [394, "uu.Error"], [398, "wave.Error"], [400, "webbrowser.Error"], [405, "xdrlib.Error"], [421, "zlib.error"]], "exit() (in module _thread)": [[112, "thread.exit"]], "get_ident() (in module _thread)": [[112, "thread.get_ident"]], "get_native_id() (in module _thread)": [[112, "thread.get_native_id"]], "interrupt_main() (in module _thread)": [[112, "thread.interrupt_main"]], "light-weight processes": [[112, "index-0"]], "locked() (_thread.lock method)": [[112, "thread.lock.locked"]], "processes, light-weight": [[112, "index-0"]], "pthreads": [[112, "index-1"]], "release() (_thread.lock method)": [[112, "thread.lock.release"]], "semaphores, binary": [[112, "index-0"]], "stack_size() (in module _thread)": [[112, "thread.stack_size"]], "start_new_thread() (in module _thread)": [[112, "thread.start_new_thread"]], "threads": [[112, "index-1"]], "abc (class in abc)": [[113, "abc.ABC"]], "abcmeta (class in abc)": [[113, "abc.ABCMeta"]], "pep 3141": [[113, "index-1"], [286, "index-0"], [465, "index-19"]], "__subclasshook__() (abc.abcmeta method)": [[113, "abc.ABCMeta.__subclasshook__"]], "abc": [[113, "module-abc"]], "abstractclassmethod() (in module abc)": [[113, "abc.abstractclassmethod"]], "abstractmethod() (in module abc)": [[113, "abc.abstractmethod"]], "abstractproperty() (in module abc)": [[113, "abc.abstractproperty"]], "abstractstaticmethod() (in module abc)": [[113, "abc.abstractstaticmethod"]], "get_cache_token() (in module abc)": [[113, "abc.get_cache_token"]], "register() (abc.abcmeta method)": [[113, "abc.ABCMeta.register"]], "update_abstractmethods() (in module abc)": [[113, "abc.update_abstractmethods"]], "a-law": [[114, "index-2"], [138, "index-1"], [333, "index-0"]], "aiff": [[114, "index-0"], [150, "index-0"]], "aiff-c": [[114, "index-0"], [150, "index-0"]], "audio interchange file format": [[114, "index-0"], [150, "index-0"]], "g.722": [[114, "index-2"]], "pep 594#aifc": [[114, "index-1"]], "aifc": [[114, "module-aifc"]], "aifc() (aifc.aifc method)": [[114, "aifc.aifc.aifc"]], "aiff() (aifc.aifc method)": [[114, "aifc.aifc.aiff"]], "close() (aifc.aifc method)": [[114, "aifc.aifc.close"]], "getcompname() (aifc.aifc method)": [[114, "aifc.aifc.getcompname"]], "getcomptype() (aifc.aifc method)": [[114, "aifc.aifc.getcomptype"]], "getframerate() (aifc.aifc method)": [[114, "aifc.aifc.getframerate"]], "getmark() (aifc.aifc method)": [[114, "aifc.aifc.getmark"]], "getmarkers() (aifc.aifc method)": [[114, "aifc.aifc.getmarkers"]], "getnchannels() (aifc.aifc method)": [[114, "aifc.aifc.getnchannels"]], "getnframes() (aifc.aifc method)": [[114, "aifc.aifc.getnframes"]], "getparams() (aifc.aifc method)": [[114, "aifc.aifc.getparams"]], "getsampwidth() (aifc.aifc method)": [[114, "aifc.aifc.getsampwidth"]], "open() (in module aifc)": [[114, "aifc.open"]], "readframes() (aifc.aifc method)": [[114, "aifc.aifc.readframes"]], "rewind() (aifc.aifc method)": [[114, "aifc.aifc.rewind"]], "setcomptype() (aifc.aifc method)": [[114, "aifc.aifc.setcomptype"]], "setframerate() (aifc.aifc method)": [[114, "aifc.aifc.setframerate"]], "setmark() (aifc.aifc method)": [[114, "aifc.aifc.setmark"]], "setnchannels() (aifc.aifc method)": [[114, "aifc.aifc.setnchannels"]], "setnframes() (aifc.aifc method)": [[114, "aifc.aifc.setnframes"]], "setparams() (aifc.aifc method)": [[114, "aifc.aifc.setparams"]], "setpos() (aifc.aifc method)": [[114, "aifc.aifc.setpos"]], "setsampwidth() (aifc.aifc method)": [[114, "aifc.aifc.setsampwidth"]], "tell() (aifc.aifc method)": [[114, "aifc.aifc.tell"]], "u-law": [[114, "index-2"], [138, "index-1"], [333, "index-0"]], "writeframes() (aifc.aifc method)": [[114, "aifc.aifc.writeframes"]], "writeframesraw() (aifc.aifc method)": [[114, "aifc.aifc.writeframesraw"]], "* (asterisk)": [[117, "index-1"], [119, "index-1"], [217, "index-2"], [228, "index-1"], [316, "index-3"], [341, "index-13"], [341, "index-36"], [341, "index-46"], [424, "index-32"], [427, "index-49"], [427, "index-65"], [427, "index-93"], [433, "index-37"], [433, "index-6"], [438, "index-3"]], "+ (plus)": [[117, "index-2"], [190, "index-4"], [316, "index-4"], [341, "index-13"], [341, "index-37"], [341, "index-47"], [342, "index-4"], [427, "index-61"], [427, "index-69"]], "? (question mark)": [[117, "index-0"], [119, "index-0"], [152, "index-0"], [155, "index-1"], [217, "index-2"], [228, "index-1"], [316, "index-5"], [337, "index-6"], [344, "index-2"], [344, "index-3"]], "action (class in argparse)": [[117, "argparse.Action"]], "argumentdefaultshelpformatter (class in argparse)": [[117, "argparse.ArgumentDefaultsHelpFormatter"]], "argumenterror": [[117, "argparse.ArgumentError"], [173, "ctypes.ArgumentError"]], "argumentparser (class in argparse)": [[117, "argparse.ArgumentParser"]], "argumenttypeerror": [[117, "argparse.ArgumentTypeError"]], "filetype (class in argparse)": [[117, "argparse.FileType"]], "metavartypehelpformatter (class in argparse)": [[117, "argparse.MetavarTypeHelpFormatter"]], "namespace (class in argparse)": [[117, "argparse.Namespace"]], "rawdescriptionhelpformatter (class in argparse)": [[117, "argparse.RawDescriptionHelpFormatter"]], "rawtexthelpformatter (class in argparse)": [[117, "argparse.RawTextHelpFormatter"]], "add_argument() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.add_argument"]], "add_argument_group() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.add_argument_group"]], "add_mutually_exclusive_group() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.add_mutually_exclusive_group"]], "add_subparsers() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.add_subparsers"]], "argparse": [[117, "module-argparse"]], "convert_arg_line_to_args() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.convert_arg_line_to_args"]], "error() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.error"]], "exit() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.exit"]], "format_help() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.format_help"]], "format_usage() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.format_usage"]], "get_default() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.get_default"]], "in argparse module": [[117, "index-0"], [117, "index-1"], [117, "index-2"]], "parse_args() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.parse_args"]], "parse_intermixed_args() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.parse_intermixed_args"]], "parse_known_args() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.parse_known_args"]], "parse_known_intermixed_args() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.parse_known_intermixed_args"]], "print_help() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.print_help"]], "print_usage() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.print_usage"]], "set_defaults() (argparse.argumentparser method)": [[117, "argparse.ArgumentParser.set_defaults"]], "append() (array.array method)": [[118, "array.array.append"]], "array": [[118, "module-array"], [341, "index-40"], [425, "index-23"]], "array (class in array)": [[118, "array.array"]], "arrays": [[118, "index-0"]], "buffer_info() (array.array method)": [[118, "array.array.buffer_info"]], "byteswap() (array.array method)": [[118, "array.array.byteswap"]], "count() (array.array method)": [[118, "array.array.count"]], "extend() (array.array method)": [[118, "array.array.extend"]], "frombytes() (array.array method)": [[118, "array.array.frombytes"]], "fromfile() (array.array method)": [[118, "array.array.fromfile"]], "fromlist() (array.array method)": [[118, "array.array.fromlist"]], "fromunicode() (array.array method)": [[118, "array.array.fromunicode"]], "index() (array.array method)": [[118, "array.array.index"]], "insert() (array.array method)": [[118, "array.array.insert"]], "itemsize (array.array attribute)": [[118, "array.array.itemsize"]], "pop() (array.array method)": [[118, "array.array.pop"]], "remove() (array.array method)": [[118, "array.array.remove"]], "reverse() (array.array method)": [[118, "array.array.reverse"]], "tobytes() (array.array method)": [[118, "array.array.tobytes"]], "tofile() (array.array method)": [[118, "array.array.tofile"]], "tolist() (array.array method)": [[118, "array.array.tolist"]], "tounicode() (array.array method)": [[118, "array.array.tounicode"]], "typecode (array.array attribute)": [[118, "array.array.typecode"]], "typecodes (in module array)": [[118, "array.typecodes"]], "--help": [[119, "cmdoption-ast-h"], [147, "cmdoption-calendar-help"], [188, "cmdoption-dis-h"], [231, "cmdoption-gzip-h"], [259, "cmdoption-json.tool-h"], [337, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [364, "cmdoption-timeit-h"], [375, "cmdoption-tokenize-h"], [377, "cmdoption-trace-help"], [395, "cmdoption-uuid-h"], [418, "cmdoption-zipapp-h"], [452, "cmdoption-help"]], "--include-attributes": [[119, "cmdoption-ast-a"]], "--indent": [[119, "cmdoption-ast-indent"], [259, "cmdoption-json.tool-indent"]], "--mode": [[119, "cmdoption-ast-mode"]], "--no-type-comments": [[119, "cmdoption-ast-no-type-comments"]], "-a": [[119, "cmdoption-ast-a"], [297, "cmdoption-pickletools-a"]], "-h": [[119, "cmdoption-ast-h"], [147, "cmdoption-calendar-help"], [188, "cmdoption-dis-h"], [231, "cmdoption-gzip-h"], [259, "cmdoption-json.tool-h"], [337, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [364, "cmdoption-timeit-h"], [375, "cmdoption-tokenize-h"], [395, "cmdoption-uuid-h"], [418, "cmdoption-zipapp-h"], [452, "cmdoption-h"]], "-i": [[119, "cmdoption-ast-i"], [160, "cmdoption-compileall-i"], [452, "cmdoption-I"], [452, "cmdoption-i"]], "-m": [[119, "cmdoption-ast-m"], [147, "cmdoption-calendar-months"], [297, "cmdoption-pickletools-m"], [377, "cmdoption-trace-m"], [418, "cmdoption-zipapp-m"], [452, "cmdoption-m"]], "ast (class in ast)": [[119, "ast.AST"]], "add (class in ast)": [[119, "ast.Add"]], "and (class in ast)": [[119, "ast.And"]], "annassign (class in ast)": [[119, "ast.AnnAssign"]], "assert (class in ast)": [[119, "ast.Assert"]], "assign (class in ast)": [[119, "ast.Assign"]], "asyncfor (class in ast)": [[119, "ast.AsyncFor"]], "asyncfunctiondef (class in ast)": [[119, "ast.AsyncFunctionDef"]], "asyncwith (class in ast)": [[119, "ast.AsyncWith"]], "attribute (class in ast)": [[119, "ast.Attribute"]], "augassign (class in ast)": [[119, "ast.AugAssign"]], "await (class in ast)": [[119, "ast.Await"]], "binop (class in ast)": [[119, "ast.BinOp"]], "bitand (class in ast)": [[119, "ast.BitAnd"]], "bitor (class in ast)": [[119, "ast.BitOr"]], "bitxor (class in ast)": [[119, "ast.BitXor"]], "boolop (class in ast)": [[119, "ast.BoolOp"]], "break (class in ast)": [[119, "ast.Break"]], "call (class in ast)": [[119, "ast.Call"]], "classdef (class in ast)": [[119, "ast.ClassDef"]], "compare (class in ast)": [[119, "ast.Compare"]], "constant (class in ast)": [[119, "ast.Constant"]], "continue (class in ast)": [[119, "ast.Continue"]], "del (class in ast)": [[119, "ast.Del"]], "delete (class in ast)": [[119, "ast.Delete"]], "dict (class in ast)": [[119, "ast.Dict"]], "dictcomp (class in ast)": [[119, "ast.DictComp"]], "div (class in ast)": [[119, "ast.Div"]], "eq (class in ast)": [[119, "ast.Eq"]], "excepthandler (class in ast)": [[119, "ast.ExceptHandler"]], "expr (class in ast)": [[119, "ast.Expr"]], "expression (class in ast)": [[119, "ast.Expression"]], "floordiv (class in ast)": [[119, "ast.FloorDiv"]], "for (class in ast)": [[119, "ast.For"]], "formattedvalue (class in ast)": [[119, "ast.FormattedValue"]], "functiondef (class in ast)": [[119, "ast.FunctionDef"]], "functiontype (class in ast)": [[119, "ast.FunctionType"]], "generatorexp (class in ast)": [[119, "ast.GeneratorExp"]], "global (class in ast)": [[119, "ast.Global"]], "gt (class in ast)": [[119, "ast.Gt"]], "gte (class in ast)": [[119, "ast.GtE"]], "if (class in ast)": [[119, "ast.If"]], "ifexp (class in ast)": [[119, "ast.IfExp"]], "import (class in ast)": [[119, "ast.Import"]], "importfrom (class in ast)": [[119, "ast.ImportFrom"]], "in (class in ast)": [[119, "ast.In"]], "interactive (class in ast)": [[119, "ast.Interactive"]], "invert (class in ast)": [[119, "ast.Invert"]], "is (class in ast)": [[119, "ast.Is"]], "isnot (class in ast)": [[119, "ast.IsNot"]], "joinedstr (class in ast)": [[119, "ast.JoinedStr"]], "lshift (class in ast)": [[119, "ast.LShift"]], "lambda (class in ast)": [[119, "ast.Lambda"]], "list (class in ast)": [[119, "ast.List"]], "listcomp (class in ast)": [[119, "ast.ListComp"]], "load (class in ast)": [[119, "ast.Load"]], "lt (class in ast)": [[119, "ast.Lt"]], "lte (class in ast)": [[119, "ast.LtE"]], "matmult (class in ast)": [[119, "ast.MatMult"]], "match (class in ast)": [[119, "ast.Match"]], "matchas (class in ast)": [[119, "ast.MatchAs"]], "matchclass (class in ast)": [[119, "ast.MatchClass"]], "matchmapping (class in ast)": [[119, "ast.MatchMapping"]], "matchor (class in ast)": [[119, "ast.MatchOr"]], "matchsequence (class in ast)": [[119, "ast.MatchSequence"]], "matchsingleton (class in ast)": [[119, "ast.MatchSingleton"]], "matchstar (class in ast)": [[119, "ast.MatchStar"]], "matchvalue (class in ast)": [[119, "ast.MatchValue"]], "mod (class in ast)": [[119, "ast.Mod"]], "module (class in ast)": [[119, "ast.Module"]], "mult (class in ast)": [[119, "ast.Mult"]], "name (class in ast)": [[119, "ast.Name"]], "namedexpr (class in ast)": [[119, "ast.NamedExpr"]], "nodetransformer (class in ast)": [[119, "ast.NodeTransformer"]], "nodevisitor (class in ast)": [[119, "ast.NodeVisitor"]], "nonlocal (class in ast)": [[119, "ast.Nonlocal"]], "not (class in ast)": [[119, "ast.Not"]], "noteq (class in ast)": [[119, "ast.NotEq"]], "notin (class in ast)": [[119, "ast.NotIn"]], "or (class in ast)": [[119, "ast.Or"]], "paramspec (class in ast)": [[119, "ast.ParamSpec"]], "pass (class in ast)": [[119, "ast.Pass"]], "pow (class in ast)": [[119, "ast.Pow"]], "pycf_allow_top_level_await (in module ast)": [[119, "ast.PyCF_ALLOW_TOP_LEVEL_AWAIT"]], "pycf_only_ast (in module ast)": [[119, "ast.PyCF_ONLY_AST"]], "pycf_type_comments (in module ast)": [[119, "ast.PyCF_TYPE_COMMENTS"]], "rshift (class in ast)": [[119, "ast.RShift"]], "raise (class in ast)": [[119, "ast.Raise"]], "return (class in ast)": [[119, "ast.Return"]], "set (class in ast)": [[119, "ast.Set"]], "setcomp (class in ast)": [[119, "ast.SetComp"]], "slice (class in ast)": [[119, "ast.Slice"]], "starred (class in ast)": [[119, "ast.Starred"]], "store (class in ast)": [[119, "ast.Store"]], "sub (class in ast)": [[119, "ast.Sub"]], "subscript (class in ast)": [[119, "ast.Subscript"]], "try (class in ast)": [[119, "ast.Try"]], "trystar (class in ast)": [[119, "ast.TryStar"]], "tuple (class in ast)": [[119, "ast.Tuple"]], "typealias (class in ast)": [[119, "ast.TypeAlias"]], "typevar (class in ast)": [[119, "ast.TypeVar"]], "typevartuple (class in ast)": [[119, "ast.TypeVarTuple"]], "uadd (class in ast)": [[119, "ast.UAdd"]], "usub (class in ast)": [[119, "ast.USub"]], "unaryop (class in ast)": [[119, "ast.UnaryOp"]], "while (class in ast)": [[119, "ast.While"]], "with (class in ast)": [[119, "ast.With"]], "yield (class in ast)": [[119, "ast.Yield"]], "yieldfrom (class in ast)": [[119, "ast.YieldFrom"]], "_fields (ast.ast attribute)": [[119, "ast.AST._fields"]], "alias (class in ast)": [[119, "ast.alias"]], "arg (class in ast)": [[119, "ast.arg"]], "arguments (class in ast)": [[119, "ast.arguments"]], "ast": [[119, "module-ast"]], "ast command line option": [[119, "cmdoption-ast-a"], [119, "cmdoption-ast-h"], [119, "cmdoption-ast-i"], [119, "cmdoption-ast-indent"], [119, "cmdoption-ast-m"], [119, "cmdoption-ast-mode"], [119, "cmdoption-ast-no-type-comments"]], "col_offset (ast.ast attribute)": [[119, "ast.AST.col_offset"]], "comprehension (class in ast)": [[119, "ast.comprehension"]], "copy_location() (in module ast)": [[119, "ast.copy_location"]], "dump() (in module ast)": [[119, "ast.dump"]], "end_col_offset (ast.ast attribute)": [[119, "ast.AST.end_col_offset"]], "end_lineno (ast.ast attribute)": [[119, "ast.AST.end_lineno"]], "fix_missing_locations() (in module ast)": [[119, "ast.fix_missing_locations"]], "generic_visit() (ast.nodevisitor method)": [[119, "ast.NodeVisitor.generic_visit"]], "get_docstring() (in module ast)": [[119, "ast.get_docstring"]], "get_source_segment() (in module ast)": [[119, "ast.get_source_segment"]], "in ast grammar": [[119, "index-0"], [119, "index-1"]], "increment_lineno() (in module ast)": [[119, "ast.increment_lineno"]], "iter_child_nodes() (in module ast)": [[119, "ast.iter_child_nodes"]], "iter_fields() (in module ast)": [[119, "ast.iter_fields"]], "keyword (class in ast)": [[119, "ast.keyword"]], "lineno (ast.ast attribute)": [[119, "ast.AST.lineno"]], "literal_eval() (in module ast)": [[119, "ast.literal_eval"]], "match_case (class in ast)": [[119, "ast.match_case"]], "parse() (in module ast)": [[119, "ast.parse"]], "type_comment (ast.assign attribute)": [[119, "ast.Assign.type_comment"]], "type_comment (ast.for attribute)": [[119, "ast.For.type_comment"]], "type_comment (ast.functiondef attribute)": [[119, "ast.FunctionDef.type_comment"]], "type_comment (ast.with attribute)": [[119, "ast.With.type_comment"]], "type_comment (ast.arg attribute)": [[119, "ast.arg.type_comment"]], "unparse() (in module ast)": [[119, "ast.unparse"]], "visit() (ast.nodevisitor method)": [[119, "ast.NodeVisitor.visit"]], "visit_constant() (ast.nodevisitor method)": [[119, "ast.NodeVisitor.visit_Constant"]], "walk() (in module ast)": [[119, "ast.walk"]], "withitem (class in ast)": [[119, "ast.withitem"]], "asyncio": [[120, "module-asyncio"]], "pythonasynciodebug": [[122, "index-0"], [123, "index-5"], [185, "index-5"], [452, "envvar-PYTHONASYNCIODEBUG"]], "abstracteventloop (class in asyncio)": [[123, "asyncio.AbstractEventLoop"]], "handle (class in asyncio)": [[123, "asyncio.Handle"]], "pep 567": [[123, "index-0"], [123, "index-1"], [123, "index-2"], [126, "index-0"], [167, "index-0"], [477, "index-28"], [477, "index-30"]], "proactoreventloop (class in asyncio)": [[123, "asyncio.ProactorEventLoop"]], "rfc 8305": [[123, "index-3"], [123, "index-4"]], "selectoreventloop (class in asyncio)": [[123, "asyncio.SelectorEventLoop"]], "server (class in asyncio)": [[123, "asyncio.Server"]], "timerhandle (class in asyncio)": [[123, "asyncio.TimerHandle"]], "add_reader() (asyncio.loop method)": [[123, "asyncio.loop.add_reader"]], "add_signal_handler() (asyncio.loop method)": [[123, "asyncio.loop.add_signal_handler"]], "add_writer() (asyncio.loop method)": [[123, "asyncio.loop.add_writer"]], "call_at() (asyncio.loop method)": [[123, "asyncio.loop.call_at"]], "call_exception_handler() (asyncio.loop method)": [[123, "asyncio.loop.call_exception_handler"]], "call_later() (asyncio.loop method)": [[123, "asyncio.loop.call_later"]], "call_soon() (asyncio.loop method)": [[123, "asyncio.loop.call_soon"]], "call_soon_threadsafe() (asyncio.loop method)": [[123, "asyncio.loop.call_soon_threadsafe"]], "cancel() (asyncio.handle method)": [[123, "asyncio.Handle.cancel"]], "cancelled() (asyncio.handle method)": [[123, "asyncio.Handle.cancelled"]], "close() (asyncio.server method)": [[123, "asyncio.Server.close"]], "close() (asyncio.loop method)": [[123, "asyncio.loop.close"]], "connect_accepted_socket() (asyncio.loop method)": [[123, "asyncio.loop.connect_accepted_socket"]], "connect_read_pipe() (asyncio.loop method)": [[123, "asyncio.loop.connect_read_pipe"]], "connect_write_pipe() (asyncio.loop method)": [[123, "asyncio.loop.connect_write_pipe"]], "create_connection() (asyncio.loop method)": [[123, "asyncio.loop.create_connection"]], "create_datagram_endpoint() (asyncio.loop method)": [[123, "asyncio.loop.create_datagram_endpoint"]], "create_future() (asyncio.loop method)": [[123, "asyncio.loop.create_future"]], "create_server() (asyncio.loop method)": [[123, "asyncio.loop.create_server"]], "create_task() (asyncio.loop method)": [[123, "asyncio.loop.create_task"]], "create_unix_connection() (asyncio.loop method)": [[123, "asyncio.loop.create_unix_connection"]], "create_unix_server() (asyncio.loop method)": [[123, "asyncio.loop.create_unix_server"]], "default_exception_handler() (asyncio.loop method)": [[123, "asyncio.loop.default_exception_handler"]], "get_context() (asyncio.handle method)": [[123, "asyncio.Handle.get_context"]], "get_debug() (asyncio.loop method)": [[123, "asyncio.loop.get_debug"]], "get_event_loop() (in module asyncio)": [[123, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[123, "asyncio.loop.get_exception_handler"]], "get_loop() (asyncio.server method)": [[123, "asyncio.Server.get_loop"]], "get_running_loop() (in module asyncio)": [[123, "asyncio.get_running_loop"]], "get_task_factory() (asyncio.loop method)": [[123, "asyncio.loop.get_task_factory"]], "getaddrinfo() (asyncio.loop method)": [[123, "asyncio.loop.getaddrinfo"]], "getnameinfo() (asyncio.loop method)": [[123, "asyncio.loop.getnameinfo"]], "is_closed() (asyncio.loop method)": [[123, "asyncio.loop.is_closed"]], "is_running() (asyncio.loop method)": [[123, "asyncio.loop.is_running"]], "is_serving() (asyncio.server method)": [[123, "asyncio.Server.is_serving"]], "new_event_loop() (in module asyncio)": [[123, "asyncio.new_event_loop"]], "remove_reader() (asyncio.loop method)": [[123, "asyncio.loop.remove_reader"]], "remove_signal_handler() (asyncio.loop method)": [[123, "asyncio.loop.remove_signal_handler"]], "remove_writer() (asyncio.loop method)": [[123, "asyncio.loop.remove_writer"]], "run_forever() (asyncio.loop method)": [[123, "asyncio.loop.run_forever"]], "run_in_executor() (asyncio.loop method)": [[123, "asyncio.loop.run_in_executor"]], "run_until_complete() (asyncio.loop method)": [[123, "asyncio.loop.run_until_complete"]], "sendfile() (asyncio.loop method)": [[123, "asyncio.loop.sendfile"]], "serve_forever() (asyncio.server method)": [[123, "asyncio.Server.serve_forever"]], "set_debug() (asyncio.loop method)": [[123, "asyncio.loop.set_debug"]], "set_default_executor() (asyncio.loop method)": [[123, "asyncio.loop.set_default_executor"]], "set_event_loop() (in module asyncio)": [[123, "asyncio.set_event_loop"]], "set_exception_handler() (asyncio.loop method)": [[123, "asyncio.loop.set_exception_handler"]], "set_task_factory() (asyncio.loop method)": [[123, "asyncio.loop.set_task_factory"]], "shutdown_asyncgens() (asyncio.loop method)": [[123, "asyncio.loop.shutdown_asyncgens"]], "shutdown_default_executor() (asyncio.loop method)": [[123, "asyncio.loop.shutdown_default_executor"]], "slow_callback_duration (asyncio.loop attribute)": [[123, "asyncio.loop.slow_callback_duration"]], "sock_accept() (asyncio.loop method)": [[123, "asyncio.loop.sock_accept"]], "sock_connect() (asyncio.loop method)": [[123, "asyncio.loop.sock_connect"]], "sock_recv() (asyncio.loop method)": [[123, "asyncio.loop.sock_recv"]], "sock_recv_into() (asyncio.loop method)": [[123, "asyncio.loop.sock_recv_into"]], "sock_recvfrom() (asyncio.loop method)": [[123, "asyncio.loop.sock_recvfrom"]], "sock_recvfrom_into() (asyncio.loop method)": [[123, "asyncio.loop.sock_recvfrom_into"]], "sock_sendall() (asyncio.loop method)": [[123, "asyncio.loop.sock_sendall"]], "sock_sendfile() (asyncio.loop method)": [[123, "asyncio.loop.sock_sendfile"]], "sock_sendto() (asyncio.loop method)": [[123, "asyncio.loop.sock_sendto"]], "sockets (asyncio.server attribute)": [[123, "asyncio.Server.sockets"]], "start_serving() (asyncio.server method)": [[123, "asyncio.Server.start_serving"]], "start_tls() (asyncio.loop method)": [[123, "asyncio.loop.start_tls"]], "stop() (asyncio.loop method)": [[123, "asyncio.loop.stop"]], "subprocess_exec() (asyncio.loop method)": [[123, "asyncio.loop.subprocess_exec"]], "subprocess_shell() (asyncio.loop method)": [[123, "asyncio.loop.subprocess_shell"]], "time() (asyncio.loop method)": [[123, "asyncio.loop.time"]], "wait_closed() (asyncio.server method)": [[123, "asyncio.Server.wait_closed"]], "when() (asyncio.timerhandle method)": [[123, "asyncio.TimerHandle.when"]], "cancellederror": [[124, "asyncio.CancelledError"], [163, "concurrent.futures.CancelledError"]], "incompletereaderror": [[124, "asyncio.IncompleteReadError"]], "invalidstateerror": [[124, "asyncio.InvalidStateError"], [163, "concurrent.futures.InvalidStateError"]], "limitoverrunerror": [[124, "asyncio.LimitOverrunError"]], "sendfilenotavailableerror": [[124, "asyncio.SendfileNotAvailableError"]], "timeouterror": [[124, "asyncio.TimeoutError"], [163, "concurrent.futures.TimeoutError"], [210, "TimeoutError"], [280, "multiprocessing.TimeoutError"]], "consumed (asyncio.limitoverrunerror attribute)": [[124, "asyncio.LimitOverrunError.consumed"]], "expected (asyncio.incompletereaderror attribute)": [[124, "asyncio.IncompleteReadError.expected"]], "partial (asyncio.incompletereaderror attribute)": [[124, "asyncio.IncompleteReadError.partial"]], "__init__() (asyncio.future method)": [[125, "asyncio.Future.__init__"]], "__init__() (asyncio.task method)": [[125, "asyncio.Task.__init__"]], "_enter_task() (in module asyncio)": [[125, "asyncio._enter_task"]], "_leave_task() (in module asyncio)": [[125, "asyncio._leave_task"]], "_register_task() (in module asyncio)": [[125, "asyncio._register_task"]], "_unregister_task() (in module asyncio)": [[125, "asyncio._unregister_task"]], "future (class in asyncio)": [[126, "asyncio.Future"]], "add_done_callback() (asyncio.future method)": [[126, "asyncio.Future.add_done_callback"]], "cancel() (asyncio.future method)": [[126, "asyncio.Future.cancel"]], "cancelled() (asyncio.future method)": [[126, "asyncio.Future.cancelled"]], "done() (asyncio.future method)": [[126, "asyncio.Future.done"]], "ensure_future() (in module asyncio)": [[126, "asyncio.ensure_future"]], "exception() (asyncio.future method)": [[126, "asyncio.Future.exception"]], "get_loop() (asyncio.future method)": [[126, "asyncio.Future.get_loop"]], "isfuture() (in module asyncio)": [[126, "asyncio.isfuture"]], "remove_done_callback() (asyncio.future method)": [[126, "asyncio.Future.remove_done_callback"]], "result() (asyncio.future method)": [[126, "asyncio.Future.result"]], "set_exception() (asyncio.future method)": [[126, "asyncio.Future.set_exception"]], "set_result() (asyncio.future method)": [[126, "asyncio.Future.set_result"]], "wrap_future() (in module asyncio)": [[126, "asyncio.wrap_future"]], "abstractchildwatcher (class in asyncio)": [[129, "asyncio.AbstractChildWatcher"]], "abstracteventlooppolicy (class in asyncio)": [[129, "asyncio.AbstractEventLoopPolicy"]], "defaulteventlooppolicy (class in asyncio)": [[129, "asyncio.DefaultEventLoopPolicy"]], "fastchildwatcher (class in asyncio)": [[129, "asyncio.FastChildWatcher"]], "multiloopchildwatcher (class in asyncio)": [[129, "asyncio.MultiLoopChildWatcher"]], "pidfdchildwatcher (class in asyncio)": [[129, "asyncio.PidfdChildWatcher"]], "safechildwatcher (class in asyncio)": [[129, "asyncio.SafeChildWatcher"]], "threadedchildwatcher (class in asyncio)": [[129, "asyncio.ThreadedChildWatcher"]], "windowsproactoreventlooppolicy (class in asyncio)": [[129, "asyncio.WindowsProactorEventLoopPolicy"]], "windowsselectoreventlooppolicy (class in asyncio)": [[129, "asyncio.WindowsSelectorEventLoopPolicy"]], "add_child_handler() (asyncio.abstractchildwatcher method)": [[129, "asyncio.AbstractChildWatcher.add_child_handler"]], "attach_loop() (asyncio.abstractchildwatcher method)": [[129, "asyncio.AbstractChildWatcher.attach_loop"]], "close() (asyncio.abstractchildwatcher method)": [[129, "asyncio.AbstractChildWatcher.close"]], "get_child_watcher() (asyncio.abstracteventlooppolicy method)": [[129, "asyncio.AbstractEventLoopPolicy.get_child_watcher"]], "get_child_watcher() (in module asyncio)": [[129, "asyncio.get_child_watcher"]], "get_event_loop() (asyncio.abstracteventlooppolicy method)": [[129, "asyncio.AbstractEventLoopPolicy.get_event_loop"]], "get_event_loop_policy() (in module asyncio)": [[129, "asyncio.get_event_loop_policy"]], "is_active() (asyncio.abstractchildwatcher method)": [[129, "asyncio.AbstractChildWatcher.is_active"]], "new_event_loop() (asyncio.abstracteventlooppolicy method)": [[129, "asyncio.AbstractEventLoopPolicy.new_event_loop"]], "remove_child_handler() (asyncio.abstractchildwatcher method)": [[129, "asyncio.AbstractChildWatcher.remove_child_handler"]], "set_child_watcher() (asyncio.abstracteventlooppolicy method)": [[129, "asyncio.AbstractEventLoopPolicy.set_child_watcher"]], "set_child_watcher() (in module asyncio)": [[129, "asyncio.set_child_watcher"]], "set_event_loop() (asyncio.abstracteventlooppolicy method)": [[129, "asyncio.AbstractEventLoopPolicy.set_event_loop"]], "set_event_loop_policy() (in module asyncio)": [[129, "asyncio.set_event_loop_policy"]], "baseprotocol (class in asyncio)": [[130, "asyncio.BaseProtocol"]], "basetransport (class in asyncio)": [[130, "asyncio.BaseTransport"]], "bufferedprotocol (class in asyncio)": [[130, "asyncio.BufferedProtocol"]], "datagramprotocol (class in asyncio)": [[130, "asyncio.DatagramProtocol"]], "datagramtransport (class in asyncio)": [[130, "asyncio.DatagramTransport"]], "protocol (class in asyncio)": [[130, "asyncio.Protocol"]], "readtransport (class in asyncio)": [[130, "asyncio.ReadTransport"]], "subprocessprotocol (class in asyncio)": [[130, "asyncio.SubprocessProtocol"]], "subprocesstransport (class in asyncio)": [[130, "asyncio.SubprocessTransport"]], "transport (class in asyncio)": [[130, "asyncio.Transport"]], "writetransport (class in asyncio)": [[130, "asyncio.WriteTransport"]], "abort() (asyncio.datagramtransport method)": [[130, "asyncio.DatagramTransport.abort"]], "abort() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.abort"]], "buffer_updated() (asyncio.bufferedprotocol method)": [[130, "asyncio.BufferedProtocol.buffer_updated"]], "can_write_eof() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.can_write_eof"]], "close() (asyncio.basetransport method)": [[130, "asyncio.BaseTransport.close"]], "close() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.close"]], "connection_lost() (asyncio.baseprotocol method)": [[130, "asyncio.BaseProtocol.connection_lost"]], "connection_made() (asyncio.baseprotocol method)": [[130, "asyncio.BaseProtocol.connection_made"]], "data_received() (asyncio.protocol method)": [[130, "asyncio.Protocol.data_received"]], "datagram_received() (asyncio.datagramprotocol method)": [[130, "asyncio.DatagramProtocol.datagram_received"]], "eof_received() (asyncio.bufferedprotocol method)": [[130, "asyncio.BufferedProtocol.eof_received"]], "eof_received() (asyncio.protocol method)": [[130, "asyncio.Protocol.eof_received"]], "error_received() (asyncio.datagramprotocol method)": [[130, "asyncio.DatagramProtocol.error_received"]], "get_buffer() (asyncio.bufferedprotocol method)": [[130, "asyncio.BufferedProtocol.get_buffer"]], "get_extra_info() (asyncio.basetransport method)": [[130, "asyncio.BaseTransport.get_extra_info"]], "get_pid() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.get_pid"]], "get_pipe_transport() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.get_pipe_transport"]], "get_protocol() (asyncio.basetransport method)": [[130, "asyncio.BaseTransport.get_protocol"]], "get_returncode() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.get_returncode"]], "get_write_buffer_limits() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.get_write_buffer_limits"]], "get_write_buffer_size() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.get_write_buffer_size"]], "is_closing() (asyncio.basetransport method)": [[130, "asyncio.BaseTransport.is_closing"]], "is_reading() (asyncio.readtransport method)": [[130, "asyncio.ReadTransport.is_reading"]], "kill() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.kill"]], "pause_reading() (asyncio.readtransport method)": [[130, "asyncio.ReadTransport.pause_reading"]], "pause_writing() (asyncio.baseprotocol method)": [[130, "asyncio.BaseProtocol.pause_writing"]], "pipe_connection_lost() (asyncio.subprocessprotocol method)": [[130, "asyncio.SubprocessProtocol.pipe_connection_lost"]], "pipe_data_received() (asyncio.subprocessprotocol method)": [[130, "asyncio.SubprocessProtocol.pipe_data_received"]], "process_exited() (asyncio.subprocessprotocol method)": [[130, "asyncio.SubprocessProtocol.process_exited"]], "resume_reading() (asyncio.readtransport method)": [[130, "asyncio.ReadTransport.resume_reading"]], "resume_writing() (asyncio.baseprotocol method)": [[130, "asyncio.BaseProtocol.resume_writing"]], "send_signal() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.send_signal"]], "sendto() (asyncio.datagramtransport method)": [[130, "asyncio.DatagramTransport.sendto"]], "set_protocol() (asyncio.basetransport method)": [[130, "asyncio.BaseTransport.set_protocol"]], "set_write_buffer_limits() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.set_write_buffer_limits"]], "terminate() (asyncio.subprocesstransport method)": [[130, "asyncio.SubprocessTransport.terminate"]], "write() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.write"]], "write_eof() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.write_eof"]], "writelines() (asyncio.writetransport method)": [[130, "asyncio.WriteTransport.writelines"]], "lifoqueue (class in asyncio)": [[131, "asyncio.LifoQueue"]], "priorityqueue (class in asyncio)": [[131, "asyncio.PriorityQueue"]], "queue (class in asyncio)": [[131, "asyncio.Queue"]], "queueempty": [[131, "asyncio.QueueEmpty"]], "queuefull": [[131, "asyncio.QueueFull"]], "empty() (asyncio.queue method)": [[131, "asyncio.Queue.empty"]], "full() (asyncio.queue method)": [[131, "asyncio.Queue.full"]], "get() (asyncio.queue method)": [[131, "asyncio.Queue.get"]], "get_nowait() (asyncio.queue method)": [[131, "asyncio.Queue.get_nowait"]], "join() (asyncio.queue method)": [[131, "asyncio.Queue.join"]], "maxsize (asyncio.queue attribute)": [[131, "asyncio.Queue.maxsize"]], "put() (asyncio.queue method)": [[131, "asyncio.Queue.put"]], "put_nowait() (asyncio.queue method)": [[131, "asyncio.Queue.put_nowait"]], "qsize() (asyncio.queue method)": [[131, "asyncio.Queue.qsize"]], "task_done() (asyncio.queue method)": [[131, "asyncio.Queue.task_done"]], "runner (class in asyncio)": [[132, "asyncio.Runner"]], "close() (asyncio.runner method)": [[132, "asyncio.Runner.close"]], "get_loop() (asyncio.runner method)": [[132, "asyncio.Runner.get_loop"]], "run() (asyncio.runner method)": [[132, "asyncio.Runner.run"]], "run() (in module asyncio)": [[132, "asyncio.run"]], "streamreader (class in asyncio)": [[133, "asyncio.StreamReader"]], "streamwriter (class in asyncio)": [[133, "asyncio.StreamWriter"]], "at_eof() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.at_eof"]], "can_write_eof() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.can_write_eof"]], "close() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.close"]], "drain() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.drain"]], "feed_eof() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.feed_eof"]], "get_extra_info() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.get_extra_info"]], "is_closing() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.is_closing"]], "open_connection() (in module asyncio)": [[133, "asyncio.open_connection"]], "open_unix_connection() (in module asyncio)": [[133, "asyncio.open_unix_connection"]], "read() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.read"]], "readexactly() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.readexactly"]], "readline() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.readline"]], "readuntil() (asyncio.streamreader method)": [[133, "asyncio.StreamReader.readuntil"]], "start_server() (in module asyncio)": [[133, "asyncio.start_server"]], "start_tls() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.start_tls"]], "start_unix_server() (in module asyncio)": [[133, "asyncio.start_unix_server"]], "transport (asyncio.streamwriter attribute)": [[133, "asyncio.StreamWriter.transport"]], "wait_closed() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.wait_closed"]], "write() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.write"]], "write_eof() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.write_eof"]], "writelines() (asyncio.streamwriter method)": [[133, "asyncio.StreamWriter.writelines"]], "asyncio.subprocess.devnull (built-in variable)": [[134, "asyncio.subprocess.DEVNULL"]], "asyncio.subprocess.pipe (built-in variable)": [[134, "asyncio.subprocess.PIPE"]], "asyncio.subprocess.process (built-in class)": [[134, "asyncio.subprocess.Process"]], "asyncio.subprocess.stdout (built-in variable)": [[134, "asyncio.subprocess.STDOUT"]], "communicate() (asyncio.subprocess.process method)": [[134, "asyncio.subprocess.Process.communicate"]], "create_subprocess_exec() (in module asyncio)": [[134, "asyncio.create_subprocess_exec"]], "create_subprocess_shell() (in module asyncio)": [[134, "asyncio.create_subprocess_shell"]], "kill() (asyncio.subprocess.process method)": [[134, "asyncio.subprocess.Process.kill"]], "pid (asyncio.subprocess.process attribute)": [[134, "asyncio.subprocess.Process.pid"]], "returncode (asyncio.subprocess.process attribute)": [[134, "asyncio.subprocess.Process.returncode"]], "send_signal() (asyncio.subprocess.process method)": [[134, "asyncio.subprocess.Process.send_signal"]], "stderr (asyncio.subprocess.process attribute)": [[134, "asyncio.subprocess.Process.stderr"]], "stdin (asyncio.subprocess.process attribute)": [[134, "asyncio.subprocess.Process.stdin"]], "stdout (asyncio.subprocess.process attribute)": [[134, "asyncio.subprocess.Process.stdout"]], "terminate() (asyncio.subprocess.process method)": [[134, "asyncio.subprocess.Process.terminate"]], "wait() (asyncio.subprocess.process method)": [[134, "asyncio.subprocess.Process.wait"]], "barrier (class in asyncio)": [[135, "asyncio.Barrier"]], "boundedsemaphore (class in asyncio)": [[135, "asyncio.BoundedSemaphore"]], "brokenbarriererror": [[135, "asyncio.BrokenBarrierError"], [362, "threading.BrokenBarrierError"]], "condition (class in asyncio)": [[135, "asyncio.Condition"]], "event (class in asyncio)": [[135, "asyncio.Event"]], "lock (class in asyncio)": [[135, "asyncio.Lock"]], "semaphore (class in asyncio)": [[135, "asyncio.Semaphore"]], "abort() (asyncio.barrier method)": [[135, "asyncio.Barrier.abort"]], "acquire() (asyncio.condition method)": [[135, "asyncio.Condition.acquire"]], "acquire() (asyncio.lock method)": [[135, "asyncio.Lock.acquire"]], "acquire() (asyncio.semaphore method)": [[135, "asyncio.Semaphore.acquire"]], "broken (asyncio.barrier attribute)": [[135, "asyncio.Barrier.broken"]], "clear() (asyncio.event method)": [[135, "asyncio.Event.clear"]], "is_set() (asyncio.event method)": [[135, "asyncio.Event.is_set"]], "locked() (asyncio.condition method)": [[135, "asyncio.Condition.locked"]], "locked() (asyncio.lock method)": [[135, "asyncio.Lock.locked"]], "locked() (asyncio.semaphore method)": [[135, "asyncio.Semaphore.locked"]], "n_waiting (asyncio.barrier attribute)": [[135, "asyncio.Barrier.n_waiting"]], "notify() (asyncio.condition method)": [[135, "asyncio.Condition.notify"]], "notify_all() (asyncio.condition method)": [[135, "asyncio.Condition.notify_all"]], "parties (asyncio.barrier attribute)": [[135, "asyncio.Barrier.parties"]], "release() (asyncio.condition method)": [[135, "asyncio.Condition.release"]], "release() (asyncio.lock method)": [[135, "asyncio.Lock.release"]], "release() (asyncio.semaphore method)": [[135, "asyncio.Semaphore.release"]], "reset() (asyncio.barrier method)": [[135, "asyncio.Barrier.reset"]], "set() (asyncio.event method)": [[135, "asyncio.Event.set"]], "wait() (asyncio.barrier method)": [[135, "asyncio.Barrier.wait"]], "wait() (asyncio.condition method)": [[135, "asyncio.Condition.wait"]], "wait() (asyncio.event method)": [[135, "asyncio.Event.wait"]], "wait_for() (asyncio.condition method)": [[135, "asyncio.Condition.wait_for"]], "all_completed (in module asyncio)": [[136, "asyncio.ALL_COMPLETED"]], "first_completed (in module asyncio)": [[136, "asyncio.FIRST_COMPLETED"]], "first_exception (in module asyncio)": [[136, "asyncio.FIRST_EXCEPTION"]], "task (class in asyncio)": [[136, "asyncio.Task"]], "taskgroup (class in asyncio)": [[136, "asyncio.TaskGroup"]], "timeout (class in asyncio)": [[136, "asyncio.Timeout"]], "add_done_callback() (asyncio.task method)": [[136, "asyncio.Task.add_done_callback"]], "all_tasks() (in module asyncio)": [[136, "asyncio.all_tasks"]], "as_completed() (in module asyncio)": [[136, "asyncio.as_completed"]], "cancel() (asyncio.task method)": [[136, "asyncio.Task.cancel"]], "cancelled() (asyncio.task method)": [[136, "asyncio.Task.cancelled"]], "cancelling() (asyncio.task method)": [[136, "asyncio.Task.cancelling"]], "create_eager_task_factory() (in module asyncio)": [[136, "asyncio.create_eager_task_factory"]], "create_task() (asyncio.taskgroup method)": [[136, "asyncio.TaskGroup.create_task"]], "create_task() (in module asyncio)": [[136, "asyncio.create_task"]], "current_task() (in module asyncio)": [[136, "asyncio.current_task"]], "done() (asyncio.task method)": [[136, "asyncio.Task.done"]], "eager_task_factory() (in module asyncio)": [[136, "asyncio.eager_task_factory"]], "exception() (asyncio.task method)": [[136, "asyncio.Task.exception"]], "expired() (asyncio.timeout method)": [[136, "asyncio.Timeout.expired"]], "gather() (in module asyncio)": [[136, "asyncio.gather"]], "get_context() (asyncio.task method)": [[136, "asyncio.Task.get_context"]], "get_coro() (asyncio.task method)": [[136, "asyncio.Task.get_coro"]], "get_name() (asyncio.task method)": [[136, "asyncio.Task.get_name"]], "get_stack() (asyncio.task method)": [[136, "asyncio.Task.get_stack"]], "iscoroutine() (in module asyncio)": [[136, "asyncio.iscoroutine"]], "print_stack() (asyncio.task method)": [[136, "asyncio.Task.print_stack"]], "remove_done_callback() (asyncio.task method)": [[136, "asyncio.Task.remove_done_callback"]], "reschedule() (asyncio.timeout method)": [[136, "asyncio.Timeout.reschedule"]], "result() (asyncio.task method)": [[136, "asyncio.Task.result"]], "run_coroutine_threadsafe() (in module asyncio)": [[136, "asyncio.run_coroutine_threadsafe"]], "set_name() (asyncio.task method)": [[136, "asyncio.Task.set_name"]], "shield() (in module asyncio)": [[136, "asyncio.shield"]], "sleep() (in module asyncio)": [[136, "asyncio.sleep"]], "timeout() (in module asyncio)": [[136, "asyncio.timeout"]], "timeout_at() (in module asyncio)": [[136, "asyncio.timeout_at"]], "to_thread() (in module asyncio)": [[136, "asyncio.to_thread"]], "uncancel() (asyncio.task method)": [[136, "asyncio.Task.uncancel"]], "wait() (in module asyncio)": [[136, "asyncio.wait"]], "wait_for() (in module asyncio)": [[136, "asyncio.wait_for"]], "when() (asyncio.timeout method)": [[136, "asyncio.Timeout.when"]], "atexit": [[137, "module-atexit"]], "register() (in module atexit)": [[137, "atexit.register"]], "unregister() (in module atexit)": [[137, "atexit.unregister"]], "adpcm, intel/dvi": [[138, "index-1"]], "intel/dvi adpcm": [[138, "index-1"]], "pep 594#audioop": [[138, "index-0"]], "add() (in module audioop)": [[138, "audioop.add"]], "adpcm2lin() (in module audioop)": [[138, "audioop.adpcm2lin"]], "alaw2lin() (in module audioop)": [[138, "audioop.alaw2lin"]], "audioop": [[138, "module-audioop"]], "avg() (in module audioop)": [[138, "audioop.avg"]], "avgpp() (in module audioop)": [[138, "audioop.avgpp"]], "bias() (in module audioop)": [[138, "audioop.bias"]], "byteswap() (in module audioop)": [[138, "audioop.byteswap"]], "cross() (in module audioop)": [[138, "audioop.cross"]], "findfactor() (in module audioop)": [[138, "audioop.findfactor"]], "findfit() (in module audioop)": [[138, "audioop.findfit"]], "findmax() (in module audioop)": [[138, "audioop.findmax"]], "getsample() (in module audioop)": [[138, "audioop.getsample"]], "lin2adpcm() (in module audioop)": [[138, "audioop.lin2adpcm"]], "lin2alaw() (in module audioop)": [[138, "audioop.lin2alaw"]], "lin2lin() (in module audioop)": [[138, "audioop.lin2lin"]], "lin2ulaw() (in module audioop)": [[138, "audioop.lin2ulaw"]], "max() (in module audioop)": [[138, "audioop.max"]], "maxpp() (in module audioop)": [[138, "audioop.maxpp"]], "minmax() (in module audioop)": [[138, "audioop.minmax"]], "mul() (in module audioop)": [[138, "audioop.mul"]], "ratecv() (in module audioop)": [[138, "audioop.ratecv"]], "reverse() (in module audioop)": [[138, "audioop.reverse"]], "rms() (in module audioop)": [[138, "audioop.rms"]], "tomono() (in module audioop)": [[138, "audioop.tomono"]], "tostereo() (in module audioop)": [[138, "audioop.tostereo"]], "ulaw2lin() (in module audioop)": [[138, "audioop.ulaw2lin"]], "audit events": [[139, "index-0"]], "mime": [[140, "index-0"], [148, "index-0"], [273, "index-0"], [273, "index-1"], [314, "index-0"]], "rfc 1521": [[140, "index-12"], [314, "index-1"], [314, "index-3"]], "rfc 2045": [[140, "index-10"], [140, "index-4"], [140, "index-5"], [140, "index-9"], [191, "index-3"], [193, "index-4"], [193, "index-5"], [193, "index-6"], [193, "index-9"], [199, "index-4"], [200, "index-10"], [200, "index-9"], [202, "index-6"], [202, "index-7"], [202, "index-8"]], "rfc 4648": [[140, "index-1"], [140, "index-11"], [140, "index-2"], [140, "index-3"], [140, "index-6"], [140, "index-7"], [140, "index-8"], [324, "index-1"]], "a85decode() (in module base64)": [[140, "base64.a85decode"]], "a85encode() (in module base64)": [[140, "base64.a85encode"]], "b16decode() (in module base64)": [[140, "base64.b16decode"]], "b16encode() (in module base64)": [[140, "base64.b16encode"]], "b32decode() (in module base64)": [[140, "base64.b32decode"]], "b32encode() (in module base64)": [[140, "base64.b32encode"]], "b32hexdecode() (in module base64)": [[140, "base64.b32hexdecode"]], "b32hexencode() (in module base64)": [[140, "base64.b32hexencode"]], "b64decode() (in module base64)": [[140, "base64.b64decode"]], "b64encode() (in module base64)": [[140, "base64.b64encode"]], "b85decode() (in module base64)": [[140, "base64.b85decode"]], "b85encode() (in module base64)": [[140, "base64.b85encode"]], "base64": [[140, "index-0"], [140, "module-base64"], [143, "index-0"]], "base64 encoding": [[140, "index-0"]], "decode() (in module base64)": [[140, "base64.decode"]], "decodebytes() (in module base64)": [[140, "base64.decodebytes"]], "encode() (in module base64)": [[140, "base64.encode"]], "encodebytes() (in module base64)": [[140, "base64.encodebytes"]], "encoding": [[140, "index-0"], [314, "index-0"]], "standard_b64decode() (in module base64)": [[140, "base64.standard_b64decode"]], "standard_b64encode() (in module base64)": [[140, "base64.standard_b64encode"]], "urlsafe_b64decode() (in module base64)": [[140, "base64.urlsafe_b64decode"]], "urlsafe_b64encode() (in module base64)": [[140, "base64.urlsafe_b64encode"]], "bdb (class in bdb)": [[141, "bdb.Bdb"]], "bdbquit": [[141, "bdb.BdbQuit"]], "breakpoint (class in bdb)": [[141, "bdb.Breakpoint"]], "bdb": [[141, "module-bdb"], [294, "index-1"]], "bpbynumber (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.bpbynumber"]], "bpformat() (bdb.breakpoint method)": [[141, "bdb.Breakpoint.bpformat"]], "bplist (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.bplist"]], "bpprint() (bdb.breakpoint method)": [[141, "bdb.Breakpoint.bpprint"]], "break_anywhere() (bdb.bdb method)": [[141, "bdb.Bdb.break_anywhere"]], "break_here() (bdb.bdb method)": [[141, "bdb.Bdb.break_here"]], "canonic() (bdb.bdb method)": [[141, "bdb.Bdb.canonic"]], "checkfuncname() (in module bdb)": [[141, "bdb.checkfuncname"]], "clear_all_breaks() (bdb.bdb method)": [[141, "bdb.Bdb.clear_all_breaks"]], "clear_all_file_breaks() (bdb.bdb method)": [[141, "bdb.Bdb.clear_all_file_breaks"]], "clear_bpbynumber() (bdb.bdb method)": [[141, "bdb.Bdb.clear_bpbynumber"]], "clear_break() (bdb.bdb method)": [[141, "bdb.Bdb.clear_break"]], "cond (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.cond"]], "deleteme() (bdb.breakpoint method)": [[141, "bdb.Breakpoint.deleteMe"]], "disable() (bdb.breakpoint method)": [[141, "bdb.Breakpoint.disable"]], "dispatch_call() (bdb.bdb method)": [[141, "bdb.Bdb.dispatch_call"]], "dispatch_exception() (bdb.bdb method)": [[141, "bdb.Bdb.dispatch_exception"]], "dispatch_line() (bdb.bdb method)": [[141, "bdb.Bdb.dispatch_line"]], "dispatch_return() (bdb.bdb method)": [[141, "bdb.Bdb.dispatch_return"]], "do_clear() (bdb.bdb method)": [[141, "bdb.Bdb.do_clear"]], "effective() (in module bdb)": [[141, "bdb.effective"]], "enable() (bdb.breakpoint method)": [[141, "bdb.Breakpoint.enable"]], "enabled (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.enabled"]], "file (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.file"]], "format_stack_entry() (bdb.bdb method)": [[141, "bdb.Bdb.format_stack_entry"]], "funcname (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.funcname"]], "get_all_breaks() (bdb.bdb method)": [[141, "bdb.Bdb.get_all_breaks"]], "get_bpbynumber() (bdb.bdb method)": [[141, "bdb.Bdb.get_bpbynumber"]], "get_break() (bdb.bdb method)": [[141, "bdb.Bdb.get_break"]], "get_breaks() (bdb.bdb method)": [[141, "bdb.Bdb.get_breaks"]], "get_file_breaks() (bdb.bdb method)": [[141, "bdb.Bdb.get_file_breaks"]], "get_stack() (bdb.bdb method)": [[141, "bdb.Bdb.get_stack"]], "hits (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.hits"]], "ignore (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.ignore"]], "is_skipped_line() (bdb.bdb method)": [[141, "bdb.Bdb.is_skipped_line"]], "line (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.line"]], "reset() (bdb.bdb method)": [[141, "bdb.Bdb.reset"]], "run() (bdb.bdb method)": [[141, "bdb.Bdb.run"]], "runcall() (bdb.bdb method)": [[141, "bdb.Bdb.runcall"]], "runctx() (bdb.bdb method)": [[141, "bdb.Bdb.runctx"]], "runeval() (bdb.bdb method)": [[141, "bdb.Bdb.runeval"]], "set_break() (bdb.bdb method)": [[141, "bdb.Bdb.set_break"]], "set_continue() (bdb.bdb method)": [[141, "bdb.Bdb.set_continue"]], "set_next() (bdb.bdb method)": [[141, "bdb.Bdb.set_next"]], "set_quit() (bdb.bdb method)": [[141, "bdb.Bdb.set_quit"]], "set_return() (bdb.bdb method)": [[141, "bdb.Bdb.set_return"]], "set_step() (bdb.bdb method)": [[141, "bdb.Bdb.set_step"]], "set_trace() (bdb.bdb method)": [[141, "bdb.Bdb.set_trace"]], "set_trace() (in module bdb)": [[141, "bdb.set_trace"]], "set_until() (bdb.bdb method)": [[141, "bdb.Bdb.set_until"]], "stop_here() (bdb.bdb method)": [[141, "bdb.Bdb.stop_here"]], "temporary (bdb.breakpoint attribute)": [[141, "bdb.Breakpoint.temporary"]], "trace_dispatch() (bdb.bdb method)": [[141, "bdb.Bdb.trace_dispatch"]], "user_call() (bdb.bdb method)": [[141, "bdb.Bdb.user_call"]], "user_exception() (bdb.bdb method)": [[141, "bdb.Bdb.user_exception"]], "user_line() (bdb.bdb method)": [[141, "bdb.Bdb.user_line"]], "user_return() (bdb.bdb method)": [[141, "bdb.Bdb.user_return"]], "incomplete": [[143, "binascii.Incomplete"]], "rfc 1522": [[143, "index-3"], [314, "index-2"], [314, "index-4"]], "rfc 3548": [[143, "index-1"], [143, "index-2"], [463, "index-18"]], "a2b_base64() (in module binascii)": [[143, "binascii.a2b_base64"]], "a2b_hex() (in module binascii)": [[143, "binascii.a2b_hex"]], "a2b_qp() (in module binascii)": [[143, "binascii.a2b_qp"]], "a2b_uu() (in module binascii)": [[143, "binascii.a2b_uu"]], "b2a_base64() (in module binascii)": [[143, "binascii.b2a_base64"]], "b2a_hex() (in module binascii)": [[143, "binascii.b2a_hex"]], "b2a_qp() (in module binascii)": [[143, "binascii.b2a_qp"]], "b2a_uu() (in module binascii)": [[143, "binascii.b2a_uu"]], "binascii": [[143, "module-binascii"]], "crc32() (in module binascii)": [[143, "binascii.crc32"]], "crc_hqx() (in module binascii)": [[143, "binascii.crc_hqx"]], "hexlify() (in module binascii)": [[143, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[143, "binascii.unhexlify"]], "uu": [[143, "index-0"], [394, "module-uu"]], "bisect": [[144, "module-bisect"]], "bisect() (in module bisect)": [[144, "bisect.bisect"]], "bisect_left() (in module bisect)": [[144, "bisect.bisect_left"]], "bisect_right() (in module bisect)": [[144, "bisect.bisect_right"]], "insort() (in module bisect)": [[144, "bisect.insort"]], "insort_left() (in module bisect)": [[144, "bisect.insort_left"]], "insort_right() (in module bisect)": [[144, "bisect.insort_right"]], "bz2compressor (class in bz2)": [[146, "bz2.BZ2Compressor"]], "bz2decompressor (class in bz2)": [[146, "bz2.BZ2Decompressor"]], "bz2file (class in bz2)": [[146, "bz2.BZ2File"]], "bz2": [[146, "module-bz2"]], "compress() (bz2.bz2compressor method)": [[146, "bz2.BZ2Compressor.compress"]], "compress() (in module bz2)": [[146, "bz2.compress"]], "decompress() (bz2.bz2decompressor method)": [[146, "bz2.BZ2Decompressor.decompress"]], "decompress() (in module bz2)": [[146, "bz2.decompress"]], "eof (bz2.bz2decompressor attribute)": [[146, "bz2.BZ2Decompressor.eof"]], "fileno() (bz2.bz2file method)": [[146, "bz2.BZ2File.fileno"]], "flush() (bz2.bz2compressor method)": [[146, "bz2.BZ2Compressor.flush"]], "needs_input (bz2.bz2decompressor attribute)": [[146, "bz2.BZ2Decompressor.needs_input"]], "open() (in module bz2)": [[146, "bz2.open"]], "peek() (bz2.bz2file method)": [[146, "bz2.BZ2File.peek"]], "read1() (bz2.bz2file method)": [[146, "bz2.BZ2File.read1"]], "readable() (bz2.bz2file method)": [[146, "bz2.BZ2File.readable"]], "readinto() (bz2.bz2file method)": [[146, "bz2.BZ2File.readinto"]], "seekable() (bz2.bz2file method)": [[146, "bz2.BZ2File.seekable"]], "unused_data (bz2.bz2decompressor attribute)": [[146, "bz2.BZ2Decompressor.unused_data"]], "writable() (bz2.bz2file method)": [[146, "bz2.BZ2File.writable"]], "--css": [[147, "cmdoption-calendar-css"]], "--encoding": [[147, "cmdoption-calendar-encoding"]], "--lines": [[147, "cmdoption-calendar-lines"]], "--locale": [[147, "cmdoption-calendar-locale"]], "--months": [[147, "cmdoption-calendar-months"]], "--spacing": [[147, "cmdoption-calendar-spacing"]], "--type": [[147, "cmdoption-calendar-type"]], "--width": [[147, "cmdoption-calendar-width"]], "-l": [[147, "cmdoption-calendar-locale"], [147, "cmdoption-calendar-lines"], [160, "cmdoption-compileall-l"], [297, "cmdoption-pickletools-l"], [355, "cmdoption-tarfile-l"], [377, "cmdoption-trace-l"], [419, "cmdoption-zipfile-l"]], "-c": [[147, "cmdoption-calendar-css"], [355, "cmdoption-tarfile-c"], [377, "cmdoption-trace-C"], [377, "cmdoption-trace-c"], [385, "cmdoption-unittest-c"], [418, "cmdoption-zipapp-c"], [419, "cmdoption-zipfile-c"], [452, "cmdoption-c"]], "-e": [[147, "cmdoption-calendar-encoding"], [160, "cmdoption-compileall-e"], [355, "cmdoption-tarfile-e"], [375, "cmdoption-tokenize-e"], [419, "cmdoption-zipfile-e"], [452, "cmdoption-E"]], "-s": [[147, "cmdoption-calendar-spacing"], [160, "cmdoption-compileall-s"], [364, "cmdoption-timeit-s"], [377, "cmdoption-trace-s"], [385, "cmdoption-unittest-discover-s"], [452, "cmdoption-S"], [452, "cmdoption-s"]], "-t": [[147, "cmdoption-calendar-type"], [355, "cmdoption-tarfile-t"], [377, "cmdoption-trace-T"], [377, "cmdoption-trace-t"], [385, "cmdoption-unittest-discover-t"], [419, "cmdoption-zipfile-t"]], "-w": [[147, "cmdoption-calendar-width"], [452, "cmdoption-W"]], "april (in module calendar)": [[147, "calendar.APRIL"]], "august (in module calendar)": [[147, "calendar.AUGUST"]], "calendar (class in calendar)": [[147, "calendar.Calendar"]], "december (in module calendar)": [[147, "calendar.DECEMBER"]], "day (class in calendar)": [[147, "calendar.Day"]], "february (in module calendar)": [[147, "calendar.FEBRUARY"]], "friday (in module calendar)": [[147, "calendar.FRIDAY"]], "htmlcalendar (class in calendar)": [[147, "calendar.HTMLCalendar"]], "illegalmontherror": [[147, "calendar.IllegalMonthError"]], "illegalweekdayerror": [[147, "calendar.IllegalWeekdayError"]], "january (in module calendar)": [[147, "calendar.JANUARY"]], "july (in module calendar)": [[147, "calendar.JULY"]], "june (in module calendar)": [[147, "calendar.JUNE"]], "localehtmlcalendar (class in calendar)": [[147, "calendar.LocaleHTMLCalendar"]], "localetextcalendar (class in calendar)": [[147, "calendar.LocaleTextCalendar"]], "march (in module calendar)": [[147, "calendar.MARCH"]], "may (in module calendar)": [[147, "calendar.MAY"]], "monday (in module calendar)": [[147, "calendar.MONDAY"]], "month (class in calendar)": [[147, "calendar.Month"]], "november (in module calendar)": [[147, "calendar.NOVEMBER"]], "october (in module calendar)": [[147, "calendar.OCTOBER"]], "saturday (in module calendar)": [[147, "calendar.SATURDAY"]], "september (in module calendar)": [[147, "calendar.SEPTEMBER"]], "sunday (in module calendar)": [[147, "calendar.SUNDAY"]], "thursday (in module calendar)": [[147, "calendar.THURSDAY"]], "tuesday (in module calendar)": [[147, "calendar.TUESDAY"]], "textcalendar (class in calendar)": [[147, "calendar.TextCalendar"]], "wednesday (in module calendar)": [[147, "calendar.WEDNESDAY"]], "calendar": [[147, "module-calendar"]], "calendar command line option": [[147, "cmdoption-calendar-arg-month"], [147, "cmdoption-calendar-arg-year"], [147, "cmdoption-calendar-css"], [147, "cmdoption-calendar-encoding"], [147, "cmdoption-calendar-help"], [147, "cmdoption-calendar-lines"], [147, "cmdoption-calendar-locale"], [147, "cmdoption-calendar-months"], [147, "cmdoption-calendar-spacing"], [147, "cmdoption-calendar-type"], [147, "cmdoption-calendar-width"]], "calendar() (in module calendar)": [[147, "calendar.calendar"]], "cssclass_month (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclass_month"]], "cssclass_month_head (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclass_month_head"]], "cssclass_noday (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclass_noday"]], "cssclass_year (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclass_year"]], "cssclass_year_head (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclass_year_head"]], "cssclasses (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclasses"]], "cssclasses_weekday_head (calendar.htmlcalendar attribute)": [[147, "calendar.HTMLCalendar.cssclasses_weekday_head"]], "day_abbr (in module calendar)": [[147, "calendar.day_abbr"]], "day_name (in module calendar)": [[147, "calendar.day_name"]], "firstweekday() (in module calendar)": [[147, "calendar.firstweekday"]], "formatmonth() (calendar.htmlcalendar method)": [[147, "calendar.HTMLCalendar.formatmonth"]], "formatmonth() (calendar.textcalendar method)": [[147, "calendar.TextCalendar.formatmonth"]], "formatmonthname() (calendar.htmlcalendar method)": [[147, "calendar.HTMLCalendar.formatmonthname"]], "formatyear() (calendar.htmlcalendar method)": [[147, "calendar.HTMLCalendar.formatyear"]], "formatyear() (calendar.textcalendar method)": [[147, "calendar.TextCalendar.formatyear"]], "formatyearpage() (calendar.htmlcalendar method)": [[147, "calendar.HTMLCalendar.formatyearpage"]], "isleap() (in module calendar)": [[147, "calendar.isleap"]], "itermonthdates() (calendar.calendar method)": [[147, "calendar.Calendar.itermonthdates"]], "itermonthdays() (calendar.calendar method)": [[147, "calendar.Calendar.itermonthdays"]], "itermonthdays2() (calendar.calendar method)": [[147, "calendar.Calendar.itermonthdays2"]], "itermonthdays3() (calendar.calendar method)": [[147, "calendar.Calendar.itermonthdays3"]], "itermonthdays4() (calendar.calendar method)": [[147, "calendar.Calendar.itermonthdays4"]], "iterweekdays() (calendar.calendar method)": [[147, "calendar.Calendar.iterweekdays"]], "leapdays() (in module calendar)": [[147, "calendar.leapdays"]], "month": [[147, "cmdoption-calendar-arg-month"]], "month (calendar.illegalmontherror attribute)": [[147, "calendar.IllegalMonthError.month"]], "month() (in module calendar)": [[147, "calendar.month"]], "month_abbr (in module calendar)": [[147, "calendar.month_abbr"]], "month_name (in module calendar)": [[147, "calendar.month_name"]], "monthcalendar() (in module calendar)": [[147, "calendar.monthcalendar"]], "monthdatescalendar() (calendar.calendar method)": [[147, "calendar.Calendar.monthdatescalendar"]], "monthdays2calendar() (calendar.calendar method)": [[147, "calendar.Calendar.monthdays2calendar"]], "monthdayscalendar() (calendar.calendar method)": [[147, "calendar.Calendar.monthdayscalendar"]], "monthrange() (in module calendar)": [[147, "calendar.monthrange"]], "prcal() (in module calendar)": [[147, "calendar.prcal"]], "prmonth() (calendar.textcalendar method)": [[147, "calendar.TextCalendar.prmonth"]], "prmonth() (in module calendar)": [[147, "calendar.prmonth"]], "pryear() (calendar.textcalendar method)": [[147, "calendar.TextCalendar.pryear"]], "setfirstweekday() (in module calendar)": [[147, "calendar.setfirstweekday"]], "timegm() (in module calendar)": [[147, "calendar.timegm"]], "weekday (calendar.illegalweekdayerror attribute)": [[147, "calendar.IllegalWeekdayError.weekday"]], "weekday() (in module calendar)": [[147, "calendar.weekday"]], "weekheader() (in module calendar)": [[147, "calendar.weekheader"]], "year": [[147, "cmdoption-calendar-arg-year"]], "yeardatescalendar() (calendar.calendar method)": [[147, "calendar.Calendar.yeardatescalendar"]], "yeardays2calendar() (calendar.calendar method)": [[147, "calendar.Calendar.yeardays2calendar"]], "yeardayscalendar() (calendar.calendar method)": [[147, "calendar.Calendar.yeardayscalendar"]], "cgi": [[148, "index-0"], [148, "index-2"], [148, "index-5"], [148, "module-cgi"], [149, "index-0"]], "common gateway interface": [[148, "index-0"]], "http": [[148, "index-0"], [238, "index-0"], [238, "module-http"], [239, "index-0"], [242, "index-0"], [392, "index-10"], [392, "index-9"]], "pep 594#cgi": [[148, "index-1"]], "url": [[148, "index-0"], [242, "index-0"], [391, "index-0"], [393, "index-0"]], "www": [[148, "index-0"], [242, "index-0"], [253, "index-0"], [391, "index-0"], [393, "index-0"]], "debugging": [[148, "index-5"], [294, "index-0"], [433, "index-18"]], "getfirst() (cgi.fieldstorage method)": [[148, "cgi.FieldStorage.getfirst"]], "getlist() (cgi.fieldstorage method)": [[148, "cgi.FieldStorage.getlist"]], "headers": [[148, "index-0"], [273, "index-1"]], "parse() (in module cgi)": [[148, "cgi.parse"]], "parse_header() (in module cgi)": [[148, "cgi.parse_header"]], "parse_multipart() (in module cgi)": [[148, "cgi.parse_multipart"]], "print_directory() (in module cgi)": [[148, "cgi.print_directory"]], "print_environ() (in module cgi)": [[148, "cgi.print_environ"]], "print_environ_usage() (in module cgi)": [[148, "cgi.print_environ_usage"]], "print_form() (in module cgi)": [[148, "cgi.print_form"]], "protocol": [[148, "index-0"], [220, "index-0"], [238, "index-0"], [239, "index-0"], [242, "index-0"], [245, "index-0"], [285, "index-0"], [296, "index-5"], [302, "index-0"], [332, "index-0"], [341, "index-18"], [341, "index-54"], [356, "index-0"], [392, "index-10"], [392, "index-9"]], "security": [[148, "index-2"], [242, "index-3"]], "server": [[148, "index-0"], [242, "index-0"]], "test() (in module cgi)": [[148, "cgi.test"]], "pep 594#cgitb": [[149, "index-1"]], "cgitb": [[149, "module-cgitb"]], "enable() (in module cgitb)": [[149, "cgitb.enable"]], "excepthook() (in module sys)": [[149, "index-2"], [349, "sys.excepthook"]], "exceptions": [[149, "index-0"]], "handler() (in module cgitb)": [[149, "cgitb.handler"]], "html() (in module cgitb)": [[149, "cgitb.html"]], "in cgi scripts": [[149, "index-0"]], "text() (in module cgitb)": [[149, "cgitb.text"]], "tracebacks": [[149, "index-0"]], "chunk (class in chunk)": [[150, "chunk.Chunk"]], "pep 594#chunk": [[150, "index-1"]], "rmff": [[150, "index-0"]], "real media file format": [[150, "index-0"]], "chunk": [[150, "module-chunk"]], "close() (chunk.chunk method)": [[150, "chunk.Chunk.close"]], "getname() (chunk.chunk method)": [[150, "chunk.Chunk.getname"]], "getsize() (chunk.chunk method)": [[150, "chunk.Chunk.getsize"]], "isatty() (chunk.chunk method)": [[150, "chunk.Chunk.isatty"]], "read() (chunk.chunk method)": [[150, "chunk.Chunk.read"]], "seek() (chunk.chunk method)": [[150, "chunk.Chunk.seek"]], "skip() (chunk.chunk method)": [[150, "chunk.Chunk.skip"]], "tell() (chunk.chunk method)": [[150, "chunk.Chunk.tell"]], "pep 485": [[151, "index-0"], [272, "index-0"], [475, "index-19"], [475, "index-20"]], "acos() (in module cmath)": [[151, "cmath.acos"]], "acosh() (in module cmath)": [[151, "cmath.acosh"]], "asin() (in module cmath)": [[151, "cmath.asin"]], "asinh() (in module cmath)": [[151, "cmath.asinh"]], "atan() (in module cmath)": [[151, "cmath.atan"]], "atanh() (in module cmath)": [[151, "cmath.atanh"]], "cmath": [[151, "module-cmath"]], "cos() (in module cmath)": [[151, "cmath.cos"]], "cosh() (in module cmath)": [[151, "cmath.cosh"]], "e (in module cmath)": [[151, "cmath.e"]], "exp() (in module cmath)": [[151, "cmath.exp"]], "inf (in module cmath)": [[151, "cmath.inf"]], "infj (in module cmath)": [[151, "cmath.infj"]], "isclose() (in module cmath)": [[151, "cmath.isclose"]], "isfinite() (in module cmath)": [[151, "cmath.isfinite"]], "isinf() (in module cmath)": [[151, "cmath.isinf"]], "isnan() (in module cmath)": [[151, "cmath.isnan"]], "log() (in module cmath)": [[151, "cmath.log"]], "log10() (in module cmath)": [[151, "cmath.log10"]], "math": [[151, "index-1"], [272, "module-math"], [341, "index-15"]], "nan (in module cmath)": [[151, "cmath.nan"]], "nanj (in module cmath)": [[151, "cmath.nanj"]], "phase() (in module cmath)": [[151, "cmath.phase"]], "pi (in module cmath)": [[151, "cmath.pi"]], "polar() (in module cmath)": [[151, "cmath.polar"]], "rect() (in module cmath)": [[151, "cmath.rect"]], "sin() (in module cmath)": [[151, "cmath.sin"]], "sinh() (in module cmath)": [[151, "cmath.sinh"]], "sqrt() (in module cmath)": [[151, "cmath.sqrt"]], "tan() (in module cmath)": [[151, "cmath.tan"]], "tanh() (in module cmath)": [[151, "cmath.tanh"]], "tau (in module cmath)": [[151, "cmath.tau"]], "! (exclamation)": [[152, "index-0"], [175, "index-0"], [217, "index-2"], [228, "index-1"], [342, "index-2"], [344, "index-1"], [432, "index-25"]], "cmd (class in cmd)": [[152, "cmd.Cmd"]], "cmd": [[152, "module-cmd"], [294, "index-1"]], "cmdloop() (cmd.cmd method)": [[152, "cmd.Cmd.cmdloop"]], "cmdqueue (cmd.cmd attribute)": [[152, "cmd.Cmd.cmdqueue"]], "columnize() (cmd.cmd method)": [[152, "cmd.Cmd.columnize"]], "completedefault() (cmd.cmd method)": [[152, "cmd.Cmd.completedefault"]], "default() (cmd.cmd method)": [[152, "cmd.Cmd.default"]], "do_help() (cmd.cmd method)": [[152, "cmd.Cmd.do_help"]], "doc_header (cmd.cmd attribute)": [[152, "cmd.Cmd.doc_header"]], "emptyline() (cmd.cmd method)": [[152, "cmd.Cmd.emptyline"]], "identchars (cmd.cmd attribute)": [[152, "cmd.Cmd.identchars"]], "in a command interpreter": [[152, "index-0"]], "intro (cmd.cmd attribute)": [[152, "cmd.Cmd.intro"]], "lastcmd (cmd.cmd attribute)": [[152, "cmd.Cmd.lastcmd"]], "misc_header (cmd.cmd attribute)": [[152, "cmd.Cmd.misc_header"]], "onecmd() (cmd.cmd method)": [[152, "cmd.Cmd.onecmd"]], "postcmd() (cmd.cmd method)": [[152, "cmd.Cmd.postcmd"]], "postloop() (cmd.cmd method)": [[152, "cmd.Cmd.postloop"]], "precmd() (cmd.cmd method)": [[152, "cmd.Cmd.precmd"]], "preloop() (cmd.cmd method)": [[152, "cmd.Cmd.preloop"]], "prompt (cmd.cmd attribute)": [[152, "cmd.Cmd.prompt"]], "ruler (cmd.cmd attribute)": [[152, "cmd.Cmd.ruler"]], "undoc_header (cmd.cmd attribute)": [[152, "cmd.Cmd.undoc_header"]], "use_rawinput (cmd.cmd attribute)": [[152, "cmd.Cmd.use_rawinput"]], "interactiveconsole (class in code)": [[154, "code.InteractiveConsole"]], "interactiveinterpreter (class in code)": [[154, "code.InteractiveInterpreter"]], "compile_command() (in module code)": [[154, "code.compile_command"]], "interact() (code.interactiveconsole method)": [[154, "code.InteractiveConsole.interact"]], "interact() (in module code)": [[154, "code.interact"]], "push() (code.interactiveconsole method)": [[154, "code.InteractiveConsole.push"]], "raw_input() (code.interactiveconsole method)": [[154, "code.InteractiveConsole.raw_input"]], "resetbuffer() (code.interactiveconsole method)": [[154, "code.InteractiveConsole.resetbuffer"]], "runcode() (code.interactiveinterpreter method)": [[154, "code.InteractiveInterpreter.runcode"]], "runsource() (code.interactiveinterpreter method)": [[154, "code.InteractiveInterpreter.runsource"]], "showsyntaxerror() (code.interactiveinterpreter method)": [[154, "code.InteractiveInterpreter.showsyntaxerror"]], "showtraceback() (code.interactiveinterpreter method)": [[154, "code.InteractiveInterpreter.showtraceback"]], "write() (code.interactiveinterpreter method)": [[154, "code.InteractiveInterpreter.write"]], "bom (in module codecs)": [[155, "codecs.BOM"]], "bom_be (in module codecs)": [[155, "codecs.BOM_BE"]], "bom_le (in module codecs)": [[155, "codecs.BOM_LE"]], "bom_utf16 (in module codecs)": [[155, "codecs.BOM_UTF16"]], "bom_utf16_be (in module codecs)": [[155, "codecs.BOM_UTF16_BE"]], "bom_utf16_le (in module codecs)": [[155, "codecs.BOM_UTF16_LE"]], "bom_utf32 (in module codecs)": [[155, "codecs.BOM_UTF32"]], "bom_utf32_be (in module codecs)": [[155, "codecs.BOM_UTF32_BE"]], "bom_utf32_le (in module codecs)": [[155, "codecs.BOM_UTF32_LE"]], "bom_utf8 (in module codecs)": [[155, "codecs.BOM_UTF8"]], "codec (class in codecs)": [[155, "codecs.Codec"]], "codecinfo (class in codecs)": [[155, "codecs.CodecInfo"]], "codecs": [[155, "index-0"], [155, "module-codecs"]], "encodedfile() (in module codecs)": [[155, "codecs.EncodedFile"]], "incrementaldecoder (class in codecs)": [[155, "codecs.IncrementalDecoder"]], "incrementalencoder (class in codecs)": [[155, "codecs.IncrementalEncoder"]], "rfc 3490": [[155, "index-13"], [155, "index-14"], [155, "index-6"], [155, "index-8"]], "rfc 3490#section-3.1": [[155, "index-12"]], "rfc 3492": [[155, "index-7"], [155, "index-9"]], "rfc 5891": [[155, "index-10"]], "rfc 5895": [[155, "index-11"]], "streamreader (class in codecs)": [[155, "codecs.StreamReader"]], "streamreaderwriter (class in codecs)": [[155, "codecs.StreamReaderWriter"]], "streamrecoder (class in codecs)": [[155, "codecs.StreamRecoder"]], "streamwriter (class in codecs)": [[155, "codecs.StreamWriter"]], "toascii() (in module encodings.idna)": [[155, "encodings.idna.ToASCII"]], "tounicode() (in module encodings.idna)": [[155, "encodings.idna.ToUnicode"]], "unicode": [[155, "index-0"], [384, "index-0"], [425, "index-19"]], "\\ (backslash)": [[155, "index-1"], [290, "index-48"], [316, "index-12"], [316, "index-26"], [316, "index-9"], [432, "index-23"]], "\\n": [[155, "index-3"], [316, "index-37"], [316, "index-37"], [432, "index-23"], [432, "index-23"]], "\\u": [[155, "index-1"], [155, "index-1"], [316, "index-37"], [316, "index-37"], [432, "index-23"], [432, "index-23"]], "\\x": [[155, "index-1"], [316, "index-37"], [432, "index-23"]], "backslashreplace": [[155, "index-1"]], "backslashreplace_errors() (in module codecs)": [[155, "codecs.backslashreplace_errors"]], "decode": [[155, "index-0"]], "decode (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.decode"]], "decode() (codecs.codec method)": [[155, "codecs.Codec.decode"]], "decode() (codecs.incrementaldecoder method)": [[155, "codecs.IncrementalDecoder.decode"]], "decode() (in module codecs)": [[155, "codecs.decode"]], "encode": [[155, "index-0"]], "encode (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.encode"]], "encode() (codecs.codec method)": [[155, "codecs.Codec.encode"]], "encode() (codecs.incrementalencoder method)": [[155, "codecs.IncrementalEncoder.encode"]], "encode() (in module codecs)": [[155, "codecs.encode"]], "encodings.idna": [[155, "module-encodings.idna"]], "encodings.mbcs": [[155, "module-encodings.mbcs"]], "encodings.utf_8_sig": [[155, "module-encodings.utf_8_sig"]], "error handler's name": [[155, "index-1"], [155, "index-3"], [155, "index-4"]], "escape sequence": [[155, "index-1"], [155, "index-3"], [432, "index-23"]], "getdecoder() (in module codecs)": [[155, "codecs.getdecoder"]], "getencoder() (in module codecs)": [[155, "codecs.getencoder"]], "getincrementaldecoder() (in module codecs)": [[155, "codecs.getincrementaldecoder"]], "getincrementalencoder() (in module codecs)": [[155, "codecs.getincrementalencoder"]], "getreader() (in module codecs)": [[155, "codecs.getreader"]], "getstate() (codecs.incrementaldecoder method)": [[155, "codecs.IncrementalDecoder.getstate"]], "getstate() (codecs.incrementalencoder method)": [[155, "codecs.IncrementalEncoder.getstate"]], "getwriter() (in module codecs)": [[155, "codecs.getwriter"]], "ignore": [[155, "index-1"]], "ignore_errors() (in module codecs)": [[155, "codecs.ignore_errors"]], "incrementaldecoder (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.incrementaldecoder"]], "incrementalencoder (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.incrementalencoder"]], "iterdecode() (in module codecs)": [[155, "codecs.iterdecode"]], "iterencode() (in module codecs)": [[155, "codecs.iterencode"]], "lookup() (in module codecs)": [[155, "codecs.lookup"]], "lookup_error() (in module codecs)": [[155, "codecs.lookup_error"]], "name (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.name"]], "nameprep() (in module encodings.idna)": [[155, "encodings.idna.nameprep"]], "namereplace": [[155, "index-3"]], "namereplace_errors() (in module codecs)": [[155, "codecs.namereplace_errors"]], "open() (in module codecs)": [[155, "codecs.open"]], "read() (codecs.streamreader method)": [[155, "codecs.StreamReader.read"]], "readline() (codecs.streamreader method)": [[155, "codecs.StreamReader.readline"]], "readlines() (codecs.streamreader method)": [[155, "codecs.StreamReader.readlines"]], "register() (in module codecs)": [[155, "codecs.register"]], "register_error() (in module codecs)": [[155, "codecs.register_error"]], "replace": [[155, "index-1"]], "replace_errors() (in module codecs)": [[155, "codecs.replace_errors"]], "replacement character": [[155, "index-1"]], "reset() (codecs.incrementaldecoder method)": [[155, "codecs.IncrementalDecoder.reset"]], "reset() (codecs.incrementalencoder method)": [[155, "codecs.IncrementalEncoder.reset"]], "reset() (codecs.streamreader method)": [[155, "codecs.StreamReader.reset"]], "reset() (codecs.streamwriter method)": [[155, "codecs.StreamWriter.reset"]], "setstate() (codecs.incrementaldecoder method)": [[155, "codecs.IncrementalDecoder.setstate"]], "setstate() (codecs.incrementalencoder method)": [[155, "codecs.IncrementalEncoder.setstate"]], "stackable": [[155, "index-0"]], "streamreader (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.streamreader"]], "streams": [[155, "index-0"]], "streamwriter (codecs.codecinfo attribute)": [[155, "codecs.CodecInfo.streamwriter"]], "strict": [[155, "index-1"]], "strict_errors() (in module codecs)": [[155, "codecs.strict_errors"]], "surrogateescape": [[155, "index-1"]], "surrogatepass": [[155, "index-4"]], "unregister() (in module codecs)": [[155, "codecs.unregister"]], "write() (codecs.streamwriter method)": [[155, "codecs.StreamWriter.write"]], "writelines() (codecs.streamwriter method)": [[155, "codecs.StreamWriter.writelines"]], "xmlcharrefreplace": [[155, "index-3"]], "xmlcharrefreplace_errors() (in module codecs)": [[155, "codecs.xmlcharrefreplace_errors"]], "commandcompiler (class in codeop)": [[156, "codeop.CommandCompiler"]], "compile (class in codeop)": [[156, "codeop.Compile"]], "codeop": [[156, "module-codeop"]], "compile_command() (in module codeop)": [[156, "codeop.compile_command"]], "chainmap (class in collections)": [[157, "collections.ChainMap"]], "counter (class in collections)": [[157, "collections.Counter"]], "ordereddict (class in collections)": [[157, "collections.OrderedDict"]], "pep 468": [[157, "index-2"], [476, "index-24"]], "pep 584": [[157, "index-0"], [157, "index-1"], [157, "index-3"], [290, "index-6"], [290, "index-7"], [382, "index-6"], [399, "index-0"], [399, "index-1"], [479, "index-1"], [479, "index-11"]], "userdict (class in collections)": [[157, "collections.UserDict"]], "userlist (class in collections)": [[157, "collections.UserList"]], "userstring (class in collections)": [[157, "collections.UserString"]], "__missing__() (collections.defaultdict method)": [[157, "collections.defaultdict.__missing__"]], "_asdict() (collections.somenamedtuple method)": [[157, "collections.somenamedtuple._asdict"]], "_field_defaults (collections.somenamedtuple attribute)": [[157, "collections.somenamedtuple._field_defaults"]], "_fields (collections.somenamedtuple attribute)": [[157, "collections.somenamedtuple._fields"]], "_make() (collections.somenamedtuple class method)": [[157, "collections.somenamedtuple._make"]], "_replace() (collections.somenamedtuple method)": [[157, "collections.somenamedtuple._replace"]], "append() (collections.deque method)": [[157, "collections.deque.append"]], "appendleft() (collections.deque method)": [[157, "collections.deque.appendleft"]], "clear() (collections.deque method)": [[157, "collections.deque.clear"]], "collections": [[157, "module-collections"], [425, "index-24"]], "copy() (collections.deque method)": [[157, "collections.deque.copy"]], "count() (collections.deque method)": [[157, "collections.deque.count"]], "data (collections.userdict attribute)": [[157, "collections.UserDict.data"]], "data (collections.userlist attribute)": [[157, "collections.UserList.data"]], "data (collections.userstring attribute)": [[157, "collections.UserString.data"]], "default_factory (collections.defaultdict attribute)": [[157, "collections.defaultdict.default_factory"]], "defaultdict (class in collections)": [[157, "collections.defaultdict"]], "deque (class in collections)": [[157, "collections.deque"]], "elements() (collections.counter method)": [[157, "collections.Counter.elements"]], "extend() (collections.deque method)": [[157, "collections.deque.extend"]], "extendleft() (collections.deque method)": [[157, "collections.deque.extendleft"]], "fromkeys() (collections.counter method)": [[157, "collections.Counter.fromkeys"]], "index() (collections.deque method)": [[157, "collections.deque.index"]], "insert() (collections.deque method)": [[157, "collections.deque.insert"]], "maps (collections.chainmap attribute)": [[157, "collections.ChainMap.maps"]], "maxlen (collections.deque attribute)": [[157, "collections.deque.maxlen"]], "most_common() (collections.counter method)": [[157, "collections.Counter.most_common"]], "move_to_end() (collections.ordereddict method)": [[157, "collections.OrderedDict.move_to_end"]], "namedtuple() (in module collections)": [[157, "collections.namedtuple"]], "new_child() (collections.chainmap method)": [[157, "collections.ChainMap.new_child"]], "parents (collections.chainmap attribute)": [[157, "collections.ChainMap.parents"]], "pop() (collections.deque method)": [[157, "collections.deque.pop"]], "popitem() (collections.ordereddict method)": [[157, "collections.OrderedDict.popitem"]], "popleft() (collections.deque method)": [[157, "collections.deque.popleft"]], "remove() (collections.deque method)": [[157, "collections.deque.remove"]], "reverse() (collections.deque method)": [[157, "collections.deque.reverse"]], "rotate() (collections.deque method)": [[157, "collections.deque.rotate"]], "subtract() (collections.counter method)": [[157, "collections.Counter.subtract"]], "total() (collections.counter method)": [[157, "collections.Counter.total"]], "update() (collections.counter method)": [[157, "collections.Counter.update"]], "asyncgenerator (class in collections.abc)": [[158, "collections.abc.AsyncGenerator"]], "asynciterable (class in collections.abc)": [[158, "collections.abc.AsyncIterable"]], "asynciterator (class in collections.abc)": [[158, "collections.abc.AsyncIterator"]], "awaitable (class in collections.abc)": [[158, "collections.abc.Awaitable"]], "buffer (class in collections.abc)": [[158, "collections.abc.Buffer"]], "bytestring (class in collections.abc)": [[158, "collections.abc.ByteString"]], "callable (class in collections.abc)": [[158, "collections.abc.Callable"]], "collection (class in collections.abc)": [[158, "collections.abc.Collection"]], "container (class in collections.abc)": [[158, "collections.abc.Container"]], "coroutine (class in collections.abc)": [[158, "collections.abc.Coroutine"]], "generator (class in collections.abc)": [[158, "collections.abc.Generator"]], "hashable (class in collections.abc)": [[158, "collections.abc.Hashable"]], "itemsview (class in collections.abc)": [[158, "collections.abc.ItemsView"]], "iterable (class in collections.abc)": [[158, "collections.abc.Iterable"]], "iterator (class in collections.abc)": [[158, "collections.abc.Iterator"]], "keysview (class in collections.abc)": [[158, "collections.abc.KeysView"]], "mapping (class in collections.abc)": [[158, "collections.abc.Mapping"]], "mappingview (class in collections.abc)": [[158, "collections.abc.MappingView"]], "mutablemapping (class in collections.abc)": [[158, "collections.abc.MutableMapping"]], "mutablesequence (class in collections.abc)": [[158, "collections.abc.MutableSequence"]], "mutableset (class in collections.abc)": [[158, "collections.abc.MutableSet"]], "pep 688": [[158, "index-4"], [425, "index-109"], [471, "index-12"]], "reversible (class in collections.abc)": [[158, "collections.abc.Reversible"]], "sequence (class in collections.abc)": [[158, "collections.abc.Sequence"]], "set (class in collections.abc)": [[158, "collections.abc.Set"]], "sized (class in collections.abc)": [[158, "collections.abc.Sized"]], "valuesview (class in collections.abc)": [[158, "collections.abc.ValuesView"]], "collections.abc": [[158, "module-collections.abc"]], "colorsys": [[159, "module-colorsys"]], "hls_to_rgb() (in module colorsys)": [[159, "colorsys.hls_to_rgb"]], "hsv_to_rgb() (in module colorsys)": [[159, "colorsys.hsv_to_rgb"]], "rgb_to_hls() (in module colorsys)": [[159, "colorsys.rgb_to_hls"]], "rgb_to_hsv() (in module colorsys)": [[159, "colorsys.rgb_to_hsv"]], "rgb_to_yiq() (in module colorsys)": [[159, "colorsys.rgb_to_yiq"]], "yiq_to_rgb() (in module colorsys)": [[159, "colorsys.yiq_to_rgb"]], "--hardlink-dupes": [[160, "cmdoption-compileall-hardlink-dupes"]], "--invalidation-mode": [[160, "cmdoption-compileall-invalidation-mode"]], "-b": [[160, "cmdoption-compileall-b"], [385, "cmdoption-unittest-b"], [452, "cmdoption-B"], [452, "cmdoption-b"]], "-d": [[160, "cmdoption-compileall-d"], [231, "cmdoption-gzip-d"], [452, "cmdoption-d"]], "-f": [[160, "cmdoption-compileall-f"], [377, "cmdoption-trace-f"], [385, "cmdoption-unittest-f"]], "-j": [[160, "cmdoption-compileall-j"], [452, "cmdoption-J"]], "-o": [[160, "cmdoption-compileall-o"], [297, "cmdoption-pickletools-o"], [418, "cmdoption-zipapp-o"], [452, "cmdoption-O"]], "-p": [[160, "cmdoption-compileall-p"], [297, "cmdoption-pickletools-p"], [364, "cmdoption-timeit-p"], [385, "cmdoption-unittest-discover-p"], [418, "cmdoption-zipapp-p"], [452, "cmdoption-P"]], "-q": [[160, "cmdoption-compileall-q"], [308, "cmdoption-python-m-py_compile-q"], [452, "cmdoption-q"]], "-r": [[160, "cmdoption-compileall-r"], [364, "cmdoption-timeit-r"], [377, "cmdoption-trace-R"], [377, "cmdoption-trace-r"], [452, "cmdoption-R"]], "-x": [[160, "cmdoption-compileall-x"], [452, "cmdoption-X"], [452, "cmdoption-x"]], "source_date_epoch": [[160, "index-1"], [308, "index-3"], [308, "index-6"], [308, "index-7"], [477, "index-31"]], "compile_dir() (in module compileall)": [[160, "compileall.compile_dir"]], "compile_file() (in module compileall)": [[160, "compileall.compile_file"]], "compile_path() (in module compileall)": [[160, "compileall.compile_path"]], "compileall": [[160, "module-compileall"]], "compileall command line option": [[160, "cmdoption-compileall-arg-directory"], [160, "cmdoption-compileall-arg-file"], [160, "cmdoption-compileall-b"], [160, "cmdoption-compileall-d"], [160, "cmdoption-compileall-e"], [160, "cmdoption-compileall-f"], [160, "cmdoption-compileall-hardlink-dupes"], [160, "cmdoption-compileall-i"], [160, "cmdoption-compileall-invalidation-mode"], [160, "cmdoption-compileall-j"], [160, "cmdoption-compileall-l"], [160, "cmdoption-compileall-o"], [160, "cmdoption-compileall-p"], [160, "cmdoption-compileall-q"], [160, "cmdoption-compileall-r"], [160, "cmdoption-compileall-s"], [160, "cmdoption-compileall-x"]], "directory": [[160, "cmdoption-compileall-arg-directory"], [290, "index-26"], [290, "index-28"], [290, "index-29"], [290, "index-31"], [290, "index-32"], [329, "index-1"], [331, "index-1"]], "all_completed (in module concurrent.futures)": [[163, "concurrent.futures.ALL_COMPLETED"]], "brokenexecutor": [[163, "concurrent.futures.BrokenExecutor"]], "brokenprocesspool": [[163, "concurrent.futures.process.BrokenProcessPool"]], "brokenthreadpool": [[163, "concurrent.futures.thread.BrokenThreadPool"]], "executor (class in concurrent.futures)": [[163, "concurrent.futures.Executor"]], "first_completed (in module concurrent.futures)": [[163, "concurrent.futures.FIRST_COMPLETED"]], "first_exception (in module concurrent.futures)": [[163, "concurrent.futures.FIRST_EXCEPTION"]], "future (class in concurrent.futures)": [[163, "concurrent.futures.Future"]], "pep 3148": [[163, "index-0"], [472, "index-4"]], "processpoolexecutor (class in concurrent.futures)": [[163, "concurrent.futures.ProcessPoolExecutor"]], "threadpoolexecutor (class in concurrent.futures)": [[163, "concurrent.futures.ThreadPoolExecutor"]], "add_done_callback() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.add_done_callback"]], "as_completed() (in module concurrent.futures)": [[163, "concurrent.futures.as_completed"]], "cancel() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.cancel"]], "cancelled() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.cancelled"]], "concurrent.futures": [[163, "module-concurrent.futures"]], "done() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.done"]], "exception() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.exception"]], "map() (concurrent.futures.executor method)": [[163, "concurrent.futures.Executor.map"]], "result() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.result"]], "running() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.running"]], "set_exception() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.set_exception"]], "set_result() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.set_result"]], "set_running_or_notify_cancel() (concurrent.futures.future method)": [[163, "concurrent.futures.Future.set_running_or_notify_cancel"]], "shutdown() (concurrent.futures.executor method)": [[163, "concurrent.futures.Executor.shutdown"]], "submit() (concurrent.futures.executor method)": [[163, "concurrent.futures.Executor.submit"]], "wait() (in module concurrent.futures)": [[163, "concurrent.futures.wait"]], "$ (dollar)": [[164, "index-2"], [291, "index-9"], [316, "index-2"], [342, "index-13"]], "% (percent)": [[164, "index-1"], [180, "index-0"], [291, "index-9"], [341, "index-13"], [341, "index-35"], [341, "index-45"], [363, "index-11"], [363, "index-9"], [402, "index-0"], [427, "index-68"]], ".ini": [[164, "index-0"]], "boolean_states (configparser.configparser attribute)": [[164, "configparser.ConfigParser.BOOLEAN_STATES"]], "basicinterpolation (class in configparser)": [[164, "configparser.BasicInterpolation"]], "configparser (class in configparser)": [[164, "configparser.ConfigParser"]], "duplicateoptionerror": [[164, "configparser.DuplicateOptionError"]], "duplicatesectionerror": [[164, "configparser.DuplicateSectionError"]], "extendedinterpolation (class in configparser)": [[164, "configparser.ExtendedInterpolation"]], "interpolationdeptherror": [[164, "configparser.InterpolationDepthError"]], "interpolationerror": [[164, "configparser.InterpolationError"]], "interpolationmissingoptionerror": [[164, "configparser.InterpolationMissingOptionError"]], "interpolationsyntaxerror": [[164, "configparser.InterpolationSyntaxError"]], "max_interpolation_depth (in module configparser)": [[164, "configparser.MAX_INTERPOLATION_DEPTH"]], "missingsectionheadererror": [[164, "configparser.MissingSectionHeaderError"]], "nooptionerror": [[164, "configparser.NoOptionError"]], "nosectionerror": [[164, "configparser.NoSectionError"]], "parsingerror": [[164, "configparser.ParsingError"]], "rawconfigparser (class in configparser)": [[164, "configparser.RawConfigParser"]], "sectcre (configparser.configparser attribute)": [[164, "configparser.ConfigParser.SECTCRE"]], "windows ini file": [[164, "index-0"]], "add_section() (configparser.configparser method)": [[164, "configparser.ConfigParser.add_section"]], "add_section() (configparser.rawconfigparser method)": [[164, "configparser.RawConfigParser.add_section"]], "configparser": [[164, "module-configparser"]], "configuration": [[164, "index-0"], [294, "index-2"], [331, "index-4"]], "defaults() (configparser.configparser method)": [[164, "configparser.ConfigParser.defaults"]], "get() (configparser.configparser method)": [[164, "configparser.ConfigParser.get"]], "getboolean() (configparser.configparser method)": [[164, "configparser.ConfigParser.getboolean"]], "getfloat() (configparser.configparser method)": [[164, "configparser.ConfigParser.getfloat"]], "getint() (configparser.configparser method)": [[164, "configparser.ConfigParser.getint"]], "has_option() (configparser.configparser method)": [[164, "configparser.ConfigParser.has_option"]], "has_section() (configparser.configparser method)": [[164, "configparser.ConfigParser.has_section"]], "ini file": [[164, "index-0"]], "interpolation in configuration files": [[164, "index-1"], [164, "index-2"]], "items() (configparser.configparser method)": [[164, "configparser.ConfigParser.items"]], "options() (configparser.configparser method)": [[164, "configparser.ConfigParser.options"]], "optionxform() (configparser.configparser method)": [[164, "configparser.ConfigParser.optionxform"]], "read() (configparser.configparser method)": [[164, "configparser.ConfigParser.read"]], "read_dict() (configparser.configparser method)": [[164, "configparser.ConfigParser.read_dict"]], "read_file() (configparser.configparser method)": [[164, "configparser.ConfigParser.read_file"]], "read_string() (configparser.configparser method)": [[164, "configparser.ConfigParser.read_string"]], "remove_option() (configparser.configparser method)": [[164, "configparser.ConfigParser.remove_option"]], "remove_section() (configparser.configparser method)": [[164, "configparser.ConfigParser.remove_section"]], "sections() (configparser.configparser method)": [[164, "configparser.ConfigParser.sections"]], "set() (configparser.configparser method)": [[164, "configparser.ConfigParser.set"]], "set() (configparser.rawconfigparser method)": [[164, "configparser.RawConfigParser.set"]], "write() (configparser.configparser method)": [[164, "configparser.ConfigParser.write"]], "ellipsis (built-in variable)": [[165, "Ellipsis"]], "false (built-in variable)": [[165, "False"]], "none (built-in variable)": [[165, "None"]], "notimplemented (built-in variable)": [[165, "NotImplemented"]], "true (built-in variable)": [[165, "True"]], "__debug__ (built-in variable)": [[165, "debug__"]], "copyright (built-in variable)": [[165, "copyright"]], "credits (built-in variable)": [[165, "credits"]], "ellipsis literal": [[165, "index-0"], [341, "index-66"], [425, "index-8"]], "exit (built-in variable)": [[165, "exit"]], "license (built-in variable)": [[165, "license"]], "quit (built-in variable)": [[165, "quit"]], "abstractasynccontextmanager (class in contextlib)": [[166, "contextlib.AbstractAsyncContextManager"]], "abstractcontextmanager (class in contextlib)": [[166, "contextlib.AbstractContextManager"]], "asynccontextdecorator (class in contextlib)": [[166, "contextlib.AsyncContextDecorator"]], "asyncexitstack (class in contextlib)": [[166, "contextlib.AsyncExitStack"]], "contextdecorator (class in contextlib)": [[166, "contextlib.ContextDecorator"]], "exitstack (class in contextlib)": [[166, "contextlib.ExitStack"]], "aclose() (contextlib.asyncexitstack method)": [[166, "contextlib.AsyncExitStack.aclose"]], "aclosing() (in module contextlib)": [[166, "contextlib.aclosing"]], "asynccontextmanager() (in module contextlib)": [[166, "contextlib.asynccontextmanager"]], "callback() (contextlib.exitstack method)": [[166, "contextlib.ExitStack.callback"]], "chdir() (in module contextlib)": [[166, "contextlib.chdir"]], "close() (contextlib.exitstack method)": [[166, "contextlib.ExitStack.close"]], "closing() (in module contextlib)": [[166, "contextlib.closing"]], "contextlib": [[166, "module-contextlib"]], "contextmanager() (in module contextlib)": [[166, "contextlib.contextmanager"]], "enter_async_context() (contextlib.asyncexitstack method)": [[166, "contextlib.AsyncExitStack.enter_async_context"]], "enter_context() (contextlib.exitstack method)": [[166, "contextlib.ExitStack.enter_context"]], "nullcontext() (in module contextlib)": [[166, "contextlib.nullcontext"]], "pop_all() (contextlib.exitstack method)": [[166, "contextlib.ExitStack.pop_all"]], "push() (contextlib.exitstack method)": [[166, "contextlib.ExitStack.push"]], "push_async_callback() (contextlib.asyncexitstack method)": [[166, "contextlib.AsyncExitStack.push_async_callback"]], "push_async_exit() (contextlib.asyncexitstack method)": [[166, "contextlib.AsyncExitStack.push_async_exit"]], "redirect_stderr() (in module contextlib)": [[166, "contextlib.redirect_stderr"]], "redirect_stdout() (in module contextlib)": [[166, "contextlib.redirect_stdout"]], "suppress() (in module contextlib)": [[166, "contextlib.suppress"]], "context (class in contextvars)": [[167, "contextvars.Context"]], "contextvar (class in contextvars)": [[167, "contextvars.ContextVar"]], "missing (contextvars.token attribute)": [[167, "contextvars.Token.MISSING"]], "token (class in contextvars)": [[167, "contextvars.Token"]], "contextvars": [[167, "module-contextvars"]], "copy() (contextvars.context method)": [[167, "contextvars.Context.copy"]], "copy_context() (in module contextvars)": [[167, "contextvars.copy_context"]], "get() (contextvars.context method)": [[167, "contextvars.Context.get"]], "get() (contextvars.contextvar method)": [[167, "contextvars.ContextVar.get"]], "items() (contextvars.context method)": [[167, "contextvars.Context.items"]], "keys() (contextvars.context method)": [[167, "contextvars.Context.keys"]], "name (contextvars.contextvar attribute)": [[167, "contextvars.ContextVar.name"]], "old_value (contextvars.token attribute)": [[167, "contextvars.Token.old_value"]], "reset() (contextvars.contextvar method)": [[167, "contextvars.ContextVar.reset"]], "run() (contextvars.context method)": [[167, "contextvars.Context.run"]], "set() (contextvars.contextvar method)": [[167, "contextvars.ContextVar.set"]], "values() (contextvars.context method)": [[167, "contextvars.Context.values"]], "var (contextvars.token attribute)": [[167, "contextvars.Token.var"]], "__copy__() (copy protocol)": [[168, "index-1"]], "__deepcopy__() (copy protocol)": [[168, "index-1"]], "copy": [[168, "module-copy"], [169, "index-0"], [244, "index-4"], [296, "index-5"]], "copy() (in module copy)": [[168, "copy.copy"]], "deepcopy() (in module copy)": [[168, "copy.deepcopy"]], "pickle": [[168, "index-0"], [169, "index-0"], [271, "index-0"], [296, "module-pickle"], [327, "index-0"]], "constructor() (in module copyreg)": [[169, "copyreg.constructor"]], "copyreg": [[169, "module-copyreg"]], "pickle() (in module copyreg)": [[169, "copyreg.pickle"]], "des": [[170, "index-0"]], "method_blowfish (in module crypt)": [[170, "crypt.METHOD_BLOWFISH"]], "method_crypt (in module crypt)": [[170, "crypt.METHOD_CRYPT"]], "method_md5 (in module crypt)": [[170, "crypt.METHOD_MD5"]], "method_sha256 (in module crypt)": [[170, "crypt.METHOD_SHA256"]], "method_sha512 (in module crypt)": [[170, "crypt.METHOD_SHA512"]], "pep 594#crypt": [[170, "index-1"]], "cipher": [[170, "index-0"]], "crypt": [[170, "module-crypt"], [307, "index-0"]], "crypt() (in module crypt)": [[170, "crypt.crypt"]], "crypt(3)": [[170, "index-0"], [170, "index-2"], [170, "index-3"]], "methods (in module crypt)": [[170, "crypt.methods"]], "mksalt() (in module crypt)": [[170, "crypt.mksalt"]], "cryptography": [[171, "index-0"]], "dialect (class in csv)": [[172, "csv.Dialect"]], "dictreader (class in csv)": [[172, "csv.DictReader"]], "dictwriter (class in csv)": [[172, "csv.DictWriter"]], "pep 305": [[172, "index-2"], [462, "index-20"]], "quote_all (in module csv)": [[172, "csv.QUOTE_ALL"]], "quote_minimal (in module csv)": [[172, "csv.QUOTE_MINIMAL"]], "quote_none (in module csv)": [[172, "csv.QUOTE_NONE"]], "quote_nonnumeric (in module csv)": [[172, "csv.QUOTE_NONNUMERIC"]], "quote_notnull (in module csv)": [[172, "csv.QUOTE_NOTNULL"]], "quote_strings (in module csv)": [[172, "csv.QUOTE_STRINGS"]], "rfc 4180": [[172, "index-1"]], "sniffer (class in csv)": [[172, "csv.Sniffer"]], "__next__() (csv.csvreader method)": [[172, "csv.csvreader.__next__"]], "csv": [[172, "index-0"], [172, "module-csv"]], "csv.reader function": [[172, "index-3"]], "data": [[172, "index-0"], [344, "index-0"], [425, "index-0"], [425, "index-4"], [427, "index-7"]], "delimiter (csv.dialect attribute)": [[172, "csv.Dialect.delimiter"]], "dialect (csv.csvreader attribute)": [[172, "csv.csvreader.dialect"]], "dialect (csv.csvwriter attribute)": [[172, "csv.csvwriter.dialect"]], "doublequote (csv.dialect attribute)": [[172, "csv.Dialect.doublequote"]], "escapechar (csv.dialect attribute)": [[172, "csv.Dialect.escapechar"]], "excel (class in csv)": [[172, "csv.excel"]], "excel_tab (class in csv)": [[172, "csv.excel_tab"]], "field_size_limit() (in module csv)": [[172, "csv.field_size_limit"]], "fieldnames (csv.dictreader attribute)": [[172, "csv.DictReader.fieldnames"]], "get_dialect() (in module csv)": [[172, "csv.get_dialect"]], "has_header() (csv.sniffer method)": [[172, "csv.Sniffer.has_header"]], "line_num (csv.csvreader attribute)": [[172, "csv.csvreader.line_num"]], "lineterminator (csv.dialect attribute)": [[172, "csv.Dialect.lineterminator"]], "list_dialects() (in module csv)": [[172, "csv.list_dialects"]], "quotechar (csv.dialect attribute)": [[172, "csv.Dialect.quotechar"]], "quoting (csv.dialect attribute)": [[172, "csv.Dialect.quoting"]], "reader() (in module csv)": [[172, "csv.reader"]], "register_dialect() (in module csv)": [[172, "csv.register_dialect"]], "skipinitialspace (csv.dialect attribute)": [[172, "csv.Dialect.skipinitialspace"]], "sniff() (csv.sniffer method)": [[172, "csv.Sniffer.sniff"]], "strict (csv.dialect attribute)": [[172, "csv.Dialect.strict"]], "tabular": [[172, "index-0"]], "unix_dialect (class in csv)": [[172, "csv.unix_dialect"]], "unregister_dialect() (in module csv)": [[172, "csv.unregister_dialect"]], "writeheader() (csv.dictwriter method)": [[172, "csv.DictWriter.writeheader"]], "writer() (in module csv)": [[172, "csv.writer"]], "writerow() (csv.csvwriter method)": [[172, "csv.csvwriter.writerow"]], "writerows() (csv.csvwriter method)": [[172, "csv.csvwriter.writerows"]], "array (class in ctypes)": [[173, "ctypes.Array"]], "bigendianstructure (class in ctypes)": [[173, "ctypes.BigEndianStructure"]], "bigendianunion (class in ctypes)": [[173, "ctypes.BigEndianUnion"]], "cdll (class in ctypes)": [[173, "ctypes.CDLL"]], "cfunctype() (in module ctypes)": [[173, "ctypes.CFUNCTYPE"]], "dllcanunloadnow() (in module ctypes)": [[173, "ctypes.DllCanUnloadNow"]], "dllgetclassobject() (in module ctypes)": [[173, "ctypes.DllGetClassObject"]], "formaterror() (in module ctypes)": [[173, "ctypes.FormatError"]], "getlasterror() (in module ctypes)": [[173, "ctypes.GetLastError"]], "hresult (class in ctypes)": [[173, "ctypes.HRESULT"]], "libraryloader (class in ctypes)": [[173, "ctypes.LibraryLoader"]], "littleendianstructure (class in ctypes)": [[173, "ctypes.LittleEndianStructure"]], "littleendianunion (class in ctypes)": [[173, "ctypes.LittleEndianUnion"]], "loadlibrary() (ctypes.libraryloader method)": [[173, "ctypes.LibraryLoader.LoadLibrary"]], "oledll (class in ctypes)": [[173, "ctypes.OleDLL"]], "pointer() (in module ctypes)": [[173, "ctypes.POINTER"], [173, "ctypes.pointer"]], "pyfunctype() (in module ctypes)": [[173, "ctypes.PYFUNCTYPE"]], "pydll (class in ctypes)": [[173, "ctypes.PyDLL"]], "structure (class in ctypes)": [[173, "ctypes.Structure"]], "union (class in ctypes)": [[173, "ctypes.Union"]], "winfunctype() (in module ctypes)": [[173, "ctypes.WINFUNCTYPE"]], "windll (class in ctypes)": [[173, "ctypes.WinDLL"]], "winerror() (in module ctypes)": [[173, "ctypes.WinError"]], "_cdata (class in ctypes)": [[173, "ctypes._CData"]], "_funcptr (class in ctypes)": [[173, "ctypes._FuncPtr"]], "_pointer (class in ctypes)": [[173, "ctypes._Pointer"]], "_simplecdata (class in ctypes)": [[173, "ctypes._SimpleCData"]], "_anonymous_ (ctypes.structure attribute)": [[173, "ctypes.Structure._anonymous_"]], "_b_base_ (ctypes._cdata attribute)": [[173, "ctypes._CData._b_base_"]], "_b_needsfree_ (ctypes._cdata attribute)": [[173, "ctypes._CData._b_needsfree_"]], "_fields_ (ctypes.structure attribute)": [[173, "ctypes.Structure._fields_"]], "_handle (ctypes.pydll attribute)": [[173, "ctypes.PyDLL._handle"]], "_length_ (ctypes.array attribute)": [[173, "ctypes.Array._length_"]], "_name (ctypes.pydll attribute)": [[173, "ctypes.PyDLL._name"]], "_objects (ctypes._cdata attribute)": [[173, "ctypes._CData._objects"]], "_pack_ (ctypes.structure attribute)": [[173, "ctypes.Structure._pack_"]], "_type_ (ctypes.array attribute)": [[173, "ctypes.Array._type_"]], "_type_ (ctypes._pointer attribute)": [[173, "ctypes._Pointer._type_"]], "addressof() (in module ctypes)": [[173, "ctypes.addressof"]], "alignment() (in module ctypes)": [[173, "ctypes.alignment"]], "argtypes (ctypes._funcptr attribute)": [[173, "ctypes._FuncPtr.argtypes"]], "byref() (in module ctypes)": [[173, "ctypes.byref"]], "c_bool (class in ctypes)": [[173, "ctypes.c_bool"]], "c_byte (class in ctypes)": [[173, "ctypes.c_byte"]], "c_char (class in ctypes)": [[173, "ctypes.c_char"]], "c_char_p (class in ctypes)": [[173, "ctypes.c_char_p"]], "c_double (class in ctypes)": [[173, "ctypes.c_double"]], "c_float (class in ctypes)": [[173, "ctypes.c_float"]], "c_int (class in ctypes)": [[173, "ctypes.c_int"]], "c_int16 (class in ctypes)": [[173, "ctypes.c_int16"]], "c_int32 (class in ctypes)": [[173, "ctypes.c_int32"]], "c_int64 (class in ctypes)": [[173, "ctypes.c_int64"]], "c_int8 (class in ctypes)": [[173, "ctypes.c_int8"]], "c_long (class in ctypes)": [[173, "ctypes.c_long"]], "c_longdouble (class in ctypes)": [[173, "ctypes.c_longdouble"]], "c_longlong (class in ctypes)": [[173, "ctypes.c_longlong"]], "c_short (class in ctypes)": [[173, "ctypes.c_short"]], "c_size_t (class in ctypes)": [[173, "ctypes.c_size_t"]], "c_ssize_t (class in ctypes)": [[173, "ctypes.c_ssize_t"]], "c_time_t (class in ctypes)": [[173, "ctypes.c_time_t"]], "c_ubyte (class in ctypes)": [[173, "ctypes.c_ubyte"]], "c_uint (class in ctypes)": [[173, "ctypes.c_uint"]], "c_uint16 (class in ctypes)": [[173, "ctypes.c_uint16"]], "c_uint32 (class in ctypes)": [[173, "ctypes.c_uint32"]], "c_uint64 (class in ctypes)": [[173, "ctypes.c_uint64"]], "c_uint8 (class in ctypes)": [[173, "ctypes.c_uint8"]], "c_ulong (class in ctypes)": [[173, "ctypes.c_ulong"]], "c_ulonglong (class in ctypes)": [[173, "ctypes.c_ulonglong"]], "c_ushort (class in ctypes)": [[173, "ctypes.c_ushort"]], "c_void_p (class in ctypes)": [[173, "ctypes.c_void_p"]], "c_wchar (class in ctypes)": [[173, "ctypes.c_wchar"]], "c_wchar_p (class in ctypes)": [[173, "ctypes.c_wchar_p"]], "cast() (in module ctypes)": [[173, "ctypes.cast"]], "contents (ctypes._pointer attribute)": [[173, "ctypes._Pointer.contents"]], "create_string_buffer() (in module ctypes)": [[173, "ctypes.create_string_buffer"]], "create_unicode_buffer() (in module ctypes)": [[173, "ctypes.create_unicode_buffer"]], "ctypes": [[173, "module-ctypes"]], "errcheck (ctypes._funcptr attribute)": [[173, "ctypes._FuncPtr.errcheck"]], "find_library() (in module ctypes.util)": [[173, "ctypes.util.find_library"]], "find_msvcrt() (in module ctypes.util)": [[173, "ctypes.util.find_msvcrt"]], "from_address() (ctypes._cdata method)": [[173, "ctypes._CData.from_address"]], "from_buffer() (ctypes._cdata method)": [[173, "ctypes._CData.from_buffer"]], "from_buffer_copy() (ctypes._cdata method)": [[173, "ctypes._CData.from_buffer_copy"]], "from_param() (ctypes._cdata method)": [[173, "ctypes._CData.from_param"]], "get_errno() (in module ctypes)": [[173, "ctypes.get_errno"]], "get_last_error() (in module ctypes)": [[173, "ctypes.get_last_error"]], "in_dll() (ctypes._cdata method)": [[173, "ctypes._CData.in_dll"]], "memmove() (in module ctypes)": [[173, "ctypes.memmove"]], "memset() (in module ctypes)": [[173, "ctypes.memset"]], "py_object (class in ctypes)": [[173, "ctypes.py_object"]], "resize() (in module ctypes)": [[173, "ctypes.resize"]], "restype (ctypes._funcptr attribute)": [[173, "ctypes._FuncPtr.restype"]], "set_errno() (in module ctypes)": [[173, "ctypes.set_errno"]], "set_last_error() (in module ctypes)": [[173, "ctypes.set_last_error"]], "sizeof() (in module ctypes)": [[173, "ctypes.sizeof"]], "string_at() (in module ctypes)": [[173, "ctypes.string_at"]], "value (ctypes._simplecdata attribute)": [[173, "ctypes._SimpleCData.value"]], "wstring_at() (in module ctypes)": [[173, "ctypes.wstring_at"]], "acs_bbss (in module curses)": [[174, "curses.ACS_BBSS"]], "acs_block (in module curses)": [[174, "curses.ACS_BLOCK"]], "acs_board (in module curses)": [[174, "curses.ACS_BOARD"]], "acs_bsbs (in module curses)": [[174, "curses.ACS_BSBS"]], "acs_bssb (in module curses)": [[174, "curses.ACS_BSSB"]], "acs_bsss (in module curses)": [[174, "curses.ACS_BSSS"]], "acs_btee (in module curses)": [[174, "curses.ACS_BTEE"]], "acs_bullet (in module curses)": [[174, "curses.ACS_BULLET"]], "acs_ckboard (in module curses)": [[174, "curses.ACS_CKBOARD"]], "acs_darrow (in module curses)": [[174, "curses.ACS_DARROW"]], "acs_degree (in module curses)": [[174, "curses.ACS_DEGREE"]], "acs_diamond (in module curses)": [[174, "curses.ACS_DIAMOND"]], "acs_gequal (in module curses)": [[174, "curses.ACS_GEQUAL"]], "acs_hline (in module curses)": [[174, "curses.ACS_HLINE"]], "acs_lantern (in module curses)": [[174, "curses.ACS_LANTERN"]], "acs_larrow (in module curses)": [[174, "curses.ACS_LARROW"]], "acs_lequal (in module curses)": [[174, "curses.ACS_LEQUAL"]], "acs_llcorner (in module curses)": [[174, "curses.ACS_LLCORNER"]], "acs_lrcorner (in module curses)": [[174, "curses.ACS_LRCORNER"]], "acs_ltee (in module curses)": [[174, "curses.ACS_LTEE"]], "acs_nequal (in module curses)": [[174, "curses.ACS_NEQUAL"]], "acs_pi (in module curses)": [[174, "curses.ACS_PI"]], "acs_plminus (in module curses)": [[174, "curses.ACS_PLMINUS"]], "acs_plus (in module curses)": [[174, "curses.ACS_PLUS"]], "acs_rarrow (in module curses)": [[174, "curses.ACS_RARROW"]], "acs_rtee (in module curses)": [[174, "curses.ACS_RTEE"]], "acs_s1 (in module curses)": [[174, "curses.ACS_S1"]], "acs_s3 (in module curses)": [[174, "curses.ACS_S3"]], "acs_s7 (in module curses)": [[174, "curses.ACS_S7"]], "acs_s9 (in module curses)": [[174, "curses.ACS_S9"]], "acs_sbbs (in module curses)": [[174, "curses.ACS_SBBS"]], "acs_sbsb (in module curses)": [[174, "curses.ACS_SBSB"]], "acs_sbss (in module curses)": [[174, "curses.ACS_SBSS"]], "acs_ssbb (in module curses)": [[174, "curses.ACS_SSBB"]], "acs_ssbs (in module curses)": [[174, "curses.ACS_SSBS"]], "acs_sssb (in module curses)": [[174, "curses.ACS_SSSB"]], "acs_ssss (in module curses)": [[174, "curses.ACS_SSSS"]], "acs_sterling (in module curses)": [[174, "curses.ACS_STERLING"]], "acs_ttee (in module curses)": [[174, "curses.ACS_TTEE"]], "acs_uarrow (in module curses)": [[174, "curses.ACS_UARROW"]], "acs_ulcorner (in module curses)": [[174, "curses.ACS_ULCORNER"]], "acs_urcorner (in module curses)": [[174, "curses.ACS_URCORNER"]], "acs_vline (in module curses)": [[174, "curses.ACS_VLINE"]], "a_altcharset (in module curses)": [[174, "curses.A_ALTCHARSET"]], "a_attributes (in module curses)": [[174, "curses.A_ATTRIBUTES"]], "a_blink (in module curses)": [[174, "curses.A_BLINK"]], "a_bold (in module curses)": [[174, "curses.A_BOLD"]], "a_chartext (in module curses)": [[174, "curses.A_CHARTEXT"]], "a_color (in module curses)": [[174, "curses.A_COLOR"]], "a_dim (in module curses)": [[174, "curses.A_DIM"]], "a_horizontal (in module curses)": [[174, "curses.A_HORIZONTAL"]], "a_invis (in module curses)": [[174, "curses.A_INVIS"]], "a_italic (in module curses)": [[174, "curses.A_ITALIC"]], "a_left (in module curses)": [[174, "curses.A_LEFT"]], "a_low (in module curses)": [[174, "curses.A_LOW"]], "a_normal (in module curses)": [[174, "curses.A_NORMAL"]], "a_protect (in module curses)": [[174, "curses.A_PROTECT"]], "a_reverse (in module curses)": [[174, "curses.A_REVERSE"]], "a_right (in module curses)": [[174, "curses.A_RIGHT"]], "a_standout (in module curses)": [[174, "curses.A_STANDOUT"]], "a_top (in module curses)": [[174, "curses.A_TOP"]], "a_underline (in module curses)": [[174, "curses.A_UNDERLINE"]], "a_vertical (in module curses)": [[174, "curses.A_VERTICAL"]], "button_alt (in module curses)": [[174, "curses.BUTTON_ALT"]], "button_ctrl (in module curses)": [[174, "curses.BUTTON_CTRL"]], "button_shift (in module curses)": [[174, "curses.BUTTON_SHIFT"]], "buttonn_clicked (in module curses)": [[174, "curses.BUTTONn_CLICKED"]], "buttonn_double_clicked (in module curses)": [[174, "curses.BUTTONn_DOUBLE_CLICKED"]], "buttonn_pressed (in module curses)": [[174, "curses.BUTTONn_PRESSED"]], "buttonn_released (in module curses)": [[174, "curses.BUTTONn_RELEASED"]], "buttonn_triple_clicked (in module curses)": [[174, "curses.BUTTONn_TRIPLE_CLICKED"]], "colors (in module curses)": [[174, "curses.COLORS"]], "color_black (in module curses)": [[174, "curses.COLOR_BLACK"]], "color_blue (in module curses)": [[174, "curses.COLOR_BLUE"]], "color_cyan (in module curses)": [[174, "curses.COLOR_CYAN"]], "color_green (in module curses)": [[174, "curses.COLOR_GREEN"]], "color_magenta (in module curses)": [[174, "curses.COLOR_MAGENTA"]], "color_pairs (in module curses)": [[174, "curses.COLOR_PAIRS"]], "color_red (in module curses)": [[174, "curses.COLOR_RED"]], "color_white (in module curses)": [[174, "curses.COLOR_WHITE"]], "color_yellow (in module curses)": [[174, "curses.COLOR_YELLOW"]], "cols (in module curses)": [[174, "curses.COLS"]], "columns": [[174, "index-4"], [174, "index-6"]], "err (in module curses)": [[174, "curses.ERR"]], "key_a1 (in module curses)": [[174, "curses.KEY_A1"]], "key_a3 (in module curses)": [[174, "curses.KEY_A3"]], "key_b2 (in module curses)": [[174, "curses.KEY_B2"]], "key_backspace (in module curses)": [[174, "curses.KEY_BACKSPACE"]], "key_beg (in module curses)": [[174, "curses.KEY_BEG"]], "key_break (in module curses)": [[174, "curses.KEY_BREAK"]], "key_btab (in module curses)": [[174, "curses.KEY_BTAB"]], "key_c1 (in module curses)": [[174, "curses.KEY_C1"]], "key_c3 (in module curses)": [[174, "curses.KEY_C3"]], "key_cancel (in module curses)": [[174, "curses.KEY_CANCEL"]], "key_catab (in module curses)": [[174, "curses.KEY_CATAB"]], "key_clear (in module curses)": [[174, "curses.KEY_CLEAR"]], "key_close (in module curses)": [[174, "curses.KEY_CLOSE"]], "key_command (in module curses)": [[174, "curses.KEY_COMMAND"]], "key_copy (in module curses)": [[174, "curses.KEY_COPY"]], "key_create (in module curses)": [[174, "curses.KEY_CREATE"]], "key_ctab (in module curses)": [[174, "curses.KEY_CTAB"]], "key_dc (in module curses)": [[174, "curses.KEY_DC"]], "key_dl (in module curses)": [[174, "curses.KEY_DL"]], "key_down (in module curses)": [[174, "curses.KEY_DOWN"]], "key_eic (in module curses)": [[174, "curses.KEY_EIC"]], "key_end (in module curses)": [[174, "curses.KEY_END"]], "key_enter (in module curses)": [[174, "curses.KEY_ENTER"]], "key_eol (in module curses)": [[174, "curses.KEY_EOL"]], "key_eos (in module curses)": [[174, "curses.KEY_EOS"]], "key_exit (in module curses)": [[174, "curses.KEY_EXIT"]], "key_f0 (in module curses)": [[174, "curses.KEY_F0"]], "key_find (in module curses)": [[174, "curses.KEY_FIND"]], "key_fn (in module curses)": [[174, "curses.KEY_Fn"]], "key_help (in module curses)": [[174, "curses.KEY_HELP"]], "key_home (in module curses)": [[174, "curses.KEY_HOME"]], "key_ic (in module curses)": [[174, "curses.KEY_IC"]], "key_il (in module curses)": [[174, "curses.KEY_IL"]], "key_left (in module curses)": [[174, "curses.KEY_LEFT"]], "key_ll (in module curses)": [[174, "curses.KEY_LL"]], "key_mark (in module curses)": [[174, "curses.KEY_MARK"]], "key_max (in module curses)": [[174, "curses.KEY_MAX"]], "key_message (in module curses)": [[174, "curses.KEY_MESSAGE"]], "key_min (in module curses)": [[174, "curses.KEY_MIN"]], "key_mouse (in module curses)": [[174, "curses.KEY_MOUSE"]], "key_move (in module curses)": [[174, "curses.KEY_MOVE"]], "key_next (in module curses)": [[174, "curses.KEY_NEXT"]], "key_npage (in module curses)": [[174, "curses.KEY_NPAGE"]], "key_open (in module curses)": [[174, "curses.KEY_OPEN"]], "key_options (in module curses)": [[174, "curses.KEY_OPTIONS"]], "key_ppage (in module curses)": [[174, "curses.KEY_PPAGE"]], "key_previous (in module curses)": [[174, "curses.KEY_PREVIOUS"]], "key_print (in module curses)": [[174, "curses.KEY_PRINT"]], "key_redo (in module curses)": [[174, "curses.KEY_REDO"]], "key_reference (in module curses)": [[174, "curses.KEY_REFERENCE"]], "key_refresh (in module curses)": [[174, "curses.KEY_REFRESH"]], "key_replace (in module curses)": [[174, "curses.KEY_REPLACE"]], "key_reset (in module curses)": [[174, "curses.KEY_RESET"]], "key_resize (in module curses)": [[174, "curses.KEY_RESIZE"]], "key_restart (in module curses)": [[174, "curses.KEY_RESTART"]], "key_resume (in module curses)": [[174, "curses.KEY_RESUME"]], "key_right (in module curses)": [[174, "curses.KEY_RIGHT"]], "key_save (in module curses)": [[174, "curses.KEY_SAVE"]], "key_sbeg (in module curses)": [[174, "curses.KEY_SBEG"]], "key_scancel (in module curses)": [[174, "curses.KEY_SCANCEL"]], "key_scommand (in module curses)": [[174, "curses.KEY_SCOMMAND"]], "key_scopy (in module curses)": [[174, "curses.KEY_SCOPY"]], "key_screate (in module curses)": [[174, "curses.KEY_SCREATE"]], "key_sdc (in module curses)": [[174, "curses.KEY_SDC"]], "key_sdl (in module curses)": [[174, "curses.KEY_SDL"]], "key_select (in module curses)": [[174, "curses.KEY_SELECT"]], "key_send (in module curses)": [[174, "curses.KEY_SEND"]], "key_seol (in module curses)": [[174, "curses.KEY_SEOL"]], "key_sexit (in module curses)": [[174, "curses.KEY_SEXIT"]], "key_sf (in module curses)": [[174, "curses.KEY_SF"]], "key_sfind (in module curses)": [[174, "curses.KEY_SFIND"]], "key_shelp (in module curses)": [[174, "curses.KEY_SHELP"]], "key_shome (in module curses)": [[174, "curses.KEY_SHOME"]], "key_sic (in module curses)": [[174, "curses.KEY_SIC"]], "key_sleft (in module curses)": [[174, "curses.KEY_SLEFT"]], "key_smessage (in module curses)": [[174, "curses.KEY_SMESSAGE"]], "key_smove (in module curses)": [[174, "curses.KEY_SMOVE"]], "key_snext (in module curses)": [[174, "curses.KEY_SNEXT"]], "key_soptions (in module curses)": [[174, "curses.KEY_SOPTIONS"]], "key_sprevious (in module curses)": [[174, "curses.KEY_SPREVIOUS"]], "key_sprint (in module curses)": [[174, "curses.KEY_SPRINT"]], "key_sr (in module curses)": [[174, "curses.KEY_SR"]], "key_sredo (in module curses)": [[174, "curses.KEY_SREDO"]], "key_sreplace (in module curses)": [[174, "curses.KEY_SREPLACE"]], "key_sreset (in module curses)": [[174, "curses.KEY_SRESET"]], "key_sright (in module curses)": [[174, "curses.KEY_SRIGHT"]], "key_srsume (in module curses)": [[174, "curses.KEY_SRSUME"]], "key_ssave (in module curses)": [[174, "curses.KEY_SSAVE"]], "key_ssuspend (in module curses)": [[174, "curses.KEY_SSUSPEND"]], "key_stab (in module curses)": [[174, "curses.KEY_STAB"]], "key_sundo (in module curses)": [[174, "curses.KEY_SUNDO"]], "key_suspend (in module curses)": [[174, "curses.KEY_SUSPEND"]], "key_undo (in module curses)": [[174, "curses.KEY_UNDO"]], "key_up (in module curses)": [[174, "curses.KEY_UP"]], "lines": [[174, "index-0"], [174, "index-3"], [174, "index-5"]], "lines (in module curses)": [[174, "curses.LINES"]], "ok (in module curses)": [[174, "curses.OK"]], "term": [[174, "index-1"], [174, "index-2"]], "textbox (class in curses.textpad)": [[174, "curses.textpad.Textbox"]], "__version__ (in module curses)": [[174, "curses.__version__"]], "addch() (curses.window method)": [[174, "curses.window.addch"]], "addnstr() (curses.window method)": [[174, "curses.window.addnstr"]], "addstr() (curses.window method)": [[174, "curses.window.addstr"]], "attroff() (curses.window method)": [[174, "curses.window.attroff"]], "attron() (curses.window method)": [[174, "curses.window.attron"]], "attrset() (curses.window method)": [[174, "curses.window.attrset"]], "baudrate() (in module curses)": [[174, "curses.baudrate"]], "beep() (in module curses)": [[174, "curses.beep"]], "bkgd() (curses.window method)": [[174, "curses.window.bkgd"]], "bkgdset() (curses.window method)": [[174, "curses.window.bkgdset"]], "border() (curses.window method)": [[174, "curses.window.border"]], "box() (curses.window method)": [[174, "curses.window.box"]], "can_change_color() (in module curses)": [[174, "curses.can_change_color"]], "cbreak() (in module curses)": [[174, "curses.cbreak"]], "chgat() (curses.window method)": [[174, "curses.window.chgat"]], "clear() (curses.window method)": [[174, "curses.window.clear"]], "clearok() (curses.window method)": [[174, "curses.window.clearok"]], "clrtobot() (curses.window method)": [[174, "curses.window.clrtobot"]], "clrtoeol() (curses.window method)": [[174, "curses.window.clrtoeol"]], "color_content() (in module curses)": [[174, "curses.color_content"]], "color_pair() (in module curses)": [[174, "curses.color_pair"]], "curs_set() (in module curses)": [[174, "curses.curs_set"]], "curses": [[174, "module-curses"]], "curses.textpad": [[174, "module-curses.textpad"]], "cursyncup() (curses.window method)": [[174, "curses.window.cursyncup"]], "def_prog_mode() (in module curses)": [[174, "curses.def_prog_mode"]], "def_shell_mode() (in module curses)": [[174, "curses.def_shell_mode"]], "delay_output() (in module curses)": [[174, "curses.delay_output"]], "delch() (curses.window method)": [[174, "curses.window.delch"]], "deleteln() (curses.window method)": [[174, "curses.window.deleteln"]], "derwin() (curses.window method)": [[174, "curses.window.derwin"]], "do_command() (curses.textpad.textbox method)": [[174, "curses.textpad.Textbox.do_command"]], "doupdate() (in module curses)": [[174, "curses.doupdate"]], "echo() (in module curses)": [[174, "curses.echo"]], "echochar() (curses.window method)": [[174, "curses.window.echochar"]], "edit() (curses.textpad.textbox method)": [[174, "curses.textpad.Textbox.edit"]], "enclose() (curses.window method)": [[174, "curses.window.enclose"]], "encoding (curses.window attribute)": [[174, "curses.window.encoding"]], "endwin() (in module curses)": [[174, "curses.endwin"]], "erase() (curses.window method)": [[174, "curses.window.erase"]], "erasechar() (in module curses)": [[174, "curses.erasechar"]], "filter() (in module curses)": [[174, "curses.filter"]], "flash() (in module curses)": [[174, "curses.flash"]], "flushinp() (in module curses)": [[174, "curses.flushinp"]], "gather() (curses.textpad.textbox method)": [[174, "curses.textpad.Textbox.gather"]], "get_escdelay() (in module curses)": [[174, "curses.get_escdelay"]], "get_tabsize() (in module curses)": [[174, "curses.get_tabsize"]], "get_wch() (curses.window method)": [[174, "curses.window.get_wch"]], "getbegyx() (curses.window method)": [[174, "curses.window.getbegyx"]], "getbkgd() (curses.window method)": [[174, "curses.window.getbkgd"]], "getch() (curses.window method)": [[174, "curses.window.getch"]], "getkey() (curses.window method)": [[174, "curses.window.getkey"]], "getmaxyx() (curses.window method)": [[174, "curses.window.getmaxyx"]], "getmouse() (in module curses)": [[174, "curses.getmouse"]], "getparyx() (curses.window method)": [[174, "curses.window.getparyx"]], "getstr() (curses.window method)": [[174, "curses.window.getstr"]], "getsyx() (in module curses)": [[174, "curses.getsyx"]], "getwin() (in module curses)": [[174, "curses.getwin"]], "getyx() (curses.window method)": [[174, "curses.window.getyx"]], "halfdelay() (in module curses)": [[174, "curses.halfdelay"]], "has_colors() (in module curses)": [[174, "curses.has_colors"]], "has_extended_color_support() (in module curses)": [[174, "curses.has_extended_color_support"]], "has_ic() (in module curses)": [[174, "curses.has_ic"]], "has_il() (in module curses)": [[174, "curses.has_il"]], "has_key() (in module curses)": [[174, "curses.has_key"]], "hline() (curses.window method)": [[174, "curses.window.hline"]], "idcok() (curses.window method)": [[174, "curses.window.idcok"]], "idlok() (curses.window method)": [[174, "curses.window.idlok"]], "immedok() (curses.window method)": [[174, "curses.window.immedok"]], "inch() (curses.window method)": [[174, "curses.window.inch"]], "init_color() (in module curses)": [[174, "curses.init_color"]], "init_pair() (in module curses)": [[174, "curses.init_pair"]], "initscr() (in module curses)": [[174, "curses.initscr"]], "insch() (curses.window method)": [[174, "curses.window.insch"]], "insdelln() (curses.window method)": [[174, "curses.window.insdelln"]], "insertln() (curses.window method)": [[174, "curses.window.insertln"]], "insnstr() (curses.window method)": [[174, "curses.window.insnstr"]], "insstr() (curses.window method)": [[174, "curses.window.insstr"]], "instr() (curses.window method)": [[174, "curses.window.instr"]], "is_linetouched() (curses.window method)": [[174, "curses.window.is_linetouched"]], "is_term_resized() (in module curses)": [[174, "curses.is_term_resized"]], "is_wintouched() (curses.window method)": [[174, "curses.window.is_wintouched"]], "isendwin() (in module curses)": [[174, "curses.isendwin"]], "keyname() (in module curses)": [[174, "curses.keyname"]], "keypad() (curses.window method)": [[174, "curses.window.keypad"]], "killchar() (in module curses)": [[174, "curses.killchar"]], "leaveok() (curses.window method)": [[174, "curses.window.leaveok"]], "longname() (in module curses)": [[174, "curses.longname"]], "meta() (in module curses)": [[174, "curses.meta"]], "mouseinterval() (in module curses)": [[174, "curses.mouseinterval"]], "mousemask() (in module curses)": [[174, "curses.mousemask"]], "move() (curses.window method)": [[174, "curses.window.move"]], "mvderwin() (curses.window method)": [[174, "curses.window.mvderwin"]], "mvwin() (curses.window method)": [[174, "curses.window.mvwin"]], "napms() (in module curses)": [[174, "curses.napms"]], "ncurses_version (in module curses)": [[174, "curses.ncurses_version"]], "newpad() (in module curses)": [[174, "curses.newpad"]], "newwin() (in module curses)": [[174, "curses.newwin"]], "nl() (in module curses)": [[174, "curses.nl"]], "nocbreak() (in module curses)": [[174, "curses.nocbreak"]], "nodelay() (curses.window method)": [[174, "curses.window.nodelay"]], "noecho() (in module curses)": [[174, "curses.noecho"]], "nonl() (in module curses)": [[174, "curses.nonl"]], "noqiflush() (in module curses)": [[174, "curses.noqiflush"]], "noraw() (in module curses)": [[174, "curses.noraw"]], "notimeout() (curses.window method)": [[174, "curses.window.notimeout"]], "noutrefresh() (curses.window method)": [[174, "curses.window.noutrefresh"]], "overlay() (curses.window method)": [[174, "curses.window.overlay"]], "overwrite() (curses.window method)": [[174, "curses.window.overwrite"]], "pair_content() (in module curses)": [[174, "curses.pair_content"]], "pair_number() (in module curses)": [[174, "curses.pair_number"]], "putp() (in module curses)": [[174, "curses.putp"]], "putwin() (curses.window method)": [[174, "curses.window.putwin"]], "qiflush() (in module curses)": [[174, "curses.qiflush"]], "raw() (in module curses)": [[174, "curses.raw"]], "rectangle() (in module curses.textpad)": [[174, "curses.textpad.rectangle"]], "redrawln() (curses.window method)": [[174, "curses.window.redrawln"]], "redrawwin() (curses.window method)": [[174, "curses.window.redrawwin"]], "refresh() (curses.window method)": [[174, "curses.window.refresh"]], "reset_prog_mode() (in module curses)": [[174, "curses.reset_prog_mode"]], "reset_shell_mode() (in module curses)": [[174, "curses.reset_shell_mode"]], "resetty() (in module curses)": [[174, "curses.resetty"]], "resize() (curses.window method)": [[174, "curses.window.resize"]], "resize_term() (in module curses)": [[174, "curses.resize_term"]], "resizeterm() (in module curses)": [[174, "curses.resizeterm"]], "savetty() (in module curses)": [[174, "curses.savetty"]], "scroll() (curses.window method)": [[174, "curses.window.scroll"]], "scrollok() (curses.window method)": [[174, "curses.window.scrollok"]], "set_escdelay() (in module curses)": [[174, "curses.set_escdelay"]], "set_tabsize() (in module curses)": [[174, "curses.set_tabsize"]], "setscrreg() (curses.window method)": [[174, "curses.window.setscrreg"]], "setsyx() (in module curses)": [[174, "curses.setsyx"]], "setupterm() (in module curses)": [[174, "curses.setupterm"]], "standend() (curses.window method)": [[174, "curses.window.standend"]], "standout() (curses.window method)": [[174, "curses.window.standout"]], "start_color() (in module curses)": [[174, "curses.start_color"]], "stripspaces (curses.textpad.textbox attribute)": [[174, "curses.textpad.Textbox.stripspaces"]], "subpad() (curses.window method)": [[174, "curses.window.subpad"]], "subwin() (curses.window method)": [[174, "curses.window.subwin"]], "syncdown() (curses.window method)": [[174, "curses.window.syncdown"]], "syncok() (curses.window method)": [[174, "curses.window.syncok"]], "syncup() (curses.window method)": [[174, "curses.window.syncup"]], "termattrs() (in module curses)": [[174, "curses.termattrs"]], "termname() (in module curses)": [[174, "curses.termname"]], "tigetflag() (in module curses)": [[174, "curses.tigetflag"]], "tigetnum() (in module curses)": [[174, "curses.tigetnum"]], "tigetstr() (in module curses)": [[174, "curses.tigetstr"]], "timeout() (curses.window method)": [[174, "curses.window.timeout"]], "touchline() (curses.window method)": [[174, "curses.window.touchline"]], "touchwin() (curses.window method)": [[174, "curses.window.touchwin"]], "tparm() (in module curses)": [[174, "curses.tparm"]], "typeahead() (in module curses)": [[174, "curses.typeahead"]], "unctrl() (in module curses)": [[174, "curses.unctrl"]], "unget_wch() (in module curses)": [[174, "curses.unget_wch"]], "ungetch() (in module curses)": [[174, "curses.ungetch"]], "ungetmouse() (in module curses)": [[174, "curses.ungetmouse"]], "untouchwin() (curses.window method)": [[174, "curses.window.untouchwin"]], "update_lines_cols() (in module curses)": [[174, "curses.update_lines_cols"]], "use_default_colors() (in module curses)": [[174, "curses.use_default_colors"]], "use_env() (in module curses)": [[174, "curses.use_env"]], "version (in module curses)": [[174, "curses.version"]], "vline() (curses.window method)": [[174, "curses.window.vline"]], "wrapper() (in module curses)": [[174, "curses.wrapper"]], "ack (in module curses.ascii)": [[175, "curses.ascii.ACK"]], "bel (in module curses.ascii)": [[175, "curses.ascii.BEL"]], "bs (in module curses.ascii)": [[175, "curses.ascii.BS"]], "can (in module curses.ascii)": [[175, "curses.ascii.CAN"]], "cr (in module curses.ascii)": [[175, "curses.ascii.CR"]], "dc1 (in module curses.ascii)": [[175, "curses.ascii.DC1"]], "dc2 (in module curses.ascii)": [[175, "curses.ascii.DC2"]], "dc3 (in module curses.ascii)": [[175, "curses.ascii.DC3"]], "dc4 (in module curses.ascii)": [[175, "curses.ascii.DC4"]], "del (in module curses.ascii)": [[175, "curses.ascii.DEL"]], "dle (in module curses.ascii)": [[175, "curses.ascii.DLE"]], "em (in module curses.ascii)": [[175, "curses.ascii.EM"]], "enq (in module curses.ascii)": [[175, "curses.ascii.ENQ"]], "eot (in module curses.ascii)": [[175, "curses.ascii.EOT"]], "esc (in module curses.ascii)": [[175, "curses.ascii.ESC"]], "etb (in module curses.ascii)": [[175, "curses.ascii.ETB"]], "etx (in module curses.ascii)": [[175, "curses.ascii.ETX"]], "ff (in module curses.ascii)": [[175, "curses.ascii.FF"]], "fs (in module curses.ascii)": [[175, "curses.ascii.FS"]], "gs (in module curses.ascii)": [[175, "curses.ascii.GS"]], "ht (in module curses.ascii)": [[175, "curses.ascii.HT"]], "lf (in module curses.ascii)": [[175, "curses.ascii.LF"]], "nak (in module curses.ascii)": [[175, "curses.ascii.NAK"]], "nl (in module curses.ascii)": [[175, "curses.ascii.NL"]], "nul (in module curses.ascii)": [[175, "curses.ascii.NUL"]], "rs (in module curses.ascii)": [[175, "curses.ascii.RS"]], "si (in module curses.ascii)": [[175, "curses.ascii.SI"]], "so (in module curses.ascii)": [[175, "curses.ascii.SO"]], "soh (in module curses.ascii)": [[175, "curses.ascii.SOH"]], "sp (in module curses.ascii)": [[175, "curses.ascii.SP"]], "stx (in module curses.ascii)": [[175, "curses.ascii.STX"]], "sub (in module curses.ascii)": [[175, "curses.ascii.SUB"]], "syn (in module curses.ascii)": [[175, "curses.ascii.SYN"]], "tab (in module curses.ascii)": [[175, "curses.ascii.TAB"]], "us (in module curses.ascii)": [[175, "curses.ascii.US"]], "vt (in module curses.ascii)": [[175, "curses.ascii.VT"]], "^ (caret)": [[175, "index-0"], [190, "index-1"], [316, "index-1"], [316, "index-13"], [341, "index-16"], [342, "index-3"], [378, "index-1"], [427, "index-75"]], "alt() (in module curses.ascii)": [[175, "curses.ascii.alt"]], "ascii() (in module curses.ascii)": [[175, "curses.ascii.ascii"]], "controlnames (in module curses.ascii)": [[175, "curses.ascii.controlnames"]], "ctrl() (in module curses.ascii)": [[175, "curses.ascii.ctrl"]], "curses.ascii": [[175, "module-curses.ascii"]], "in curses module": [[175, "index-0"]], "isalnum() (in module curses.ascii)": [[175, "curses.ascii.isalnum"]], "isalpha() (in module curses.ascii)": [[175, "curses.ascii.isalpha"]], "isascii() (in module curses.ascii)": [[175, "curses.ascii.isascii"]], "isblank() (in module curses.ascii)": [[175, "curses.ascii.isblank"]], "iscntrl() (in module curses.ascii)": [[175, "curses.ascii.iscntrl"]], "isctrl() (in module curses.ascii)": [[175, "curses.ascii.isctrl"]], "isdigit() (in module curses.ascii)": [[175, "curses.ascii.isdigit"]], "isgraph() (in module curses.ascii)": [[175, "curses.ascii.isgraph"]], "islower() (in module curses.ascii)": [[175, "curses.ascii.islower"]], "ismeta() (in module curses.ascii)": [[175, "curses.ascii.ismeta"]], "isprint() (in module curses.ascii)": [[175, "curses.ascii.isprint"]], "ispunct() (in module curses.ascii)": [[175, "curses.ascii.ispunct"]], "isspace() (in module curses.ascii)": [[175, "curses.ascii.isspace"]], "isupper() (in module curses.ascii)": [[175, "curses.ascii.isupper"]], "isxdigit() (in module curses.ascii)": [[175, "curses.ascii.isxdigit"]], "unctrl() (in module curses.ascii)": [[175, "curses.ascii.unctrl"]], "above() (curses.panel.panel method)": [[176, "curses.panel.Panel.above"]], "below() (curses.panel.panel method)": [[176, "curses.panel.Panel.below"]], "bottom() (curses.panel.panel method)": [[176, "curses.panel.Panel.bottom"]], "bottom_panel() (in module curses.panel)": [[176, "curses.panel.bottom_panel"]], "curses.panel": [[176, "module-curses.panel"]], "hidden() (curses.panel.panel method)": [[176, "curses.panel.Panel.hidden"]], "hide() (curses.panel.panel method)": [[176, "curses.panel.Panel.hide"]], "move() (curses.panel.panel method)": [[176, "curses.panel.Panel.move"]], "new_panel() (in module curses.panel)": [[176, "curses.panel.new_panel"]], "replace() (curses.panel.panel method)": [[176, "curses.panel.Panel.replace"]], "set_userptr() (curses.panel.panel method)": [[176, "curses.panel.Panel.set_userptr"]], "show() (curses.panel.panel method)": [[176, "curses.panel.Panel.show"]], "top() (curses.panel.panel method)": [[176, "curses.panel.Panel.top"]], "top_panel() (in module curses.panel)": [[176, "curses.panel.top_panel"]], "update_panels() (in module curses.panel)": [[176, "curses.panel.update_panels"]], "userptr() (curses.panel.panel method)": [[176, "curses.panel.Panel.userptr"]], "window() (curses.panel.panel method)": [[176, "curses.panel.Panel.window"]], "field (class in dataclasses)": [[178, "dataclasses.Field"]], "frozeninstanceerror": [[178, "dataclasses.FrozenInstanceError"]], "kw_only (in module dataclasses)": [[178, "dataclasses.KW_ONLY"]], "missing (in module dataclasses)": [[178, "dataclasses.MISSING"]], "pep 557": [[178, "index-0"], [477, "index-29"]], "__post_init__() (in module dataclasses)": [[178, "dataclasses.__post_init__"]], "asdict() (in module dataclasses)": [[178, "dataclasses.asdict"]], "astuple() (in module dataclasses)": [[178, "dataclasses.astuple"]], "dataclass() (in module dataclasses)": [[178, "dataclasses.dataclass"]], "dataclasses": [[178, "module-dataclasses"]], "field() (in module dataclasses)": [[178, "dataclasses.field"]], "fields() (in module dataclasses)": [[178, "dataclasses.fields"]], "is_dataclass() (in module dataclasses)": [[178, "dataclasses.is_dataclass"]], "make_dataclass() (in module dataclasses)": [[178, "dataclasses.make_dataclass"]], "replace() (in module dataclasses)": [[178, "dataclasses.replace"]], "maxyear (in module datetime)": [[180, "datetime.MAXYEAR"]], "minyear (in module datetime)": [[180, "datetime.MINYEAR"]], "utc (in module datetime)": [[180, "datetime.UTC"]], "__format__() (datetime.date method)": [[180, "datetime.date.__format__"]], "__format__() (datetime.datetime method)": [[180, "datetime.datetime.__format__"]], "__format__() (datetime.time method)": [[180, "datetime.time.__format__"]], "__str__() (datetime.date method)": [[180, "datetime.date.__str__"]], "__str__() (datetime.datetime method)": [[180, "datetime.datetime.__str__"]], "__str__() (datetime.time method)": [[180, "datetime.time.__str__"]], "astimezone() (datetime.datetime method)": [[180, "datetime.datetime.astimezone"]], "combine() (datetime.datetime class method)": [[180, "datetime.datetime.combine"]], "ctime() (datetime.date method)": [[180, "datetime.date.ctime"]], "ctime() (datetime.datetime method)": [[180, "datetime.datetime.ctime"]], "date (class in datetime)": [[180, "datetime.date"]], "date() (datetime.datetime method)": [[180, "datetime.datetime.date"]], "datetime": [[180, "module-datetime"]], "datetime (class in datetime)": [[180, "datetime.datetime"]], "datetime format": [[180, "index-0"], [363, "index-11"], [363, "index-9"]], "day (datetime.date attribute)": [[180, "datetime.date.day"]], "day (datetime.datetime attribute)": [[180, "datetime.datetime.day"]], "dst() (datetime.datetime method)": [[180, "datetime.datetime.dst"]], "dst() (datetime.time method)": [[180, "datetime.time.dst"]], "dst() (datetime.timezone method)": [[180, "datetime.timezone.dst"]], "dst() (datetime.tzinfo method)": [[180, "datetime.tzinfo.dst"]], "fold (datetime.datetime attribute)": [[180, "datetime.datetime.fold"]], "fold (datetime.time attribute)": [[180, "datetime.time.fold"]], "fromisocalendar() (datetime.date class method)": [[180, "datetime.date.fromisocalendar"]], "fromisocalendar() (datetime.datetime class method)": [[180, "datetime.datetime.fromisocalendar"]], "fromisoformat() (datetime.date class method)": [[180, "datetime.date.fromisoformat"]], "fromisoformat() (datetime.datetime class method)": [[180, "datetime.datetime.fromisoformat"]], "fromisoformat() (datetime.time class method)": [[180, "datetime.time.fromisoformat"]], "fromordinal() (datetime.date class method)": [[180, "datetime.date.fromordinal"]], "fromordinal() (datetime.datetime class method)": [[180, "datetime.datetime.fromordinal"]], "fromtimestamp() (datetime.date class method)": [[180, "datetime.date.fromtimestamp"]], "fromtimestamp() (datetime.datetime class method)": [[180, "datetime.datetime.fromtimestamp"]], "fromutc() (datetime.timezone method)": [[180, "datetime.timezone.fromutc"]], "fromutc() (datetime.tzinfo method)": [[180, "datetime.tzinfo.fromutc"]], "hour (datetime.datetime attribute)": [[180, "datetime.datetime.hour"]], "hour (datetime.time attribute)": [[180, "datetime.time.hour"]], "isocalendar() (datetime.date method)": [[180, "datetime.date.isocalendar"]], "isocalendar() (datetime.datetime method)": [[180, "datetime.datetime.isocalendar"]], "isoformat() (datetime.date method)": [[180, "datetime.date.isoformat"]], "isoformat() (datetime.datetime method)": [[180, "datetime.datetime.isoformat"]], "isoformat() (datetime.time method)": [[180, "datetime.time.isoformat"]], "isoweekday() (datetime.date method)": [[180, "datetime.date.isoweekday"]], "isoweekday() (datetime.datetime method)": [[180, "datetime.datetime.isoweekday"]], "max (datetime.date attribute)": [[180, "datetime.date.max"]], "max (datetime.datetime attribute)": [[180, "datetime.datetime.max"]], "max (datetime.time attribute)": [[180, "datetime.time.max"]], "max (datetime.timedelta attribute)": [[180, "datetime.timedelta.max"]], "microsecond (datetime.datetime attribute)": [[180, "datetime.datetime.microsecond"]], "microsecond (datetime.time attribute)": [[180, "datetime.time.microsecond"]], "min (datetime.date attribute)": [[180, "datetime.date.min"]], "min (datetime.datetime attribute)": [[180, "datetime.datetime.min"]], "min (datetime.time attribute)": [[180, "datetime.time.min"]], "min (datetime.timedelta attribute)": [[180, "datetime.timedelta.min"]], "minute (datetime.datetime attribute)": [[180, "datetime.datetime.minute"]], "minute (datetime.time attribute)": [[180, "datetime.time.minute"]], "month (datetime.date attribute)": [[180, "datetime.date.month"]], "month (datetime.datetime attribute)": [[180, "datetime.datetime.month"]], "now() (datetime.datetime class method)": [[180, "datetime.datetime.now"]], "replace() (datetime.date method)": [[180, "datetime.date.replace"]], "replace() (datetime.datetime method)": [[180, "datetime.datetime.replace"]], "replace() (datetime.time method)": [[180, "datetime.time.replace"]], "resolution (datetime.date attribute)": [[180, "datetime.date.resolution"]], "resolution (datetime.datetime attribute)": [[180, "datetime.datetime.resolution"]], "resolution (datetime.time attribute)": [[180, "datetime.time.resolution"]], "resolution (datetime.timedelta attribute)": [[180, "datetime.timedelta.resolution"]], "second (datetime.datetime attribute)": [[180, "datetime.datetime.second"]], "second (datetime.time attribute)": [[180, "datetime.time.second"]], "strftime() (datetime.date method)": [[180, "datetime.date.strftime"]], "strftime() (datetime.datetime method)": [[180, "datetime.datetime.strftime"]], "strftime() (datetime.time method)": [[180, "datetime.time.strftime"]], "strptime() (datetime.datetime class method)": [[180, "datetime.datetime.strptime"]], "time (class in datetime)": [[180, "datetime.time"]], "time() (datetime.datetime method)": [[180, "datetime.datetime.time"]], "timedelta (class in datetime)": [[180, "datetime.timedelta"]], "timestamp() (datetime.datetime method)": [[180, "datetime.datetime.timestamp"]], "timetuple() (datetime.date method)": [[180, "datetime.date.timetuple"]], "timetuple() (datetime.datetime method)": [[180, "datetime.datetime.timetuple"]], "timetz() (datetime.datetime method)": [[180, "datetime.datetime.timetz"]], "timezone (class in datetime)": [[180, "datetime.timezone"]], "today() (datetime.date class method)": [[180, "datetime.date.today"]], "today() (datetime.datetime class method)": [[180, "datetime.datetime.today"]], "toordinal() (datetime.date method)": [[180, "datetime.date.toordinal"]], "toordinal() (datetime.datetime method)": [[180, "datetime.datetime.toordinal"]], "total_seconds() (datetime.timedelta method)": [[180, "datetime.timedelta.total_seconds"]], "tzinfo (class in datetime)": [[180, "datetime.tzinfo"]], "tzinfo (datetime.datetime attribute)": [[180, "datetime.datetime.tzinfo"]], "tzinfo (datetime.time attribute)": [[180, "datetime.time.tzinfo"]], "tzname() (datetime.datetime method)": [[180, "datetime.datetime.tzname"]], "tzname() (datetime.time method)": [[180, "datetime.time.tzname"]], "tzname() (datetime.timezone method)": [[180, "datetime.timezone.tzname"]], "tzname() (datetime.tzinfo method)": [[180, "datetime.tzinfo.tzname"]], "utc (datetime.timezone attribute)": [[180, "datetime.timezone.utc"]], "utcfromtimestamp() (datetime.datetime class method)": [[180, "datetime.datetime.utcfromtimestamp"]], "utcnow() (datetime.datetime class method)": [[180, "datetime.datetime.utcnow"]], "utcoffset() (datetime.datetime method)": [[180, "datetime.datetime.utcoffset"]], "utcoffset() (datetime.time method)": [[180, "datetime.time.utcoffset"]], "utcoffset() (datetime.timezone method)": [[180, "datetime.timezone.utcoffset"]], "utcoffset() (datetime.tzinfo method)": [[180, "datetime.tzinfo.utcoffset"]], "utctimetuple() (datetime.datetime method)": [[180, "datetime.datetime.utctimetuple"]], "weekday() (datetime.date method)": [[180, "datetime.date.weekday"]], "weekday() (datetime.datetime method)": [[180, "datetime.datetime.weekday"]], "year (datetime.date attribute)": [[180, "datetime.date.year"]], "year (datetime.datetime attribute)": [[180, "datetime.datetime.year"]], "close() (dbm.dumb.dumbdbm method)": [[181, "dbm.dumb.dumbdbm.close"]], "close() (dbm.gnu.gdbm method)": [[181, "dbm.gnu.gdbm.close"]], "close() (dbm.ndbm.ndbm method)": [[181, "dbm.ndbm.ndbm.close"]], "databases": [[181, "index-0"]], "dbm": [[181, "module-dbm"]], "dbm.dumb": [[181, "module-dbm.dumb"]], "dbm.gnu": [[181, "module-dbm.gnu"], [327, "index-1"], [425, "index-32"]], "dbm.ndbm": [[181, "module-dbm.ndbm"], [327, "index-1"], [425, "index-32"]], "firstkey() (dbm.gnu.gdbm method)": [[181, "dbm.gnu.gdbm.firstkey"]], "library (in module dbm.ndbm)": [[181, "dbm.ndbm.library"]], "nextkey() (dbm.gnu.gdbm method)": [[181, "dbm.gnu.gdbm.nextkey"]], "open() (in module dbm)": [[181, "dbm.open"]], "open() (in module dbm.dumb)": [[181, "dbm.dumb.open"]], "open() (in module dbm.gnu)": [[181, "dbm.gnu.open"]], "open() (in module dbm.ndbm)": [[181, "dbm.ndbm.open"]], "open_flags (in module dbm.gnu)": [[181, "dbm.gnu.open_flags"]], "reorganize() (dbm.gnu.gdbm method)": [[181, "dbm.gnu.gdbm.reorganize"]], "sync() (dbm.dumb.dumbdbm method)": [[181, "dbm.dumb.dumbdbm.sync"]], "sync() (dbm.gnu.gdbm method)": [[181, "dbm.gnu.gdbm.sync"]], "whichdb() (in module dbm)": [[181, "dbm.whichdb"]], "basiccontext (class in decimal)": [[183, "decimal.BasicContext"]], "clamped (class in decimal)": [[183, "decimal.Clamped"]], "context (class in decimal)": [[183, "decimal.Context"]], "decimal (class in decimal)": [[183, "decimal.Decimal"]], "decimalexception (class in decimal)": [[183, "decimal.DecimalException"]], "defaultcontext (class in decimal)": [[183, "decimal.DefaultContext"]], "divisionbyzero (class in decimal)": [[183, "decimal.DivisionByZero"]], "etiny() (decimal.context method)": [[183, "decimal.Context.Etiny"]], "etop() (decimal.context method)": [[183, "decimal.Context.Etop"]], "extendedcontext (class in decimal)": [[183, "decimal.ExtendedContext"]], "floatoperation (class in decimal)": [[183, "decimal.FloatOperation"]], "have_contextvar (in module decimal)": [[183, "decimal.HAVE_CONTEXTVAR"]], "have_threads (in module decimal)": [[183, "decimal.HAVE_THREADS"]], "inexact (class in decimal)": [[183, "decimal.Inexact"]], "invalidoperation (class in decimal)": [[183, "decimal.InvalidOperation"]], "max_emax (in module decimal)": [[183, "decimal.MAX_EMAX"]], "max_prec (in module decimal)": [[183, "decimal.MAX_PREC"]], "min_emin (in module decimal)": [[183, "decimal.MIN_EMIN"]], "min_etiny (in module decimal)": [[183, "decimal.MIN_ETINY"]], "overflow (class in decimal)": [[183, "decimal.Overflow"]], "round_05up (in module decimal)": [[183, "decimal.ROUND_05UP"]], "round_ceiling (in module decimal)": [[183, "decimal.ROUND_CEILING"]], "round_down (in module decimal)": [[183, "decimal.ROUND_DOWN"]], "round_floor (in module decimal)": [[183, "decimal.ROUND_FLOOR"]], "round_half_down (in module decimal)": [[183, "decimal.ROUND_HALF_DOWN"]], "round_half_even (in module decimal)": [[183, "decimal.ROUND_HALF_EVEN"]], "round_half_up (in module decimal)": [[183, "decimal.ROUND_HALF_UP"]], "round_up (in module decimal)": [[183, "decimal.ROUND_UP"]], "rounded (class in decimal)": [[183, "decimal.Rounded"]], "subnormal (class in decimal)": [[183, "decimal.Subnormal"]], "underflow (class in decimal)": [[183, "decimal.Underflow"]], "abs() (decimal.context method)": [[183, "decimal.Context.abs"]], "add() (decimal.context method)": [[183, "decimal.Context.add"]], "adjusted() (decimal.decimal method)": [[183, "decimal.Decimal.adjusted"]], "as_integer_ratio() (decimal.decimal method)": [[183, "decimal.Decimal.as_integer_ratio"]], "as_tuple() (decimal.decimal method)": [[183, "decimal.Decimal.as_tuple"]], "canonical() (decimal.context method)": [[183, "decimal.Context.canonical"]], "canonical() (decimal.decimal method)": [[183, "decimal.Decimal.canonical"]], "clear_flags() (decimal.context method)": [[183, "decimal.Context.clear_flags"]], "clear_traps() (decimal.context method)": [[183, "decimal.Context.clear_traps"]], "compare() (decimal.context method)": [[183, "decimal.Context.compare"]], "compare() (decimal.decimal method)": [[183, "decimal.Decimal.compare"]], "compare_signal() (decimal.context method)": [[183, "decimal.Context.compare_signal"]], "compare_signal() (decimal.decimal method)": [[183, "decimal.Decimal.compare_signal"]], "compare_total() (decimal.context method)": [[183, "decimal.Context.compare_total"]], "compare_total() (decimal.decimal method)": [[183, "decimal.Decimal.compare_total"]], "compare_total_mag() (decimal.context method)": [[183, "decimal.Context.compare_total_mag"]], "compare_total_mag() (decimal.decimal method)": [[183, "decimal.Decimal.compare_total_mag"]], "conjugate() (decimal.decimal method)": [[183, "decimal.Decimal.conjugate"]], "copy() (decimal.context method)": [[183, "decimal.Context.copy"]], "copy_abs() (decimal.context method)": [[183, "decimal.Context.copy_abs"]], "copy_abs() (decimal.decimal method)": [[183, "decimal.Decimal.copy_abs"]], "copy_decimal() (decimal.context method)": [[183, "decimal.Context.copy_decimal"]], "copy_negate() (decimal.context method)": [[183, "decimal.Context.copy_negate"]], "copy_negate() (decimal.decimal method)": [[183, "decimal.Decimal.copy_negate"]], "copy_sign() (decimal.context method)": [[183, "decimal.Context.copy_sign"]], "copy_sign() (decimal.decimal method)": [[183, "decimal.Decimal.copy_sign"]], "create_decimal() (decimal.context method)": [[183, "decimal.Context.create_decimal"]], "create_decimal_from_float() (decimal.context method)": [[183, "decimal.Context.create_decimal_from_float"]], "decimal": [[183, "module-decimal"]], "divide() (decimal.context method)": [[183, "decimal.Context.divide"]], "divide_int() (decimal.context method)": [[183, "decimal.Context.divide_int"]], "divmod() (decimal.context method)": [[183, "decimal.Context.divmod"]], "exp() (decimal.context method)": [[183, "decimal.Context.exp"]], "exp() (decimal.decimal method)": [[183, "decimal.Decimal.exp"]], "fma() (decimal.context method)": [[183, "decimal.Context.fma"]], "fma() (decimal.decimal method)": [[183, "decimal.Decimal.fma"]], "from_float() (decimal.decimal class method)": [[183, "decimal.Decimal.from_float"]], "getcontext() (in module decimal)": [[183, "decimal.getcontext"]], "is_canonical() (decimal.context method)": [[183, "decimal.Context.is_canonical"]], "is_canonical() (decimal.decimal method)": [[183, "decimal.Decimal.is_canonical"]], "is_finite() (decimal.context method)": [[183, "decimal.Context.is_finite"]], "is_finite() (decimal.decimal method)": [[183, "decimal.Decimal.is_finite"]], "is_infinite() (decimal.context method)": [[183, "decimal.Context.is_infinite"]], "is_infinite() (decimal.decimal method)": [[183, "decimal.Decimal.is_infinite"]], "is_nan() (decimal.context method)": [[183, "decimal.Context.is_nan"]], "is_nan() (decimal.decimal method)": [[183, "decimal.Decimal.is_nan"]], "is_normal() (decimal.context method)": [[183, "decimal.Context.is_normal"]], "is_normal() (decimal.decimal method)": [[183, "decimal.Decimal.is_normal"]], "is_qnan() (decimal.context method)": [[183, "decimal.Context.is_qnan"]], "is_qnan() (decimal.decimal method)": [[183, "decimal.Decimal.is_qnan"]], "is_signed() (decimal.context method)": [[183, "decimal.Context.is_signed"]], "is_signed() (decimal.decimal method)": [[183, "decimal.Decimal.is_signed"]], "is_snan() (decimal.context method)": [[183, "decimal.Context.is_snan"]], "is_snan() (decimal.decimal method)": [[183, "decimal.Decimal.is_snan"]], "is_subnormal() (decimal.context method)": [[183, "decimal.Context.is_subnormal"]], "is_subnormal() (decimal.decimal method)": [[183, "decimal.Decimal.is_subnormal"]], "is_zero() (decimal.context method)": [[183, "decimal.Context.is_zero"]], "is_zero() (decimal.decimal method)": [[183, "decimal.Decimal.is_zero"]], "ln() (decimal.context method)": [[183, "decimal.Context.ln"]], "ln() (decimal.decimal method)": [[183, "decimal.Decimal.ln"]], "localcontext() (in module decimal)": [[183, "decimal.localcontext"]], "log10() (decimal.context method)": [[183, "decimal.Context.log10"]], "log10() (decimal.decimal method)": [[183, "decimal.Decimal.log10"]], "logb() (decimal.context method)": [[183, "decimal.Context.logb"]], "logb() (decimal.decimal method)": [[183, "decimal.Decimal.logb"]], "logical_and() (decimal.context method)": [[183, "decimal.Context.logical_and"]], "logical_and() (decimal.decimal method)": [[183, "decimal.Decimal.logical_and"]], "logical_invert() (decimal.context method)": [[183, "decimal.Context.logical_invert"]], "logical_invert() (decimal.decimal method)": [[183, "decimal.Decimal.logical_invert"]], "logical_or() (decimal.context method)": [[183, "decimal.Context.logical_or"]], "logical_or() (decimal.decimal method)": [[183, "decimal.Decimal.logical_or"]], "logical_xor() (decimal.context method)": [[183, "decimal.Context.logical_xor"]], "logical_xor() (decimal.decimal method)": [[183, "decimal.Decimal.logical_xor"]], "max() (decimal.context method)": [[183, "decimal.Context.max"]], "max() (decimal.decimal method)": [[183, "decimal.Decimal.max"]], "max_mag() (decimal.context method)": [[183, "decimal.Context.max_mag"]], "max_mag() (decimal.decimal method)": [[183, "decimal.Decimal.max_mag"]], "min() (decimal.context method)": [[183, "decimal.Context.min"]], "min() (decimal.decimal method)": [[183, "decimal.Decimal.min"]], "min_mag() (decimal.context method)": [[183, "decimal.Context.min_mag"]], "min_mag() (decimal.decimal method)": [[183, "decimal.Decimal.min_mag"]], "minus() (decimal.context method)": [[183, "decimal.Context.minus"]], "multiply() (decimal.context method)": [[183, "decimal.Context.multiply"]], "next_minus() (decimal.context method)": [[183, "decimal.Context.next_minus"]], "next_minus() (decimal.decimal method)": [[183, "decimal.Decimal.next_minus"]], "next_plus() (decimal.context method)": [[183, "decimal.Context.next_plus"]], "next_plus() (decimal.decimal method)": [[183, "decimal.Decimal.next_plus"]], "next_toward() (decimal.context method)": [[183, "decimal.Context.next_toward"]], "next_toward() (decimal.decimal method)": [[183, "decimal.Decimal.next_toward"]], "normalize() (decimal.context method)": [[183, "decimal.Context.normalize"]], "normalize() (decimal.decimal method)": [[183, "decimal.Decimal.normalize"]], "number_class() (decimal.context method)": [[183, "decimal.Context.number_class"]], "number_class() (decimal.decimal method)": [[183, "decimal.Decimal.number_class"]], "plus() (decimal.context method)": [[183, "decimal.Context.plus"]], "power() (decimal.context method)": [[183, "decimal.Context.power"]], "quantize() (decimal.context method)": [[183, "decimal.Context.quantize"]], "quantize() (decimal.decimal method)": [[183, "decimal.Decimal.quantize"]], "radix() (decimal.context method)": [[183, "decimal.Context.radix"]], "radix() (decimal.decimal method)": [[183, "decimal.Decimal.radix"]], "remainder() (decimal.context method)": [[183, "decimal.Context.remainder"]], "remainder_near() (decimal.context method)": [[183, "decimal.Context.remainder_near"]], "remainder_near() (decimal.decimal method)": [[183, "decimal.Decimal.remainder_near"]], "rotate() (decimal.context method)": [[183, "decimal.Context.rotate"]], "rotate() (decimal.decimal method)": [[183, "decimal.Decimal.rotate"]], "same_quantum() (decimal.context method)": [[183, "decimal.Context.same_quantum"]], "same_quantum() (decimal.decimal method)": [[183, "decimal.Decimal.same_quantum"]], "scaleb() (decimal.context method)": [[183, "decimal.Context.scaleb"]], "scaleb() (decimal.decimal method)": [[183, "decimal.Decimal.scaleb"]], "setcontext() (in module decimal)": [[183, "decimal.setcontext"]], "shift() (decimal.context method)": [[183, "decimal.Context.shift"]], "shift() (decimal.decimal method)": [[183, "decimal.Decimal.shift"]], "sqrt() (decimal.context method)": [[183, "decimal.Context.sqrt"]], "sqrt() (decimal.decimal method)": [[183, "decimal.Decimal.sqrt"]], "subtract() (decimal.context method)": [[183, "decimal.Context.subtract"]], "to_eng_string() (decimal.context method)": [[183, "decimal.Context.to_eng_string"]], "to_eng_string() (decimal.decimal method)": [[183, "decimal.Decimal.to_eng_string"]], "to_integral() (decimal.decimal method)": [[183, "decimal.Decimal.to_integral"]], "to_integral_exact() (decimal.context method)": [[183, "decimal.Context.to_integral_exact"]], "to_integral_exact() (decimal.decimal method)": [[183, "decimal.Decimal.to_integral_exact"]], "to_integral_value() (decimal.decimal method)": [[183, "decimal.Decimal.to_integral_value"]], "to_sci_string() (decimal.context method)": [[183, "decimal.Context.to_sci_string"]], "dialog (class in tkinter.commondialog)": [[186, "tkinter.commondialog.Dialog"]], "dialog (class in tkinter.simpledialog)": [[186, "tkinter.simpledialog.Dialog"]], "directory (class in tkinter.filedialog)": [[186, "tkinter.filedialog.Directory"]], "filedialog (class in tkinter.filedialog)": [[186, "tkinter.filedialog.FileDialog"]], "loadfiledialog (class in tkinter.filedialog)": [[186, "tkinter.filedialog.LoadFileDialog"]], "open (class in tkinter.filedialog)": [[186, "tkinter.filedialog.Open"]], "saveas (class in tkinter.filedialog)": [[186, "tkinter.filedialog.SaveAs"]], "savefiledialog (class in tkinter.filedialog)": [[186, "tkinter.filedialog.SaveFileDialog"]], "askdirectory() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.askdirectory"]], "askfloat() (in module tkinter.simpledialog)": [[186, "tkinter.simpledialog.askfloat"]], "askinteger() (in module tkinter.simpledialog)": [[186, "tkinter.simpledialog.askinteger"]], "askopenfile() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.askopenfile"]], "askopenfilename() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.askopenfilename"]], "askopenfilenames() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.askopenfilenames"]], "askopenfiles() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.askopenfiles"]], "asksaveasfile() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.asksaveasfile"]], "asksaveasfilename() (in module tkinter.filedialog)": [[186, "tkinter.filedialog.asksaveasfilename"]], "askstring() (in module tkinter.simpledialog)": [[186, "tkinter.simpledialog.askstring"]], "body() (tkinter.simpledialog.dialog method)": [[186, "tkinter.simpledialog.Dialog.body"]], "buttonbox() (tkinter.simpledialog.dialog method)": [[186, "tkinter.simpledialog.Dialog.buttonbox"]], "cancel_command() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.cancel_command"]], "dirs_double_event() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.dirs_double_event"]], "dirs_select_event() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.dirs_select_event"]], "files_double_event() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.files_double_event"]], "files_select_event() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.files_select_event"]], "filter_command() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.filter_command"]], "get_filter() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.get_filter"]], "get_selection() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.get_selection"]], "go() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.go"]], "ok_command() (tkinter.filedialog.loadfiledialog method)": [[186, "tkinter.filedialog.LoadFileDialog.ok_command"]], "ok_command() (tkinter.filedialog.savefiledialog method)": [[186, "tkinter.filedialog.SaveFileDialog.ok_command"]], "ok_event() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.ok_event"]], "quit() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.quit"]], "set_filter() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.set_filter"]], "set_selection() (tkinter.filedialog.filedialog method)": [[186, "tkinter.filedialog.FileDialog.set_selection"]], "show() (tkinter.commondialog.dialog method)": [[186, "tkinter.commondialog.Dialog.show"]], "tkinter.commondialog": [[186, "module-tkinter.commondialog"]], "tkinter.filedialog": [[186, "module-tkinter.filedialog"]], "tkinter.simpledialog": [[186, "module-tkinter.simpledialog"]], "differ (class in difflib)": [[187, "difflib.Differ"]], "htmldiff (class in difflib)": [[187, "difflib.HtmlDiff"]], "is_character_junk() (in module difflib)": [[187, "difflib.IS_CHARACTER_JUNK"]], "is_line_junk() (in module difflib)": [[187, "difflib.IS_LINE_JUNK"]], "sequencematcher (class in difflib)": [[187, "difflib.SequenceMatcher"]], "__init__() (difflib.htmldiff method)": [[187, "difflib.HtmlDiff.__init__"]], "compare() (difflib.differ method)": [[187, "difflib.Differ.compare"]], "context_diff() (in module difflib)": [[187, "difflib.context_diff"]], "diff_bytes() (in module difflib)": [[187, "difflib.diff_bytes"]], "difflib": [[187, "module-difflib"]], "find_longest_match() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.find_longest_match"]], "get_close_matches() (in module difflib)": [[187, "difflib.get_close_matches"]], "get_grouped_opcodes() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.get_grouped_opcodes"]], "get_matching_blocks() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.get_matching_blocks"]], "get_opcodes() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.get_opcodes"]], "make_file() (difflib.htmldiff method)": [[187, "difflib.HtmlDiff.make_file"]], "make_table() (difflib.htmldiff method)": [[187, "difflib.HtmlDiff.make_table"]], "ndiff() (in module difflib)": [[187, "difflib.ndiff"]], "quick_ratio() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.quick_ratio"]], "ratio() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.ratio"]], "real_quick_ratio() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.real_quick_ratio"]], "restore() (in module difflib)": [[187, "difflib.restore"]], "set_seq1() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.set_seq1"]], "set_seq2() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.set_seq2"]], "set_seqs() (difflib.sequencematcher method)": [[187, "difflib.SequenceMatcher.set_seqs"]], "unified_diff() (in module difflib)": [[187, "difflib.unified_diff"]], "before_async_with (opcode)": [[188, "opcode-BEFORE_ASYNC_WITH"]], "before_with (opcode)": [[188, "opcode-BEFORE_WITH"]], "binary_op (opcode)": [[188, "opcode-BINARY_OP"]], "binary_slice (opcode)": [[188, "opcode-BINARY_SLICE"]], "binary_subscr (opcode)": [[188, "opcode-BINARY_SUBSCR"]], "build_const_key_map (opcode)": [[188, "opcode-BUILD_CONST_KEY_MAP"]], "build_list (opcode)": [[188, "opcode-BUILD_LIST"]], "build_map (opcode)": [[188, "opcode-BUILD_MAP"]], "build_set (opcode)": [[188, "opcode-BUILD_SET"]], "build_slice (opcode)": [[188, "opcode-BUILD_SLICE"]], "build_string (opcode)": [[188, "opcode-BUILD_STRING"]], "build_tuple (opcode)": [[188, "opcode-BUILD_TUPLE"]], "bytecode (class in dis)": [[188, "dis.Bytecode"]], "bytecode.codeobj (in module dis)": [[188, "dis.Bytecode.codeobj"]], "bytecode.first_line (in module dis)": [[188, "dis.Bytecode.first_line"]], "cache (opcode)": [[188, "opcode-CACHE"]], "call (opcode)": [[188, "opcode-CALL"]], "call_function_ex (opcode)": [[188, "opcode-CALL_FUNCTION_EX"]], "call_intrinsic_1 (opcode)": [[188, "opcode-CALL_INTRINSIC_1"]], "call_intrinsic_2 (opcode)": [[188, "opcode-CALL_INTRINSIC_2"]], "check_eg_match (opcode)": [[188, "opcode-CHECK_EG_MATCH"]], "check_exc_match (opcode)": [[188, "opcode-CHECK_EXC_MATCH"]], "cleanup_throw (opcode)": [[188, "opcode-CLEANUP_THROW"]], "compare_op (opcode)": [[188, "opcode-COMPARE_OP"]], "contains_op (opcode)": [[188, "opcode-CONTAINS_OP"]], "copy (opcode)": [[188, "opcode-COPY"]], "copy_free_vars (opcode)": [[188, "opcode-COPY_FREE_VARS"]], "delete_attr (opcode)": [[188, "opcode-DELETE_ATTR"]], "delete_deref (opcode)": [[188, "opcode-DELETE_DEREF"]], "delete_fast (opcode)": [[188, "opcode-DELETE_FAST"]], "delete_global (opcode)": [[188, "opcode-DELETE_GLOBAL"]], "delete_name (opcode)": [[188, "opcode-DELETE_NAME"]], "delete_subscr (opcode)": [[188, "opcode-DELETE_SUBSCR"]], "dict_merge (opcode)": [[188, "opcode-DICT_MERGE"]], "dict_update (opcode)": [[188, "opcode-DICT_UPDATE"]], "end_async_for (opcode)": [[188, "opcode-END_ASYNC_FOR"]], "end_for (opcode)": [[188, "opcode-END_FOR"]], "end_send (opcode)": [[188, "opcode-END_SEND"]], "extended_arg (opcode)": [[188, "opcode-EXTENDED_ARG"]], "format_value (opcode)": [[188, "opcode-FORMAT_VALUE"]], "for_iter (opcode)": [[188, "opcode-FOR_ITER"]], "get_aiter (opcode)": [[188, "opcode-GET_AITER"]], "get_anext (opcode)": [[188, "opcode-GET_ANEXT"]], "get_awaitable (opcode)": [[188, "opcode-GET_AWAITABLE"]], "get_iter (opcode)": [[188, "opcode-GET_ITER"]], "get_len (opcode)": [[188, "opcode-GET_LEN"]], "get_yield_from_iter (opcode)": [[188, "opcode-GET_YIELD_FROM_ITER"]], "have_argument (opcode)": [[188, "opcode-HAVE_ARGUMENT"]], "import_from (opcode)": [[188, "opcode-IMPORT_FROM"]], "import_name (opcode)": [[188, "opcode-IMPORT_NAME"]], "is_op (opcode)": [[188, "opcode-IS_OP"]], "instruction (class in dis)": [[188, "dis.Instruction"]], "instruction.arg (in module dis)": [[188, "dis.Instruction.arg"]], "instruction.argrepr (in module dis)": [[188, "dis.Instruction.argrepr"]], "instruction.argval (in module dis)": [[188, "dis.Instruction.argval"]], "instruction.is_jump_target (in module dis)": [[188, "dis.Instruction.is_jump_target"]], "instruction.offset (in module dis)": [[188, "dis.Instruction.offset"]], "instruction.opcode (in module dis)": [[188, "dis.Instruction.opcode"]], "instruction.opname (in module dis)": [[188, "dis.Instruction.opname"]], "instruction.positions (in module dis)": [[188, "dis.Instruction.positions"]], "instruction.starts_line (in module dis)": [[188, "dis.Instruction.starts_line"]], "jump (opcode)": [[188, "opcode-JUMP"]], "jump_backward (opcode)": [[188, "opcode-JUMP_BACKWARD"]], "jump_backward_no_interrupt (opcode)": [[188, "opcode-JUMP_BACKWARD_NO_INTERRUPT"]], "jump_forward (opcode)": [[188, "opcode-JUMP_FORWARD"]], "jump_no_interrupt (opcode)": [[188, "opcode-JUMP_NO_INTERRUPT"]], "kw_names (opcode)": [[188, "opcode-KW_NAMES"]], "list_append (opcode)": [[188, "opcode-LIST_APPEND"]], "list_extend (opcode)": [[188, "opcode-LIST_EXTEND"]], "load_assertion_error (opcode)": [[188, "opcode-LOAD_ASSERTION_ERROR"]], "load_attr (opcode)": [[188, "opcode-LOAD_ATTR"]], "load_build_class (opcode)": [[188, "opcode-LOAD_BUILD_CLASS"]], "load_closure (opcode)": [[188, "opcode-LOAD_CLOSURE"]], "load_const (opcode)": [[188, "opcode-LOAD_CONST"]], "load_deref (opcode)": [[188, "opcode-LOAD_DEREF"]], "load_fast (opcode)": [[188, "opcode-LOAD_FAST"]], "load_fast_and_clear (opcode)": [[188, "opcode-LOAD_FAST_AND_CLEAR"]], "load_fast_check (opcode)": [[188, "opcode-LOAD_FAST_CHECK"]], "load_from_dict_or_deref (opcode)": [[188, "opcode-LOAD_FROM_DICT_OR_DEREF"]], "load_from_dict_or_globals (opcode)": [[188, "opcode-LOAD_FROM_DICT_OR_GLOBALS"]], "load_global (opcode)": [[188, "opcode-LOAD_GLOBAL"]], "load_locals (opcode)": [[188, "opcode-LOAD_LOCALS"]], "load_method (opcode)": [[188, "opcode-LOAD_METHOD"]], "load_name (opcode)": [[188, "opcode-LOAD_NAME"]], "load_super_attr (opcode)": [[188, "opcode-LOAD_SUPER_ATTR"]], "make_cell (opcode)": [[188, "opcode-MAKE_CELL"]], "make_function (opcode)": [[188, "opcode-MAKE_FUNCTION"]], "map_add (opcode)": [[188, "opcode-MAP_ADD"]], "match_class (opcode)": [[188, "opcode-MATCH_CLASS"]], "match_keys (opcode)": [[188, "opcode-MATCH_KEYS"]], "match_mapping (opcode)": [[188, "opcode-MATCH_MAPPING"]], "match_sequence (opcode)": [[188, "opcode-MATCH_SEQUENCE"]], "nop (opcode)": [[188, "opcode-NOP"]], "pep 626": [[188, "index-0"], [425, "index-62"], [469, "index-4"], [471, "index-30"]], "pop_block (opcode)": [[188, "opcode-POP_BLOCK"]], "pop_except (opcode)": [[188, "opcode-POP_EXCEPT"]], "pop_jump_if_false (opcode)": [[188, "opcode-POP_JUMP_IF_FALSE"]], "pop_jump_if_none (opcode)": [[188, "opcode-POP_JUMP_IF_NONE"]], "pop_jump_if_not_none (opcode)": [[188, "opcode-POP_JUMP_IF_NOT_NONE"]], "pop_jump_if_true (opcode)": [[188, "opcode-POP_JUMP_IF_TRUE"]], "pop_top (opcode)": [[188, "opcode-POP_TOP"]], "push_exc_info (opcode)": [[188, "opcode-PUSH_EXC_INFO"]], "push_null (opcode)": [[188, "opcode-PUSH_NULL"]], "positions (class in dis)": [[188, "dis.Positions"]], "positions.col_offset (in module dis)": [[188, "dis.Positions.col_offset"]], "positions.end_col_offset (in module dis)": [[188, "dis.Positions.end_col_offset"]], "positions.end_lineno (in module dis)": [[188, "dis.Positions.end_lineno"]], "positions.lineno (in module dis)": [[188, "dis.Positions.lineno"]], "raise_varargs (opcode)": [[188, "opcode-RAISE_VARARGS"]], "reraise (opcode)": [[188, "opcode-RERAISE"]], "resume (opcode)": [[188, "opcode-RESUME"]], "return_const (opcode)": [[188, "opcode-RETURN_CONST"]], "return_generator (opcode)": [[188, "opcode-RETURN_GENERATOR"]], "return_value (opcode)": [[188, "opcode-RETURN_VALUE"]], "send (opcode)": [[188, "opcode-SEND"]], "setup_annotations (opcode)": [[188, "opcode-SETUP_ANNOTATIONS"]], "setup_cleanup (opcode)": [[188, "opcode-SETUP_CLEANUP"]], "setup_finally (opcode)": [[188, "opcode-SETUP_FINALLY"]], "setup_with (opcode)": [[188, "opcode-SETUP_WITH"]], "set_add (opcode)": [[188, "opcode-SET_ADD"]], "set_update (opcode)": [[188, "opcode-SET_UPDATE"]], "store_attr (opcode)": [[188, "opcode-STORE_ATTR"]], "store_deref (opcode)": [[188, "opcode-STORE_DEREF"]], "store_fast (opcode)": [[188, "opcode-STORE_FAST"]], "store_global (opcode)": [[188, "opcode-STORE_GLOBAL"]], "store_name (opcode)": [[188, "opcode-STORE_NAME"]], "store_slice (opcode)": [[188, "opcode-STORE_SLICE"]], "store_subscr (opcode)": [[188, "opcode-STORE_SUBSCR"]], "swap (opcode)": [[188, "opcode-SWAP"]], "unary_invert (opcode)": [[188, "opcode-UNARY_INVERT"]], "unary_negative (opcode)": [[188, "opcode-UNARY_NEGATIVE"]], "unary_not (opcode)": [[188, "opcode-UNARY_NOT"]], "unpack_ex (opcode)": [[188, "opcode-UNPACK_EX"]], "unpack_sequence (opcode)": [[188, "opcode-UNPACK_SEQUENCE"]], "with_except_start (opcode)": [[188, "opcode-WITH_EXCEPT_START"]], "yield_value (opcode)": [[188, "opcode-YIELD_VALUE"]], "cmp_op (in module dis)": [[188, "dis.cmp_op"]], "code_info() (in module dis)": [[188, "dis.code_info"]], "dis": [[188, "module-dis"]], "dis command line option": [[188, "cmdoption-dis-h"]], "dis() (dis.bytecode method)": [[188, "dis.Bytecode.dis"]], "dis() (in module dis)": [[188, "dis.dis"]], "disassemble() (in module dis)": [[188, "dis.disassemble"]], "disco() (in module dis)": [[188, "dis.disco"]], "distb() (in module dis)": [[188, "dis.distb"]], "findlabels() (in module dis)": [[188, "dis.findlabels"]], "findlinestarts() (in module dis)": [[188, "dis.findlinestarts"]], "from_traceback() (dis.bytecode class method)": [[188, "dis.Bytecode.from_traceback"]], "get_instructions() (in module dis)": [[188, "dis.get_instructions"]], "hasarg (in module dis)": [[188, "dis.hasarg"]], "hascompare (in module dis)": [[188, "dis.hascompare"]], "hasconst (in module dis)": [[188, "dis.hasconst"]], "hasexc (in module dis)": [[188, "dis.hasexc"]], "hasfree (in module dis)": [[188, "dis.hasfree"]], "hasjabs (in module dis)": [[188, "dis.hasjabs"]], "hasjrel (in module dis)": [[188, "dis.hasjrel"]], "haslocal (in module dis)": [[188, "dis.haslocal"]], "hasname (in module dis)": [[188, "dis.hasname"]], "info() (dis.bytecode method)": [[188, "dis.Bytecode.info"]], "opmap (in module dis)": [[188, "dis.opmap"]], "opname (in module dis)": [[188, "dis.opname"]], "show_code() (in module dis)": [[188, "dis.show_code"]], "stack_effect() (in module dis)": [[188, "dis.stack_effect"]], "# (hash)": [[190, "index-4"], [316, "index-38"], [331, "index-2"], [341, "index-37"], [341, "index-47"], [342, "index-7"], [432, "index-4"], [432, "index-5"], [446, "index-0"]], "- (minus)": [[190, "index-4"], [217, "index-2"], [228, "index-1"], [316, "index-11"], [341, "index-13"], [341, "index-37"], [341, "index-47"], [342, "index-4"], [427, "index-60"], [427, "index-70"]], "<blankline>": [[190, "index-2"]], "comparison_flags (in module doctest)": [[190, "doctest.COMPARISON_FLAGS"]], "dont_accept_blankline (in module doctest)": [[190, "doctest.DONT_ACCEPT_BLANKLINE"]], "dont_accept_true_for_1 (in module doctest)": [[190, "doctest.DONT_ACCEPT_TRUE_FOR_1"]], "debugrunner (class in doctest)": [[190, "doctest.DebugRunner"]], "docfilesuite() (in module doctest)": [[190, "doctest.DocFileSuite"]], "doctest (class in doctest)": [[190, "doctest.DocTest"]], "doctestfailure": [[190, "doctest.DocTestFailure"]], "doctestfinder (class in doctest)": [[190, "doctest.DocTestFinder"]], "doctestparser (class in doctest)": [[190, "doctest.DocTestParser"]], "doctestrunner (class in doctest)": [[190, "doctest.DocTestRunner"]], "doctestsuite() (in module doctest)": [[190, "doctest.DocTestSuite"]], "ellipsis (in module doctest)": [[190, "doctest.ELLIPSIS"]], "example (class in doctest)": [[190, "doctest.Example"]], "fail_fast (in module doctest)": [[190, "doctest.FAIL_FAST"]], "ignore_exception_detail (in module doctest)": [[190, "doctest.IGNORE_EXCEPTION_DETAIL"]], "normalize_whitespace (in module doctest)": [[190, "doctest.NORMALIZE_WHITESPACE"]], "outputchecker (class in doctest)": [[190, "doctest.OutputChecker"]], "reporting_flags (in module doctest)": [[190, "doctest.REPORTING_FLAGS"]], "report_cdiff (in module doctest)": [[190, "doctest.REPORT_CDIFF"]], "report_ndiff (in module doctest)": [[190, "doctest.REPORT_NDIFF"]], "report_only_first_failure (in module doctest)": [[190, "doctest.REPORT_ONLY_FIRST_FAILURE"]], "report_udiff (in module doctest)": [[190, "doctest.REPORT_UDIFF"]], "skip (in module doctest)": [[190, "doctest.SKIP"]], "unexpectedexception": [[190, "doctest.UnexpectedException"]], "check_output() (doctest.outputchecker method)": [[190, "doctest.OutputChecker.check_output"]], "debug() (in module doctest)": [[190, "doctest.debug"]], "debug_src() (in module doctest)": [[190, "doctest.debug_src"]], "docstring (doctest.doctest attribute)": [[190, "doctest.DocTest.docstring"]], "doctest": [[190, "module-doctest"]], "example (doctest.doctestfailure attribute)": [[190, "doctest.DocTestFailure.example"]], "example (doctest.unexpectedexception attribute)": [[190, "doctest.UnexpectedException.example"]], "examples (doctest.doctest attribute)": [[190, "doctest.DocTest.examples"]], "exc_info (doctest.unexpectedexception attribute)": [[190, "doctest.UnexpectedException.exc_info"]], "exc_msg (doctest.example attribute)": [[190, "doctest.Example.exc_msg"]], "failureexception": [[190, "doctest.failureException"]], "filename (doctest.doctest attribute)": [[190, "doctest.DocTest.filename"]], "find() (doctest.doctestfinder method)": [[190, "doctest.DocTestFinder.find"]], "get_doctest() (doctest.doctestparser method)": [[190, "doctest.DocTestParser.get_doctest"]], "get_examples() (doctest.doctestparser method)": [[190, "doctest.DocTestParser.get_examples"]], "globs (doctest.doctest attribute)": [[190, "doctest.DocTest.globs"]], "got (doctest.doctestfailure attribute)": [[190, "doctest.DocTestFailure.got"]], "in doctests": [[190, "index-3"], [190, "index-4"]], "indent (doctest.example attribute)": [[190, "doctest.Example.indent"]], "interpreter prompt": [[190, "index-0"], [349, "index-27"]], "lineno (doctest.doctest attribute)": [[190, "doctest.DocTest.lineno"]], "lineno (doctest.example attribute)": [[190, "doctest.Example.lineno"]], "marker": [[190, "index-1"], [378, "index-1"]], "name (doctest.doctest attribute)": [[190, "doctest.DocTest.name"]], "options (doctest.example attribute)": [[190, "doctest.Example.options"]], "output_difference() (doctest.outputchecker method)": [[190, "doctest.OutputChecker.output_difference"]], "parse() (doctest.doctestparser method)": [[190, "doctest.DocTestParser.parse"]], "register_optionflag() (in module doctest)": [[190, "doctest.register_optionflag"]], "report_failure() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.report_failure"]], "report_start() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.report_start"]], "report_success() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.report_success"]], "report_unexpected_exception() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.report_unexpected_exception"]], "run() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.run"]], "run_docstring_examples() (in module doctest)": [[190, "doctest.run_docstring_examples"]], "script_from_examples() (in module doctest)": [[190, "doctest.script_from_examples"]], "set_unittest_reportflags() (in module doctest)": [[190, "doctest.set_unittest_reportflags"]], "source (doctest.example attribute)": [[190, "doctest.Example.source"]], "summarize() (doctest.doctestrunner method)": [[190, "doctest.DocTestRunner.summarize"]], "test (doctest.doctestfailure attribute)": [[190, "doctest.DocTestFailure.test"]], "test (doctest.unexpectedexception attribute)": [[190, "doctest.UnexpectedException.test"]], "testfile() (in module doctest)": [[190, "doctest.testfile"]], "testmod() (in module doctest)": [[190, "doctest.testmod"]], "testsource() (in module doctest)": [[190, "doctest.testsource"]], "want (doctest.example attribute)": [[190, "doctest.Example.want"]], "rfc 2046": [[191, "index-4"], [194, "index-0"], [199, "index-5"]], "rfc 2047": [[191, "index-5"], [199, "index-11"], [199, "index-13"], [199, "index-6"], [199, "index-8"], [200, "index-1"], [200, "index-4"], [200, "index-6"], [205, "index-3"], [205, "index-4"], [206, "index-1"], [472, "index-11"], [472, "index-8"]], "rfc 2183": [[191, "index-6"], [193, "index-11"], [202, "index-10"]], "rfc 2231": [[191, "index-7"], [193, "index-10"], [193, "index-2"], [193, "index-3"], [193, "index-7"], [193, "index-8"], [199, "index-7"], [202, "index-4"], [202, "index-5"], [202, "index-9"], [206, "index-5"], [206, "index-6"], [206, "index-7"], [206, "index-8"], [206, "index-9"]], "rfc 2821": [[191, "index-0"]], "rfc 5322": [[191, "index-1"], [193, "index-0"], [196, "index-0"], [198, "index-0"], [198, "index-1"], [200, "index-0"], [200, "index-11"], [200, "index-12"], [200, "index-14"], [200, "index-2"], [200, "index-3"], [200, "index-5"], [200, "index-7"], [200, "index-8"], [202, "index-0"], [202, "index-2"], [204, "index-0"], [205, "index-0"], [205, "index-1"], [205, "index-2"], [205, "index-5"], [205, "index-6"], [205, "index-9"], [332, "index-11"]], "rfc 6532": [[191, "index-2"], [202, "index-1"], [204, "index-1"], [205, "index-7"], [475, "index-31"]], "email": [[191, "module-email"]], "charset (class in email.charset)": [[192, "email.charset.Charset"]], "__eq__() (email.charset.charset method)": [[192, "email.charset.Charset.__eq__"]], "__ne__() (email.charset.charset method)": [[192, "email.charset.Charset.__ne__"]], "__str__() (email.charset.charset method)": [[192, "email.charset.Charset.__str__"]], "add_alias() (in module email.charset)": [[192, "email.charset.add_alias"]], "add_charset() (in module email.charset)": [[192, "email.charset.add_charset"]], "add_codec() (in module email.charset)": [[192, "email.charset.add_codec"]], "body_encode() (email.charset.charset method)": [[192, "email.charset.Charset.body_encode"]], "body_encoding (email.charset.charset attribute)": [[192, "email.charset.Charset.body_encoding"]], "email.charset": [[192, "module-email.charset"]], "get_body_encoding() (email.charset.charset method)": [[192, "email.charset.Charset.get_body_encoding"]], "get_output_charset() (email.charset.charset method)": [[192, "email.charset.Charset.get_output_charset"]], "header_encode() (email.charset.charset method)": [[192, "email.charset.Charset.header_encode"]], "header_encode_lines() (email.charset.charset method)": [[192, "email.charset.Charset.header_encode_lines"]], "header_encoding (email.charset.charset attribute)": [[192, "email.charset.Charset.header_encoding"]], "input_charset (email.charset.charset attribute)": [[192, "email.charset.Charset.input_charset"]], "input_codec (email.charset.charset attribute)": [[192, "email.charset.Charset.input_codec"]], "output_charset (email.charset.charset attribute)": [[192, "email.charset.Charset.output_charset"]], "output_codec (email.charset.charset attribute)": [[192, "email.charset.Charset.output_codec"]], "message (class in email.message)": [[193, "email.message.Message"]], "rfc 2822": [[193, "index-1"], [199, "index-0"], [199, "index-10"], [199, "index-12"], [199, "index-2"], [199, "index-3"], [199, "index-9"], [206, "index-0"], [206, "index-10"], [206, "index-2"], [206, "index-3"], [206, "index-4"], [239, "index-2"], [242, "index-2"], [268, "index-0"], [363, "index-10"], [363, "index-22"], [448, "index-1"], [461, "index-20"]], "__bytes__() (email.message.message method)": [[193, "email.message.Message.__bytes__"]], "__contains__() (email.message.message method)": [[193, "email.message.Message.__contains__"]], "__delitem__() (email.message.message method)": [[193, "email.message.Message.__delitem__"]], "__getitem__() (email.message.message method)": [[193, "email.message.Message.__getitem__"]], "__len__() (email.message.message method)": [[193, "email.message.Message.__len__"]], "__setitem__() (email.message.message method)": [[193, "email.message.Message.__setitem__"]], "__str__() (email.message.message method)": [[193, "email.message.Message.__str__"]], "add_header() (email.message.message method)": [[193, "email.message.Message.add_header"]], "as_bytes() (email.message.message method)": [[193, "email.message.Message.as_bytes"]], "as_string() (email.message.message method)": [[193, "email.message.Message.as_string"]], "attach() (email.message.message method)": [[193, "email.message.Message.attach"]], "defects (email.message.message attribute)": [[193, "email.message.Message.defects"]], "del_param() (email.message.message method)": [[193, "email.message.Message.del_param"]], "epilogue (email.message.message attribute)": [[193, "email.message.Message.epilogue"]], "get() (email.message.message method)": [[193, "email.message.Message.get"]], "get_all() (email.message.message method)": [[193, "email.message.Message.get_all"]], "get_boundary() (email.message.message method)": [[193, "email.message.Message.get_boundary"]], "get_charset() (email.message.message method)": [[193, "email.message.Message.get_charset"]], "get_charsets() (email.message.message method)": [[193, "email.message.Message.get_charsets"]], "get_content_charset() (email.message.message method)": [[193, "email.message.Message.get_content_charset"]], "get_content_disposition() (email.message.message method)": [[193, "email.message.Message.get_content_disposition"]], "get_content_maintype() (email.message.message method)": [[193, "email.message.Message.get_content_maintype"]], "get_content_subtype() (email.message.message method)": [[193, "email.message.Message.get_content_subtype"]], "get_content_type() (email.message.message method)": [[193, "email.message.Message.get_content_type"]], "get_default_type() (email.message.message method)": [[193, "email.message.Message.get_default_type"]], "get_filename() (email.message.message method)": [[193, "email.message.Message.get_filename"]], "get_param() (email.message.message method)": [[193, "email.message.Message.get_param"]], "get_params() (email.message.message method)": [[193, "email.message.Message.get_params"]], "get_payload() (email.message.message method)": [[193, "email.message.Message.get_payload"]], "get_unixfrom() (email.message.message method)": [[193, "email.message.Message.get_unixfrom"]], "is_multipart() (email.message.message method)": [[193, "email.message.Message.is_multipart"]], "items() (email.message.message method)": [[193, "email.message.Message.items"]], "keys() (email.message.message method)": [[193, "email.message.Message.keys"]], "preamble (email.message.message attribute)": [[193, "email.message.Message.preamble"]], "replace_header() (email.message.message method)": [[193, "email.message.Message.replace_header"]], "set_boundary() (email.message.message method)": [[193, "email.message.Message.set_boundary"]], "set_charset() (email.message.message method)": [[193, "email.message.Message.set_charset"]], "set_default_type() (email.message.message method)": [[193, "email.message.Message.set_default_type"]], "set_param() (email.message.message method)": [[193, "email.message.Message.set_param"]], "set_payload() (email.message.message method)": [[193, "email.message.Message.set_payload"]], "set_type() (email.message.message method)": [[193, "email.message.Message.set_type"]], "set_unixfrom() (email.message.message method)": [[193, "email.message.Message.set_unixfrom"]], "values() (email.message.message method)": [[193, "email.message.Message.values"]], "walk() (email.message.message method)": [[193, "email.message.Message.walk"]], "contentmanager (class in email.contentmanager)": [[194, "email.contentmanager.ContentManager"]], "add_get_handler() (email.contentmanager.contentmanager method)": [[194, "email.contentmanager.ContentManager.add_get_handler"]], "add_set_handler() (email.contentmanager.contentmanager method)": [[194, "email.contentmanager.ContentManager.add_set_handler"]], "email.contentmanager": [[194, "module-email.contentmanager"]], "get_content() (email.contentmanager.contentmanager method)": [[194, "email.contentmanager.ContentManager.get_content"]], "get_content() (in module email.contentmanager)": [[194, "email.contentmanager.get_content"]], "raw_data_manager (in module email.contentmanager)": [[194, "email.contentmanager.raw_data_manager"]], "set_content() (email.contentmanager.contentmanager method)": [[194, "email.contentmanager.ContentManager.set_content"]], "set_content() (in module email.contentmanager)": [[194, "email.contentmanager.set_content"]], "email.encoders": [[195, "module-email.encoders"]], "encode_7or8bit() (in module email.encoders)": [[195, "email.encoders.encode_7or8bit"]], "encode_base64() (in module email.encoders)": [[195, "email.encoders.encode_base64"]], "encode_noop() (in module email.encoders)": [[195, "email.encoders.encode_noop"]], "encode_quopri() (in module email.encoders)": [[195, "email.encoders.encode_quopri"]], "boundaryerror": [[196, "email.errors.BoundaryError"]], "headerdefect": [[196, "email.errors.HeaderDefect"]], "headerparseerror": [[196, "email.errors.HeaderParseError"]], "messagedefect": [[196, "email.errors.MessageDefect"]], "messageerror": [[196, "email.errors.MessageError"]], "messageparseerror": [[196, "email.errors.MessageParseError"]], "multipartconversionerror": [[196, "email.errors.MultipartConversionError"]], "email.errors": [[196, "module-email.errors"]], "rfc 822": [[197, "index-0"], [199, "index-1"], [227, "index-9"], [239, "index-6"], [332, "index-10"], [332, "index-12"], [332, "index-6"], [332, "index-9"], [363, "index-19"], [363, "index-20"], [461, "index-21"]], "bytesgenerator (class in email.generator)": [[198, "email.generator.BytesGenerator"]], "decodedgenerator (class in email.generator)": [[198, "email.generator.DecodedGenerator"]], "generator (class in email.generator)": [[198, "email.generator.Generator"]], "clone() (email.generator.bytesgenerator method)": [[198, "email.generator.BytesGenerator.clone"]], "clone() (email.generator.generator method)": [[198, "email.generator.Generator.clone"]], "email.generator": [[198, "module-email.generator"]], "flatten() (email.generator.bytesgenerator method)": [[198, "email.generator.BytesGenerator.flatten"]], "flatten() (email.generator.generator method)": [[198, "email.generator.Generator.flatten"]], "write() (email.generator.bytesgenerator method)": [[198, "email.generator.BytesGenerator.write"]], "write() (email.generator.generator method)": [[198, "email.generator.Generator.write"]], "header (class in email.header)": [[199, "email.header.Header"]], "__eq__() (email.header.header method)": [[199, "email.header.Header.__eq__"]], "__ne__() (email.header.header method)": [[199, "email.header.Header.__ne__"]], "__str__() (email.header.header method)": [[199, "email.header.Header.__str__"]], "append() (email.header.header method)": [[199, "email.header.Header.append"]], "decode_header() (in module email.header)": [[199, "email.header.decode_header"]], "email.header": [[199, "module-email.header"]], "encode() (email.header.header method)": [[199, "email.header.Header.encode"]], "make_header() (in module email.header)": [[199, "email.header.make_header"]], "address (class in email.headerregistry)": [[200, "email.headerregistry.Address"]], "addressheader (class in email.headerregistry)": [[200, "email.headerregistry.AddressHeader"]], "baseheader (class in email.headerregistry)": [[200, "email.headerregistry.BaseHeader"]], "contentdispositionheader (class in email.headerregistry)": [[200, "email.headerregistry.ContentDispositionHeader"]], "contenttransferencoding (class in email.headerregistry)": [[200, "email.headerregistry.ContentTransferEncoding"]], "contenttypeheader (class in email.headerregistry)": [[200, "email.headerregistry.ContentTypeHeader"]], "dateheader (class in email.headerregistry)": [[200, "email.headerregistry.DateHeader"]], "group (class in email.headerregistry)": [[200, "email.headerregistry.Group"]], "headerregistry (class in email.headerregistry)": [[200, "email.headerregistry.HeaderRegistry"]], "mimeversionheader (class in email.headerregistry)": [[200, "email.headerregistry.MIMEVersionHeader"]], "parameterizedmimeheader (class in email.headerregistry)": [[200, "email.headerregistry.ParameterizedMIMEHeader"]], "rfc 5321": [[200, "index-13"], [473, "index-26"]], "singleaddressheader (class in email.headerregistry)": [[200, "email.headerregistry.SingleAddressHeader"]], "unstructuredheader (class in email.headerregistry)": [[200, "email.headerregistry.UnstructuredHeader"]], "__call__() (email.headerregistry.headerregistry method)": [[200, "email.headerregistry.HeaderRegistry.__call__"]], "__getitem__() (email.headerregistry.headerregistry method)": [[200, "email.headerregistry.HeaderRegistry.__getitem__"]], "__str__() (email.headerregistry.address method)": [[200, "email.headerregistry.Address.__str__"]], "__str__() (email.headerregistry.group method)": [[200, "email.headerregistry.Group.__str__"]], "addr_spec (email.headerregistry.address attribute)": [[200, "email.headerregistry.Address.addr_spec"]], "address (email.headerregistry.singleaddressheader attribute)": [[200, "email.headerregistry.SingleAddressHeader.address"]], "addresses (email.headerregistry.addressheader attribute)": [[200, "email.headerregistry.AddressHeader.addresses"]], "addresses (email.headerregistry.group attribute)": [[200, "email.headerregistry.Group.addresses"]], "content_disposition (email.headerregistry.contentdispositionheader attribute)": [[200, "email.headerregistry.ContentDispositionHeader.content_disposition"]], "content_type (email.headerregistry.contenttypeheader attribute)": [[200, "email.headerregistry.ContentTypeHeader.content_type"]], "cte (email.headerregistry.contenttransferencoding attribute)": [[200, "email.headerregistry.ContentTransferEncoding.cte"]], "datetime (email.headerregistry.dateheader attribute)": [[200, "email.headerregistry.DateHeader.datetime"]], "defects (email.headerregistry.baseheader attribute)": [[200, "email.headerregistry.BaseHeader.defects"]], "display_name (email.headerregistry.address attribute)": [[200, "email.headerregistry.Address.display_name"]], "display_name (email.headerregistry.group attribute)": [[200, "email.headerregistry.Group.display_name"]], "domain (email.headerregistry.address attribute)": [[200, "email.headerregistry.Address.domain"]], "email.headerregistry": [[200, "module-email.headerregistry"]], "fold() (email.headerregistry.baseheader method)": [[200, "email.headerregistry.BaseHeader.fold"]], "groups (email.headerregistry.addressheader attribute)": [[200, "email.headerregistry.AddressHeader.groups"]], "maintype (email.headerregistry.contenttypeheader attribute)": [[200, "email.headerregistry.ContentTypeHeader.maintype"]], "major (email.headerregistry.mimeversionheader attribute)": [[200, "email.headerregistry.MIMEVersionHeader.major"]], "map_to_type() (email.headerregistry.headerregistry method)": [[200, "email.headerregistry.HeaderRegistry.map_to_type"]], "max_count (email.headerregistry.baseheader attribute)": [[200, "email.headerregistry.BaseHeader.max_count"]], "minor (email.headerregistry.mimeversionheader attribute)": [[200, "email.headerregistry.MIMEVersionHeader.minor"]], "name (email.headerregistry.baseheader attribute)": [[200, "email.headerregistry.BaseHeader.name"]], "params (email.headerregistry.parameterizedmimeheader attribute)": [[200, "email.headerregistry.ParameterizedMIMEHeader.params"]], "subtype (email.headerregistry.contenttypeheader attribute)": [[200, "email.headerregistry.ContentTypeHeader.subtype"]], "username (email.headerregistry.address attribute)": [[200, "email.headerregistry.Address.username"]], "version (email.headerregistry.mimeversionheader attribute)": [[200, "email.headerregistry.MIMEVersionHeader.version"]], "_structure() (in module email.iterators)": [[201, "email.iterators._structure"]], "body_line_iterator() (in module email.iterators)": [[201, "email.iterators.body_line_iterator"]], "email.iterators": [[201, "module-email.iterators"]], "typed_subpart_iterator() (in module email.iterators)": [[201, "email.iterators.typed_subpart_iterator"]], "emailmessage (class in email.message)": [[202, "email.message.EmailMessage"]], "mimepart (class in email.message)": [[202, "email.message.MIMEPart"]], "rfc 6531": [[202, "index-3"], [205, "index-8"], [332, "index-3"], [475, "index-32"], [475, "index-38"], [475, "index-39"]], "__bytes__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__bytes__"]], "__contains__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__contains__"]], "__delitem__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__delitem__"]], "__getitem__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__getitem__"]], "__len__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__len__"]], "__setitem__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__setitem__"]], "__str__() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.__str__"]], "add_alternative() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.add_alternative"]], "add_attachment() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.add_attachment"]], "add_header() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.add_header"]], "add_related() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.add_related"]], "as_bytes() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.as_bytes"]], "as_string() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.as_string"]], "clear() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.clear"]], "clear_content() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.clear_content"]], "defects (email.message.emailmessage attribute)": [[202, "email.message.EmailMessage.defects"]], "del_param() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.del_param"]], "email.message": [[202, "module-email.message"]], "epilogue (email.message.emailmessage attribute)": [[202, "email.message.EmailMessage.epilogue"]], "get() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get"]], "get_all() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_all"]], "get_body() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_body"]], "get_boundary() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_boundary"]], "get_charsets() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_charsets"]], "get_content() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content"]], "get_content_charset() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content_charset"]], "get_content_disposition() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content_disposition"]], "get_content_maintype() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content_maintype"]], "get_content_subtype() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content_subtype"]], "get_content_type() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_content_type"]], "get_default_type() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_default_type"]], "get_filename() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_filename"]], "get_unixfrom() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.get_unixfrom"]], "is_attachment() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.is_attachment"]], "is_multipart() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.is_multipart"]], "items() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.items"]], "iter_attachments() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.iter_attachments"]], "iter_parts() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.iter_parts"]], "keys() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.keys"]], "make_alternative() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.make_alternative"]], "make_mixed() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.make_mixed"]], "make_related() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.make_related"]], "preamble (email.message.emailmessage attribute)": [[202, "email.message.EmailMessage.preamble"]], "replace_header() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.replace_header"]], "set_boundary() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.set_boundary"]], "set_content() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.set_content"]], "set_default_type() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.set_default_type"]], "set_param() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.set_param"]], "set_unixfrom() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.set_unixfrom"]], "values() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.values"]], "walk() (email.message.emailmessage method)": [[202, "email.message.EmailMessage.walk"]], "mimeapplication (class in email.mime.application)": [[203, "email.mime.application.MIMEApplication"]], "mimeaudio (class in email.mime.audio)": [[203, "email.mime.audio.MIMEAudio"]], "mimebase (class in email.mime.base)": [[203, "email.mime.base.MIMEBase"]], "mimeimage (class in email.mime.image)": [[203, "email.mime.image.MIMEImage"]], "mimemessage (class in email.mime.message)": [[203, "email.mime.message.MIMEMessage"]], "mimemultipart (class in email.mime.multipart)": [[203, "email.mime.multipart.MIMEMultipart"]], "mimenonmultipart (class in email.mime.nonmultipart)": [[203, "email.mime.nonmultipart.MIMENonMultipart"]], "mimetext (class in email.mime.text)": [[203, "email.mime.text.MIMEText"]], "email.mime": [[203, "module-email.mime"]], "email.mime.application": [[203, "module-email.mime.application"]], "email.mime.audio": [[203, "module-email.mime.audio"]], "email.mime.base": [[203, "module-email.mime.base"]], "email.mime.image": [[203, "module-email.mime.image"]], "email.mime.message": [[203, "module-email.mime.message"]], "email.mime.multipart": [[203, "module-email.mime.multipart"]], "email.mime.nonmultipart": [[203, "module-email.mime.nonmultipart"]], "email.mime.text": [[203, "module-email.mime.text"]], "bytesfeedparser (class in email.parser)": [[204, "email.parser.BytesFeedParser"]], "bytesheaderparser (class in email.parser)": [[204, "email.parser.BytesHeaderParser"]], "bytesparser (class in email.parser)": [[204, "email.parser.BytesParser"]], "feedparser (class in email.parser)": [[204, "email.parser.FeedParser"]], "headerparser (class in email.parser)": [[204, "email.parser.HeaderParser"]], "parser (class in email.parser)": [[204, "email.parser.Parser"]], "close() (email.parser.bytesfeedparser method)": [[204, "email.parser.BytesFeedParser.close"]], "email.parser": [[204, "module-email.parser"]], "feed() (email.parser.bytesfeedparser method)": [[204, "email.parser.BytesFeedParser.feed"]], "message_from_binary_file() (in module email)": [[204, "email.message_from_binary_file"]], "message_from_bytes() (in module email)": [[204, "email.message_from_bytes"]], "message_from_file() (in module email)": [[204, "email.message_from_file"]], "message_from_string() (in module email)": [[204, "email.message_from_string"]], "parse() (email.parser.bytesparser method)": [[204, "email.parser.BytesParser.parse"]], "parse() (email.parser.parser method)": [[204, "email.parser.Parser.parse"]], "parsebytes() (email.parser.bytesparser method)": [[204, "email.parser.BytesParser.parsebytes"]], "parsestr() (email.parser.parser method)": [[204, "email.parser.Parser.parsestr"]], "compat32 (class in email.policy)": [[205, "email.policy.Compat32"]], "emailpolicy (class in email.policy)": [[205, "email.policy.EmailPolicy"]], "http (in module email.policy)": [[205, "email.policy.HTTP"]], "policy (class in email.policy)": [[205, "email.policy.Policy"]], "smtp (in module email.policy)": [[205, "email.policy.SMTP"]], "smtputf8 (in module email.policy)": [[205, "email.policy.SMTPUTF8"]], "clone() (email.policy.policy method)": [[205, "email.policy.Policy.clone"]], "compat32 (in module email.policy)": [[205, "email.policy.compat32"]], "content_manager (email.policy.emailpolicy attribute)": [[205, "email.policy.EmailPolicy.content_manager"]], "cte_type (email.policy.policy attribute)": [[205, "email.policy.Policy.cte_type"]], "default (in module email.policy)": [[205, "email.policy.default"]], "email.policy": [[205, "module-email.policy"]], "fold() (email.policy.compat32 method)": [[205, "email.policy.Compat32.fold"]], "fold() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.fold"]], "fold() (email.policy.policy method)": [[205, "email.policy.Policy.fold"]], "fold_binary() (email.policy.compat32 method)": [[205, "email.policy.Compat32.fold_binary"]], "fold_binary() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.fold_binary"]], "fold_binary() (email.policy.policy method)": [[205, "email.policy.Policy.fold_binary"]], "handle_defect() (email.policy.policy method)": [[205, "email.policy.Policy.handle_defect"]], "header_factory (email.policy.emailpolicy attribute)": [[205, "email.policy.EmailPolicy.header_factory"]], "header_fetch_parse() (email.policy.compat32 method)": [[205, "email.policy.Compat32.header_fetch_parse"]], "header_fetch_parse() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.header_fetch_parse"]], "header_fetch_parse() (email.policy.policy method)": [[205, "email.policy.Policy.header_fetch_parse"]], "header_max_count() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.header_max_count"]], "header_max_count() (email.policy.policy method)": [[205, "email.policy.Policy.header_max_count"]], "header_source_parse() (email.policy.compat32 method)": [[205, "email.policy.Compat32.header_source_parse"]], "header_source_parse() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.header_source_parse"]], "header_source_parse() (email.policy.policy method)": [[205, "email.policy.Policy.header_source_parse"]], "header_store_parse() (email.policy.compat32 method)": [[205, "email.policy.Compat32.header_store_parse"]], "header_store_parse() (email.policy.emailpolicy method)": [[205, "email.policy.EmailPolicy.header_store_parse"]], "header_store_parse() (email.policy.policy method)": [[205, "email.policy.Policy.header_store_parse"]], "linesep (email.policy.policy attribute)": [[205, "email.policy.Policy.linesep"]], "mangle_from_ (email.policy.compat32 attribute)": [[205, "email.policy.Compat32.mangle_from_"]], "mangle_from_ (email.policy.policy attribute)": [[205, "email.policy.Policy.mangle_from_"]], "max_line_length (email.policy.policy attribute)": [[205, "email.policy.Policy.max_line_length"]], "message_factory (email.policy.policy attribute)": [[205, "email.policy.Policy.message_factory"]], "raise_on_defect (email.policy.policy attribute)": [[205, "email.policy.Policy.raise_on_defect"]], "refold_source (email.policy.emailpolicy attribute)": [[205, "email.policy.EmailPolicy.refold_source"]], "register_defect() (email.policy.policy method)": [[205, "email.policy.Policy.register_defect"]], "strict (in module email.policy)": [[205, "email.policy.strict"]], "utf8 (email.policy.emailpolicy attribute)": [[205, "email.policy.EmailPolicy.utf8"]], "collapse_rfc2231_value() (in module email.utils)": [[206, "email.utils.collapse_rfc2231_value"]], "decode_params() (in module email.utils)": [[206, "email.utils.decode_params"]], "decode_rfc2231() (in module email.utils)": [[206, "email.utils.decode_rfc2231"]], "email.utils": [[206, "module-email.utils"]], "encode_rfc2231() (in module email.utils)": [[206, "email.utils.encode_rfc2231"]], "format_datetime() (in module email.utils)": [[206, "email.utils.format_datetime"]], "formataddr() (in module email.utils)": [[206, "email.utils.formataddr"]], "formatdate() (in module email.utils)": [[206, "email.utils.formatdate"]], "getaddresses() (in module email.utils)": [[206, "email.utils.getaddresses"]], "localtime() (in module email.utils)": [[206, "email.utils.localtime"]], "make_msgid() (in module email.utils)": [[206, "email.utils.make_msgid"]], "mktime_tz() (in module email.utils)": [[206, "email.utils.mktime_tz"]], "parseaddr() (in module email.utils)": [[206, "email.utils.parseaddr"]], "parsedate() (in module email.utils)": [[206, "email.utils.parsedate"]], "parsedate_to_datetime() (in module email.utils)": [[206, "email.utils.parsedate_to_datetime"]], "parsedate_tz() (in module email.utils)": [[206, "email.utils.parsedate_tz"]], "quote() (in module email.utils)": [[206, "email.utils.quote"]], "unquote() (in module email.utils)": [[206, "email.utils.unquote"]], "pep 453": [[207, "index-0"], [466, "index-22"], [466, "index-23"], [466, "index-24"], [474, "index-1"], [474, "index-19"], [474, "index-20"], [474, "index-27"], [474, "index-42"], [474, "index-5"], [474, "index-52"]], "bootstrap() (in module ensurepip)": [[207, "ensurepip.bootstrap"]], "ensurepip": [[207, "module-ensurepip"]], "version() (in module ensurepip)": [[207, "ensurepip.version"]], "conform (enum.flagboundary attribute)": [[208, "enum.FlagBoundary.CONFORM"]], "continuous (enum.enumcheck attribute)": [[208, "enum.EnumCheck.CONTINUOUS"]], "eject (enum.flagboundary attribute)": [[208, "enum.FlagBoundary.EJECT"]], "enum (class in enum)": [[208, "enum.Enum"]], "enumcheck (class in enum)": [[208, "enum.EnumCheck"]], "enumtype (class in enum)": [[208, "enum.EnumType"]], "flag (class in enum)": [[208, "enum.Flag"]], "flagboundary (class in enum)": [[208, "enum.FlagBoundary"]], "intenum (class in enum)": [[208, "enum.IntEnum"]], "intflag (class in enum)": [[208, "enum.IntFlag"]], "keep (enum.flagboundary attribute)": [[208, "enum.FlagBoundary.KEEP"]], "named_flags (enum.enumcheck attribute)": [[208, "enum.EnumCheck.NAMED_FLAGS"]], "reprenum (class in enum)": [[208, "enum.ReprEnum"]], "strict (enum.flagboundary attribute)": [[208, "enum.FlagBoundary.STRICT"]], "strenum (class in enum)": [[208, "enum.StrEnum"]], "unique (enum.enumcheck attribute)": [[208, "enum.EnumCheck.UNIQUE"]], "__and__() (enum.flag method)": [[208, "enum.Flag.__and__"]], "__call__() (enum.enumtype method)": [[208, "enum.EnumType.__call__"]], "__contains__() (enum.enumtype method)": [[208, "enum.EnumType.__contains__"]], "__contains__() (enum.flag method)": [[208, "enum.Flag.__contains__"]], "__dir__() (enum.enum method)": [[208, "enum.Enum.__dir__"]], "__dir__() (enum.enumtype method)": [[208, "enum.EnumType.__dir__"]], "__format__() (enum.enum method)": [[208, "enum.Enum.__format__"]], "__getitem__() (enum.enumtype method)": [[208, "enum.EnumType.__getitem__"]], "__init_subclass__() (enum.enum method)": [[208, "enum.Enum.__init_subclass__"]], "__iter__() (enum.enumtype method)": [[208, "enum.EnumType.__iter__"]], "__len__() (enum.enumtype method)": [[208, "enum.EnumType.__len__"]], "__or__() (enum.flag method)": [[208, "enum.Flag.__or__"]], "__repr__() (enum.enum method)": [[208, "enum.Enum.__repr__"]], "__reversed__() (enum.enumtype method)": [[208, "enum.EnumType.__reversed__"]], "__str__() (enum.enum method)": [[208, "enum.Enum.__str__"]], "__xor__() (enum.flag method)": [[208, "enum.Flag.__xor__"]], "_generate_next_value_() (enum.enum method)": [[208, "enum.Enum._generate_next_value_"]], "_ignore_ (enum.enum attribute)": [[208, "enum.Enum._ignore_"]], "_missing_() (enum.enum method)": [[208, "enum.Enum._missing_"]], "_numeric_repr_() (enum.flag method)": [[208, "enum.Flag._numeric_repr_"]], "auto (class in enum)": [[208, "enum.auto"]], "enum": [[208, "module-enum"]], "global_enum() (in module enum)": [[208, "enum.global_enum"]], "member() (in module enum)": [[208, "enum.member"]], "name (enum.enum attribute)": [[208, "enum.Enum.name"]], "nonmember() (in module enum)": [[208, "enum.nonmember"]], "property() (in module enum)": [[208, "enum.property"]], "show_flag_values() (in module enum)": [[208, "enum.show_flag_values"]], "unique() (in module enum)": [[208, "enum.unique"]], "value (enum.enum attribute)": [[208, "enum.Enum.value"]], "verify() (in module enum)": [[208, "enum.verify"]], "e2big (in module errno)": [[209, "errno.E2BIG"]], "eacces (in module errno)": [[209, "errno.EACCES"]], "eaddrinuse (in module errno)": [[209, "errno.EADDRINUSE"]], "eaddrnotavail (in module errno)": [[209, "errno.EADDRNOTAVAIL"]], "eadv (in module errno)": [[209, "errno.EADV"]], "eafnosupport (in module errno)": [[209, "errno.EAFNOSUPPORT"]], "eagain (in module errno)": [[209, "errno.EAGAIN"]], "ealready (in module errno)": [[209, "errno.EALREADY"]], "ebade (in module errno)": [[209, "errno.EBADE"]], "ebadf (in module errno)": [[209, "errno.EBADF"]], "ebadfd (in module errno)": [[209, "errno.EBADFD"]], "ebadmsg (in module errno)": [[209, "errno.EBADMSG"]], "ebadr (in module errno)": [[209, "errno.EBADR"]], "ebadrqc (in module errno)": [[209, "errno.EBADRQC"]], "ebadslt (in module errno)": [[209, "errno.EBADSLT"]], "ebfont (in module errno)": [[209, "errno.EBFONT"]], "ebusy (in module errno)": [[209, "errno.EBUSY"]], "ecanceled (in module errno)": [[209, "errno.ECANCELED"]], "echild (in module errno)": [[209, "errno.ECHILD"]], "echrng (in module errno)": [[209, "errno.ECHRNG"]], "ecomm (in module errno)": [[209, "errno.ECOMM"]], "econnaborted (in module errno)": [[209, "errno.ECONNABORTED"]], "econnrefused (in module errno)": [[209, "errno.ECONNREFUSED"]], "econnreset (in module errno)": [[209, "errno.ECONNRESET"]], "edeadlk (in module errno)": [[209, "errno.EDEADLK"]], "edeadlock (in module errno)": [[209, "errno.EDEADLOCK"]], "edestaddrreq (in module errno)": [[209, "errno.EDESTADDRREQ"]], "edom (in module errno)": [[209, "errno.EDOM"]], "edotdot (in module errno)": [[209, "errno.EDOTDOT"]], "edquot (in module errno)": [[209, "errno.EDQUOT"]], "eexist (in module errno)": [[209, "errno.EEXIST"]], "efault (in module errno)": [[209, "errno.EFAULT"]], "efbig (in module errno)": [[209, "errno.EFBIG"]], "ehostdown (in module errno)": [[209, "errno.EHOSTDOWN"]], "ehostunreach (in module errno)": [[209, "errno.EHOSTUNREACH"]], "eidrm (in module errno)": [[209, "errno.EIDRM"]], "eilseq (in module errno)": [[209, "errno.EILSEQ"]], "einprogress (in module errno)": [[209, "errno.EINPROGRESS"]], "eintr (in module errno)": [[209, "errno.EINTR"]], "einval (in module errno)": [[209, "errno.EINVAL"]], "eio (in module errno)": [[209, "errno.EIO"]], "eisconn (in module errno)": [[209, "errno.EISCONN"]], "eisdir (in module errno)": [[209, "errno.EISDIR"]], "eisnam (in module errno)": [[209, "errno.EISNAM"]], "el2hlt (in module errno)": [[209, "errno.EL2HLT"]], "el2nsync (in module errno)": [[209, "errno.EL2NSYNC"]], "el3hlt (in module errno)": [[209, "errno.EL3HLT"]], "el3rst (in module errno)": [[209, "errno.EL3RST"]], "elibacc (in module errno)": [[209, "errno.ELIBACC"]], "elibbad (in module errno)": [[209, "errno.ELIBBAD"]], "elibexec (in module errno)": [[209, "errno.ELIBEXEC"]], "elibmax (in module errno)": [[209, "errno.ELIBMAX"]], "elibscn (in module errno)": [[209, "errno.ELIBSCN"]], "elnrng (in module errno)": [[209, "errno.ELNRNG"]], "eloop (in module errno)": [[209, "errno.ELOOP"]], "emfile (in module errno)": [[209, "errno.EMFILE"]], "emlink (in module errno)": [[209, "errno.EMLINK"]], "emsgsize (in module errno)": [[209, "errno.EMSGSIZE"]], "emultihop (in module errno)": [[209, "errno.EMULTIHOP"]], "enametoolong (in module errno)": [[209, "errno.ENAMETOOLONG"]], "enavail (in module errno)": [[209, "errno.ENAVAIL"]], "enetdown (in module errno)": [[209, "errno.ENETDOWN"]], "enetreset (in module errno)": [[209, "errno.ENETRESET"]], "enetunreach (in module errno)": [[209, "errno.ENETUNREACH"]], "enfile (in module errno)": [[209, "errno.ENFILE"]], "enoano (in module errno)": [[209, "errno.ENOANO"]], "enobufs (in module errno)": [[209, "errno.ENOBUFS"]], "enocsi (in module errno)": [[209, "errno.ENOCSI"]], "enodata (in module errno)": [[209, "errno.ENODATA"]], "enodev (in module errno)": [[209, "errno.ENODEV"]], "enoent (in module errno)": [[209, "errno.ENOENT"]], "enoexec (in module errno)": [[209, "errno.ENOEXEC"]], "enolck (in module errno)": [[209, "errno.ENOLCK"]], "enolink (in module errno)": [[209, "errno.ENOLINK"]], "enomem (in module errno)": [[209, "errno.ENOMEM"]], "enomsg (in module errno)": [[209, "errno.ENOMSG"]], "enonet (in module errno)": [[209, "errno.ENONET"]], "enopkg (in module errno)": [[209, "errno.ENOPKG"]], "enoprotoopt (in module errno)": [[209, "errno.ENOPROTOOPT"]], "enospc (in module errno)": [[209, "errno.ENOSPC"]], "enosr (in module errno)": [[209, "errno.ENOSR"]], "enostr (in module errno)": [[209, "errno.ENOSTR"]], "enosys (in module errno)": [[209, "errno.ENOSYS"]], "enotblk (in module errno)": [[209, "errno.ENOTBLK"]], "enotcapable (in module errno)": [[209, "errno.ENOTCAPABLE"]], "enotconn (in module errno)": [[209, "errno.ENOTCONN"]], "enotdir (in module errno)": [[209, "errno.ENOTDIR"]], "enotempty (in module errno)": [[209, "errno.ENOTEMPTY"]], "enotnam (in module errno)": [[209, "errno.ENOTNAM"]], "enotrecoverable (in module errno)": [[209, "errno.ENOTRECOVERABLE"]], "enotsock (in module errno)": [[209, "errno.ENOTSOCK"]], "enotsup (in module errno)": [[209, "errno.ENOTSUP"]], "enotty (in module errno)": [[209, "errno.ENOTTY"]], "enotuniq (in module errno)": [[209, "errno.ENOTUNIQ"]], "enxio (in module errno)": [[209, "errno.ENXIO"]], "eopnotsupp (in module errno)": [[209, "errno.EOPNOTSUPP"]], "eoverflow (in module errno)": [[209, "errno.EOVERFLOW"]], "eownerdead (in module errno)": [[209, "errno.EOWNERDEAD"]], "eperm (in module errno)": [[209, "errno.EPERM"]], "epfnosupport (in module errno)": [[209, "errno.EPFNOSUPPORT"]], "epipe (in module errno)": [[209, "errno.EPIPE"]], "eproto (in module errno)": [[209, "errno.EPROTO"]], "eprotonosupport (in module errno)": [[209, "errno.EPROTONOSUPPORT"]], "eprototype (in module errno)": [[209, "errno.EPROTOTYPE"]], "eqfull (in module errno)": [[209, "errno.EQFULL"]], "erange (in module errno)": [[209, "errno.ERANGE"]], "eremchg (in module errno)": [[209, "errno.EREMCHG"]], "eremote (in module errno)": [[209, "errno.EREMOTE"]], "eremoteio (in module errno)": [[209, "errno.EREMOTEIO"]], "erestart (in module errno)": [[209, "errno.ERESTART"]], "erofs (in module errno)": [[209, "errno.EROFS"]], "eshutdown (in module errno)": [[209, "errno.ESHUTDOWN"]], "esocktnosupport (in module errno)": [[209, "errno.ESOCKTNOSUPPORT"]], "espipe (in module errno)": [[209, "errno.ESPIPE"]], "esrch (in module errno)": [[209, "errno.ESRCH"]], "esrmnt (in module errno)": [[209, "errno.ESRMNT"]], "estale (in module errno)": [[209, "errno.ESTALE"]], "estrpipe (in module errno)": [[209, "errno.ESTRPIPE"]], "etime (in module errno)": [[209, "errno.ETIME"]], "etimedout (in module errno)": [[209, "errno.ETIMEDOUT"]], "etoomanyrefs (in module errno)": [[209, "errno.ETOOMANYREFS"]], "etxtbsy (in module errno)": [[209, "errno.ETXTBSY"]], "euclean (in module errno)": [[209, "errno.EUCLEAN"]], "eunatch (in module errno)": [[209, "errno.EUNATCH"]], "eusers (in module errno)": [[209, "errno.EUSERS"]], "ewouldblock (in module errno)": [[209, "errno.EWOULDBLOCK"]], "exdev (in module errno)": [[209, "errno.EXDEV"]], "exfull (in module errno)": [[209, "errno.EXFULL"]], "errno": [[209, "module-errno"], [210, "index-5"]], "errorcode (in module errno)": [[209, "errno.errorcode"]], "arithmeticerror": [[210, "ArithmeticError"]], "assertionerror": [[210, "AssertionError"], [433, "index-19"]], "attributeerror": [[210, "AttributeError"], [427, "index-40"]], "baseexception": [[210, "BaseException"]], "baseexceptiongroup": [[210, "BaseExceptionGroup"]], "blockingioerror": [[210, "BlockingIOError"], [255, "io.BlockingIOError"]], "brokenpipeerror": [[210, "BrokenPipeError"]], "buffererror": [[210, "BufferError"]], "byteswarning": [[210, "BytesWarning"]], "childprocesserror": [[210, "ChildProcessError"]], "connectionabortederror": [[210, "ConnectionAbortedError"]], "connectionerror": [[210, "ConnectionError"]], "connectionrefusederror": [[210, "ConnectionRefusedError"]], "connectionreseterror": [[210, "ConnectionResetError"]], "deprecationwarning": [[210, "DeprecationWarning"]], "eoferror": [[210, "EOFError"]], "encodingwarning": [[210, "EncodingWarning"]], "environmenterror": [[210, "EnvironmentError"]], "exception": [[210, "Exception"], [210, "index-2"], [425, "index-66"], [426, "index-14"], [427, "index-32"], [427, "index-33"], [427, "index-36"], [427, "index-37"], [427, "index-4"], [427, "index-40"], [427, "index-63"], [427, "index-67"], [427, "index-72"], [433, "index-19"], [433, "index-26"], [433, "index-27"], [433, "index-29"], [433, "index-34"]], "exceptiongroup": [[210, "ExceptionGroup"]], "fileexistserror": [[210, "FileExistsError"]], "filenotfounderror": [[210, "FileNotFoundError"]], "floatingpointerror": [[210, "FloatingPointError"]], "futurewarning": [[210, "FutureWarning"]], "generatorexit": [[210, "GeneratorExit"], [427, "index-33"], [427, "index-37"]], "ioerror": [[210, "IOError"]], "importerror": [[210, "ImportError"], [433, "index-34"]], "importwarning": [[210, "ImportWarning"]], "indentationerror": [[210, "IndentationError"]], "indexerror": [[210, "IndexError"]], "interruptederror": [[210, "InterruptedError"]], "isadirectoryerror": [[210, "IsADirectoryError"]], "keyerror": [[210, "KeyError"]], "keyboardinterrupt": [[210, "KeyboardInterrupt"]], "lookuperror": [[210, "LookupError"]], "memoryerror": [[210, "MemoryError"]], "modulenotfounderror": [[210, "ModuleNotFoundError"]], "nameerror": [[210, "NameError"], [427, "index-4"]], "notadirectoryerror": [[210, "NotADirectoryError"]], "notimplementederror": [[210, "NotImplementedError"]], "oserror": [[210, "OSError"]], "overflowerror": [[210, "OverflowError"]], "pep 3134": [[210, "index-3"], [467, "index-12"], [467, "index-28"], [467, "index-29"]], "pep 475": [[210, "index-8"], [222, "index-9"], [290, "index-22"], [290, "index-24"], [290, "index-25"], [290, "index-44"], [325, "index-3"], [325, "index-4"], [325, "index-5"], [325, "index-6"], [325, "index-7"], [326, "index-0"], [330, "index-0"], [330, "index-1"], [334, "index-10"], [334, "index-11"], [334, "index-12"], [334, "index-13"], [334, "index-4"], [334, "index-5"], [334, "index-7"], [334, "index-8"], [334, "index-9"], [363, "index-8"], [475, "index-15"], [475, "index-16"], [475, "index-49"]], "pep 565": [[210, "index-10"], [477, "index-19"]], "pendingdeprecationwarning": [[210, "PendingDeprecationWarning"]], "permissionerror": [[210, "PermissionError"]], "processlookuperror": [[210, "ProcessLookupError"]], "recursionerror": [[210, "RecursionError"]], "referenceerror": [[210, "ReferenceError"]], "resourcewarning": [[210, "ResourceWarning"]], "runtimeerror": [[210, "RuntimeError"]], "runtimewarning": [[210, "RuntimeWarning"]], "stopasynciteration": [[210, "StopAsyncIteration"], [427, "index-36"]], "stopiteration": [[210, "StopIteration"], [427, "index-32"], [433, "index-26"]], "syntaxerror": [[210, "SyntaxError"]], "syntaxwarning": [[210, "SyntaxWarning"]], "systemerror": [[210, "SystemError"]], "systemexit": [[210, "SystemExit"]], "taberror": [[210, "TabError"]], "typeerror": [[210, "TypeError"], [427, "index-63"]], "unboundlocalerror": [[210, "UnboundLocalError"], [426, "index-9"]], "unicodedecodeerror": [[210, "UnicodeDecodeError"]], "unicodeencodeerror": [[210, "UnicodeEncodeError"]], "unicodeerror": [[210, "UnicodeError"]], "unicodetranslateerror": [[210, "UnicodeTranslateError"]], "unicodewarning": [[210, "UnicodeWarning"]], "userwarning": [[210, "UserWarning"]], "valueerror": [[210, "ValueError"], [427, "index-72"]], "warning": [[210, "Warning"], [337, "sqlite3.Warning"]], "windowserror": [[210, "WindowsError"]], "zerodivisionerror": [[210, "ZeroDivisionError"], [427, "index-67"]], "__cause__ (baseexception attribute)": [[210, "BaseException.__cause__"]], "__cause__ (exception attribute)": [[210, "index-2"], [433, "index-29"]], "__context__ (baseexception attribute)": [[210, "BaseException.__context__"]], "__context__ (exception attribute)": [[210, "index-2"], [433, "index-29"]], "__notes__ (baseexception attribute)": [[210, "BaseException.__notes__"]], "__suppress_context__ (baseexception attribute)": [[210, "BaseException.__suppress_context__"]], "__suppress_context__ (exception attribute)": [[210, "index-2"]], "__traceback__ (baseexception attribute)": [[210, "BaseException.__traceback__"]], "add_note() (baseexception method)": [[210, "BaseException.add_note"]], "args (baseexception attribute)": [[210, "BaseException.args"]], "assert": [[210, "index-4"], [433, "index-18"]], "chaining": [[210, "index-2"], [341, "index-7"], [427, "index-78"], [433, "index-29"]], "characters_written (blockingioerror attribute)": [[210, "BlockingIOError.characters_written"]], "code (systemexit attribute)": [[210, "SystemExit.code"]], "derive() (baseexceptiongroup method)": [[210, "BaseExceptionGroup.derive"]], "encoding (unicodeerror attribute)": [[210, "UnicodeError.encoding"]], "end (unicodeerror attribute)": [[210, "UnicodeError.end"]], "end_lineno (syntaxerror attribute)": [[210, "SyntaxError.end_lineno"]], "end_offset (syntaxerror attribute)": [[210, "SyntaxError.end_offset"]], "errno (oserror attribute)": [[210, "OSError.errno"]], "except": [[210, "index-0"], [424, "index-9"]], "exceptions (baseexceptiongroup attribute)": [[210, "BaseExceptionGroup.exceptions"]], "filename (oserror attribute)": [[210, "OSError.filename"]], "filename (syntaxerror attribute)": [[210, "SyntaxError.filename"]], "filename2 (oserror attribute)": [[210, "OSError.filename2"]], "lineno (syntaxerror attribute)": [[210, "SyntaxError.lineno"]], "message (baseexceptiongroup attribute)": [[210, "BaseExceptionGroup.message"]], "name (importerror attribute)": [[210, "ImportError.name"]], "object (unicodeerror attribute)": [[210, "UnicodeError.object"]], "offset (syntaxerror attribute)": [[210, "SyntaxError.offset"]], "path (importerror attribute)": [[210, "ImportError.path"]], "raise": [[210, "index-1"], [433, "index-27"]], "reason (unicodeerror attribute)": [[210, "UnicodeError.reason"]], "split() (baseexceptiongroup method)": [[210, "BaseExceptionGroup.split"]], "start (unicodeerror attribute)": [[210, "UnicodeError.start"]], "strerror (oserror attribute)": [[210, "OSError.strerror"]], "subgroup() (baseexceptiongroup method)": [[210, "BaseExceptionGroup.subgroup"]], "text (syntaxerror attribute)": [[210, "SyntaxError.text"]], "try": [[210, "index-0"], [424, "index-9"], [425, "index-67"]], "value (stopiteration attribute)": [[210, "StopIteration.value"]], "winerror (oserror attribute)": [[210, "OSError.winerror"]], "with_traceback() (baseexception method)": [[210, "BaseException.with_traceback"]], "cancel_dump_traceback_later() (in module faulthandler)": [[211, "faulthandler.cancel_dump_traceback_later"]], "disable() (in module faulthandler)": [[211, "faulthandler.disable"]], "dump_traceback() (in module faulthandler)": [[211, "faulthandler.dump_traceback"]], "dump_traceback_later() (in module faulthandler)": [[211, "faulthandler.dump_traceback_later"]], "enable() (in module faulthandler)": [[211, "faulthandler.enable"]], "faulthandler": [[211, "module-faulthandler"]], "is_enabled() (in module faulthandler)": [[211, "faulthandler.is_enabled"]], "register() (in module faulthandler)": [[211, "faulthandler.register"]], "unregister() (in module faulthandler)": [[211, "faulthandler.unregister"]], "i/o control": [[212, "index-0"], [222, "index-8"], [334, "index-6"], [358, "index-0"]], "unix": [[212, "index-0"], [434, "index-4"]], "fcntl": [[212, "module-fcntl"]], "fcntl() (in module fcntl)": [[212, "fcntl.fcntl"]], "file control": [[212, "index-0"]], "flock() (in module fcntl)": [[212, "fcntl.flock"]], "ioctl() (in module fcntl)": [[212, "fcntl.ioctl"]], "lockf() (in module fcntl)": [[212, "fcntl.lockf"]], "default_ignores (in module filecmp)": [[213, "filecmp.DEFAULT_IGNORES"]], "clear_cache() (in module filecmp)": [[213, "filecmp.clear_cache"]], "cmp() (in module filecmp)": [[213, "filecmp.cmp"]], "cmpfiles() (in module filecmp)": [[213, "filecmp.cmpfiles"]], "common (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.common"]], "common_dirs (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.common_dirs"]], "common_files (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.common_files"]], "common_funny (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.common_funny"]], "diff_files (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.diff_files"]], "dircmp (class in filecmp)": [[213, "filecmp.dircmp"]], "filecmp": [[213, "module-filecmp"]], "funny_files (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.funny_files"]], "left (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.left"]], "left_list (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.left_list"]], "left_only (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.left_only"]], "report() (filecmp.dircmp method)": [[213, "filecmp.dircmp.report"]], "report_full_closure() (filecmp.dircmp method)": [[213, "filecmp.dircmp.report_full_closure"]], "report_partial_closure() (filecmp.dircmp method)": [[213, "filecmp.dircmp.report_partial_closure"]], "right (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.right"]], "right_list (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.right_list"]], "right_only (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.right_only"]], "same_files (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.same_files"]], "subdirs (filecmp.dircmp attribute)": [[213, "filecmp.dircmp.subdirs"]], "fileinput (class in fileinput)": [[215, "fileinput.FileInput"]], "close() (in module fileinput)": [[215, "fileinput.close"]], "fileinput": [[215, "module-fileinput"]], "filelineno() (in module fileinput)": [[215, "fileinput.filelineno"]], "filename() (in module fileinput)": [[215, "fileinput.filename"]], "fileno() (in module fileinput)": [[215, "fileinput.fileno"]], "hook_compressed() (in module fileinput)": [[215, "fileinput.hook_compressed"]], "hook_encoded() (in module fileinput)": [[215, "fileinput.hook_encoded"]], "input() (in module fileinput)": [[215, "fileinput.input"]], "isfirstline() (in module fileinput)": [[215, "fileinput.isfirstline"]], "isstdin() (in module fileinput)": [[215, "fileinput.isstdin"]], "lineno() (in module fileinput)": [[215, "fileinput.lineno"]], "nextfile() (in module fileinput)": [[215, "fileinput.nextfile"]], "[] (square brackets)": [[217, "index-2"], [228, "index-1"], [316, "index-10"], [342, "index-2"], [427, "index-15"], [427, "index-41"], [433, "index-6"]], "filenames": [[217, "index-0"], [228, "index-0"]], "filter() (in module fnmatch)": [[217, "fnmatch.filter"]], "fnmatch": [[217, "module-fnmatch"]], "fnmatch() (in module fnmatch)": [[217, "fnmatch.fnmatch"]], "fnmatchcase() (in module fnmatch)": [[217, "fnmatch.fnmatchcase"]], "glob": [[217, "index-3"], [228, "module-glob"]], "in glob-style wildcards": [[217, "index-2"], [228, "index-1"], [228, "index-2"]], "re": [[217, "index-1"], [316, "module-re"], [341, "index-33"]], "translate() (in module fnmatch)": [[217, "fnmatch.translate"]], "wildcard expansion": [[217, "index-0"]], "fraction (class in fractions)": [[218, "fractions.Fraction"]], "pep 515": [[218, "index-0"], [342, "index-11"], [470, "index-26"], [476, "index-7"], [476, "index-8"]], "__ceil__() (fractions.fraction method)": [[218, "fractions.Fraction.__ceil__"]], "__floor__() (fractions.fraction method)": [[218, "fractions.Fraction.__floor__"]], "__format__() (fractions.fraction method)": [[218, "fractions.Fraction.__format__"]], "__round__() (fractions.fraction method)": [[218, "fractions.Fraction.__round__"]], "as_integer_ratio() (fractions.fraction method)": [[218, "fractions.Fraction.as_integer_ratio"]], "denominator (fractions.fraction attribute)": [[218, "fractions.Fraction.denominator"]], "fractions": [[218, "module-fractions"]], "from_decimal() (fractions.fraction class method)": [[218, "fractions.Fraction.from_decimal"]], "from_float() (fractions.fraction class method)": [[218, "fractions.Fraction.from_float"]], "is_integer() (fractions.fraction method)": [[218, "fractions.Fraction.is_integer"]], "limit_denominator() (fractions.fraction method)": [[218, "fractions.Fraction.limit_denominator"]], "numerator (fractions.fraction attribute)": [[218, "fractions.Fraction.numerator"]], "ftp": [[220, "index-0"], [392, "index-11"], [392, "index-9"]], "ftp (class in ftplib)": [[220, "ftplib.FTP"]], "ftp_tls (class in ftplib)": [[220, "ftplib.FTP_TLS"]], "rfc 2640": [[220, "index-2"], [220, "index-3"], [220, "index-6"], [479, "index-22"]], "rfc 3659": [[220, "index-4"]], "rfc 4217": [[220, "index-5"]], "rfc 959": [[220, "index-1"]], "abort() (ftplib.ftp method)": [[220, "ftplib.FTP.abort"]], "all_errors (in module ftplib)": [[220, "ftplib.all_errors"]], "auth() (ftplib.ftp_tls method)": [[220, "ftplib.FTP_TLS.auth"]], "ccc() (ftplib.ftp_tls method)": [[220, "ftplib.FTP_TLS.ccc"]], "close() (ftplib.ftp method)": [[220, "ftplib.FTP.close"]], "connect() (ftplib.ftp method)": [[220, "ftplib.FTP.connect"]], "cwd() (ftplib.ftp method)": [[220, "ftplib.FTP.cwd"]], "delete() (ftplib.ftp method)": [[220, "ftplib.FTP.delete"]], "dir() (ftplib.ftp method)": [[220, "ftplib.FTP.dir"]], "error_perm": [[220, "ftplib.error_perm"]], "error_proto": [[220, "ftplib.error_proto"], [302, "poplib.error_proto"]], "error_reply": [[220, "ftplib.error_reply"]], "error_temp": [[220, "ftplib.error_temp"]], "ftplib": [[220, "module-ftplib"]], "ftplib (standard module)": [[220, "index-0"]], "getwelcome() (ftplib.ftp method)": [[220, "ftplib.FTP.getwelcome"]], "login() (ftplib.ftp method)": [[220, "ftplib.FTP.login"]], "mkd() (ftplib.ftp method)": [[220, "ftplib.FTP.mkd"]], "mlsd() (ftplib.ftp method)": [[220, "ftplib.FTP.mlsd"]], "nlst() (ftplib.ftp method)": [[220, "ftplib.FTP.nlst"]], "ntransfercmd() (ftplib.ftp method)": [[220, "ftplib.FTP.ntransfercmd"]], "prot_c() (ftplib.ftp_tls method)": [[220, "ftplib.FTP_TLS.prot_c"]], "prot_p() (ftplib.ftp_tls method)": [[220, "ftplib.FTP_TLS.prot_p"]], "pwd() (ftplib.ftp method)": [[220, "ftplib.FTP.pwd"]], "quit() (ftplib.ftp method)": [[220, "ftplib.FTP.quit"]], "rename() (ftplib.ftp method)": [[220, "ftplib.FTP.rename"]], "retrbinary() (ftplib.ftp method)": [[220, "ftplib.FTP.retrbinary"]], "retrlines() (ftplib.ftp method)": [[220, "ftplib.FTP.retrlines"]], "rmd() (ftplib.ftp method)": [[220, "ftplib.FTP.rmd"]], "sendcmd() (ftplib.ftp method)": [[220, "ftplib.FTP.sendcmd"]], "set_debuglevel() (ftplib.ftp method)": [[220, "ftplib.FTP.set_debuglevel"]], "set_pasv() (ftplib.ftp method)": [[220, "ftplib.FTP.set_pasv"]], "size() (ftplib.ftp method)": [[220, "ftplib.FTP.size"]], "ssl_version (ftplib.ftp_tls attribute)": [[220, "ftplib.FTP_TLS.ssl_version"]], "storbinary() (ftplib.ftp method)": [[220, "ftplib.FTP.storbinary"]], "storlines() (ftplib.ftp method)": [[220, "ftplib.FTP.storlines"]], "transfercmd() (ftplib.ftp method)": [[220, "ftplib.FTP.transfercmd"]], "voidcmd() (ftplib.ftp method)": [[220, "ftplib.FTP.voidcmd"]], "boolean": [[222, "index-0"], [341, "index-1"], [341, "index-11"], [341, "index-17"], [341, "index-5"], [425, "index-12"], [427, "index-82"]], "infinity": [[222, "index-3"]], "nan": [[222, "index-3"]], "pythonbreakpoint": [[222, "index-1"], [349, "index-3"], [349, "index-4"], [349, "index-5"], [452, "envvar-PYTHONBREAKPOINT"], [477, "index-12"]], "pythoncaseok": [[222, "index-16"], [452, "envvar-PYTHONCASEOK"], [460, "index-11"], [479, "index-21"]], "__format__": [[222, "index-4"]], "__import__()": [[222, "import__"]], "abs()": [[222, "abs"]], "aiter()": [[222, "aiter"]], "all()": [[222, "all"]], "anext()": [[222, "anext"]], "any()": [[222, "any"]], "ascii()": [[222, "ascii"]], "bin()": [[222, "bin"]], "binary mode": [[222, "index-8"]], "bool (built-in class)": [[222, "bool"]], "breakpoint()": [[222, "breakpoint"]], "buffer size, i/o": [[222, "index-8"]], "buffering": [[222, "index-8"], [334, "index-6"]], "callable()": [[222, "callable"]], "chr()": [[222, "chr"]], "classmethod()": [[222, "classmethod"]], "compile()": [[222, "compile"]], "complex (built-in class)": [[222, "complex"]], "delattr()": [[222, "delattr"]], "dir()": [[222, "dir"]], "divmod()": [[222, "divmod"]], "enumerate()": [[222, "enumerate"]], "eval()": [[222, "eval"]], "exec": [[222, "index-2"], [341, "index-64"], [433, "index-44"]], "exec()": [[222, "exec"]], "filter()": [[222, "filter"]], "float (built-in class)": [[222, "float"]], "format()": [[222, "format"]], "format() (built-in function)": [[222, "index-4"], [425, "index-76"]], "getattr()": [[222, "getattr"]], "globals()": [[222, "globals"]], "hasattr()": [[222, "hasattr"]], "hash()": [[222, "hash"]], "help()": [[222, "help"]], "hex()": [[222, "hex"]], "id()": [[222, "id"]], "import": [[222, "index-13"], [331, "index-2"], [425, "index-44"], [429, "index-9"], [433, "index-34"], [433, "index-39"]], "input()": [[222, "input"]], "int (built-in class)": [[222, "int"]], "isinstance()": [[222, "isinstance"]], "issubclass()": [[222, "issubclass"]], "iter()": [[222, "iter"]], "len()": [[222, "len"]], "line-buffered i/o": [[222, "index-8"]], "locals()": [[222, "locals"]], "map()": [[222, "map"]], "max()": [[222, "max"]], "min()": [[222, "min"]], "modes": [[222, "index-6"]], "next()": [[222, "next"]], "object (built-in class)": [[222, "object"]], "oct()": [[222, "oct"]], "open()": [[222, "open"]], "open() built-in function": [[222, "index-5"], [222, "index-7"]], "ord()": [[222, "ord"]], "pow()": [[222, "pow"]], "print()": [[222, "print"]], "property (built-in class)": [[222, "property"]], "property.deleter()": [[222, "property.deleter"]], "property.getter()": [[222, "property.getter"]], "property.setter()": [[222, "property.setter"]], "repr()": [[222, "repr"]], "reversed()": [[222, "reversed"]], "round()": [[222, "round"]], "setattr()": [[222, "setattr"]], "slice (built-in class)": [[222, "slice"]], "sorted()": [[222, "sorted"]], "start (slice attribute)": [[222, "slice.start"]], "staticmethod()": [[222, "staticmethod"]], "step (slice attribute)": [[222, "slice.step"]], "stop (slice attribute)": [[222, "slice.stop"]], "str() (built-in function)": [[222, "index-11"]], "sum()": [[222, "sum"]], "super (built-in class)": [[222, "super"]], "text mode": [[222, "index-8"]], "type (built-in class)": [[222, "type"]], "unbuffered i/o": [[222, "index-8"]], "vars()": [[222, "vars"]], "zip()": [[222, "zip"]], "pep 412": [[223, "index-0"], [473, "index-16"]], "args (functools.partial attribute)": [[223, "functools.partial.args"]], "cache() (in module functools)": [[223, "functools.cache"]], "cached_property() (in module functools)": [[223, "functools.cached_property"]], "cmp_to_key() (in module functools)": [[223, "functools.cmp_to_key"]], "func (functools.partial attribute)": [[223, "functools.partial.func"]], "functools": [[223, "module-functools"]], "keywords (functools.partial attribute)": [[223, "functools.partial.keywords"]], "lru_cache() (in module functools)": [[223, "functools.lru_cache"]], "partial() (in module functools)": [[223, "functools.partial"]], "partialmethod (class in functools)": [[223, "functools.partialmethod"]], "reduce() (in module functools)": [[223, "functools.reduce"]], "singledispatch() (in module functools)": [[223, "functools.singledispatch"]], "singledispatchmethod (class in functools)": [[223, "functools.singledispatchmethod"]], "total_ordering() (in module functools)": [[223, "functools.total_ordering"]], "update_wrapper() (in module functools)": [[223, "functools.update_wrapper"]], "wraps() (in module functools)": [[223, "functools.wraps"]], "debug_collectable (in module gc)": [[224, "gc.DEBUG_COLLECTABLE"]], "debug_leak (in module gc)": [[224, "gc.DEBUG_LEAK"]], "debug_saveall (in module gc)": [[224, "gc.DEBUG_SAVEALL"]], "debug_stats (in module gc)": [[224, "gc.DEBUG_STATS"]], "debug_uncollectable (in module gc)": [[224, "gc.DEBUG_UNCOLLECTABLE"]], "callbacks (in module gc)": [[224, "gc.callbacks"]], "collect() (in module gc)": [[224, "gc.collect"]], "disable() (in module gc)": [[224, "gc.disable"]], "enable() (in module gc)": [[224, "gc.enable"]], "freeze() (in module gc)": [[224, "gc.freeze"]], "garbage (in module gc)": [[224, "gc.garbage"]], "gc": [[224, "module-gc"]], "get_count() (in module gc)": [[224, "gc.get_count"]], "get_debug() (in module gc)": [[224, "gc.get_debug"]], "get_freeze_count() (in module gc)": [[224, "gc.get_freeze_count"]], "get_objects() (in module gc)": [[224, "gc.get_objects"]], "get_referents() (in module gc)": [[224, "gc.get_referents"]], "get_referrers() (in module gc)": [[224, "gc.get_referrers"]], "get_stats() (in module gc)": [[224, "gc.get_stats"]], "get_threshold() (in module gc)": [[224, "gc.get_threshold"]], "is_finalized() (in module gc)": [[224, "gc.is_finalized"]], "is_tracked() (in module gc)": [[224, "gc.is_tracked"]], "isenabled() (in module gc)": [[224, "gc.isenabled"]], "set_debug() (in module gc)": [[224, "gc.set_debug"]], "set_threshold() (in module gc)": [[224, "gc.set_threshold"]], "unfreeze() (in module gc)": [[224, "gc.unfreeze"]], "getopterror": [[225, "getopt.GetoptError"]], "posixly_correct": [[225, "index-0"]], "getopt": [[225, "module-getopt"]], "getopt() (in module getopt)": [[225, "getopt.getopt"]], "gnu_getopt() (in module getopt)": [[225, "getopt.gnu_getopt"]], "getpasswarning": [[226, "getpass.GetPassWarning"]], "logname": [[226, "index-0"], [290, "index-10"]], "user": [[226, "index-1"], [290, "index-16"], [290, "index-19"], [290, "index-8"]], "username": [[226, "index-2"], [290, "index-11"], [291, "index-7"]], "getpass": [[226, "module-getpass"]], "getpass() (in module getpass)": [[226, "getpass.getpass"]], "getuser() (in module getpass)": [[226, "getpass.getuser"]], "gnome": [[227, "index-10"]], "gnutranslations (class in gettext)": [[227, "gettext.GNUTranslations"]], "lang": [[227, "index-3"], [227, "index-8"], [263, "index-1"], [263, "index-2"], [263, "index-3"]], "language": [[227, "index-0"], [227, "index-5"], [341, "index-11"], [425, "index-13"], [425, "index-4"], [425, "index-42"], [427, "index-77"]], "lc_all": [[227, "index-1"], [227, "index-6"]], "lc_messages": [[227, "index-2"], [227, "index-7"]], "nulltranslations (class in gettext)": [[227, "gettext.NullTranslations"]], "_ (underscore)": [[227, "index-4"], [342, "index-10"], [432, "index-28"], [432, "index-29"]], "_parse() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations._parse"]], "add_fallback() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.add_fallback"]], "bindtextdomain() (in module gettext)": [[227, "gettext.bindtextdomain"]], "charset() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.charset"]], "dgettext() (in module gettext)": [[227, "gettext.dgettext"]], "dngettext() (in module gettext)": [[227, "gettext.dngettext"]], "dnpgettext() (in module gettext)": [[227, "gettext.dnpgettext"]], "dpgettext() (in module gettext)": [[227, "gettext.dpgettext"]], "find() (in module gettext)": [[227, "gettext.find"]], "gettext": [[227, "index-4"], [227, "module-gettext"]], "gettext() (gettext.gnutranslations method)": [[227, "gettext.GNUTranslations.gettext"]], "gettext() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.gettext"]], "gettext() (in module gettext)": [[227, "gettext.gettext"]], "info() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.info"]], "install() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.install"]], "install() (in module gettext)": [[227, "gettext.install"]], "ngettext() (gettext.gnutranslations method)": [[227, "gettext.GNUTranslations.ngettext"]], "ngettext() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.ngettext"]], "ngettext() (in module gettext)": [[227, "gettext.ngettext"]], "npgettext() (gettext.gnutranslations method)": [[227, "gettext.GNUTranslations.npgettext"]], "npgettext() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.npgettext"]], "npgettext() (in module gettext)": [[227, "gettext.npgettext"]], "pgettext() (gettext.gnutranslations method)": [[227, "gettext.GNUTranslations.pgettext"]], "pgettext() (gettext.nulltranslations method)": [[227, "gettext.NullTranslations.pgettext"]], "pgettext() (in module gettext)": [[227, "gettext.pgettext"]], "textdomain() (in module gettext)": [[227, "gettext.textdomain"]], "translation() (in module gettext)": [[227, "gettext.translation"]], "**": [[228, "index-2"], [341, "index-13"], [424, "index-32"], [427, "index-18"], [427, "index-50"], [427, "index-58"], [438, "index-4"]], ". (dot)": [[228, "index-1"], [290, "index-45"], [290, "index-50"], [316, "index-0"], [341, "index-36"], [341, "index-46"], [342, "index-2"], [427, "index-39"], [432, "index-29"]], "escape() (in module glob)": [[228, "glob.escape"]], "glob() (in module glob)": [[228, "glob.glob"]], "iglob() (in module glob)": [[228, "glob.iglob"]], "pathname expansion": [[228, "index-0"]], "cycleerror": [[229, "graphlib.CycleError"]], "topologicalsorter (class in graphlib)": [[229, "graphlib.TopologicalSorter"]], "add() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.add"]], "done() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.done"]], "get_ready() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.get_ready"]], "graphlib": [[229, "module-graphlib"]], "is_active() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.is_active"]], "prepare() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.prepare"]], "static_order() (graphlib.topologicalsorter method)": [[229, "graphlib.TopologicalSorter.static_order"]], "getgrall() (in module grp)": [[230, "grp.getgrall"]], "getgrgid() (in module grp)": [[230, "grp.getgrgid"]], "getgrnam() (in module grp)": [[230, "grp.getgrnam"]], "grp": [[230, "module-grp"]], "--best": [[231, "cmdoption-gzip-best"]], "--decompress": [[231, "cmdoption-gzip-d"]], "--fast": [[231, "cmdoption-gzip-fast"]], "badgzipfile": [[231, "gzip.BadGzipFile"]], "gzipfile (class in gzip)": [[231, "gzip.GzipFile"]], "compress() (in module gzip)": [[231, "gzip.compress"]], "decompress() (in module gzip)": [[231, "gzip.decompress"]], "gzip": [[231, "module-gzip"]], "gzip command line option": [[231, "cmdoption-gzip-arg-file"], [231, "cmdoption-gzip-best"], [231, "cmdoption-gzip-d"], [231, "cmdoption-gzip-fast"], [231, "cmdoption-gzip-h"]], "mtime (gzip.gzipfile attribute)": [[231, "gzip.GzipFile.mtime"]], "name (gzip.gzipfile attribute)": [[231, "gzip.GzipFile.name"]], "open() (in module gzip)": [[231, "gzip.open"]], "peek() (gzip.gzipfile method)": [[231, "gzip.GzipFile.peek"]], "(use in module hashlib)": [[232, "index-2"]], "openssl": [[232, "index-2"], [338, "index-0"]], "rfc 1321": [[232, "index-1"]], "rfc 7693": [[232, "index-5"]], "rfc 7914": [[232, "index-3"]], "algorithms_available (in module hashlib)": [[232, "hashlib.algorithms_available"]], "algorithms_guaranteed (in module hashlib)": [[232, "hashlib.algorithms_guaranteed"]], "blake2b() (in module hashlib)": [[232, "hashlib.blake2b"]], "blake2b, blake2s": [[232, "index-4"]], "blake2b.max_digest_size (in module hashlib)": [[232, "hashlib.blake2b.MAX_DIGEST_SIZE"]], "blake2b.max_key_size (in module hashlib)": [[232, "hashlib.blake2b.MAX_KEY_SIZE"]], "blake2b.person_size (in module hashlib)": [[232, "hashlib.blake2b.PERSON_SIZE"]], "blake2b.salt_size (in module hashlib)": [[232, "hashlib.blake2b.SALT_SIZE"]], "blake2s() (in module hashlib)": [[232, "hashlib.blake2s"]], "blake2s.max_digest_size (in module hashlib)": [[232, "hashlib.blake2s.MAX_DIGEST_SIZE"]], "blake2s.max_key_size (in module hashlib)": [[232, "hashlib.blake2s.MAX_KEY_SIZE"]], "blake2s.person_size (in module hashlib)": [[232, "hashlib.blake2s.PERSON_SIZE"]], "blake2s.salt_size (in module hashlib)": [[232, "hashlib.blake2s.SALT_SIZE"]], "copy() (hashlib.hash method)": [[232, "hashlib.hash.copy"]], "digest() (hashlib.hash method)": [[232, "hashlib.hash.digest"]], "digest() (hashlib.shake method)": [[232, "hashlib.shake.digest"]], "file_digest() (in module hashlib)": [[232, "hashlib.file_digest"]], "hash.block_size (in module hashlib)": [[232, "hashlib.hash.block_size"]], "hash.digest_size (in module hashlib)": [[232, "hashlib.hash.digest_size"]], "hashlib": [[232, "module-hashlib"]], "hexdigest() (hashlib.hash method)": [[232, "hashlib.hash.hexdigest"]], "hexdigest() (hashlib.shake method)": [[232, "hashlib.shake.hexdigest"]], "md5() (in module hashlib)": [[232, "hashlib.md5"]], "message digest, md5": [[232, "index-0"]], "name (hashlib.hash attribute)": [[232, "hashlib.hash.name"]], "new() (in module hashlib)": [[232, "hashlib.new"]], "pbkdf2_hmac() (in module hashlib)": [[232, "hashlib.pbkdf2_hmac"]], "scrypt() (in module hashlib)": [[232, "hashlib.scrypt"]], "secure hash algorithm, sha1, sha2, sha224, sha256, sha384, sha512, sha3, shake, blake2": [[232, "index-0"]], "sha1() (in module hashlib)": [[232, "hashlib.sha1"]], "sha224() (in module hashlib)": [[232, "hashlib.sha224"]], "sha256() (in module hashlib)": [[232, "hashlib.sha256"]], "sha384() (in module hashlib)": [[232, "hashlib.sha384"]], "sha3_224() (in module hashlib)": [[232, "hashlib.sha3_224"]], "sha3_256() (in module hashlib)": [[232, "hashlib.sha3_256"]], "sha3_384() (in module hashlib)": [[232, "hashlib.sha3_384"]], "sha3_512() (in module hashlib)": [[232, "hashlib.sha3_512"]], "sha512() (in module hashlib)": [[232, "hashlib.sha512"]], "shake_128() (in module hashlib)": [[232, "hashlib.shake_128"]], "shake_256() (in module hashlib)": [[232, "hashlib.shake_256"]], "update() (hashlib.hash method)": [[232, "hashlib.hash.update"]], "heapify() (in module heapq)": [[233, "heapq.heapify"]], "heappop() (in module heapq)": [[233, "heapq.heappop"]], "heappush() (in module heapq)": [[233, "heapq.heappush"]], "heappushpop() (in module heapq)": [[233, "heapq.heappushpop"]], "heapq": [[233, "module-heapq"]], "heapreplace() (in module heapq)": [[233, "heapq.heapreplace"]], "merge() (in module heapq)": [[233, "heapq.merge"]], "nlargest() (in module heapq)": [[233, "heapq.nlargest"]], "nsmallest() (in module heapq)": [[233, "heapq.nsmallest"]], "rfc 2104": [[234, "index-0"], [461, "index-17"]], "block_size (hmac.hmac attribute)": [[234, "hmac.HMAC.block_size"]], "compare_digest() (in module hmac)": [[234, "hmac.compare_digest"]], "copy() (hmac.hmac method)": [[234, "hmac.HMAC.copy"]], "digest() (hmac.hmac method)": [[234, "hmac.HMAC.digest"]], "digest() (in module hmac)": [[234, "hmac.digest"]], "digest_size (hmac.hmac attribute)": [[234, "hmac.HMAC.digest_size"]], "hexdigest() (hmac.hmac method)": [[234, "hmac.HMAC.hexdigest"]], "hmac": [[234, "module-hmac"]], "name (hmac.hmac attribute)": [[234, "hmac.HMAC.name"]], "new() (in module hmac)": [[234, "hmac.new"]], "update() (hmac.hmac method)": [[234, "hmac.HMAC.update"]], "escape() (in module html)": [[235, "html.escape"]], "html": [[235, "module-html"], [237, "index-0"], [392, "index-10"]], "unescape() (in module html)": [[235, "html.unescape"]], "codepoint2name (in module html.entities)": [[236, "html.entities.codepoint2name"]], "entitydefs (in module html.entities)": [[236, "html.entities.entitydefs"]], "html.entities": [[236, "module-html.entities"]], "html5 (in module html.entities)": [[236, "html.entities.html5"]], "name2codepoint (in module html.entities)": [[236, "html.entities.name2codepoint"]], "htmlparser (class in html.parser)": [[237, "html.parser.HTMLParser"]], "xhtml": [[237, "index-0"]], "close() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.close"]], "feed() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.feed"]], "get_starttag_text() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.get_starttag_text"]], "getpos() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.getpos"]], "handle_charref() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_charref"]], "handle_comment() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_comment"]], "handle_data() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_data"]], "handle_decl() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_decl"]], "handle_endtag() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_endtag"]], "handle_entityref() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_entityref"]], "handle_pi() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_pi"]], "handle_startendtag() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_startendtag"]], "handle_starttag() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.handle_starttag"]], "html.parser": [[237, "module-html.parser"]], "reset() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.reset"]], "unknown_decl() (html.parser.htmlparser method)": [[237, "html.parser.HTMLParser.unknown_decl"]], "httpmethod (class in http)": [[238, "http.HTTPMethod"]], "httpstatus (class in http)": [[238, "http.HTTPStatus"]], "rfc 2295": [[238, "index-58"]], "rfc 2324": [[238, "index-41"]], "rfc 2518": [[238, "index-3"]], "rfc 2774": [[238, "index-61"]], "rfc 3229": [[238, "index-14"]], "rfc 4918": [[238, "index-12"], [238, "index-43"], [238, "index-44"], [238, "index-45"], [238, "index-59"]], "rfc 5789": [[238, "index-76"]], "rfc 5842": [[238, "index-13"], [238, "index-60"]], "rfc 6585": [[238, "index-48"], [238, "index-49"], [238, "index-50"], [238, "index-62"]], "rfc 7231": [[238, "index-1"], [238, "index-10"], [238, "index-15"], [238, "index-16"], [238, "index-17"], [238, "index-18"], [238, "index-2"], [238, "index-20"], [238, "index-21"], [238, "index-23"], [238, "index-25"], [238, "index-26"], [238, "index-27"], [238, "index-28"], [238, "index-29"], [238, "index-31"], [238, "index-32"], [238, "index-33"], [238, "index-34"], [238, "index-36"], [238, "index-37"], [238, "index-38"], [238, "index-40"], [238, "index-47"], [238, "index-5"], [238, "index-52"], [238, "index-53"], [238, "index-54"], [238, "index-55"], [238, "index-56"], [238, "index-57"], [238, "index-6"], [238, "index-63"], [238, "index-64"], [238, "index-65"], [238, "index-66"], [238, "index-67"], [238, "index-68"], [238, "index-69"], [238, "index-7"], [238, "index-70"], [238, "index-71"], [238, "index-72"], [238, "index-73"], [238, "index-74"], [238, "index-75"], [238, "index-8"], [238, "index-9"]], "rfc 7232": [[238, "index-19"], [238, "index-35"]], "rfc 7233": [[238, "index-11"], [238, "index-39"]], "rfc 7235": [[238, "index-24"], [238, "index-30"]], "rfc 7238": [[238, "index-22"]], "rfc 7540": [[238, "index-42"]], "rfc 7725": [[238, "index-51"]], "rfc 8297": [[238, "index-4"]], "rfc 8470": [[238, "index-46"]], "http (standard module)": [[238, "index-0"]], "badstatusline": [[239, "http.client.BadStatusLine"]], "cannotsendheader": [[239, "http.client.CannotSendHeader"]], "cannotsendrequest": [[239, "http.client.CannotSendRequest"]], "httpconnection (class in http.client)": [[239, "http.client.HTTPConnection"]], "httpexception": [[239, "http.client.HTTPException"]], "httpmessage (class in http.client)": [[239, "http.client.HTTPMessage"]], "httpresponse (class in http.client)": [[239, "http.client.HTTPResponse"]], "httpsconnection (class in http.client)": [[239, "http.client.HTTPSConnection"]], "https_port (in module http.client)": [[239, "http.client.HTTPS_PORT"]], "http_port (in module http.client)": [[239, "http.client.HTTP_PORT"]], "improperconnectionstate": [[239, "http.client.ImproperConnectionState"]], "incompleteread": [[239, "http.client.IncompleteRead"]], "invalidurl": [[239, "http.client.InvalidURL"]], "linetoolong": [[239, "http.client.LineTooLong"]], "notconnected": [[239, "http.client.NotConnected"]], "rfc 2616#section-14.23": [[239, "index-4"]], "rfc 2616#section-5.1.2": [[239, "index-3"], [239, "index-5"]], "rfc 7230": [[239, "index-7"], [392, "index-0"]], "remotedisconnected": [[239, "http.client.RemoteDisconnected"]], "responsenotready": [[239, "http.client.ResponseNotReady"]], "unimplementedfilemode": [[239, "http.client.UnimplementedFileMode"]], "unknownprotocol": [[239, "http.client.UnknownProtocol"]], "unknowntransferencoding": [[239, "http.client.UnknownTransferEncoding"]], "blocksize (http.client.httpconnection attribute)": [[239, "http.client.HTTPConnection.blocksize"]], "close() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.close"]], "closed (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.closed"]], "connect() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.connect"]], "debuglevel (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.debuglevel"]], "endheaders() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.endheaders"]], "fileno() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.fileno"]], "get_proxy_response_headers() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.get_proxy_response_headers"]], "getcode() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.getcode"]], "getheader() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.getheader"]], "getheaders() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.getheaders"]], "getresponse() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.getresponse"]], "geturl() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.geturl"]], "headers (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.headers"]], "http.client": [[239, "module-http.client"]], "http.client (standard module)": [[239, "index-0"]], "info() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.info"]], "msg (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.msg"]], "parse_headers() (in module http.client)": [[239, "http.client.parse_headers"]], "putheader() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.putheader"]], "putrequest() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.putrequest"]], "read() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.read"]], "readinto() (http.client.httpresponse method)": [[239, "http.client.HTTPResponse.readinto"]], "reason (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.reason"]], "request() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.request"]], "responses (in module http.client)": [[239, "http.client.responses"]], "send() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.send"]], "set_debuglevel() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.set_debuglevel"]], "set_tunnel() (http.client.httpconnection method)": [[239, "http.client.HTTPConnection.set_tunnel"]], "status (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.status"]], "url (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.url"]], "urllib.request": [[239, "index-1"], [392, "module-urllib.request"]], "version (http.client.httpresponse attribute)": [[239, "http.client.HTTPResponse.version"]], "cookie (class in http.cookiejar)": [[240, "http.cookiejar.Cookie"]], "cookiejar (class in http.cookiejar)": [[240, "http.cookiejar.CookieJar"]], "cookiepolicy (class in http.cookiejar)": [[240, "http.cookiejar.CookiePolicy"]], "defaultcookiepolicy (class in http.cookiejar)": [[240, "http.cookiejar.DefaultCookiePolicy"]], "domainliberal (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.DomainLiberal"]], "domainrfc2965match (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match"]], "domainstrict (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.DomainStrict"]], "domainstrictnodots (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots"]], "domainstrictnondomain (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain"]], "filecookiejar (class in http.cookiejar)": [[240, "http.cookiejar.FileCookieJar"]], "lwpcookiejar (class in http.cookiejar)": [[240, "http.cookiejar.LWPCookieJar"]], "loaderror": [[240, "http.cookiejar.LoadError"]], "mozillacookiejar (class in http.cookiejar)": [[240, "http.cookiejar.MozillaCookieJar"]], "rfc 2109": [[240, "index-1"], [240, "index-15"], [240, "index-21"], [240, "index-23"], [240, "index-24"], [240, "index-3"], [240, "index-4"], [240, "index-6"], [241, "index-0"], [241, "index-2"], [241, "index-3"], [241, "index-4"], [241, "index-5"], [241, "index-6"], [241, "index-7"]], "rfc 2964": [[240, "index-10"]], "rfc 2965": [[240, "index-0"], [240, "index-11"], [240, "index-12"], [240, "index-13"], [240, "index-14"], [240, "index-16"], [240, "index-17"], [240, "index-18"], [240, "index-19"], [240, "index-2"], [240, "index-20"], [240, "index-22"], [240, "index-25"], [240, "index-5"], [240, "index-7"], [240, "index-8"], [240, "index-9"], [392, "index-1"], [392, "index-2"], [392, "index-4"]], "add_cookie_header() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.add_cookie_header"]], "allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.allowed_domains"]], "blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.blocked_domains"]], "clear() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.clear"]], "clear_session_cookies() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.clear_session_cookies"]], "comment (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.comment"]], "comment_url (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.comment_url"]], "delayload (http.cookiejar.filecookiejar attribute)": [[240, "http.cookiejar.FileCookieJar.delayload"]], "discard (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.discard"]], "domain_initial_dot (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.domain_initial_dot"]], "domain_return_ok() (http.cookiejar.cookiepolicy method)": [[240, "http.cookiejar.CookiePolicy.domain_return_ok"]], "domain_specified (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.domain_specified"]], "expires (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.expires"]], "extract_cookies() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.extract_cookies"]], "filename (http.cookiejar.filecookiejar attribute)": [[240, "http.cookiejar.FileCookieJar.filename"]], "get_nonstandard_attr() (http.cookiejar.cookie method)": [[240, "http.cookiejar.Cookie.get_nonstandard_attr"]], "has_nonstandard_attr() (http.cookiejar.cookie method)": [[240, "http.cookiejar.Cookie.has_nonstandard_attr"]], "hide_cookie2 (http.cookiejar.cookiepolicy attribute)": [[240, "http.cookiejar.CookiePolicy.hide_cookie2"]], "http.cookiejar": [[240, "module-http.cookiejar"]], "is_blocked() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.is_blocked"]], "is_expired() (http.cookiejar.cookie method)": [[240, "http.cookiejar.Cookie.is_expired"]], "is_not_allowed() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.is_not_allowed"]], "load() (http.cookiejar.filecookiejar method)": [[240, "http.cookiejar.FileCookieJar.load"]], "make_cookies() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.make_cookies"]], "name (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.name"]], "netscape (http.cookiejar.cookiepolicy attribute)": [[240, "http.cookiejar.CookiePolicy.netscape"]], "path (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.path"]], "path_return_ok() (http.cookiejar.cookiepolicy method)": [[240, "http.cookiejar.CookiePolicy.path_return_ok"]], "port (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.port"]], "port_specified (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.port_specified"]], "return_ok() (http.cookiejar.cookiepolicy method)": [[240, "http.cookiejar.CookiePolicy.return_ok"]], "revert() (http.cookiejar.filecookiejar method)": [[240, "http.cookiejar.FileCookieJar.revert"]], "rfc2109 (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.rfc2109"]], "rfc2109_as_netscape (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape"]], "rfc2965 (http.cookiejar.cookiepolicy attribute)": [[240, "http.cookiejar.CookiePolicy.rfc2965"]], "save() (http.cookiejar.filecookiejar method)": [[240, "http.cookiejar.FileCookieJar.save"]], "secure (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.secure"]], "set_allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.set_allowed_domains"]], "set_blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[240, "http.cookiejar.DefaultCookiePolicy.set_blocked_domains"]], "set_cookie() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.set_cookie"]], "set_cookie_if_ok() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.set_cookie_if_ok"]], "set_nonstandard_attr() (http.cookiejar.cookie method)": [[240, "http.cookiejar.Cookie.set_nonstandard_attr"]], "set_ok() (http.cookiejar.cookiepolicy method)": [[240, "http.cookiejar.CookiePolicy.set_ok"]], "set_policy() (http.cookiejar.cookiejar method)": [[240, "http.cookiejar.CookieJar.set_policy"]], "strict_domain (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_domain"]], "strict_ns_domain (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_ns_domain"]], "strict_ns_set_initial_dollar (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar"]], "strict_ns_set_path (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path"]], "strict_ns_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable"]], "strict_rfc2965_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[240, "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable"]], "value (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.value"]], "version (http.cookiejar.cookie attribute)": [[240, "http.cookiejar.Cookie.version"]], "basecookie (class in http.cookies)": [[241, "http.cookies.BaseCookie"]], "cookieerror": [[241, "http.cookies.CookieError"]], "morsel (class in http.cookies)": [[241, "http.cookies.Morsel"]], "outputstring() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.OutputString"]], "rfc 2068": [[241, "index-1"]], "simplecookie (class in http.cookies)": [[241, "http.cookies.SimpleCookie"]], "coded_value (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.coded_value"]], "comment (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.comment"]], "copy() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.copy"]], "domain (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.domain"]], "expires (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.expires"]], "http.cookies": [[241, "module-http.cookies"]], "httponly (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.httponly"]], "isreservedkey() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.isReservedKey"]], "js_output() (http.cookies.basecookie method)": [[241, "http.cookies.BaseCookie.js_output"]], "js_output() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.js_output"]], "key (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.key"]], "load() (http.cookies.basecookie method)": [[241, "http.cookies.BaseCookie.load"]], "output() (http.cookies.basecookie method)": [[241, "http.cookies.BaseCookie.output"]], "output() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.output"]], "path (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.path"]], "samesite (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.samesite"]], "secure (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.secure"]], "set() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.set"]], "setdefault() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.setdefault"]], "update() (http.cookies.morsel method)": [[241, "http.cookies.Morsel.update"]], "value (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.value"]], "value_decode() (http.cookies.basecookie method)": [[241, "http.cookies.BaseCookie.value_decode"]], "value_encode() (http.cookies.basecookie method)": [[241, "http.cookies.BaseCookie.value_encode"]], "version (http.cookies.morsel attribute)": [[241, "http.cookies.Morsel.version"]], "basehttprequesthandler (class in http.server)": [[242, "http.server.BaseHTTPRequestHandler"]], "cgihttprequesthandler (class in http.server)": [[242, "http.server.CGIHTTPRequestHandler"]], "httpserver (class in http.server)": [[242, "http.server.HTTPServer"]], "messageclass (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.MessageClass"]], "rfc 3986": [[242, "index-1"], [391, "index-2"], [391, "index-4"], [391, "index-5"], [391, "index-7"], [391, "index-8"], [466, "index-10"], [466, "index-13"], [475, "index-42"], [477, "index-35"]], "simplehttprequesthandler (class in http.server)": [[242, "http.server.SimpleHTTPRequestHandler"]], "threadinghttpserver (class in http.server)": [[242, "http.server.ThreadingHTTPServer"]], "address_string() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.address_string"]], "cgi_directories (http.server.cgihttprequesthandler attribute)": [[242, "http.server.CGIHTTPRequestHandler.cgi_directories"]], "client_address (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.client_address"]], "close_connection (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.close_connection"]], "command (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.command"]], "date_time_string() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.date_time_string"]], "do_get() (http.server.simplehttprequesthandler method)": [[242, "http.server.SimpleHTTPRequestHandler.do_GET"]], "do_head() (http.server.simplehttprequesthandler method)": [[242, "http.server.SimpleHTTPRequestHandler.do_HEAD"]], "do_post() (http.server.cgihttprequesthandler method)": [[242, "http.server.CGIHTTPRequestHandler.do_POST"]], "end_headers() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.end_headers"]], "error_content_type (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.error_content_type"]], "error_message_format (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.error_message_format"]], "extensions_map (http.server.simplehttprequesthandler attribute)": [[242, "http.server.SimpleHTTPRequestHandler.extensions_map"]], "flush_headers() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.flush_headers"]], "handle() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.handle"]], "handle_expect_100() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.handle_expect_100"]], "handle_one_request() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.handle_one_request"]], "headers (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.headers"]], "http.server": [[242, "index-3"], [242, "module-http.server"]], "httpd": [[242, "index-0"]], "log_date_time_string() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.log_date_time_string"]], "log_error() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.log_error"]], "log_message() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.log_message"]], "log_request() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.log_request"]], "path (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.path"]], "protocol_version (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.protocol_version"]], "request_version (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.request_version"]], "requestline (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.requestline"]], "responses (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.responses"]], "rfile (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.rfile"]], "send_error() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.send_error"]], "send_header() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.send_header"]], "send_response() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.send_response"]], "send_response_only() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.send_response_only"]], "server (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.server"]], "server_version (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.server_version"]], "server_version (http.server.simplehttprequesthandler attribute)": [[242, "http.server.SimpleHTTPRequestHandler.server_version"]], "sys_version (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.sys_version"]], "version_string() (http.server.basehttprequesthandler method)": [[242, "http.server.BaseHTTPRequestHandler.version_string"]], "wfile (http.server.basehttprequesthandler attribute)": [[242, "http.server.BaseHTTPRequestHandler.wfile"]], "clear breakpoint": [[244, "index-4"]], "cut": [[244, "index-4"]], "idlestartup": [[244, "index-5"]], "integrated development environment": [[244, "index-0"]], "module browser": [[244, "index-1"]], "pep 434": [[244, "index-7"], [466, "index-16"]], "pythonstartup": [[244, "index-6"], [317, "index-0"], [331, "index-5"], [349, "index-18"], [435, "index-1"], [452, "envvar-PYTHONSTARTUP"], [452, "index-5"], [474, "index-40"], [474, "index-41"]], "paste": [[244, "index-4"]], "path browser": [[244, "index-1"]], "python editor": [[244, "index-0"]], "run script": [[244, "index-2"]], "set breakpoint": [[244, "index-4"]], "breakpoints": [[244, "index-4"]], "debugger": [[244, "index-3"], [294, "index-2"], [349, "index-11"], [349, "index-29"], [362, "index-1"]], "idlelib": [[244, "module-idlelib"]], "stack viewer": [[244, "index-3"]], "imap4": [[245, "index-0"]], "imap4 (class in imaplib)": [[245, "imaplib.IMAP4"]], "imap4.abort": [[245, "imaplib.IMAP4.abort"]], "imap4.error": [[245, "imaplib.IMAP4.error"]], "imap4.readonly": [[245, "imaplib.IMAP4.readonly"]], "imap4_ssl": [[245, "index-0"]], "imap4_ssl (class in imaplib)": [[245, "imaplib.IMAP4_SSL"]], "imap4_stream": [[245, "index-0"]], "imap4_stream (class in imaplib)": [[245, "imaplib.IMAP4_stream"]], "int2ap() (in module imaplib)": [[245, "imaplib.Int2AP"]], "internaldate2tuple() (in module imaplib)": [[245, "imaplib.Internaldate2tuple"]], "protocol_version (imaplib.imap4 attribute)": [[245, "imaplib.IMAP4.PROTOCOL_VERSION"]], "parseflags() (in module imaplib)": [[245, "imaplib.ParseFlags"]], "rfc 1730": [[245, "index-2"]], "rfc 2060": [[245, "index-1"], [245, "index-7"]], "rfc 2342": [[245, "index-6"], [461, "index-19"]], "rfc 3501": [[245, "index-8"]], "rfc 5161": [[245, "index-3"], [475, "index-33"]], "rfc 6855": [[245, "index-4"], [245, "index-5"], [475, "index-34"], [475, "index-35"]], "time2internaldate() (in module imaplib)": [[245, "imaplib.Time2Internaldate"]], "append() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.append"]], "authenticate() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.authenticate"]], "check() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.check"]], "close() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.close"]], "copy() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.copy"]], "create() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.create"]], "debug (imaplib.imap4 attribute)": [[245, "imaplib.IMAP4.debug"]], "delete() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.delete"]], "deleteacl() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.deleteacl"]], "enable() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.enable"]], "expunge() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.expunge"]], "fetch() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.fetch"]], "getacl() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.getacl"]], "getannotation() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.getannotation"]], "getquota() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.getquota"]], "getquotaroot() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.getquotaroot"]], "imaplib": [[245, "module-imaplib"]], "list() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.list"]], "login() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.login"]], "login_cram_md5() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.login_cram_md5"]], "logout() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.logout"]], "lsub() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.lsub"]], "myrights() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.myrights"]], "namespace() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.namespace"]], "noop() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.noop"]], "open() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.open"]], "partial() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.partial"]], "proxyauth() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.proxyauth"]], "read() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.read"]], "readline() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.readline"]], "recent() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.recent"]], "rename() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.rename"]], "response() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.response"]], "search() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.search"]], "select() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.select"]], "send() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.send"]], "setacl() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.setacl"]], "setannotation() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.setannotation"]], "setquota() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.setquota"]], "shutdown() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.shutdown"]], "socket() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.socket"]], "sort() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.sort"]], "starttls() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.starttls"]], "status() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.status"]], "store() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.store"]], "subscribe() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.subscribe"]], "thread() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.thread"]], "uid() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.uid"]], "unselect() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.unselect"]], "unsubscribe() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.unsubscribe"]], "utf8_enabled (imaplib.imap4 attribute)": [[245, "imaplib.IMAP4.utf8_enabled"]], "xatom() (imaplib.imap4 method)": [[245, "imaplib.IMAP4.xatom"]], "pep 594#imghdr": [[246, "index-0"]], "imghdr": [[246, "module-imghdr"]], "tests (in module imghdr)": [[246, "imghdr.tests"]], "what() (in module imghdr)": [[246, "imghdr.what"]], "bytecode_suffixes (in module importlib.machinery)": [[247, "importlib.machinery.BYTECODE_SUFFIXES"]], "builtinimporter (class in importlib.machinery)": [[247, "importlib.machinery.BuiltinImporter"]], "debug_bytecode_suffixes (in module importlib.machinery)": [[247, "importlib.machinery.DEBUG_BYTECODE_SUFFIXES"]], "extension_suffixes (in module importlib.machinery)": [[247, "importlib.machinery.EXTENSION_SUFFIXES"]], "executionloader (class in importlib.abc)": [[247, "importlib.abc.ExecutionLoader"]], "extensionfileloader (class in importlib.machinery)": [[247, "importlib.machinery.ExtensionFileLoader"]], "filefinder (class in importlib.machinery)": [[247, "importlib.machinery.FileFinder"]], "fileloader (class in importlib.abc)": [[247, "importlib.abc.FileLoader"]], "frozenimporter (class in importlib.machinery)": [[247, "importlib.machinery.FrozenImporter"]], "inspectloader (class in importlib.abc)": [[247, "importlib.abc.InspectLoader"]], "lazyloader (class in importlib.util)": [[247, "importlib.util.LazyLoader"]], "loader (class in importlib.abc)": [[247, "importlib.abc.Loader"]], "magic_number (in module importlib.util)": [[247, "importlib.util.MAGIC_NUMBER"]], "metapathfinder (class in importlib.abc)": [[247, "importlib.abc.MetaPathFinder"]], "modulespec (class in importlib.machinery)": [[247, "importlib.machinery.ModuleSpec"]], "namespaceloader (class in importlib.machinery)": [[247, "importlib.machinery.NamespaceLoader"]], "optimized_bytecode_suffixes (in module importlib.machinery)": [[247, "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES"]], "pep 235": [[247, "index-0"]], "pep 3120": [[247, "index-10"], [432, "index-1"], [467, "index-4"]], "pep 366": [[247, "index-4"], [321, "index-7"], [429, "index-11"], [429, "index-12"], [429, "index-23"], [429, "index-25"], [473, "index-22"]], "pep 488": [[247, "index-22"], [247, "index-25"], [247, "index-7"], [308, "index-2"], [359, "index-4"], [452, "index-10"], [452, "index-11"], [452, "index-7"], [452, "index-9"], [475, "index-24"], [475, "index-25"], [475, "index-50"]], "pathentryfinder (class in importlib.abc)": [[247, "importlib.abc.PathEntryFinder"]], "pathfinder (class in importlib.machinery)": [[247, "importlib.machinery.PathFinder"]], "resourceloader (class in importlib.abc)": [[247, "importlib.abc.ResourceLoader"]], "resourcereader (class in importlib.abc)": [[247, "importlib.abc.ResourceReader"]], "source_suffixes (in module importlib.machinery)": [[247, "importlib.machinery.SOURCE_SUFFIXES"]], "sourcefileloader (class in importlib.machinery)": [[247, "importlib.machinery.SourceFileLoader"]], "sourceloader (class in importlib.abc)": [[247, "importlib.abc.SourceLoader"]], "sourcelessfileloader (class in importlib.machinery)": [[247, "importlib.machinery.SourcelessFileLoader"]], "traversable (class in importlib.abc)": [[247, "importlib.abc.Traversable"]], "traversableresources (class in importlib.abc)": [[247, "importlib.abc.TraversableResources"]], "windowsregistryfinder (class in importlib.machinery)": [[247, "importlib.machinery.WindowsRegistryFinder"]], "__import__() (in module importlib)": [[247, "importlib.__import__"]], "__truediv__() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.__truediv__"]], "_incompatible_extension_module_restrictions() (in module importlib.util)": [[247, "importlib.util._incompatible_extension_module_restrictions"]], "all_suffixes() (in module importlib.machinery)": [[247, "importlib.machinery.all_suffixes"]], "cache_from_source() (in module importlib.util)": [[247, "importlib.util.cache_from_source"]], "cached (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.cached"]], "contents() (importlib.abc.resourcereader method)": [[247, "importlib.abc.ResourceReader.contents"]], "create_module() (importlib.abc.loader method)": [[247, "importlib.abc.Loader.create_module"]], "create_module() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.create_module"]], "decode_source() (in module importlib.util)": [[247, "importlib.util.decode_source"]], "exec_module() (importlib.abc.inspectloader method)": [[247, "importlib.abc.InspectLoader.exec_module"]], "exec_module() (importlib.abc.loader method)": [[247, "importlib.abc.Loader.exec_module"]], "exec_module() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.exec_module"]], "exec_module() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.exec_module"]], "factory() (importlib.util.lazyloader class method)": [[247, "importlib.util.LazyLoader.factory"]], "files() (importlib.abc.traversableresources method)": [[247, "importlib.abc.TraversableResources.files"]], "find_spec() (importlib.abc.metapathfinder method)": [[247, "importlib.abc.MetaPathFinder.find_spec"]], "find_spec() (importlib.abc.pathentryfinder method)": [[247, "importlib.abc.PathEntryFinder.find_spec"]], "find_spec() (importlib.machinery.filefinder method)": [[247, "importlib.machinery.FileFinder.find_spec"]], "find_spec() (importlib.machinery.pathfinder class method)": [[247, "importlib.machinery.PathFinder.find_spec"]], "find_spec() (in module importlib.util)": [[247, "importlib.util.find_spec"]], "get_code() (importlib.abc.inspectloader method)": [[247, "importlib.abc.InspectLoader.get_code"]], "get_code() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.get_code"]], "get_code() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.get_code"]], "get_code() (importlib.machinery.sourcelessfileloader method)": [[247, "importlib.machinery.SourcelessFileLoader.get_code"]], "get_data() (importlib.abc.fileloader method)": [[247, "importlib.abc.FileLoader.get_data"]], "get_data() (importlib.abc.resourceloader method)": [[247, "importlib.abc.ResourceLoader.get_data"]], "get_filename() (importlib.abc.executionloader method)": [[247, "importlib.abc.ExecutionLoader.get_filename"]], "get_filename() (importlib.abc.fileloader method)": [[247, "importlib.abc.FileLoader.get_filename"]], "get_filename() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.get_filename"]], "get_source() (importlib.abc.inspectloader method)": [[247, "importlib.abc.InspectLoader.get_source"]], "get_source() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.get_source"]], "get_source() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.get_source"]], "get_source() (importlib.machinery.sourcelessfileloader method)": [[247, "importlib.machinery.SourcelessFileLoader.get_source"]], "has_location (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.has_location"]], "import_module() (in module importlib)": [[247, "importlib.import_module"]], "importlib": [[247, "module-importlib"]], "importlib.abc": [[247, "module-importlib.abc"]], "importlib.abc.inspectloader.get_source method": [[247, "index-15"]], "importlib.machinery": [[247, "module-importlib.machinery"]], "importlib.util": [[247, "module-importlib.util"]], "invalidate_caches() (importlib.abc.metapathfinder method)": [[247, "importlib.abc.MetaPathFinder.invalidate_caches"]], "invalidate_caches() (importlib.abc.pathentryfinder method)": [[247, "importlib.abc.PathEntryFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.filefinder method)": [[247, "importlib.machinery.FileFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.pathfinder class method)": [[247, "importlib.machinery.PathFinder.invalidate_caches"]], "invalidate_caches() (in module importlib)": [[247, "importlib.invalidate_caches"]], "is_dir() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.is_dir"]], "is_file() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.is_file"]], "is_package() (importlib.abc.inspectloader method)": [[247, "importlib.abc.InspectLoader.is_package"]], "is_package() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.is_package"]], "is_package() (importlib.machinery.extensionfileloader method)": [[247, "importlib.machinery.ExtensionFileLoader.is_package"]], "is_package() (importlib.machinery.sourcefileloader method)": [[247, "importlib.machinery.SourceFileLoader.is_package"]], "is_package() (importlib.machinery.sourcelessfileloader method)": [[247, "importlib.machinery.SourcelessFileLoader.is_package"]], "is_resource() (importlib.abc.resourcereader method)": [[247, "importlib.abc.ResourceReader.is_resource"]], "iterdir() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.iterdir"]], "joinpath() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.joinpath"]], "load_module() (importlib.abc.fileloader method)": [[247, "importlib.abc.FileLoader.load_module"]], "load_module() (importlib.abc.inspectloader method)": [[247, "importlib.abc.InspectLoader.load_module"]], "load_module() (importlib.abc.loader method)": [[247, "importlib.abc.Loader.load_module"]], "load_module() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.load_module"]], "load_module() (importlib.machinery.sourcefileloader method)": [[247, "importlib.machinery.SourceFileLoader.load_module"]], "load_module() (importlib.machinery.sourcelessfileloader method)": [[247, "importlib.machinery.SourcelessFileLoader.load_module"]], "loader (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.loader"]], "loader_state (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.loader_state"]], "module_from_spec() (in module importlib.util)": [[247, "importlib.util.module_from_spec"]], "name (importlib.abc.fileloader attribute)": [[247, "importlib.abc.FileLoader.name"]], "name (importlib.abc.traversable attribute)": [[247, "importlib.abc.Traversable.name"]], "name (importlib.machinery.extensionfileloader attribute)": [[247, "importlib.machinery.ExtensionFileLoader.name"]], "name (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.name"]], "name (importlib.machinery.sourcefileloader attribute)": [[247, "importlib.machinery.SourceFileLoader.name"]], "name (importlib.machinery.sourcelessfileloader attribute)": [[247, "importlib.machinery.SourcelessFileLoader.name"]], "open() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.open"]], "open_resource() (importlib.abc.resourcereader method)": [[247, "importlib.abc.ResourceReader.open_resource"]], "origin (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.origin"]], "parent (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.parent"]], "path (importlib.abc.fileloader attribute)": [[247, "importlib.abc.FileLoader.path"]], "path (importlib.machinery.extensionfileloader attribute)": [[247, "importlib.machinery.ExtensionFileLoader.path"]], "path (importlib.machinery.filefinder attribute)": [[247, "importlib.machinery.FileFinder.path"]], "path (importlib.machinery.sourcefileloader attribute)": [[247, "importlib.machinery.SourceFileLoader.path"]], "path (importlib.machinery.sourcelessfileloader attribute)": [[247, "importlib.machinery.SourcelessFileLoader.path"]], "path_hook() (importlib.machinery.filefinder class method)": [[247, "importlib.machinery.FileFinder.path_hook"]], "path_mtime() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.path_mtime"]], "path_stats() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.path_stats"]], "path_stats() (importlib.machinery.sourcefileloader method)": [[247, "importlib.machinery.SourceFileLoader.path_stats"]], "read_bytes() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.read_bytes"]], "read_text() (importlib.abc.traversable method)": [[247, "importlib.abc.Traversable.read_text"]], "reload() (in module importlib)": [[247, "importlib.reload"]], "resolve_name() (in module importlib.util)": [[247, "importlib.util.resolve_name"]], "resource_path() (importlib.abc.resourcereader method)": [[247, "importlib.abc.ResourceReader.resource_path"]], "set_data() (importlib.abc.sourceloader method)": [[247, "importlib.abc.SourceLoader.set_data"]], "set_data() (importlib.machinery.sourcefileloader method)": [[247, "importlib.machinery.SourceFileLoader.set_data"]], "source_from_cache() (in module importlib.util)": [[247, "importlib.util.source_from_cache"]], "source_hash() (in module importlib.util)": [[247, "importlib.util.source_hash"]], "source_to_code() (importlib.abc.inspectloader static method)": [[247, "importlib.abc.InspectLoader.source_to_code"]], "spec_from_file_location() (in module importlib.util)": [[247, "importlib.util.spec_from_file_location"]], "spec_from_loader() (in module importlib.util)": [[247, "importlib.util.spec_from_loader"]], "submodule_search_locations (importlib.machinery.modulespec attribute)": [[247, "importlib.machinery.ModuleSpec.submodule_search_locations"]], "pep 566": [[248, "index-0"]], "importlib.metadata": [[248, "module-importlib.metadata"]], "anchor (class in importlib.resources)": [[249, "importlib.resources.Anchor"]], "package (in module importlib.resources)": [[249, "importlib.resources.Package"]], "resource (in module importlib.resources)": [[249, "importlib.resources.Resource"]], "as_file() (in module importlib.resources)": [[249, "importlib.resources.as_file"]], "contents() (in module importlib.resources)": [[249, "importlib.resources.contents"]], "files() (in module importlib.resources)": [[249, "importlib.resources.files"]], "importlib.resources": [[249, "module-importlib.resources"]], "is_resource() (in module importlib.resources)": [[249, "importlib.resources.is_resource"]], "open_binary() (in module importlib.resources)": [[249, "importlib.resources.open_binary"]], "open_text() (in module importlib.resources)": [[249, "importlib.resources.open_text"]], "path() (in module importlib.resources)": [[249, "importlib.resources.path"]], "read_binary() (in module importlib.resources)": [[249, "importlib.resources.read_binary"]], "read_text() (in module importlib.resources)": [[249, "importlib.resources.read_text"]], "resourcereader (class in importlib.resources.abc)": [[250, "importlib.resources.abc.ResourceReader"]], "traversable (class in importlib.resources.abc)": [[250, "importlib.resources.abc.Traversable"]], "traversableresources (class in importlib.resources.abc)": [[250, "importlib.resources.abc.TraversableResources"]], "__truediv__() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.__truediv__"]], "contents() (importlib.resources.abc.resourcereader method)": [[250, "importlib.resources.abc.ResourceReader.contents"]], "files() (importlib.resources.abc.traversableresources method)": [[250, "importlib.resources.abc.TraversableResources.files"]], "importlib.resources.abc": [[250, "module-importlib.resources.abc"]], "is_dir() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.is_dir"]], "is_file() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.is_file"]], "is_resource() (importlib.resources.abc.resourcereader method)": [[250, "importlib.resources.abc.ResourceReader.is_resource"]], "iterdir() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.iterdir"]], "joinpath() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.joinpath"]], "name (importlib.resources.abc.traversable attribute)": [[250, "importlib.resources.abc.Traversable.name"]], "open() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.open"]], "open_resource() (importlib.resources.abc.resourcereader method)": [[250, "importlib.resources.abc.ResourceReader.open_resource"]], "read_bytes() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.read_bytes"]], "read_text() (importlib.resources.abc.traversable method)": [[250, "importlib.resources.abc.Traversable.read_text"]], "resource_path() (importlib.resources.abc.resourcereader method)": [[250, "importlib.resources.abc.ResourceReader.resource_path"]], "--details": [[252, "cmdoption-inspect-details"]], "any_contiguous (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.ANY_CONTIGUOUS"]], "boundarguments (class in inspect)": [[252, "inspect.BoundArguments"]], "bufferflags (class in inspect)": [[252, "inspect.BufferFlags"]], "contig (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.CONTIG"]], "contig_ro (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.CONTIG_RO"]], "co_async_generator (in module inspect)": [[252, "inspect.CO_ASYNC_GENERATOR"]], "co_coroutine (in module inspect)": [[252, "inspect.CO_COROUTINE"]], "co_generator (in module inspect)": [[252, "inspect.CO_GENERATOR"]], "co_iterable_coroutine (in module inspect)": [[252, "inspect.CO_ITERABLE_COROUTINE"]], "co_nested (in module inspect)": [[252, "inspect.CO_NESTED"]], "co_newlocals (in module inspect)": [[252, "inspect.CO_NEWLOCALS"]], "co_optimized (in module inspect)": [[252, "inspect.CO_OPTIMIZED"]], "co_varargs (in module inspect)": [[252, "inspect.CO_VARARGS"]], "co_varkeywords (in module inspect)": [[252, "inspect.CO_VARKEYWORDS"]], "c_contiguous (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.C_CONTIGUOUS"]], "format (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.FORMAT"]], "full (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.FULL"]], "full_ro (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.FULL_RO"]], "f_contiguous (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.F_CONTIGUOUS"]], "frameinfo (class in inspect)": [[252, "inspect.FrameInfo"]], "indirect (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.INDIRECT"]], "nd (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.ND"]], "parameter (class in inspect)": [[252, "inspect.Parameter"]], "read (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.READ"]], "records (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.RECORDS"]], "records_ro (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.RECORDS_RO"]], "simple (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.SIMPLE"]], "strided (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.STRIDED"]], "strided_ro (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.STRIDED_RO"]], "strides (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.STRIDES"]], "signature (class in inspect)": [[252, "inspect.Signature"]], "traceback (class in inspect)": [[252, "inspect.Traceback"]], "writable (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.WRITABLE"]], "write (inspect.bufferflags attribute)": [[252, "inspect.BufferFlags.WRITE"]], "annotation (inspect.parameter attribute)": [[252, "inspect.Parameter.annotation"]], "apply_defaults() (inspect.boundarguments method)": [[252, "inspect.BoundArguments.apply_defaults"]], "args (inspect.boundarguments attribute)": [[252, "inspect.BoundArguments.args"]], "arguments (inspect.boundarguments attribute)": [[252, "inspect.BoundArguments.arguments"]], "bind() (inspect.signature method)": [[252, "inspect.Signature.bind"]], "bind_partial() (inspect.signature method)": [[252, "inspect.Signature.bind_partial"]], "cleandoc() (in module inspect)": [[252, "inspect.cleandoc"]], "code_context (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.code_context"]], "code_context (inspect.traceback attribute)": [[252, "inspect.Traceback.code_context"]], "currentframe() (in module inspect)": [[252, "inspect.currentframe"]], "default (inspect.parameter attribute)": [[252, "inspect.Parameter.default"]], "description (inspect.parameter.kind attribute)": [[252, "inspect.Parameter.kind.description"]], "empty (inspect.parameter attribute)": [[252, "inspect.Parameter.empty"]], "empty (inspect.signature attribute)": [[252, "inspect.Signature.empty"]], "filename (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.filename"]], "filename (inspect.traceback attribute)": [[252, "inspect.Traceback.filename"]], "formatargvalues() (in module inspect)": [[252, "inspect.formatargvalues"]], "frame (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.frame"]], "from_callable() (inspect.signature class method)": [[252, "inspect.Signature.from_callable"]], "function (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.function"]], "function (inspect.traceback attribute)": [[252, "inspect.Traceback.function"]], "get_annotations() (in module inspect)": [[252, "inspect.get_annotations"]], "getargvalues() (in module inspect)": [[252, "inspect.getargvalues"]], "getasyncgenlocals() (in module inspect)": [[252, "inspect.getasyncgenlocals"]], "getasyncgenstate() (in module inspect)": [[252, "inspect.getasyncgenstate"]], "getattr_static() (in module inspect)": [[252, "inspect.getattr_static"]], "getcallargs() (in module inspect)": [[252, "inspect.getcallargs"]], "getclasstree() (in module inspect)": [[252, "inspect.getclasstree"]], "getclosurevars() (in module inspect)": [[252, "inspect.getclosurevars"]], "getcomments() (in module inspect)": [[252, "inspect.getcomments"]], "getcoroutinelocals() (in module inspect)": [[252, "inspect.getcoroutinelocals"]], "getcoroutinestate() (in module inspect)": [[252, "inspect.getcoroutinestate"]], "getdoc() (in module inspect)": [[252, "inspect.getdoc"]], "getfile() (in module inspect)": [[252, "inspect.getfile"]], "getframeinfo() (in module inspect)": [[252, "inspect.getframeinfo"]], "getfullargspec() (in module inspect)": [[252, "inspect.getfullargspec"]], "getgeneratorlocals() (in module inspect)": [[252, "inspect.getgeneratorlocals"]], "getgeneratorstate() (in module inspect)": [[252, "inspect.getgeneratorstate"]], "getinnerframes() (in module inspect)": [[252, "inspect.getinnerframes"]], "getmembers() (in module inspect)": [[252, "inspect.getmembers"]], "getmembers_static() (in module inspect)": [[252, "inspect.getmembers_static"]], "getmodule() (in module inspect)": [[252, "inspect.getmodule"]], "getmodulename() (in module inspect)": [[252, "inspect.getmodulename"]], "getmro() (in module inspect)": [[252, "inspect.getmro"]], "getouterframes() (in module inspect)": [[252, "inspect.getouterframes"]], "getsource() (in module inspect)": [[252, "inspect.getsource"]], "getsourcefile() (in module inspect)": [[252, "inspect.getsourcefile"]], "getsourcelines() (in module inspect)": [[252, "inspect.getsourcelines"]], "index (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.index"]], "index (inspect.traceback attribute)": [[252, "inspect.Traceback.index"]], "inspect": [[252, "module-inspect"]], "inspect command line option": [[252, "cmdoption-inspect-details"]], "isabstract() (in module inspect)": [[252, "inspect.isabstract"]], "isasyncgen() (in module inspect)": [[252, "inspect.isasyncgen"]], "isasyncgenfunction() (in module inspect)": [[252, "inspect.isasyncgenfunction"]], "isawaitable() (in module inspect)": [[252, "inspect.isawaitable"]], "isbuiltin() (in module inspect)": [[252, "inspect.isbuiltin"]], "isclass() (in module inspect)": [[252, "inspect.isclass"]], "iscode() (in module inspect)": [[252, "inspect.iscode"]], "iscoroutine() (in module inspect)": [[252, "inspect.iscoroutine"]], "iscoroutinefunction() (in module inspect)": [[252, "inspect.iscoroutinefunction"]], "isdatadescriptor() (in module inspect)": [[252, "inspect.isdatadescriptor"]], "isframe() (in module inspect)": [[252, "inspect.isframe"]], "isfunction() (in module inspect)": [[252, "inspect.isfunction"]], "isgenerator() (in module inspect)": [[252, "inspect.isgenerator"]], "isgeneratorfunction() (in module inspect)": [[252, "inspect.isgeneratorfunction"]], "isgetsetdescriptor() (in module inspect)": [[252, "inspect.isgetsetdescriptor"]], "ismemberdescriptor() (in module inspect)": [[252, "inspect.ismemberdescriptor"]], "ismethod() (in module inspect)": [[252, "inspect.ismethod"]], "ismethoddescriptor() (in module inspect)": [[252, "inspect.ismethoddescriptor"]], "ismethodwrapper() (in module inspect)": [[252, "inspect.ismethodwrapper"]], "ismodule() (in module inspect)": [[252, "inspect.ismodule"]], "isroutine() (in module inspect)": [[252, "inspect.isroutine"]], "istraceback() (in module inspect)": [[252, "inspect.istraceback"]], "kind (inspect.parameter attribute)": [[252, "inspect.Parameter.kind"]], "kwargs (inspect.boundarguments attribute)": [[252, "inspect.BoundArguments.kwargs"]], "lineno (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.lineno"]], "lineno (inspect.traceback attribute)": [[252, "inspect.Traceback.lineno"]], "markcoroutinefunction() (in module inspect)": [[252, "inspect.markcoroutinefunction"]], "name (inspect.parameter attribute)": [[252, "inspect.Parameter.name"]], "parameters (inspect.signature attribute)": [[252, "inspect.Signature.parameters"]], "positions (inspect.frameinfo attribute)": [[252, "inspect.FrameInfo.positions"]], "positions (inspect.traceback attribute)": [[252, "inspect.Traceback.positions"]], "replace() (inspect.parameter method)": [[252, "inspect.Parameter.replace"]], "replace() (inspect.signature method)": [[252, "inspect.Signature.replace"]], "return_annotation (inspect.signature attribute)": [[252, "inspect.Signature.return_annotation"]], "signature (inspect.boundarguments attribute)": [[252, "inspect.BoundArguments.signature"]], "signature() (in module inspect)": [[252, "inspect.signature"]], "stack() (in module inspect)": [[252, "inspect.stack"]], "trace() (in module inspect)": [[252, "inspect.trace"]], "unwrap() (in module inspect)": [[252, "inspect.unwrap"]], "internet": [[253, "index-0"]], "world wide web": [[253, "index-0"], [391, "index-0"], [393, "index-0"]], "socket": [[253, "index-1"], [334, "index-0"], [334, "module-socket"]], "bufferediobase (class in io)": [[255, "io.BufferedIOBase"]], "bufferedrwpair (class in io)": [[255, "io.BufferedRWPair"]], "bufferedrandom (class in io)": [[255, "io.BufferedRandom"]], "bufferedreader (class in io)": [[255, "io.BufferedReader"]], "bufferedwriter (class in io)": [[255, "io.BufferedWriter"]], "bytesio (class in io)": [[255, "io.BytesIO"]], "default_buffer_size (in module io)": [[255, "io.DEFAULT_BUFFER_SIZE"]], "fileio (class in io)": [[255, "io.FileIO"]], "iobase (class in io)": [[255, "io.IOBase"]], "incrementalnewlinedecoder (class in io)": [[255, "io.IncrementalNewlineDecoder"]], "pep 597": [[255, "index-2"], [469, "index-13"]], "pep 686": [[255, "index-1"], [290, "index-5"]], "pythonwarndefaultencoding": [[255, "index-3"], [452, "envvar-PYTHONWARNDEFAULTENCODING"], [452, "index-25"], [469, "index-18"]], "rawiobase (class in io)": [[255, "io.RawIOBase"]], "stringio (class in io)": [[255, "io.StringIO"]], "textiobase (class in io)": [[255, "io.TextIOBase"]], "textiowrapper (class in io)": [[255, "io.TextIOWrapper"]], "unsupportedoperation": [[255, "io.UnsupportedOperation"]], "__del__() (io.iobase method)": [[255, "io.IOBase.__del__"]], "buffer (io.textiobase attribute)": [[255, "io.TextIOBase.buffer"]], "close() (io.iobase method)": [[255, "io.IOBase.close"]], "closed (io.iobase attribute)": [[255, "io.IOBase.closed"]], "detach() (io.bufferediobase method)": [[255, "io.BufferedIOBase.detach"]], "detach() (io.textiobase method)": [[255, "io.TextIOBase.detach"]], "encoding (io.textiobase attribute)": [[255, "io.TextIOBase.encoding"]], "errors (io.textiobase attribute)": [[255, "io.TextIOBase.errors"]], "fileno() (io.iobase method)": [[255, "io.IOBase.fileno"]], "flush() (io.bufferedwriter method)": [[255, "io.BufferedWriter.flush"]], "flush() (io.iobase method)": [[255, "io.IOBase.flush"]], "getbuffer() (io.bytesio method)": [[255, "io.BytesIO.getbuffer"]], "getvalue() (io.bytesio method)": [[255, "io.BytesIO.getvalue"]], "getvalue() (io.stringio method)": [[255, "io.StringIO.getvalue"]], "io": [[255, "module-io"], [425, "index-55"]], "io module": [[255, "index-0"]], "io.incrementalnewlinedecoder class": [[255, "index-5"]], "io.textiowrapper class": [[255, "index-4"]], "isatty() (io.iobase method)": [[255, "io.IOBase.isatty"]], "line_buffering (io.textiowrapper attribute)": [[255, "io.TextIOWrapper.line_buffering"]], "mode (io.fileio attribute)": [[255, "io.FileIO.mode"]], "name (io.fileio attribute)": [[255, "io.FileIO.name"]], "newlines (io.textiobase attribute)": [[255, "io.TextIOBase.newlines"]], "open() (in module io)": [[255, "io.open"]], "open_code() (in module io)": [[255, "io.open_code"]], "peek() (io.bufferedreader method)": [[255, "io.BufferedReader.peek"]], "raw (io.bufferediobase attribute)": [[255, "io.BufferedIOBase.raw"]], "read() (io.bufferediobase method)": [[255, "io.BufferedIOBase.read"]], "read() (io.bufferedreader method)": [[255, "io.BufferedReader.read"]], "read() (io.rawiobase method)": [[255, "io.RawIOBase.read"]], "read() (io.textiobase method)": [[255, "io.TextIOBase.read"]], "read1() (io.bufferediobase method)": [[255, "io.BufferedIOBase.read1"]], "read1() (io.bufferedreader method)": [[255, "io.BufferedReader.read1"]], "read1() (io.bytesio method)": [[255, "io.BytesIO.read1"]], "readable() (io.iobase method)": [[255, "io.IOBase.readable"]], "readall() (io.rawiobase method)": [[255, "io.RawIOBase.readall"]], "readinto() (io.bufferediobase method)": [[255, "io.BufferedIOBase.readinto"]], "readinto() (io.rawiobase method)": [[255, "io.RawIOBase.readinto"]], "readinto1() (io.bufferediobase method)": [[255, "io.BufferedIOBase.readinto1"]], "readinto1() (io.bytesio method)": [[255, "io.BytesIO.readinto1"]], "readline() (io.iobase method)": [[255, "io.IOBase.readline"]], "readline() (io.textiobase method)": [[255, "io.TextIOBase.readline"]], "readlines() (io.iobase method)": [[255, "io.IOBase.readlines"]], "reconfigure() (io.textiowrapper method)": [[255, "io.TextIOWrapper.reconfigure"]], "seek() (io.iobase method)": [[255, "io.IOBase.seek"]], "seek() (io.textiobase method)": [[255, "io.TextIOBase.seek"]], "seek() (io.textiowrapper method)": [[255, "io.TextIOWrapper.seek"]], "seekable() (io.iobase method)": [[255, "io.IOBase.seekable"]], "tell() (io.iobase method)": [[255, "io.IOBase.tell"]], "tell() (io.textiobase method)": [[255, "io.TextIOBase.tell"]], "tell() (io.textiowrapper method)": [[255, "io.TextIOWrapper.tell"]], "text_encoding() (in module io)": [[255, "io.text_encoding"]], "truncate() (io.iobase method)": [[255, "io.IOBase.truncate"]], "writable() (io.iobase method)": [[255, "io.IOBase.writable"]], "write() (io.bufferediobase method)": [[255, "io.BufferedIOBase.write"]], "write() (io.bufferedwriter method)": [[255, "io.BufferedWriter.write"]], "write() (io.rawiobase method)": [[255, "io.RawIOBase.write"]], "write() (io.textiobase method)": [[255, "io.TextIOBase.write"]], "write_through (io.textiowrapper attribute)": [[255, "io.TextIOWrapper.write_through"]], "writelines() (io.iobase method)": [[255, "io.IOBase.writelines"]], "addressvalueerror": [[256, "ipaddress.AddressValueError"]], "ipv4address (class in ipaddress)": [[256, "ipaddress.IPv4Address"]], "ipv4interface (class in ipaddress)": [[256, "ipaddress.IPv4Interface"]], "ipv4network (class in ipaddress)": [[256, "ipaddress.IPv4Network"]], "ipv6address (class in ipaddress)": [[256, "ipaddress.IPv6Address"]], "ipv6interface (class in ipaddress)": [[256, "ipaddress.IPv6Interface"]], "ipv6network (class in ipaddress)": [[256, "ipaddress.IPv6Network"]], "netmaskvalueerror": [[256, "ipaddress.NetmaskValueError"]], "rfc 2373": [[256, "index-1"], [256, "index-3"], [256, "index-5"]], "rfc 3056": [[256, "index-12"]], "rfc 3171": [[256, "index-0"]], "rfc 3330": [[256, "index-4"]], "rfc 3879": [[256, "index-9"]], "rfc 3927": [[256, "index-6"]], "rfc 4007": [[256, "index-11"], [256, "index-8"]], "rfc 4193": [[256, "index-10"]], "rfc 4291": [[256, "index-7"]], "rfc 4380": [[256, "index-13"]], "rfc 5735": [[256, "index-2"]], "__format__() (ipaddress.ipv4address method)": [[256, "ipaddress.IPv4Address.__format__"]], "__format__() (ipaddress.ipv6address method)": [[256, "ipaddress.IPv6Address.__format__"]], "address_exclude() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.address_exclude"]], "address_exclude() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.address_exclude"]], "broadcast_address (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.broadcast_address"]], "broadcast_address (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.broadcast_address"]], "collapse_addresses() (in module ipaddress)": [[256, "ipaddress.collapse_addresses"]], "compare_networks() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.compare_networks"]], "compare_networks() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.compare_networks"]], "compressed (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.compressed"]], "compressed (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.compressed"]], "compressed (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.compressed"]], "compressed (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.compressed"]], "exploded (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.exploded"]], "exploded (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.exploded"]], "exploded (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.exploded"]], "exploded (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.exploded"]], "get_mixed_type_key() (in module ipaddress)": [[256, "ipaddress.get_mixed_type_key"]], "hostmask (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.hostmask"]], "hostmask (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.hostmask"]], "hosts() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.hosts"]], "hosts() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.hosts"]], "ip (ipaddress.ipv4interface attribute)": [[256, "ipaddress.IPv4Interface.ip"]], "ip (ipaddress.ipv6interface attribute)": [[256, "ipaddress.IPv6Interface.ip"]], "ip_address() (in module ipaddress)": [[256, "ipaddress.ip_address"]], "ip_interface() (in module ipaddress)": [[256, "ipaddress.ip_interface"]], "ip_network() (in module ipaddress)": [[256, "ipaddress.ip_network"]], "ipaddress": [[256, "module-ipaddress"]], "ipv4_mapped (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.ipv4_mapped"]], "is_global (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_global"]], "is_global (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_global"]], "is_link_local (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_link_local"]], "is_link_local (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_link_local"]], "is_link_local (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_link_local"]], "is_link_local (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_link_local"]], "is_loopback (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_loopback"]], "is_loopback (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_loopback"]], "is_loopback (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_loopback"]], "is_loopback (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_loopback"]], "is_multicast (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_multicast"]], "is_multicast (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_multicast"]], "is_multicast (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_multicast"]], "is_multicast (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_multicast"]], "is_private (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_private"]], "is_private (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_private"]], "is_private (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_private"]], "is_private (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_private"]], "is_reserved (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_reserved"]], "is_reserved (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_reserved"]], "is_reserved (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_reserved"]], "is_reserved (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_reserved"]], "is_site_local (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_site_local"]], "is_site_local (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_site_local"]], "is_unspecified (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.is_unspecified"]], "is_unspecified (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.is_unspecified"]], "is_unspecified (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.is_unspecified"]], "is_unspecified (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.is_unspecified"]], "max_prefixlen (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.max_prefixlen"]], "netmask (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.netmask"]], "netmask (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.netmask"]], "network (ipaddress.ipv4interface attribute)": [[256, "ipaddress.IPv4Interface.network"]], "network (ipaddress.ipv6interface attribute)": [[256, "ipaddress.IPv6Interface.network"]], "network_address (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.network_address"]], "network_address (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.network_address"]], "num_addresses (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.num_addresses"]], "num_addresses (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.num_addresses"]], "overlaps() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.overlaps"]], "overlaps() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.overlaps"]], "packed (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.packed"]], "packed (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.packed"]], "prefixlen (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.prefixlen"]], "prefixlen (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.prefixlen"]], "reverse_pointer (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.reverse_pointer"]], "reverse_pointer (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.reverse_pointer"]], "scope_id (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.scope_id"]], "sixtofour (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.sixtofour"]], "subnet_of() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.subnet_of"]], "subnet_of() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.subnet_of"]], "subnets() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.subnets"]], "subnets() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.subnets"]], "summarize_address_range() (in module ipaddress)": [[256, "ipaddress.summarize_address_range"]], "supernet() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.supernet"]], "supernet() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.supernet"]], "supernet_of() (ipaddress.ipv4network method)": [[256, "ipaddress.IPv4Network.supernet_of"]], "supernet_of() (ipaddress.ipv6network method)": [[256, "ipaddress.IPv6Network.supernet_of"]], "teredo (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.teredo"]], "v4_int_to_packed() (in module ipaddress)": [[256, "ipaddress.v4_int_to_packed"]], "v6_int_to_packed() (in module ipaddress)": [[256, "ipaddress.v6_int_to_packed"]], "version (ipaddress.ipv4address attribute)": [[256, "ipaddress.IPv4Address.version"]], "version (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.version"]], "version (ipaddress.ipv6address attribute)": [[256, "ipaddress.IPv6Address.version"]], "version (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.version"]], "with_hostmask (ipaddress.ipv4interface attribute)": [[256, "ipaddress.IPv4Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.with_hostmask"]], "with_hostmask (ipaddress.ipv6interface attribute)": [[256, "ipaddress.IPv6Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.with_hostmask"]], "with_netmask (ipaddress.ipv4interface attribute)": [[256, "ipaddress.IPv4Interface.with_netmask"]], "with_netmask (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.with_netmask"]], "with_netmask (ipaddress.ipv6interface attribute)": [[256, "ipaddress.IPv6Interface.with_netmask"]], "with_netmask (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.with_netmask"]], "with_prefixlen (ipaddress.ipv4interface attribute)": [[256, "ipaddress.IPv4Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv4network attribute)": [[256, "ipaddress.IPv4Network.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6interface attribute)": [[256, "ipaddress.IPv6Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6network attribute)": [[256, "ipaddress.IPv6Network.with_prefixlen"]], "accumulate() (in module itertools)": [[258, "itertools.accumulate"]], "batched() (in module itertools)": [[258, "itertools.batched"]], "chain() (in module itertools)": [[258, "itertools.chain"]], "combinations() (in module itertools)": [[258, "itertools.combinations"]], "combinations_with_replacement() (in module itertools)": [[258, "itertools.combinations_with_replacement"]], "compress() (in module itertools)": [[258, "itertools.compress"]], "count() (in module itertools)": [[258, "itertools.count"]], "cycle() (in module itertools)": [[258, "itertools.cycle"]], "dropwhile() (in module itertools)": [[258, "itertools.dropwhile"]], "filterfalse() (in module itertools)": [[258, "itertools.filterfalse"]], "from_iterable() (itertools.chain class method)": [[258, "itertools.chain.from_iterable"]], "groupby() (in module itertools)": [[258, "itertools.groupby"]], "islice() (in module itertools)": [[258, "itertools.islice"]], "itertools": [[258, "module-itertools"]], "pairwise() (in module itertools)": [[258, "itertools.pairwise"]], "permutations() (in module itertools)": [[258, "itertools.permutations"]], "product() (in module itertools)": [[258, "itertools.product"]], "repeat() (in module itertools)": [[258, "itertools.repeat"]], "starmap() (in module itertools)": [[258, "itertools.starmap"]], "takewhile() (in module itertools)": [[258, "itertools.takewhile"]], "tee() (in module itertools)": [[258, "itertools.tee"]], "zip_longest() (in module itertools)": [[258, "itertools.zip_longest"]], "--compact": [[259, "cmdoption-json.tool-indent"]], "--json-lines": [[259, "cmdoption-json.tool-json-lines"]], "--no-ensure-ascii": [[259, "cmdoption-json.tool-no-ensure-ascii"]], "--no-indent": [[259, "cmdoption-json.tool-indent"]], "--sort-keys": [[259, "cmdoption-json.tool-sort-keys"]], "--tab": [[259, "cmdoption-json.tool-indent"]], "jsondecodeerror": [[259, "json.JSONDecodeError"]], "jsondecoder (class in json)": [[259, "json.JSONDecoder"]], "jsonencoder (class in json)": [[259, "json.JSONEncoder"]], "rfc 4627": [[259, "index-1"], [259, "index-3"]], "rfc 7159": [[259, "index-0"], [259, "index-2"], [259, "index-4"]], "colno (json.jsondecodeerror attribute)": [[259, "json.JSONDecodeError.colno"]], "decode() (json.jsondecoder method)": [[259, "json.JSONDecoder.decode"]], "default() (json.jsonencoder method)": [[259, "json.JSONEncoder.default"]], "doc (json.jsondecodeerror attribute)": [[259, "json.JSONDecodeError.doc"]], "dump() (in module json)": [[259, "json.dump"]], "dumps() (in module json)": [[259, "json.dumps"]], "encode() (json.jsonencoder method)": [[259, "json.JSONEncoder.encode"]], "infile": [[259, "cmdoption-json.tool-arg-infile"]], "iterencode() (json.jsonencoder method)": [[259, "json.JSONEncoder.iterencode"]], "json": [[259, "module-json"], [443, "index-1"]], "json.tool": [[259, "module-json.tool"]], "json.tool command line option": [[259, "cmdoption-json.tool-arg-infile"], [259, "cmdoption-json.tool-arg-outfile"], [259, "cmdoption-json.tool-h"], [259, "cmdoption-json.tool-indent"], [259, "cmdoption-json.tool-json-lines"], [259, "cmdoption-json.tool-no-ensure-ascii"], [259, "cmdoption-json.tool-sort-keys"]], "lineno (json.jsondecodeerror attribute)": [[259, "json.JSONDecodeError.lineno"]], "load() (in module json)": [[259, "json.load"]], "loads() (in module json)": [[259, "json.loads"]], "msg (json.jsondecodeerror attribute)": [[259, "json.JSONDecodeError.msg"]], "outfile": [[259, "cmdoption-json.tool-arg-outfile"]], "pos (json.jsondecodeerror attribute)": [[259, "json.JSONDecodeError.pos"]], "raw_decode() (json.jsondecoder method)": [[259, "json.JSONDecoder.raw_decode"]], "iskeyword() (in module keyword)": [[260, "keyword.iskeyword"]], "issoftkeyword() (in module keyword)": [[260, "keyword.issoftkeyword"]], "keyword": [[260, "module-keyword"], [424, "index-12"], [424, "index-13"], [424, "index-14"], [424, "index-16"], [424, "index-18"], [424, "index-18"], [424, "index-3"], [424, "index-4"], [424, "index-49"], [424, "index-6"], [424, "index-9"], [427, "index-23"], [427, "index-57"], [432, "index-13"], [432, "index-14"], [433, "index-25"], [433, "index-31"], [433, "index-32"], [433, "index-33"], [433, "index-34"]], "kwlist (in module keyword)": [[260, "keyword.kwlist"]], "softkwlist (in module keyword)": [[260, "keyword.softkwlist"]], "checkcache() (in module linecache)": [[262, "linecache.checkcache"]], "clearcache() (in module linecache)": [[262, "linecache.clearcache"]], "getline() (in module linecache)": [[262, "linecache.getline"]], "lazycache() (in module linecache)": [[262, "linecache.lazycache"]], "linecache": [[262, "module-linecache"]], "abday_1 (in module locale)": [[263, "locale.ABDAY_1"]], "abday_2 (in module locale)": [[263, "locale.ABDAY_2"]], "abday_3 (in module locale)": [[263, "locale.ABDAY_3"]], "abday_4 (in module locale)": [[263, "locale.ABDAY_4"]], "abday_5 (in module locale)": [[263, "locale.ABDAY_5"]], "abday_6 (in module locale)": [[263, "locale.ABDAY_6"]], "abday_7 (in module locale)": [[263, "locale.ABDAY_7"]], "abmon_1 (in module locale)": [[263, "locale.ABMON_1"]], "abmon_10 (in module locale)": [[263, "locale.ABMON_10"]], "abmon_11 (in module locale)": [[263, "locale.ABMON_11"]], "abmon_12 (in module locale)": [[263, "locale.ABMON_12"]], "abmon_2 (in module locale)": [[263, "locale.ABMON_2"]], "abmon_3 (in module locale)": [[263, "locale.ABMON_3"]], "abmon_4 (in module locale)": [[263, "locale.ABMON_4"]], "abmon_5 (in module locale)": [[263, "locale.ABMON_5"]], "abmon_6 (in module locale)": [[263, "locale.ABMON_6"]], "abmon_7 (in module locale)": [[263, "locale.ABMON_7"]], "abmon_8 (in module locale)": [[263, "locale.ABMON_8"]], "abmon_9 (in module locale)": [[263, "locale.ABMON_9"]], "alt_digits (in module locale)": [[263, "locale.ALT_DIGITS"]], "char_max (in module locale)": [[263, "locale.CHAR_MAX"]], "codeset (in module locale)": [[263, "locale.CODESET"]], "crncystr (in module locale)": [[263, "locale.CRNCYSTR"]], "day_1 (in module locale)": [[263, "locale.DAY_1"]], "day_2 (in module locale)": [[263, "locale.DAY_2"]], "day_3 (in module locale)": [[263, "locale.DAY_3"]], "day_4 (in module locale)": [[263, "locale.DAY_4"]], "day_5 (in module locale)": [[263, "locale.DAY_5"]], "day_6 (in module locale)": [[263, "locale.DAY_6"]], "day_7 (in module locale)": [[263, "locale.DAY_7"]], "d_fmt (in module locale)": [[263, "locale.D_FMT"]], "d_t_fmt (in module locale)": [[263, "locale.D_T_FMT"]], "era (in module locale)": [[263, "locale.ERA"]], "era_d_fmt (in module locale)": [[263, "locale.ERA_D_FMT"]], "era_d_t_fmt (in module locale)": [[263, "locale.ERA_D_T_FMT"]], "era_t_fmt (in module locale)": [[263, "locale.ERA_T_FMT"]], "lc_all (in module locale)": [[263, "locale.LC_ALL"]], "lc_collate (in module locale)": [[263, "locale.LC_COLLATE"]], "lc_ctype (in module locale)": [[263, "locale.LC_CTYPE"]], "lc_messages (in module locale)": [[263, "locale.LC_MESSAGES"]], "lc_monetary (in module locale)": [[263, "locale.LC_MONETARY"]], "lc_numeric (in module locale)": [[263, "locale.LC_NUMERIC"]], "lc_time (in module locale)": [[263, "locale.LC_TIME"]], "mon_1 (in module locale)": [[263, "locale.MON_1"]], "mon_10 (in module locale)": [[263, "locale.MON_10"]], "mon_11 (in module locale)": [[263, "locale.MON_11"]], "mon_12 (in module locale)": [[263, "locale.MON_12"]], "mon_2 (in module locale)": [[263, "locale.MON_2"]], "mon_3 (in module locale)": [[263, "locale.MON_3"]], "mon_4 (in module locale)": [[263, "locale.MON_4"]], "mon_5 (in module locale)": [[263, "locale.MON_5"]], "mon_6 (in module locale)": [[263, "locale.MON_6"]], "mon_7 (in module locale)": [[263, "locale.MON_7"]], "mon_8 (in module locale)": [[263, "locale.MON_8"]], "mon_9 (in module locale)": [[263, "locale.MON_9"]], "noexpr (in module locale)": [[263, "locale.NOEXPR"]], "radixchar (in module locale)": [[263, "locale.RADIXCHAR"]], "rfc 1766": [[263, "index-4"], [263, "index-5"]], "thousep (in module locale)": [[263, "locale.THOUSEP"]], "t_fmt (in module locale)": [[263, "locale.T_FMT"]], "t_fmt_ampm (in module locale)": [[263, "locale.T_FMT_AMPM"]], "yesexpr (in module locale)": [[263, "locale.YESEXPR"]], "_locale": [[263, "index-0"]], "atof() (in module locale)": [[263, "locale.atof"]], "atoi() (in module locale)": [[263, "locale.atoi"]], "bind_textdomain_codeset() (in module locale)": [[263, "locale.bind_textdomain_codeset"]], "bindtextdomain() (in module locale)": [[263, "locale.bindtextdomain"]], "currency() (in module locale)": [[263, "locale.currency"]], "dcgettext() (in module locale)": [[263, "locale.dcgettext"]], "delocalize() (in module locale)": [[263, "locale.delocalize"]], "dgettext() (in module locale)": [[263, "locale.dgettext"]], "format_string() (in module locale)": [[263, "locale.format_string"]], "getdefaultlocale() (in module locale)": [[263, "locale.getdefaultlocale"]], "getencoding() (in module locale)": [[263, "locale.getencoding"]], "getlocale() (in module locale)": [[263, "locale.getlocale"]], "getpreferredencoding() (in module locale)": [[263, "locale.getpreferredencoding"]], "gettext() (in module locale)": [[263, "locale.gettext"]], "locale": [[263, "module-locale"]], "localeconv() (in module locale)": [[263, "locale.localeconv"]], "localize() (in module locale)": [[263, "locale.localize"]], "nl_langinfo() (in module locale)": [[263, "locale.nl_langinfo"]], "normalize() (in module locale)": [[263, "locale.normalize"]], "resetlocale() (in module locale)": [[263, "locale.resetlocale"]], "setlocale() (in module locale)": [[263, "locale.setlocale"]], "str() (in module locale)": [[263, "locale.str"]], "strcoll() (in module locale)": [[263, "locale.strcoll"]], "strxfrm() (in module locale)": [[263, "locale.strxfrm"]], "textdomain() (in module locale)": [[263, "locale.textdomain"]], "bufferingformatter (class in logging)": [[264, "logging.BufferingFormatter"]], "critical (in module logging)": [[264, "logging.CRITICAL"]], "debug (in module logging)": [[264, "logging.DEBUG"]], "error (in module logging)": [[264, "logging.ERROR"]], "errors": [[264, "index-0"], [426, "index-15"]], "filter (class in logging)": [[264, "logging.Filter"]], "formatter (class in logging)": [[264, "logging.Formatter"]], "handler (class in logging)": [[264, "logging.Handler"]], "info (in module logging)": [[264, "logging.INFO"]], "logrecord (class in logging)": [[264, "logging.LogRecord"]], "logger (class in logging)": [[264, "logging.Logger"]], "loggeradapter (class in logging)": [[264, "logging.LoggerAdapter"]], "notset (in module logging)": [[264, "logging.NOTSET"]], "pep 282": [[264, "index-1"], [329, "index-2"], [462, "index-11"], [462, "index-12"]], "warning (in module logging)": [[264, "logging.WARNING"]], "__init__() (logging.handler method)": [[264, "logging.Handler.__init__"]], "_log (logging.loggeradapter attribute)": [[264, "logging.LoggerAdapter._log"]], "acquire() (logging.handler method)": [[264, "logging.Handler.acquire"]], "addfilter() (logging.handler method)": [[264, "logging.Handler.addFilter"]], "addfilter() (logging.logger method)": [[264, "logging.Logger.addFilter"]], "addhandler() (logging.logger method)": [[264, "logging.Logger.addHandler"]], "addlevelname() (in module logging)": [[264, "logging.addLevelName"]], "basicconfig() (in module logging)": [[264, "logging.basicConfig"]], "capturewarnings() (in module logging)": [[264, "logging.captureWarnings"]], "close() (logging.handler method)": [[264, "logging.Handler.close"]], "createlock() (logging.handler method)": [[264, "logging.Handler.createLock"]], "critical() (in module logging)": [[264, "logging.critical"]], "critical() (logging.logger method)": [[264, "logging.Logger.critical"]], "debug() (in module logging)": [[264, "logging.debug"]], "debug() (logging.logger method)": [[264, "logging.Logger.debug"]], "disable() (in module logging)": [[264, "logging.disable"]], "emit() (logging.handler method)": [[264, "logging.Handler.emit"]], "error() (in module logging)": [[264, "logging.error"]], "error() (logging.logger method)": [[264, "logging.Logger.error"]], "exception() (in module logging)": [[264, "logging.exception"]], "exception() (logging.logger method)": [[264, "logging.Logger.exception"]], "filter() (logging.filter method)": [[264, "logging.Filter.filter"]], "filter() (logging.handler method)": [[264, "logging.Handler.filter"]], "filter() (logging.logger method)": [[264, "logging.Logger.filter"]], "findcaller() (logging.logger method)": [[264, "logging.Logger.findCaller"]], "flush() (logging.handler method)": [[264, "logging.Handler.flush"]], "format() (logging.bufferingformatter method)": [[264, "logging.BufferingFormatter.format"]], "format() (logging.formatter method)": [[264, "logging.Formatter.format"]], "format() (logging.handler method)": [[264, "logging.Handler.format"]], "formatexception() (logging.formatter method)": [[264, "logging.Formatter.formatException"]], "formatfooter() (logging.bufferingformatter method)": [[264, "logging.BufferingFormatter.formatFooter"]], "formatheader() (logging.bufferingformatter method)": [[264, "logging.BufferingFormatter.formatHeader"]], "formatstack() (logging.formatter method)": [[264, "logging.Formatter.formatStack"]], "formattime() (logging.formatter method)": [[264, "logging.Formatter.formatTime"]], "getchild() (logging.logger method)": [[264, "logging.Logger.getChild"]], "getchildren() (logging.logger method)": [[264, "logging.Logger.getChildren"]], "geteffectivelevel() (logging.logger method)": [[264, "logging.Logger.getEffectiveLevel"]], "gethandlerbyname() (in module logging)": [[264, "logging.getHandlerByName"]], "gethandlernames() (in module logging)": [[264, "logging.getHandlerNames"]], "getlevelname() (in module logging)": [[264, "logging.getLevelName"]], "getlevelnamesmapping() (in module logging)": [[264, "logging.getLevelNamesMapping"]], "getlogrecordfactory() (in module logging)": [[264, "logging.getLogRecordFactory"]], "getlogger() (in module logging)": [[264, "logging.getLogger"]], "getloggerclass() (in module logging)": [[264, "logging.getLoggerClass"]], "getmessage() (logging.logrecord method)": [[264, "logging.LogRecord.getMessage"]], "handle() (logging.handler method)": [[264, "logging.Handler.handle"]], "handle() (logging.logger method)": [[264, "logging.Logger.handle"]], "handleerror() (logging.handler method)": [[264, "logging.Handler.handleError"]], "hashandlers() (logging.logger method)": [[264, "logging.Logger.hasHandlers"]], "info() (in module logging)": [[264, "logging.info"]], "info() (logging.logger method)": [[264, "logging.Logger.info"]], "isenabledfor() (logging.logger method)": [[264, "logging.Logger.isEnabledFor"]], "lastresort (in module logging)": [[264, "logging.lastResort"]], "log() (in module logging)": [[264, "logging.log"]], "log() (logging.logger method)": [[264, "logging.Logger.log"]], "logging": [[264, "index-0"], [264, "module-logging"]], "makelogrecord() (in module logging)": [[264, "logging.makeLogRecord"]], "makerecord() (logging.logger method)": [[264, "logging.Logger.makeRecord"]], "manager (logging.loggeradapter attribute)": [[264, "logging.LoggerAdapter.manager"]], "process() (logging.loggeradapter method)": [[264, "logging.LoggerAdapter.process"]], "propagate (logging.logger attribute)": [[264, "logging.Logger.propagate"]], "raiseexceptions (in module logging)": [[264, "logging.raiseExceptions"]], "release() (logging.handler method)": [[264, "logging.Handler.release"]], "removefilter() (logging.handler method)": [[264, "logging.Handler.removeFilter"]], "removefilter() (logging.logger method)": [[264, "logging.Logger.removeFilter"]], "removehandler() (logging.logger method)": [[264, "logging.Logger.removeHandler"]], "setformatter() (logging.handler method)": [[264, "logging.Handler.setFormatter"]], "setlevel() (logging.handler method)": [[264, "logging.Handler.setLevel"]], "setlevel() (logging.logger method)": [[264, "logging.Logger.setLevel"]], "setlogrecordfactory() (in module logging)": [[264, "logging.setLogRecordFactory"]], "setloggerclass() (in module logging)": [[264, "logging.setLoggerClass"]], "shutdown() (in module logging)": [[264, "logging.shutdown"]], "warning() (in module logging)": [[264, "logging.warning"]], "warning() (logging.logger method)": [[264, "logging.Logger.warning"]], "dictconfig() (in module logging.config)": [[265, "logging.config.dictConfig"]], "fileconfig() (in module logging.config)": [[265, "logging.config.fileConfig"]], "listen() (in module logging.config)": [[265, "logging.config.listen"]], "logging.config": [[265, "module-logging.config"]], "stoplistening() (in module logging.config)": [[265, "logging.config.stopListening"]], "baserotatinghandler (class in logging.handlers)": [[266, "logging.handlers.BaseRotatingHandler"]], "bufferinghandler (class in logging.handlers)": [[266, "logging.handlers.BufferingHandler"]], "datagramhandler (class in logging.handlers)": [[266, "logging.handlers.DatagramHandler"]], "filehandler (class in logging)": [[266, "logging.FileHandler"]], "httphandler (class in logging.handlers)": [[266, "logging.handlers.HTTPHandler"]], "memoryhandler (class in logging.handlers)": [[266, "logging.handlers.MemoryHandler"]], "nteventloghandler (class in logging.handlers)": [[266, "logging.handlers.NTEventLogHandler"]], "nullhandler (class in logging)": [[266, "logging.NullHandler"]], "queuehandler (class in logging.handlers)": [[266, "logging.handlers.QueueHandler"]], "queuelistener (class in logging.handlers)": [[266, "logging.handlers.QueueListener"]], "rotatingfilehandler (class in logging.handlers)": [[266, "logging.handlers.RotatingFileHandler"]], "smtphandler (class in logging.handlers)": [[266, "logging.handlers.SMTPHandler"]], "sockethandler (class in logging.handlers)": [[266, "logging.handlers.SocketHandler"]], "streamhandler (class in logging)": [[266, "logging.StreamHandler"]], "sysloghandler (class in logging.handlers)": [[266, "logging.handlers.SysLogHandler"]], "timedrotatingfilehandler (class in logging.handlers)": [[266, "logging.handlers.TimedRotatingFileHandler"]], "watchedfilehandler (class in logging.handlers)": [[266, "logging.handlers.WatchedFileHandler"]], "close() (logging.filehandler method)": [[266, "logging.FileHandler.close"]], "close() (logging.handlers.memoryhandler method)": [[266, "logging.handlers.MemoryHandler.close"]], "close() (logging.handlers.nteventloghandler method)": [[266, "logging.handlers.NTEventLogHandler.close"]], "close() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.close"]], "close() (logging.handlers.sysloghandler method)": [[266, "logging.handlers.SysLogHandler.close"]], "createlock() (logging.nullhandler method)": [[266, "logging.NullHandler.createLock"]], "createsocket() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.createSocket"]], "createsocket() (logging.handlers.sysloghandler method)": [[266, "logging.handlers.SysLogHandler.createSocket"]], "dequeue() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.dequeue"]], "dorollover() (logging.handlers.rotatingfilehandler method)": [[266, "logging.handlers.RotatingFileHandler.doRollover"]], "dorollover() (logging.handlers.timedrotatingfilehandler method)": [[266, "logging.handlers.TimedRotatingFileHandler.doRollover"]], "emit() (logging.filehandler method)": [[266, "logging.FileHandler.emit"]], "emit() (logging.nullhandler method)": [[266, "logging.NullHandler.emit"]], "emit() (logging.streamhandler method)": [[266, "logging.StreamHandler.emit"]], "emit() (logging.handlers.bufferinghandler method)": [[266, "logging.handlers.BufferingHandler.emit"]], "emit() (logging.handlers.datagramhandler method)": [[266, "logging.handlers.DatagramHandler.emit"]], "emit() (logging.handlers.httphandler method)": [[266, "logging.handlers.HTTPHandler.emit"]], "emit() (logging.handlers.nteventloghandler method)": [[266, "logging.handlers.NTEventLogHandler.emit"]], "emit() (logging.handlers.queuehandler method)": [[266, "logging.handlers.QueueHandler.emit"]], "emit() (logging.handlers.rotatingfilehandler method)": [[266, "logging.handlers.RotatingFileHandler.emit"]], "emit() (logging.handlers.smtphandler method)": [[266, "logging.handlers.SMTPHandler.emit"]], "emit() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.emit"]], "emit() (logging.handlers.sysloghandler method)": [[266, "logging.handlers.SysLogHandler.emit"]], "emit() (logging.handlers.timedrotatingfilehandler method)": [[266, "logging.handlers.TimedRotatingFileHandler.emit"]], "emit() (logging.handlers.watchedfilehandler method)": [[266, "logging.handlers.WatchedFileHandler.emit"]], "encodepriority() (logging.handlers.sysloghandler method)": [[266, "logging.handlers.SysLogHandler.encodePriority"]], "enqueue() (logging.handlers.queuehandler method)": [[266, "logging.handlers.QueueHandler.enqueue"]], "enqueue_sentinel() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.enqueue_sentinel"]], "flush() (logging.streamhandler method)": [[266, "logging.StreamHandler.flush"]], "flush() (logging.handlers.bufferinghandler method)": [[266, "logging.handlers.BufferingHandler.flush"]], "flush() (logging.handlers.memoryhandler method)": [[266, "logging.handlers.MemoryHandler.flush"]], "geteventcategory() (logging.handlers.nteventloghandler method)": [[266, "logging.handlers.NTEventLogHandler.getEventCategory"]], "geteventtype() (logging.handlers.nteventloghandler method)": [[266, "logging.handlers.NTEventLogHandler.getEventType"]], "getfilestodelete() (logging.handlers.timedrotatingfilehandler method)": [[266, "logging.handlers.TimedRotatingFileHandler.getFilesToDelete"]], "getmessageid() (logging.handlers.nteventloghandler method)": [[266, "logging.handlers.NTEventLogHandler.getMessageID"]], "getsubject() (logging.handlers.smtphandler method)": [[266, "logging.handlers.SMTPHandler.getSubject"]], "handle() (logging.nullhandler method)": [[266, "logging.NullHandler.handle"]], "handle() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.handle"]], "handleerror() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.handleError"]], "listener (logging.handlers.queuehandler attribute)": [[266, "logging.handlers.QueueHandler.listener"]], "logging.handlers": [[266, "module-logging.handlers"]], "makepickle() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.makePickle"]], "makesocket() (logging.handlers.datagramhandler method)": [[266, "logging.handlers.DatagramHandler.makeSocket"]], "makesocket() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.makeSocket"]], "maplogrecord() (logging.handlers.httphandler method)": [[266, "logging.handlers.HTTPHandler.mapLogRecord"]], "mappriority() (logging.handlers.sysloghandler method)": [[266, "logging.handlers.SysLogHandler.mapPriority"]], "namer (logging.handlers.baserotatinghandler attribute)": [[266, "logging.handlers.BaseRotatingHandler.namer"]], "prepare() (logging.handlers.queuehandler method)": [[266, "logging.handlers.QueueHandler.prepare"]], "prepare() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.prepare"]], "reopenifneeded() (logging.handlers.watchedfilehandler method)": [[266, "logging.handlers.WatchedFileHandler.reopenIfNeeded"]], "rotate() (logging.handlers.baserotatinghandler method)": [[266, "logging.handlers.BaseRotatingHandler.rotate"]], "rotation_filename() (logging.handlers.baserotatinghandler method)": [[266, "logging.handlers.BaseRotatingHandler.rotation_filename"]], "rotator (logging.handlers.baserotatinghandler attribute)": [[266, "logging.handlers.BaseRotatingHandler.rotator"]], "send() (logging.handlers.datagramhandler method)": [[266, "logging.handlers.DatagramHandler.send"]], "send() (logging.handlers.sockethandler method)": [[266, "logging.handlers.SocketHandler.send"]], "setstream() (logging.streamhandler method)": [[266, "logging.StreamHandler.setStream"]], "settarget() (logging.handlers.memoryhandler method)": [[266, "logging.handlers.MemoryHandler.setTarget"]], "shouldflush() (logging.handlers.bufferinghandler method)": [[266, "logging.handlers.BufferingHandler.shouldFlush"]], "shouldflush() (logging.handlers.memoryhandler method)": [[266, "logging.handlers.MemoryHandler.shouldFlush"]], "start() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.start"]], "stop() (logging.handlers.queuelistener method)": [[266, "logging.handlers.QueueListener.stop"]], "terminator (logging.streamhandler attribute)": [[266, "logging.StreamHandler.terminator"]], "lzmacompressor (class in lzma)": [[267, "lzma.LZMACompressor"]], "lzmadecompressor (class in lzma)": [[267, "lzma.LZMADecompressor"]], "lzmaerror": [[267, "lzma.LZMAError"]], "lzmafile (class in lzma)": [[267, "lzma.LZMAFile"]], "check (lzma.lzmadecompressor attribute)": [[267, "lzma.LZMADecompressor.check"]], "compress() (in module lzma)": [[267, "lzma.compress"]], "compress() (lzma.lzmacompressor method)": [[267, "lzma.LZMACompressor.compress"]], "decompress() (in module lzma)": [[267, "lzma.decompress"]], "decompress() (lzma.lzmadecompressor method)": [[267, "lzma.LZMADecompressor.decompress"]], "eof (lzma.lzmadecompressor attribute)": [[267, "lzma.LZMADecompressor.eof"]], "flush() (lzma.lzmacompressor method)": [[267, "lzma.LZMACompressor.flush"]], "is_check_supported() (in module lzma)": [[267, "lzma.is_check_supported"]], "lzma": [[267, "module-lzma"]], "needs_input (lzma.lzmadecompressor attribute)": [[267, "lzma.LZMADecompressor.needs_input"]], "open() (in module lzma)": [[267, "lzma.open"]], "peek() (lzma.lzmafile method)": [[267, "lzma.LZMAFile.peek"]], "unused_data (lzma.lzmadecompressor attribute)": [[267, "lzma.LZMADecompressor.unused_data"]], "babyl (class in mailbox)": [[268, "mailbox.Babyl"]], "babylmessage (class in mailbox)": [[268, "mailbox.BabylMessage"]], "externalclasherror": [[268, "mailbox.ExternalClashError"]], "formaterror": [[268, "mailbox.FormatError"]], "mh (class in mailbox)": [[268, "mailbox.MH"]], "mhmessage (class in mailbox)": [[268, "mailbox.MHMessage"]], "mmdf (class in mailbox)": [[268, "mailbox.MMDF"]], "mmdfmessage (class in mailbox)": [[268, "mailbox.MMDFMessage"]], "mailbox (class in mailbox)": [[268, "mailbox.Mailbox"]], "maildir (class in mailbox)": [[268, "mailbox.Maildir"]], "maildirmessage (class in mailbox)": [[268, "mailbox.MaildirMessage"]], "message (class in mailbox)": [[268, "mailbox.Message"]], "nosuchmailboxerror": [[268, "mailbox.NoSuchMailboxError"]], "notemptyerror": [[268, "mailbox.NotEmptyError"]], "__contains__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__contains__"]], "__delitem__() (mailbox.mh method)": [[268, "mailbox.MH.__delitem__"]], "__delitem__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__delitem__"]], "__getitem__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__getitem__"]], "__iter__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__iter__"]], "__len__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__len__"]], "__setitem__() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.__setitem__"]], "__setitem__() (mailbox.maildir method)": [[268, "mailbox.Maildir.__setitem__"]], "add() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.add"]], "add() (mailbox.maildir method)": [[268, "mailbox.Maildir.add"]], "add_flag() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.add_flag"]], "add_flag() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.add_flag"]], "add_flag() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.add_flag"]], "add_folder() (mailbox.mh method)": [[268, "mailbox.MH.add_folder"]], "add_folder() (mailbox.maildir method)": [[268, "mailbox.Maildir.add_folder"]], "add_label() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.add_label"]], "add_sequence() (mailbox.mhmessage method)": [[268, "mailbox.MHMessage.add_sequence"]], "clean() (mailbox.maildir method)": [[268, "mailbox.Maildir.clean"]], "clear() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.clear"]], "close() (mailbox.mh method)": [[268, "mailbox.MH.close"]], "close() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.close"]], "close() (mailbox.maildir method)": [[268, "mailbox.Maildir.close"]], "colon (mailbox.maildir attribute)": [[268, "mailbox.Maildir.colon"]], "discard() (mailbox.mh method)": [[268, "mailbox.MH.discard"]], "discard() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.discard"]], "flush() (mailbox.mh method)": [[268, "mailbox.MH.flush"]], "flush() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.flush"]], "flush() (mailbox.maildir method)": [[268, "mailbox.Maildir.flush"]], "get() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.get"]], "get_bytes() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.get_bytes"]], "get_date() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.get_date"]], "get_file() (mailbox.babyl method)": [[268, "mailbox.Babyl.get_file"]], "get_file() (mailbox.mh method)": [[268, "mailbox.MH.get_file"]], "get_file() (mailbox.mmdf method)": [[268, "mailbox.MMDF.get_file"]], "get_file() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.get_file"]], "get_file() (mailbox.maildir method)": [[268, "mailbox.Maildir.get_file"]], "get_file() (mailbox.mbox method)": [[268, "mailbox.mbox.get_file"]], "get_flags() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.get_flags"]], "get_flags() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.get_flags"]], "get_flags() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.get_flags"]], "get_folder() (mailbox.mh method)": [[268, "mailbox.MH.get_folder"]], "get_folder() (mailbox.maildir method)": [[268, "mailbox.Maildir.get_folder"]], "get_from() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.get_from"]], "get_from() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.get_from"]], "get_info() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.get_info"]], "get_labels() (mailbox.babyl method)": [[268, "mailbox.Babyl.get_labels"]], "get_labels() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.get_labels"]], "get_message() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.get_message"]], "get_sequences() (mailbox.mh method)": [[268, "mailbox.MH.get_sequences"]], "get_sequences() (mailbox.mhmessage method)": [[268, "mailbox.MHMessage.get_sequences"]], "get_string() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.get_string"]], "get_subdir() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.get_subdir"]], "get_visible() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.get_visible"]], "items() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.items"]], "iteritems() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.iteritems"]], "iterkeys() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.iterkeys"]], "itervalues() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.itervalues"]], "keys() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.keys"]], "list_folders() (mailbox.mh method)": [[268, "mailbox.MH.list_folders"]], "list_folders() (mailbox.maildir method)": [[268, "mailbox.Maildir.list_folders"]], "lock() (mailbox.babyl method)": [[268, "mailbox.Babyl.lock"]], "lock() (mailbox.mh method)": [[268, "mailbox.MH.lock"]], "lock() (mailbox.mmdf method)": [[268, "mailbox.MMDF.lock"]], "lock() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.lock"]], "lock() (mailbox.maildir method)": [[268, "mailbox.Maildir.lock"]], "lock() (mailbox.mbox method)": [[268, "mailbox.mbox.lock"]], "mailbox": [[268, "module-mailbox"]], "mbox (class in mailbox)": [[268, "mailbox.mbox"]], "mboxmessage (class in mailbox)": [[268, "mailbox.mboxMessage"]], "pack() (mailbox.mh method)": [[268, "mailbox.MH.pack"]], "pop() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.pop"]], "popitem() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.popitem"]], "remove() (mailbox.mh method)": [[268, "mailbox.MH.remove"]], "remove() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.remove"]], "remove_flag() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.remove_flag"]], "remove_flag() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.remove_flag"]], "remove_flag() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.remove_flag"]], "remove_folder() (mailbox.mh method)": [[268, "mailbox.MH.remove_folder"]], "remove_folder() (mailbox.maildir method)": [[268, "mailbox.Maildir.remove_folder"]], "remove_label() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.remove_label"]], "remove_sequence() (mailbox.mhmessage method)": [[268, "mailbox.MHMessage.remove_sequence"]], "set_date() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.set_date"]], "set_flags() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.set_flags"]], "set_flags() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.set_flags"]], "set_flags() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.set_flags"]], "set_from() (mailbox.mmdfmessage method)": [[268, "mailbox.MMDFMessage.set_from"]], "set_from() (mailbox.mboxmessage method)": [[268, "mailbox.mboxMessage.set_from"]], "set_info() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.set_info"]], "set_labels() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.set_labels"]], "set_sequences() (mailbox.mh method)": [[268, "mailbox.MH.set_sequences"]], "set_sequences() (mailbox.mhmessage method)": [[268, "mailbox.MHMessage.set_sequences"]], "set_subdir() (mailbox.maildirmessage method)": [[268, "mailbox.MaildirMessage.set_subdir"]], "set_visible() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.set_visible"]], "unlock() (mailbox.babyl method)": [[268, "mailbox.Babyl.unlock"]], "unlock() (mailbox.mh method)": [[268, "mailbox.MH.unlock"]], "unlock() (mailbox.mmdf method)": [[268, "mailbox.MMDF.unlock"]], "unlock() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.unlock"]], "unlock() (mailbox.maildir method)": [[268, "mailbox.Maildir.unlock"]], "unlock() (mailbox.mbox method)": [[268, "mailbox.mbox.unlock"]], "update() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.update"]], "update() (mailbox.maildir method)": [[268, "mailbox.Maildir.update"]], "update_visible() (mailbox.babylmessage method)": [[268, "mailbox.BabylMessage.update_visible"]], "values() (mailbox.mailbox method)": [[268, "mailbox.Mailbox.values"]], "pep 594#mailcap": [[269, "index-0"]], "rfc 1524": [[269, "index-1"], [269, "index-2"]], "findmatch() (in module mailcap)": [[269, "mailcap.findmatch"]], "getcaps() (in module mailcap)": [[269, "mailcap.getcaps"]], "mailcap": [[269, "module-mailcap"]], "dump() (in module marshal)": [[271, "marshal.dump"]], "dumps() (in module marshal)": [[271, "marshal.dumps"]], "load() (in module marshal)": [[271, "marshal.load"]], "loads() (in module marshal)": [[271, "marshal.loads"]], "marshal": [[271, "module-marshal"]], "shelve": [[271, "index-0"], [327, "module-shelve"]], "version (in module marshal)": [[271, "marshal.version"]], "acos() (in module math)": [[272, "math.acos"]], "acosh() (in module math)": [[272, "math.acosh"]], "asin() (in module math)": [[272, "math.asin"]], "asinh() (in module math)": [[272, "math.asinh"]], "atan() (in module math)": [[272, "math.atan"]], "atan2() (in module math)": [[272, "math.atan2"]], "atanh() (in module math)": [[272, "math.atanh"]], "cbrt() (in module math)": [[272, "math.cbrt"]], "ceil() (in module math)": [[272, "math.ceil"], [341, "index-15"]], "comb() (in module math)": [[272, "math.comb"]], "copysign() (in module math)": [[272, "math.copysign"]], "cos() (in module math)": [[272, "math.cos"]], "cosh() (in module math)": [[272, "math.cosh"]], "degrees() (in module math)": [[272, "math.degrees"]], "dist() (in module math)": [[272, "math.dist"]], "e (in module math)": [[272, "math.e"]], "erf() (in module math)": [[272, "math.erf"]], "erfc() (in module math)": [[272, "math.erfc"]], "exp() (in module math)": [[272, "math.exp"]], "exp2() (in module math)": [[272, "math.exp2"]], "expm1() (in module math)": [[272, "math.expm1"]], "fabs() (in module math)": [[272, "math.fabs"]], "factorial() (in module math)": [[272, "math.factorial"]], "floor() (in module math)": [[272, "math.floor"], [341, "index-15"]], "fmod() (in module math)": [[272, "math.fmod"]], "frexp() (in module math)": [[272, "math.frexp"]], "fsum() (in module math)": [[272, "math.fsum"]], "gamma() (in module math)": [[272, "math.gamma"]], "gcd() (in module math)": [[272, "math.gcd"]], "hypot() (in module math)": [[272, "math.hypot"]], "inf (in module math)": [[272, "math.inf"]], "isclose() (in module math)": [[272, "math.isclose"]], "isfinite() (in module math)": [[272, "math.isfinite"]], "isinf() (in module math)": [[272, "math.isinf"]], "isnan() (in module math)": [[272, "math.isnan"]], "isqrt() (in module math)": [[272, "math.isqrt"]], "lcm() (in module math)": [[272, "math.lcm"]], "ldexp() (in module math)": [[272, "math.ldexp"]], "lgamma() (in module math)": [[272, "math.lgamma"]], "log() (in module math)": [[272, "math.log"]], "log10() (in module math)": [[272, "math.log10"]], "log1p() (in module math)": [[272, "math.log1p"]], "log2() (in module math)": [[272, "math.log2"]], "modf() (in module math)": [[272, "math.modf"]], "nan (in module math)": [[272, "math.nan"]], "nextafter() (in module math)": [[272, "math.nextafter"]], "perm() (in module math)": [[272, "math.perm"]], "pi (in module math)": [[272, "math.pi"]], "pow() (in module math)": [[272, "math.pow"]], "prod() (in module math)": [[272, "math.prod"]], "radians() (in module math)": [[272, "math.radians"]], "remainder() (in module math)": [[272, "math.remainder"]], "sin() (in module math)": [[272, "math.sin"]], "sinh() (in module math)": [[272, "math.sinh"]], "sqrt() (in module math)": [[272, "math.sqrt"]], "sumprod() (in module math)": [[272, "math.sumprod"]], "tan() (in module math)": [[272, "math.tan"]], "tanh() (in module math)": [[272, "math.tanh"]], "tau (in module math)": [[272, "math.tau"]], "trunc() (in module math)": [[272, "math.trunc"], [341, "index-15"]], "ulp() (in module math)": [[272, "math.ulp"]], "mimetypes (class in mimetypes)": [[273, "mimetypes.MimeTypes"]], "add_type() (in module mimetypes)": [[273, "mimetypes.add_type"]], "common_types (in module mimetypes)": [[273, "mimetypes.common_types"]], "content type": [[273, "index-0"]], "encodings_map (in module mimetypes)": [[273, "mimetypes.encodings_map"]], "encodings_map (mimetypes.mimetypes attribute)": [[273, "mimetypes.MimeTypes.encodings_map"]], "guess_all_extensions() (in module mimetypes)": [[273, "mimetypes.guess_all_extensions"]], "guess_all_extensions() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.guess_all_extensions"]], "guess_extension() (in module mimetypes)": [[273, "mimetypes.guess_extension"]], "guess_extension() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.guess_extension"]], "guess_type() (in module mimetypes)": [[273, "mimetypes.guess_type"]], "guess_type() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.guess_type"]], "init() (in module mimetypes)": [[273, "mimetypes.init"]], "inited (in module mimetypes)": [[273, "mimetypes.inited"]], "knownfiles (in module mimetypes)": [[273, "mimetypes.knownfiles"]], "mime.types": [[273, "index-2"]], "mimetypes": [[273, "module-mimetypes"]], "read() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.read"]], "read_mime_types() (in module mimetypes)": [[273, "mimetypes.read_mime_types"]], "read_windows_registry() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.read_windows_registry"]], "readfp() (mimetypes.mimetypes method)": [[273, "mimetypes.MimeTypes.readfp"]], "suffix_map (in module mimetypes)": [[273, "mimetypes.suffix_map"]], "suffix_map (mimetypes.mimetypes attribute)": [[273, "mimetypes.MimeTypes.suffix_map"]], "types_map (in module mimetypes)": [[273, "mimetypes.types_map"]], "types_map (mimetypes.mimetypes attribute)": [[273, "mimetypes.MimeTypes.types_map"]], "types_map_inv (mimetypes.mimetypes attribute)": [[273, "mimetypes.MimeTypes.types_map_inv"]], "madv_autosync (in module mmap)": [[275, "mmap.MADV_AUTOSYNC"]], "madv_core (in module mmap)": [[275, "mmap.MADV_CORE"]], "madv_dodump (in module mmap)": [[275, "mmap.MADV_DODUMP"]], "madv_dofork (in module mmap)": [[275, "mmap.MADV_DOFORK"]], "madv_dontdump (in module mmap)": [[275, "mmap.MADV_DONTDUMP"]], "madv_dontfork (in module mmap)": [[275, "mmap.MADV_DONTFORK"]], "madv_dontneed (in module mmap)": [[275, "mmap.MADV_DONTNEED"]], "madv_free (in module mmap)": [[275, "mmap.MADV_FREE"]], "madv_free_reusable (in module mmap)": [[275, "mmap.MADV_FREE_REUSABLE"]], "madv_free_reuse (in module mmap)": [[275, "mmap.MADV_FREE_REUSE"]], "madv_hugepage (in module mmap)": [[275, "mmap.MADV_HUGEPAGE"]], "madv_hwpoison (in module mmap)": [[275, "mmap.MADV_HWPOISON"]], "madv_mergeable (in module mmap)": [[275, "mmap.MADV_MERGEABLE"]], "madv_nocore (in module mmap)": [[275, "mmap.MADV_NOCORE"]], "madv_nohugepage (in module mmap)": [[275, "mmap.MADV_NOHUGEPAGE"]], "madv_normal (in module mmap)": [[275, "mmap.MADV_NORMAL"]], "madv_nosync (in module mmap)": [[275, "mmap.MADV_NOSYNC"]], "madv_protect (in module mmap)": [[275, "mmap.MADV_PROTECT"]], "madv_random (in module mmap)": [[275, "mmap.MADV_RANDOM"]], "madv_remove (in module mmap)": [[275, "mmap.MADV_REMOVE"]], "madv_sequential (in module mmap)": [[275, "mmap.MADV_SEQUENTIAL"]], "madv_soft_offline (in module mmap)": [[275, "mmap.MADV_SOFT_OFFLINE"]], "madv_unmergeable (in module mmap)": [[275, "mmap.MADV_UNMERGEABLE"]], "madv_willneed (in module mmap)": [[275, "mmap.MADV_WILLNEED"]], "map_aligned_super (in module mmap)": [[275, "mmap.MAP_ALIGNED_SUPER"]], "map_anon (in module mmap)": [[275, "mmap.MAP_ANON"]], "map_anonymous (in module mmap)": [[275, "mmap.MAP_ANONYMOUS"]], "map_conceal (in module mmap)": [[275, "mmap.MAP_CONCEAL"]], "map_denywrite (in module mmap)": [[275, "mmap.MAP_DENYWRITE"]], "map_executable (in module mmap)": [[275, "mmap.MAP_EXECUTABLE"]], "map_populate (in module mmap)": [[275, "mmap.MAP_POPULATE"]], "map_private (in module mmap)": [[275, "mmap.MAP_PRIVATE"]], "map_shared (in module mmap)": [[275, "mmap.MAP_SHARED"]], "map_stack (in module mmap)": [[275, "mmap.MAP_STACK"]], "close() (mmap.mmap method)": [[275, "mmap.mmap.close"]], "closed (mmap.mmap attribute)": [[275, "mmap.mmap.closed"]], "find() (mmap.mmap method)": [[275, "mmap.mmap.find"]], "flush() (mmap.mmap method)": [[275, "mmap.mmap.flush"]], "madvise() (mmap.mmap method)": [[275, "mmap.mmap.madvise"]], "mmap": [[275, "module-mmap"]], "mmap (class in mmap)": [[275, "mmap.mmap"]], "move() (mmap.mmap method)": [[275, "mmap.mmap.move"]], "read() (mmap.mmap method)": [[275, "mmap.mmap.read"]], "read_byte() (mmap.mmap method)": [[275, "mmap.mmap.read_byte"]], "readline() (mmap.mmap method)": [[275, "mmap.mmap.readline"]], "resize() (mmap.mmap method)": [[275, "mmap.mmap.resize"]], "rfind() (mmap.mmap method)": [[275, "mmap.mmap.rfind"]], "seek() (mmap.mmap method)": [[275, "mmap.mmap.seek"]], "size() (mmap.mmap method)": [[275, "mmap.mmap.size"]], "tell() (mmap.mmap method)": [[275, "mmap.mmap.tell"]], "write() (mmap.mmap method)": [[275, "mmap.mmap.write"]], "write_byte() (mmap.mmap method)": [[275, "mmap.mmap.write_byte"]], "addpackagepath() (in module modulefinder)": [[276, "modulefinder.AddPackagePath"]], "modulefinder (class in modulefinder)": [[276, "modulefinder.ModuleFinder"]], "replacepackage() (in module modulefinder)": [[276, "modulefinder.ReplacePackage"]], "modulefinder": [[276, "module-modulefinder"]], "modules (modulefinder.modulefinder attribute)": [[276, "modulefinder.ModuleFinder.modules"]], "report() (modulefinder.modulefinder method)": [[276, "modulefinder.ModuleFinder.report"]], "run_script() (modulefinder.modulefinder method)": [[276, "modulefinder.ModuleFinder.run_script"]], "binary (class in msilib)": [[278, "msilib.Binary"]], "cab (class in msilib)": [[278, "msilib.CAB"]], "cleardata() (msilib.record method)": [[278, "msilib.Record.ClearData"]], "close() (msilib.database method)": [[278, "msilib.Database.Close"]], "close() (msilib.view method)": [[278, "msilib.View.Close"]], "commit() (msilib.database method)": [[278, "msilib.Database.Commit"]], "control (class in msilib)": [[278, "msilib.Control"]], "createrecord() (in module msilib)": [[278, "msilib.CreateRecord"]], "dialog (class in msilib)": [[278, "msilib.Dialog"]], "directory (class in msilib)": [[278, "msilib.Directory"]], "execute() (msilib.view method)": [[278, "msilib.View.Execute"]], "fcicreate() (in module msilib)": [[278, "msilib.FCICreate"]], "feature (class in msilib)": [[278, "msilib.Feature"]], "fetch() (msilib.view method)": [[278, "msilib.View.Fetch"]], "getcolumninfo() (msilib.view method)": [[278, "msilib.View.GetColumnInfo"]], "getfieldcount() (msilib.record method)": [[278, "msilib.Record.GetFieldCount"]], "getinteger() (msilib.record method)": [[278, "msilib.Record.GetInteger"]], "getproperty() (msilib.summaryinformation method)": [[278, "msilib.SummaryInformation.GetProperty"]], "getpropertycount() (msilib.summaryinformation method)": [[278, "msilib.SummaryInformation.GetPropertyCount"]], "getstring() (msilib.record method)": [[278, "msilib.Record.GetString"]], "getsummaryinformation() (msilib.database method)": [[278, "msilib.Database.GetSummaryInformation"]], "modify() (msilib.view method)": [[278, "msilib.View.Modify"]], "opendatabase() (in module msilib)": [[278, "msilib.OpenDatabase"]], "openview() (msilib.database method)": [[278, "msilib.Database.OpenView"]], "pep 594#msilib": [[278, "index-1"]], "persist() (msilib.summaryinformation method)": [[278, "msilib.SummaryInformation.Persist"]], "radiobuttongroup (class in msilib)": [[278, "msilib.RadioButtonGroup"]], "setinteger() (msilib.record method)": [[278, "msilib.Record.SetInteger"]], "setproperty() (msilib.summaryinformation method)": [[278, "msilib.SummaryInformation.SetProperty"]], "setstream() (msilib.record method)": [[278, "msilib.Record.SetStream"]], "setstring() (msilib.record method)": [[278, "msilib.Record.SetString"]], "uuidcreate() (in module msilib)": [[278, "msilib.UuidCreate"]], "add() (msilib.radiobuttongroup method)": [[278, "msilib.RadioButtonGroup.add"]], "add_data() (in module msilib)": [[278, "msilib.add_data"]], "add_file() (msilib.directory method)": [[278, "msilib.Directory.add_file"]], "add_stream() (in module msilib)": [[278, "msilib.add_stream"]], "add_tables() (in module msilib)": [[278, "msilib.add_tables"]], "append() (msilib.cab method)": [[278, "msilib.CAB.append"]], "bitmap() (msilib.dialog method)": [[278, "msilib.Dialog.bitmap"]], "checkbox() (msilib.dialog method)": [[278, "msilib.Dialog.checkbox"]], "commit() (msilib.cab method)": [[278, "msilib.CAB.commit"]], "condition() (msilib.control method)": [[278, "msilib.Control.condition"]], "control() (msilib.dialog method)": [[278, "msilib.Dialog.control"]], "event() (msilib.control method)": [[278, "msilib.Control.event"]], "gen_uuid() (in module msilib)": [[278, "msilib.gen_uuid"]], "glob() (msilib.directory method)": [[278, "msilib.Directory.glob"]], "init_database() (in module msilib)": [[278, "msilib.init_database"]], "line() (msilib.dialog method)": [[278, "msilib.Dialog.line"]], "mapping() (msilib.control method)": [[278, "msilib.Control.mapping"]], "msi": [[278, "index-0"]], "msilib": [[278, "module-msilib"]], "pushbutton() (msilib.dialog method)": [[278, "msilib.Dialog.pushbutton"]], "radiogroup() (msilib.dialog method)": [[278, "msilib.Dialog.radiogroup"]], "remove_pyc() (msilib.directory method)": [[278, "msilib.Directory.remove_pyc"]], "schema (in module msilib)": [[278, "msilib.schema"]], "sequence (in module msilib)": [[278, "msilib.sequence"]], "set_current() (msilib.feature method)": [[278, "msilib.Feature.set_current"]], "start_component() (msilib.directory method)": [[278, "msilib.Directory.start_component"]], "text (in module msilib)": [[278, "msilib.text"]], "text() (msilib.dialog method)": [[278, "msilib.Dialog.text"]], "lk_lock (in module msvcrt)": [[279, "msvcrt.LK_LOCK"]], "lk_nblck (in module msvcrt)": [[279, "msvcrt.LK_NBLCK"]], "lk_nbrlck (in module msvcrt)": [[279, "msvcrt.LK_NBRLCK"]], "lk_rlck (in module msvcrt)": [[279, "msvcrt.LK_RLCK"]], "lk_unlck (in module msvcrt)": [[279, "msvcrt.LK_UNLCK"]], "get_osfhandle() (in module msvcrt)": [[279, "msvcrt.get_osfhandle"]], "getch() (in module msvcrt)": [[279, "msvcrt.getch"]], "getche() (in module msvcrt)": [[279, "msvcrt.getche"]], "getwch() (in module msvcrt)": [[279, "msvcrt.getwch"]], "getwche() (in module msvcrt)": [[279, "msvcrt.getwche"]], "heapmin() (in module msvcrt)": [[279, "msvcrt.heapmin"]], "kbhit() (in module msvcrt)": [[279, "msvcrt.kbhit"]], "locking() (in module msvcrt)": [[279, "msvcrt.locking"]], "msvcrt": [[279, "module-msvcrt"]], "open_osfhandle() (in module msvcrt)": [[279, "msvcrt.open_osfhandle"]], "putch() (in module msvcrt)": [[279, "msvcrt.putch"]], "putwch() (in module msvcrt)": [[279, "msvcrt.putwch"]], "setmode() (in module msvcrt)": [[279, "msvcrt.setmode"]], "ungetch() (in module msvcrt)": [[279, "msvcrt.ungetch"]], "ungetwch() (in module msvcrt)": [[279, "msvcrt.ungetwch"]], "array() (in module multiprocessing)": [[280, "multiprocessing.Array"]], "array() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.Array"]], "array() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Array"]], "asyncresult (class in multiprocessing.pool)": [[280, "multiprocessing.pool.AsyncResult"]], "authenticationerror": [[280, "multiprocessing.AuthenticationError"]], "barrier (class in multiprocessing)": [[280, "multiprocessing.Barrier"]], "barrier() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Barrier"]], "basemanager (class in multiprocessing.managers)": [[280, "multiprocessing.managers.BaseManager"]], "baseproxy (class in multiprocessing.managers)": [[280, "multiprocessing.managers.BaseProxy"]], "boundedsemaphore (class in multiprocessing)": [[280, "multiprocessing.BoundedSemaphore"]], "boundedsemaphore() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.BoundedSemaphore"]], "buffertooshort": [[280, "multiprocessing.BufferTooShort"]], "client() (in module multiprocessing.connection)": [[280, "multiprocessing.connection.Client"]], "condition (class in multiprocessing)": [[280, "multiprocessing.Condition"]], "condition() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Condition"]], "connection (class in multiprocessing.connection)": [[280, "multiprocessing.connection.Connection"]], "event (class in multiprocessing)": [[280, "multiprocessing.Event"]], "event() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Event"]], "joinablequeue (class in multiprocessing)": [[280, "multiprocessing.JoinableQueue"]], "listener (class in multiprocessing.connection)": [[280, "multiprocessing.connection.Listener"]], "lock (class in multiprocessing)": [[280, "multiprocessing.Lock"]], "lock() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Lock"]], "namespace (class in multiprocessing.managers)": [[280, "multiprocessing.managers.Namespace"]], "namespace() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Namespace"]], "pipe() (in module multiprocessing)": [[280, "multiprocessing.Pipe"]], "pool (class in multiprocessing.pool)": [[280, "multiprocessing.pool.Pool"]], "process (class in multiprocessing)": [[280, "multiprocessing.Process"]], "processerror": [[280, "multiprocessing.ProcessError"]], "queue (class in multiprocessing)": [[280, "multiprocessing.Queue"]], "queue() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Queue"]], "rlock (class in multiprocessing)": [[280, "multiprocessing.RLock"]], "rlock() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.RLock"]], "rawarray() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.RawArray"]], "rawvalue() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.RawValue"]], "semaphore (class in multiprocessing)": [[280, "multiprocessing.Semaphore"]], "semaphore() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Semaphore"]], "simplequeue (class in multiprocessing)": [[280, "multiprocessing.SimpleQueue"]], "syncmanager (class in multiprocessing.managers)": [[280, "multiprocessing.managers.SyncManager"]], "threadpool (class in multiprocessing.pool)": [[280, "multiprocessing.pool.ThreadPool"]], "value() (in module multiprocessing)": [[280, "multiprocessing.Value"]], "value() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.Value"]], "value() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.Value"]], "__repr__() (multiprocessing.managers.baseproxy method)": [[280, "multiprocessing.managers.BaseProxy.__repr__"]], "__str__() (multiprocessing.managers.baseproxy method)": [[280, "multiprocessing.managers.BaseProxy.__str__"]], "_callmethod() (multiprocessing.managers.baseproxy method)": [[280, "multiprocessing.managers.BaseProxy._callmethod"]], "_getvalue() (multiprocessing.managers.baseproxy method)": [[280, "multiprocessing.managers.BaseProxy._getvalue"]], "accept() (multiprocessing.connection.listener method)": [[280, "multiprocessing.connection.Listener.accept"]], "acquire() (multiprocessing.lock method)": [[280, "multiprocessing.Lock.acquire"]], "acquire() (multiprocessing.rlock method)": [[280, "multiprocessing.RLock.acquire"]], "active_children() (in module multiprocessing)": [[280, "multiprocessing.active_children"]], "address (multiprocessing.connection.listener attribute)": [[280, "multiprocessing.connection.Listener.address"]], "address (multiprocessing.managers.basemanager attribute)": [[280, "multiprocessing.managers.BaseManager.address"]], "answer_challenge() (in module multiprocessing.connection)": [[280, "multiprocessing.connection.answer_challenge"]], "apply() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.apply"]], "apply_async() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.apply_async"]], "authkey (multiprocessing.process attribute)": [[280, "multiprocessing.Process.authkey"]], "cancel_join_thread() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.cancel_join_thread"]], "close() (multiprocessing.process method)": [[280, "multiprocessing.Process.close"]], "close() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.close"]], "close() (multiprocessing.simplequeue method)": [[280, "multiprocessing.SimpleQueue.close"]], "close() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.close"]], "close() (multiprocessing.connection.listener method)": [[280, "multiprocessing.connection.Listener.close"]], "close() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.close"]], "connect() (multiprocessing.managers.basemanager method)": [[280, "multiprocessing.managers.BaseManager.connect"]], "copy() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.copy"]], "cpu_count() (in module multiprocessing)": [[280, "multiprocessing.cpu_count"]], "current_process() (in module multiprocessing)": [[280, "multiprocessing.current_process"]], "daemon (multiprocessing.process attribute)": [[280, "multiprocessing.Process.daemon"]], "deliver_challenge() (in module multiprocessing.connection)": [[280, "multiprocessing.connection.deliver_challenge"]], "dict() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.dict"]], "empty() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.empty"]], "empty() (multiprocessing.simplequeue method)": [[280, "multiprocessing.SimpleQueue.empty"]], "exitcode (multiprocessing.process attribute)": [[280, "multiprocessing.Process.exitcode"]], "fileno() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.fileno"]], "freeze_support() (in module multiprocessing)": [[280, "multiprocessing.freeze_support"]], "full() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.full"]], "get() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.get"]], "get() (multiprocessing.simplequeue method)": [[280, "multiprocessing.SimpleQueue.get"]], "get() (multiprocessing.pool.asyncresult method)": [[280, "multiprocessing.pool.AsyncResult.get"]], "get_all_start_methods() (in module multiprocessing)": [[280, "multiprocessing.get_all_start_methods"]], "get_context() (in module multiprocessing)": [[280, "multiprocessing.get_context"]], "get_logger() (in module multiprocessing)": [[280, "multiprocessing.get_logger"]], "get_nowait() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.get_nowait"]], "get_server() (multiprocessing.managers.basemanager method)": [[280, "multiprocessing.managers.BaseManager.get_server"]], "get_start_method() (in module multiprocessing)": [[280, "multiprocessing.get_start_method"]], "imap() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.imap"]], "imap_unordered() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.imap_unordered"]], "is_alive() (multiprocessing.process method)": [[280, "multiprocessing.Process.is_alive"]], "join() (multiprocessing.joinablequeue method)": [[280, "multiprocessing.JoinableQueue.join"]], "join() (multiprocessing.process method)": [[280, "multiprocessing.Process.join"]], "join() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.join"]], "join_thread() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.join_thread"]], "kill() (multiprocessing.process method)": [[280, "multiprocessing.Process.kill"]], "last_accepted (multiprocessing.connection.listener attribute)": [[280, "multiprocessing.connection.Listener.last_accepted"]], "list() (multiprocessing.managers.syncmanager method)": [[280, "multiprocessing.managers.SyncManager.list"]], "log_to_stderr() (in module multiprocessing)": [[280, "multiprocessing.log_to_stderr"]], "map() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.map"]], "map_async() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.map_async"]], "multiprocessing": [[280, "module-multiprocessing"]], "multiprocessing.manager()": [[280, "multiprocessing.Manager"]], "multiprocessing.connection": [[280, "module-multiprocessing.connection"]], "multiprocessing.dummy": [[280, "module-multiprocessing.dummy"]], "multiprocessing.managers": [[280, "module-multiprocessing.managers"]], "multiprocessing.pool": [[280, "module-multiprocessing.pool"]], "multiprocessing.sharedctypes": [[280, "module-multiprocessing.sharedctypes"]], "name (multiprocessing.process attribute)": [[280, "multiprocessing.Process.name"]], "parent_process() (in module multiprocessing)": [[280, "multiprocessing.parent_process"]], "pid (multiprocessing.process attribute)": [[280, "multiprocessing.Process.pid"]], "poll() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.poll"]], "put() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.put"]], "put() (multiprocessing.simplequeue method)": [[280, "multiprocessing.SimpleQueue.put"]], "put_nowait() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.put_nowait"]], "qsize() (multiprocessing.queue method)": [[280, "multiprocessing.Queue.qsize"]], "ready() (multiprocessing.pool.asyncresult method)": [[280, "multiprocessing.pool.AsyncResult.ready"]], "recv() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.recv"]], "recv_bytes() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.recv_bytes"]], "recv_bytes_into() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.recv_bytes_into"]], "register() (multiprocessing.managers.basemanager method)": [[280, "multiprocessing.managers.BaseManager.register"]], "release() (multiprocessing.lock method)": [[280, "multiprocessing.Lock.release"]], "release() (multiprocessing.rlock method)": [[280, "multiprocessing.RLock.release"]], "run() (multiprocessing.process method)": [[280, "multiprocessing.Process.run"]], "send() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.send"]], "send_bytes() (multiprocessing.connection.connection method)": [[280, "multiprocessing.connection.Connection.send_bytes"]], "sentinel (multiprocessing.process attribute)": [[280, "multiprocessing.Process.sentinel"]], "set_executable() (in module multiprocessing)": [[280, "multiprocessing.set_executable"]], "set_forkserver_preload() (in module multiprocessing)": [[280, "multiprocessing.set_forkserver_preload"]], "set_start_method() (in module multiprocessing)": [[280, "multiprocessing.set_start_method"]], "shutdown() (multiprocessing.managers.basemanager method)": [[280, "multiprocessing.managers.BaseManager.shutdown"]], "starmap() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.starmap"]], "starmap_async() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.starmap_async"]], "start() (multiprocessing.process method)": [[280, "multiprocessing.Process.start"]], "start() (multiprocessing.managers.basemanager method)": [[280, "multiprocessing.managers.BaseManager.start"]], "successful() (multiprocessing.pool.asyncresult method)": [[280, "multiprocessing.pool.AsyncResult.successful"]], "synchronized() (in module multiprocessing.sharedctypes)": [[280, "multiprocessing.sharedctypes.synchronized"]], "task_done() (multiprocessing.joinablequeue method)": [[280, "multiprocessing.JoinableQueue.task_done"]], "terminate() (multiprocessing.process method)": [[280, "multiprocessing.Process.terminate"]], "terminate() (multiprocessing.pool.pool method)": [[280, "multiprocessing.pool.Pool.terminate"]], "wait() (in module multiprocessing.connection)": [[280, "multiprocessing.connection.wait"]], "wait() (multiprocessing.pool.asyncresult method)": [[280, "multiprocessing.pool.AsyncResult.wait"]], "named shared memory": [[281, "index-0"]], "posix shared memory": [[281, "index-0"]], "shareablelist (class in multiprocessing.shared_memory)": [[281, "multiprocessing.shared_memory.ShareableList"]], "shareablelist() (multiprocessing.managers.sharedmemorymanager method)": [[281, "multiprocessing.managers.SharedMemoryManager.ShareableList"]], "shared memory": [[281, "index-0"]], "sharedmemory (class in multiprocessing.shared_memory)": [[281, "multiprocessing.shared_memory.SharedMemory"]], "sharedmemory() (multiprocessing.managers.sharedmemorymanager method)": [[281, "multiprocessing.managers.SharedMemoryManager.SharedMemory"]], "sharedmemorymanager (class in multiprocessing.managers)": [[281, "multiprocessing.managers.SharedMemoryManager"]], "buf (multiprocessing.shared_memory.sharedmemory attribute)": [[281, "multiprocessing.shared_memory.SharedMemory.buf"]], "close() (multiprocessing.shared_memory.sharedmemory method)": [[281, "multiprocessing.shared_memory.SharedMemory.close"]], "count() (multiprocessing.shared_memory.shareablelist method)": [[281, "multiprocessing.shared_memory.ShareableList.count"]], "format (multiprocessing.shared_memory.shareablelist attribute)": [[281, "multiprocessing.shared_memory.ShareableList.format"]], "index() (multiprocessing.shared_memory.shareablelist method)": [[281, "multiprocessing.shared_memory.ShareableList.index"]], "multiprocessing.shared_memory": [[281, "module-multiprocessing.shared_memory"]], "name (multiprocessing.shared_memory.sharedmemory attribute)": [[281, "multiprocessing.shared_memory.SharedMemory.name"]], "shm (multiprocessing.shared_memory.shareablelist attribute)": [[281, "multiprocessing.shared_memory.ShareableList.shm"]], "size (multiprocessing.shared_memory.sharedmemory attribute)": [[281, "multiprocessing.shared_memory.SharedMemory.size"]], "unlink() (multiprocessing.shared_memory.sharedmemory method)": [[281, "multiprocessing.shared_memory.SharedMemory.unlink"]], "netrcparseerror": [[283, "netrc.NetrcParseError"]], "__repr__() (netrc.netrc method)": [[283, "netrc.netrc.__repr__"]], "authenticators() (netrc.netrc method)": [[283, "netrc.netrc.authenticators"]], "filename (netrc.netrcparseerror attribute)": [[283, "netrc.NetrcParseError.filename"]], "hosts (netrc.netrc attribute)": [[283, "netrc.netrc.hosts"]], "lineno (netrc.netrcparseerror attribute)": [[283, "netrc.NetrcParseError.lineno"]], "macros (netrc.netrc attribute)": [[283, "netrc.netrc.macros"]], "msg (netrc.netrcparseerror attribute)": [[283, "netrc.NetrcParseError.msg"]], "netrc": [[283, "module-netrc"]], "netrc (class in netrc)": [[283, "netrc.netrc"]], "pep 594#nis": [[284, "index-0"]], "cat() (in module nis)": [[284, "nis.cat"]], "get_default_domain() (in module nis)": [[284, "nis.get_default_domain"]], "maps() (in module nis)": [[284, "nis.maps"]], "match() (in module nis)": [[284, "nis.match"]], "nis": [[284, "module-nis"]], "nntp": [[285, "index-0"]], "nntp (class in nntplib)": [[285, "nntplib.NNTP"]], "nntpdataerror": [[285, "nntplib.NNTPDataError"]], "nntperror": [[285, "nntplib.NNTPError"]], "nntppermanenterror": [[285, "nntplib.NNTPPermanentError"]], "nntpprotocolerror": [[285, "nntplib.NNTPProtocolError"]], "nntpreplyerror": [[285, "nntplib.NNTPReplyError"]], "nntptemporaryerror": [[285, "nntplib.NNTPTemporaryError"]], "nntp_ssl (class in nntplib)": [[285, "nntplib.NNTP_SSL"]], "network news transfer protocol": [[285, "index-0"]], "pep 594": [[285, "index-1"], [470, "index-2"], [470, "index-31"], [471, "index-31"], [471, "index-32"], [471, "index-35"]], "rfc 2980": [[285, "index-4"], [285, "index-9"]], "rfc 3977": [[285, "index-10"], [285, "index-2"], [285, "index-6"], [285, "index-7"], [285, "index-8"]], "rfc 4642": [[285, "index-5"]], "rfc 977": [[285, "index-3"]], "article() (nntplib.nntp method)": [[285, "nntplib.NNTP.article"]], "body() (nntplib.nntp method)": [[285, "nntplib.NNTP.body"]], "date() (nntplib.nntp method)": [[285, "nntplib.NNTP.date"]], "decode_header() (in module nntplib)": [[285, "nntplib.decode_header"]], "description() (nntplib.nntp method)": [[285, "nntplib.NNTP.description"]], "descriptions() (nntplib.nntp method)": [[285, "nntplib.NNTP.descriptions"]], "getcapabilities() (nntplib.nntp method)": [[285, "nntplib.NNTP.getcapabilities"]], "getwelcome() (nntplib.nntp method)": [[285, "nntplib.NNTP.getwelcome"]], "group() (nntplib.nntp method)": [[285, "nntplib.NNTP.group"]], "head() (nntplib.nntp method)": [[285, "nntplib.NNTP.head"]], "help() (nntplib.nntp method)": [[285, "nntplib.NNTP.help"]], "ihave() (nntplib.nntp method)": [[285, "nntplib.NNTP.ihave"]], "last() (nntplib.nntp method)": [[285, "nntplib.NNTP.last"]], "list() (nntplib.nntp method)": [[285, "nntplib.NNTP.list"]], "login() (nntplib.nntp method)": [[285, "nntplib.NNTP.login"]], "newgroups() (nntplib.nntp method)": [[285, "nntplib.NNTP.newgroups"]], "newnews() (nntplib.nntp method)": [[285, "nntplib.NNTP.newnews"]], "next() (nntplib.nntp method)": [[285, "nntplib.NNTP.next"]], "nntp_implementation (nntplib.nntp attribute)": [[285, "nntplib.NNTP.nntp_implementation"]], "nntp_version (nntplib.nntp attribute)": [[285, "nntplib.NNTP.nntp_version"]], "nntplib": [[285, "module-nntplib"]], "over() (nntplib.nntp method)": [[285, "nntplib.NNTP.over"]], "post() (nntplib.nntp method)": [[285, "nntplib.NNTP.post"]], "quit() (nntplib.nntp method)": [[285, "nntplib.NNTP.quit"]], "response (nntplib.nntperror attribute)": [[285, "nntplib.NNTPError.response"]], "set_debuglevel() (nntplib.nntp method)": [[285, "nntplib.NNTP.set_debuglevel"]], "slave() (nntplib.nntp method)": [[285, "nntplib.NNTP.slave"]], "starttls() (nntplib.nntp method)": [[285, "nntplib.NNTP.starttls"]], "stat() (nntplib.nntp method)": [[285, "nntplib.NNTP.stat"]], "xhdr() (nntplib.nntp method)": [[285, "nntplib.NNTP.xhdr"]], "xover() (nntplib.nntp method)": [[285, "nntplib.NNTP.xover"]], "complex (class in numbers)": [[286, "numbers.Complex"]], "integral (class in numbers)": [[286, "numbers.Integral"]], "number (class in numbers)": [[286, "numbers.Number"]], "rational (class in numbers)": [[286, "numbers.Rational"]], "real (class in numbers)": [[286, "numbers.Real"]], "conjugate() (numbers.complex method)": [[286, "numbers.Complex.conjugate"]], "denominator (numbers.rational attribute)": [[286, "numbers.Rational.denominator"]], "imag (numbers.complex attribute)": [[286, "numbers.Complex.imag"]], "numbers": [[286, "module-numbers"]], "numerator (numbers.rational attribute)": [[286, "numbers.Rational.numerator"]], "real (numbers.complex attribute)": [[286, "numbers.Complex.real"]], "__abs__() (in module operator)": [[288, "operator.__abs__"]], "__add__() (in module operator)": [[288, "operator.__add__"]], "__and__() (in module operator)": [[288, "operator.__and__"]], "__call__() (in module operator)": [[288, "operator.__call__"]], "__concat__() (in module operator)": [[288, "operator.__concat__"]], "__contains__() (in module operator)": [[288, "operator.__contains__"]], "__delitem__() (in module operator)": [[288, "operator.__delitem__"]], "__eq__() (in module operator)": [[288, "operator.__eq__"]], "__floordiv__() (in module operator)": [[288, "operator.__floordiv__"]], "__ge__() (in module operator)": [[288, "operator.__ge__"]], "__getitem__() (in module operator)": [[288, "operator.__getitem__"]], "__gt__() (in module operator)": [[288, "operator.__gt__"]], "__iadd__() (in module operator)": [[288, "operator.__iadd__"]], "__iand__() (in module operator)": [[288, "operator.__iand__"]], "__iconcat__() (in module operator)": [[288, "operator.__iconcat__"]], "__ifloordiv__() (in module operator)": [[288, "operator.__ifloordiv__"]], "__ilshift__() (in module operator)": [[288, "operator.__ilshift__"]], "__imatmul__() (in module operator)": [[288, "operator.__imatmul__"]], "__imod__() (in module operator)": [[288, "operator.__imod__"]], "__imul__() (in module operator)": [[288, "operator.__imul__"]], "__index__() (in module operator)": [[288, "operator.__index__"]], "__inv__() (in module operator)": [[288, "operator.__inv__"]], "__invert__() (in module operator)": [[288, "operator.__invert__"]], "__ior__() (in module operator)": [[288, "operator.__ior__"]], "__ipow__() (in module operator)": [[288, "operator.__ipow__"]], "__irshift__() (in module operator)": [[288, "operator.__irshift__"]], "__isub__() (in module operator)": [[288, "operator.__isub__"]], "__itruediv__() (in module operator)": [[288, "operator.__itruediv__"]], "__ixor__() (in module operator)": [[288, "operator.__ixor__"]], "__le__() (in module operator)": [[288, "operator.__le__"]], "__lshift__() (in module operator)": [[288, "operator.__lshift__"]], "__lt__() (in module operator)": [[288, "operator.__lt__"]], "__matmul__() (in module operator)": [[288, "operator.__matmul__"]], "__mod__() (in module operator)": [[288, "operator.__mod__"]], "__mul__() (in module operator)": [[288, "operator.__mul__"]], "__ne__() (in module operator)": [[288, "operator.__ne__"]], "__neg__() (in module operator)": [[288, "operator.__neg__"]], "__not__() (in module operator)": [[288, "operator.__not__"]], "__or__() (in module operator)": [[288, "operator.__or__"]], "__pos__() (in module operator)": [[288, "operator.__pos__"]], "__pow__() (in module operator)": [[288, "operator.__pow__"]], "__rshift__() (in module operator)": [[288, "operator.__rshift__"]], "__setitem__() (in module operator)": [[288, "operator.__setitem__"]], "__sub__() (in module operator)": [[288, "operator.__sub__"]], "__truediv__() (in module operator)": [[288, "operator.__truediv__"]], "__xor__() (in module operator)": [[288, "operator.__xor__"]], "abs() (in module operator)": [[288, "operator.abs"]], "add() (in module operator)": [[288, "operator.add"]], "and_() (in module operator)": [[288, "operator.and_"]], "attrgetter() (in module operator)": [[288, "operator.attrgetter"]], "call() (in module operator)": [[288, "operator.call"]], "concat() (in module operator)": [[288, "operator.concat"]], "contains() (in module operator)": [[288, "operator.contains"]], "countof() (in module operator)": [[288, "operator.countOf"]], "delitem() (in module operator)": [[288, "operator.delitem"]], "eq() (in module operator)": [[288, "operator.eq"]], "floordiv() (in module operator)": [[288, "operator.floordiv"]], "ge() (in module operator)": [[288, "operator.ge"]], "getitem() (in module operator)": [[288, "operator.getitem"]], "gt() (in module operator)": [[288, "operator.gt"]], "iadd() (in module operator)": [[288, "operator.iadd"]], "iand() (in module operator)": [[288, "operator.iand"]], "iconcat() (in module operator)": [[288, "operator.iconcat"]], "ifloordiv() (in module operator)": [[288, "operator.ifloordiv"]], "ilshift() (in module operator)": [[288, "operator.ilshift"]], "imatmul() (in module operator)": [[288, "operator.imatmul"]], "imod() (in module operator)": [[288, "operator.imod"]], "imul() (in module operator)": [[288, "operator.imul"]], "index() (in module operator)": [[288, "operator.index"]], "indexof() (in module operator)": [[288, "operator.indexOf"]], "inv() (in module operator)": [[288, "operator.inv"]], "invert() (in module operator)": [[288, "operator.invert"]], "ior() (in module operator)": [[288, "operator.ior"]], "ipow() (in module operator)": [[288, "operator.ipow"]], "irshift() (in module operator)": [[288, "operator.irshift"]], "is_() (in module operator)": [[288, "operator.is_"]], "is_not() (in module operator)": [[288, "operator.is_not"]], "isub() (in module operator)": [[288, "operator.isub"]], "itemgetter() (in module operator)": [[288, "operator.itemgetter"]], "itruediv() (in module operator)": [[288, "operator.itruediv"]], "ixor() (in module operator)": [[288, "operator.ixor"]], "le() (in module operator)": [[288, "operator.le"]], "length_hint() (in module operator)": [[288, "operator.length_hint"]], "lshift() (in module operator)": [[288, "operator.lshift"]], "lt() (in module operator)": [[288, "operator.lt"]], "matmul() (in module operator)": [[288, "operator.matmul"]], "methodcaller() (in module operator)": [[288, "operator.methodcaller"]], "mod() (in module operator)": [[288, "operator.mod"]], "mul() (in module operator)": [[288, "operator.mul"]], "ne() (in module operator)": [[288, "operator.ne"]], "neg() (in module operator)": [[288, "operator.neg"]], "not_() (in module operator)": [[288, "operator.not_"]], "operator": [[288, "module-operator"], [341, "index-10"], [341, "index-13"], [341, "index-16"], [341, "index-20"], [341, "index-4"], [341, "index-6"], [341, "index-7"], [425, "index-71"], [427, "index-58"], [427, "index-60"], [427, "index-61"], [427, "index-62"], [427, "index-65"], [427, "index-66"], [427, "index-67"], [427, "index-68"], [427, "index-69"], [427, "index-70"], [427, "index-71"], [427, "index-74"], [427, "index-75"], [427, "index-76"], [427, "index-77"], [427, "index-80"], [427, "index-81"], [427, "index-83"], [427, "index-84"], [427, "index-85"], [427, "index-88"], [427, "index-97"]], "or_() (in module operator)": [[288, "operator.or_"]], "pos() (in module operator)": [[288, "operator.pos"]], "pow() (in module operator)": [[288, "operator.pow"]], "rshift() (in module operator)": [[288, "operator.rshift"]], "setitem() (in module operator)": [[288, "operator.setitem"]], "sub() (in module operator)": [[288, "operator.sub"]], "truediv() (in module operator)": [[288, "operator.truediv"]], "truth() (in module operator)": [[288, "operator.truth"]], "xor() (in module operator)": [[288, "operator.xor"]], "actions (optparse.option attribute)": [[289, "optparse.Option.ACTIONS"]], "always_typed_actions (optparse.option attribute)": [[289, "optparse.Option.ALWAYS_TYPED_ACTIONS"]], "ambiguousoptionerror": [[289, "optparse.AmbiguousOptionError"]], "badoptionerror": [[289, "optparse.BadOptionError"]], "option (class in optparse)": [[289, "optparse.Option"]], "optionconflicterror": [[289, "optparse.OptionConflictError"]], "optionerror": [[289, "optparse.OptionError"]], "optiongroup (class in optparse)": [[289, "optparse.OptionGroup"]], "optionparser (class in optparse)": [[289, "optparse.OptionParser"]], "optionvalueerror": [[289, "optparse.OptionValueError"]], "store_actions (optparse.option attribute)": [[289, "optparse.Option.STORE_ACTIONS"]], "typed_actions (optparse.option attribute)": [[289, "optparse.Option.TYPED_ACTIONS"]], "types (optparse.option attribute)": [[289, "optparse.Option.TYPES"]], "type_checker (optparse.option attribute)": [[289, "optparse.Option.TYPE_CHECKER"]], "values (class in optparse)": [[289, "optparse.Values"]], "action (optparse.option attribute)": [[289, "optparse.Option.action"]], "add_option() (optparse.optionparser method)": [[289, "optparse.OptionParser.add_option"]], "callback (optparse.option attribute)": [[289, "optparse.Option.callback"]], "callback_args (optparse.option attribute)": [[289, "optparse.Option.callback_args"]], "callback_kwargs (optparse.option attribute)": [[289, "optparse.Option.callback_kwargs"]], "choices (optparse.option attribute)": [[289, "optparse.Option.choices"]], "const (optparse.option attribute)": [[289, "optparse.Option.const"]], "default (optparse.option attribute)": [[289, "optparse.Option.default"]], "dest (optparse.option attribute)": [[289, "optparse.Option.dest"]], "disable_interspersed_args() (optparse.optionparser method)": [[289, "optparse.OptionParser.disable_interspersed_args"]], "enable_interspersed_args() (optparse.optionparser method)": [[289, "optparse.OptionParser.enable_interspersed_args"]], "get_option() (optparse.optionparser method)": [[289, "optparse.OptionParser.get_option"]], "get_option_group() (optparse.optionparser method)": [[289, "optparse.OptionParser.get_option_group"]], "get_usage() (optparse.optionparser method)": [[289, "optparse.OptionParser.get_usage"]], "get_version() (optparse.optionparser method)": [[289, "optparse.OptionParser.get_version"]], "has_option() (optparse.optionparser method)": [[289, "optparse.OptionParser.has_option"]], "help (optparse.option attribute)": [[289, "optparse.Option.help"]], "metavar (optparse.option attribute)": [[289, "optparse.Option.metavar"]], "nargs (optparse.option attribute)": [[289, "optparse.Option.nargs"]], "optparse": [[289, "module-optparse"]], "parse_args() (optparse.optionparser method)": [[289, "optparse.OptionParser.parse_args"]], "print_usage() (optparse.optionparser method)": [[289, "optparse.OptionParser.print_usage"]], "print_version() (optparse.optionparser method)": [[289, "optparse.OptionParser.print_version"]], "remove_option() (optparse.optionparser method)": [[289, "optparse.OptionParser.remove_option"]], "set_defaults() (optparse.optionparser method)": [[289, "optparse.OptionParser.set_defaults"]], "set_usage() (optparse.optionparser method)": [[289, "optparse.OptionParser.set_usage"]], "type (optparse.option attribute)": [[289, "optparse.Option.type"]], "..": [[290, "index-46"]], "/ (slash)": [[290, "index-47"], [290, "index-49"], [341, "index-13"], [424, "index-32"], [427, "index-67"]], ": (colon)": [[290, "index-51"], [337, "index-7"], [342, "index-2"], [424, "index-16"], [424, "index-18"], [424, "index-28"], [424, "index-3"], [424, "index-34"], [424, "index-4"], [424, "index-42"], [424, "index-6"], [424, "index-9"], [427, "index-17"], [427, "index-44"], [427, "index-90"], [432, "index-25"], [433, "index-15"], [438, "index-6"]], "; (semicolon)": [[290, "index-51"], [424, "index-1"]], "cld_continued (in module os)": [[290, "os.CLD_CONTINUED"]], "cld_dumped (in module os)": [[290, "os.CLD_DUMPED"]], "cld_exited (in module os)": [[290, "os.CLD_EXITED"]], "cld_killed (in module os)": [[290, "os.CLD_KILLED"]], "cld_stopped (in module os)": [[290, "os.CLD_STOPPED"]], "cld_trapped (in module os)": [[290, "os.CLD_TRAPPED"]], "clone_files (in module os)": [[290, "os.CLONE_FILES"]], "clone_fs (in module os)": [[290, "os.CLONE_FS"]], "clone_newcgroup (in module os)": [[290, "os.CLONE_NEWCGROUP"]], "clone_newipc (in module os)": [[290, "os.CLONE_NEWIPC"]], "clone_newnet (in module os)": [[290, "os.CLONE_NEWNET"]], "clone_newns (in module os)": [[290, "os.CLONE_NEWNS"]], "clone_newpid (in module os)": [[290, "os.CLONE_NEWPID"]], "clone_newtime (in module os)": [[290, "os.CLONE_NEWTIME"]], "clone_newuser (in module os)": [[290, "os.CLONE_NEWUSER"]], "clone_newuts (in module os)": [[290, "os.CLONE_NEWUTS"]], "clone_sighand (in module os)": [[290, "os.CLONE_SIGHAND"]], "clone_sysvsem (in module os)": [[290, "os.CLONE_SYSVSEM"]], "clone_thread (in module os)": [[290, "os.CLONE_THREAD"]], "clone_vm (in module os)": [[290, "os.CLONE_VM"]], "comspec": [[290, "index-43"], [345, "index-3"]], "direntry (class in os)": [[290, "os.DirEntry"]], "efd_cloexec (in module os)": [[290, "os.EFD_CLOEXEC"]], "efd_nonblock (in module os)": [[290, "os.EFD_NONBLOCK"]], "efd_semaphore (in module os)": [[290, "os.EFD_SEMAPHORE"]], "ex_cantcreat (in module os)": [[290, "os.EX_CANTCREAT"]], "ex_config (in module os)": [[290, "os.EX_CONFIG"]], "ex_dataerr (in module os)": [[290, "os.EX_DATAERR"]], "ex_ioerr (in module os)": [[290, "os.EX_IOERR"]], "ex_nohost (in module os)": [[290, "os.EX_NOHOST"]], "ex_noinput (in module os)": [[290, "os.EX_NOINPUT"]], "ex_noperm (in module os)": [[290, "os.EX_NOPERM"]], "ex_notfound (in module os)": [[290, "os.EX_NOTFOUND"]], "ex_nouser (in module os)": [[290, "os.EX_NOUSER"]], "ex_ok (in module os)": [[290, "os.EX_OK"]], "ex_oserr (in module os)": [[290, "os.EX_OSERR"]], "ex_osfile (in module os)": [[290, "os.EX_OSFILE"]], "ex_protocol (in module os)": [[290, "os.EX_PROTOCOL"]], "ex_software (in module os)": [[290, "os.EX_SOFTWARE"]], "ex_tempfail (in module os)": [[290, "os.EX_TEMPFAIL"]], "ex_unavailable (in module os)": [[290, "os.EX_UNAVAILABLE"]], "ex_usage (in module os)": [[290, "os.EX_USAGE"]], "f_lock (in module os)": [[290, "os.F_LOCK"]], "f_ok (in module os)": [[290, "os.F_OK"]], "f_test (in module os)": [[290, "os.F_TEST"]], "f_tlock (in module os)": [[290, "os.F_TLOCK"]], "f_ulock (in module os)": [[290, "os.F_ULOCK"]], "grnd_nonblock (in module os)": [[290, "os.GRND_NONBLOCK"]], "grnd_random (in module os)": [[290, "os.GRND_RANDOM"]], "mfd_allow_sealing (in module os)": [[290, "os.MFD_ALLOW_SEALING"]], "mfd_cloexec (in module os)": [[290, "os.MFD_CLOEXEC"]], "mfd_hugetlb (in module os)": [[290, "os.MFD_HUGETLB"]], "mfd_huge_16gb (in module os)": [[290, "os.MFD_HUGE_16GB"]], "mfd_huge_16mb (in module os)": [[290, "os.MFD_HUGE_16MB"]], "mfd_huge_1gb (in module os)": [[290, "os.MFD_HUGE_1GB"]], "mfd_huge_1mb (in module os)": [[290, "os.MFD_HUGE_1MB"]], "mfd_huge_256mb (in module os)": [[290, "os.MFD_HUGE_256MB"]], "mfd_huge_2gb (in module os)": [[290, "os.MFD_HUGE_2GB"]], "mfd_huge_2mb (in module os)": [[290, "os.MFD_HUGE_2MB"]], "mfd_huge_32mb (in module os)": [[290, "os.MFD_HUGE_32MB"]], "mfd_huge_512kb (in module os)": [[290, "os.MFD_HUGE_512KB"]], "mfd_huge_512mb (in module os)": [[290, "os.MFD_HUGE_512MB"]], "mfd_huge_64kb (in module os)": [[290, "os.MFD_HUGE_64KB"]], "mfd_huge_8mb (in module os)": [[290, "os.MFD_HUGE_8MB"]], "mfd_huge_mask (in module os)": [[290, "os.MFD_HUGE_MASK"]], "mfd_huge_shift (in module os)": [[290, "os.MFD_HUGE_SHIFT"]], "o_append (in module os)": [[290, "os.O_APPEND"]], "o_async (in module os)": [[290, "os.O_ASYNC"]], "o_binary (in module os)": [[290, "os.O_BINARY"]], "o_cloexec (in module os)": [[290, "os.O_CLOEXEC"]], "o_creat (in module os)": [[290, "os.O_CREAT"]], "o_direct (in module os)": [[290, "os.O_DIRECT"]], "o_directory (in module os)": [[290, "os.O_DIRECTORY"]], "o_dsync (in module os)": [[290, "os.O_DSYNC"]], "o_evtonly (in module os)": [[290, "os.O_EVTONLY"]], "o_excl (in module os)": [[290, "os.O_EXCL"]], "o_exlock (in module os)": [[290, "os.O_EXLOCK"]], "o_fsync (in module os)": [[290, "os.O_FSYNC"]], "o_ndelay (in module os)": [[290, "os.O_NDELAY"]], "o_noatime (in module os)": [[290, "os.O_NOATIME"]], "o_noctty (in module os)": [[290, "os.O_NOCTTY"]], "o_nofollow (in module os)": [[290, "os.O_NOFOLLOW"]], "o_nofollow_any (in module os)": [[290, "os.O_NOFOLLOW_ANY"]], "o_noinherit (in module os)": [[290, "os.O_NOINHERIT"]], "o_nonblock (in module os)": [[290, "os.O_NONBLOCK"]], "o_path (in module os)": [[290, "os.O_PATH"]], "o_random (in module os)": [[290, "os.O_RANDOM"]], "o_rdonly (in module os)": [[290, "os.O_RDONLY"]], "o_rdwr (in module os)": [[290, "os.O_RDWR"]], "o_rsync (in module os)": [[290, "os.O_RSYNC"]], "o_sequential (in module os)": [[290, "os.O_SEQUENTIAL"]], "o_shlock (in module os)": [[290, "os.O_SHLOCK"]], "o_short_lived (in module os)": [[290, "os.O_SHORT_LIVED"]], "o_symlink (in module os)": [[290, "os.O_SYMLINK"]], "o_sync (in module os)": [[290, "os.O_SYNC"]], "o_temporary (in module os)": [[290, "os.O_TEMPORARY"]], "o_text (in module os)": [[290, "os.O_TEXT"]], "o_tmpfile (in module os)": [[290, "os.O_TMPFILE"]], "o_trunc (in module os)": [[290, "os.O_TRUNC"]], "o_wronly (in module os)": [[290, "os.O_WRONLY"]], "pep 524": [[290, "index-53"], [476, "index-1"], [476, "index-31"], [476, "index-32"]], "pidfd_nonblock (in module os)": [[290, "os.PIDFD_NONBLOCK"]], "posix_fadv_dontneed (in module os)": [[290, "os.POSIX_FADV_DONTNEED"]], "posix_fadv_noreuse (in module os)": [[290, "os.POSIX_FADV_NOREUSE"]], "posix_fadv_normal (in module os)": [[290, "os.POSIX_FADV_NORMAL"]], "posix_fadv_random (in module os)": [[290, "os.POSIX_FADV_RANDOM"]], "posix_fadv_sequential (in module os)": [[290, "os.POSIX_FADV_SEQUENTIAL"]], "posix_fadv_willneed (in module os)": [[290, "os.POSIX_FADV_WILLNEED"]], "posix_spawn_close (in module os)": [[290, "os.POSIX_SPAWN_CLOSE"]], "posix_spawn_dup2 (in module os)": [[290, "os.POSIX_SPAWN_DUP2"]], "posix_spawn_open (in module os)": [[290, "os.POSIX_SPAWN_OPEN"]], "prio_darwin_bg (in module os)": [[290, "os.PRIO_DARWIN_BG"]], "prio_darwin_nonui (in module os)": [[290, "os.PRIO_DARWIN_NONUI"]], "prio_darwin_process (in module os)": [[290, "os.PRIO_DARWIN_PROCESS"]], "prio_darwin_thread (in module os)": [[290, "os.PRIO_DARWIN_THREAD"]], "prio_pgrp (in module os)": [[290, "os.PRIO_PGRP"]], "prio_process (in module os)": [[290, "os.PRIO_PROCESS"]], "prio_user (in module os)": [[290, "os.PRIO_USER"]], "p_all (in module os)": [[290, "os.P_ALL"]], "p_detach (in module os)": [[290, "os.P_DETACH"]], "p_nowait (in module os)": [[290, "os.P_NOWAIT"]], "p_nowaito (in module os)": [[290, "os.P_NOWAITO"]], "p_overlay (in module os)": [[290, "os.P_OVERLAY"]], "p_pgid (in module os)": [[290, "os.P_PGID"]], "p_pid (in module os)": [[290, "os.P_PID"]], "p_pidfd (in module os)": [[290, "os.P_PIDFD"]], "p_wait (in module os)": [[290, "os.P_WAIT"]], "pathlike (class in os)": [[290, "os.PathLike"]], "rtld_deepbind (in module os)": [[290, "os.RTLD_DEEPBIND"]], "rtld_global (in module os)": [[290, "os.RTLD_GLOBAL"]], "rtld_lazy (in module os)": [[290, "os.RTLD_LAZY"]], "rtld_local (in module os)": [[290, "os.RTLD_LOCAL"]], "rtld_nodelete (in module os)": [[290, "os.RTLD_NODELETE"]], "rtld_noload (in module os)": [[290, "os.RTLD_NOLOAD"]], "rtld_now (in module os)": [[290, "os.RTLD_NOW"]], "rwf_append (in module os)": [[290, "os.RWF_APPEND"]], "rwf_dsync (in module os)": [[290, "os.RWF_DSYNC"]], "rwf_hipri (in module os)": [[290, "os.RWF_HIPRI"]], "rwf_nowait (in module os)": [[290, "os.RWF_NOWAIT"]], "rwf_sync (in module os)": [[290, "os.RWF_SYNC"]], "r_ok (in module os)": [[290, "os.R_OK"]], "sched_batch (in module os)": [[290, "os.SCHED_BATCH"]], "sched_fifo (in module os)": [[290, "os.SCHED_FIFO"]], "sched_idle (in module os)": [[290, "os.SCHED_IDLE"]], "sched_other (in module os)": [[290, "os.SCHED_OTHER"]], "sched_reset_on_fork (in module os)": [[290, "os.SCHED_RESET_ON_FORK"]], "sched_rr (in module os)": [[290, "os.SCHED_RR"]], "sched_sporadic (in module os)": [[290, "os.SCHED_SPORADIC"]], "seek_cur (in module os)": [[290, "os.SEEK_CUR"]], "seek_data (in module os)": [[290, "os.SEEK_DATA"]], "seek_end (in module os)": [[290, "os.SEEK_END"]], "seek_hole (in module os)": [[290, "os.SEEK_HOLE"]], "seek_set (in module os)": [[290, "os.SEEK_SET"]], "sf_mnowait (in module os)": [[290, "os.SF_MNOWAIT"]], "sf_nocache (in module os)": [[290, "os.SF_NOCACHE"]], "sf_nodiskio (in module os)": [[290, "os.SF_NODISKIO"]], "sf_sync (in module os)": [[290, "os.SF_SYNC"]], "splice_f_more (in module os)": [[290, "os.SPLICE_F_MORE"]], "splice_f_move (in module os)": [[290, "os.SPLICE_F_MOVE"]], "splice_f_nonblock (in module os)": [[290, "os.SPLICE_F_NONBLOCK"]], "unc paths": [[290, "index-28"]], "wcontinued (in module os)": [[290, "os.WCONTINUED"]], "wcoredump() (in module os)": [[290, "os.WCOREDUMP"]], "wexited (in module os)": [[290, "os.WEXITED"]], "wexitstatus() (in module os)": [[290, "os.WEXITSTATUS"]], "wifcontinued() (in module os)": [[290, "os.WIFCONTINUED"]], "wifexited() (in module os)": [[290, "os.WIFEXITED"]], "wifsignaled() (in module os)": [[290, "os.WIFSIGNALED"]], "wifstopped() (in module os)": [[290, "os.WIFSTOPPED"]], "wnohang (in module os)": [[290, "os.WNOHANG"]], "wnowait (in module os)": [[290, "os.WNOWAIT"]], "wstopped (in module os)": [[290, "os.WSTOPPED"]], "wstopsig() (in module os)": [[290, "os.WSTOPSIG"]], "wtermsig() (in module os)": [[290, "os.WTERMSIG"]], "wuntraced (in module os)": [[290, "os.WUNTRACED"]], "w_ok (in module os)": [[290, "os.W_OK"]], "xattr_create (in module os)": [[290, "os.XATTR_CREATE"]], "xattr_replace (in module os)": [[290, "os.XATTR_REPLACE"]], "xattr_size_max (in module os)": [[290, "os.XATTR_SIZE_MAX"]], "x_ok (in module os)": [[290, "os.X_OK"]], "__fspath__() (os.pathlike method)": [[290, "os.PathLike.__fspath__"]], "_exit() (in module os)": [[290, "os._exit"]], "abort() (in module os)": [[290, "os.abort"]], "access() (in module os)": [[290, "os.access"]], "add_dll_directory() (in module os)": [[290, "os.add_dll_directory"]], "altsep (in module os)": [[290, "os.altsep"]], "and os.makedirs()": [[290, "index-28"]], "changing": [[290, "index-26"]], "chdir() (in module os)": [[290, "os.chdir"]], "chflags() (in module os)": [[290, "os.chflags"]], "chmod() (in module os)": [[290, "os.chmod"]], "chown() (in module os)": [[290, "os.chown"]], "chroot() (in module os)": [[290, "os.chroot"]], "close() (os.scandir method)": [[290, "os.scandir.close"]], "closerange() (in module os)": [[290, "os.closerange"]], "columns (os.terminal_size attribute)": [[290, "os.terminal_size.columns"]], "confstr() (in module os)": [[290, "os.confstr"]], "confstr_names (in module os)": [[290, "os.confstr_names"]], "copy_file_range() (in module os)": [[290, "os.copy_file_range"]], "cpu_count() (in module os)": [[290, "os.cpu_count"]], "creating": [[290, "index-28"]], "ctermid() (in module os)": [[290, "os.ctermid"]], "curdir (in module os)": [[290, "os.curdir"]], "defpath (in module os)": [[290, "os.defpath"]], "deleting": [[290, "index-21"], [290, "index-29"], [329, "index-1"]], "device_encoding() (in module os)": [[290, "os.device_encoding"]], "devnull (in module os)": [[290, "os.devnull"]], "dup() (in module os)": [[290, "os.dup"]], "dup2() (in module os)": [[290, "os.dup2"]], "effective id": [[290, "index-8"]], "environ (in module os)": [[290, "os.environ"]], "environb (in module os)": [[290, "os.environb"]], "environment variables": [[290, "index-17"], [290, "index-21"]], "eventfd() (in module os)": [[290, "os.eventfd"]], "eventfd_read() (in module os)": [[290, "os.eventfd_read"]], "eventfd_write() (in module os)": [[290, "os.eventfd_write"]], "execl() (in module os)": [[290, "os.execl"]], "execle() (in module os)": [[290, "os.execle"]], "execlp() (in module os)": [[290, "os.execlp"]], "execlpe() (in module os)": [[290, "os.execlpe"]], "execv() (in module os)": [[290, "os.execv"]], "execve() (in module os)": [[290, "os.execve"]], "execvp() (in module os)": [[290, "os.execvp"]], "execvpe() (in module os)": [[290, "os.execvpe"]], "extsep (in module os)": [[290, "os.extsep"]], "fchdir() (in module os)": [[290, "os.fchdir"]], "fchmod() (in module os)": [[290, "os.fchmod"]], "fchown() (in module os)": [[290, "os.fchown"]], "fdatasync() (in module os)": [[290, "os.fdatasync"]], "fdopen() (in module os)": [[290, "os.fdopen"]], "fork() (in module os)": [[290, "os.fork"]], "forkpty() (in module os)": [[290, "os.forkpty"]], "fpathconf() (in module os)": [[290, "os.fpathconf"]], "fsdecode() (in module os)": [[290, "os.fsdecode"]], "fsencode() (in module os)": [[290, "os.fsencode"]], "fspath() (in module os)": [[290, "os.fspath"]], "fstat() (in module os)": [[290, "os.fstat"]], "fstatvfs() (in module os)": [[290, "os.fstatvfs"]], "fsync() (in module os)": [[290, "os.fsync"]], "ftruncate() (in module os)": [[290, "os.ftruncate"]], "fwalk() (in module os)": [[290, "os.fwalk"]], "get_blocking() (in module os)": [[290, "os.get_blocking"]], "get_exec_path() (in module os)": [[290, "os.get_exec_path"]], "get_handle_inheritable() (in module os)": [[290, "os.get_handle_inheritable"]], "get_inheritable() (in module os)": [[290, "os.get_inheritable"]], "get_terminal_size() (in module os)": [[290, "os.get_terminal_size"]], "getcwd() (in module os)": [[290, "os.getcwd"]], "getcwdb() (in module os)": [[290, "os.getcwdb"]], "getegid() (in module os)": [[290, "os.getegid"]], "getenv() (in module os)": [[290, "os.getenv"]], "getenvb() (in module os)": [[290, "os.getenvb"]], "geteuid() (in module os)": [[290, "os.geteuid"]], "getgid() (in module os)": [[290, "os.getgid"]], "getgrouplist() (in module os)": [[290, "os.getgrouplist"]], "getgroups() (in module os)": [[290, "os.getgroups"]], "gethostbyaddr() (in module socket)": [[290, "index-20"], [334, "socket.gethostbyaddr"]], "gethostname() (in module socket)": [[290, "index-20"], [334, "socket.gethostname"]], "getloadavg() (in module os)": [[290, "os.getloadavg"]], "getlogin() (in module os)": [[290, "os.getlogin"]], "getpgid() (in module os)": [[290, "os.getpgid"]], "getpgrp() (in module os)": [[290, "os.getpgrp"]], "getpid() (in module os)": [[290, "os.getpid"]], "getppid() (in module os)": [[290, "os.getppid"]], "getpriority() (in module os)": [[290, "os.getpriority"]], "getrandom() (in module os)": [[290, "os.getrandom"]], "getresgid() (in module os)": [[290, "os.getresgid"]], "getresuid() (in module os)": [[290, "os.getresuid"]], "getsid() (in module os)": [[290, "os.getsid"]], "getuid() (in module os)": [[290, "os.getuid"]], "getxattr() (in module os)": [[290, "os.getxattr"]], "group": [[290, "index-12"], [290, "index-9"]], "id": [[290, "index-13"], [290, "index-16"], [425, "index-1"]], "id of parent": [[290, "index-14"]], "id, setting": [[290, "index-19"]], "in pathnames": [[290, "index-45"], [290, "index-46"], [290, "index-47"], [290, "index-49"], [290, "index-50"]], "in pathnames (windows)": [[290, "index-48"]], "initgroups() (in module os)": [[290, "os.initgroups"]], "inode() (os.direntry method)": [[290, "os.DirEntry.inode"]], "is_dir() (os.direntry method)": [[290, "os.DirEntry.is_dir"]], "is_file() (os.direntry method)": [[290, "os.DirEntry.is_file"]], "is_junction() (os.direntry method)": [[290, "os.DirEntry.is_junction"]], "is_symlink() (os.direntry method)": [[290, "os.DirEntry.is_symlink"]], "isatty() (in module os)": [[290, "os.isatty"]], "kill() (in module os)": [[290, "os.kill"]], "killing": [[290, "index-37"], [290, "index-38"]], "killpg() (in module os)": [[290, "os.killpg"]], "lchflags() (in module os)": [[290, "os.lchflags"]], "lchmod() (in module os)": [[290, "os.lchmod"]], "lchown() (in module os)": [[290, "os.lchown"]], "lines (os.terminal_size attribute)": [[290, "os.terminal_size.lines"]], "linesep (in module os)": [[290, "os.linesep"]], "link() (in module os)": [[290, "os.link"]], "listdir() (in module os)": [[290, "os.listdir"]], "listdrives() (in module os)": [[290, "os.listdrives"]], "listmounts() (in module os)": [[290, "os.listmounts"]], "listvolumes() (in module os)": [[290, "os.listvolumes"]], "listxattr() (in module os)": [[290, "os.listxattr"]], "lockf() (in module os)": [[290, "os.lockf"]], "login_tty() (in module os)": [[290, "os.login_tty"]], "lseek() (in module os)": [[290, "os.lseek"]], "lstat() (in module os)": [[290, "os.lstat"]], "major() (in module os)": [[290, "os.major"]], "makedev() (in module os)": [[290, "os.makedev"]], "makedirs() (in module os)": [[290, "os.makedirs"]], "memfd_create() (in module os)": [[290, "os.memfd_create"]], "minor() (in module os)": [[290, "os.minor"]], "mkdir() (in module os)": [[290, "os.mkdir"]], "mkfifo() (in module os)": [[290, "os.mkfifo"]], "mknod() (in module os)": [[290, "os.mknod"]], "name (in module os)": [[290, "os.name"]], "name (os.direntry attribute)": [[290, "os.DirEntry.name"]], "nice() (in module os)": [[290, "os.nice"]], "open() (in module os)": [[290, "os.open"]], "openpty() (in module os)": [[290, "os.openpty"]], "os": [[290, "module-os"], [303, "index-0"]], "pardir (in module os)": [[290, "os.pardir"]], "path (os.direntry attribute)": [[290, "os.DirEntry.path"]], "path separator (posix)": [[290, "index-51"]], "pathconf() (in module os)": [[290, "os.pathconf"]], "pathconf_names (in module os)": [[290, "os.pathconf_names"]], "pathsep (in module os)": [[290, "os.pathsep"]], "pidfd_open() (in module os)": [[290, "os.pidfd_open"]], "pipe() (in module os)": [[290, "os.pipe"]], "pipe2() (in module os)": [[290, "os.pipe2"]], "plock() (in module os)": [[290, "os.plock"]], "popen() (in module os)": [[290, "os.popen"], [325, "index-1"], [425, "index-55"]], "posix_fadvise() (in module os)": [[290, "os.posix_fadvise"]], "posix_fallocate() (in module os)": [[290, "os.posix_fallocate"]], "posix_spawn() (in module os)": [[290, "os.posix_spawn"]], "posix_spawnp() (in module os)": [[290, "os.posix_spawnp"]], "pread() (in module os)": [[290, "os.pread"]], "preadv() (in module os)": [[290, "os.preadv"]], "process": [[290, "index-12"], [290, "index-13"], [290, "index-14"], [290, "index-15"], [290, "index-18"], [290, "index-37"], [290, "index-38"], [290, "index-9"]], "pty": [[290, "index-23"], [306, "module-pty"]], "putenv() (in module os)": [[290, "os.putenv"]], "pwrite() (in module os)": [[290, "os.pwrite"]], "pwritev() (in module os)": [[290, "os.pwritev"]], "read() (in module os)": [[290, "os.read"]], "readlink() (in module os)": [[290, "os.readlink"]], "readv() (in module os)": [[290, "os.readv"]], "register_at_fork() (in module os)": [[290, "os.register_at_fork"]], "remove() (in module os)": [[290, "os.remove"]], "removedirs() (in module os)": [[290, "os.removedirs"]], "removexattr() (in module os)": [[290, "os.removexattr"]], "rename() (in module os)": [[290, "os.rename"]], "renames() (in module os)": [[290, "os.renames"]], "replace() (in module os)": [[290, "os.replace"]], "rmdir() (in module os)": [[290, "os.rmdir"]], "scandir() (in module os)": [[290, "os.scandir"]], "sched_get_priority_max() (in module os)": [[290, "os.sched_get_priority_max"]], "sched_get_priority_min() (in module os)": [[290, "os.sched_get_priority_min"]], "sched_getaffinity() (in module os)": [[290, "os.sched_getaffinity"]], "sched_getparam() (in module os)": [[290, "os.sched_getparam"]], "sched_getscheduler() (in module os)": [[290, "os.sched_getscheduler"]], "sched_param (class in os)": [[290, "os.sched_param"]], "sched_priority (os.sched_param attribute)": [[290, "os.sched_param.sched_priority"]], "sched_rr_get_interval() (in module os)": [[290, "os.sched_rr_get_interval"]], "sched_setaffinity() (in module os)": [[290, "os.sched_setaffinity"]], "sched_setparam() (in module os)": [[290, "os.sched_setparam"]], "sched_setscheduler() (in module os)": [[290, "os.sched_setscheduler"]], "sched_yield() (in module os)": [[290, "os.sched_yield"]], "scheduling priority": [[290, "index-15"], [290, "index-18"]], "sendfile() (in module os)": [[290, "os.sendfile"]], "sep (in module os)": [[290, "os.sep"]], "set_blocking() (in module os)": [[290, "os.set_blocking"]], "set_handle_inheritable() (in module os)": [[290, "os.set_handle_inheritable"]], "set_inheritable() (in module os)": [[290, "os.set_inheritable"]], "setegid() (in module os)": [[290, "os.setegid"]], "seteuid() (in module os)": [[290, "os.seteuid"]], "setgid() (in module os)": [[290, "os.setgid"]], "setgroups() (in module os)": [[290, "os.setgroups"]], "setns() (in module os)": [[290, "os.setns"]], "setpgid() (in module os)": [[290, "os.setpgid"]], "setpgrp() (in module os)": [[290, "os.setpgrp"]], "setpriority() (in module os)": [[290, "os.setpriority"]], "setregid() (in module os)": [[290, "os.setregid"]], "setresgid() (in module os)": [[290, "os.setresgid"]], "setresuid() (in module os)": [[290, "os.setresuid"]], "setreuid() (in module os)": [[290, "os.setreuid"]], "setsid() (in module os)": [[290, "os.setsid"]], "setting": [[290, "index-17"]], "setuid() (in module os)": [[290, "os.setuid"]], "setxattr() (in module os)": [[290, "os.setxattr"]], "signalling": [[290, "index-37"], [290, "index-38"]], "spawnl() (in module os)": [[290, "os.spawnl"]], "spawnle() (in module os)": [[290, "os.spawnle"]], "spawnlp() (in module os)": [[290, "os.spawnlp"]], "spawnlpe() (in module os)": [[290, "os.spawnlpe"]], "spawnv() (in module os)": [[290, "os.spawnv"]], "spawnve() (in module os)": [[290, "os.spawnve"]], "spawnvp() (in module os)": [[290, "os.spawnvp"]], "spawnvpe() (in module os)": [[290, "os.spawnvpe"]], "splice() (in module os)": [[290, "os.splice"]], "st_atime (os.stat_result attribute)": [[290, "os.stat_result.st_atime"]], "st_atime_ns (os.stat_result attribute)": [[290, "os.stat_result.st_atime_ns"]], "st_birthtime (os.stat_result attribute)": [[290, "os.stat_result.st_birthtime"]], "st_birthtime_ns (os.stat_result attribute)": [[290, "os.stat_result.st_birthtime_ns"]], "st_blksize (os.stat_result attribute)": [[290, "os.stat_result.st_blksize"]], "st_blocks (os.stat_result attribute)": [[290, "os.stat_result.st_blocks"]], "st_creator (os.stat_result attribute)": [[290, "os.stat_result.st_creator"]], "st_ctime (os.stat_result attribute)": [[290, "os.stat_result.st_ctime"]], "st_ctime_ns (os.stat_result attribute)": [[290, "os.stat_result.st_ctime_ns"]], "st_dev (os.stat_result attribute)": [[290, "os.stat_result.st_dev"]], "st_file_attributes (os.stat_result attribute)": [[290, "os.stat_result.st_file_attributes"]], "st_flags (os.stat_result attribute)": [[290, "os.stat_result.st_flags"]], "st_fstype (os.stat_result attribute)": [[290, "os.stat_result.st_fstype"]], "st_gen (os.stat_result attribute)": [[290, "os.stat_result.st_gen"]], "st_gid (os.stat_result attribute)": [[290, "os.stat_result.st_gid"]], "st_ino (os.stat_result attribute)": [[290, "os.stat_result.st_ino"]], "st_mode (os.stat_result attribute)": [[290, "os.stat_result.st_mode"]], "st_mtime (os.stat_result attribute)": [[290, "os.stat_result.st_mtime"]], "st_mtime_ns (os.stat_result attribute)": [[290, "os.stat_result.st_mtime_ns"]], "st_nlink (os.stat_result attribute)": [[290, "os.stat_result.st_nlink"]], "st_rdev (os.stat_result attribute)": [[290, "os.stat_result.st_rdev"]], "st_reparse_tag (os.stat_result attribute)": [[290, "os.stat_result.st_reparse_tag"]], "st_rsize (os.stat_result attribute)": [[290, "os.stat_result.st_rsize"]], "st_size (os.stat_result attribute)": [[290, "os.stat_result.st_size"]], "st_type (os.stat_result attribute)": [[290, "os.stat_result.st_type"]], "st_uid (os.stat_result attribute)": [[290, "os.stat_result.st_uid"]], "startfile() (in module os)": [[290, "os.startfile"]], "stat": [[290, "index-30"], [339, "module-stat"]], "stat() (in module os)": [[290, "os.stat"]], "stat() (os.direntry method)": [[290, "os.DirEntry.stat"]], "stat_result (class in os)": [[290, "os.stat_result"]], "statvfs() (in module os)": [[290, "os.statvfs"]], "strerror() (in module os)": [[290, "os.strerror"]], "supports_bytes_environ (in module os)": [[290, "os.supports_bytes_environ"]], "supports_dir_fd (in module os)": [[290, "os.supports_dir_fd"]], "supports_effective_ids (in module os)": [[290, "os.supports_effective_ids"]], "supports_fd (in module os)": [[290, "os.supports_fd"]], "supports_follow_symlinks (in module os)": [[290, "os.supports_follow_symlinks"]], "symlink() (in module os)": [[290, "os.symlink"]], "sync() (in module os)": [[290, "os.sync"]], "sysconf() (in module os)": [[290, "os.sysconf"]], "sysconf_names (in module os)": [[290, "os.sysconf_names"]], "system() (in module os)": [[290, "os.system"]], "tcgetpgrp() (in module os)": [[290, "os.tcgetpgrp"]], "tcsetpgrp() (in module os)": [[290, "os.tcsetpgrp"]], "terminal_size (class in os)": [[290, "os.terminal_size"]], "times() (in module os)": [[290, "os.times"]], "traversal": [[290, "index-31"], [290, "index-32"]], "truncate() (in module os)": [[290, "os.truncate"]], "ttyname() (in module os)": [[290, "os.ttyname"]], "umask() (in module os)": [[290, "os.umask"]], "uname() (in module os)": [[290, "os.uname"]], "unlink() (in module os)": [[290, "os.unlink"]], "unsetenv() (in module os)": [[290, "os.unsetenv"]], "unshare() (in module os)": [[290, "os.unshare"]], "urandom() (in module os)": [[290, "os.urandom"]], "utime() (in module os)": [[290, "os.utime"]], "wait() (in module os)": [[290, "os.wait"]], "wait3() (in module os)": [[290, "os.wait3"]], "wait4() (in module os)": [[290, "os.wait4"]], "waitid() (in module os)": [[290, "os.waitid"]], "waitpid() (in module os)": [[290, "os.waitpid"]], "waitstatus_to_exitcode() (in module os)": [[290, "os.waitstatus_to_exitcode"]], "walk() (in module os)": [[290, "os.walk"]], "walking": [[290, "index-31"], [290, "index-32"]], "write() (in module os)": [[290, "os.write"]], "writev() (in module os)": [[290, "os.writev"]], "home": [[291, "index-3"], [291, "index-8"], [366, "index-1"], [478, "index-14"], [478, "index-21"]], "homedrive": [[291, "index-6"]], "homepath": [[291, "index-5"]], "userprofile": [[291, "index-4"], [478, "index-13"], [478, "index-20"]], "abspath() (in module os.path)": [[291, "os.path.abspath"]], "basename() (in module os.path)": [[291, "os.path.basename"]], "commonpath() (in module os.path)": [[291, "os.path.commonpath"]], "commonprefix() (in module os.path)": [[291, "os.path.commonprefix"]], "dirname() (in module os.path)": [[291, "os.path.dirname"]], "environment variables expansion": [[291, "index-9"]], "environment variables expansion (windows)": [[291, "index-9"], [402, "index-0"]], "exists() (in module os.path)": [[291, "os.path.exists"]], "expanduser() (in module os.path)": [[291, "os.path.expanduser"]], "expandvars() (in module os.path)": [[291, "os.path.expandvars"]], "getatime() (in module os.path)": [[291, "os.path.getatime"]], "getctime() (in module os.path)": [[291, "os.path.getctime"]], "getmtime() (in module os.path)": [[291, "os.path.getmtime"]], "getsize() (in module os.path)": [[291, "os.path.getsize"]], "home directory expansion": [[291, "index-1"]], "isabs() (in module os.path)": [[291, "os.path.isabs"]], "isdevdrive() (in module os.path)": [[291, "os.path.isdevdrive"]], "isdir() (in module os.path)": [[291, "os.path.isdir"]], "isfile() (in module os.path)": [[291, "os.path.isfile"]], "isjunction() (in module os.path)": [[291, "os.path.isjunction"]], "islink() (in module os.path)": [[291, "os.path.islink"]], "ismount() (in module os.path)": [[291, "os.path.ismount"]], "join() (in module os.path)": [[291, "os.path.join"]], "lexists() (in module os.path)": [[291, "os.path.lexists"]], "normcase() (in module os.path)": [[291, "os.path.normcase"]], "normpath() (in module os.path)": [[291, "os.path.normpath"]], "operations": [[291, "index-0"], [293, "index-0"], [341, "index-1"], [341, "index-16"], [341, "index-5"]], "os.path": [[291, "module-os.path"]], "pwd": [[291, "index-2"], [307, "module-pwd"]], "realpath() (in module os.path)": [[291, "os.path.realpath"]], "relpath() (in module os.path)": [[291, "os.path.relpath"]], "samefile() (in module os.path)": [[291, "os.path.samefile"]], "sameopenfile() (in module os.path)": [[291, "os.path.sameopenfile"]], "samestat() (in module os.path)": [[291, "os.path.samestat"]], "split() (in module os.path)": [[291, "os.path.split"]], "splitdrive() (in module os.path)": [[291, "os.path.splitdrive"]], "splitext() (in module os.path)": [[291, "os.path.splitext"]], "splitroot() (in module os.path)": [[291, "os.path.splitroot"]], "supports_unicode_filenames (in module os.path)": [[291, "os.path.supports_unicode_filenames"]], "~ (tilde)": [[291, "index-1"], [341, "index-16"], [427, "index-62"]], "audiodev": [[292, "index-1"]], "mixerdev": [[292, "index-2"]], "ossaudioerror": [[292, "ossaudiodev.OSSAudioError"]], "pep 594#ossaudiodev": [[292, "index-0"]], "bufsize() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.bufsize"]], "channels() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.channels"]], "close() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.close"]], "close() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.close"]], "closed (ossaudiodev.oss_audio_device attribute)": [[292, "ossaudiodev.oss_audio_device.closed"]], "controls() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.controls"]], "fileno() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.fileno"]], "fileno() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.fileno"]], "get() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.get"]], "get_recsrc() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.get_recsrc"]], "getfmts() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.getfmts"]], "mode (ossaudiodev.oss_audio_device attribute)": [[292, "ossaudiodev.oss_audio_device.mode"]], "name (ossaudiodev.oss_audio_device attribute)": [[292, "ossaudiodev.oss_audio_device.name"]], "nonblock() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.nonblock"]], "obufcount() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.obufcount"]], "obuffree() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.obuffree"]], "open() (in module ossaudiodev)": [[292, "ossaudiodev.open"]], "openmixer() (in module ossaudiodev)": [[292, "ossaudiodev.openmixer"]], "ossaudiodev": [[292, "module-ossaudiodev"]], "post() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.post"]], "read() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.read"]], "reccontrols() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.reccontrols"]], "reset() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.reset"]], "set() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.set"]], "set_recsrc() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.set_recsrc"]], "setfmt() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.setfmt"]], "setparameters() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.setparameters"]], "speed() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.speed"]], "stereocontrols() (ossaudiodev.oss_mixer_device method)": [[292, "ossaudiodev.oss_mixer_device.stereocontrols"]], "sync() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.sync"]], "write() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.write"]], "writeall() (ossaudiodev.oss_audio_device method)": [[292, "ossaudiodev.oss_audio_device.writeall"]], "pep 428": [[293, "index-1"], [474, "index-30"], [474, "index-7"]], "path (class in pathlib)": [[293, "pathlib.Path"]], "posixpath (class in pathlib)": [[293, "pathlib.PosixPath"]], "purepath (class in pathlib)": [[293, "pathlib.PurePath"]], "pureposixpath (class in pathlib)": [[293, "pathlib.PurePosixPath"]], "purewindowspath (class in pathlib)": [[293, "pathlib.PureWindowsPath"]], "windowspath (class in pathlib)": [[293, "pathlib.WindowsPath"]], "absolute() (pathlib.path method)": [[293, "pathlib.Path.absolute"]], "anchor (pathlib.purepath attribute)": [[293, "pathlib.PurePath.anchor"]], "as_posix() (pathlib.purepath method)": [[293, "pathlib.PurePath.as_posix"]], "as_uri() (pathlib.purepath method)": [[293, "pathlib.PurePath.as_uri"]], "chmod() (pathlib.path method)": [[293, "pathlib.Path.chmod"]], "cwd() (pathlib.path class method)": [[293, "pathlib.Path.cwd"]], "drive (pathlib.purepath attribute)": [[293, "pathlib.PurePath.drive"]], "exists() (pathlib.path method)": [[293, "pathlib.Path.exists"]], "expanduser() (pathlib.path method)": [[293, "pathlib.Path.expanduser"]], "glob() (pathlib.path method)": [[293, "pathlib.Path.glob"]], "group() (pathlib.path method)": [[293, "pathlib.Path.group"]], "hardlink_to() (pathlib.path method)": [[293, "pathlib.Path.hardlink_to"]], "home() (pathlib.path class method)": [[293, "pathlib.Path.home"]], "is_absolute() (pathlib.purepath method)": [[293, "pathlib.PurePath.is_absolute"]], "is_block_device() (pathlib.path method)": [[293, "pathlib.Path.is_block_device"]], "is_char_device() (pathlib.path method)": [[293, "pathlib.Path.is_char_device"]], "is_dir() (pathlib.path method)": [[293, "pathlib.Path.is_dir"]], "is_fifo() (pathlib.path method)": [[293, "pathlib.Path.is_fifo"]], "is_file() (pathlib.path method)": [[293, "pathlib.Path.is_file"]], "is_junction() (pathlib.path method)": [[293, "pathlib.Path.is_junction"]], "is_mount() (pathlib.path method)": [[293, "pathlib.Path.is_mount"]], "is_relative_to() (pathlib.purepath method)": [[293, "pathlib.PurePath.is_relative_to"]], "is_reserved() (pathlib.purepath method)": [[293, "pathlib.PurePath.is_reserved"]], "is_socket() (pathlib.path method)": [[293, "pathlib.Path.is_socket"]], "is_symlink() (pathlib.path method)": [[293, "pathlib.Path.is_symlink"]], "iterdir() (pathlib.path method)": [[293, "pathlib.Path.iterdir"]], "joinpath() (pathlib.purepath method)": [[293, "pathlib.PurePath.joinpath"]], "lchmod() (pathlib.path method)": [[293, "pathlib.Path.lchmod"]], "lstat() (pathlib.path method)": [[293, "pathlib.Path.lstat"]], "match() (pathlib.purepath method)": [[293, "pathlib.PurePath.match"]], "mkdir() (pathlib.path method)": [[293, "pathlib.Path.mkdir"]], "name (pathlib.purepath attribute)": [[293, "pathlib.PurePath.name"]], "open() (pathlib.path method)": [[293, "pathlib.Path.open"]], "owner() (pathlib.path method)": [[293, "pathlib.Path.owner"]], "parent (pathlib.purepath attribute)": [[293, "pathlib.PurePath.parent"]], "parents (pathlib.purepath attribute)": [[293, "pathlib.PurePath.parents"]], "parts (pathlib.purepath attribute)": [[293, "pathlib.PurePath.parts"]], "pathlib": [[293, "module-pathlib"]], "read_bytes() (pathlib.path method)": [[293, "pathlib.Path.read_bytes"]], "read_text() (pathlib.path method)": [[293, "pathlib.Path.read_text"]], "readlink() (pathlib.path method)": [[293, "pathlib.Path.readlink"]], "relative_to() (pathlib.purepath method)": [[293, "pathlib.PurePath.relative_to"]], "rename() (pathlib.path method)": [[293, "pathlib.Path.rename"]], "replace() (pathlib.path method)": [[293, "pathlib.Path.replace"]], "resolve() (pathlib.path method)": [[293, "pathlib.Path.resolve"]], "rglob() (pathlib.path method)": [[293, "pathlib.Path.rglob"]], "rmdir() (pathlib.path method)": [[293, "pathlib.Path.rmdir"]], "root (pathlib.purepath attribute)": [[293, "pathlib.PurePath.root"]], "samefile() (pathlib.path method)": [[293, "pathlib.Path.samefile"]], "stat() (pathlib.path method)": [[293, "pathlib.Path.stat"]], "stem (pathlib.purepath attribute)": [[293, "pathlib.PurePath.stem"]], "suffix (pathlib.purepath attribute)": [[293, "pathlib.PurePath.suffix"]], "suffixes (pathlib.purepath attribute)": [[293, "pathlib.PurePath.suffixes"]], "symlink_to() (pathlib.path method)": [[293, "pathlib.Path.symlink_to"]], "touch() (pathlib.path method)": [[293, "pathlib.Path.touch"]], "unlink() (pathlib.path method)": [[293, "pathlib.Path.unlink"]], "walk() (pathlib.path method)": [[293, "pathlib.Path.walk"]], "with_name() (pathlib.purepath method)": [[293, "pathlib.PurePath.with_name"]], "with_segments() (pathlib.purepath method)": [[293, "pathlib.PurePath.with_segments"]], "with_stem() (pathlib.purepath method)": [[293, "pathlib.PurePath.with_stem"]], "with_suffix() (pathlib.purepath method)": [[293, "pathlib.PurePath.with_suffix"]], "write_bytes() (pathlib.path method)": [[293, "pathlib.Path.write_bytes"]], "write_text() (pathlib.path method)": [[293, "pathlib.Path.write_text"]], "! (pdb command)": [[294, "pdbcommand-0"]], ".pdbrc": [[294, "index-2"]], "pdb (class in pdb)": [[294, "index-1"], [294, "pdb.Pdb"]], "alias (pdb command)": [[294, "pdbcommand-alias"]], "args (pdb command)": [[294, "pdbcommand-args"]], "break (pdb command)": [[294, "pdbcommand-break"]], "clear (pdb command)": [[294, "pdbcommand-clear"]], "commands (pdb command)": [[294, "pdbcommand-commands"]], "condition (pdb command)": [[294, "pdbcommand-condition"]], "continue (pdb command)": [[294, "pdbcommand-continue"]], "debug (pdb command)": [[294, "pdbcommand-debug"]], "disable (pdb command)": [[294, "pdbcommand-disable"]], "display (pdb command)": [[294, "pdbcommand-display"]], "down (pdb command)": [[294, "pdbcommand-down"]], "enable (pdb command)": [[294, "pdbcommand-enable"]], "help (pdb command)": [[294, "pdbcommand-help"]], "ignore (pdb command)": [[294, "pdbcommand-ignore"]], "interact (pdb command)": [[294, "pdbcommand-interact"]], "jump (pdb command)": [[294, "pdbcommand-jump"]], "list (pdb command)": [[294, "pdbcommand-list"]], "ll (pdb command)": [[294, "pdbcommand-ll"]], "next (pdb command)": [[294, "pdbcommand-next"]], "p (pdb command)": [[294, "pdbcommand-p"]], "pdb": [[294, "module-pdb"]], "pm() (in module pdb)": [[294, "pdb.pm"]], "post_mortem() (in module pdb)": [[294, "pdb.post_mortem"]], "pp (pdb command)": [[294, "pdbcommand-pp"]], "quit (pdb command)": [[294, "pdbcommand-quit"]], "restart (pdb command)": [[294, "pdbcommand-restart"]], "return (pdb command)": [[294, "pdbcommand-return"]], "retval (pdb command)": [[294, "pdbcommand-retval"]], "run (pdb command)": [[294, "pdbcommand-run"]], "run() (in module pdb)": [[294, "pdb.run"]], "run() (pdb.pdb method)": [[294, "pdb.Pdb.run"]], "runcall() (in module pdb)": [[294, "pdb.runcall"]], "runcall() (pdb.pdb method)": [[294, "pdb.Pdb.runcall"]], "runeval() (in module pdb)": [[294, "pdb.runeval"]], "runeval() (pdb.pdb method)": [[294, "pdb.Pdb.runeval"]], "set_trace() (in module pdb)": [[294, "pdb.set_trace"]], "set_trace() (pdb.pdb method)": [[294, "pdb.Pdb.set_trace"]], "source (pdb command)": [[294, "pdbcommand-source"]], "step (pdb command)": [[294, "pdbcommand-step"]], "tbreak (pdb command)": [[294, "pdbcommand-tbreak"]], "unalias (pdb command)": [[294, "pdbcommand-unalias"]], "undisplay (pdb command)": [[294, "pdbcommand-undisplay"]], "until (pdb command)": [[294, "pdbcommand-until"]], "up (pdb command)": [[294, "pdbcommand-up"]], "whatis (pdb command)": [[294, "pdbcommand-whatis"]], "where (pdb command)": [[294, "pdbcommand-where"]], "default_protocol (in module pickle)": [[296, "pickle.DEFAULT_PROTOCOL"]], "external data representation": [[296, "index-1"], [405, "index-0"]], "highest_protocol (in module pickle)": [[296, "pickle.HIGHEST_PROTOCOL"]], "pep 307": [[296, "index-2"], [462, "index-21"], [462, "index-22"], [462, "index-23"]], "pep 3154": [[296, "index-3"], [474, "index-12"], [474, "index-39"]], "pep 574": [[296, "index-4"], [296, "index-8"], [478, "index-9"]], "picklebuffer (class in pickle)": [[296, "pickle.PickleBuffer"]], "pickleerror": [[296, "pickle.PickleError"]], "pickler (class in pickle)": [[296, "pickle.Pickler"]], "picklingerror": [[296, "pickle.PicklingError"]], "unpickler (class in pickle)": [[296, "pickle.Unpickler"]], "unpicklingerror": [[296, "pickle.UnpicklingError"]], "__getnewargs__() (object method)": [[296, "object.__getnewargs__"]], "__getnewargs_ex__() (object method)": [[296, "object.__getnewargs_ex__"]], "__getstate__() (copy protocol)": [[296, "index-7"]], "__getstate__() (object method)": [[296, "object.__getstate__"]], "__reduce__() (object method)": [[296, "object.__reduce__"]], "__reduce_ex__() (object method)": [[296, "object.__reduce_ex__"]], "__setstate__() (copy protocol)": [[296, "index-7"]], "__setstate__() (object method)": [[296, "object.__setstate__"]], "dispatch_table (pickle.pickler attribute)": [[296, "pickle.Pickler.dispatch_table"]], "dump() (in module pickle)": [[296, "pickle.dump"]], "dump() (pickle.pickler method)": [[296, "pickle.Pickler.dump"]], "dumps() (in module pickle)": [[296, "pickle.dumps"]], "fast (pickle.pickler attribute)": [[296, "pickle.Pickler.fast"]], "find_class() (pickle protocol)": [[296, "index-9"]], "find_class() (pickle.unpickler method)": [[296, "pickle.Unpickler.find_class"]], "flattening": [[296, "index-0"]], "load() (in module pickle)": [[296, "pickle.load"]], "load() (pickle.unpickler method)": [[296, "pickle.Unpickler.load"]], "loads() (in module pickle)": [[296, "pickle.loads"]], "marshalling": [[296, "index-0"]], "objects": [[296, "index-0"], [341, "index-8"]], "persistence": [[296, "index-0"]], "persistent": [[296, "index-0"]], "persistent_id (pickle protocol)": [[296, "index-6"]], "persistent_id() (pickle.pickler method)": [[296, "pickle.Pickler.persistent_id"]], "persistent_load (pickle protocol)": [[296, "index-6"]], "persistent_load() (pickle.unpickler method)": [[296, "pickle.Unpickler.persistent_load"]], "pickling": [[296, "index-0"]], "raw() (pickle.picklebuffer method)": [[296, "pickle.PickleBuffer.raw"]], "reducer_override() (pickle.pickler method)": [[296, "pickle.Pickler.reducer_override"]], "release() (pickle.picklebuffer method)": [[296, "pickle.PickleBuffer.release"]], "serializing": [[296, "index-0"]], "--annotate": [[297, "cmdoption-pickletools-a"]], "--indentlevel": [[297, "cmdoption-pickletools-l"]], "--memo": [[297, "cmdoption-pickletools-m"]], "--output": [[297, "cmdoption-pickletools-o"], [418, "cmdoption-zipapp-o"]], "--preamble": [[297, "cmdoption-pickletools-p"]], "dis() (in module pickletools)": [[297, "pickletools.dis"]], "genops() (in module pickletools)": [[297, "pickletools.genops"]], "optimize() (in module pickletools)": [[297, "pickletools.optimize"]], "pickletools": [[297, "module-pickletools"]], "pickletools command line option": [[297, "cmdoption-pickletools-a"], [297, "cmdoption-pickletools-l"], [297, "cmdoption-pickletools-m"], [297, "cmdoption-pickletools-o"], [297, "cmdoption-pickletools-p"]], "pep 594#pipes": [[298, "index-0"]], "template (class in pipes)": [[298, "pipes.Template"]], "append() (pipes.template method)": [[298, "pipes.Template.append"]], "clone() (pipes.template method)": [[298, "pipes.Template.clone"]], "copy() (pipes.template method)": [[298, "pipes.Template.copy"]], "debug() (pipes.template method)": [[298, "pipes.Template.debug"]], "open() (pipes.template method)": [[298, "pipes.Template.open"]], "pipes": [[298, "module-pipes"]], "prepend() (pipes.template method)": [[298, "pipes.Template.prepend"]], "reset() (pipes.template method)": [[298, "pipes.Template.reset"]], "moduleinfo (class in pkgutil)": [[299, "pkgutil.ModuleInfo"]], "extend_path() (in module pkgutil)": [[299, "pkgutil.extend_path"]], "find_loader() (in module pkgutil)": [[299, "pkgutil.find_loader"]], "get_data() (in module pkgutil)": [[299, "pkgutil.get_data"]], "get_importer() (in module pkgutil)": [[299, "pkgutil.get_importer"]], "get_loader() (in module pkgutil)": [[299, "pkgutil.get_loader"]], "iter_importers() (in module pkgutil)": [[299, "pkgutil.iter_importers"]], "iter_modules() (in module pkgutil)": [[299, "pkgutil.iter_modules"]], "pkgutil": [[299, "module-pkgutil"]], "resolve_name() (in module pkgutil)": [[299, "pkgutil.resolve_name"]], "walk_packages() (in module pkgutil)": [[299, "pkgutil.walk_packages"]], "architecture() (in module platform)": [[300, "platform.architecture"]], "freedesktop_os_release() (in module platform)": [[300, "platform.freedesktop_os_release"]], "java_ver() (in module platform)": [[300, "platform.java_ver"]], "libc_ver() (in module platform)": [[300, "platform.libc_ver"]], "mac_ver() (in module platform)": [[300, "platform.mac_ver"]], "machine() (in module platform)": [[300, "platform.machine"]], "node() (in module platform)": [[300, "platform.node"]], "platform": [[300, "module-platform"]], "platform() (in module platform)": [[300, "platform.platform"]], "processor() (in module platform)": [[300, "platform.processor"]], "python_branch() (in module platform)": [[300, "platform.python_branch"]], "python_build() (in module platform)": [[300, "platform.python_build"]], "python_compiler() (in module platform)": [[300, "platform.python_compiler"]], "python_implementation() (in module platform)": [[300, "platform.python_implementation"]], "python_revision() (in module platform)": [[300, "platform.python_revision"]], "python_version() (in module platform)": [[300, "platform.python_version"]], "python_version_tuple() (in module platform)": [[300, "platform.python_version_tuple"]], "release() (in module platform)": [[300, "platform.release"]], "system() (in module platform)": [[300, "platform.system"]], "system_alias() (in module platform)": [[300, "platform.system_alias"]], "uname() (in module platform)": [[300, "platform.uname"]], "version() (in module platform)": [[300, "platform.version"]], "win32_edition() (in module platform)": [[300, "platform.win32_edition"]], "win32_is_iot() (in module platform)": [[300, "platform.win32_is_iot"]], "win32_ver() (in module platform)": [[300, "platform.win32_ver"]], "fmt_binary (in module plistlib)": [[301, "plistlib.FMT_BINARY"]], "fmt_xml (in module plistlib)": [[301, "plistlib.FMT_XML"]], "uid (class in plistlib)": [[301, "plistlib.UID"]], "dump() (in module plistlib)": [[301, "plistlib.dump"]], "dumps() (in module plistlib)": [[301, "plistlib.dumps"]], "load() (in module plistlib)": [[301, "plistlib.load"]], "loads() (in module plistlib)": [[301, "plistlib.loads"]], "plist": [[301, "index-0"]], "plistlib": [[301, "module-plistlib"]], "property list": [[301, "index-0"]], "pop3": [[302, "index-0"]], "pop3 (class in poplib)": [[302, "poplib.POP3"]], "pop3_ssl (class in poplib)": [[302, "poplib.POP3_SSL"]], "rfc 1939": [[302, "index-1"], [302, "index-2"]], "rfc 2449": [[302, "index-4"]], "rfc 2595": [[302, "index-3"], [302, "index-6"]], "rfc 6856": [[302, "index-5"], [475, "index-36"]], "apop() (poplib.pop3 method)": [[302, "poplib.POP3.apop"]], "capa() (poplib.pop3 method)": [[302, "poplib.POP3.capa"]], "dele() (poplib.pop3 method)": [[302, "poplib.POP3.dele"]], "getwelcome() (poplib.pop3 method)": [[302, "poplib.POP3.getwelcome"]], "list() (poplib.pop3 method)": [[302, "poplib.POP3.list"]], "noop() (poplib.pop3 method)": [[302, "poplib.POP3.noop"]], "pass_() (poplib.pop3 method)": [[302, "poplib.POP3.pass_"]], "poplib": [[302, "module-poplib"]], "quit() (poplib.pop3 method)": [[302, "poplib.POP3.quit"]], "retr() (poplib.pop3 method)": [[302, "poplib.POP3.retr"]], "rpop() (poplib.pop3 method)": [[302, "poplib.POP3.rpop"]], "rset() (poplib.pop3 method)": [[302, "poplib.POP3.rset"]], "set_debuglevel() (poplib.pop3 method)": [[302, "poplib.POP3.set_debuglevel"]], "stat() (poplib.pop3 method)": [[302, "poplib.POP3.stat"]], "stls() (poplib.pop3 method)": [[302, "poplib.POP3.stls"]], "top() (poplib.pop3 method)": [[302, "poplib.POP3.top"]], "uidl() (poplib.pop3 method)": [[302, "poplib.POP3.uidl"]], "user() (poplib.pop3 method)": [[302, "poplib.POP3.user"]], "utf8() (poplib.pop3 method)": [[302, "poplib.POP3.utf8"]], "environ (in module posix)": [[303, "posix.environ"]], "large files": [[303, "index-1"]], "prettyprinter (class in pprint)": [[304, "pprint.PrettyPrinter"]], "eval": [[304, "index-1"], [304, "index-2"], [341, "index-64"], [433, "index-44"], [434, "index-6"]], "format() (pprint.prettyprinter method)": [[304, "pprint.PrettyPrinter.format"]], "isreadable() (in module pprint)": [[304, "pprint.isreadable"]], "isreadable() (pprint.prettyprinter method)": [[304, "pprint.PrettyPrinter.isreadable"]], "isrecursive() (in module pprint)": [[304, "pprint.isrecursive"]], "isrecursive() (pprint.prettyprinter method)": [[304, "pprint.PrettyPrinter.isrecursive"]], "pformat() (in module pprint)": [[304, "pprint.pformat"]], "pformat() (pprint.prettyprinter method)": [[304, "pprint.PrettyPrinter.pformat"]], "placeholder": [[304, "index-0"], [318, "index-0"], [361, "index-0"]], "pp() (in module pprint)": [[304, "pprint.pp"]], "pprint": [[304, "module-pprint"]], "pprint() (in module pprint)": [[304, "pprint.pprint"]], "pprint() (pprint.prettyprinter method)": [[304, "pprint.PrettyPrinter.pprint"]], "saferepr() (in module pprint)": [[304, "pprint.saferepr"]], "profile (class in profile)": [[305, "profile.Profile"]], "stats (class in pstats)": [[305, "pstats.Stats"]], "add() (pstats.stats method)": [[305, "pstats.Stats.add"]], "cprofile": [[305, "module-cProfile"]], "create_stats() (profile.profile method)": [[305, "profile.Profile.create_stats"]], "deterministic profiling": [[305, "index-0"]], "disable() (profile.profile method)": [[305, "profile.Profile.disable"]], "dump_stats() (profile.profile method)": [[305, "profile.Profile.dump_stats"]], "dump_stats() (pstats.stats method)": [[305, "pstats.Stats.dump_stats"]], "enable() (profile.profile method)": [[305, "profile.Profile.enable"]], "get_stats_profile() (pstats.stats method)": [[305, "pstats.Stats.get_stats_profile"]], "print_callees() (pstats.stats method)": [[305, "pstats.Stats.print_callees"]], "print_callers() (pstats.stats method)": [[305, "pstats.Stats.print_callers"]], "print_stats() (profile.profile method)": [[305, "profile.Profile.print_stats"]], "print_stats() (pstats.stats method)": [[305, "pstats.Stats.print_stats"]], "profile": [[305, "module-profile"]], "profiling, deterministic": [[305, "index-0"]], "pstats": [[305, "module-pstats"]], "reverse_order() (pstats.stats method)": [[305, "pstats.Stats.reverse_order"]], "run() (in module profile)": [[305, "profile.run"]], "run() (profile.profile method)": [[305, "profile.Profile.run"]], "runcall() (profile.profile method)": [[305, "profile.Profile.runcall"]], "runctx() (in module profile)": [[305, "profile.runctx"]], "runctx() (profile.profile method)": [[305, "profile.Profile.runctx"]], "sort_stats() (pstats.stats method)": [[305, "pstats.Stats.sort_stats"]], "strip_dirs() (pstats.stats method)": [[305, "pstats.Stats.strip_dirs"]], "fork() (in module pty)": [[306, "pty.fork"]], "openpty() (in module pty)": [[306, "pty.openpty"]], "spawn() (in module pty)": [[306, "pty.spawn"]], "getpwall() (in module pwd)": [[307, "pwd.getpwall"]], "getpwnam() (in module pwd)": [[307, "pwd.getpwnam"]], "getpwuid() (in module pwd)": [[307, "pwd.getpwuid"]], "-": [[308, "cmdoption-python-m-py_compile"]], "--quiet": [[308, "cmdoption-python-m-py_compile-q"]], "<file>": [[308, "cmdoption-python-m-py_compile-arg-file"]], "checked_hash (py_compile.pycinvalidationmode attribute)": [[308, "py_compile.PycInvalidationMode.CHECKED_HASH"]], "pycompileerror": [[308, "py_compile.PyCompileError"]], "pycinvalidationmode (class in py_compile)": [[308, "py_compile.PycInvalidationMode"]], "timestamp (py_compile.pycinvalidationmode attribute)": [[308, "py_compile.PycInvalidationMode.TIMESTAMP"]], "unchecked_hash (py_compile.pycinvalidationmode attribute)": [[308, "py_compile.PycInvalidationMode.UNCHECKED_HASH"]], "byte-code": [[308, "index-0"]], "compile() (in module py_compile)": [[308, "py_compile.compile"]], "py_compile": [[308, "module-py_compile"]], "python--m-py_compile command line option": [[308, "cmdoption-python-m-py_compile"], [308, "cmdoption-python-m-py_compile-arg-file"], [308, "cmdoption-python-m-py_compile-q"]], "class (class in pyclbr)": [[309, "pyclbr.Class"]], "function (class in pyclbr)": [[309, "pyclbr.Function"]], "children (pyclbr.class attribute)": [[309, "pyclbr.Class.children"]], "children (pyclbr.function attribute)": [[309, "pyclbr.Function.children"]], "file (pyclbr.class attribute)": [[309, "pyclbr.Class.file"]], "file (pyclbr.function attribute)": [[309, "pyclbr.Function.file"]], "is_async (pyclbr.function attribute)": [[309, "pyclbr.Function.is_async"]], "lineno (pyclbr.class attribute)": [[309, "pyclbr.Class.lineno"]], "lineno (pyclbr.function attribute)": [[309, "pyclbr.Function.lineno"]], "methods (pyclbr.class attribute)": [[309, "pyclbr.Class.methods"]], "module (pyclbr.class attribute)": [[309, "pyclbr.Class.module"]], "module (pyclbr.function attribute)": [[309, "pyclbr.Function.module"]], "name (pyclbr.class attribute)": [[309, "pyclbr.Class.name"]], "name (pyclbr.function attribute)": [[309, "pyclbr.Function.name"]], "parent (pyclbr.class attribute)": [[309, "pyclbr.Class.parent"]], "parent (pyclbr.function attribute)": [[309, "pyclbr.Function.parent"]], "pyclbr": [[309, "module-pyclbr"]], "readmodule() (in module pyclbr)": [[309, "pyclbr.readmodule"]], "readmodule_ex() (in module pyclbr)": [[309, "pyclbr.readmodule_ex"]], "super (pyclbr.class attribute)": [[309, "pyclbr.Class.super"]], "pager": [[310, "index-1"]], "pythondocs": [[310, "index-2"]], "documentation": [[310, "index-0"]], "generation": [[310, "index-0"]], "help": [[310, "index-0"], [448, "index-0"]], "online": [[310, "index-0"]], "pydoc": [[310, "module-pydoc"]], "attlistdeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.AttlistDeclHandler"]], "characterdatahandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.CharacterDataHandler"]], "commenthandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.CommentHandler"]], "currentbyteindex (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.CurrentByteIndex"]], "currentcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.CurrentColumnNumber"]], "currentlinenumber (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.CurrentLineNumber"]], "defaulthandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.DefaultHandler"]], "defaulthandlerexpand() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.DefaultHandlerExpand"]], "elementdeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.ElementDeclHandler"]], "endcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.EndCdataSectionHandler"]], "enddoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler"]], "endelementhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.EndElementHandler"]], "endnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler"]], "entitydeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.EntityDeclHandler"]], "errorbyteindex (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.ErrorByteIndex"]], "errorcode (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.ErrorCode"]], "errorcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.ErrorColumnNumber"]], "errorlinenumber (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.ErrorLineNumber"]], "errorstring() (in module xml.parsers.expat)": [[311, "xml.parsers.expat.ErrorString"]], "expat": [[311, "index-0"]], "expaterror": [[311, "xml.parsers.expat.ExpatError"]], "externalentityparsercreate() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.ExternalEntityParserCreate"]], "externalentityrefhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.ExternalEntityRefHandler"]], "getbase() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.GetBase"]], "getinputcontext() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.GetInputContext"]], "notstandalonehandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.NotStandaloneHandler"]], "notationdeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.NotationDeclHandler"]], "parse() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.Parse"]], "parsefile() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.ParseFile"]], "parsercreate() (in module xml.parsers.expat)": [[311, "xml.parsers.expat.ParserCreate"]], "processinginstructionhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.ProcessingInstructionHandler"]], "setbase() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.SetBase"]], "setparamentityparsing() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.SetParamEntityParsing"]], "startcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.StartCdataSectionHandler"]], "startdoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler"]], "startelementhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.StartElementHandler"]], "startnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler"]], "unparsedentitydeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler"]], "useforeigndtd() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.UseForeignDTD"]], "xmlparsertype (in module xml.parsers.expat)": [[311, "xml.parsers.expat.XMLParserType"]], "xml_error_aborted (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_ABORTED"]], "xml_error_amplification_limit_breach (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH"]], "xml_error_async_entity (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY"]], "xml_error_attribute_external_entity_ref (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"]], "xml_error_bad_char_ref (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF"]], "xml_error_binary_entity_ref (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF"]], "xml_error_cant_change_feature_once_parsing (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"]], "xml_error_duplicate_attribute (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE"]], "xml_error_entity_declared_in_pe (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE"]], "xml_error_external_entity_handling (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING"]], "xml_error_feature_requires_xml_dtd (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD"]], "xml_error_finished (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_FINISHED"]], "xml_error_incomplete_pe (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE"]], "xml_error_incorrect_encoding (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING"]], "xml_error_invalid_argument (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT"]], "xml_error_invalid_token (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN"]], "xml_error_junk_after_doc_element (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT"]], "xml_error_misplaced_xml_pi (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI"]], "xml_error_not_standalone (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE"]], "xml_error_not_suspended (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED"]], "xml_error_no_buffer (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_NO_BUFFER"]], "xml_error_no_elements (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS"]], "xml_error_no_memory (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_NO_MEMORY"]], "xml_error_param_entity_ref (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF"]], "xml_error_partial_char (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR"]], "xml_error_publicid (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_PUBLICID"]], "xml_error_recursive_entity_ref (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF"]], "xml_error_reserved_namespace_uri (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI"]], "xml_error_reserved_prefix_xml (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML"]], "xml_error_reserved_prefix_xmlns (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS"]], "xml_error_suspended (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_SUSPENDED"]], "xml_error_suspend_pe (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE"]], "xml_error_syntax (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_SYNTAX"]], "xml_error_tag_mismatch (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH"]], "xml_error_text_decl (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_TEXT_DECL"]], "xml_error_unbound_prefix (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX"]], "xml_error_unclosed_cdata_section (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION"]], "xml_error_unclosed_token (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN"]], "xml_error_undeclaring_prefix (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX"]], "xml_error_undefined_entity (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY"]], "xml_error_unexpected_state (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE"]], "xml_error_unknown_encoding (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING"]], "xml_error_xml_decl (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.XML_ERROR_XML_DECL"]], "xmldeclhandler() (xml.parsers.expat.xmlparser method)": [[311, "xml.parsers.expat.xmlparser.XmlDeclHandler"]], "buffer_size (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.buffer_size"]], "buffer_text (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.buffer_text"]], "buffer_used (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.buffer_used"]], "code (xml.parsers.expat.expaterror attribute)": [[311, "xml.parsers.expat.ExpatError.code"]], "codes (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.codes"]], "lineno (xml.parsers.expat.expaterror attribute)": [[311, "xml.parsers.expat.ExpatError.lineno"]], "messages (in module xml.parsers.expat.errors)": [[311, "xml.parsers.expat.errors.messages"]], "offset (xml.parsers.expat.expaterror attribute)": [[311, "xml.parsers.expat.ExpatError.offset"]], "ordered_attributes (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.ordered_attributes"]], "pyexpat": [[311, "index-1"]], "specified_attributes (xml.parsers.expat.xmlparser attribute)": [[311, "xml.parsers.expat.xmlparser.specified_attributes"]], "xml.parsers.expat": [[311, "module-xml.parsers.expat"]], "xml.parsers.expat.errors": [[311, "module-xml.parsers.expat.errors"]], "xml.parsers.expat.model": [[311, "module-xml.parsers.expat.model"]], "empty": [[313, "queue.Empty"], [425, "index-20"], [427, "index-15"], [427, "index-9"]], "full": [[313, "queue.Full"]], "lifoqueue (class in queue)": [[313, "queue.LifoQueue"]], "priorityqueue (class in queue)": [[313, "queue.PriorityQueue"]], "queue (class in queue)": [[313, "queue.Queue"]], "simplequeue (class in queue)": [[313, "queue.SimpleQueue"]], "empty() (queue.queue method)": [[313, "queue.Queue.empty"]], "empty() (queue.simplequeue method)": [[313, "queue.SimpleQueue.empty"]], "full() (queue.queue method)": [[313, "queue.Queue.full"]], "get() (queue.queue method)": [[313, "queue.Queue.get"]], "get() (queue.simplequeue method)": [[313, "queue.SimpleQueue.get"]], "get_nowait() (queue.queue method)": [[313, "queue.Queue.get_nowait"]], "get_nowait() (queue.simplequeue method)": [[313, "queue.SimpleQueue.get_nowait"]], "join() (queue.queue method)": [[313, "queue.Queue.join"]], "put() (queue.queue method)": [[313, "queue.Queue.put"]], "put() (queue.simplequeue method)": [[313, "queue.SimpleQueue.put"]], "put_nowait() (queue.queue method)": [[313, "queue.Queue.put_nowait"]], "put_nowait() (queue.simplequeue method)": [[313, "queue.SimpleQueue.put_nowait"]], "qsize() (queue.queue method)": [[313, "queue.Queue.qsize"]], "qsize() (queue.simplequeue method)": [[313, "queue.SimpleQueue.qsize"]], "queue": [[313, "module-queue"]], "task_done() (queue.queue method)": [[313, "queue.Queue.task_done"]], "decode() (in module quopri)": [[314, "quopri.decode"]], "decodestring() (in module quopri)": [[314, "quopri.decodestring"]], "encode() (in module quopri)": [[314, "quopri.encode"]], "encodestring() (in module quopri)": [[314, "quopri.encodestring"]], "quopri": [[314, "module-quopri"]], "quoted-printable": [[314, "index-0"]], "quoted-printable encoding": [[314, "index-0"]], "random (class in random)": [[315, "random.Random"]], "systemrandom (class in random)": [[315, "random.SystemRandom"]], "betavariate() (in module random)": [[315, "random.betavariate"]], "binomialvariate() (in module random)": [[315, "random.binomialvariate"]], "choice() (in module random)": [[315, "random.choice"]], "choices() (in module random)": [[315, "random.choices"]], "expovariate() (in module random)": [[315, "random.expovariate"]], "gammavariate() (in module random)": [[315, "random.gammavariate"]], "gauss() (in module random)": [[315, "random.gauss"]], "getrandbits() (in module random)": [[315, "random.getrandbits"]], "getrandbits() (random.random method)": [[315, "random.Random.getrandbits"]], "getstate() (in module random)": [[315, "random.getstate"]], "getstate() (random.random method)": [[315, "random.Random.getstate"]], "lognormvariate() (in module random)": [[315, "random.lognormvariate"]], "normalvariate() (in module random)": [[315, "random.normalvariate"]], "paretovariate() (in module random)": [[315, "random.paretovariate"]], "randbytes() (in module random)": [[315, "random.randbytes"]], "randint() (in module random)": [[315, "random.randint"]], "random": [[315, "module-random"]], "random() (in module random)": [[315, "random.random"]], "random() (random.random method)": [[315, "random.Random.random"]], "randrange() (in module random)": [[315, "random.randrange"]], "sample() (in module random)": [[315, "random.sample"]], "seed() (in module random)": [[315, "random.seed"]], "seed() (random.random method)": [[315, "random.Random.seed"]], "setstate() (in module random)": [[315, "random.setstate"]], "setstate() (random.random method)": [[315, "random.Random.setstate"]], "shuffle() (in module random)": [[315, "random.shuffle"]], "triangular() (in module random)": [[315, "random.triangular"]], "uniform() (in module random)": [[315, "random.uniform"]], "vonmisesvariate() (in module random)": [[315, "random.vonmisesvariate"]], "weibullvariate() (in module random)": [[315, "random.weibullvariate"]], "() (parentheses)": [[316, "index-15"], [341, "index-36"], [341, "index-46"], [424, "index-28"], [424, "index-42"], [427, "index-22"], [427, "index-47"], [427, "index-8"], [433, "index-6"]], "(?": [[316, "index-16"]], "(?!": [[316, "index-22"]], "(?#": [[316, "index-20"]], "(?(": [[316, "index-25"]], "(?:": [[316, "index-17"]], "(?<!": [[316, "index-24"]], "(?<=": [[316, "index-23"]], "(?=": [[316, "index-21"]], "(?p<": [[316, "index-18"]], "(?p=": [[316, "index-19"]], "*+": [[316, "index-7"]], "*?": [[316, "index-6"]], "++": [[316, "index-7"]], "+?": [[316, "index-6"]], "?+": [[316, "index-7"]], "??": [[316, "index-6"]], "a (in module re)": [[316, "re.A"]], "ascii (in module re)": [[316, "re.ASCII"]], "debug (in module re)": [[316, "re.DEBUG"]], "dotall (in module re)": [[316, "re.DOTALL"]], "i (in module re)": [[316, "re.I"]], "ignorecase (in module re)": [[316, "re.IGNORECASE"]], "l (in module re)": [[316, "re.L"]], "locale (in module re)": [[316, "re.LOCALE"]], "m (in module re)": [[316, "re.M"]], "multiline (in module re)": [[316, "re.MULTILINE"]], "match (class in re)": [[316, "re.Match"]], "noflag (in module re)": [[316, "re.NOFLAG"]], "pattern (class in re)": [[316, "re.Pattern"]], "regexflag (class in re)": [[316, "re.RegexFlag"]], "s (in module re)": [[316, "re.S"]], "u (in module re)": [[316, "re.U"]], "unicode (in module re)": [[316, "re.UNICODE"]], "verbose (in module re)": [[316, "re.VERBOSE"]], "x (in module re)": [[316, "re.X"]], "\\a": [[316, "index-27"], [316, "index-37"], [432, "index-23"]], "\\b": [[316, "index-29"], [316, "index-28"], [316, "index-37"], [432, "index-23"]], "\\d": [[316, "index-31"], [316, "index-30"]], "\\s": [[316, "index-33"], [316, "index-32"]], "\\w": [[316, "index-35"], [316, "index-34"]], "\\z": [[316, "index-36"]], "\\\\": [[316, "index-37"], [432, "index-23"]], "\\f": [[316, "index-37"], [432, "index-23"]], "\\g": [[316, "index-39"]], "\\r": [[316, "index-37"], [432, "index-23"]], "\\t": [[316, "index-37"], [432, "index-23"]], "\\v": [[316, "index-37"], [432, "index-23"]], "__getitem__() (re.match method)": [[316, "re.Match.__getitem__"]], "colno (re.error attribute)": [[316, "re.error.colno"]], "compile() (in module re)": [[316, "re.compile"]], "end() (re.match method)": [[316, "re.Match.end"]], "endpos (re.match attribute)": [[316, "re.Match.endpos"]], "escape() (in module re)": [[316, "re.escape"]], "expand() (re.match method)": [[316, "re.Match.expand"]], "findall() (in module re)": [[316, "re.findall"]], "findall() (re.pattern method)": [[316, "re.Pattern.findall"]], "finditer() (in module re)": [[316, "re.finditer"]], "finditer() (re.pattern method)": [[316, "re.Pattern.finditer"]], "flags (re.pattern attribute)": [[316, "re.Pattern.flags"]], "fullmatch() (in module re)": [[316, "re.fullmatch"]], "fullmatch() (re.pattern method)": [[316, "re.Pattern.fullmatch"]], "group() (re.match method)": [[316, "re.Match.group"]], "groupdict() (re.match method)": [[316, "re.Match.groupdict"]], "groupindex (re.pattern attribute)": [[316, "re.Pattern.groupindex"]], "groups (re.pattern attribute)": [[316, "re.Pattern.groups"]], "groups() (re.match method)": [[316, "re.Match.groups"]], "in regular expressions": [[316, "index-0"], [316, "index-1"], [316, "index-10"], [316, "index-11"], [316, "index-12"], [316, "index-13"], [316, "index-14"], [316, "index-15"], [316, "index-16"], [316, "index-17"], [316, "index-18"], [316, "index-19"], [316, "index-2"], [316, "index-20"], [316, "index-21"], [316, "index-22"], [316, "index-23"], [316, "index-24"], [316, "index-25"], [316, "index-26"], [316, "index-27"], [316, "index-28"], [316, "index-29"], [316, "index-3"], [316, "index-30"], [316, "index-31"], [316, "index-32"], [316, "index-33"], [316, "index-34"], [316, "index-35"], [316, "index-36"], [316, "index-37"], [316, "index-38"], [316, "index-39"], [316, "index-4"], [316, "index-5"], [316, "index-6"], [316, "index-7"], [316, "index-8"], [316, "index-9"]], "lastgroup (re.match attribute)": [[316, "re.Match.lastgroup"]], "lastindex (re.match attribute)": [[316, "re.Match.lastindex"]], "lineno (re.error attribute)": [[316, "re.error.lineno"]], "match() (in module re)": [[316, "re.match"]], "match() (re.pattern method)": [[316, "re.Pattern.match"]], "msg (re.error attribute)": [[316, "re.error.msg"]], "pattern (re.pattern attribute)": [[316, "re.Pattern.pattern"]], "pattern (re.error attribute)": [[316, "re.error.pattern"]], "pos (re.match attribute)": [[316, "re.Match.pos"]], "pos (re.error attribute)": [[316, "re.error.pos"]], "purge() (in module re)": [[316, "re.purge"]], "re (re.match attribute)": [[316, "re.Match.re"]], "scanf()": [[316, "index-40"]], "search() (in module re)": [[316, "re.search"]], "search() (re.pattern method)": [[316, "re.Pattern.search"]], "span() (re.match method)": [[316, "re.Match.span"]], "split() (in module re)": [[316, "re.split"]], "split() (re.pattern method)": [[316, "re.Pattern.split"]], "start() (re.match method)": [[316, "re.Match.start"]], "string (re.match attribute)": [[316, "re.Match.string"]], "sub() (in module re)": [[316, "re.sub"]], "sub() (re.pattern method)": [[316, "re.Pattern.sub"]], "subn() (in module re)": [[316, "re.subn"]], "subn() (re.pattern method)": [[316, "re.Pattern.subn"]], "{} (curly brackets)": [[316, "index-8"], [342, "index-2"], [427, "index-16"], [427, "index-17"], [432, "index-25"]], "| (vertical bar)": [[316, "index-14"], [341, "index-16"], [427, "index-76"]], "add_history() (in module readline)": [[317, "readline.add_history"]], "append_history_file() (in module readline)": [[317, "readline.append_history_file"]], "clear_history() (in module readline)": [[317, "readline.clear_history"]], "get_begidx() (in module readline)": [[317, "readline.get_begidx"]], "get_completer() (in module readline)": [[317, "readline.get_completer"]], "get_completer_delims() (in module readline)": [[317, "readline.get_completer_delims"]], "get_completion_type() (in module readline)": [[317, "readline.get_completion_type"]], "get_current_history_length() (in module readline)": [[317, "readline.get_current_history_length"]], "get_endidx() (in module readline)": [[317, "readline.get_endidx"]], "get_history_item() (in module readline)": [[317, "readline.get_history_item"]], "get_history_length() (in module readline)": [[317, "readline.get_history_length"]], "get_line_buffer() (in module readline)": [[317, "readline.get_line_buffer"]], "insert_text() (in module readline)": [[317, "readline.insert_text"]], "parse_and_bind() (in module readline)": [[317, "readline.parse_and_bind"]], "read_history_file() (in module readline)": [[317, "readline.read_history_file"]], "read_init_file() (in module readline)": [[317, "readline.read_init_file"]], "readline": [[317, "module-readline"]], "redisplay() (in module readline)": [[317, "readline.redisplay"]], "remove_history_item() (in module readline)": [[317, "readline.remove_history_item"]], "replace_history_item() (in module readline)": [[317, "readline.replace_history_item"]], "set_auto_history() (in module readline)": [[317, "readline.set_auto_history"]], "set_completer() (in module readline)": [[317, "readline.set_completer"]], "set_completer_delims() (in module readline)": [[317, "readline.set_completer_delims"]], "set_completion_display_matches_hook() (in module readline)": [[317, "readline.set_completion_display_matches_hook"]], "set_history_length() (in module readline)": [[317, "readline.set_history_length"]], "set_pre_input_hook() (in module readline)": [[317, "readline.set_pre_input_hook"]], "set_startup_hook() (in module readline)": [[317, "readline.set_startup_hook"]], "write_history_file() (in module readline)": [[317, "readline.write_history_file"]], "repr (class in reprlib)": [[318, "reprlib.Repr"]], "arepr (in module reprlib)": [[318, "reprlib.aRepr"]], "fillvalue (reprlib.repr attribute)": [[318, "reprlib.Repr.fillvalue"]], "indent (reprlib.repr attribute)": [[318, "reprlib.Repr.indent"]], "maxarray (reprlib.repr attribute)": [[318, "reprlib.Repr.maxarray"]], "maxdeque (reprlib.repr attribute)": [[318, "reprlib.Repr.maxdeque"]], "maxdict (reprlib.repr attribute)": [[318, "reprlib.Repr.maxdict"]], "maxfrozenset (reprlib.repr attribute)": [[318, "reprlib.Repr.maxfrozenset"]], "maxlevel (reprlib.repr attribute)": [[318, "reprlib.Repr.maxlevel"]], "maxlist (reprlib.repr attribute)": [[318, "reprlib.Repr.maxlist"]], "maxlong (reprlib.repr attribute)": [[318, "reprlib.Repr.maxlong"]], "maxother (reprlib.repr attribute)": [[318, "reprlib.Repr.maxother"]], "maxset (reprlib.repr attribute)": [[318, "reprlib.Repr.maxset"]], "maxstring (reprlib.repr attribute)": [[318, "reprlib.Repr.maxstring"]], "maxtuple (reprlib.repr attribute)": [[318, "reprlib.Repr.maxtuple"]], "recursive_repr() (in module reprlib)": [[318, "reprlib.recursive_repr"]], "repr() (in module reprlib)": [[318, "reprlib.repr"]], "repr() (reprlib.repr method)": [[318, "reprlib.Repr.repr"]], "repr1() (reprlib.repr method)": [[318, "reprlib.Repr.repr1"]], "reprlib": [[318, "module-reprlib"]], "rlimit_as (in module resource)": [[319, "resource.RLIMIT_AS"]], "rlimit_core (in module resource)": [[319, "resource.RLIMIT_CORE"]], "rlimit_cpu (in module resource)": [[319, "resource.RLIMIT_CPU"]], "rlimit_data (in module resource)": [[319, "resource.RLIMIT_DATA"]], "rlimit_fsize (in module resource)": [[319, "resource.RLIMIT_FSIZE"]], "rlimit_kqueues (in module resource)": [[319, "resource.RLIMIT_KQUEUES"]], "rlimit_memlock (in module resource)": [[319, "resource.RLIMIT_MEMLOCK"]], "rlimit_msgqueue (in module resource)": [[319, "resource.RLIMIT_MSGQUEUE"]], "rlimit_nice (in module resource)": [[319, "resource.RLIMIT_NICE"]], "rlimit_nofile (in module resource)": [[319, "resource.RLIMIT_NOFILE"]], "rlimit_nproc (in module resource)": [[319, "resource.RLIMIT_NPROC"]], "rlimit_npts (in module resource)": [[319, "resource.RLIMIT_NPTS"]], "rlimit_ofile (in module resource)": [[319, "resource.RLIMIT_OFILE"]], "rlimit_rss (in module resource)": [[319, "resource.RLIMIT_RSS"]], "rlimit_rtprio (in module resource)": [[319, "resource.RLIMIT_RTPRIO"]], "rlimit_rttime (in module resource)": [[319, "resource.RLIMIT_RTTIME"]], "rlimit_sbsize (in module resource)": [[319, "resource.RLIMIT_SBSIZE"]], "rlimit_sigpending (in module resource)": [[319, "resource.RLIMIT_SIGPENDING"]], "rlimit_stack (in module resource)": [[319, "resource.RLIMIT_STACK"]], "rlimit_swap (in module resource)": [[319, "resource.RLIMIT_SWAP"]], "rlimit_vmem (in module resource)": [[319, "resource.RLIMIT_VMEM"]], "rlim_infinity (in module resource)": [[319, "resource.RLIM_INFINITY"]], "rusage_both (in module resource)": [[319, "resource.RUSAGE_BOTH"]], "rusage_children (in module resource)": [[319, "resource.RUSAGE_CHILDREN"]], "rusage_self (in module resource)": [[319, "resource.RUSAGE_SELF"]], "rusage_thread (in module resource)": [[319, "resource.RUSAGE_THREAD"]], "getpagesize() (in module resource)": [[319, "resource.getpagesize"]], "getrlimit() (in module resource)": [[319, "resource.getrlimit"]], "getrusage() (in module resource)": [[319, "resource.getrusage"]], "prlimit() (in module resource)": [[319, "resource.prlimit"]], "resource": [[319, "module-resource"]], "setrlimit() (in module resource)": [[319, "resource.setrlimit"]], "completer (class in rlcompleter)": [[320, "rlcompleter.Completer"]], "complete() (rlcompleter.completer method)": [[320, "rlcompleter.Completer.complete"]], "rlcompleter": [[320, "module-rlcompleter"]], "pep 338": [[321, "index-6"], [429, "index-26"], [452, "index-0"], [464, "index-7"]], "run_module() (in module runpy)": [[321, "runpy.run_module"]], "run_path() (in module runpy)": [[321, "runpy.run_path"]], "runpy": [[321, "module-runpy"]], "cancel() (sched.scheduler method)": [[322, "sched.scheduler.cancel"]], "empty() (sched.scheduler method)": [[322, "sched.scheduler.empty"]], "enter() (sched.scheduler method)": [[322, "sched.scheduler.enter"]], "enterabs() (sched.scheduler method)": [[322, "sched.scheduler.enterabs"]], "event scheduling": [[322, "index-0"]], "queue (sched.scheduler attribute)": [[322, "sched.scheduler.queue"]], "run() (sched.scheduler method)": [[322, "sched.scheduler.run"]], "sched": [[322, "module-sched"]], "scheduler (class in sched)": [[322, "sched.scheduler"]], "pep 506": [[323, "index-0"], [476, "index-28"]], "systemrandom (class in secrets)": [[323, "secrets.SystemRandom"]], "choice() (in module secrets)": [[323, "secrets.choice"]], "compare_digest() (in module secrets)": [[323, "secrets.compare_digest"]], "randbelow() (in module secrets)": [[323, "secrets.randbelow"]], "randbits() (in module secrets)": [[323, "secrets.randbits"]], "secrets": [[323, "module-secrets"]], "token_bytes() (in module secrets)": [[323, "secrets.token_bytes"]], "token_hex() (in module secrets)": [[323, "secrets.token_hex"]], "token_urlsafe() (in module secrets)": [[323, "secrets.token_urlsafe"]], "security considerations": [[324, "index-0"]], "pipe_buf (in module select)": [[325, "select.PIPE_BUF"]], "winsock": [[325, "index-2"]], "close() (select.devpoll method)": [[325, "select.devpoll.close"]], "close() (select.epoll method)": [[325, "select.epoll.close"]], "close() (select.kqueue method)": [[325, "select.kqueue.close"]], "closed (select.devpoll attribute)": [[325, "select.devpoll.closed"]], "closed (select.epoll attribute)": [[325, "select.epoll.closed"]], "closed (select.kqueue attribute)": [[325, "select.kqueue.closed"]], "control() (select.kqueue method)": [[325, "select.kqueue.control"]], "data (select.kevent attribute)": [[325, "select.kevent.data"]], "devpoll() (in module select)": [[325, "select.devpoll"]], "epoll() (in module select)": [[325, "select.epoll"]], "fflags (select.kevent attribute)": [[325, "select.kevent.fflags"]], "fileno() (select.devpoll method)": [[325, "select.devpoll.fileno"]], "fileno() (select.epoll method)": [[325, "select.epoll.fileno"]], "fileno() (select.kqueue method)": [[325, "select.kqueue.fileno"]], "filter (select.kevent attribute)": [[325, "select.kevent.filter"]], "flags (select.kevent attribute)": [[325, "select.kevent.flags"]], "fromfd() (select.epoll method)": [[325, "select.epoll.fromfd"]], "fromfd() (select.kqueue method)": [[325, "select.kqueue.fromfd"]], "ident (select.kevent attribute)": [[325, "select.kevent.ident"]], "kevent() (in module select)": [[325, "select.kevent"]], "kqueue() (in module select)": [[325, "select.kqueue"]], "modify() (select.devpoll method)": [[325, "select.devpoll.modify"]], "modify() (select.epoll method)": [[325, "select.epoll.modify"]], "modify() (select.poll method)": [[325, "select.poll.modify"]], "poll() (in module select)": [[325, "select.poll"]], "poll() (select.devpoll method)": [[325, "select.devpoll.poll"]], "poll() (select.epoll method)": [[325, "select.epoll.poll"]], "poll() (select.poll method)": [[325, "select.poll.poll"]], "register() (select.devpoll method)": [[325, "select.devpoll.register"]], "register() (select.epoll method)": [[325, "select.epoll.register"]], "register() (select.poll method)": [[325, "select.poll.register"]], "select": [[325, "module-select"]], "select() (in module select)": [[325, "select.select"]], "socket() (in module socket)": [[325, "index-1"]], "udata (select.kevent attribute)": [[325, "select.kevent.udata"]], "unregister() (select.devpoll method)": [[325, "select.devpoll.unregister"]], "unregister() (select.epoll method)": [[325, "select.epoll.unregister"]], "unregister() (select.poll method)": [[325, "select.poll.unregister"]], "baseselector (class in selectors)": [[326, "selectors.BaseSelector"]], "defaultselector (class in selectors)": [[326, "selectors.DefaultSelector"]], "devpollselector (class in selectors)": [[326, "selectors.DevpollSelector"]], "event_read (in module selectors)": [[326, "selectors.EVENT_READ"]], "event_write (in module selectors)": [[326, "selectors.EVENT_WRITE"]], "epollselector (class in selectors)": [[326, "selectors.EpollSelector"]], "kqueueselector (class in selectors)": [[326, "selectors.KqueueSelector"]], "pollselector (class in selectors)": [[326, "selectors.PollSelector"]], "selectselector (class in selectors)": [[326, "selectors.SelectSelector"]], "selectorkey (class in selectors)": [[326, "selectors.SelectorKey"]], "close() (selectors.baseselector method)": [[326, "selectors.BaseSelector.close"]], "data (selectors.selectorkey attribute)": [[326, "selectors.SelectorKey.data"]], "events (selectors.selectorkey attribute)": [[326, "selectors.SelectorKey.events"]], "fd (selectors.selectorkey attribute)": [[326, "selectors.SelectorKey.fd"]], "fileno() (selectors.devpollselector method)": [[326, "selectors.DevpollSelector.fileno"]], "fileno() (selectors.epollselector method)": [[326, "selectors.EpollSelector.fileno"]], "fileno() (selectors.kqueueselector method)": [[326, "selectors.KqueueSelector.fileno"]], "fileobj (selectors.selectorkey attribute)": [[326, "selectors.SelectorKey.fileobj"]], "get_key() (selectors.baseselector method)": [[326, "selectors.BaseSelector.get_key"]], "get_map() (selectors.baseselector method)": [[326, "selectors.BaseSelector.get_map"]], "modify() (selectors.baseselector method)": [[326, "selectors.BaseSelector.modify"]], "register() (selectors.baseselector method)": [[326, "selectors.BaseSelector.register"]], "select() (selectors.baseselector method)": [[326, "selectors.BaseSelector.select"]], "selectors": [[326, "module-selectors"]], "unregister() (selectors.baseselector method)": [[326, "selectors.BaseSelector.unregister"]], "bsddbshelf (class in shelve)": [[327, "shelve.BsdDbShelf"]], "dbfilenameshelf (class in shelve)": [[327, "shelve.DbfilenameShelf"]], "shelf (class in shelve)": [[327, "shelve.Shelf"]], "close() (shelve.shelf method)": [[327, "shelve.Shelf.close"]], "open() (in module shelve)": [[327, "shelve.open"]], "sync() (shelve.shelf method)": [[327, "shelve.Shelf.sync"]], "commenters (shlex.shlex attribute)": [[328, "shlex.shlex.commenters"]], "debug (shlex.shlex attribute)": [[328, "shlex.shlex.debug"]], "eof (shlex.shlex attribute)": [[328, "shlex.shlex.eof"]], "error_leader() (shlex.shlex method)": [[328, "shlex.shlex.error_leader"]], "escape (shlex.shlex attribute)": [[328, "shlex.shlex.escape"]], "escapedquotes (shlex.shlex attribute)": [[328, "shlex.shlex.escapedquotes"]], "get_token() (shlex.shlex method)": [[328, "shlex.shlex.get_token"]], "infile (shlex.shlex attribute)": [[328, "shlex.shlex.infile"]], "instream (shlex.shlex attribute)": [[328, "shlex.shlex.instream"]], "join() (in module shlex)": [[328, "shlex.join"]], "lineno (shlex.shlex attribute)": [[328, "shlex.shlex.lineno"]], "pop_source() (shlex.shlex method)": [[328, "shlex.shlex.pop_source"]], "punctuation_chars (shlex.shlex attribute)": [[328, "shlex.shlex.punctuation_chars"]], "push_source() (shlex.shlex method)": [[328, "shlex.shlex.push_source"]], "push_token() (shlex.shlex method)": [[328, "shlex.shlex.push_token"]], "quote() (in module shlex)": [[328, "shlex.quote"]], "quotes (shlex.shlex attribute)": [[328, "shlex.shlex.quotes"]], "read_token() (shlex.shlex method)": [[328, "shlex.shlex.read_token"]], "shlex": [[328, "module-shlex"]], "shlex (class in shlex)": [[328, "shlex.shlex"]], "source (shlex.shlex attribute)": [[328, "shlex.shlex.source"]], "sourcehook() (shlex.shlex method)": [[328, "shlex.shlex.sourcehook"]], "split() (in module shlex)": [[328, "shlex.split"]], "token (shlex.shlex attribute)": [[328, "shlex.shlex.token"]], "whitespace (shlex.shlex attribute)": [[328, "shlex.shlex.whitespace"]], "whitespace_split (shlex.shlex attribute)": [[328, "shlex.shlex.whitespace_split"]], "wordchars (shlex.shlex attribute)": [[328, "shlex.shlex.wordchars"]], "samefileerror": [[329, "shutil.SameFileError"]], "avoids_symlink_attacks (shutil.rmtree attribute)": [[329, "shutil.rmtree.avoids_symlink_attacks"]], "chown() (in module shutil)": [[329, "shutil.chown"]], "copy() (in module shutil)": [[329, "shutil.copy"]], "copy2() (in module shutil)": [[329, "shutil.copy2"]], "copyfile() (in module shutil)": [[329, "shutil.copyfile"]], "copyfileobj() (in module shutil)": [[329, "shutil.copyfileobj"]], "copying": [[329, "index-0"]], "copying files": [[329, "index-0"]], "copymode() (in module shutil)": [[329, "shutil.copymode"]], "copystat() (in module shutil)": [[329, "shutil.copystat"]], "copytree() (in module shutil)": [[329, "shutil.copytree"]], "disk_usage() (in module shutil)": [[329, "shutil.disk_usage"]], "get_archive_formats() (in module shutil)": [[329, "shutil.get_archive_formats"]], "get_terminal_size() (in module shutil)": [[329, "shutil.get_terminal_size"]], "get_unpack_formats() (in module shutil)": [[329, "shutil.get_unpack_formats"]], "ignore_patterns() (in module shutil)": [[329, "shutil.ignore_patterns"]], "make_archive() (in module shutil)": [[329, "shutil.make_archive"]], "move() (in module shutil)": [[329, "shutil.move"]], "register_archive_format() (in module shutil)": [[329, "shutil.register_archive_format"]], "register_unpack_format() (in module shutil)": [[329, "shutil.register_unpack_format"]], "rmtree() (in module shutil)": [[329, "shutil.rmtree"]], "shutil": [[329, "module-shutil"]], "unpack_archive() (in module shutil)": [[329, "shutil.unpack_archive"]], "unregister_archive_format() (in module shutil)": [[329, "shutil.unregister_archive_format"]], "unregister_unpack_format() (in module shutil)": [[329, "shutil.unregister_unpack_format"]], "which() (in module shutil)": [[329, "shutil.which"]], "ctrl_break_event (in module signal)": [[330, "signal.CTRL_BREAK_EVENT"]], "ctrl_c_event (in module signal)": [[330, "signal.CTRL_C_EVENT"]], "handlers (class in signal)": [[330, "signal.Handlers"]], "itimer_prof (in module signal)": [[330, "signal.ITIMER_PROF"]], "itimer_real (in module signal)": [[330, "signal.ITIMER_REAL"]], "itimer_virtual (in module signal)": [[330, "signal.ITIMER_VIRTUAL"]], "itimererror": [[330, "signal.ItimerError"]], "nsig (in module signal)": [[330, "signal.NSIG"]], "sigabrt (in module signal)": [[330, "signal.SIGABRT"]], "sigalrm (in module signal)": [[330, "signal.SIGALRM"]], "sigbreak (in module signal)": [[330, "signal.SIGBREAK"]], "sigbus (in module signal)": [[330, "signal.SIGBUS"]], "sigchld (in module signal)": [[330, "signal.SIGCHLD"]], "sigcld (in module signal)": [[330, "signal.SIGCLD"]], "sigcont (in module signal)": [[330, "signal.SIGCONT"]], "sigfpe (in module signal)": [[330, "signal.SIGFPE"]], "sighup (in module signal)": [[330, "signal.SIGHUP"]], "sigill (in module signal)": [[330, "signal.SIGILL"]], "sigint (in module signal)": [[330, "signal.SIGINT"]], "sigkill (in module signal)": [[330, "signal.SIGKILL"]], "sigpipe (in module signal)": [[330, "signal.SIGPIPE"]], "sigsegv (in module signal)": [[330, "signal.SIGSEGV"]], "sigstkflt (in module signal)": [[330, "signal.SIGSTKFLT"]], "sigterm (in module signal)": [[330, "signal.SIGTERM"]], "sigusr1 (in module signal)": [[330, "signal.SIGUSR1"]], "sigusr2 (in module signal)": [[330, "signal.SIGUSR2"]], "sigwinch (in module signal)": [[330, "signal.SIGWINCH"]], "sig_block (in module signal)": [[330, "signal.SIG_BLOCK"]], "sig_dfl (in module signal)": [[330, "signal.SIG_DFL"]], "sig_ign (in module signal)": [[330, "signal.SIG_IGN"]], "sig_setmask (in module signal)": [[330, "signal.SIG_SETMASK"]], "sig_unblock (in module signal)": [[330, "signal.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[330, "signal.Sigmasks"]], "signals (class in signal)": [[330, "signal.Signals"]], "alarm() (in module signal)": [[330, "signal.alarm"]], "getitimer() (in module signal)": [[330, "signal.getitimer"]], "getsignal() (in module signal)": [[330, "signal.getsignal"]], "pause() (in module signal)": [[330, "signal.pause"]], "pidfd_send_signal() (in module signal)": [[330, "signal.pidfd_send_signal"]], "pthread_kill() (in module signal)": [[330, "signal.pthread_kill"]], "pthread_sigmask() (in module signal)": [[330, "signal.pthread_sigmask"]], "raise_signal() (in module signal)": [[330, "signal.raise_signal"]], "set_wakeup_fd() (in module signal)": [[330, "signal.set_wakeup_fd"]], "setitimer() (in module signal)": [[330, "signal.setitimer"]], "siginterrupt() (in module signal)": [[330, "signal.siginterrupt"]], "signal() (in module signal)": [[330, "signal.signal"]], "sigpending() (in module signal)": [[330, "signal.sigpending"]], "sigtimedwait() (in module signal)": [[330, "signal.sigtimedwait"]], "sigwait() (in module signal)": [[330, "signal.sigwait"]], "sigwaitinfo() (in module signal)": [[330, "signal.sigwaitinfo"]], "strsignal() (in module signal)": [[330, "signal.strsignal"]], "valid_signals() (in module signal)": [[330, "signal.valid_signals"]], "--user-base": [[331, "cmdoption-site-user-base"]], "--user-site": [[331, "cmdoption-site-user-site"]], "enable_user_site (in module site)": [[331, "site.ENABLE_USER_SITE"]], "pep 370": [[331, "index-9"], [452, "index-15"], [452, "index-37"], [452, "index-38"], [465, "index-7"]], "prefixes (in module site)": [[331, "site.PREFIXES"]], "pythonuserbase": [[331, "index-7"], [331, "index-8"], [452, "envvar-PYTHONUSERBASE"], [465, "index-4"]], "user_base (in module site)": [[331, "site.USER_BASE"]], "user_site (in module site)": [[331, "site.USER_SITE"]], "addsitedir() (in module site)": [[331, "site.addsitedir"]], "comment": [[331, "index-2"], [432, "index-4"], [446, "index-0"]], "getsitepackages() (in module site)": [[331, "site.getsitepackages"]], "getuserbase() (in module site)": [[331, "site.getuserbase"]], "getusersitepackages() (in module site)": [[331, "site.getusersitepackages"]], "main() (in module site)": [[331, "site.main"]], "site": [[331, "module-site"]], "site command line option": [[331, "cmdoption-site-user-base"], [331, "cmdoption-site-user-site"]], "site-packages": [[331, "index-1"]], "sitecustomize": [[331, "module-sitecustomize"], [435, "index-2"], [435, "index-4"]], "usercustomize": [[331, "module-usercustomize"], [435, "index-3"], [435, "index-5"]], "lmtp (class in smtplib)": [[332, "smtplib.LMTP"]], "rfc 1869": [[332, "index-2"], [332, "index-5"]], "rfc 4954": [[332, "index-7"], [332, "index-8"]], "rfc 821": [[332, "index-1"], [332, "index-4"]], "smtp": [[332, "index-0"]], "smtp (class in smtplib)": [[332, "smtplib.SMTP"]], "smtpauthenticationerror": [[332, "smtplib.SMTPAuthenticationError"]], "smtpconnecterror": [[332, "smtplib.SMTPConnectError"]], "smtpdataerror": [[332, "smtplib.SMTPDataError"]], "smtpexception": [[332, "smtplib.SMTPException"]], "smtpheloerror": [[332, "smtplib.SMTPHeloError"]], "smtpnotsupportederror": [[332, "smtplib.SMTPNotSupportedError"]], "smtprecipientsrefused": [[332, "smtplib.SMTPRecipientsRefused"]], "smtpresponseexception": [[332, "smtplib.SMTPResponseException"]], "smtpsenderrefused": [[332, "smtplib.SMTPSenderRefused"]], "smtpserverdisconnected": [[332, "smtplib.SMTPServerDisconnected"]], "smtp_ssl (class in smtplib)": [[332, "smtplib.SMTP_SSL"]], "simple mail transfer protocol": [[332, "index-0"]], "auth() (smtplib.smtp method)": [[332, "smtplib.SMTP.auth"]], "connect() (smtplib.smtp method)": [[332, "smtplib.SMTP.connect"]], "docmd() (smtplib.smtp method)": [[332, "smtplib.SMTP.docmd"]], "ehlo() (smtplib.smtp method)": [[332, "smtplib.SMTP.ehlo"]], "ehlo_or_helo_if_needed() (smtplib.smtp method)": [[332, "smtplib.SMTP.ehlo_or_helo_if_needed"]], "has_extn() (smtplib.smtp method)": [[332, "smtplib.SMTP.has_extn"]], "helo() (smtplib.smtp method)": [[332, "smtplib.SMTP.helo"]], "login() (smtplib.smtp method)": [[332, "smtplib.SMTP.login"]], "quit() (smtplib.smtp method)": [[332, "smtplib.SMTP.quit"]], "send_message() (smtplib.smtp method)": [[332, "smtplib.SMTP.send_message"]], "sendmail() (smtplib.smtp method)": [[332, "smtplib.SMTP.sendmail"]], "set_debuglevel() (smtplib.smtp method)": [[332, "smtplib.SMTP.set_debuglevel"]], "smtplib": [[332, "module-smtplib"]], "starttls() (smtplib.smtp method)": [[332, "smtplib.SMTP.starttls"]], "verify() (smtplib.smtp method)": [[332, "smtplib.SMTP.verify"]], "pep 594#sndhdr": [[333, "index-1"]], "sndhdr": [[333, "module-sndhdr"]], "tests (in module sndhdr)": [[333, "sndhdr.tests"]], "what() (in module sndhdr)": [[333, "sndhdr.what"]], "whathdr() (in module sndhdr)": [[333, "sndhdr.whathdr"]], "af_alg (in module socket)": [[334, "socket.AF_ALG"]], "af_can (in module socket)": [[334, "socket.AF_CAN"]], "af_divert (in module socket)": [[334, "socket.AF_DIVERT"]], "af_hyperv (in module socket)": [[334, "socket.AF_HYPERV"]], "af_inet (in module socket)": [[334, "socket.AF_INET"]], "af_inet6 (in module socket)": [[334, "socket.AF_INET6"]], "af_link (in module socket)": [[334, "socket.AF_LINK"]], "af_packet (in module socket)": [[334, "socket.AF_PACKET"]], "af_qipcrtr (in module socket)": [[334, "socket.AF_QIPCRTR"]], "af_rds (in module socket)": [[334, "socket.AF_RDS"]], "af_unix (in module socket)": [[334, "socket.AF_UNIX"]], "af_unspec (in module socket)": [[334, "socket.AF_UNSPEC"]], "af_vsock (in module socket)": [[334, "socket.AF_VSOCK"]], "bdaddr_any (in module socket)": [[334, "socket.BDADDR_ANY"]], "bdaddr_local (in module socket)": [[334, "socket.BDADDR_LOCAL"]], "can_bcm (in module socket)": [[334, "socket.CAN_BCM"]], "can_isotp (in module socket)": [[334, "socket.CAN_ISOTP"]], "can_j1939 (in module socket)": [[334, "socket.CAN_J1939"]], "can_raw_fd_frames (in module socket)": [[334, "socket.CAN_RAW_FD_FRAMES"]], "can_raw_join_filters (in module socket)": [[334, "socket.CAN_RAW_JOIN_FILTERS"]], "cmsg_len() (in module socket)": [[334, "socket.CMSG_LEN"]], "cmsg_space() (in module socket)": [[334, "socket.CMSG_SPACE"]], "ethertype_arp (in module socket)": [[334, "socket.ETHERTYPE_ARP"]], "ethertype_ip (in module socket)": [[334, "socket.ETHERTYPE_IP"]], "ethertype_ipv6 (in module socket)": [[334, "socket.ETHERTYPE_IPV6"]], "ethertype_vlan (in module socket)": [[334, "socket.ETHERTYPE_VLAN"]], "eth_p_all (in module socket)": [[334, "socket.ETH_P_ALL"]], "hci_data_dir (in module socket)": [[334, "socket.HCI_DATA_DIR"]], "hci_filter (in module socket)": [[334, "socket.HCI_FILTER"]], "hci_time_stamp (in module socket)": [[334, "socket.HCI_TIME_STAMP"]], "hvsocket_address_flag_passthru (in module socket)": [[334, "socket.HVSOCKET_ADDRESS_FLAG_PASSTHRU"]], "hvsocket_connected_suspend (in module socket)": [[334, "socket.HVSOCKET_CONNECTED_SUSPEND"]], "hvsocket_connect_timeout (in module socket)": [[334, "socket.HVSOCKET_CONNECT_TIMEOUT"]], "hvsocket_connect_timeout_max (in module socket)": [[334, "socket.HVSOCKET_CONNECT_TIMEOUT_MAX"]], "hv_guid_broadcast (in module socket)": [[334, "socket.HV_GUID_BROADCAST"]], "hv_guid_children (in module socket)": [[334, "socket.HV_GUID_CHILDREN"]], "hv_guid_loopback (in module socket)": [[334, "socket.HV_GUID_LOOPBACK"]], "hv_guid_parent (in module socket)": [[334, "socket.HV_GUID_PARENT"]], "hv_guid_wildcard (in module socket)": [[334, "socket.HV_GUID_WILDCARD"]], "hv_guid_zero (in module socket)": [[334, "socket.HV_GUID_ZERO"]], "hv_protocol_raw (in module socket)": [[334, "socket.HV_PROTOCOL_RAW"]], "ioctl_vm_sockets_get_local_cid (in module socket)": [[334, "socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID"]], "local_creds (in module socket)": [[334, "socket.LOCAL_CREDS"]], "local_creds_persistent (in module socket)": [[334, "socket.LOCAL_CREDS_PERSISTENT"]], "pf_can (in module socket)": [[334, "socket.PF_CAN"]], "pf_divert (in module socket)": [[334, "socket.PF_DIVERT"]], "pf_packet (in module socket)": [[334, "socket.PF_PACKET"]], "pf_rds (in module socket)": [[334, "socket.PF_RDS"]], "rfc 3493": [[334, "index-15"]], "rfc 3542": [[334, "index-3"]], "scm_creds2 (in module socket)": [[334, "socket.SCM_CREDS2"]], "sio_keepalive_vals (in module socket)": [[334, "socket.SIO_KEEPALIVE_VALS"]], "sio_loopback_fast_path (in module socket)": [[334, "socket.SIO_LOOPBACK_FAST_PATH"]], "sio_rcvall (in module socket)": [[334, "socket.SIO_RCVALL"]], "sock_cloexec (in module socket)": [[334, "socket.SOCK_CLOEXEC"]], "sock_dgram (in module socket)": [[334, "socket.SOCK_DGRAM"]], "sock_nonblock (in module socket)": [[334, "socket.SOCK_NONBLOCK"]], "sock_raw (in module socket)": [[334, "socket.SOCK_RAW"]], "sock_rdm (in module socket)": [[334, "socket.SOCK_RDM"]], "sock_seqpacket (in module socket)": [[334, "socket.SOCK_SEQPACKET"]], "sock_stream (in module socket)": [[334, "socket.SOCK_STREAM"]], "sol_alg (in module socket)": [[334, "socket.SOL_ALG"]], "sol_rds (in module socket)": [[334, "socket.SOL_RDS"]], "somaxconn (in module socket)": [[334, "socket.SOMAXCONN"]], "so_incoming_cpu (in module socket)": [[334, "socket.SO_INCOMING_CPU"]], "sockettype (in module socket)": [[334, "socket.SocketType"]], "accept() (socket.socket method)": [[334, "socket.socket.accept"]], "bind() (socket.socket method)": [[334, "socket.socket.bind"]], "close() (in module socket)": [[334, "socket.close"]], "close() (socket.socket method)": [[334, "socket.socket.close"]], "connect() (socket.socket method)": [[334, "socket.socket.connect"]], "connect_ex() (socket.socket method)": [[334, "socket.socket.connect_ex"]], "create_connection() (in module socket)": [[334, "socket.create_connection"]], "create_server() (in module socket)": [[334, "socket.create_server"]], "detach() (socket.socket method)": [[334, "socket.socket.detach"]], "dup() (socket.socket method)": [[334, "socket.socket.dup"]], "family (socket.socket attribute)": [[334, "socket.socket.family"]], "fileno() (socket.socket method)": [[334, "socket.socket.fileno"]], "fromfd() (in module socket)": [[334, "socket.fromfd"]], "fromshare() (in module socket)": [[334, "socket.fromshare"]], "gaierror": [[334, "socket.gaierror"]], "get_inheritable() (socket.socket method)": [[334, "socket.socket.get_inheritable"]], "getaddrinfo() (in module socket)": [[334, "socket.getaddrinfo"]], "getblocking() (socket.socket method)": [[334, "socket.socket.getblocking"]], "getdefaulttimeout() (in module socket)": [[334, "socket.getdefaulttimeout"]], "getfqdn() (in module socket)": [[334, "socket.getfqdn"]], "gethostbyname() (in module socket)": [[334, "socket.gethostbyname"]], "gethostbyname_ex() (in module socket)": [[334, "socket.gethostbyname_ex"]], "getnameinfo() (in module socket)": [[334, "socket.getnameinfo"]], "getpeername() (socket.socket method)": [[334, "socket.socket.getpeername"]], "getprotobyname() (in module socket)": [[334, "socket.getprotobyname"]], "getservbyname() (in module socket)": [[334, "socket.getservbyname"]], "getservbyport() (in module socket)": [[334, "socket.getservbyport"]], "getsockname() (socket.socket method)": [[334, "socket.socket.getsockname"]], "getsockopt() (socket.socket method)": [[334, "socket.socket.getsockopt"]], "gettimeout() (socket.socket method)": [[334, "socket.socket.gettimeout"]], "has_dualstack_ipv6() (in module socket)": [[334, "socket.has_dualstack_ipv6"]], "has_ipv6 (in module socket)": [[334, "socket.has_ipv6"]], "herror": [[334, "socket.herror"]], "htonl() (in module socket)": [[334, "socket.htonl"]], "htons() (in module socket)": [[334, "socket.htons"]], "if_indextoname() (in module socket)": [[334, "socket.if_indextoname"]], "if_nameindex() (in module socket)": [[334, "socket.if_nameindex"]], "if_nametoindex() (in module socket)": [[334, "socket.if_nametoindex"]], "inet_aton() (in module socket)": [[334, "socket.inet_aton"]], "inet_ntoa() (in module socket)": [[334, "socket.inet_ntoa"]], "inet_ntop() (in module socket)": [[334, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[334, "socket.inet_pton"]], "ioctl() (socket.socket method)": [[334, "socket.socket.ioctl"]], "listen() (socket.socket method)": [[334, "socket.socket.listen"]], "makefile() (socket.socket method)": [[334, "socket.socket.makefile"]], "ntohl() (in module socket)": [[334, "socket.ntohl"]], "ntohs() (in module socket)": [[334, "socket.ntohs"]], "proto (socket.socket attribute)": [[334, "socket.socket.proto"]], "recv() (socket.socket method)": [[334, "socket.socket.recv"]], "recv_fds() (in module socket)": [[334, "socket.recv_fds"]], "recv_into() (socket.socket method)": [[334, "socket.socket.recv_into"]], "recvfrom() (socket.socket method)": [[334, "socket.socket.recvfrom"]], "recvfrom_into() (socket.socket method)": [[334, "socket.socket.recvfrom_into"]], "recvmsg() (socket.socket method)": [[334, "socket.socket.recvmsg"]], "recvmsg_into() (socket.socket method)": [[334, "socket.socket.recvmsg_into"]], "send() (socket.socket method)": [[334, "socket.socket.send"]], "send_fds() (in module socket)": [[334, "socket.send_fds"]], "sendall() (socket.socket method)": [[334, "socket.socket.sendall"]], "sendfile() (socket.socket method)": [[334, "socket.socket.sendfile"]], "sendmsg() (socket.socket method)": [[334, "socket.socket.sendmsg"]], "sendmsg_afalg() (socket.socket method)": [[334, "socket.socket.sendmsg_afalg"]], "sendto() (socket.socket method)": [[334, "socket.socket.sendto"]], "set_inheritable() (socket.socket method)": [[334, "socket.socket.set_inheritable"]], "setblocking() (socket.socket method)": [[334, "socket.socket.setblocking"]], "setdefaulttimeout() (in module socket)": [[334, "socket.setdefaulttimeout"]], "sethostname() (in module socket)": [[334, "socket.sethostname"]], "setsockopt() (socket.socket method)": [[334, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[334, "socket.socket.settimeout"]], "share() (socket.socket method)": [[334, "socket.socket.share"]], "shutdown() (socket.socket method)": [[334, "socket.socket.shutdown"]], "socket (class in socket)": [[334, "socket.socket"]], "socketpair() (in module socket)": [[334, "socket.socketpair"]], "struct": [[334, "index-14"], [344, "module-struct"]], "timeout": [[334, "socket.timeout"]], "type (socket.socket attribute)": [[334, "socket.socket.type"]], "baserequesthandler (class in socketserver)": [[335, "socketserver.BaseRequestHandler"]], "baseserver (class in socketserver)": [[335, "socketserver.BaseServer"]], "datagramrequesthandler (class in socketserver)": [[335, "socketserver.DatagramRequestHandler"]], "forkingmixin (class in socketserver)": [[335, "socketserver.ForkingMixIn"]], "forkingtcpserver (class in socketserver)": [[335, "socketserver.ForkingTCPServer"]], "forkingudpserver (class in socketserver)": [[335, "socketserver.ForkingUDPServer"]], "forkingunixdatagramserver (class in socketserver)": [[335, "socketserver.ForkingUnixDatagramServer"]], "forkingunixstreamserver (class in socketserver)": [[335, "socketserver.ForkingUnixStreamServer"]], "requesthandlerclass (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.RequestHandlerClass"]], "streamrequesthandler (class in socketserver)": [[335, "socketserver.StreamRequestHandler"]], "tcpserver (class in socketserver)": [[335, "socketserver.TCPServer"]], "threadingmixin (class in socketserver)": [[335, "socketserver.ThreadingMixIn"]], "threadingtcpserver (class in socketserver)": [[335, "socketserver.ThreadingTCPServer"]], "threadingudpserver (class in socketserver)": [[335, "socketserver.ThreadingUDPServer"]], "threadingunixdatagramserver (class in socketserver)": [[335, "socketserver.ThreadingUnixDatagramServer"]], "threadingunixstreamserver (class in socketserver)": [[335, "socketserver.ThreadingUnixStreamServer"]], "udpserver (class in socketserver)": [[335, "socketserver.UDPServer"]], "unixdatagramserver (class in socketserver)": [[335, "socketserver.UnixDatagramServer"]], "unixstreamserver (class in socketserver)": [[335, "socketserver.UnixStreamServer"]], "address_family (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.address_family"]], "allow_reuse_address (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.allow_reuse_address"]], "block_on_close (socketserver.threadingmixin attribute)": [[335, "socketserver.ThreadingMixIn.block_on_close"]], "client_address (socketserver.baserequesthandler attribute)": [[335, "socketserver.BaseRequestHandler.client_address"]], "daemon_threads (socketserver.threadingmixin attribute)": [[335, "socketserver.ThreadingMixIn.daemon_threads"]], "fileno() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.fileno"]], "finish() (socketserver.baserequesthandler method)": [[335, "socketserver.BaseRequestHandler.finish"]], "finish_request() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.finish_request"]], "get_request() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.get_request"]], "handle() (socketserver.baserequesthandler method)": [[335, "socketserver.BaseRequestHandler.handle"]], "handle_error() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.handle_error"]], "handle_request() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.handle_request"]], "handle_timeout() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.handle_timeout"]], "process_request() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.process_request"]], "request (socketserver.baserequesthandler attribute)": [[335, "socketserver.BaseRequestHandler.request"]], "request_queue_size (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.request_queue_size"]], "rfile (socketserver.datagramrequesthandler attribute)": [[335, "socketserver.DatagramRequestHandler.rfile"]], "serve_forever() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.serve_forever"]], "server (socketserver.baserequesthandler attribute)": [[335, "socketserver.BaseRequestHandler.server"]], "server_activate() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.server_activate"]], "server_address (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.server_address"]], "server_bind() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.server_bind"]], "server_close() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.server_close"]], "service_actions() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.service_actions"]], "setup() (socketserver.baserequesthandler method)": [[335, "socketserver.BaseRequestHandler.setup"]], "shutdown() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.shutdown"]], "socket (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.socket"]], "socket_type (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.socket_type"]], "socketserver": [[335, "module-socketserver"]], "timeout (socketserver.baseserver attribute)": [[335, "socketserver.BaseServer.timeout"]], "verify_request() (socketserver.baseserver method)": [[335, "socketserver.BaseServer.verify_request"]], "wfile (socketserver.datagramrequesthandler attribute)": [[335, "socketserver.DatagramRequestHandler.wfile"]], "pep 594#spwd": [[336, "index-0"]], "getspall() (in module spwd)": [[336, "spwd.getspall"]], "getspnam() (in module spwd)": [[336, "spwd.getspnam"]], "spwd": [[336, "module-spwd"]], "--version": [[337, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"], [377, "cmdoption-trace-version"], [452, "cmdoption-version"]], "-v": [[337, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"], [355, "cmdoption-tarfile-v"], [364, "cmdoption-timeit-v"], [385, "cmdoption-unittest-discover-v"], [452, "cmdoption-V"], [452, "cmdoption-v"]], "blob (class in sqlite3)": [[337, "sqlite3.Blob"]], "connection (class in sqlite3)": [[337, "sqlite3.Connection"]], "cursor (class in sqlite3)": [[337, "sqlite3.Cursor"]], "dataerror": [[337, "sqlite3.DataError"]], "databaseerror": [[337, "sqlite3.DatabaseError"]], "integrityerror": [[337, "sqlite3.IntegrityError"]], "interfaceerror": [[337, "sqlite3.InterfaceError"]], "internalerror": [[337, "sqlite3.InternalError"]], "legacy_transaction_control (in module sqlite3)": [[337, "sqlite3.LEGACY_TRANSACTION_CONTROL"]], "notsupportederror": [[337, "sqlite3.NotSupportedError"]], "operationalerror": [[337, "sqlite3.OperationalError"]], "parse_colnames (in module sqlite3)": [[337, "sqlite3.PARSE_COLNAMES"]], "parse_decltypes (in module sqlite3)": [[337, "sqlite3.PARSE_DECLTYPES"]], "pep 246": [[337, "index-8"]], "pep 249": [[337, "index-0"], [337, "index-1"], [337, "index-10"], [337, "index-11"], [337, "index-12"], [337, "index-2"], [337, "index-3"], [337, "index-4"], [337, "index-5"], [337, "index-9"], [464, "index-24"], [464, "index-25"], [471, "index-24"]], "prepareprotocol (class in sqlite3)": [[337, "sqlite3.PrepareProtocol"]], "programmingerror": [[337, "sqlite3.ProgrammingError"]], "row (class in sqlite3)": [[337, "sqlite3.Row"]], "sqlite_dbconfig_defensive (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_DEFENSIVE"]], "sqlite_dbconfig_dqs_ddl (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_DQS_DDL"]], "sqlite_dbconfig_dqs_dml (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_DQS_DML"]], "sqlite_dbconfig_enable_fkey (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_FKEY"]], "sqlite_dbconfig_enable_fts3_tokenizer (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER"]], "sqlite_dbconfig_enable_load_extension (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION"]], "sqlite_dbconfig_enable_qpsg (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_QPSG"]], "sqlite_dbconfig_enable_trigger (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_TRIGGER"]], "sqlite_dbconfig_enable_view (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_ENABLE_VIEW"]], "sqlite_dbconfig_legacy_alter_table (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE"]], "sqlite_dbconfig_legacy_file_format (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT"]], "sqlite_dbconfig_no_ckpt_on_close (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE"]], "sqlite_dbconfig_reset_database (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_RESET_DATABASE"]], "sqlite_dbconfig_trigger_eqp (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_TRIGGER_EQP"]], "sqlite_dbconfig_trusted_schema (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_TRUSTED_SCHEMA"]], "sqlite_dbconfig_writable_schema (in module sqlite3)": [[337, "sqlite3.SQLITE_DBCONFIG_WRITABLE_SCHEMA"]], "sqlite_deny (in module sqlite3)": [[337, "sqlite3.SQLITE_DENY"]], "sqlite_ignore (in module sqlite3)": [[337, "sqlite3.SQLITE_IGNORE"]], "sqlite_ok (in module sqlite3)": [[337, "sqlite3.SQLITE_OK"]], "apilevel (in module sqlite3)": [[337, "sqlite3.apilevel"]], "arraysize (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.arraysize"]], "autocommit (sqlite3.connection attribute)": [[337, "sqlite3.Connection.autocommit"]], "backup() (sqlite3.connection method)": [[337, "sqlite3.Connection.backup"]], "blobopen() (sqlite3.connection method)": [[337, "sqlite3.Connection.blobopen"]], "close() (sqlite3.blob method)": [[337, "sqlite3.Blob.close"]], "close() (sqlite3.connection method)": [[337, "sqlite3.Connection.close"]], "close() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.close"]], "commit() (sqlite3.connection method)": [[337, "sqlite3.Connection.commit"]], "complete_statement() (in module sqlite3)": [[337, "sqlite3.complete_statement"]], "connect() (in module sqlite3)": [[337, "sqlite3.connect"]], "connection (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.connection"]], "create_aggregate() (sqlite3.connection method)": [[337, "sqlite3.Connection.create_aggregate"]], "create_collation() (sqlite3.connection method)": [[337, "sqlite3.Connection.create_collation"]], "create_function() (sqlite3.connection method)": [[337, "sqlite3.Connection.create_function"]], "create_window_function() (sqlite3.connection method)": [[337, "sqlite3.Connection.create_window_function"]], "cursor() (sqlite3.connection method)": [[337, "sqlite3.Connection.cursor"]], "description (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.description"]], "deserialize() (sqlite3.connection method)": [[337, "sqlite3.Connection.deserialize"]], "enable_callback_tracebacks() (in module sqlite3)": [[337, "sqlite3.enable_callback_tracebacks"]], "enable_load_extension() (sqlite3.connection method)": [[337, "sqlite3.Connection.enable_load_extension"]], "execute() (sqlite3.connection method)": [[337, "sqlite3.Connection.execute"]], "execute() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.execute"]], "executemany() (sqlite3.connection method)": [[337, "sqlite3.Connection.executemany"]], "executemany() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.executemany"]], "executescript() (sqlite3.connection method)": [[337, "sqlite3.Connection.executescript"]], "executescript() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.executescript"]], "fetchall() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.fetchall"]], "fetchmany() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.fetchmany"]], "fetchone() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.fetchone"]], "getconfig() (sqlite3.connection method)": [[337, "sqlite3.Connection.getconfig"]], "getlimit() (sqlite3.connection method)": [[337, "sqlite3.Connection.getlimit"]], "in sql statements": [[337, "index-6"], [337, "index-7"]], "in_transaction (sqlite3.connection attribute)": [[337, "sqlite3.Connection.in_transaction"]], "interrupt() (sqlite3.connection method)": [[337, "sqlite3.Connection.interrupt"]], "isolation_level (sqlite3.connection attribute)": [[337, "sqlite3.Connection.isolation_level"]], "iterdump() (sqlite3.connection method)": [[337, "sqlite3.Connection.iterdump"]], "keys() (sqlite3.row method)": [[337, "sqlite3.Row.keys"]], "lastrowid (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.lastrowid"]], "load_extension() (sqlite3.connection method)": [[337, "sqlite3.Connection.load_extension"]], "paramstyle (in module sqlite3)": [[337, "sqlite3.paramstyle"]], "python--m-sqlite3-[-h]-[-v]-[filename]-[sql] command line option": [[337, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [337, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"]], "read() (sqlite3.blob method)": [[337, "sqlite3.Blob.read"]], "register_adapter() (in module sqlite3)": [[337, "sqlite3.register_adapter"]], "register_converter() (in module sqlite3)": [[337, "sqlite3.register_converter"]], "rollback() (sqlite3.connection method)": [[337, "sqlite3.Connection.rollback"]], "row_factory (sqlite3.connection attribute)": [[337, "sqlite3.Connection.row_factory"]], "row_factory (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.row_factory"]], "rowcount (sqlite3.cursor attribute)": [[337, "sqlite3.Cursor.rowcount"]], "seek() (sqlite3.blob method)": [[337, "sqlite3.Blob.seek"]], "serialize() (sqlite3.connection method)": [[337, "sqlite3.Connection.serialize"]], "set_authorizer() (sqlite3.connection method)": [[337, "sqlite3.Connection.set_authorizer"]], "set_progress_handler() (sqlite3.connection method)": [[337, "sqlite3.Connection.set_progress_handler"]], "set_trace_callback() (sqlite3.connection method)": [[337, "sqlite3.Connection.set_trace_callback"]], "setconfig() (sqlite3.connection method)": [[337, "sqlite3.Connection.setconfig"]], "setinputsizes() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.setinputsizes"]], "setlimit() (sqlite3.connection method)": [[337, "sqlite3.Connection.setlimit"]], "setoutputsize() (sqlite3.cursor method)": [[337, "sqlite3.Cursor.setoutputsize"]], "sqlite3": [[337, "module-sqlite3"]], "sqlite_errorcode (sqlite3.error attribute)": [[337, "sqlite3.Error.sqlite_errorcode"]], "sqlite_errorname (sqlite3.error attribute)": [[337, "sqlite3.Error.sqlite_errorname"]], "sqlite_version (in module sqlite3)": [[337, "sqlite3.sqlite_version"]], "sqlite_version_info (in module sqlite3)": [[337, "sqlite3.sqlite_version_info"]], "tell() (sqlite3.blob method)": [[337, "sqlite3.Blob.tell"]], "text_factory (sqlite3.connection attribute)": [[337, "sqlite3.Connection.text_factory"]], "threadsafety (in module sqlite3)": [[337, "sqlite3.threadsafety"]], "total_changes (sqlite3.connection attribute)": [[337, "sqlite3.Connection.total_changes"]], "version (in module sqlite3)": [[337, "sqlite3.version"]], "version_info (in module sqlite3)": [[337, "sqlite3.version_info"]], "write() (sqlite3.blob method)": [[337, "sqlite3.Blob.write"]], "(use in module ssl)": [[338, "index-0"]], "alert_description_handshake_failure (in module ssl)": [[338, "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"]], "alert_description_internal_error (in module ssl)": [[338, "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"]], "alertdescription (class in ssl)": [[338, "ssl.AlertDescription"]], "cert_none (in module ssl)": [[338, "ssl.CERT_NONE"]], "cert_optional (in module ssl)": [[338, "ssl.CERT_OPTIONAL"]], "cert_required (in module ssl)": [[338, "ssl.CERT_REQUIRED"]], "channel_binding_types (in module ssl)": [[338, "ssl.CHANNEL_BINDING_TYPES"]], "certificateerror": [[338, "ssl.CertificateError"]], "der_cert_to_pem_cert() (in module ssl)": [[338, "ssl.DER_cert_to_PEM_cert"]], "has_alpn (in module ssl)": [[338, "ssl.HAS_ALPN"]], "has_ecdh (in module ssl)": [[338, "ssl.HAS_ECDH"]], "has_never_check_common_name (in module ssl)": [[338, "ssl.HAS_NEVER_CHECK_COMMON_NAME"]], "has_npn (in module ssl)": [[338, "ssl.HAS_NPN"]], "has_sni (in module ssl)": [[338, "ssl.HAS_SNI"]], "has_sslv2 (in module ssl)": [[338, "ssl.HAS_SSLv2"]], "has_sslv3 (in module ssl)": [[338, "ssl.HAS_SSLv3"]], "has_tlsv1 (in module ssl)": [[338, "ssl.HAS_TLSv1"]], "has_tlsv1_1 (in module ssl)": [[338, "ssl.HAS_TLSv1_1"]], "has_tlsv1_2 (in module ssl)": [[338, "ssl.HAS_TLSv1_2"]], "has_tlsv1_3 (in module ssl)": [[338, "ssl.HAS_TLSv1_3"]], "maximum_supported (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.MAXIMUM_SUPPORTED"]], "minimum_supported (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.MINIMUM_SUPPORTED"]], "memorybio (class in ssl)": [[338, "ssl.MemoryBIO"]], "openssl_version (in module ssl)": [[338, "ssl.OPENSSL_VERSION"]], "openssl_version_info (in module ssl)": [[338, "ssl.OPENSSL_VERSION_INFO"]], "openssl_version_number (in module ssl)": [[338, "ssl.OPENSSL_VERSION_NUMBER"]], "op_all (in module ssl)": [[338, "ssl.OP_ALL"]], "op_cipher_server_preference (in module ssl)": [[338, "ssl.OP_CIPHER_SERVER_PREFERENCE"]], "op_enable_ktls (in module ssl)": [[338, "ssl.OP_ENABLE_KTLS"]], "op_enable_middlebox_compat (in module ssl)": [[338, "ssl.OP_ENABLE_MIDDLEBOX_COMPAT"]], "op_ignore_unexpected_eof (in module ssl)": [[338, "ssl.OP_IGNORE_UNEXPECTED_EOF"]], "op_legacy_server_connect (in module ssl)": [[338, "ssl.OP_LEGACY_SERVER_CONNECT"]], "op_no_compression (in module ssl)": [[338, "ssl.OP_NO_COMPRESSION"]], "op_no_renegotiation (in module ssl)": [[338, "ssl.OP_NO_RENEGOTIATION"]], "op_no_sslv2 (in module ssl)": [[338, "ssl.OP_NO_SSLv2"]], "op_no_sslv3 (in module ssl)": [[338, "ssl.OP_NO_SSLv3"]], "op_no_ticket (in module ssl)": [[338, "ssl.OP_NO_TICKET"]], "op_no_tlsv1 (in module ssl)": [[338, "ssl.OP_NO_TLSv1"]], "op_no_tlsv1_1 (in module ssl)": [[338, "ssl.OP_NO_TLSv1_1"]], "op_no_tlsv1_2 (in module ssl)": [[338, "ssl.OP_NO_TLSv1_2"]], "op_no_tlsv1_3 (in module ssl)": [[338, "ssl.OP_NO_TLSv1_3"]], "op_single_dh_use (in module ssl)": [[338, "ssl.OP_SINGLE_DH_USE"]], "op_single_ecdh_use (in module ssl)": [[338, "ssl.OP_SINGLE_ECDH_USE"]], "options (class in ssl)": [[338, "ssl.Options"]], "pem_cert_to_der_cert() (in module ssl)": [[338, "ssl.PEM_cert_to_DER_cert"]], "pep 644": [[338, "index-2"], [469, "index-29"], [469, "index-30"], [469, "index-34"], [469, "index-9"], [471, "index-34"]], "protocol_sslv23 (in module ssl)": [[338, "ssl.PROTOCOL_SSLv23"]], "protocol_sslv3 (in module ssl)": [[338, "ssl.PROTOCOL_SSLv3"]], "protocol_tls (in module ssl)": [[338, "ssl.PROTOCOL_TLS"]], "protocol_tls_client (in module ssl)": [[338, "ssl.PROTOCOL_TLS_CLIENT"]], "protocol_tls_server (in module ssl)": [[338, "ssl.PROTOCOL_TLS_SERVER"]], "protocol_tlsv1 (in module ssl)": [[338, "ssl.PROTOCOL_TLSv1"]], "protocol_tlsv1_1 (in module ssl)": [[338, "ssl.PROTOCOL_TLSv1_1"]], "protocol_tlsv1_2 (in module ssl)": [[338, "ssl.PROTOCOL_TLSv1_2"]], "purpose.client_auth (in module ssl)": [[338, "ssl.Purpose.CLIENT_AUTH"]], "purpose.server_auth (in module ssl)": [[338, "ssl.Purpose.SERVER_AUTH"]], "rand_add() (in module ssl)": [[338, "ssl.RAND_add"]], "rand_bytes() (in module ssl)": [[338, "ssl.RAND_bytes"]], "rand_status() (in module ssl)": [[338, "ssl.RAND_status"]], "rfc 1422": [[338, "index-16"], [338, "index-17"]], "rfc 1750": [[338, "index-5"]], "rfc 3280": [[338, "index-10"]], "rfc 4086": [[338, "index-18"]], "rfc 5246": [[338, "index-20"], [338, "index-9"]], "rfc 5280": [[338, "index-19"], [338, "index-6"], [475, "index-41"], [475, "index-51"]], "rfc 5929": [[338, "index-11"]], "rfc 6066": [[338, "index-13"], [338, "index-21"], [338, "index-8"]], "rfc 7301": [[338, "index-12"], [338, "index-7"], [475, "index-40"]], "rfc 7525": [[338, "index-22"]], "ssl": [[338, "index-1"], [338, "module-ssl"]], "sslcertverificationerror": [[338, "ssl.SSLCertVerificationError"]], "sslcontext (class in ssl)": [[338, "ssl.SSLContext"]], "ssleoferror": [[338, "ssl.SSLEOFError"]], "sslerror": [[338, "ssl.SSLError"]], "sslerrornumber (class in ssl)": [[338, "ssl.SSLErrorNumber"]], "sslkeylogfile": [[338, "index-3"], [338, "index-4"]], "sslobject (class in ssl)": [[338, "ssl.SSLObject"]], "sslsession (class in ssl)": [[338, "ssl.SSLSession"]], "sslsocket (class in ssl)": [[338, "ssl.SSLSocket"]], "sslsyscallerror": [[338, "ssl.SSLSyscallError"]], "sslwantreaderror": [[338, "ssl.SSLWantReadError"]], "sslwantwriteerror": [[338, "ssl.SSLWantWriteError"]], "sslzeroreturnerror": [[338, "ssl.SSLZeroReturnError"]], "sslv3 (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.SSLv3"]], "secure sockets layer": [[338, "index-1"]], "tls": [[338, "index-1"]], "tlsversion (class in ssl)": [[338, "ssl.TLSVersion"]], "tlsv1 (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.TLSv1"]], "tlsv1_1 (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.TLSv1_1"]], "tlsv1_2 (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.TLSv1_2"]], "tlsv1_3 (ssl.tlsversion attribute)": [[338, "ssl.TLSVersion.TLSv1_3"]], "transport layer security": [[338, "index-1"]], "verify_allow_proxy_certs (in module ssl)": [[338, "ssl.VERIFY_ALLOW_PROXY_CERTS"]], "verify_crl_check_chain (in module ssl)": [[338, "ssl.VERIFY_CRL_CHECK_CHAIN"]], "verify_crl_check_leaf (in module ssl)": [[338, "ssl.VERIFY_CRL_CHECK_LEAF"]], "verify_default (in module ssl)": [[338, "ssl.VERIFY_DEFAULT"]], "verify_x509_partial_chain (in module ssl)": [[338, "ssl.VERIFY_X509_PARTIAL_CHAIN"]], "verify_x509_strict (in module ssl)": [[338, "ssl.VERIFY_X509_STRICT"]], "verify_x509_trusted_first (in module ssl)": [[338, "ssl.VERIFY_X509_TRUSTED_FIRST"]], "verifyflags (class in ssl)": [[338, "ssl.VerifyFlags"]], "verifymode (class in ssl)": [[338, "ssl.VerifyMode"]], "x509 certificate": [[338, "index-15"]], "cert_store_stats() (ssl.sslcontext method)": [[338, "ssl.SSLContext.cert_store_stats"]], "cert_time_to_seconds() (in module ssl)": [[338, "ssl.cert_time_to_seconds"]], "certificates": [[338, "index-14"]], "check_hostname (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.check_hostname"]], "cipher() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.cipher"]], "compression() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.compression"]], "context (ssl.sslsocket attribute)": [[338, "ssl.SSLSocket.context"]], "create_default_context() (in module ssl)": [[338, "ssl.create_default_context"]], "do_handshake() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.do_handshake"]], "enum_certificates() (in module ssl)": [[338, "ssl.enum_certificates"]], "enum_crls() (in module ssl)": [[338, "ssl.enum_crls"]], "eof (ssl.memorybio attribute)": [[338, "ssl.MemoryBIO.eof"]], "get_ca_certs() (ssl.sslcontext method)": [[338, "ssl.SSLContext.get_ca_certs"]], "get_channel_binding() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.get_channel_binding"]], "get_ciphers() (ssl.sslcontext method)": [[338, "ssl.SSLContext.get_ciphers"]], "get_default_verify_paths() (in module ssl)": [[338, "ssl.get_default_verify_paths"]], "get_server_certificate() (in module ssl)": [[338, "ssl.get_server_certificate"]], "getpeercert() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.getpeercert"]], "has_ticket (ssl.sslsession attribute)": [[338, "ssl.SSLSession.has_ticket"]], "hostname_checks_common_name (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.hostname_checks_common_name"]], "id (ssl.sslsession attribute)": [[338, "ssl.SSLSession.id"]], "keylog_filename (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.keylog_filename"]], "library (ssl.sslerror attribute)": [[338, "ssl.SSLError.library"]], "load_cert_chain() (ssl.sslcontext method)": [[338, "ssl.SSLContext.load_cert_chain"]], "load_default_certs() (ssl.sslcontext method)": [[338, "ssl.SSLContext.load_default_certs"]], "load_dh_params() (ssl.sslcontext method)": [[338, "ssl.SSLContext.load_dh_params"]], "load_verify_locations() (ssl.sslcontext method)": [[338, "ssl.SSLContext.load_verify_locations"]], "maximum_version (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.maximum_version"]], "minimum_version (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.minimum_version"]], "num_tickets (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.num_tickets"]], "options (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.options"]], "pending (ssl.memorybio attribute)": [[338, "ssl.MemoryBIO.pending"]], "pending() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.pending"]], "post_handshake_auth (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.post_handshake_auth"]], "protocol (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.protocol"]], "read() (ssl.memorybio method)": [[338, "ssl.MemoryBIO.read"]], "read() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.read"]], "reason (ssl.sslerror attribute)": [[338, "ssl.SSLError.reason"]], "security_level (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.security_level"]], "selected_alpn_protocol() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.selected_alpn_protocol"]], "selected_npn_protocol() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.selected_npn_protocol"]], "server_hostname (ssl.sslsocket attribute)": [[338, "ssl.SSLSocket.server_hostname"]], "server_side (ssl.sslsocket attribute)": [[338, "ssl.SSLSocket.server_side"]], "session (ssl.sslsocket attribute)": [[338, "ssl.SSLSocket.session"]], "session_reused (ssl.sslsocket attribute)": [[338, "ssl.SSLSocket.session_reused"]], "session_stats() (ssl.sslcontext method)": [[338, "ssl.SSLContext.session_stats"]], "set_alpn_protocols() (ssl.sslcontext method)": [[338, "ssl.SSLContext.set_alpn_protocols"]], "set_ciphers() (ssl.sslcontext method)": [[338, "ssl.SSLContext.set_ciphers"]], "set_default_verify_paths() (ssl.sslcontext method)": [[338, "ssl.SSLContext.set_default_verify_paths"]], "set_ecdh_curve() (ssl.sslcontext method)": [[338, "ssl.SSLContext.set_ecdh_curve"]], "set_npn_protocols() (ssl.sslcontext method)": [[338, "ssl.SSLContext.set_npn_protocols"]], "set_servername_callback (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.set_servername_callback"]], "shared_ciphers() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.shared_ciphers"]], "sni_callback (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.sni_callback"]], "sslobject_class (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.sslobject_class"]], "sslsocket_class (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.sslsocket_class"]], "ticket_lifetime_hint (ssl.sslsession attribute)": [[338, "ssl.SSLSession.ticket_lifetime_hint"]], "time (ssl.sslsession attribute)": [[338, "ssl.SSLSession.time"]], "timeout (ssl.sslsession attribute)": [[338, "ssl.SSLSession.timeout"]], "unwrap() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.unwrap"]], "verify_client_post_handshake() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.verify_client_post_handshake"]], "verify_code (ssl.sslcertverificationerror attribute)": [[338, "ssl.SSLCertVerificationError.verify_code"]], "verify_flags (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.verify_flags"]], "verify_message (ssl.sslcertverificationerror attribute)": [[338, "ssl.SSLCertVerificationError.verify_message"]], "verify_mode (ssl.sslcontext attribute)": [[338, "ssl.SSLContext.verify_mode"]], "version() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.version"]], "wrap_bio() (ssl.sslcontext method)": [[338, "ssl.SSLContext.wrap_bio"]], "wrap_socket() (ssl.sslcontext method)": [[338, "ssl.SSLContext.wrap_socket"]], "write() (ssl.memorybio method)": [[338, "ssl.MemoryBIO.write"]], "write() (ssl.sslsocket method)": [[338, "ssl.SSLSocket.write"]], "write_eof() (ssl.memorybio method)": [[338, "ssl.MemoryBIO.write_eof"]], "file_attribute_archive (in module stat)": [[339, "stat.FILE_ATTRIBUTE_ARCHIVE"]], "file_attribute_compressed (in module stat)": [[339, "stat.FILE_ATTRIBUTE_COMPRESSED"]], "file_attribute_device (in module stat)": [[339, "stat.FILE_ATTRIBUTE_DEVICE"]], "file_attribute_directory (in module stat)": [[339, "stat.FILE_ATTRIBUTE_DIRECTORY"]], "file_attribute_encrypted (in module stat)": [[339, "stat.FILE_ATTRIBUTE_ENCRYPTED"]], "file_attribute_hidden (in module stat)": [[339, "stat.FILE_ATTRIBUTE_HIDDEN"]], "file_attribute_integrity_stream (in module stat)": [[339, "stat.FILE_ATTRIBUTE_INTEGRITY_STREAM"]], "file_attribute_normal (in module stat)": [[339, "stat.FILE_ATTRIBUTE_NORMAL"]], "file_attribute_not_content_indexed (in module stat)": [[339, "stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"]], "file_attribute_no_scrub_data (in module stat)": [[339, "stat.FILE_ATTRIBUTE_NO_SCRUB_DATA"]], "file_attribute_offline (in module stat)": [[339, "stat.FILE_ATTRIBUTE_OFFLINE"]], "file_attribute_readonly (in module stat)": [[339, "stat.FILE_ATTRIBUTE_READONLY"]], "file_attribute_reparse_point (in module stat)": [[339, "stat.FILE_ATTRIBUTE_REPARSE_POINT"]], "file_attribute_sparse_file (in module stat)": [[339, "stat.FILE_ATTRIBUTE_SPARSE_FILE"]], "file_attribute_system (in module stat)": [[339, "stat.FILE_ATTRIBUTE_SYSTEM"]], "file_attribute_temporary (in module stat)": [[339, "stat.FILE_ATTRIBUTE_TEMPORARY"]], "file_attribute_virtual (in module stat)": [[339, "stat.FILE_ATTRIBUTE_VIRTUAL"]], "io_reparse_tag_appexeclink (in module stat)": [[339, "stat.IO_REPARSE_TAG_APPEXECLINK"]], "io_reparse_tag_mount_point (in module stat)": [[339, "stat.IO_REPARSE_TAG_MOUNT_POINT"]], "io_reparse_tag_symlink (in module stat)": [[339, "stat.IO_REPARSE_TAG_SYMLINK"]], "sf_append (in module stat)": [[339, "stat.SF_APPEND"]], "sf_archived (in module stat)": [[339, "stat.SF_ARCHIVED"]], "sf_immutable (in module stat)": [[339, "stat.SF_IMMUTABLE"]], "sf_nounlink (in module stat)": [[339, "stat.SF_NOUNLINK"]], "sf_snapshot (in module stat)": [[339, "stat.SF_SNAPSHOT"]], "st_atime (in module stat)": [[339, "stat.ST_ATIME"]], "st_ctime (in module stat)": [[339, "stat.ST_CTIME"]], "st_dev (in module stat)": [[339, "stat.ST_DEV"]], "st_gid (in module stat)": [[339, "stat.ST_GID"]], "st_ino (in module stat)": [[339, "stat.ST_INO"]], "st_mode (in module stat)": [[339, "stat.ST_MODE"]], "st_mtime (in module stat)": [[339, "stat.ST_MTIME"]], "st_nlink (in module stat)": [[339, "stat.ST_NLINK"]], "st_size (in module stat)": [[339, "stat.ST_SIZE"]], "st_uid (in module stat)": [[339, "stat.ST_UID"]], "s_enfmt (in module stat)": [[339, "stat.S_ENFMT"]], "s_iexec (in module stat)": [[339, "stat.S_IEXEC"]], "s_ifblk (in module stat)": [[339, "stat.S_IFBLK"]], "s_ifchr (in module stat)": [[339, "stat.S_IFCHR"]], "s_ifdir (in module stat)": [[339, "stat.S_IFDIR"]], "s_ifdoor (in module stat)": [[339, "stat.S_IFDOOR"]], "s_ififo (in module stat)": [[339, "stat.S_IFIFO"]], "s_iflnk (in module stat)": [[339, "stat.S_IFLNK"]], "s_ifmt() (in module stat)": [[339, "stat.S_IFMT"]], "s_ifport (in module stat)": [[339, "stat.S_IFPORT"]], "s_ifreg (in module stat)": [[339, "stat.S_IFREG"]], "s_ifsock (in module stat)": [[339, "stat.S_IFSOCK"]], "s_ifwht (in module stat)": [[339, "stat.S_IFWHT"]], "s_imode() (in module stat)": [[339, "stat.S_IMODE"]], "s_iread (in module stat)": [[339, "stat.S_IREAD"]], "s_irgrp (in module stat)": [[339, "stat.S_IRGRP"]], "s_iroth (in module stat)": [[339, "stat.S_IROTH"]], "s_irusr (in module stat)": [[339, "stat.S_IRUSR"]], "s_irwxg (in module stat)": [[339, "stat.S_IRWXG"]], "s_irwxo (in module stat)": [[339, "stat.S_IRWXO"]], "s_irwxu (in module stat)": [[339, "stat.S_IRWXU"]], "s_isblk() (in module stat)": [[339, "stat.S_ISBLK"]], "s_ischr() (in module stat)": [[339, "stat.S_ISCHR"]], "s_isdir() (in module stat)": [[339, "stat.S_ISDIR"]], "s_isdoor() (in module stat)": [[339, "stat.S_ISDOOR"]], "s_isfifo() (in module stat)": [[339, "stat.S_ISFIFO"]], "s_isgid (in module stat)": [[339, "stat.S_ISGID"]], "s_islnk() (in module stat)": [[339, "stat.S_ISLNK"]], "s_isport() (in module stat)": [[339, "stat.S_ISPORT"]], "s_isreg() (in module stat)": [[339, "stat.S_ISREG"]], "s_issock() (in module stat)": [[339, "stat.S_ISSOCK"]], "s_isuid (in module stat)": [[339, "stat.S_ISUID"]], "s_isvtx (in module stat)": [[339, "stat.S_ISVTX"]], "s_iswht() (in module stat)": [[339, "stat.S_ISWHT"]], "s_iwgrp (in module stat)": [[339, "stat.S_IWGRP"]], "s_iwoth (in module stat)": [[339, "stat.S_IWOTH"]], "s_iwrite (in module stat)": [[339, "stat.S_IWRITE"]], "s_iwusr (in module stat)": [[339, "stat.S_IWUSR"]], "s_ixgrp (in module stat)": [[339, "stat.S_IXGRP"]], "s_ixoth (in module stat)": [[339, "stat.S_IXOTH"]], "s_ixusr (in module stat)": [[339, "stat.S_IXUSR"]], "uf_append (in module stat)": [[339, "stat.UF_APPEND"]], "uf_compressed (in module stat)": [[339, "stat.UF_COMPRESSED"]], "uf_hidden (in module stat)": [[339, "stat.UF_HIDDEN"]], "uf_immutable (in module stat)": [[339, "stat.UF_IMMUTABLE"]], "uf_nodump (in module stat)": [[339, "stat.UF_NODUMP"]], "uf_nounlink (in module stat)": [[339, "stat.UF_NOUNLINK"]], "uf_opaque (in module stat)": [[339, "stat.UF_OPAQUE"]], "filemode() (in module stat)": [[339, "stat.filemode"]], "normaldist (class in statistics)": [[340, "statistics.NormalDist"]], "statisticserror": [[340, "statistics.StatisticsError"]], "cdf() (statistics.normaldist method)": [[340, "statistics.NormalDist.cdf"]], "correlation() (in module statistics)": [[340, "statistics.correlation"]], "covariance() (in module statistics)": [[340, "statistics.covariance"]], "fmean() (in module statistics)": [[340, "statistics.fmean"]], "from_samples() (statistics.normaldist class method)": [[340, "statistics.NormalDist.from_samples"]], "geometric_mean() (in module statistics)": [[340, "statistics.geometric_mean"]], "harmonic_mean() (in module statistics)": [[340, "statistics.harmonic_mean"]], "inv_cdf() (statistics.normaldist method)": [[340, "statistics.NormalDist.inv_cdf"]], "linear_regression() (in module statistics)": [[340, "statistics.linear_regression"]], "mean (statistics.normaldist attribute)": [[340, "statistics.NormalDist.mean"]], "mean() (in module statistics)": [[340, "statistics.mean"]], "median (statistics.normaldist attribute)": [[340, "statistics.NormalDist.median"]], "median() (in module statistics)": [[340, "statistics.median"]], "median_grouped() (in module statistics)": [[340, "statistics.median_grouped"]], "median_high() (in module statistics)": [[340, "statistics.median_high"]], "median_low() (in module statistics)": [[340, "statistics.median_low"]], "mode (statistics.normaldist attribute)": [[340, "statistics.NormalDist.mode"]], "mode() (in module statistics)": [[340, "statistics.mode"]], "multimode() (in module statistics)": [[340, "statistics.multimode"]], "overlap() (statistics.normaldist method)": [[340, "statistics.NormalDist.overlap"]], "pdf() (statistics.normaldist method)": [[340, "statistics.NormalDist.pdf"]], "pstdev() (in module statistics)": [[340, "statistics.pstdev"]], "pvariance() (in module statistics)": [[340, "statistics.pvariance"]], "quantiles() (in module statistics)": [[340, "statistics.quantiles"]], "quantiles() (statistics.normaldist method)": [[340, "statistics.NormalDist.quantiles"]], "samples() (statistics.normaldist method)": [[340, "statistics.NormalDist.samples"]], "statistics": [[340, "module-statistics"]], "stdev (statistics.normaldist attribute)": [[340, "statistics.NormalDist.stdev"]], "stdev() (in module statistics)": [[340, "statistics.stdev"]], "variance (statistics.normaldist attribute)": [[340, "statistics.NormalDist.variance"]], "variance() (in module statistics)": [[340, "statistics.variance"]], "zscore() (statistics.normaldist method)": [[340, "statistics.NormalDist.zscore"]], "!=": [[341, "index-7"], [427, "index-77"]], "& (ampersand)": [[341, "index-16"], [427, "index-74"]], "(see also string)": [[341, "index-28"]], "//": [[341, "index-13"], [427, "index-67"]], "< (less)": [[341, "index-7"], [342, "index-3"], [344, "index-1"], [427, "index-77"]], "<<": [[341, "index-16"], [427, "index-71"]], "<=": [[341, "index-7"], [427, "index-77"]], "==": [[341, "index-7"], [427, "index-77"]], "> (greater)": [[341, "index-7"], [342, "index-3"], [344, "index-1"], [427, "index-77"]], ">=": [[341, "index-7"], [427, "index-77"]], ">>": [[341, "index-16"], [427, "index-71"]], "alias": [[341, "index-56"]], "c": [[341, "index-11"], [344, "index-0"], [425, "index-13"], [425, "index-4"], [425, "index-42"], [427, "index-77"], [432, "index-23"]], "false": [[341, "index-17"], [341, "index-4"], [341, "index-1"], [425, "index-12"]], "false (built-in object)": [[341, "index-3"]], "generic": [[341, "index-56"], [425, "index-5"]], "genericalias": [[341, "index-56"]], "none (built-in object)": [[341, "index-3"]], "pep 237": [[341, "index-38"], [341, "index-48"], [461, "index-10"], [463, "index-1"], [463, "index-16"], [467, "index-1"]], "pep 3118": [[341, "index-50"], [465, "index-15"], [467, "index-33"], [473, "index-31"], [473, "index-4"], [473, "index-5"], [478, "index-8"]], "pep 461": [[341, "index-49"], [475, "index-7"], [475, "index-8"]], "true": [[341, "index-17"], [341, "index-4"], [341, "index-2"], [425, "index-12"]], "union": [[341, "index-59"], [341, "index-59"]], "__args__ (genericalias attribute)": [[341, "genericalias.__args__"]], "__bases__ (class attribute)": [[341, "class.__bases__"], [425, "index-50"]], "__class__ (instance attribute)": [[341, "instance.__class__"], [425, "index-54"]], "__code__ (function object attribute)": [[341, "index-63"]], "__dict__ (object attribute)": [[341, "object.__dict__"]], "__enter__() (contextmanager method)": [[341, "contextmanager.__enter__"]], "__eq__() (instance method)": [[341, "index-9"]], "__eq__() (memoryview method)": [[341, "memoryview.__eq__"]], "__exit__() (contextmanager method)": [[341, "contextmanager.__exit__"]], "__ge__() (instance method)": [[341, "index-9"]], "__gt__() (instance method)": [[341, "index-9"]], "__iter__() (container method)": [[341, "container.__iter__"]], "__iter__() (iterator method)": [[341, "iterator.__iter__"]], "__le__() (instance method)": [[341, "index-9"]], "__lt__() (instance method)": [[341, "index-9"]], "__missing__()": [[341, "index-53"]], "__mro__ (class attribute)": [[341, "class.__mro__"]], "__name__ (definition attribute)": [[341, "definition.__name__"]], "__ne__() (instance method)": [[341, "index-9"]], "__next__() (iterator method)": [[341, "iterator.__next__"]], "__origin__ (genericalias attribute)": [[341, "genericalias.__origin__"]], "__parameters__ (genericalias attribute)": [[341, "genericalias.__parameters__"]], "__qualname__ (definition attribute)": [[341, "definition.__qualname__"]], "__subclasses__() (class method)": [[341, "class.__subclasses__"]], "__type_params__ (definition attribute)": [[341, "definition.__type_params__"]], "__unpacked__ (genericalias attribute)": [[341, "genericalias.__unpacked__"]], "add() (frozenset method)": [[341, "frozenset.add"]], "and": [[341, "index-4"], [341, "index-6"], [427, "index-74"], [427, "index-84"]], "append() (sequence method)": [[341, "index-24"]], "arithmetic": [[341, "index-13"], [427, "index-1"], [427, "index-59"], [427, "index-64"]], "as_integer_ratio() (float method)": [[341, "float.as_integer_ratio"]], "as_integer_ratio() (int method)": [[341, "int.as_integer_ratio"]], "assignment": [[341, "index-24"], [425, "index-22"], [425, "index-48"], [425, "index-52"], [433, "index-12"], [433, "index-14"], [433, "index-15"], [433, "index-4"], [433, "index-6"], [433, "index-8"], [433, "index-9"]], "binary": [[341, "index-12"], [344, "index-0"], [427, "index-64"], [427, "index-73"]], "binary operator": [[341, "index-13"], [427, "index-69"], [427, "index-70"]], "binary sequence types": [[341, "index-39"]], "bit_count() (int method)": [[341, "int.bit_count"]], "bit_length() (int method)": [[341, "int.bit_length"]], "bitwise": [[341, "index-16"], [427, "index-59"], [427, "index-73"], [427, "index-74"], [427, "index-75"], [427, "index-76"]], "built-in": [[341, "index-0"], [425, "index-43"]], "bytearray (%)": [[341, "index-45"]], "bytearray (built-in class)": [[341, "bytearray"]], "bytearray.splitlines method": [[341, "index-44"]], "bytes (%)": [[341, "index-45"]], "bytes (built-in class)": [[341, "bytes"]], "bytes.splitlines method": [[341, "index-44"]], "c_contiguous (memoryview attribute)": [[341, "memoryview.c_contiguous"]], "capitalize() (bytearray method)": [[341, "bytearray.capitalize"]], "capitalize() (bytes method)": [[341, "bytes.capitalize"]], "capitalize() (str method)": [[341, "str.capitalize"]], "casefold() (str method)": [[341, "str.casefold"]], "cast() (memoryview method)": [[341, "memoryview.cast"]], "center() (bytearray method)": [[341, "bytearray.center"]], "center() (bytes method)": [[341, "bytes.center"]], "center() (str method)": [[341, "str.center"]], "clear() (dict method)": [[341, "dict.clear"]], "clear() (frozenset method)": [[341, "frozenset.clear"]], "clear() (sequence method)": [[341, "index-24"]], "comparing": [[341, "index-8"]], "comparison": [[341, "index-7"], [427, "index-77"]], "comparisons": [[341, "index-7"], [425, "index-79"], [427, "index-78"]], "complex": [[341, "index-13"], [425, "index-104"], [425, "index-14"]], "concatenation": [[341, "index-20"]], "conjugate() (complex number method)": [[341, "index-14"]], "container": [[341, "index-18"], [425, "index-3"], [425, "index-47"]], "context management": [[341, "index-54"]], "context management protocol": [[341, "index-54"]], "contiguous (memoryview attribute)": [[341, "memoryview.contiguous"]], "conversions": [[341, "index-15"]], "copy() (dict method)": [[341, "dict.copy"]], "copy() (frozenset method)": [[341, "frozenset.copy"]], "copy() (sequence method)": [[341, "index-24"]], "count() (bytearray method)": [[341, "bytearray.count"]], "count() (bytes method)": [[341, "bytes.count"]], "count() (sequence method)": [[341, "index-20"]], "count() (str method)": [[341, "str.count"]], "decode() (bytearray method)": [[341, "bytearray.decode"]], "decode() (bytes method)": [[341, "bytes.decode"]], "del": [[341, "index-24"], [341, "index-52"], [425, "index-74"], [433, "index-21"]], "dict (built-in class)": [[341, "dict"]], "difference() (frozenset method)": [[341, "frozenset.difference"]], "difference_update() (frozenset method)": [[341, "frozenset.difference_update"]], "discard() (frozenset method)": [[341, "frozenset.discard"]], "encode() (str method)": [[341, "str.encode"]], "endswith() (bytearray method)": [[341, "bytearray.endswith"]], "endswith() (bytes method)": [[341, "bytes.endswith"]], "endswith() (str method)": [[341, "str.endswith"]], "expandtabs() (bytearray method)": [[341, "bytearray.expandtabs"]], "expandtabs() (bytes method)": [[341, "bytes.expandtabs"]], "expandtabs() (str method)": [[341, "str.expandtabs"]], "extend() (sequence method)": [[341, "index-24"]], "f_contiguous (memoryview attribute)": [[341, "memoryview.f_contiguous"]], "find() (bytearray method)": [[341, "bytearray.find"]], "find() (bytes method)": [[341, "bytes.find"]], "find() (str method)": [[341, "str.find"]], "format (memoryview attribute)": [[341, "memoryview.format"]], "format() (str method)": [[341, "str.format"]], "format_map() (str method)": [[341, "str.format_map"]], "formatting": [[341, "index-45"]], "formatting, printf": [[341, "index-35"]], "formatting, string (%)": [[341, "index-35"]], "from_bytes() (int class method)": [[341, "int.from_bytes"]], "fromhex() (bytearray class method)": [[341, "bytearray.fromhex"]], "fromhex() (bytes class method)": [[341, "bytes.fromhex"]], "fromhex() (float class method)": [[341, "float.fromhex"]], "fromkeys() (dict class method)": [[341, "dict.fromkeys"]], "frozenset (built-in class)": [[341, "frozenset"]], "get() (dict method)": [[341, "dict.get"]], "hex() (bytearray method)": [[341, "bytearray.hex"]], "hex() (bytes method)": [[341, "bytes.hex"]], "hex() (float method)": [[341, "float.hex"]], "hex() (memoryview method)": [[341, "memoryview.hex"]], "hexadecimal": [[341, "index-12"]], "if": [[341, "index-1"], [424, "index-18"], [424, "index-3"], [427, "index-12"], [427, "index-88"]], "in": [[341, "index-10"], [341, "index-20"], [424, "index-6"], [427, "index-80"]], "in printf-style formatting": [[341, "index-36"], [341, "index-37"], [341, "index-46"], [341, "index-47"]], "index() (bytearray method)": [[341, "bytearray.index"]], "index() (bytes method)": [[341, "bytes.index"]], "index() (sequence method)": [[341, "index-20"]], "index() (str method)": [[341, "str.index"]], "insert() (sequence method)": [[341, "index-24"]], "interpolation": [[341, "index-45"]], "interpolation, printf": [[341, "index-35"]], "interpolation, string (%)": [[341, "index-35"]], "intersection() (frozenset method)": [[341, "frozenset.intersection"]], "intersection_update() (frozenset method)": [[341, "frozenset.intersection_update"]], "io.stringio": [[341, "index-29"]], "is": [[341, "index-7"], [427, "index-81"]], "is not": [[341, "index-7"], [427, "index-81"]], "is_integer() (float method)": [[341, "float.is_integer"]], "is_integer() (int method)": [[341, "int.is_integer"]], "isalnum() (bytearray method)": [[341, "bytearray.isalnum"]], "isalnum() (bytes method)": [[341, "bytes.isalnum"]], "isalnum() (str method)": [[341, "str.isalnum"]], "isalpha() (bytearray method)": [[341, "bytearray.isalpha"]], "isalpha() (bytes method)": [[341, "bytes.isalpha"]], "isalpha() (str method)": [[341, "str.isalpha"]], "isascii() (bytearray method)": [[341, "bytearray.isascii"]], "isascii() (bytes method)": [[341, "bytes.isascii"]], "isascii() (str method)": [[341, "str.isascii"]], "isdecimal() (str method)": [[341, "str.isdecimal"]], "isdigit() (bytearray method)": [[341, "bytearray.isdigit"]], "isdigit() (bytes method)": [[341, "bytes.isdigit"]], "isdigit() (str method)": [[341, "str.isdigit"]], "isdisjoint() (frozenset method)": [[341, "frozenset.isdisjoint"]], "isidentifier() (str method)": [[341, "str.isidentifier"]], "islower() (bytearray method)": [[341, "bytearray.islower"]], "islower() (bytes method)": [[341, "bytes.islower"]], "islower() (str method)": [[341, "str.islower"]], "isnumeric() (str method)": [[341, "str.isnumeric"]], "isprintable() (str method)": [[341, "str.isprintable"]], "isspace() (bytearray method)": [[341, "bytearray.isspace"]], "isspace() (bytes method)": [[341, "bytes.isspace"]], "isspace() (str method)": [[341, "str.isspace"]], "issubset() (frozenset method)": [[341, "frozenset.issubset"]], "issuperset() (frozenset method)": [[341, "frozenset.issuperset"]], "istitle() (bytearray method)": [[341, "bytearray.istitle"]], "istitle() (bytes method)": [[341, "bytes.istitle"]], "istitle() (str method)": [[341, "str.istitle"]], "isupper() (bytearray method)": [[341, "bytearray.isupper"]], "isupper() (bytes method)": [[341, "bytes.isupper"]], "isupper() (str method)": [[341, "str.isupper"]], "items() (dict method)": [[341, "dict.items"]], "itemsize (memoryview attribute)": [[341, "memoryview.itemsize"]], "iteration": [[341, "index-18"]], "iteration over": [[341, "index-18"]], "iterator protocol": [[341, "index-18"]], "join() (bytearray method)": [[341, "bytearray.join"]], "join() (bytes method)": [[341, "bytes.join"]], "join() (str method)": [[341, "str.join"]], "keys() (dict method)": [[341, "dict.keys"]], "list (built-in class)": [[341, "list"]], "literals": [[341, "index-12"]], "ljust() (bytearray method)": [[341, "bytearray.ljust"]], "ljust() (bytes method)": [[341, "bytes.ljust"]], "ljust() (str method)": [[341, "str.ljust"]], "loop": [[341, "index-21"], [424, "index-4"], [424, "index-6"], [433, "index-30"], [433, "index-33"]], "loop over": [[341, "index-21"]], "lower() (bytearray method)": [[341, "bytearray.lower"]], "lower() (bytes method)": [[341, "bytes.lower"]], "lower() (str method)": [[341, "str.lower"]], "lstrip() (bytearray method)": [[341, "bytearray.lstrip"]], "lstrip() (bytes method)": [[341, "bytes.lstrip"]], "lstrip() (str method)": [[341, "str.lstrip"]], "maketrans() (bytearray static method)": [[341, "bytearray.maketrans"]], "maketrans() (bytes static method)": [[341, "bytes.maketrans"]], "maketrans() (str static method)": [[341, "str.maketrans"]], "masking": [[341, "index-16"]], "max": [[341, "index-20"]], "memoryview (built-in class)": [[341, "memoryview"]], "methods": [[341, "index-32"], [341, "index-43"]], "min": [[341, "index-20"]], "mro() (class method)": [[341, "class.mro"]], "mutable sequence": [[341, "index-21"], [425, "index-22"]], "nbytes (memoryview attribute)": [[341, "memoryview.nbytes"]], "ndim (memoryview attribute)": [[341, "memoryview.ndim"]], "not": [[341, "index-6"], [427, "index-83"]], "not in": [[341, "index-10"], [341, "index-20"], [427, "index-80"]], "obj (memoryview attribute)": [[341, "memoryview.obj"]], "octal": [[341, "index-12"]], "operation": [[341, "index-20"], [427, "index-58"], [427, "index-59"], [427, "index-64"], [427, "index-71"], [427, "index-73"], [427, "index-82"], [433, "index-20"]], "operations on": [[341, "index-14"], [341, "index-16"], [341, "index-20"], [341, "index-24"], [341, "index-52"]], "or": [[341, "index-4"], [341, "index-6"], [427, "index-75"], [427, "index-76"], [427, "index-85"]], "over mutable sequence": [[341, "index-21"]], "partition() (bytearray method)": [[341, "bytearray.partition"]], "partition() (bytes method)": [[341, "bytes.partition"]], "partition() (str method)": [[341, "str.partition"]], "pop() (dict method)": [[341, "dict.pop"]], "pop() (frozenset method)": [[341, "frozenset.pop"]], "pop() (sequence method)": [[341, "index-24"]], "popitem() (dict method)": [[341, "dict.popitem"]], "printf-style formatting": [[341, "index-35"], [341, "index-45"]], "range": [[341, "index-27"], [424, "index-8"]], "range (built-in class)": [[341, "range"]], "readonly (memoryview attribute)": [[341, "memoryview.readonly"]], "release() (memoryview method)": [[341, "memoryview.release"]], "remove() (frozenset method)": [[341, "frozenset.remove"]], "remove() (sequence method)": [[341, "index-24"]], "removeprefix() (bytearray method)": [[341, "bytearray.removeprefix"]], "removeprefix() (bytes method)": [[341, "bytes.removeprefix"]], "removeprefix() (str method)": [[341, "str.removeprefix"]], "removesuffix() (bytearray method)": [[341, "bytearray.removesuffix"]], "removesuffix() (bytes method)": [[341, "bytes.removesuffix"]], "removesuffix() (str method)": [[341, "str.removesuffix"]], "repetition": [[341, "index-20"]], "replace() (bytearray method)": [[341, "bytearray.replace"]], "replace() (bytes method)": [[341, "bytes.replace"]], "replace() (str method)": [[341, "str.replace"]], "reverse() (sequence method)": [[341, "index-24"]], "rfind() (bytearray method)": [[341, "bytearray.rfind"]], "rfind() (bytes method)": [[341, "bytes.rfind"]], "rfind() (str method)": [[341, "str.rfind"]], "rindex() (bytearray method)": [[341, "bytearray.rindex"]], "rindex() (bytes method)": [[341, "bytes.rindex"]], "rindex() (str method)": [[341, "str.rindex"]], "rjust() (bytearray method)": [[341, "bytearray.rjust"]], "rjust() (bytes method)": [[341, "bytes.rjust"]], "rjust() (str method)": [[341, "str.rjust"]], "rpartition() (bytearray method)": [[341, "bytearray.rpartition"]], "rpartition() (bytes method)": [[341, "bytes.rpartition"]], "rpartition() (str method)": [[341, "str.rpartition"]], "rsplit() (bytearray method)": [[341, "bytearray.rsplit"]], "rsplit() (bytes method)": [[341, "bytes.rsplit"]], "rsplit() (str method)": [[341, "str.rsplit"]], "rstrip() (bytearray method)": [[341, "bytearray.rstrip"]], "rstrip() (bytes method)": [[341, "bytes.rstrip"]], "rstrip() (str method)": [[341, "str.rstrip"]], "set (built-in class)": [[341, "set"]], "setdefault() (dict method)": [[341, "dict.setdefault"]], "shape (memoryview attribute)": [[341, "memoryview.shape"]], "shifting": [[341, "index-16"], [427, "index-71"]], "sort() (list method)": [[341, "list.sort"]], "space": [[341, "index-37"], [341, "index-47"], [342, "index-4"], [432, "index-8"]], "split() (bytearray method)": [[341, "bytearray.split"]], "split() (bytes method)": [[341, "bytes.split"]], "split() (str method)": [[341, "str.split"]], "splitlines() (bytearray method)": [[341, "bytearray.splitlines"]], "splitlines() (bytes method)": [[341, "bytes.splitlines"]], "splitlines() (str method)": [[341, "str.splitlines"]], "sprintf-style formatting": [[341, "index-35"], [341, "index-45"]], "start (range attribute)": [[341, "range.start"]], "startswith() (bytearray method)": [[341, "bytearray.startswith"]], "startswith() (bytes method)": [[341, "bytes.startswith"]], "startswith() (str method)": [[341, "str.startswith"]], "step (range attribute)": [[341, "range.step"]], "stop (range attribute)": [[341, "range.stop"]], "str (built-in class)": [[341, "index-28"], [341, "index-30"], [341, "index-31"], [341, "str"]], "str.splitlines method": [[341, "index-34"]], "strides (memoryview attribute)": [[341, "memoryview.strides"]], "strip() (bytearray method)": [[341, "bytearray.strip"]], "strip() (bytes method)": [[341, "bytes.strip"]], "strip() (str method)": [[341, "str.strip"]], "suboffsets (memoryview attribute)": [[341, "memoryview.suboffsets"]], "subscript": [[341, "index-20"], [341, "index-24"]], "swapcase() (bytearray method)": [[341, "bytearray.swapcase"]], "swapcase() (bytes method)": [[341, "bytes.swapcase"]], "swapcase() (str method)": [[341, "str.swapcase"]], "symmetric_difference() (frozenset method)": [[341, "frozenset.symmetric_difference"]], "symmetric_difference_update() (frozenset method)": [[341, "frozenset.symmetric_difference_update"]], "text sequence type": [[341, "index-28"]], "title() (bytearray method)": [[341, "bytearray.title"]], "title() (bytes method)": [[341, "bytes.title"]], "title() (str method)": [[341, "str.title"]], "to_bytes() (int method)": [[341, "int.to_bytes"]], "tobytes() (memoryview method)": [[341, "memoryview.tobytes"]], "tolist() (memoryview method)": [[341, "memoryview.tolist"]], "toreadonly() (memoryview method)": [[341, "memoryview.toreadonly"]], "translate() (bytearray method)": [[341, "bytearray.translate"]], "translate() (bytes method)": [[341, "bytes.translate"]], "translate() (str method)": [[341, "str.translate"]], "truth": [[341, "index-1"]], "tuple (built-in class)": [[341, "tuple"]], "type annotation; type hint": [[341, "index-55"]], "types": [[341, "index-0"], [341, "index-14"], [341, "index-16"], [341, "index-20"], [341, "index-22"], [341, "index-23"], [341, "index-24"], [341, "index-52"], [341, "index-65"], [382, "module-types"]], "unary operator": [[341, "index-13"], [427, "index-60"], [427, "index-61"]], "union() (frozenset method)": [[341, "frozenset.union"]], "update() (dict method)": [[341, "dict.update"]], "update() (frozenset method)": [[341, "frozenset.update"]], "upper() (bytearray method)": [[341, "bytearray.upper"]], "upper() (bytes method)": [[341, "bytes.upper"]], "upper() (str method)": [[341, "str.upper"]], "value": [[341, "index-1"], [424, "index-31"], [427, "index-17"]], "values": [[341, "index-17"], [433, "index-3"]], "values() (dict method)": [[341, "dict.values"]], "while": [[341, "index-1"], [424, "index-4"], [433, "index-30"], [433, "index-33"]], "zfill() (bytearray method)": [[341, "bytearray.zfill"]], "zfill() (bytes method)": [[341, "bytes.zfill"]], "zfill() (str method)": [[341, "str.zfill"]], ", (comma)": [[342, "index-8"], [424, "index-16"], [424, "index-28"], [424, "index-42"], [427, "index-10"], [427, "index-15"], [427, "index-16"], [427, "index-17"], [427, "index-44"], [427, "index-47"], [427, "index-91"], [433, "index-18"], [433, "index-34"], [433, "index-43"], [433, "index-45"], [433, "index-6"]], "= (equals)": [[342, "index-3"], [344, "index-1"], [424, "index-31"], [425, "index-86"], [427, "index-47"], [432, "index-25"], [433, "index-4"]], "formatter (class in string)": [[342, "string.Formatter"]], "pep 292": [[342, "index-12"], [463, "index-3"]], "pep 378": [[342, "index-9"], [466, "index-3"], [468, "index-1"]], "pep 682": [[342, "index-6"], [470, "index-22"]], "template (class in string)": [[342, "string.Template"]], "ascii_letters (in module string)": [[342, "string.ascii_letters"]], "ascii_lowercase (in module string)": [[342, "string.ascii_lowercase"]], "ascii_uppercase (in module string)": [[342, "string.ascii_uppercase"]], "capwords() (in module string)": [[342, "string.capwords"]], "check_unused_args() (string.formatter method)": [[342, "string.Formatter.check_unused_args"]], "convert_field() (string.formatter method)": [[342, "string.Formatter.convert_field"]], "digits (in module string)": [[342, "string.digits"]], "format() (string.formatter method)": [[342, "string.Formatter.format"]], "format_field() (string.formatter method)": [[342, "string.Formatter.format_field"]], "get_field() (string.formatter method)": [[342, "string.Formatter.get_field"]], "get_identifiers() (string.template method)": [[342, "string.Template.get_identifiers"]], "get_value() (string.formatter method)": [[342, "string.Formatter.get_value"]], "hexdigits (in module string)": [[342, "string.hexdigits"]], "in string formatting": [[342, "index-10"], [342, "index-2"], [342, "index-3"], [342, "index-4"], [342, "index-5"], [342, "index-7"], [342, "index-8"]], "in template strings": [[342, "index-13"]], "is_valid() (string.template method)": [[342, "string.Template.is_valid"]], "octdigits (in module string)": [[342, "string.octdigits"]], "parse() (string.formatter method)": [[342, "string.Formatter.parse"]], "printable (in module string)": [[342, "string.printable"]], "punctuation (in module string)": [[342, "string.punctuation"]], "safe_substitute() (string.template method)": [[342, "string.Template.safe_substitute"]], "substitute() (string.template method)": [[342, "string.Template.substitute"]], "template (string.template attribute)": [[342, "string.Template.template"]], "vformat() (string.formatter method)": [[342, "string.Formatter.vformat"]], "whitespace (in module string)": [[342, "string.whitespace"]], "z": [[342, "index-5"]], "rfc 3454": [[343, "index-0"], [343, "index-1"]], "in_table_a1() (in module stringprep)": [[343, "stringprep.in_table_a1"]], "in_table_b1() (in module stringprep)": [[343, "stringprep.in_table_b1"]], "in_table_c11() (in module stringprep)": [[343, "stringprep.in_table_c11"]], "in_table_c11_c12() (in module stringprep)": [[343, "stringprep.in_table_c11_c12"]], "in_table_c12() (in module stringprep)": [[343, "stringprep.in_table_c12"]], "in_table_c21() (in module stringprep)": [[343, "stringprep.in_table_c21"]], "in_table_c21_c22() (in module stringprep)": [[343, "stringprep.in_table_c21_c22"]], "in_table_c22() (in module stringprep)": [[343, "stringprep.in_table_c22"]], "in_table_c3() (in module stringprep)": [[343, "stringprep.in_table_c3"]], "in_table_c4() (in module stringprep)": [[343, "stringprep.in_table_c4"]], "in_table_c5() (in module stringprep)": [[343, "stringprep.in_table_c5"]], "in_table_c6() (in module stringprep)": [[343, "stringprep.in_table_c6"]], "in_table_c7() (in module stringprep)": [[343, "stringprep.in_table_c7"]], "in_table_c8() (in module stringprep)": [[343, "stringprep.in_table_c8"]], "in_table_c9() (in module stringprep)": [[343, "stringprep.in_table_c9"]], "in_table_d1() (in module stringprep)": [[343, "stringprep.in_table_d1"]], "in_table_d2() (in module stringprep)": [[343, "stringprep.in_table_d2"]], "map_table_b2() (in module stringprep)": [[343, "stringprep.map_table_b2"]], "map_table_b3() (in module stringprep)": [[343, "stringprep.map_table_b3"]], "stringprep": [[343, "module-stringprep"]], "@ (at)": [[344, "index-1"], [424, "index-29"], [424, "index-43"], [427, "index-66"]], "struct (class in struct)": [[344, "struct.Struct"]], "calcsize() (in module struct)": [[344, "struct.calcsize"]], "format (struct.struct attribute)": [[344, "struct.Struct.format"]], "in struct format strings": [[344, "index-1"], [344, "index-2"], [344, "index-3"]], "iter_unpack() (in module struct)": [[344, "struct.iter_unpack"]], "iter_unpack() (struct.struct method)": [[344, "struct.Struct.iter_unpack"]], "pack() (in module struct)": [[344, "struct.pack"]], "pack() (struct.struct method)": [[344, "struct.Struct.pack"]], "pack_into() (in module struct)": [[344, "struct.pack_into"]], "pack_into() (struct.struct method)": [[344, "struct.Struct.pack_into"]], "packing": [[344, "index-0"]], "size (struct.struct attribute)": [[344, "struct.Struct.size"]], "structures": [[344, "index-0"]], "unpack() (in module struct)": [[344, "struct.unpack"]], "unpack() (struct.struct method)": [[344, "struct.Struct.unpack"]], "unpack_from() (in module struct)": [[344, "struct.unpack_from"]], "unpack_from() (struct.struct method)": [[344, "struct.Struct.unpack_from"]], "above_normal_priority_class (in module subprocess)": [[345, "subprocess.ABOVE_NORMAL_PRIORITY_CLASS"]], "below_normal_priority_class (in module subprocess)": [[345, "subprocess.BELOW_NORMAL_PRIORITY_CLASS"]], "create_breakaway_from_job (in module subprocess)": [[345, "subprocess.CREATE_BREAKAWAY_FROM_JOB"]], "create_default_error_mode (in module subprocess)": [[345, "subprocess.CREATE_DEFAULT_ERROR_MODE"]], "create_new_console (in module subprocess)": [[345, "subprocess.CREATE_NEW_CONSOLE"]], "create_new_process_group (in module subprocess)": [[345, "subprocess.CREATE_NEW_PROCESS_GROUP"]], "create_no_window (in module subprocess)": [[345, "subprocess.CREATE_NO_WINDOW"]], "calledprocesserror": [[345, "subprocess.CalledProcessError"]], "completedprocess (class in subprocess)": [[345, "subprocess.CompletedProcess"]], "detached_process (in module subprocess)": [[345, "subprocess.DETACHED_PROCESS"]], "devnull (in module subprocess)": [[345, "subprocess.DEVNULL"]], "high_priority_class (in module subprocess)": [[345, "subprocess.HIGH_PRIORITY_CLASS"]], "idle_priority_class (in module subprocess)": [[345, "subprocess.IDLE_PRIORITY_CLASS"]], "normal_priority_class (in module subprocess)": [[345, "subprocess.NORMAL_PRIORITY_CLASS"]], "pep 324": [[345, "index-0"], [463, "index-8"]], "pipe (in module subprocess)": [[345, "subprocess.PIPE"]], "popen (class in subprocess)": [[345, "subprocess.Popen"]], "realtime_priority_class (in module subprocess)": [[345, "subprocess.REALTIME_PRIORITY_CLASS"]], "startf_useshowwindow (in module subprocess)": [[345, "subprocess.STARTF_USESHOWWINDOW"]], "startf_usestdhandles (in module subprocess)": [[345, "subprocess.STARTF_USESTDHANDLES"]], "startupinfo (class in subprocess)": [[345, "subprocess.STARTUPINFO"]], "stdout (in module subprocess)": [[345, "subprocess.STDOUT"]], "std_error_handle (in module subprocess)": [[345, "subprocess.STD_ERROR_HANDLE"]], "std_input_handle (in module subprocess)": [[345, "subprocess.STD_INPUT_HANDLE"]], "std_output_handle (in module subprocess)": [[345, "subprocess.STD_OUTPUT_HANDLE"]], "sw_hide (in module subprocess)": [[345, "subprocess.SW_HIDE"]], "subprocesserror": [[345, "subprocess.SubprocessError"]], "systemroot": [[345, "index-4"]], "timeoutexpired": [[345, "subprocess.TimeoutExpired"]], "args (subprocess.completedprocess attribute)": [[345, "subprocess.CompletedProcess.args"]], "args (subprocess.popen attribute)": [[345, "subprocess.Popen.args"]], "call() (in module subprocess)": [[345, "subprocess.call"]], "check_call() (in module subprocess)": [[345, "subprocess.check_call"]], "check_output() (in module subprocess)": [[345, "subprocess.check_output"]], "check_returncode() (subprocess.completedprocess method)": [[345, "subprocess.CompletedProcess.check_returncode"]], "cmd (subprocess.calledprocesserror attribute)": [[345, "subprocess.CalledProcessError.cmd"]], "cmd (subprocess.timeoutexpired attribute)": [[345, "subprocess.TimeoutExpired.cmd"]], "communicate() (subprocess.popen method)": [[345, "subprocess.Popen.communicate"]], "dwflags (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.dwFlags"]], "getoutput() (in module subprocess)": [[345, "subprocess.getoutput"]], "getstatusoutput() (in module subprocess)": [[345, "subprocess.getstatusoutput"]], "hstderror (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.hStdError"]], "hstdinput (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.hStdInput"]], "hstdoutput (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.hStdOutput"]], "kill() (subprocess.popen method)": [[345, "subprocess.Popen.kill"]], "lpattributelist (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.lpAttributeList"]], "output (subprocess.calledprocesserror attribute)": [[345, "subprocess.CalledProcessError.output"]], "output (subprocess.timeoutexpired attribute)": [[345, "subprocess.TimeoutExpired.output"]], "pid (subprocess.popen attribute)": [[345, "subprocess.Popen.pid"]], "poll() (subprocess.popen method)": [[345, "subprocess.Popen.poll"]], "returncode (subprocess.calledprocesserror attribute)": [[345, "subprocess.CalledProcessError.returncode"]], "returncode (subprocess.completedprocess attribute)": [[345, "subprocess.CompletedProcess.returncode"]], "returncode (subprocess.popen attribute)": [[345, "subprocess.Popen.returncode"]], "run() (in module subprocess)": [[345, "subprocess.run"]], "send_signal() (subprocess.popen method)": [[345, "subprocess.Popen.send_signal"]], "stderr (subprocess.calledprocesserror attribute)": [[345, "subprocess.CalledProcessError.stderr"]], "stderr (subprocess.completedprocess attribute)": [[345, "subprocess.CompletedProcess.stderr"]], "stderr (subprocess.popen attribute)": [[345, "subprocess.Popen.stderr"]], "stderr (subprocess.timeoutexpired attribute)": [[345, "subprocess.TimeoutExpired.stderr"]], "stdin (subprocess.popen attribute)": [[345, "subprocess.Popen.stdin"]], "stdout (subprocess.calledprocesserror attribute)": [[345, "subprocess.CalledProcessError.stdout"]], "stdout (subprocess.completedprocess attribute)": [[345, "subprocess.CompletedProcess.stdout"]], "stdout (subprocess.popen attribute)": [[345, "subprocess.Popen.stdout"]], "stdout (subprocess.timeoutexpired attribute)": [[345, "subprocess.TimeoutExpired.stdout"]], "subprocess": [[345, "module-subprocess"]], "subprocess module": [[345, "index-1"]], "terminate() (subprocess.popen method)": [[345, "subprocess.Popen.terminate"]], "timeout (subprocess.timeoutexpired attribute)": [[345, "subprocess.TimeoutExpired.timeout"]], "wshowwindow (subprocess.startupinfo attribute)": [[345, "subprocess.STARTUPINFO.wShowWindow"]], "wait() (subprocess.popen method)": [[345, "subprocess.Popen.wait"]], "audio_file_encoding_adpcm_g721 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_ADPCM_G721"]], "audio_file_encoding_adpcm_g722 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_ADPCM_G722"]], "audio_file_encoding_adpcm_g723_3 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_3"]], "audio_file_encoding_adpcm_g723_5 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_5"]], "audio_file_encoding_alaw_8 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_ALAW_8"]], "audio_file_encoding_double (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_DOUBLE"]], "audio_file_encoding_float (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_FLOAT"]], "audio_file_encoding_linear_16 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_LINEAR_16"]], "audio_file_encoding_linear_24 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_LINEAR_24"]], "audio_file_encoding_linear_32 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_LINEAR_32"]], "audio_file_encoding_linear_8 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_LINEAR_8"]], "audio_file_encoding_mulaw_8 (in module sunau)": [[346, "sunau.AUDIO_FILE_ENCODING_MULAW_8"]], "audio_file_magic (in module sunau)": [[346, "sunau.AUDIO_FILE_MAGIC"]], "pep 594#sunau": [[346, "index-0"]], "close() (sunau.au_read method)": [[346, "sunau.AU_read.close"]], "close() (sunau.au_write method)": [[346, "sunau.AU_write.close"]], "getcompname() (sunau.au_read method)": [[346, "sunau.AU_read.getcompname"]], "getcomptype() (sunau.au_read method)": [[346, "sunau.AU_read.getcomptype"]], "getframerate() (sunau.au_read method)": [[346, "sunau.AU_read.getframerate"]], "getmark() (sunau.au_read method)": [[346, "sunau.AU_read.getmark"]], "getmarkers() (sunau.au_read method)": [[346, "sunau.AU_read.getmarkers"]], "getnchannels() (sunau.au_read method)": [[346, "sunau.AU_read.getnchannels"]], "getnframes() (sunau.au_read method)": [[346, "sunau.AU_read.getnframes"]], "getparams() (sunau.au_read method)": [[346, "sunau.AU_read.getparams"]], "getsampwidth() (sunau.au_read method)": [[346, "sunau.AU_read.getsampwidth"]], "open() (in module sunau)": [[346, "sunau.open"]], "readframes() (sunau.au_read method)": [[346, "sunau.AU_read.readframes"]], "rewind() (sunau.au_read method)": [[346, "sunau.AU_read.rewind"]], "setcomptype() (sunau.au_write method)": [[346, "sunau.AU_write.setcomptype"]], "setframerate() (sunau.au_write method)": [[346, "sunau.AU_write.setframerate"]], "setnchannels() (sunau.au_write method)": [[346, "sunau.AU_write.setnchannels"]], "setnframes() (sunau.au_write method)": [[346, "sunau.AU_write.setnframes"]], "setparams() (sunau.au_write method)": [[346, "sunau.AU_write.setparams"]], "setpos() (sunau.au_read method)": [[346, "sunau.AU_read.setpos"]], "setsampwidth() (sunau.au_write method)": [[346, "sunau.AU_write.setsampwidth"]], "sunau": [[346, "module-sunau"]], "tell() (sunau.au_read method)": [[346, "sunau.AU_read.tell"]], "tell() (sunau.au_write method)": [[346, "sunau.AU_write.tell"]], "writeframes() (sunau.au_write method)": [[346, "sunau.AU_write.writeframes"]], "writeframesraw() (sunau.au_write method)": [[346, "sunau.AU_write.writeframesraw"]], "class (class in symtable)": [[348, "symtable.Class"]], "function (class in symtable)": [[348, "symtable.Function"]], "symbol (class in symtable)": [[348, "symtable.Symbol"]], "symboltable (class in symtable)": [[348, "symtable.SymbolTable"]], "get_children() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_children"]], "get_frees() (symtable.function method)": [[348, "symtable.Function.get_frees"]], "get_globals() (symtable.function method)": [[348, "symtable.Function.get_globals"]], "get_id() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_id"]], "get_identifiers() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_identifiers"]], "get_lineno() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_lineno"]], "get_locals() (symtable.function method)": [[348, "symtable.Function.get_locals"]], "get_methods() (symtable.class method)": [[348, "symtable.Class.get_methods"]], "get_name() (symtable.symbol method)": [[348, "symtable.Symbol.get_name"]], "get_name() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_name"]], "get_namespace() (symtable.symbol method)": [[348, "symtable.Symbol.get_namespace"]], "get_namespaces() (symtable.symbol method)": [[348, "symtable.Symbol.get_namespaces"]], "get_nonlocals() (symtable.function method)": [[348, "symtable.Function.get_nonlocals"]], "get_parameters() (symtable.function method)": [[348, "symtable.Function.get_parameters"]], "get_symbols() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_symbols"]], "get_type() (symtable.symboltable method)": [[348, "symtable.SymbolTable.get_type"]], "has_children() (symtable.symboltable method)": [[348, "symtable.SymbolTable.has_children"]], "is_annotated() (symtable.symbol method)": [[348, "symtable.Symbol.is_annotated"]], "is_assigned() (symtable.symbol method)": [[348, "symtable.Symbol.is_assigned"]], "is_declared_global() (symtable.symbol method)": [[348, "symtable.Symbol.is_declared_global"]], "is_free() (symtable.symbol method)": [[348, "symtable.Symbol.is_free"]], "is_global() (symtable.symbol method)": [[348, "symtable.Symbol.is_global"]], "is_imported() (symtable.symbol method)": [[348, "symtable.Symbol.is_imported"]], "is_local() (symtable.symbol method)": [[348, "symtable.Symbol.is_local"]], "is_namespace() (symtable.symbol method)": [[348, "symtable.Symbol.is_namespace"]], "is_nested() (symtable.symboltable method)": [[348, "symtable.SymbolTable.is_nested"]], "is_nonlocal() (symtable.symbol method)": [[348, "symtable.Symbol.is_nonlocal"]], "is_optimized() (symtable.symboltable method)": [[348, "symtable.SymbolTable.is_optimized"]], "is_parameter() (symtable.symbol method)": [[348, "symtable.Symbol.is_parameter"]], "is_referenced() (symtable.symbol method)": [[348, "symtable.Symbol.is_referenced"]], "lookup() (symtable.symboltable method)": [[348, "symtable.SymbolTable.lookup"]], "symtable": [[348, "module-symtable"]], "symtable() (in module symtable)": [[348, "symtable.symtable"]], "pep 3149": [[349, "index-0"], [472, "index-6"]], "pep 421": [[349, "index-15"], [349, "index-16"], [473, "index-19"]], "__breakpointhook__ (in module sys)": [[349, "sys.__breakpointhook__"]], "__displayhook__ (in module sys)": [[349, "sys.__displayhook__"]], "__excepthook__ (in module sys)": [[349, "sys.__excepthook__"]], "__interactivehook__ (in module sys)": [[349, "sys.__interactivehook__"]], "__stderr__ (in module sys)": [[349, "sys.__stderr__"]], "__stdin__ (in module sys)": [[349, "sys.__stdin__"]], "__stdout__ (in module sys)": [[349, "sys.__stdout__"]], "__unraisablehook__ (in module sys)": [[349, "sys.__unraisablehook__"]], "_clear_type_cache() (in module sys)": [[349, "sys._clear_type_cache"]], "_current_exceptions() (in module sys)": [[349, "sys._current_exceptions"]], "_current_frames() (in module sys)": [[349, "sys._current_frames"]], "_debugmallocstats() (in module sys)": [[349, "sys._debugmallocstats"]], "_emscripten_info (in module sys)": [[349, "sys._emscripten_info"]], "_enablelegacywindowsfsencoding() (in module sys)": [[349, "sys._enablelegacywindowsfsencoding"]], "_getframe() (in module sys)": [[349, "sys._getframe"]], "_getframemodulename() (in module sys)": [[349, "sys._getframemodulename"]], "_xoptions (in module sys)": [[349, "sys._xoptions"]], "abiflags (in module sys)": [[349, "sys.abiflags"]], "activate_stack_trampoline() (in module sys)": [[349, "sys.activate_stack_trampoline"]], "addaudithook() (in module sys)": [[349, "sys.addaudithook"]], "algorithm (sys.hash_info attribute)": [[349, "sys.hash_info.algorithm"]], "api_version (in module sys)": [[349, "sys.api_version"]], "audit() (in module sys)": [[349, "sys.audit"]], "auditing": [[349, "index-2"]], "base_exec_prefix (in module sys)": [[349, "sys.base_exec_prefix"]], "base_prefix (in module sys)": [[349, "sys.base_prefix"]], "bits_per_digit (sys.int_info attribute)": [[349, "sys.int_info.bits_per_digit"]], "breakpointhook() (in module sys)": [[349, "sys.breakpointhook"]], "builtin_module_names (in module sys)": [[349, "sys.builtin_module_names"]], "byteorder (in module sys)": [[349, "sys.byteorder"]], "bytes_warning (sys.flags attribute)": [[349, "sys.flags.bytes_warning"]], "call_tracing() (in module sys)": [[349, "sys.call_tracing"]], "deactivate_stack_trampoline() (in module sys)": [[349, "sys.deactivate_stack_trampoline"]], "debug (sys.flags attribute)": [[349, "sys.flags.debug"]], "default_max_str_digits (sys.int_info attribute)": [[349, "sys.int_info.default_max_str_digits"]], "dev_mode (sys.flags attribute)": [[349, "sys.flags.dev_mode"]], "dig (sys.float_info attribute)": [[349, "sys.float_info.dig"]], "displayhook() (in module sys)": [[349, "sys.displayhook"]], "dllhandle (in module sys)": [[349, "sys.dllhandle"]], "dont_write_bytecode (in module sys)": [[349, "sys.dont_write_bytecode"]], "dont_write_bytecode (sys.flags attribute)": [[349, "sys.flags.dont_write_bytecode"]], "emscripten_version (sys._emscripten_info attribute)": [[349, "sys._emscripten_info.emscripten_version"]], "epsilon (sys.float_info attribute)": [[349, "sys.float_info.epsilon"]], "exception() (in module sys)": [[349, "sys.exception"]], "exec_prefix (in module sys)": [[349, "sys.exec_prefix"]], "exit() (in module sys)": [[349, "sys.exit"]], "flags (in module sys)": [[349, "sys.flags"]], "float_info (in module sys)": [[349, "sys.float_info"]], "float_repr_style (in module sys)": [[349, "sys.float_repr_style"]], "get_asyncgen_hooks() (in module sys)": [[349, "sys.get_asyncgen_hooks"]], "get_coroutine_origin_tracking_depth() (in module sys)": [[349, "sys.get_coroutine_origin_tracking_depth"]], "get_int_max_str_digits() (in module sys)": [[349, "sys.get_int_max_str_digits"]], "getallocatedblocks() (in module sys)": [[349, "sys.getallocatedblocks"]], "getandroidapilevel() (in module sys)": [[349, "sys.getandroidapilevel"]], "getdefaultencoding() (in module sys)": [[349, "sys.getdefaultencoding"]], "getdlopenflags() (in module sys)": [[349, "sys.getdlopenflags"]], "getfilesystemencodeerrors() (in module sys)": [[349, "sys.getfilesystemencodeerrors"]], "getfilesystemencoding() (in module sys)": [[349, "sys.getfilesystemencoding"]], "getprofile() (in module sys)": [[349, "sys.getprofile"]], "getrecursionlimit() (in module sys)": [[349, "sys.getrecursionlimit"]], "getrefcount() (in module sys)": [[349, "sys.getrefcount"]], "getsizeof() (in module sys)": [[349, "sys.getsizeof"]], "getswitchinterval() (in module sys)": [[349, "sys.getswitchinterval"]], "gettrace() (in module sys)": [[349, "sys.gettrace"]], "getunicodeinternedsize() (in module sys)": [[349, "sys.getunicodeinternedsize"]], "getwindowsversion() (in module sys)": [[349, "sys.getwindowsversion"]], "hash_bits (sys.hash_info attribute)": [[349, "sys.hash_info.hash_bits"]], "hash_info (in module sys)": [[349, "sys.hash_info"]], "hash_randomization (sys.flags attribute)": [[349, "sys.flags.hash_randomization"]], "hexversion (in module sys)": [[349, "sys.hexversion"]], "ignore_environment (sys.flags attribute)": [[349, "sys.flags.ignore_environment"]], "imag (sys.hash_info attribute)": [[349, "sys.hash_info.imag"]], "implementation (in module sys)": [[349, "sys.implementation"]], "inf (sys.hash_info attribute)": [[349, "sys.hash_info.inf"]], "inspect (sys.flags attribute)": [[349, "sys.flags.inspect"]], "int_info (in module sys)": [[349, "sys.int_info"]], "int_max_str_digits (sys.flags attribute)": [[349, "sys.flags.int_max_str_digits"]], "interactive (sys.flags attribute)": [[349, "sys.flags.interactive"]], "intern() (in module sys)": [[349, "sys.intern"]], "interpreter prompts": [[349, "index-27"]], "is_finalizing() (in module sys)": [[349, "sys.is_finalizing"]], "is_stack_trampoline_active() (in module sys)": [[349, "sys.is_stack_trampoline_active"]], "isolated (sys.flags attribute)": [[349, "sys.flags.isolated"]], "last_exc (in module sys)": [[349, "sys.last_exc"]], "last_traceback (in module sys)": [[349, "sys.last_traceback"], [425, "index-66"]], "last_type (in module sys)": [[349, "sys.last_type"]], "last_value (in module sys)": [[349, "sys.last_value"]], "lock (sys.thread_info attribute)": [[349, "sys.thread_info.lock"]], "mant_dig (sys.float_info attribute)": [[349, "sys.float_info.mant_dig"]], "max (sys.float_info attribute)": [[349, "sys.float_info.max"]], "max_10_exp (sys.float_info attribute)": [[349, "sys.float_info.max_10_exp"]], "max_exp (sys.float_info attribute)": [[349, "sys.float_info.max_exp"]], "maxsize (in module sys)": [[349, "sys.maxsize"]], "maxunicode (in module sys)": [[349, "sys.maxunicode"]], "meta_path (in module sys)": [[349, "sys.meta_path"]], "min (sys.float_info attribute)": [[349, "sys.float_info.min"]], "min_10_exp (sys.float_info attribute)": [[349, "sys.float_info.min_10_exp"]], "min_exp (sys.float_info attribute)": [[349, "sys.float_info.min_exp"]], "modulus (sys.hash_info attribute)": [[349, "sys.hash_info.modulus"]], "name (sys.thread_info attribute)": [[349, "sys.thread_info.name"]], "nan (sys.hash_info attribute)": [[349, "sys.hash_info.nan"]], "no_site (sys.flags attribute)": [[349, "sys.flags.no_site"]], "no_user_site (sys.flags attribute)": [[349, "sys.flags.no_user_site"]], "optimize (sys.flags attribute)": [[349, "sys.flags.optimize"]], "orig_argv (in module sys)": [[349, "sys.orig_argv"]], "path_hooks (in module sys)": [[349, "sys.path_hooks"]], "path_importer_cache (in module sys)": [[349, "sys.path_importer_cache"]], "platlibdir (in module sys)": [[349, "sys.platlibdir"]], "prefix (in module sys)": [[349, "sys.prefix"]], "profile function": [[349, "index-10"], [349, "index-28"], [362, "index-2"], [362, "index-3"]], "profiler": [[349, "index-10"], [349, "index-28"]], "prompts, interpreter": [[349, "index-27"]], "ps1 (in module sys)": [[349, "sys.ps1"]], "ps2 (in module sys)": [[349, "sys.ps2"]], "pthreads (sys._emscripten_info attribute)": [[349, "sys._emscripten_info.pthreads"]], "pycache_prefix (in module sys)": [[349, "sys.pycache_prefix"]], "quiet (sys.flags attribute)": [[349, "sys.flags.quiet"]], "radix (sys.float_info attribute)": [[349, "sys.float_info.radix"]], "rounds (sys.float_info attribute)": [[349, "sys.float_info.rounds"]], "runtime (sys._emscripten_info attribute)": [[349, "sys._emscripten_info.runtime"]], "safe_path (sys.flags attribute)": [[349, "sys.flags.safe_path"]], "seed_bits (sys.hash_info attribute)": [[349, "sys.hash_info.seed_bits"]], "set_asyncgen_hooks() (in module sys)": [[349, "sys.set_asyncgen_hooks"]], "set_coroutine_origin_tracking_depth() (in module sys)": [[349, "sys.set_coroutine_origin_tracking_depth"]], "set_int_max_str_digits() (in module sys)": [[349, "sys.set_int_max_str_digits"]], "setdlopenflags() (in module sys)": [[349, "sys.setdlopenflags"]], "setprofile() (in module sys)": [[349, "sys.setprofile"]], "setrecursionlimit() (in module sys)": [[349, "sys.setrecursionlimit"]], "settrace() (in module sys)": [[349, "sys.settrace"]], "shared_memory (sys._emscripten_info attribute)": [[349, "sys._emscripten_info.shared_memory"]], "sizeof_digit (sys.int_info attribute)": [[349, "sys.int_info.sizeof_digit"]], "stdlib_module_names (in module sys)": [[349, "sys.stdlib_module_names"]], "str_digits_check_threshold (sys.int_info attribute)": [[349, "sys.int_info.str_digits_check_threshold"]], "thread_info (in module sys)": [[349, "sys.thread_info"]], "trace function": [[349, "index-11"], [349, "index-29"], [362, "index-0"], [362, "index-1"]], "traceback": [[349, "index-8"], [378, "index-0"], [378, "module-traceback"], [424, "index-11"], [425, "index-66"], [433, "index-28"]], "tracebacklimit (in module sys)": [[349, "sys.tracebacklimit"]], "unraisablehook() (in module sys)": [[349, "sys.unraisablehook"]], "utf8_mode (sys.flags attribute)": [[349, "sys.flags.utf8_mode"]], "verbose (sys.flags attribute)": [[349, "sys.flags.verbose"]], "version (sys.thread_info attribute)": [[349, "sys.thread_info.version"]], "version_info (in module sys)": [[349, "sys.version_info"]], "warn_default_encoding (sys.flags attribute)": [[349, "sys.flags.warn_default_encoding"]], "warnoptions (in module sys)": [[349, "sys.warnoptions"]], "width (sys.hash_info attribute)": [[349, "sys.hash_info.width"]], "winver (in module sys)": [[349, "sys.winver"]], "branch (monitoring event)": [[350, "monitoring-event-BRANCH"]], "call (monitoring event)": [[350, "monitoring-event-CALL"]], "c_raise (monitoring event)": [[350, "monitoring-event-C_RAISE"]], "c_return (monitoring event)": [[350, "monitoring-event-C_RETURN"]], "disable (in module sys.monitoring)": [[350, "sys.monitoring.DISABLE"]], "exception_handled (monitoring event)": [[350, "monitoring-event-EXCEPTION_HANDLED"]], "instruction (monitoring event)": [[350, "monitoring-event-INSTRUCTION"]], "jump (monitoring event)": [[350, "monitoring-event-JUMP"]], "line (monitoring event)": [[350, "monitoring-event-LINE"]], "missing (in module sys.monitoring)": [[350, "sys.monitoring.MISSING"]], "no_events (monitoring event)": [[350, "monitoring-event-NO_EVENTS"]], "pep 380#use-of-stopiteration-to-return-values": [[350, "index-0"]], "py_resume (monitoring event)": [[350, "monitoring-event-PY_RESUME"]], "py_return (monitoring event)": [[350, "monitoring-event-PY_RETURN"]], "py_start (monitoring event)": [[350, "monitoring-event-PY_START"]], "py_throw (monitoring event)": [[350, "monitoring-event-PY_THROW"]], "py_unwind (monitoring event)": [[350, "monitoring-event-PY_UNWIND"]], "py_yield (monitoring event)": [[350, "monitoring-event-PY_YIELD"]], "raise (monitoring event)": [[350, "monitoring-event-RAISE"]], "reraise (monitoring event)": [[350, "monitoring-event-RERAISE"]], "stop_iteration (monitoring event)": [[350, "monitoring-event-STOP_ITERATION"]], "free_tool_id() (in module sys.monitoring)": [[350, "sys.monitoring.free_tool_id"]], "get_events() (in module sys.monitoring)": [[350, "sys.monitoring.get_events"]], "get_local_events() (in module sys.monitoring)": [[350, "sys.monitoring.get_local_events"]], "get_tool() (in module sys.monitoring)": [[350, "sys.monitoring.get_tool"]], "register_callback() (in module sys.monitoring)": [[350, "sys.monitoring.register_callback"]], "restart_events() (in module sys.monitoring)": [[350, "sys.monitoring.restart_events"]], "set_events() (in module sys.monitoring)": [[350, "sys.monitoring.set_events"]], "set_local_events() (in module sys.monitoring)": [[350, "sys.monitoring.set_local_events"]], "sys.monitoring": [[350, "module-sys.monitoring"]], "use_tool_id() (in module sys.monitoring)": [[350, "sys.monitoring.use_tool_id"]], "_get_preferred_schemes() (in module sysconfig)": [[352, "sysconfig._get_preferred_schemes"]], "configuration information": [[352, "index-0"]], "get_config_h_filename() (in module sysconfig)": [[352, "sysconfig.get_config_h_filename"]], "get_config_var() (in module sysconfig)": [[352, "sysconfig.get_config_var"]], "get_config_vars() (in module sysconfig)": [[352, "sysconfig.get_config_vars"]], "get_default_scheme() (in module sysconfig)": [[352, "sysconfig.get_default_scheme"]], "get_makefile_filename() (in module sysconfig)": [[352, "sysconfig.get_makefile_filename"]], "get_path() (in module sysconfig)": [[352, "sysconfig.get_path"]], "get_path_names() (in module sysconfig)": [[352, "sysconfig.get_path_names"]], "get_paths() (in module sysconfig)": [[352, "sysconfig.get_paths"]], "get_platform() (in module sysconfig)": [[352, "sysconfig.get_platform"]], "get_preferred_scheme() (in module sysconfig)": [[352, "sysconfig.get_preferred_scheme"]], "get_python_version() (in module sysconfig)": [[352, "sysconfig.get_python_version"]], "get_scheme_names() (in module sysconfig)": [[352, "sysconfig.get_scheme_names"]], "is_python_build() (in module sysconfig)": [[352, "sysconfig.is_python_build"]], "parse_config_h() (in module sysconfig)": [[352, "sysconfig.parse_config_h"]], "sysconfig": [[352, "module-sysconfig"]], "closelog() (in module syslog)": [[353, "syslog.closelog"]], "openlog() (in module syslog)": [[353, "syslog.openlog"]], "setlogmask() (in module syslog)": [[353, "syslog.setlogmask"]], "syslog": [[353, "module-syslog"]], "syslog() (in module syslog)": [[353, "syslog.syslog"]], "nannynag": [[354, "tabnanny.NannyNag"]], "check() (in module tabnanny)": [[354, "tabnanny.check"]], "filename_only (in module tabnanny)": [[354, "tabnanny.filename_only"]], "process_tokens() (in module tabnanny)": [[354, "tabnanny.process_tokens"]], "tabnanny": [[354, "module-tabnanny"]], "verbose (in module tabnanny)": [[354, "tabnanny.verbose"]], "--create": [[355, "cmdoption-tarfile-create"], [419, "cmdoption-zipfile-create"]], "--extract": [[355, "cmdoption-tarfile-extract"], [419, "cmdoption-zipfile-extract"]], "--filter": [[355, "cmdoption-tarfile-filter"]], "--list": [[355, "cmdoption-tarfile-list"], [419, "cmdoption-zipfile-list"]], "--test": [[355, "cmdoption-tarfile-test"], [419, "cmdoption-zipfile-test"]], "--verbose": [[355, "cmdoption-tarfile-v"], [364, "cmdoption-timeit-v"], [385, "cmdoption-unittest-discover-v"]], "aregtype (in module tarfile)": [[355, "tarfile.AREGTYPE"]], "absolutelinkerror": [[355, "tarfile.AbsoluteLinkError"]], "absolutepatherror": [[355, "tarfile.AbsolutePathError"]], "blktype (in module tarfile)": [[355, "tarfile.BLKTYPE"]], "chrtype (in module tarfile)": [[355, "tarfile.CHRTYPE"]], "conttype (in module tarfile)": [[355, "tarfile.CONTTYPE"]], "compressionerror": [[355, "tarfile.CompressionError"]], "default_format (in module tarfile)": [[355, "tarfile.DEFAULT_FORMAT"]], "dirtype (in module tarfile)": [[355, "tarfile.DIRTYPE"]], "encoding (in module tarfile)": [[355, "tarfile.ENCODING"]], "extracterror": [[355, "tarfile.ExtractError"]], "fifotype (in module tarfile)": [[355, "tarfile.FIFOTYPE"]], "filtererror": [[355, "tarfile.FilterError"]], "gnutype_longlink (in module tarfile)": [[355, "tarfile.GNUTYPE_LONGLINK"]], "gnutype_longname (in module tarfile)": [[355, "tarfile.GNUTYPE_LONGNAME"]], "gnutype_sparse (in module tarfile)": [[355, "tarfile.GNUTYPE_SPARSE"]], "gnu_format (in module tarfile)": [[355, "tarfile.GNU_FORMAT"]], "headererror": [[355, "tarfile.HeaderError"]], "lnktype (in module tarfile)": [[355, "tarfile.LNKTYPE"]], "linkoutsidedestinationerror": [[355, "tarfile.LinkOutsideDestinationError"]], "outsidedestinationerror": [[355, "tarfile.OutsideDestinationError"]], "pax_format (in module tarfile)": [[355, "tarfile.PAX_FORMAT"]], "pep 706": [[355, "index-0"], [470, "index-41"], [471, "index-22"]], "regtype (in module tarfile)": [[355, "tarfile.REGTYPE"]], "readerror": [[355, "tarfile.ReadError"]], "symtype (in module tarfile)": [[355, "tarfile.SYMTYPE"]], "specialfileerror": [[355, "tarfile.SpecialFileError"]], "streamerror": [[355, "tarfile.StreamError"]], "tarerror": [[355, "tarfile.TarError"]], "tarfile (class in tarfile)": [[355, "tarfile.TarFile"]], "tarinfo (class in tarfile)": [[355, "tarfile.TarInfo"]], "ustar_format (in module tarfile)": [[355, "tarfile.USTAR_FORMAT"]], "add() (tarfile.tarfile method)": [[355, "tarfile.TarFile.add"]], "addfile() (tarfile.tarfile method)": [[355, "tarfile.TarFile.addfile"]], "chksum (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.chksum"]], "close() (tarfile.tarfile method)": [[355, "tarfile.TarFile.close"]], "data_filter() (in module tarfile)": [[355, "tarfile.data_filter"]], "devmajor (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.devmajor"]], "devminor (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.devminor"]], "errorlevel (tarfile.tarfile attribute)": [[355, "tarfile.TarFile.errorlevel"]], "extract() (tarfile.tarfile method)": [[355, "tarfile.TarFile.extract"]], "extractall() (tarfile.tarfile method)": [[355, "tarfile.TarFile.extractall"]], "extractfile() (tarfile.tarfile method)": [[355, "tarfile.TarFile.extractfile"]], "extraction_filter (tarfile.tarfile attribute)": [[355, "tarfile.TarFile.extraction_filter"]], "frombuf() (tarfile.tarinfo class method)": [[355, "tarfile.TarInfo.frombuf"]], "fromtarfile() (tarfile.tarinfo class method)": [[355, "tarfile.TarInfo.fromtarfile"]], "fully_trusted_filter() (in module tarfile)": [[355, "tarfile.fully_trusted_filter"]], "getmember() (tarfile.tarfile method)": [[355, "tarfile.TarFile.getmember"]], "getmembers() (tarfile.tarfile method)": [[355, "tarfile.TarFile.getmembers"]], "getnames() (tarfile.tarfile method)": [[355, "tarfile.TarFile.getnames"]], "gettarinfo() (tarfile.tarfile method)": [[355, "tarfile.TarFile.gettarinfo"]], "gid (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.gid"]], "gname (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.gname"]], "is_tarfile() (in module tarfile)": [[355, "tarfile.is_tarfile"]], "isblk() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isblk"]], "ischr() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.ischr"]], "isdev() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isdev"]], "isdir() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isdir"]], "isfifo() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isfifo"]], "isfile() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isfile"]], "islnk() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.islnk"]], "isreg() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.isreg"]], "issym() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.issym"]], "linkname (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.linkname"]], "list() (tarfile.tarfile method)": [[355, "tarfile.TarFile.list"]], "mode (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.mode"]], "mtime (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.mtime"]], "name (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.name"]], "next() (tarfile.tarfile method)": [[355, "tarfile.TarFile.next"]], "offset (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.offset"]], "offset_data (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.offset_data"]], "open() (in module tarfile)": [[355, "tarfile.open"]], "open() (tarfile.tarfile class method)": [[355, "tarfile.TarFile.open"]], "pax_headers (tarfile.tarfile attribute)": [[355, "tarfile.TarFile.pax_headers"]], "pax_headers (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.pax_headers"]], "replace() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.replace"]], "size (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.size"]], "sparse (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.sparse"]], "tar_filter() (in module tarfile)": [[355, "tarfile.tar_filter"]], "tarfile": [[355, "module-tarfile"]], "tarfile command line option": [[355, "cmdoption-tarfile-c"], [355, "cmdoption-tarfile-create"], [355, "cmdoption-tarfile-e"], [355, "cmdoption-tarfile-extract"], [355, "cmdoption-tarfile-filter"], [355, "cmdoption-tarfile-l"], [355, "cmdoption-tarfile-list"], [355, "cmdoption-tarfile-t"], [355, "cmdoption-tarfile-test"], [355, "cmdoption-tarfile-v"]], "tarinfo (tarfile.filtererror attribute)": [[355, "tarfile.FilterError.tarinfo"]], "tobuf() (tarfile.tarinfo method)": [[355, "tarfile.TarInfo.tobuf"]], "type (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.type"]], "uid (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.uid"]], "uname (tarfile.tarinfo attribute)": [[355, "tarfile.TarInfo.uname"]], "pep 594#telnetlib": [[356, "index-1"]], "rfc 854": [[356, "index-2"], [356, "index-3"]], "telnet": [[356, "index-0"]], "telnet (class in telnetlib)": [[356, "telnetlib.Telnet"]], "close() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.close"]], "expect() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.expect"]], "fileno() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.fileno"]], "get_socket() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.get_socket"]], "interact() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.interact"]], "msg() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.msg"]], "mt_interact() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.mt_interact"]], "open() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.open"]], "read_all() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_all"]], "read_eager() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_eager"]], "read_lazy() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_lazy"]], "read_sb_data() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_sb_data"]], "read_some() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_some"]], "read_until() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_until"]], "read_very_eager() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_very_eager"]], "read_very_lazy() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.read_very_lazy"]], "set_debuglevel() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.set_debuglevel"]], "set_option_negotiation_callback() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.set_option_negotiation_callback"]], "telnetlib": [[356, "module-telnetlib"]], "write() (telnetlib.telnet method)": [[356, "telnetlib.Telnet.write"]], "namedtemporaryfile() (in module tempfile)": [[357, "tempfile.NamedTemporaryFile"]], "spooledtemporaryfile (class in tempfile)": [[357, "tempfile.SpooledTemporaryFile"]], "temp": [[357, "index-2"], [458, "index-7"]], "tmp": [[357, "index-3"]], "tmpdir": [[357, "index-1"]], "temporarydirectory (class in tempfile)": [[357, "tempfile.TemporaryDirectory"]], "temporaryfile() (in module tempfile)": [[357, "tempfile.TemporaryFile"]], "cleanup() (tempfile.temporarydirectory method)": [[357, "tempfile.TemporaryDirectory.cleanup"]], "file name": [[357, "index-0"]], "gettempdir() (in module tempfile)": [[357, "tempfile.gettempdir"]], "gettempdirb() (in module tempfile)": [[357, "tempfile.gettempdirb"]], "gettempprefix() (in module tempfile)": [[357, "tempfile.gettempprefix"]], "gettempprefixb() (in module tempfile)": [[357, "tempfile.gettempprefixb"]], "mkdtemp() (in module tempfile)": [[357, "tempfile.mkdtemp"]], "mkstemp() (in module tempfile)": [[357, "tempfile.mkstemp"]], "mktemp() (in module tempfile)": [[357, "tempfile.mktemp"]], "name (tempfile.temporarydirectory attribute)": [[357, "tempfile.TemporaryDirectory.name"]], "rollover() (tempfile.spooledtemporaryfile method)": [[357, "tempfile.SpooledTemporaryFile.rollover"]], "tempdir (in module tempfile)": [[357, "tempfile.tempdir"]], "tempfile": [[357, "module-tempfile"]], "temporary": [[357, "index-0"]], "tcsadrain (in module termios)": [[358, "termios.TCSADRAIN"]], "tcsaflush (in module termios)": [[358, "termios.TCSAFLUSH"]], "tcsanow (in module termios)": [[358, "termios.TCSANOW"]], "tcdrain() (in module termios)": [[358, "termios.tcdrain"]], "tcflow() (in module termios)": [[358, "termios.tcflow"]], "tcflush() (in module termios)": [[358, "termios.tcflush"]], "tcgetattr() (in module termios)": [[358, "termios.tcgetattr"]], "tcgetwinsize() (in module termios)": [[358, "termios.tcgetwinsize"]], "tcsendbreak() (in module termios)": [[358, "termios.tcsendbreak"]], "tcsetattr() (in module termios)": [[358, "termios.tcsetattr"]], "tcsetwinsize() (in module termios)": [[358, "termios.tcsetwinsize"]], "termios": [[358, "module-termios"]], "tty": [[358, "index-0"], [380, "module-tty"]], "always_eq (in module test.support)": [[359, "test.support.ALWAYS_EQ"]], "bytecodetestcase (class in test.support.bytecode_helper)": [[359, "test.support.bytecode_helper.BytecodeTestCase"]], "cleanimport (class in test.support.import_helper)": [[359, "test.support.import_helper.CleanImport"]], "dirsonsyspath (class in test.support.import_helper)": [[359, "test.support.import_helper.DirsOnSysPath"]], "environmentvarguard (class in test.support.os_helper)": [[359, "test.support.os_helper.EnvironmentVarGuard"]], "fs_nonascii (in module test.support.os_helper)": [[359, "test.support.os_helper.FS_NONASCII"]], "fakepath (class in test.support.os_helper)": [[359, "test.support.os_helper.FakePath"]], "have_docstrings (in module test.support)": [[359, "test.support.HAVE_DOCSTRINGS"]], "internet_timeout (in module test.support)": [[359, "test.support.INTERNET_TIMEOUT"]], "ipv6_enabled (in module test.support.socket_helper)": [[359, "test.support.socket_helper.IPV6_ENABLED"]], "largest (in module test.support)": [[359, "test.support.LARGEST"]], "long_timeout (in module test.support)": [[359, "test.support.LONG_TIMEOUT"]], "loopback_timeout (in module test.support)": [[359, "test.support.LOOPBACK_TIMEOUT"]], "max_py_ssize_t (in module test.support)": [[359, "test.support.MAX_Py_ssize_t"]], "missing_c_docstrings (in module test.support)": [[359, "test.support.MISSING_C_DOCSTRINGS"]], "matcher (class in test.support)": [[359, "test.support.Matcher"]], "never_eq (in module test.support)": [[359, "test.support.NEVER_EQ"]], "pgo (in module test.support)": [[359, "test.support.PGO"]], "pipe_max_size (in module test.support)": [[359, "test.support.PIPE_MAX_SIZE"]], "pythonusersite": [[359, "index-2"]], "py_debug (in module test.support)": [[359, "test.support.Py_DEBUG"]], "resourcedenied": [[359, "test.support.ResourceDenied"]], "savedcwd (in module test.support.os_helper)": [[359, "test.support.os_helper.SAVEDCWD"]], "short_timeout (in module test.support)": [[359, "test.support.SHORT_TIMEOUT"]], "smallest (in module test.support)": [[359, "test.support.SMALLEST"]], "sock_max_size (in module test.support)": [[359, "test.support.SOCK_MAX_SIZE"]], "savesignals (class in test.support)": [[359, "test.support.SaveSignals"]], "suppresscrashreport (class in test.support)": [[359, "test.support.SuppressCrashReport"]], "testfn (in module test.support.os_helper)": [[359, "test.support.os_helper.TESTFN"]], "testfn_nonascii (in module test.support.os_helper)": [[359, "test.support.os_helper.TESTFN_NONASCII"]], "testfn_undecodable (in module test.support.os_helper)": [[359, "test.support.os_helper.TESTFN_UNDECODABLE"]], "testfn_unencodable (in module test.support.os_helper)": [[359, "test.support.os_helper.TESTFN_UNENCODABLE"]], "testfn_unicode (in module test.support.os_helper)": [[359, "test.support.os_helper.TESTFN_UNICODE"]], "test_data_dir (in module test.support)": [[359, "test.support.TEST_DATA_DIR"]], "test_home_dir (in module test.support)": [[359, "test.support.TEST_HOME_DIR"]], "test_http_url (in module test.support)": [[359, "test.support.TEST_HTTP_URL"]], "test_support_dir (in module test.support)": [[359, "test.support.TEST_SUPPORT_DIR"]], "testfailed": [[359, "test.support.TestFailed"]], "warningsrecorder (class in test.support.warnings_helper)": [[359, "test.support.warnings_helper.WarningsRecorder"]], "adjust_int_max_str_digits() (in module test.support)": [[359, "test.support.adjust_int_max_str_digits"]], "anticipate_failure() (in module test.support)": [[359, "test.support.anticipate_failure"]], "args_from_interpreter_flags() (in module test.support)": [[359, "test.support.args_from_interpreter_flags"]], "assertinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[359, "test.support.bytecode_helper.BytecodeTestCase.assertInBytecode"]], "assertnotinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[359, "test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode"]], "assert_python_failure() (in module test.support.script_helper)": [[359, "test.support.script_helper.assert_python_failure"]], "assert_python_ok() (in module test.support.script_helper)": [[359, "test.support.script_helper.assert_python_ok"]], "bigaddrspacetest() (in module test.support)": [[359, "test.support.bigaddrspacetest"]], "bigmemtest() (in module test.support)": [[359, "test.support.bigmemtest"]], "bind_port() (in module test.support.socket_helper)": [[359, "test.support.socket_helper.bind_port"]], "bind_unix_socket() (in module test.support.socket_helper)": [[359, "test.support.socket_helper.bind_unix_socket"]], "busy_retry() (in module test.support)": [[359, "test.support.busy_retry"]], "calcobjsize() (in module test.support)": [[359, "test.support.calcobjsize"]], "calcvobjsize() (in module test.support)": [[359, "test.support.calcvobjsize"]], "can_symlink() (in module test.support.os_helper)": [[359, "test.support.os_helper.can_symlink"]], "can_xattr() (in module test.support.os_helper)": [[359, "test.support.os_helper.can_xattr"]], "captured_stderr() (in module test.support)": [[359, "test.support.captured_stderr"]], "captured_stdin() (in module test.support)": [[359, "test.support.captured_stdin"]], "captured_stdout() (in module test.support)": [[359, "test.support.captured_stdout"]], "catch_threading_exception() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.catch_threading_exception"]], "catch_unraisable_exception() (in module test.support)": [[359, "test.support.catch_unraisable_exception"]], "change_cwd() (in module test.support.os_helper)": [[359, "test.support.os_helper.change_cwd"]], "check__all__() (in module test.support)": [[359, "test.support.check__all__"]], "check_disallow_instantiation() (in module test.support)": [[359, "test.support.check_disallow_instantiation"]], "check_free_after_iterating() (in module test.support)": [[359, "test.support.check_free_after_iterating"]], "check_impl_detail() (in module test.support)": [[359, "test.support.check_impl_detail"]], "check_no_resource_warning() (in module test.support.warnings_helper)": [[359, "test.support.warnings_helper.check_no_resource_warning"]], "check_syntax_error() (in module test.support)": [[359, "test.support.check_syntax_error"]], "check_syntax_warning() (in module test.support.warnings_helper)": [[359, "test.support.warnings_helper.check_syntax_warning"]], "check_warnings() (in module test.support.warnings_helper)": [[359, "test.support.warnings_helper.check_warnings"]], "checksizeof() (in module test.support)": [[359, "test.support.checksizeof"]], "cpython_only() (in module test.support)": [[359, "test.support.cpython_only"]], "create_empty_file() (in module test.support.os_helper)": [[359, "test.support.os_helper.create_empty_file"]], "detect_api_mismatch() (in module test.support)": [[359, "test.support.detect_api_mismatch"]], "disable_faulthandler() (in module test.support)": [[359, "test.support.disable_faulthandler"]], "disable_gc() (in module test.support)": [[359, "test.support.disable_gc"]], "fd_count() (in module test.support.os_helper)": [[359, "test.support.os_helper.fd_count"]], "find_unused_port() (in module test.support.socket_helper)": [[359, "test.support.socket_helper.find_unused_port"]], "findfile() (in module test.support)": [[359, "test.support.findfile"]], "flush_std_streams() (in module test.support)": [[359, "test.support.flush_std_streams"]], "forget() (in module test.support.import_helper)": [[359, "test.support.import_helper.forget"]], "fs_is_case_insensitive() (in module test.support.os_helper)": [[359, "test.support.os_helper.fs_is_case_insensitive"]], "gc_collect() (in module test.support)": [[359, "test.support.gc_collect"]], "get_attribute() (in module test.support)": [[359, "test.support.get_attribute"]], "get_disassembly_as_string() (test.support.bytecode_helper.bytecodetestcase method)": [[359, "test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string"]], "get_original_stdout() (in module test.support)": [[359, "test.support.get_original_stdout"]], "get_pagesize() (in module test.support)": [[359, "test.support.get_pagesize"]], "ignore_warnings() (in module test.support.warnings_helper)": [[359, "test.support.warnings_helper.ignore_warnings"]], "impl_detail() (in module test.support)": [[359, "test.support.impl_detail"]], "import_fresh_module() (in module test.support.import_helper)": [[359, "test.support.import_helper.import_fresh_module"]], "import_module() (in module test.support.import_helper)": [[359, "test.support.import_helper.import_module"]], "interpreter_requires_environment() (in module test.support.script_helper)": [[359, "test.support.script_helper.interpreter_requires_environment"]], "is_android (in module test.support)": [[359, "test.support.is_android"]], "is_jython (in module test.support)": [[359, "test.support.is_jython"]], "is_resource_enabled() (in module test.support)": [[359, "test.support.is_resource_enabled"]], "join_thread() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.join_thread"]], "kill_python() (in module test.support.script_helper)": [[359, "test.support.script_helper.kill_python"]], "load_package_tests() (in module test.support)": [[359, "test.support.load_package_tests"]], "make_bad_fd() (in module test.support.os_helper)": [[359, "test.support.os_helper.make_bad_fd"]], "make_legacy_pyc() (in module test.support.import_helper)": [[359, "test.support.import_helper.make_legacy_pyc"]], "make_pkg() (in module test.support.script_helper)": [[359, "test.support.script_helper.make_pkg"]], "make_script() (in module test.support.script_helper)": [[359, "test.support.script_helper.make_script"]], "make_zip_pkg() (in module test.support.script_helper)": [[359, "test.support.script_helper.make_zip_pkg"]], "make_zip_script() (in module test.support.script_helper)": [[359, "test.support.script_helper.make_zip_script"]], "match_value() (test.support.matcher method)": [[359, "test.support.Matcher.match_value"]], "matches() (test.support.matcher method)": [[359, "test.support.Matcher.matches"]], "max_memuse (in module test.support)": [[359, "test.support.max_memuse"]], "missing_compiler_executable() (in module test.support)": [[359, "test.support.missing_compiler_executable"]], "modules_cleanup() (in module test.support.import_helper)": [[359, "test.support.import_helper.modules_cleanup"]], "modules_setup() (in module test.support.import_helper)": [[359, "test.support.import_helper.modules_setup"]], "no_tracing() (in module test.support)": [[359, "test.support.no_tracing"]], "open_urlresource() (in module test.support)": [[359, "test.support.open_urlresource"]], "optim_args_from_interpreter_flags() (in module test.support)": [[359, "test.support.optim_args_from_interpreter_flags"]], "patch() (in module test.support)": [[359, "test.support.patch"]], "print_warning() (in module test.support)": [[359, "test.support.print_warning"]], "python_is_optimized() (in module test.support)": [[359, "test.support.python_is_optimized"]], "real_max_memuse (in module test.support)": [[359, "test.support.real_max_memuse"]], "reap_children() (in module test.support)": [[359, "test.support.reap_children"]], "reap_threads() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.reap_threads"]], "record_original_stdout() (in module test.support)": [[359, "test.support.record_original_stdout"]], "refcount_test() (in module test.support)": [[359, "test.support.refcount_test"]], "requires() (in module test.support)": [[359, "test.support.requires"]], "requires_ieee_754() (in module test.support)": [[359, "test.support.requires_IEEE_754"]], "requires_bz2() (in module test.support)": [[359, "test.support.requires_bz2"]], "requires_docstrings() (in module test.support)": [[359, "test.support.requires_docstrings"]], "requires_freebsd_version() (in module test.support)": [[359, "test.support.requires_freebsd_version"]], "requires_gzip() (in module test.support)": [[359, "test.support.requires_gzip"]], "requires_limited_api() (in module test.support)": [[359, "test.support.requires_limited_api"]], "requires_linux_version() (in module test.support)": [[359, "test.support.requires_linux_version"]], "requires_lzma() (in module test.support)": [[359, "test.support.requires_lzma"]], "requires_mac_version() (in module test.support)": [[359, "test.support.requires_mac_version"]], "requires_resource() (in module test.support)": [[359, "test.support.requires_resource"]], "requires_zlib() (in module test.support)": [[359, "test.support.requires_zlib"]], "restore() (test.support.savesignals method)": [[359, "test.support.SaveSignals.restore"]], "rmdir() (in module test.support.os_helper)": [[359, "test.support.os_helper.rmdir"]], "rmtree() (in module test.support.os_helper)": [[359, "test.support.os_helper.rmtree"]], "run_in_subinterp() (in module test.support)": [[359, "test.support.run_in_subinterp"]], "run_python_until_end() (in module test.support.script_helper)": [[359, "test.support.script_helper.run_python_until_end"]], "run_with_locale() (in module test.support)": [[359, "test.support.run_with_locale"]], "run_with_tz() (in module test.support)": [[359, "test.support.run_with_tz"]], "save() (test.support.savesignals method)": [[359, "test.support.SaveSignals.save"]], "set() (test.support.os_helper.environmentvarguard method)": [[359, "test.support.os_helper.EnvironmentVarGuard.set"]], "set_memlimit() (in module test.support)": [[359, "test.support.set_memlimit"]], "setswitchinterval() (in module test.support)": [[359, "test.support.setswitchinterval"]], "skip_if_broken_multiprocessing_synchronize() (in module test.support)": [[359, "test.support.skip_if_broken_multiprocessing_synchronize"]], "skip_unless_bind_unix_socket() (in module test.support.socket_helper)": [[359, "test.support.socket_helper.skip_unless_bind_unix_socket"]], "skip_unless_symlink() (in module test.support.os_helper)": [[359, "test.support.os_helper.skip_unless_symlink"]], "skip_unless_xattr() (in module test.support.os_helper)": [[359, "test.support.os_helper.skip_unless_xattr"]], "sleeping_retry() (in module test.support)": [[359, "test.support.sleeping_retry"]], "sortdict() (in module test.support)": [[359, "test.support.sortdict"]], "spawn_python() (in module test.support.script_helper)": [[359, "test.support.script_helper.spawn_python"]], "start_threads() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.start_threads"]], "swap_attr() (in module test.support)": [[359, "test.support.swap_attr"]], "swap_item() (in module test.support)": [[359, "test.support.swap_item"]], "system_must_validate_cert() (in module test.support)": [[359, "test.support.system_must_validate_cert"]], "temp_cwd() (in module test.support.os_helper)": [[359, "test.support.os_helper.temp_cwd"]], "temp_dir() (in module test.support.os_helper)": [[359, "test.support.os_helper.temp_dir"]], "temp_umask() (in module test.support.os_helper)": [[359, "test.support.os_helper.temp_umask"]], "test": [[359, "module-test"], [427, "index-80"], [427, "index-81"]], "test.regrtest": [[359, "module-test.regrtest"]], "test.support": [[359, "module-test.support"]], "test.support.bytecode_helper": [[359, "module-test.support.bytecode_helper"]], "test.support.import_helper": [[359, "module-test.support.import_helper"]], "test.support.os_helper": [[359, "module-test.support.os_helper"]], "test.support.script_helper": [[359, "module-test.support.script_helper"]], "test.support.socket_helper": [[359, "module-test.support.socket_helper"]], "test.support.threading_helper": [[359, "module-test.support.threading_helper"]], "test.support.warnings_helper": [[359, "module-test.support.warnings_helper"]], "threading_cleanup() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.threading_cleanup"]], "threading_setup() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.threading_setup"]], "transient_internet() (in module test.support.socket_helper)": [[359, "test.support.socket_helper.transient_internet"]], "unix_shell (in module test.support)": [[359, "test.support.unix_shell"]], "unlink() (in module test.support.os_helper)": [[359, "test.support.os_helper.unlink"]], "unload() (in module test.support.import_helper)": [[359, "test.support.import_helper.unload"]], "unset() (test.support.os_helper.environmentvarguard method)": [[359, "test.support.os_helper.EnvironmentVarGuard.unset"]], "verbose (in module test.support)": [[359, "test.support.verbose"]], "wait_process() (in module test.support)": [[359, "test.support.wait_process"]], "wait_threads_exit() (in module test.support.threading_helper)": [[359, "test.support.threading_helper.wait_threads_exit"]], "with_pymalloc() (in module test.support)": [[359, "test.support.with_pymalloc"]], "textwrapper (class in textwrap)": [[361, "textwrap.TextWrapper"]], "break_long_words (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.break_long_words"]], "break_on_hyphens (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.break_on_hyphens"]], "dedent() (in module textwrap)": [[361, "textwrap.dedent"]], "drop_whitespace (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.drop_whitespace"]], "expand_tabs (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.expand_tabs"]], "fill() (in module textwrap)": [[361, "textwrap.fill"]], "fill() (textwrap.textwrapper method)": [[361, "textwrap.TextWrapper.fill"]], "fix_sentence_endings (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.fix_sentence_endings"]], "indent() (in module textwrap)": [[361, "textwrap.indent"]], "initial_indent (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.initial_indent"]], "max_lines (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.max_lines"]], "placeholder (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.placeholder"]], "replace_whitespace (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.replace_whitespace"]], "shorten() (in module textwrap)": [[361, "textwrap.shorten"]], "subsequent_indent (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.subsequent_indent"]], "tabsize (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.tabsize"]], "textwrap": [[361, "module-textwrap"]], "width (textwrap.textwrapper attribute)": [[361, "textwrap.TextWrapper.width"]], "wrap() (in module textwrap)": [[361, "textwrap.wrap"]], "wrap() (textwrap.textwrapper method)": [[361, "textwrap.TextWrapper.wrap"]], "barrier (class in threading)": [[362, "threading.Barrier"]], "boundedsemaphore (class in threading)": [[362, "threading.BoundedSemaphore"]], "condition (class in threading)": [[362, "threading.Condition"]], "event (class in threading)": [[362, "threading.Event"]], "lock (class in threading)": [[362, "threading.Lock"]], "rlock (class in threading)": [[362, "threading.RLock"]], "semaphore (class in threading)": [[362, "threading.Semaphore"]], "timeout_max (in module threading)": [[362, "threading.TIMEOUT_MAX"]], "thread (class in threading)": [[362, "threading.Thread"]], "timer (class in threading)": [[362, "threading.Timer"]], "__excepthook__ (in module threading)": [[362, "threading.__excepthook__"]], "abort() (threading.barrier method)": [[362, "threading.Barrier.abort"]], "acquire() (threading.condition method)": [[362, "threading.Condition.acquire"]], "acquire() (threading.lock method)": [[362, "threading.Lock.acquire"]], "acquire() (threading.rlock method)": [[362, "threading.RLock.acquire"]], "acquire() (threading.semaphore method)": [[362, "threading.Semaphore.acquire"]], "active_count() (in module threading)": [[362, "threading.active_count"]], "broken (threading.barrier attribute)": [[362, "threading.Barrier.broken"]], "cancel() (threading.timer method)": [[362, "threading.Timer.cancel"]], "clear() (threading.event method)": [[362, "threading.Event.clear"]], "current_thread() (in module threading)": [[362, "threading.current_thread"]], "daemon (threading.thread attribute)": [[362, "threading.Thread.daemon"]], "enumerate() (in module threading)": [[362, "threading.enumerate"]], "excepthook() (in module threading)": [[362, "threading.excepthook"]], "getname() (threading.thread method)": [[362, "threading.Thread.getName"]], "get_ident() (in module threading)": [[362, "threading.get_ident"]], "get_native_id() (in module threading)": [[362, "threading.get_native_id"]], "getprofile() (in module threading)": [[362, "threading.getprofile"]], "gettrace() (in module threading)": [[362, "threading.gettrace"]], "ident (threading.thread attribute)": [[362, "threading.Thread.ident"]], "isdaemon() (threading.thread method)": [[362, "threading.Thread.isDaemon"]], "is_alive() (threading.thread method)": [[362, "threading.Thread.is_alive"]], "is_set() (threading.event method)": [[362, "threading.Event.is_set"]], "join() (threading.thread method)": [[362, "threading.Thread.join"]], "local (class in threading)": [[362, "threading.local"]], "locked() (threading.lock method)": [[362, "threading.Lock.locked"]], "main_thread() (in module threading)": [[362, "threading.main_thread"]], "n_waiting (threading.barrier attribute)": [[362, "threading.Barrier.n_waiting"]], "name (threading.thread attribute)": [[362, "threading.Thread.name"]], "native_id (threading.thread attribute)": [[362, "threading.Thread.native_id"]], "notify() (threading.condition method)": [[362, "threading.Condition.notify"]], "notify_all() (threading.condition method)": [[362, "threading.Condition.notify_all"]], "parties (threading.barrier attribute)": [[362, "threading.Barrier.parties"]], "release() (threading.condition method)": [[362, "threading.Condition.release"]], "release() (threading.lock method)": [[362, "threading.Lock.release"]], "release() (threading.rlock method)": [[362, "threading.RLock.release"]], "release() (threading.semaphore method)": [[362, "threading.Semaphore.release"]], "reset() (threading.barrier method)": [[362, "threading.Barrier.reset"]], "run() (threading.thread method)": [[362, "threading.Thread.run"]], "set() (threading.event method)": [[362, "threading.Event.set"]], "setdaemon() (threading.thread method)": [[362, "threading.Thread.setDaemon"]], "setname() (threading.thread method)": [[362, "threading.Thread.setName"]], "setprofile() (in module threading)": [[362, "threading.setprofile"]], "setprofile_all_threads() (in module threading)": [[362, "threading.setprofile_all_threads"]], "settrace() (in module threading)": [[362, "threading.settrace"]], "settrace_all_threads() (in module threading)": [[362, "threading.settrace_all_threads"]], "stack_size() (in module threading)": [[362, "threading.stack_size"]], "start() (threading.thread method)": [[362, "threading.Thread.start"]], "threading": [[362, "module-threading"]], "wait() (threading.barrier method)": [[362, "threading.Barrier.wait"]], "wait() (threading.condition method)": [[362, "threading.Condition.wait"]], "wait() (threading.event method)": [[362, "threading.Event.wait"]], "wait_for() (threading.condition method)": [[362, "threading.Condition.wait_for"]], "2-digit years": [[363, "index-3"]], "clock_boottime (in module time)": [[363, "time.CLOCK_BOOTTIME"]], "clock_highres (in module time)": [[363, "time.CLOCK_HIGHRES"]], "clock_monotonic (in module time)": [[363, "time.CLOCK_MONOTONIC"]], "clock_monotonic_raw (in module time)": [[363, "time.CLOCK_MONOTONIC_RAW"]], "clock_process_cputime_id (in module time)": [[363, "time.CLOCK_PROCESS_CPUTIME_ID"]], "clock_prof (in module time)": [[363, "time.CLOCK_PROF"]], "clock_realtime (in module time)": [[363, "time.CLOCK_REALTIME"]], "clock_tai (in module time)": [[363, "time.CLOCK_TAI"]], "clock_thread_cputime_id (in module time)": [[363, "time.CLOCK_THREAD_CPUTIME_ID"]], "clock_uptime (in module time)": [[363, "time.CLOCK_UPTIME"]], "clock_uptime_raw (in module time)": [[363, "time.CLOCK_UPTIME_RAW"]], "cpu time": [[363, "index-12"], [363, "index-7"]], "coordinated universal time": [[363, "index-4"]], "daylight saving time": [[363, "index-5"]], "greenwich mean time": [[363, "index-4"]], "rfc 1123": [[363, "index-21"]], "tz": [[363, "index-13"], [363, "index-14"], [363, "index-15"], [363, "index-16"], [363, "index-17"], [363, "index-18"]], "utc": [[363, "index-4"]], "year 2038": [[363, "index-2"]], "altzone (in module time)": [[363, "time.altzone"]], "asctime() (in module time)": [[363, "time.asctime"]], "benchmarking": [[363, "index-12"], [363, "index-6"], [363, "index-7"], [364, "index-0"]], "clock_getres() (in module time)": [[363, "time.clock_getres"]], "clock_gettime() (in module time)": [[363, "time.clock_gettime"]], "clock_gettime_ns() (in module time)": [[363, "time.clock_gettime_ns"]], "clock_settime() (in module time)": [[363, "time.clock_settime"]], "clock_settime_ns() (in module time)": [[363, "time.clock_settime_ns"]], "ctime() (in module time)": [[363, "time.ctime"]], "daylight (in module time)": [[363, "time.daylight"]], "epoch": [[363, "index-0"]], "get_clock_info() (in module time)": [[363, "time.get_clock_info"]], "gmtime() (in module time)": [[363, "time.gmtime"]], "localtime() (in module time)": [[363, "time.localtime"]], "mktime() (in module time)": [[363, "time.mktime"]], "monotonic() (in module time)": [[363, "time.monotonic"]], "monotonic_ns() (in module time)": [[363, "time.monotonic_ns"]], "perf_counter() (in module time)": [[363, "time.perf_counter"]], "perf_counter_ns() (in module time)": [[363, "time.perf_counter_ns"]], "process_time() (in module time)": [[363, "time.process_time"]], "process_time_ns() (in module time)": [[363, "time.process_time_ns"]], "processor time": [[363, "index-12"], [363, "index-7"]], "pthread_getcpuclockid() (in module time)": [[363, "time.pthread_getcpuclockid"]], "seconds since the epoch": [[363, "index-1"]], "sleep() (in module time)": [[363, "time.sleep"]], "strftime() (in module time)": [[363, "time.strftime"]], "strptime() (in module time)": [[363, "time.strptime"]], "struct_time (class in time)": [[363, "time.struct_time"]], "thread_time() (in module time)": [[363, "time.thread_time"]], "thread_time_ns() (in module time)": [[363, "time.thread_time_ns"]], "time": [[363, "module-time"]], "time() (in module time)": [[363, "time.time"]], "time_ns() (in module time)": [[363, "time.time_ns"]], "timezone (in module time)": [[363, "time.timezone"]], "tm_day (time.struct_time attribute)": [[363, "time.struct_time.tm_day"]], "tm_gmtoff (time.struct_time attribute)": [[363, "time.struct_time.tm_gmtoff"]], "tm_hour (time.struct_time attribute)": [[363, "time.struct_time.tm_hour"]], "tm_isdst (time.struct_time attribute)": [[363, "time.struct_time.tm_isdst"]], "tm_min (time.struct_time attribute)": [[363, "time.struct_time.tm_min"]], "tm_mon (time.struct_time attribute)": [[363, "time.struct_time.tm_mon"]], "tm_sec (time.struct_time attribute)": [[363, "time.struct_time.tm_sec"]], "tm_wday (time.struct_time attribute)": [[363, "time.struct_time.tm_wday"]], "tm_yday (time.struct_time attribute)": [[363, "time.struct_time.tm_yday"]], "tm_year (time.struct_time attribute)": [[363, "time.struct_time.tm_year"]], "tm_zone (time.struct_time attribute)": [[363, "time.struct_time.tm_zone"]], "tzname (in module time)": [[363, "time.tzname"]], "tzset() (in module time)": [[363, "time.tzset"]], "--number": [[364, "cmdoption-timeit-n"]], "--process": [[364, "cmdoption-timeit-p"]], "--repeat": [[364, "cmdoption-timeit-r"]], "--setup": [[364, "cmdoption-timeit-s"]], "--unit": [[364, "cmdoption-timeit-u"]], "-n": [[364, "cmdoption-timeit-n"], [395, "cmdoption-uuid-N"], [395, "cmdoption-uuid-n"]], "-u": [[364, "cmdoption-timeit-u"], [395, "cmdoption-uuid-u"], [452, "cmdoption-u"]], "performance": [[364, "index-0"]], "timer (class in timeit)": [[364, "timeit.Timer"]], "autorange() (timeit.timer method)": [[364, "timeit.Timer.autorange"]], "default_timer() (in module timeit)": [[364, "timeit.default_timer"]], "print_exc() (timeit.timer method)": [[364, "timeit.Timer.print_exc"]], "repeat() (in module timeit)": [[364, "timeit.repeat"]], "repeat() (timeit.timer method)": [[364, "timeit.Timer.repeat"]], "timeit": [[364, "module-timeit"]], "timeit command line option": [[364, "cmdoption-timeit-h"], [364, "cmdoption-timeit-n"], [364, "cmdoption-timeit-p"], [364, "cmdoption-timeit-r"], [364, "cmdoption-timeit-s"], [364, "cmdoption-timeit-u"], [364, "cmdoption-timeit-v"]], "timeit() (in module timeit)": [[364, "timeit.timeit"]], "timeit() (timeit.timer method)": [[364, "timeit.Timer.timeit"]], "gui": [[365, "index-0"]], "graphical user interface": [[365, "index-0"]], "tk": [[365, "index-0"]], "tkinter": [[365, "index-0"], [366, "module-tkinter"]], "display": [[366, "index-0"], [427, "index-15"], [427, "index-16"], [427, "index-17"]], "exception (in module _tkinter)": [[366, "tkinter.EXCEPTION"]], "readable (in module _tkinter)": [[366, "tkinter.READABLE"]], "tcl() (in module tkinter)": [[366, "tkinter.Tcl"]], "tk (class in tkinter)": [[366, "tkinter.Tk"]], "tk option data types": [[366, "index-4"]], "writable (in module _tkinter)": [[366, "tkinter.WRITABLE"]], "_tkinter": [[366, "module-_tkinter"]], "bind (widgets)": [[366, "index-5"]], "children (tkinter.tk attribute)": [[366, "tkinter.Tk.children"]], "createfilehandler() (_tkinter.widget.tk method)": [[366, "tkinter.Widget.tk.createfilehandler"]], "deletefilehandler() (_tkinter.widget.tk method)": [[366, "tkinter.Widget.tk.deletefilehandler"]], "events (widgets)": [[366, "index-5"]], "master (tkinter.tk attribute)": [[366, "tkinter.Tk.master"]], "packing (widgets)": [[366, "index-2"]], "tk (tkinter.tk attribute)": [[366, "tkinter.Tk.tk"]], "window manager (widgets)": [[366, "index-3"]], "chooser (class in tkinter.colorchooser)": [[367, "tkinter.colorchooser.Chooser"]], "askcolor() (in module tkinter.colorchooser)": [[367, "tkinter.colorchooser.askcolor"]], "tkinter.colorchooser": [[367, "module-tkinter.colorchooser"]], "dndhandler (class in tkinter.dnd)": [[368, "tkinter.dnd.DndHandler"]], "cancel() (tkinter.dnd.dndhandler method)": [[368, "tkinter.dnd.DndHandler.cancel"]], "dnd_start() (in module tkinter.dnd)": [[368, "tkinter.dnd.dnd_start"]], "finish() (tkinter.dnd.dndhandler method)": [[368, "tkinter.dnd.DndHandler.finish"]], "on_motion() (tkinter.dnd.dndhandler method)": [[368, "tkinter.dnd.DndHandler.on_motion"]], "on_release() (tkinter.dnd.dndhandler method)": [[368, "tkinter.dnd.DndHandler.on_release"]], "tkinter.dnd": [[368, "module-tkinter.dnd"]], "bold (in module tkinter.font)": [[369, "tkinter.font.BOLD"]], "font (class in tkinter.font)": [[369, "tkinter.font.Font"]], "italic (in module tkinter.font)": [[369, "tkinter.font.ITALIC"]], "normal (in module tkinter.font)": [[369, "tkinter.font.NORMAL"]], "roman (in module tkinter.font)": [[369, "tkinter.font.ROMAN"]], "actual() (tkinter.font.font method)": [[369, "tkinter.font.Font.actual"]], "cget() (tkinter.font.font method)": [[369, "tkinter.font.Font.cget"]], "config() (tkinter.font.font method)": [[369, "tkinter.font.Font.config"]], "copy() (tkinter.font.font method)": [[369, "tkinter.font.Font.copy"]], "families() (in module tkinter.font)": [[369, "tkinter.font.families"]], "measure() (tkinter.font.font method)": [[369, "tkinter.font.Font.measure"]], "metrics() (tkinter.font.font method)": [[369, "tkinter.font.Font.metrics"]], "names() (in module tkinter.font)": [[369, "tkinter.font.names"]], "nametofont() (in module tkinter.font)": [[369, "tkinter.font.nametofont"]], "tkinter.font": [[369, "module-tkinter.font"]], "abort (in module tkinter.messagebox)": [[370, "tkinter.messagebox.ABORT"]], "abortretryignore (in module tkinter.messagebox)": [[370, "tkinter.messagebox.ABORTRETRYIGNORE"]], "cancel (in module tkinter.messagebox)": [[370, "tkinter.messagebox.CANCEL"]], "error (in module tkinter.messagebox)": [[370, "tkinter.messagebox.ERROR"]], "ignore (in module tkinter.messagebox)": [[370, "tkinter.messagebox.IGNORE"]], "info (in module tkinter.messagebox)": [[370, "tkinter.messagebox.INFO"]], "message (class in tkinter.messagebox)": [[370, "tkinter.messagebox.Message"]], "no (in module tkinter.messagebox)": [[370, "tkinter.messagebox.NO"]], "ok (in module tkinter.messagebox)": [[370, "tkinter.messagebox.OK"]], "okcancel (in module tkinter.messagebox)": [[370, "tkinter.messagebox.OKCANCEL"]], "question (in module tkinter.messagebox)": [[370, "tkinter.messagebox.QUESTION"]], "retry (in module tkinter.messagebox)": [[370, "tkinter.messagebox.RETRY"]], "retrycancel (in module tkinter.messagebox)": [[370, "tkinter.messagebox.RETRYCANCEL"]], "warning (in module tkinter.messagebox)": [[370, "tkinter.messagebox.WARNING"]], "yes (in module tkinter.messagebox)": [[370, "tkinter.messagebox.YES"]], "yesno (in module tkinter.messagebox)": [[370, "tkinter.messagebox.YESNO"]], "yesnocancel (in module tkinter.messagebox)": [[370, "tkinter.messagebox.YESNOCANCEL"]], "askokcancel() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.askokcancel"]], "askquestion() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.askquestion"]], "askretrycancel() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.askretrycancel"]], "askyesno() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.askyesno"]], "askyesnocancel() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.askyesnocancel"]], "show() (tkinter.messagebox.message method)": [[370, "tkinter.messagebox.Message.show"]], "showerror() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.showerror"]], "showinfo() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.showinfo"]], "showwarning() (in module tkinter.messagebox)": [[370, "tkinter.messagebox.showwarning"]], "tkinter.messagebox": [[370, "module-tkinter.messagebox"]], "scrolledtext (class in tkinter.scrolledtext)": [[371, "tkinter.scrolledtext.ScrolledText"]], "frame (tkinter.scrolledtext.scrolledtext attribute)": [[371, "tkinter.scrolledtext.ScrolledText.frame"]], "tkinter.scrolledtext": [[371, "module-tkinter.scrolledtext"]], "vbar (tkinter.scrolledtext.scrolledtext attribute)": [[371, "tkinter.scrolledtext.ScrolledText.vbar"]], "balloon (class in tkinter.tix)": [[372, "tkinter.tix.Balloon"]], "buttonbox (class in tkinter.tix)": [[372, "tkinter.tix.ButtonBox"]], "checklist (class in tkinter.tix)": [[372, "tkinter.tix.CheckList"]], "combobox (class in tkinter.tix)": [[372, "tkinter.tix.ComboBox"]], "control (class in tkinter.tix)": [[372, "tkinter.tix.Control"]], "dirlist (class in tkinter.tix)": [[372, "tkinter.tix.DirList"]], "dirselectbox (class in tkinter.tix)": [[372, "tkinter.tix.DirSelectBox"]], "dirselectdialog (class in tkinter.tix)": [[372, "tkinter.tix.DirSelectDialog"]], "dirtree (class in tkinter.tix)": [[372, "tkinter.tix.DirTree"]], "exfileselectbox (class in tkinter.tix)": [[372, "tkinter.tix.ExFileSelectBox"]], "fileentry (class in tkinter.tix)": [[372, "tkinter.tix.FileEntry"]], "fileselectbox (class in tkinter.tix)": [[372, "tkinter.tix.FileSelectBox"]], "form (class in tkinter.tix)": [[372, "tkinter.tix.Form"]], "hlist (class in tkinter.tix)": [[372, "tkinter.tix.HList"]], "inputonly (class in tkinter.tix)": [[372, "tkinter.tix.InputOnly"]], "labelentry (class in tkinter.tix)": [[372, "tkinter.tix.LabelEntry"]], "labelframe (class in tkinter.tix)": [[372, "tkinter.tix.LabelFrame"]], "listnotebook (class in tkinter.tix)": [[372, "tkinter.tix.ListNoteBook"]], "meter (class in tkinter.tix)": [[372, "tkinter.tix.Meter"]], "notebook (class in tkinter.tix)": [[372, "tkinter.tix.NoteBook"]], "optionmenu (class in tkinter.tix)": [[372, "tkinter.tix.OptionMenu"]], "panedwindow (class in tkinter.tix)": [[372, "tkinter.tix.PanedWindow"]], "popupmenu (class in tkinter.tix)": [[372, "tkinter.tix.PopupMenu"]], "select (class in tkinter.tix)": [[372, "tkinter.tix.Select"]], "stdbuttonbox (class in tkinter.tix)": [[372, "tkinter.tix.StdButtonBox"]], "tlist (class in tkinter.tix)": [[372, "tkinter.tix.TList"]], "tix": [[372, "index-0"]], "tk (class in tkinter.tix)": [[372, "tkinter.tix.Tk"]], "tree (class in tkinter.tix)": [[372, "tkinter.tix.Tree"]], "tixcommand (class in tkinter.tix)": [[372, "tkinter.tix.tixCommand"]], "tix_addbitmapdir() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_addbitmapdir"]], "tix_cget() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_cget"]], "tix_configure() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_configure"]], "tix_filedialog() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_filedialog"]], "tix_getbitmap() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_getbitmap"]], "tix_getimage() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_getimage"]], "tix_option_get() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_option_get"]], "tix_resetoptions() (tkinter.tix.tixcommand method)": [[372, "tkinter.tix.tixCommand.tix_resetoptions"]], "tkinter.tix": [[372, "module-tkinter.tix"]], "combobox (class in tkinter.ttk)": [[373, "tkinter.ttk.Combobox"]], "notebook (class in tkinter.ttk)": [[373, "tkinter.ttk.Notebook"]], "progressbar (class in tkinter.ttk)": [[373, "tkinter.ttk.Progressbar"]], "spinbox (class in tkinter.ttk)": [[373, "tkinter.ttk.Spinbox"]], "style (class in tkinter.ttk)": [[373, "tkinter.ttk.Style"]], "treeview (class in tkinter.ttk)": [[373, "tkinter.ttk.Treeview"]], "widget (class in tkinter.ttk)": [[373, "tkinter.ttk.Widget"]], "add() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.add"]], "bbox() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.bbox"]], "column() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.column"]], "configure() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.configure"]], "current() (tkinter.ttk.combobox method)": [[373, "tkinter.ttk.Combobox.current"]], "delete() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.delete"]], "detach() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.detach"]], "element_create() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.element_create"]], "element_names() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.element_names"]], "element_options() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.element_options"]], "enable_traversal() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.enable_traversal"]], "exists() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.exists"]], "focus() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.focus"]], "forget() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.forget"]], "get() (tkinter.ttk.combobox method)": [[373, "tkinter.ttk.Combobox.get"]], "get() (tkinter.ttk.spinbox method)": [[373, "tkinter.ttk.Spinbox.get"]], "get_children() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.get_children"]], "heading() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.heading"]], "hide() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.hide"]], "identify() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.identify"]], "identify() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.identify"]], "identify() (tkinter.ttk.widget method)": [[373, "tkinter.ttk.Widget.identify"]], "identify_column() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.identify_column"]], "identify_element() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.identify_element"]], "identify_region() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.identify_region"]], "identify_row() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.identify_row"]], "index() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.index"]], "index() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.index"]], "insert() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.insert"]], "insert() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.insert"]], "instate() (tkinter.ttk.widget method)": [[373, "tkinter.ttk.Widget.instate"]], "item() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.item"]], "layout() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.layout"]], "lookup() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.lookup"]], "map() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.map"]], "move() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.move"]], "next() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.next"]], "parent() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.parent"]], "prev() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.prev"]], "reattach() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.reattach"]], "see() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.see"]], "select() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.select"]], "selection() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.selection"]], "selection_add() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.selection_add"]], "selection_remove() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.selection_remove"]], "selection_set() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.selection_set"]], "selection_toggle() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.selection_toggle"]], "set() (tkinter.ttk.combobox method)": [[373, "tkinter.ttk.Combobox.set"]], "set() (tkinter.ttk.spinbox method)": [[373, "tkinter.ttk.Spinbox.set"]], "set() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.set"]], "set_children() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.set_children"]], "start() (tkinter.ttk.progressbar method)": [[373, "tkinter.ttk.Progressbar.start"]], "state() (tkinter.ttk.widget method)": [[373, "tkinter.ttk.Widget.state"]], "step() (tkinter.ttk.progressbar method)": [[373, "tkinter.ttk.Progressbar.step"]], "stop() (tkinter.ttk.progressbar method)": [[373, "tkinter.ttk.Progressbar.stop"]], "tab() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.tab"]], "tabs() (tkinter.ttk.notebook method)": [[373, "tkinter.ttk.Notebook.tabs"]], "tag_bind() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.tag_bind"]], "tag_configure() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.tag_configure"]], "tag_has() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.tag_has"]], "theme_create() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.theme_create"]], "theme_names() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.theme_names"]], "theme_settings() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.theme_settings"]], "theme_use() (tkinter.ttk.style method)": [[373, "tkinter.ttk.Style.theme_use"]], "tkinter.ttk": [[373, "module-tkinter.ttk"]], "ttk": [[373, "index-0"]], "xview() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.xview"]], "yview() (tkinter.ttk.treeview method)": [[373, "tkinter.ttk.Treeview.yview"]], "amper (in module token)": [[374, "token.AMPER"]], "amperequal (in module token)": [[374, "token.AMPEREQUAL"]], "async (in module token)": [[374, "token.ASYNC"]], "at (in module token)": [[374, "token.AT"]], "atequal (in module token)": [[374, "token.ATEQUAL"]], "await (in module token)": [[374, "token.AWAIT"]], "circumflex (in module token)": [[374, "token.CIRCUMFLEX"]], "circumflexequal (in module token)": [[374, "token.CIRCUMFLEXEQUAL"]], "colon (in module token)": [[374, "token.COLON"]], "colonequal (in module token)": [[374, "token.COLONEQUAL"]], "comma (in module token)": [[374, "token.COMMA"]], "comment (in module token)": [[374, "token.COMMENT"]], "dedent (in module token)": [[374, "token.DEDENT"]], "dot (in module token)": [[374, "token.DOT"]], "doubleslash (in module token)": [[374, "token.DOUBLESLASH"]], "doubleslashequal (in module token)": [[374, "token.DOUBLESLASHEQUAL"]], "doublestar (in module token)": [[374, "token.DOUBLESTAR"]], "doublestarequal (in module token)": [[374, "token.DOUBLESTAREQUAL"]], "ellipsis (in module token)": [[374, "token.ELLIPSIS"]], "encoding (in module token)": [[374, "token.ENCODING"]], "endmarker (in module token)": [[374, "token.ENDMARKER"]], "eqequal (in module token)": [[374, "token.EQEQUAL"]], "equal (in module token)": [[374, "token.EQUAL"]], "errortoken (in module token)": [[374, "token.ERRORTOKEN"]], "exclamation (in module token)": [[374, "token.EXCLAMATION"]], "fstring_end (in module token)": [[374, "token.FSTRING_END"]], "fstring_middle (in module token)": [[374, "token.FSTRING_MIDDLE"]], "fstring_start (in module token)": [[374, "token.FSTRING_START"]], "greater (in module token)": [[374, "token.GREATER"]], "greaterequal (in module token)": [[374, "token.GREATEREQUAL"]], "indent (in module token)": [[374, "token.INDENT"]], "iseof() (in module token)": [[374, "token.ISEOF"]], "isnonterminal() (in module token)": [[374, "token.ISNONTERMINAL"]], "isterminal() (in module token)": [[374, "token.ISTERMINAL"]], "lbrace (in module token)": [[374, "token.LBRACE"]], "leftshift (in module token)": [[374, "token.LEFTSHIFT"]], "leftshiftequal (in module token)": [[374, "token.LEFTSHIFTEQUAL"]], "less (in module token)": [[374, "token.LESS"]], "lessequal (in module token)": [[374, "token.LESSEQUAL"]], "lpar (in module token)": [[374, "token.LPAR"]], "lsqb (in module token)": [[374, "token.LSQB"]], "minequal (in module token)": [[374, "token.MINEQUAL"]], "minus (in module token)": [[374, "token.MINUS"]], "name (in module token)": [[374, "token.NAME"]], "newline (in module token)": [[374, "token.NEWLINE"]], "nl (in module token)": [[374, "token.NL"]], "notequal (in module token)": [[374, "token.NOTEQUAL"]], "nt_offset (in module token)": [[374, "token.NT_OFFSET"]], "number (in module token)": [[374, "token.NUMBER"]], "n_tokens (in module token)": [[374, "token.N_TOKENS"]], "op (in module token)": [[374, "token.OP"]], "percent (in module token)": [[374, "token.PERCENT"]], "percentequal (in module token)": [[374, "token.PERCENTEQUAL"]], "plus (in module token)": [[374, "token.PLUS"]], "plusequal (in module token)": [[374, "token.PLUSEQUAL"]], "rarrow (in module token)": [[374, "token.RARROW"]], "rbrace (in module token)": [[374, "token.RBRACE"]], "rightshift (in module token)": [[374, "token.RIGHTSHIFT"]], "rightshiftequal (in module token)": [[374, "token.RIGHTSHIFTEQUAL"]], "rpar (in module token)": [[374, "token.RPAR"]], "rsqb (in module token)": [[374, "token.RSQB"]], "semi (in module token)": [[374, "token.SEMI"]], "slash (in module token)": [[374, "token.SLASH"]], "slashequal (in module token)": [[374, "token.SLASHEQUAL"]], "soft_keyword (in module token)": [[374, "token.SOFT_KEYWORD"]], "star (in module token)": [[374, "token.STAR"]], "starequal (in module token)": [[374, "token.STAREQUAL"]], "string (in module token)": [[374, "token.STRING"]], "tilde (in module token)": [[374, "token.TILDE"]], "type_comment (in module token)": [[374, "token.TYPE_COMMENT"]], "type_ignore (in module token)": [[374, "token.TYPE_IGNORE"]], "vbar (in module token)": [[374, "token.VBAR"]], "vbarequal (in module token)": [[374, "token.VBAREQUAL"]], "tok_name (in module token)": [[374, "token.tok_name"]], "token": [[374, "module-token"], [432, "index-0"]], "--exact": [[375, "cmdoption-tokenize-e"]], "tokenerror": [[375, "tokenize.TokenError"]], "detect_encoding() (in module tokenize)": [[375, "tokenize.detect_encoding"]], "generate_tokens() (in module tokenize)": [[375, "tokenize.generate_tokens"]], "open() (in module tokenize)": [[375, "tokenize.open"]], "tokenize": [[375, "module-tokenize"]], "tokenize command line option": [[375, "cmdoption-tokenize-e"], [375, "cmdoption-tokenize-h"]], "tokenize() (in module tokenize)": [[375, "tokenize.tokenize"]], "untokenize() (in module tokenize)": [[375, "tokenize.untokenize"]], "tomldecodeerror": [[376, "tomllib.TOMLDecodeError"]], "load() (in module tomllib)": [[376, "tomllib.load"]], "loads() (in module tomllib)": [[376, "tomllib.loads"]], "tomllib": [[376, "module-tomllib"]], "--count": [[377, "cmdoption-trace-c"]], "--coverdir": [[377, "cmdoption-trace-C"]], "--file": [[377, "cmdoption-trace-f"]], "--ignore-dir": [[377, "cmdoption-trace-ignore-dir"]], "--ignore-module": [[377, "cmdoption-trace-ignore-module"]], "--listfuncs": [[377, "cmdoption-trace-l"]], "--missing": [[377, "cmdoption-trace-m"]], "--no-report": [[377, "cmdoption-trace-R"]], "--report": [[377, "cmdoption-trace-r"]], "--summary": [[377, "cmdoption-trace-s"]], "--timing": [[377, "cmdoption-trace-g"]], "--trace": [[377, "cmdoption-trace-t"]], "--trackcalls": [[377, "cmdoption-trace-T"]], "-g": [[377, "cmdoption-trace-g"]], "coverageresults (class in trace)": [[377, "trace.CoverageResults"]], "trace (class in trace)": [[377, "trace.Trace"]], "results() (trace.trace method)": [[377, "trace.Trace.results"]], "run() (trace.trace method)": [[377, "trace.Trace.run"]], "runctx() (trace.trace method)": [[377, "trace.Trace.runctx"]], "runfunc() (trace.trace method)": [[377, "trace.Trace.runfunc"]], "trace": [[377, "module-trace"], [425, "index-66"]], "trace command line option": [[377, "cmdoption-trace-C"], [377, "cmdoption-trace-R"], [377, "cmdoption-trace-T"], [377, "cmdoption-trace-c"], [377, "cmdoption-trace-f"], [377, "cmdoption-trace-g"], [377, "cmdoption-trace-help"], [377, "cmdoption-trace-ignore-dir"], [377, "cmdoption-trace-ignore-module"], [377, "cmdoption-trace-l"], [377, "cmdoption-trace-m"], [377, "cmdoption-trace-r"], [377, "cmdoption-trace-s"], [377, "cmdoption-trace-t"], [377, "cmdoption-trace-version"]], "update() (trace.coverageresults method)": [[377, "trace.CoverageResults.update"]], "write_results() (trace.coverageresults method)": [[377, "trace.CoverageResults.write_results"]], "framesummary (class in traceback)": [[378, "traceback.FrameSummary"]], "stacksummary (class in traceback)": [[378, "traceback.StackSummary"]], "tracebackexception (class in traceback)": [[378, "traceback.TracebackException"]], "__cause__ (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.__cause__"]], "__context__ (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.__context__"]], "__notes__ (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.__notes__"]], "__suppress_context__ (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.__suppress_context__"]], "clear_frames() (in module traceback)": [[378, "traceback.clear_frames"]], "end_lineno (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.end_lineno"]], "end_offset (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.end_offset"]], "exc_type (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.exc_type"]], "exceptions (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.exceptions"]], "extract() (traceback.stacksummary class method)": [[378, "traceback.StackSummary.extract"]], "extract_stack() (in module traceback)": [[378, "traceback.extract_stack"]], "extract_tb() (in module traceback)": [[378, "traceback.extract_tb"]], "filename (traceback.framesummary attribute)": [[378, "traceback.FrameSummary.filename"]], "filename (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.filename"]], "format() (traceback.stacksummary method)": [[378, "traceback.StackSummary.format"]], "format() (traceback.tracebackexception method)": [[378, "traceback.TracebackException.format"]], "format_exc() (in module traceback)": [[378, "traceback.format_exc"]], "format_exception() (in module traceback)": [[378, "traceback.format_exception"]], "format_exception_only() (in module traceback)": [[378, "traceback.format_exception_only"]], "format_exception_only() (traceback.tracebackexception method)": [[378, "traceback.TracebackException.format_exception_only"]], "format_frame_summary() (traceback.stacksummary method)": [[378, "traceback.StackSummary.format_frame_summary"]], "format_list() (in module traceback)": [[378, "traceback.format_list"]], "format_stack() (in module traceback)": [[378, "traceback.format_stack"]], "format_tb() (in module traceback)": [[378, "traceback.format_tb"]], "from_exception() (traceback.tracebackexception class method)": [[378, "traceback.TracebackException.from_exception"]], "from_list() (traceback.stacksummary class method)": [[378, "traceback.StackSummary.from_list"]], "line (traceback.framesummary attribute)": [[378, "traceback.FrameSummary.line"]], "lineno (traceback.framesummary attribute)": [[378, "traceback.FrameSummary.lineno"]], "lineno (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.lineno"]], "msg (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.msg"]], "name (traceback.framesummary attribute)": [[378, "traceback.FrameSummary.name"]], "offset (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.offset"]], "print() (traceback.tracebackexception method)": [[378, "traceback.TracebackException.print"]], "print_exc() (in module traceback)": [[378, "traceback.print_exc"]], "print_exception() (in module traceback)": [[378, "traceback.print_exception"]], "print_last() (in module traceback)": [[378, "traceback.print_last"]], "print_stack() (in module traceback)": [[378, "traceback.print_stack"]], "print_tb() (in module traceback)": [[378, "traceback.print_tb"]], "stack (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.stack"]], "text (traceback.tracebackexception attribute)": [[378, "traceback.TracebackException.text"]], "walk_stack() (in module traceback)": [[378, "traceback.walk_stack"]], "walk_tb() (in module traceback)": [[378, "traceback.walk_tb"]], "domainfilter (class in tracemalloc)": [[379, "tracemalloc.DomainFilter"]], "filter (class in tracemalloc)": [[379, "tracemalloc.Filter"]], "frame (class in tracemalloc)": [[379, "tracemalloc.Frame"]], "snapshot (class in tracemalloc)": [[379, "tracemalloc.Snapshot"]], "statistic (class in tracemalloc)": [[379, "tracemalloc.Statistic"]], "statisticdiff (class in tracemalloc)": [[379, "tracemalloc.StatisticDiff"]], "trace (class in tracemalloc)": [[379, "tracemalloc.Trace"]], "traceback (class in tracemalloc)": [[379, "tracemalloc.Traceback"]], "all_frames (tracemalloc.filter attribute)": [[379, "tracemalloc.Filter.all_frames"]], "clear_traces() (in module tracemalloc)": [[379, "tracemalloc.clear_traces"]], "compare_to() (tracemalloc.snapshot method)": [[379, "tracemalloc.Snapshot.compare_to"]], "count (tracemalloc.statistic attribute)": [[379, "tracemalloc.Statistic.count"]], "count (tracemalloc.statisticdiff attribute)": [[379, "tracemalloc.StatisticDiff.count"]], "count_diff (tracemalloc.statisticdiff attribute)": [[379, "tracemalloc.StatisticDiff.count_diff"]], "domain (tracemalloc.domainfilter attribute)": [[379, "tracemalloc.DomainFilter.domain"]], "domain (tracemalloc.filter attribute)": [[379, "tracemalloc.Filter.domain"]], "domain (tracemalloc.trace attribute)": [[379, "tracemalloc.Trace.domain"]], "dump() (tracemalloc.snapshot method)": [[379, "tracemalloc.Snapshot.dump"]], "filename (tracemalloc.frame attribute)": [[379, "tracemalloc.Frame.filename"]], "filename_pattern (tracemalloc.filter attribute)": [[379, "tracemalloc.Filter.filename_pattern"]], "filter_traces() (tracemalloc.snapshot method)": [[379, "tracemalloc.Snapshot.filter_traces"]], "format() (tracemalloc.traceback method)": [[379, "tracemalloc.Traceback.format"]], "get_object_traceback() (in module tracemalloc)": [[379, "tracemalloc.get_object_traceback"]], "get_traceback_limit() (in module tracemalloc)": [[379, "tracemalloc.get_traceback_limit"]], "get_traced_memory() (in module tracemalloc)": [[379, "tracemalloc.get_traced_memory"]], "get_tracemalloc_memory() (in module tracemalloc)": [[379, "tracemalloc.get_tracemalloc_memory"]], "inclusive (tracemalloc.domainfilter attribute)": [[379, "tracemalloc.DomainFilter.inclusive"]], "inclusive (tracemalloc.filter attribute)": [[379, "tracemalloc.Filter.inclusive"]], "is_tracing() (in module tracemalloc)": [[379, "tracemalloc.is_tracing"]], "lineno (tracemalloc.filter attribute)": [[379, "tracemalloc.Filter.lineno"]], "lineno (tracemalloc.frame attribute)": [[379, "tracemalloc.Frame.lineno"]], "load() (tracemalloc.snapshot class method)": [[379, "tracemalloc.Snapshot.load"]], "reset_peak() (in module tracemalloc)": [[379, "tracemalloc.reset_peak"]], "size (tracemalloc.statistic attribute)": [[379, "tracemalloc.Statistic.size"]], "size (tracemalloc.statisticdiff attribute)": [[379, "tracemalloc.StatisticDiff.size"]], "size (tracemalloc.trace attribute)": [[379, "tracemalloc.Trace.size"]], "size_diff (tracemalloc.statisticdiff attribute)": [[379, "tracemalloc.StatisticDiff.size_diff"]], "start() (in module tracemalloc)": [[379, "tracemalloc.start"]], "statistics() (tracemalloc.snapshot method)": [[379, "tracemalloc.Snapshot.statistics"]], "stop() (in module tracemalloc)": [[379, "tracemalloc.stop"]], "take_snapshot() (in module tracemalloc)": [[379, "tracemalloc.take_snapshot"]], "total_nframe (tracemalloc.traceback attribute)": [[379, "tracemalloc.Traceback.total_nframe"]], "traceback (tracemalloc.statistic attribute)": [[379, "tracemalloc.Statistic.traceback"]], "traceback (tracemalloc.statisticdiff attribute)": [[379, "tracemalloc.StatisticDiff.traceback"]], "traceback (tracemalloc.trace attribute)": [[379, "tracemalloc.Trace.traceback"]], "traceback_limit (tracemalloc.snapshot attribute)": [[379, "tracemalloc.Snapshot.traceback_limit"]], "tracemalloc": [[379, "module-tracemalloc"]], "traces (tracemalloc.snapshot attribute)": [[379, "tracemalloc.Snapshot.traces"]], "cfmakecbreak() (in module tty)": [[380, "tty.cfmakecbreak"]], "cfmakeraw() (in module tty)": [[380, "tty.cfmakeraw"]], "setcbreak() (in module tty)": [[380, "tty.setcbreak"]], "setraw() (in module tty)": [[380, "tty.setraw"]], "rawpen (class in turtle)": [[381, "turtle.RawPen"]], "rawturtle (class in turtle)": [[381, "turtle.RawTurtle"]], "screen (class in turtle)": [[381, "turtle.Screen"]], "scrolledcanvas (class in turtle)": [[381, "turtle.ScrolledCanvas"]], "shape (class in turtle)": [[381, "turtle.Shape"]], "turtle (class in turtle)": [[381, "turtle.Turtle"]], "turtlescreen (class in turtle)": [[381, "turtle.TurtleScreen"]], "vec2d (class in turtle)": [[381, "turtle.Vec2D"]], "addcomponent() (turtle.shape method)": [[381, "turtle.Shape.addcomponent"]], "addshape() (in module turtle)": [[381, "turtle.addshape"]], "back() (in module turtle)": [[381, "turtle.back"]], "backward() (in module turtle)": [[381, "turtle.backward"]], "begin_fill() (in module turtle)": [[381, "turtle.begin_fill"]], "begin_poly() (in module turtle)": [[381, "turtle.begin_poly"]], "bgcolor() (in module turtle)": [[381, "turtle.bgcolor"]], "bgpic() (in module turtle)": [[381, "turtle.bgpic"]], "bk() (in module turtle)": [[381, "turtle.bk"]], "bye() (in module turtle)": [[381, "turtle.bye"]], "circle() (in module turtle)": [[381, "turtle.circle"]], "clear() (in module turtle)": [[381, "turtle.clear"]], "clearscreen() (in module turtle)": [[381, "turtle.clearscreen"]], "clearstamp() (in module turtle)": [[381, "turtle.clearstamp"]], "clearstamps() (in module turtle)": [[381, "turtle.clearstamps"]], "clone() (in module turtle)": [[381, "turtle.clone"]], "color() (in module turtle)": [[381, "turtle.color"]], "colormode() (in module turtle)": [[381, "turtle.colormode"]], "degrees() (in module turtle)": [[381, "turtle.degrees"]], "delay() (in module turtle)": [[381, "turtle.delay"]], "distance() (in module turtle)": [[381, "turtle.distance"]], "done() (in module turtle)": [[381, "turtle.done"]], "dot() (in module turtle)": [[381, "turtle.dot"]], "down() (in module turtle)": [[381, "turtle.down"]], "end_fill() (in module turtle)": [[381, "turtle.end_fill"]], "end_poly() (in module turtle)": [[381, "turtle.end_poly"]], "exitonclick() (in module turtle)": [[381, "turtle.exitonclick"]], "fd() (in module turtle)": [[381, "turtle.fd"]], "fillcolor() (in module turtle)": [[381, "turtle.fillcolor"]], "filling() (in module turtle)": [[381, "turtle.filling"]], "forward() (in module turtle)": [[381, "turtle.forward"]], "get_poly() (in module turtle)": [[381, "turtle.get_poly"]], "get_shapepoly() (in module turtle)": [[381, "turtle.get_shapepoly"]], "getcanvas() (in module turtle)": [[381, "turtle.getcanvas"]], "getpen() (in module turtle)": [[381, "turtle.getpen"]], "getscreen() (in module turtle)": [[381, "turtle.getscreen"]], "getshapes() (in module turtle)": [[381, "turtle.getshapes"]], "getturtle() (in module turtle)": [[381, "turtle.getturtle"]], "goto() (in module turtle)": [[381, "turtle.goto"]], "heading() (in module turtle)": [[381, "turtle.heading"]], "hideturtle() (in module turtle)": [[381, "turtle.hideturtle"]], "home() (in module turtle)": [[381, "turtle.home"]], "ht() (in module turtle)": [[381, "turtle.ht"]], "isdown() (in module turtle)": [[381, "turtle.isdown"]], "isvisible() (in module turtle)": [[381, "turtle.isvisible"]], "left() (in module turtle)": [[381, "turtle.left"]], "listen() (in module turtle)": [[381, "turtle.listen"]], "lt() (in module turtle)": [[381, "turtle.lt"]], "mainloop() (in module turtle)": [[381, "turtle.mainloop"]], "mode() (in module turtle)": [[381, "turtle.mode"]], "numinput() (in module turtle)": [[381, "turtle.numinput"]], "onclick() (in module turtle)": [[381, "turtle.onclick"]], "ondrag() (in module turtle)": [[381, "turtle.ondrag"]], "onkey() (in module turtle)": [[381, "turtle.onkey"]], "onkeypress() (in module turtle)": [[381, "turtle.onkeypress"]], "onkeyrelease() (in module turtle)": [[381, "turtle.onkeyrelease"]], "onrelease() (in module turtle)": [[381, "turtle.onrelease"]], "onscreenclick() (in module turtle)": [[381, "turtle.onscreenclick"]], "ontimer() (in module turtle)": [[381, "turtle.ontimer"]], "pd() (in module turtle)": [[381, "turtle.pd"]], "pen() (in module turtle)": [[381, "turtle.pen"]], "pencolor() (in module turtle)": [[381, "turtle.pencolor"]], "pendown() (in module turtle)": [[381, "turtle.pendown"]], "pensize() (in module turtle)": [[381, "turtle.pensize"]], "penup() (in module turtle)": [[381, "turtle.penup"]], "pos() (in module turtle)": [[381, "turtle.pos"]], "position() (in module turtle)": [[381, "turtle.position"]], "pu() (in module turtle)": [[381, "turtle.pu"]], "radians() (in module turtle)": [[381, "turtle.radians"]], "register_shape() (in module turtle)": [[381, "turtle.register_shape"]], "reset() (in module turtle)": [[381, "turtle.reset"]], "resetscreen() (in module turtle)": [[381, "turtle.resetscreen"]], "resizemode() (in module turtle)": [[381, "turtle.resizemode"]], "right() (in module turtle)": [[381, "turtle.right"]], "rt() (in module turtle)": [[381, "turtle.rt"]], "screensize() (in module turtle)": [[381, "turtle.screensize"]], "seth() (in module turtle)": [[381, "turtle.seth"]], "setheading() (in module turtle)": [[381, "turtle.setheading"]], "setpos() (in module turtle)": [[381, "turtle.setpos"]], "setposition() (in module turtle)": [[381, "turtle.setposition"]], "settiltangle() (in module turtle)": [[381, "turtle.settiltangle"]], "setundobuffer() (in module turtle)": [[381, "turtle.setundobuffer"]], "setup() (in module turtle)": [[381, "turtle.setup"]], "setworldcoordinates() (in module turtle)": [[381, "turtle.setworldcoordinates"]], "setx() (in module turtle)": [[381, "turtle.setx"]], "sety() (in module turtle)": [[381, "turtle.sety"]], "shape() (in module turtle)": [[381, "turtle.shape"]], "shapesize() (in module turtle)": [[381, "turtle.shapesize"]], "shapetransform() (in module turtle)": [[381, "turtle.shapetransform"]], "shearfactor() (in module turtle)": [[381, "turtle.shearfactor"]], "showturtle() (in module turtle)": [[381, "turtle.showturtle"]], "speed() (in module turtle)": [[381, "turtle.speed"]], "st() (in module turtle)": [[381, "turtle.st"]], "stamp() (in module turtle)": [[381, "turtle.stamp"]], "teleport() (in module turtle)": [[381, "turtle.teleport"]], "textinput() (in module turtle)": [[381, "turtle.textinput"]], "tilt() (in module turtle)": [[381, "turtle.tilt"]], "tiltangle() (in module turtle)": [[381, "turtle.tiltangle"]], "title() (in module turtle)": [[381, "turtle.title"]], "towards() (in module turtle)": [[381, "turtle.towards"]], "tracer() (in module turtle)": [[381, "turtle.tracer"]], "turtle": [[381, "module-turtle"]], "turtledemo": [[381, "module-turtledemo"]], "turtles() (in module turtle)": [[381, "turtle.turtles"]], "turtlesize() (in module turtle)": [[381, "turtle.turtlesize"]], "undo() (in module turtle)": [[381, "turtle.undo"]], "undobufferentries() (in module turtle)": [[381, "turtle.undobufferentries"]], "up() (in module turtle)": [[381, "turtle.up"]], "update() (in module turtle)": [[381, "turtle.update"]], "width() (in module turtle)": [[381, "turtle.width"]], "window_height() (in module turtle)": [[381, "turtle.window_height"]], "window_width() (in module turtle)": [[381, "turtle.window_width"]], "write() (in module turtle)": [[381, "turtle.write"]], "write_docstringdict() (in module turtle)": [[381, "turtle.write_docstringdict"]], "xcor() (in module turtle)": [[381, "turtle.xcor"]], "ycor() (in module turtle)": [[381, "turtle.ycor"]], "asyncgeneratortype (in module types)": [[382, "types.AsyncGeneratorType"]], "builtinfunctiontype (in module types)": [[382, "types.BuiltinFunctionType"]], "builtinmethodtype (in module types)": [[382, "types.BuiltinMethodType"]], "celltype (in module types)": [[382, "types.CellType"]], "classmethoddescriptortype (in module types)": [[382, "types.ClassMethodDescriptorType"]], "codetype (class in types)": [[382, "types.CodeType"]], "coroutinetype (in module types)": [[382, "types.CoroutineType"]], "dynamicclassattribute() (in module types)": [[382, "types.DynamicClassAttribute"]], "ellipsistype (in module types)": [[382, "types.EllipsisType"]], "frametype (in module types)": [[382, "types.FrameType"]], "functiontype (in module types)": [[382, "types.FunctionType"]], "generatortype (in module types)": [[382, "types.GeneratorType"]], "genericalias (class in types)": [[382, "types.GenericAlias"]], "getsetdescriptortype (in module types)": [[382, "types.GetSetDescriptorType"]], "lambdatype (in module types)": [[382, "types.LambdaType"]], "mappingproxytype (class in types)": [[382, "types.MappingProxyType"]], "memberdescriptortype (in module types)": [[382, "types.MemberDescriptorType"]], "methoddescriptortype (in module types)": [[382, "types.MethodDescriptorType"]], "methodwrappertype (in module types)": [[382, "types.MethodWrapperType"]], "moduletype (class in types)": [[382, "types.ModuleType"]], "nonetype (in module types)": [[382, "types.NoneType"]], "notimplementedtype (in module types)": [[382, "types.NotImplementedType"]], "pep 3115": [[382, "index-0"], [424, "index-45"], [425, "index-90"], [467, "index-14"], [473, "index-29"]], "pep 560": [[382, "index-1"], [382, "index-2"], [382, "index-3"], [425, "index-87"], [425, "index-96"], [477, "index-21"], [477, "index-33"]], "simplenamespace (class in types)": [[382, "types.SimpleNamespace"]], "tracebacktype (class in types)": [[382, "types.TracebackType"]], "uniontype (class in types)": [[382, "types.UnionType"]], "wrapperdescriptortype (in module types)": [[382, "types.WrapperDescriptorType"]], "__doc__ (types.moduletype attribute)": [[382, "types.ModuleType.__doc__"]], "__loader__ (types.moduletype attribute)": [[382, "types.ModuleType.__loader__"]], "__name__ (types.moduletype attribute)": [[382, "types.ModuleType.__name__"]], "__package__ (types.moduletype attribute)": [[382, "types.ModuleType.__package__"]], "__spec__ (types.moduletype attribute)": [[382, "types.ModuleType.__spec__"]], "copy() (types.mappingproxytype method)": [[382, "types.MappingProxyType.copy"]], "coroutine() (in module types)": [[382, "types.coroutine"]], "get() (types.mappingproxytype method)": [[382, "types.MappingProxyType.get"]], "get_original_bases() (in module types)": [[382, "types.get_original_bases"]], "items() (types.mappingproxytype method)": [[382, "types.MappingProxyType.items"]], "keys() (types.mappingproxytype method)": [[382, "types.MappingProxyType.keys"]], "new_class() (in module types)": [[382, "types.new_class"]], "prepare_class() (in module types)": [[382, "types.prepare_class"]], "replace() (types.codetype method)": [[382, "types.CodeType.replace"]], "resolve_bases() (in module types)": [[382, "types.resolve_bases"]], "values() (types.mappingproxytype method)": [[382, "types.MappingProxyType.values"]], "abstractset (class in typing)": [[383, "typing.AbstractSet"]], "annotated (in module typing)": [[383, "typing.Annotated"]], "any (in module typing)": [[383, "typing.Any"]], "anystr (in module typing)": [[383, "typing.AnyStr"]], "asynccontextmanager (class in typing)": [[383, "typing.AsyncContextManager"]], "asyncgenerator (class in typing)": [[383, "typing.AsyncGenerator"]], "asynciterable (class in typing)": [[383, "typing.AsyncIterable"]], "asynciterator (class in typing)": [[383, "typing.AsyncIterator"]], "awaitable (class in typing)": [[383, "typing.Awaitable"]], "binaryio (class in typing)": [[383, "typing.BinaryIO"]], "bytestring (class in typing)": [[383, "typing.ByteString"]], "callable (in module typing)": [[383, "typing.Callable"]], "chainmap (class in typing)": [[383, "typing.ChainMap"]], "classvar (in module typing)": [[383, "typing.ClassVar"]], "collection (class in typing)": [[383, "typing.Collection"]], "concatenate (in module typing)": [[383, "typing.Concatenate"]], "container (class in typing)": [[383, "typing.Container"]], "contextmanager (class in typing)": [[383, "typing.ContextManager"]], "coroutine (class in typing)": [[383, "typing.Coroutine"]], "counter (class in typing)": [[383, "typing.Counter"]], "defaultdict (class in typing)": [[383, "typing.DefaultDict"]], "deque (class in typing)": [[383, "typing.Deque"]], "dict (class in typing)": [[383, "typing.Dict"]], "final (in module typing)": [[383, "typing.Final"]], "forwardref (class in typing)": [[383, "typing.ForwardRef"]], "frozenset (class in typing)": [[383, "typing.FrozenSet"]], "generator (class in typing)": [[383, "typing.Generator"]], "generic (class in typing)": [[383, "typing.Generic"]], "hashable (class in typing)": [[383, "typing.Hashable"]], "io (class in typing)": [[383, "typing.IO"]], "itemsview (class in typing)": [[383, "typing.ItemsView"]], "iterable (class in typing)": [[383, "typing.Iterable"]], "iterator (class in typing)": [[383, "typing.Iterator"]], "keysview (class in typing)": [[383, "typing.KeysView"]], "list (class in typing)": [[383, "typing.List"]], "literal (in module typing)": [[383, "typing.Literal"]], "literalstring (in module typing)": [[383, "typing.LiteralString"]], "mapping (class in typing)": [[383, "typing.Mapping"]], "mappingview (class in typing)": [[383, "typing.MappingView"]], "match (class in typing)": [[383, "typing.Match"]], "mutablemapping (class in typing)": [[383, "typing.MutableMapping"]], "mutablesequence (class in typing)": [[383, "typing.MutableSequence"]], "mutableset (class in typing)": [[383, "typing.MutableSet"]], "namedtuple (class in typing)": [[383, "typing.NamedTuple"]], "never (in module typing)": [[383, "typing.Never"]], "newtype (class in typing)": [[383, "typing.NewType"]], "noreturn (in module typing)": [[383, "typing.NoReturn"]], "notrequired (in module typing)": [[383, "typing.NotRequired"]], "optional (in module typing)": [[383, "typing.Optional"]], "ordereddict (class in typing)": [[383, "typing.OrderedDict"]], "pep 544": [[383, "index-28"], [383, "index-49"], [383, "index-5"], [478, "index-18"]], "pep 586": [[383, "index-33"], [383, "index-7"], [469, "index-31"], [478, "index-16"], [479, "index-27"]], "pep 589": [[383, "index-51"], [383, "index-8"], [478, "index-15"]], "pep 591": [[383, "index-35"], [383, "index-55"], [383, "index-9"], [478, "index-17"]], "pep 593": [[383, "index-10"], [383, "index-38"], [383, "index-58"], [479, "index-17"], [479, "index-5"]], "pep 612": [[383, "index-12"], [383, "index-24"], [383, "index-25"], [383, "index-32"], [383, "index-47"], [383, "index-94"], [469, "index-22"], [469, "index-6"]], "pep 613": [[383, "index-13"], [383, "index-31"], [469, "index-24"], [469, "index-7"]], "pep 646": [[383, "index-14"], [383, "index-44"], [470, "index-13"], [470, "index-14"]], "pep 647": [[383, "index-15"], [383, "index-39"], [469, "index-25"], [469, "index-8"]], "pep 655": [[383, "index-16"], [383, "index-36"], [383, "index-37"], [383, "index-52"], [470, "index-15"]], "pep 673": [[383, "index-17"], [383, "index-30"], [470, "index-17"]], "pep 675": [[383, "index-18"], [383, "index-29"], [470, "index-18"]], "pep 681": [[383, "index-19"], [383, "index-53"], [470, "index-19"]], "pep 692": [[383, "index-20"], [383, "index-40"], [471, "index-17"], [471, "index-18"]], "pep 695": [[383, "index-100"], [383, "index-21"], [383, "index-42"], [383, "index-43"], [383, "index-45"], [383, "index-46"], [426, "index-12"], [433, "index-48"], [471, "index-29"], [471, "index-4"], [471, "index-5"]], "pep 698": [[383, "index-22"], [383, "index-56"], [471, "index-19"]], "paramspec (class in typing)": [[383, "typing.ParamSpec"]], "paramspecargs (in module typing)": [[383, "typing.ParamSpecArgs"]], "paramspeckwargs (in module typing)": [[383, "typing.ParamSpecKwargs"]], "pattern (class in typing)": [[383, "typing.Pattern"]], "protocol (class in typing)": [[383, "typing.Protocol"]], "required (in module typing)": [[383, "typing.Required"]], "reversible (class in typing)": [[383, "typing.Reversible"]], "self (in module typing)": [[383, "typing.Self"]], "sequence (class in typing)": [[383, "typing.Sequence"]], "set (class in typing)": [[383, "typing.Set"]], "sized (class in typing)": [[383, "typing.Sized"]], "supportsabs (class in typing)": [[383, "typing.SupportsAbs"]], "supportsbytes (class in typing)": [[383, "typing.SupportsBytes"]], "supportscomplex (class in typing)": [[383, "typing.SupportsComplex"]], "supportsfloat (class in typing)": [[383, "typing.SupportsFloat"]], "supportsindex (class in typing)": [[383, "typing.SupportsIndex"]], "supportsint (class in typing)": [[383, "typing.SupportsInt"]], "supportsround (class in typing)": [[383, "typing.SupportsRound"]], "type_checking (in module typing)": [[383, "typing.TYPE_CHECKING"]], "text (class in typing)": [[383, "typing.Text"]], "textio (class in typing)": [[383, "typing.TextIO"]], "tuple (in module typing)": [[383, "typing.Tuple"]], "type (class in typing)": [[383, "typing.Type"]], "typealias (in module typing)": [[383, "typing.TypeAlias"]], "typealiastype (class in typing)": [[383, "typing.TypeAliasType"]], "typeguard (in module typing)": [[383, "typing.TypeGuard"]], "typevar (class in typing)": [[383, "typing.TypeVar"]], "typevartuple (class in typing)": [[383, "typing.TypeVarTuple"]], "typeddict (class in typing)": [[383, "typing.TypedDict"]], "union (in module typing)": [[383, "typing.Union"]], "unpack (in module typing)": [[383, "typing.Unpack"]], "valuesview (class in typing)": [[383, "typing.ValuesView"]], "__bound__ (typing.typevar attribute)": [[383, "typing.TypeVar.__bound__"]], "__constraints__ (typing.typevar attribute)": [[383, "typing.TypeVar.__constraints__"]], "__contravariant__ (typing.typevar attribute)": [[383, "typing.TypeVar.__contravariant__"]], "__covariant__ (typing.typevar attribute)": [[383, "typing.TypeVar.__covariant__"]], "__infer_variance__ (typing.typevar attribute)": [[383, "typing.TypeVar.__infer_variance__"]], "__module__ (typing.newtype attribute)": [[383, "typing.NewType.__module__"]], "__module__ (typing.typealiastype attribute)": [[383, "typing.TypeAliasType.__module__"]], "__name__ (typing.newtype attribute)": [[383, "typing.NewType.__name__"]], "__name__ (typing.paramspec attribute)": [[383, "typing.ParamSpec.__name__"]], "__name__ (typing.typealiastype attribute)": [[383, "typing.TypeAliasType.__name__"]], "__name__ (typing.typevar attribute)": [[383, "typing.TypeVar.__name__"]], "__name__ (typing.typevartuple attribute)": [[383, "typing.TypeVarTuple.__name__"]], "__optional_keys__ (typing.typeddict attribute)": [[383, "typing.TypedDict.__optional_keys__"]], "__required_keys__ (typing.typeddict attribute)": [[383, "typing.TypedDict.__required_keys__"]], "__supertype__ (typing.newtype attribute)": [[383, "typing.NewType.__supertype__"]], "__total__ (typing.typeddict attribute)": [[383, "typing.TypedDict.__total__"]], "__type_params__ (typing.typealiastype attribute)": [[383, "typing.TypeAliasType.__type_params__"]], "__value__ (typing.typealiastype attribute)": [[383, "typing.TypeAliasType.__value__"]], "args (typing.paramspec attribute)": [[383, "typing.ParamSpec.args"]], "assert_never() (in module typing)": [[383, "typing.assert_never"]], "assert_type() (in module typing)": [[383, "typing.assert_type"]], "cast() (in module typing)": [[383, "typing.cast"]], "clear_overloads() (in module typing)": [[383, "typing.clear_overloads"]], "dataclass_transform() (in module typing)": [[383, "typing.dataclass_transform"]], "final() (in module typing)": [[383, "typing.final"]], "get_args() (in module typing)": [[383, "typing.get_args"]], "get_origin() (in module typing)": [[383, "typing.get_origin"]], "get_overloads() (in module typing)": [[383, "typing.get_overloads"]], "get_type_hints() (in module typing)": [[383, "typing.get_type_hints"]], "is_typeddict() (in module typing)": [[383, "typing.is_typeddict"]], "kwargs (typing.paramspec attribute)": [[383, "typing.ParamSpec.kwargs"]], "no_type_check() (in module typing)": [[383, "typing.no_type_check"]], "no_type_check_decorator() (in module typing)": [[383, "typing.no_type_check_decorator"]], "overload() (in module typing)": [[383, "typing.overload"]], "override() (in module typing)": [[383, "typing.override"]], "reveal_type() (in module typing)": [[383, "typing.reveal_type"]], "runtime_checkable() (in module typing)": [[383, "typing.runtime_checkable"]], "type_check_only() (in module typing)": [[383, "typing.type_check_only"]], "typing": [[383, "module-typing"]], "bidirectional() (in module unicodedata)": [[384, "unicodedata.bidirectional"]], "category() (in module unicodedata)": [[384, "unicodedata.category"]], "character": [[384, "index-0"], [425, "index-19"], [427, "index-43"]], "combining() (in module unicodedata)": [[384, "unicodedata.combining"]], "database": [[384, "index-0"]], "decimal() (in module unicodedata)": [[384, "unicodedata.decimal"]], "decomposition() (in module unicodedata)": [[384, "unicodedata.decomposition"]], "digit() (in module unicodedata)": [[384, "unicodedata.digit"]], "east_asian_width() (in module unicodedata)": [[384, "unicodedata.east_asian_width"]], "is_normalized() (in module unicodedata)": [[384, "unicodedata.is_normalized"]], "lookup() (in module unicodedata)": [[384, "unicodedata.lookup"]], "mirrored() (in module unicodedata)": [[384, "unicodedata.mirrored"]], "name() (in module unicodedata)": [[384, "unicodedata.name"]], "normalize() (in module unicodedata)": [[384, "unicodedata.normalize"]], "numeric() (in module unicodedata)": [[384, "unicodedata.numeric"]], "ucd_3_2_0 (in module unicodedata)": [[384, "unicodedata.ucd_3_2_0"]], "unicodedata": [[384, "module-unicodedata"]], "unidata_version (in module unicodedata)": [[384, "unicodedata.unidata_version"]], "--buffer": [[385, "cmdoption-unittest-b"]], "--catch": [[385, "cmdoption-unittest-c"]], "--durations": [[385, "cmdoption-unittest-durations"]], "--failfast": [[385, "cmdoption-unittest-f"]], "--locals": [[385, "cmdoption-unittest-locals"]], "--pattern": [[385, "cmdoption-unittest-discover-p"]], "--start-directory": [[385, "cmdoption-unittest-discover-s"]], "--top-level-directory": [[385, "cmdoption-unittest-discover-t"]], "-k": [[385, "cmdoption-unittest-k"]], "functiontestcase (class in unittest)": [[385, "unittest.FunctionTestCase"]], "isolatedasynciotestcase (class in unittest)": [[385, "unittest.IsolatedAsyncioTestCase"]], "skiptest": [[385, "unittest.SkipTest"]], "testcase (class in unittest)": [[385, "unittest.TestCase"]], "testloader (class in unittest)": [[385, "unittest.TestLoader"]], "testresult (class in unittest)": [[385, "unittest.TestResult"]], "testsuite (class in unittest)": [[385, "unittest.TestSuite"]], "texttestresult (class in unittest)": [[385, "unittest.TextTestResult"]], "texttestrunner (class in unittest)": [[385, "unittest.TextTestRunner"]], "__iter__() (unittest.testsuite method)": [[385, "unittest.TestSuite.__iter__"]], "_makeresult() (unittest.texttestrunner method)": [[385, "unittest.TextTestRunner._makeResult"]], "addasynccleanup() (unittest.isolatedasynciotestcase method)": [[385, "unittest.IsolatedAsyncioTestCase.addAsyncCleanup"]], "addclasscleanup() (unittest.testcase class method)": [[385, "unittest.TestCase.addClassCleanup"]], "addcleanup() (unittest.testcase method)": [[385, "unittest.TestCase.addCleanup"]], "addduration() (unittest.testresult method)": [[385, "unittest.TestResult.addDuration"]], "adderror() (unittest.testresult method)": [[385, "unittest.TestResult.addError"]], "addexpectedfailure() (unittest.testresult method)": [[385, "unittest.TestResult.addExpectedFailure"]], "addfailure() (unittest.testresult method)": [[385, "unittest.TestResult.addFailure"]], "addmodulecleanup() (in module unittest)": [[385, "unittest.addModuleCleanup"]], "addskip() (unittest.testresult method)": [[385, "unittest.TestResult.addSkip"]], "addsubtest() (unittest.testresult method)": [[385, "unittest.TestResult.addSubTest"]], "addsuccess() (unittest.testresult method)": [[385, "unittest.TestResult.addSuccess"]], "addtest() (unittest.testsuite method)": [[385, "unittest.TestSuite.addTest"]], "addtests() (unittest.testsuite method)": [[385, "unittest.TestSuite.addTests"]], "addtypeequalityfunc() (unittest.testcase method)": [[385, "unittest.TestCase.addTypeEqualityFunc"]], "addunexpectedsuccess() (unittest.testresult method)": [[385, "unittest.TestResult.addUnexpectedSuccess"]], "assertalmostequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertAlmostEqual"]], "assertcountequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertCountEqual"]], "assertdictequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertDictEqual"]], "assertequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertEqual"]], "assertfalse() (unittest.testcase method)": [[385, "unittest.TestCase.assertFalse"]], "assertgreater() (unittest.testcase method)": [[385, "unittest.TestCase.assertGreater"]], "assertgreaterequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertGreaterEqual"]], "assertin() (unittest.testcase method)": [[385, "unittest.TestCase.assertIn"]], "assertis() (unittest.testcase method)": [[385, "unittest.TestCase.assertIs"]], "assertisinstance() (unittest.testcase method)": [[385, "unittest.TestCase.assertIsInstance"]], "assertisnone() (unittest.testcase method)": [[385, "unittest.TestCase.assertIsNone"]], "assertisnot() (unittest.testcase method)": [[385, "unittest.TestCase.assertIsNot"]], "assertisnotnone() (unittest.testcase method)": [[385, "unittest.TestCase.assertIsNotNone"]], "assertless() (unittest.testcase method)": [[385, "unittest.TestCase.assertLess"]], "assertlessequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertLessEqual"]], "assertlistequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertListEqual"]], "assertlogs() (unittest.testcase method)": [[385, "unittest.TestCase.assertLogs"]], "assertmultilineequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertMultiLineEqual"]], "assertnologs() (unittest.testcase method)": [[385, "unittest.TestCase.assertNoLogs"]], "assertnotalmostequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertNotAlmostEqual"]], "assertnotequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertNotEqual"]], "assertnotin() (unittest.testcase method)": [[385, "unittest.TestCase.assertNotIn"]], "assertnotisinstance() (unittest.testcase method)": [[385, "unittest.TestCase.assertNotIsInstance"]], "assertnotregex() (unittest.testcase method)": [[385, "unittest.TestCase.assertNotRegex"]], "assertraises() (unittest.testcase method)": [[385, "unittest.TestCase.assertRaises"]], "assertraisesregex() (unittest.testcase method)": [[385, "unittest.TestCase.assertRaisesRegex"]], "assertregex() (unittest.testcase method)": [[385, "unittest.TestCase.assertRegex"]], "assertsequenceequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertSequenceEqual"]], "assertsetequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertSetEqual"]], "asserttrue() (unittest.testcase method)": [[385, "unittest.TestCase.assertTrue"]], "asserttupleequal() (unittest.testcase method)": [[385, "unittest.TestCase.assertTupleEqual"]], "assertwarns() (unittest.testcase method)": [[385, "unittest.TestCase.assertWarns"]], "assertwarnsregex() (unittest.testcase method)": [[385, "unittest.TestCase.assertWarnsRegex"]], "asyncsetup() (unittest.isolatedasynciotestcase method)": [[385, "unittest.IsolatedAsyncioTestCase.asyncSetUp"]], "asyncteardown() (unittest.isolatedasynciotestcase method)": [[385, "unittest.IsolatedAsyncioTestCase.asyncTearDown"]], "buffer (unittest.testresult attribute)": [[385, "unittest.TestResult.buffer"]], "collecteddurations (unittest.testresult attribute)": [[385, "unittest.TestResult.collectedDurations"]], "counttestcases() (unittest.testcase method)": [[385, "unittest.TestCase.countTestCases"]], "counttestcases() (unittest.testsuite method)": [[385, "unittest.TestSuite.countTestCases"]], "debug() (unittest.testcase method)": [[385, "unittest.TestCase.debug"]], "debug() (unittest.testsuite method)": [[385, "unittest.TestSuite.debug"]], "defaulttestloader (in module unittest)": [[385, "unittest.defaultTestLoader"]], "defaulttestresult() (unittest.testcase method)": [[385, "unittest.TestCase.defaultTestResult"]], "discover() (unittest.testloader method)": [[385, "unittest.TestLoader.discover"]], "doclasscleanups() (unittest.testcase class method)": [[385, "unittest.TestCase.doClassCleanups"]], "docleanups() (unittest.testcase method)": [[385, "unittest.TestCase.doCleanups"]], "domodulecleanups() (in module unittest)": [[385, "unittest.doModuleCleanups"]], "enterasynccontext() (unittest.isolatedasynciotestcase method)": [[385, "unittest.IsolatedAsyncioTestCase.enterAsyncContext"]], "enterclasscontext() (unittest.testcase class method)": [[385, "unittest.TestCase.enterClassContext"]], "entercontext() (unittest.testcase method)": [[385, "unittest.TestCase.enterContext"]], "entermodulecontext() (in module unittest)": [[385, "unittest.enterModuleContext"]], "errors (unittest.testloader attribute)": [[385, "unittest.TestLoader.errors"]], "errors (unittest.testresult attribute)": [[385, "unittest.TestResult.errors"]], "expectedfailure() (in module unittest)": [[385, "unittest.expectedFailure"]], "expectedfailures (unittest.testresult attribute)": [[385, "unittest.TestResult.expectedFailures"]], "fail() (unittest.testcase method)": [[385, "unittest.TestCase.fail"]], "failfast (unittest.testresult attribute)": [[385, "unittest.TestResult.failfast"]], "failureexception (unittest.testcase attribute)": [[385, "unittest.TestCase.failureException"]], "failures (unittest.testresult attribute)": [[385, "unittest.TestResult.failures"]], "gettestcasenames() (unittest.testloader method)": [[385, "unittest.TestLoader.getTestCaseNames"]], "id() (unittest.testcase method)": [[385, "unittest.TestCase.id"]], "installhandler() (in module unittest)": [[385, "unittest.installHandler"]], "loadtestsfrommodule() (unittest.testloader method)": [[385, "unittest.TestLoader.loadTestsFromModule"]], "loadtestsfromname() (unittest.testloader method)": [[385, "unittest.TestLoader.loadTestsFromName"]], "loadtestsfromnames() (unittest.testloader method)": [[385, "unittest.TestLoader.loadTestsFromNames"]], "loadtestsfromtestcase() (unittest.testloader method)": [[385, "unittest.TestLoader.loadTestsFromTestCase"]], "longmessage (unittest.testcase attribute)": [[385, "unittest.TestCase.longMessage"]], "main() (in module unittest)": [[385, "unittest.main"]], "maxdiff (unittest.testcase attribute)": [[385, "unittest.TestCase.maxDiff"]], "output (unittest.testcase attribute)": [[385, "unittest.TestCase.output"]], "records (unittest.testcase attribute)": [[385, "unittest.TestCase.records"]], "registerresult() (in module unittest)": [[385, "unittest.registerResult"]], "removehandler() (in module unittest)": [[385, "unittest.removeHandler"]], "removeresult() (in module unittest)": [[385, "unittest.removeResult"]], "run() (unittest.isolatedasynciotestcase method)": [[385, "unittest.IsolatedAsyncioTestCase.run"]], "run() (unittest.testcase method)": [[385, "unittest.TestCase.run"]], "run() (unittest.testsuite method)": [[385, "unittest.TestSuite.run"]], "run() (unittest.texttestrunner method)": [[385, "unittest.TextTestRunner.run"]], "setup() (unittest.testcase method)": [[385, "unittest.TestCase.setUp"]], "setupclass() (unittest.testcase method)": [[385, "unittest.TestCase.setUpClass"]], "shortdescription() (unittest.testcase method)": [[385, "unittest.TestCase.shortDescription"]], "shouldstop (unittest.testresult attribute)": [[385, "unittest.TestResult.shouldStop"]], "skip() (in module unittest)": [[385, "unittest.skip"]], "skipif() (in module unittest)": [[385, "unittest.skipIf"]], "skiptest() (unittest.testcase method)": [[385, "unittest.TestCase.skipTest"]], "skipunless() (in module unittest)": [[385, "unittest.skipUnless"]], "skipped (unittest.testresult attribute)": [[385, "unittest.TestResult.skipped"]], "sorttestmethodsusing (unittest.testloader attribute)": [[385, "unittest.TestLoader.sortTestMethodsUsing"]], "starttest() (unittest.testresult method)": [[385, "unittest.TestResult.startTest"]], "starttestrun() (unittest.testresult method)": [[385, "unittest.TestResult.startTestRun"]], "stop() (unittest.testresult method)": [[385, "unittest.TestResult.stop"]], "stoptest() (unittest.testresult method)": [[385, "unittest.TestResult.stopTest"]], "stoptestrun() (unittest.testresult method)": [[385, "unittest.TestResult.stopTestRun"]], "subtest() (unittest.testcase method)": [[385, "unittest.TestCase.subTest"]], "suiteclass (unittest.testloader attribute)": [[385, "unittest.TestLoader.suiteClass"]], "tb_locals (unittest.testresult attribute)": [[385, "unittest.TestResult.tb_locals"]], "teardown() (unittest.testcase method)": [[385, "unittest.TestCase.tearDown"]], "teardownclass() (unittest.testcase method)": [[385, "unittest.TestCase.tearDownClass"]], "testmethodprefix (unittest.testloader attribute)": [[385, "unittest.TestLoader.testMethodPrefix"]], "testnamepatterns (unittest.testloader attribute)": [[385, "unittest.TestLoader.testNamePatterns"]], "testsrun (unittest.testresult attribute)": [[385, "unittest.TestResult.testsRun"]], "unexpectedsuccesses (unittest.testresult attribute)": [[385, "unittest.TestResult.unexpectedSuccesses"]], "unittest": [[385, "module-unittest"]], "unittest command line option": [[385, "cmdoption-unittest-b"], [385, "cmdoption-unittest-c"], [385, "cmdoption-unittest-durations"], [385, "cmdoption-unittest-f"], [385, "cmdoption-unittest-k"], [385, "cmdoption-unittest-locals"]], "unittest-discover command line option": [[385, "cmdoption-unittest-discover-p"], [385, "cmdoption-unittest-discover-s"], [385, "cmdoption-unittest-discover-t"], [385, "cmdoption-unittest-discover-v"]], "wassuccessful() (unittest.testresult method)": [[385, "unittest.TestResult.wasSuccessful"]], "any (in module unittest.mock)": [[386, "unittest.mock.ANY"]], "asyncmock (class in unittest.mock)": [[386, "unittest.mock.AsyncMock"]], "default (in module unittest.mock)": [[386, "unittest.mock.DEFAULT"]], "filter_dir (in module unittest.mock)": [[386, "unittest.mock.FILTER_DIR"]], "magicmock (class in unittest.mock)": [[386, "unittest.mock.MagicMock"]], "mock (class in unittest.mock)": [[386, "unittest.mock.Mock"]], "noncallablemagicmock (class in unittest.mock)": [[386, "unittest.mock.NonCallableMagicMock"]], "noncallablemock (class in unittest.mock)": [[386, "unittest.mock.NonCallableMock"]], "propertymock (class in unittest.mock)": [[386, "unittest.mock.PropertyMock"]], "__class__ (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.__class__"]], "__dir__() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.__dir__"]], "_get_child_mock() (unittest.mock.mock method)": [[386, "unittest.mock.Mock._get_child_mock"]], "assert_any_await() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_any_await"]], "assert_any_call() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_any_call"]], "assert_awaited() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_awaited"]], "assert_awaited_once() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_awaited_once"]], "assert_awaited_once_with() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_awaited_once_with"]], "assert_awaited_with() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_awaited_with"]], "assert_called() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_called"]], "assert_called_once() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_called_once"]], "assert_called_once_with() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_called_once_with"]], "assert_called_with() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_called_with"]], "assert_has_awaits() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_has_awaits"]], "assert_has_calls() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_has_calls"]], "assert_not_awaited() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.assert_not_awaited"]], "assert_not_called() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.assert_not_called"]], "attach_mock() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.attach_mock"]], "await_args (unittest.mock.asyncmock attribute)": [[386, "unittest.mock.AsyncMock.await_args"]], "await_args_list (unittest.mock.asyncmock attribute)": [[386, "unittest.mock.AsyncMock.await_args_list"]], "await_count (unittest.mock.asyncmock attribute)": [[386, "unittest.mock.AsyncMock.await_count"]], "call() (in module unittest.mock)": [[386, "unittest.mock.call"]], "call_args (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.call_args"]], "call_args_list (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.call_args_list"]], "call_count (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.call_count"]], "call_list() (unittest.mock.call method)": [[386, "unittest.mock.call.call_list"]], "called (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.called"]], "configure_mock() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.configure_mock"]], "create_autospec() (in module unittest.mock)": [[386, "unittest.mock.create_autospec"]], "method_calls (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.method_calls"]], "mock_add_spec() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.mock_add_spec"]], "mock_calls (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.mock_calls"]], "mock_open() (in module unittest.mock)": [[386, "unittest.mock.mock_open"]], "patch() (in module unittest.mock)": [[386, "unittest.mock.patch"]], "patch.dict() (in module unittest.mock)": [[386, "unittest.mock.patch.dict"]], "patch.multiple() (in module unittest.mock)": [[386, "unittest.mock.patch.multiple"]], "patch.object() (in module unittest.mock)": [[386, "unittest.mock.patch.object"]], "patch.stopall() (in module unittest.mock)": [[386, "unittest.mock.patch.stopall"]], "reset_mock() (unittest.mock.asyncmock method)": [[386, "unittest.mock.AsyncMock.reset_mock"]], "reset_mock() (unittest.mock.mock method)": [[386, "unittest.mock.Mock.reset_mock"]], "return_value (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.return_value"]], "seal() (in module unittest.mock)": [[386, "unittest.mock.seal"]], "sentinel (in module unittest.mock)": [[386, "unittest.mock.sentinel"]], "side_effect (unittest.mock.mock attribute)": [[386, "unittest.mock.Mock.side_effect"]], "unittest.mock": [[386, "module-unittest.mock"]], "urllib": [[389, "module-urllib"]], "contenttooshorterror": [[390, "urllib.error.ContentTooShortError"]], "httperror": [[390, "urllib.error.HTTPError"]], "urlerror": [[390, "urllib.error.URLError"]], "code (urllib.error.httperror attribute)": [[390, "urllib.error.HTTPError.code"]], "content (urllib.error.contenttooshorterror attribute)": [[390, "urllib.error.ContentTooShortError.content"]], "fp (urllib.error.httperror attribute)": [[390, "urllib.error.HTTPError.fp"]], "headers (urllib.error.httperror attribute)": [[390, "urllib.error.HTTPError.headers"]], "reason (urllib.error.httperror attribute)": [[390, "urllib.error.HTTPError.reason"]], "reason (urllib.error.urlerror attribute)": [[390, "urllib.error.URLError.reason"]], "url (urllib.error.httperror attribute)": [[390, "urllib.error.HTTPError.url"]], "urllib.error": [[390, "module-urllib.error"]], "defragresult (class in urllib.parse)": [[391, "urllib.parse.DefragResult"]], "defragresultbytes (class in urllib.parse)": [[391, "urllib.parse.DefragResultBytes"]], "parseresult (class in urllib.parse)": [[391, "urllib.parse.ParseResult"]], "parseresultbytes (class in urllib.parse)": [[391, "urllib.parse.ParseResultBytes"]], "rfc 1738": [[391, "index-13"]], "rfc 1808": [[391, "index-1"], [391, "index-12"], [475, "index-43"]], "rfc 2368": [[391, "index-11"]], "rfc 2396": [[391, "index-10"], [391, "index-3"], [391, "index-6"], [475, "index-44"], [477, "index-34"]], "rfc 2732": [[391, "index-9"], [466, "index-11"], [472, "index-13"]], "splitresult (class in urllib.parse)": [[391, "urllib.parse.SplitResult"]], "splitresultbytes (class in urllib.parse)": [[391, "urllib.parse.SplitResultBytes"]], "geturl() (urllib.parse.urllib.parse.splitresult method)": [[391, "urllib.parse.urllib.parse.SplitResult.geturl"]], "parse_qs() (in module urllib.parse)": [[391, "urllib.parse.parse_qs"]], "parse_qsl() (in module urllib.parse)": [[391, "urllib.parse.parse_qsl"]], "parsing": [[391, "index-0"]], "quote() (in module urllib.parse)": [[391, "urllib.parse.quote"]], "quote_from_bytes() (in module urllib.parse)": [[391, "urllib.parse.quote_from_bytes"]], "quote_plus() (in module urllib.parse)": [[391, "urllib.parse.quote_plus"]], "relative": [[391, "index-0"], [433, "index-39"]], "unquote() (in module urllib.parse)": [[391, "urllib.parse.unquote"]], "unquote_plus() (in module urllib.parse)": [[391, "urllib.parse.unquote_plus"]], "unquote_to_bytes() (in module urllib.parse)": [[391, "urllib.parse.unquote_to_bytes"]], "unwrap() (in module urllib.parse)": [[391, "urllib.parse.unwrap"]], "urldefrag() (in module urllib.parse)": [[391, "urllib.parse.urldefrag"]], "urlencode() (in module urllib.parse)": [[391, "urllib.parse.urlencode"]], "urljoin() (in module urllib.parse)": [[391, "urllib.parse.urljoin"]], "urllib.parse": [[391, "module-urllib.parse"]], "urlparse() (in module urllib.parse)": [[391, "urllib.parse.urlparse"]], "urlsplit() (in module urllib.parse)": [[391, "urllib.parse.urlsplit"]], "urlunparse() (in module urllib.parse)": [[391, "urllib.parse.urlunparse"]], "urlunsplit() (in module urllib.parse)": [[391, "urllib.parse.urlunsplit"]], "abstractbasicauthhandler (class in urllib.request)": [[392, "urllib.request.AbstractBasicAuthHandler"]], "abstractdigestauthhandler (class in urllib.request)": [[392, "urllib.request.AbstractDigestAuthHandler"]], "basehandler (class in urllib.request)": [[392, "urllib.request.BaseHandler"]], "cacheftphandler (class in urllib.request)": [[392, "urllib.request.CacheFTPHandler"]], "datahandler (class in urllib.request)": [[392, "urllib.request.DataHandler"]], "ftphandler (class in urllib.request)": [[392, "urllib.request.FTPHandler"]], "fancyurlopener (class in urllib.request)": [[392, "urllib.request.FancyURLopener"]], "filehandler (class in urllib.request)": [[392, "urllib.request.FileHandler"]], "httpbasicauthhandler (class in urllib.request)": [[392, "urllib.request.HTTPBasicAuthHandler"]], "httpcookieprocessor (class in urllib.request)": [[392, "urllib.request.HTTPCookieProcessor"]], "httpdefaulterrorhandler (class in urllib.request)": [[392, "urllib.request.HTTPDefaultErrorHandler"]], "httpdigestauthhandler (class in urllib.request)": [[392, "urllib.request.HTTPDigestAuthHandler"]], "httperrorprocessor (class in urllib.request)": [[392, "urllib.request.HTTPErrorProcessor"]], "httphandler (class in urllib.request)": [[392, "urllib.request.HTTPHandler"]], "httppasswordmgr (class in urllib.request)": [[392, "urllib.request.HTTPPasswordMgr"]], "httppasswordmgrwithdefaultrealm (class in urllib.request)": [[392, "urllib.request.HTTPPasswordMgrWithDefaultRealm"]], "httppasswordmgrwithpriorauth (class in urllib.request)": [[392, "urllib.request.HTTPPasswordMgrWithPriorAuth"]], "httpredirecthandler (class in urllib.request)": [[392, "urllib.request.HTTPRedirectHandler"]], "httpshandler (class in urllib.request)": [[392, "urllib.request.HTTPSHandler"]], "openerdirector (class in urllib.request)": [[392, "urllib.request.OpenerDirector"]], "proxybasicauthhandler (class in urllib.request)": [[392, "urllib.request.ProxyBasicAuthHandler"]], "proxydigestauthhandler (class in urllib.request)": [[392, "urllib.request.ProxyDigestAuthHandler"]], "proxyhandler (class in urllib.request)": [[392, "urllib.request.ProxyHandler"]], "rfc 2397": [[392, "index-7"]], "request (class in urllib.request)": [[392, "urllib.request.Request"]], "urlopener (class in urllib.request)": [[392, "urllib.request.URLopener"]], "unknownhandler (class in urllib.request)": [[392, "urllib.request.UnknownHandler"]], "add_handler() (urllib.request.openerdirector method)": [[392, "urllib.request.OpenerDirector.add_handler"]], "add_header() (urllib.request.request method)": [[392, "urllib.request.Request.add_header"]], "add_parent() (urllib.request.basehandler method)": [[392, "urllib.request.BaseHandler.add_parent"]], "add_password() (urllib.request.httppasswordmgr method)": [[392, "urllib.request.HTTPPasswordMgr.add_password"]], "add_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[392, "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password"]], "add_unredirected_header() (urllib.request.request method)": [[392, "urllib.request.Request.add_unredirected_header"]], "addinfourl (class in urllib.response)": [[392, "urllib.response.addinfourl"]], "build_opener() (in module urllib.request)": [[392, "urllib.request.build_opener"]], "close() (urllib.request.basehandler method)": [[392, "urllib.request.BaseHandler.close"]], "code (urllib.response.addinfourl attribute)": [[392, "urllib.response.addinfourl.code"]], "cookiejar (urllib.request.httpcookieprocessor attribute)": [[392, "urllib.request.HTTPCookieProcessor.cookiejar"]], "data (urllib.request.request attribute)": [[392, "urllib.request.Request.data"]], "data_open() (urllib.request.datahandler method)": [[392, "urllib.request.DataHandler.data_open"]], "default_open() (urllib.request.basehandler method)": [[392, "urllib.request.BaseHandler.default_open"]], "error() (urllib.request.openerdirector method)": [[392, "urllib.request.OpenerDirector.error"]], "file_open() (urllib.request.filehandler method)": [[392, "urllib.request.FileHandler.file_open"]], "find_user_password() (urllib.request.httppasswordmgr method)": [[392, "urllib.request.HTTPPasswordMgr.find_user_password"]], "find_user_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[392, "urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password"]], "ftp_open() (urllib.request.ftphandler method)": [[392, "urllib.request.FTPHandler.ftp_open"]], "full_url (urllib.request.request attribute)": [[392, "urllib.request.Request.full_url"]], "get_full_url() (urllib.request.request method)": [[392, "urllib.request.Request.get_full_url"]], "get_header() (urllib.request.request method)": [[392, "urllib.request.Request.get_header"]], "get_method() (urllib.request.request method)": [[392, "urllib.request.Request.get_method"]], "getcode() (urllib.response.addinfourl method)": [[392, "urllib.response.addinfourl.getcode"]], "getproxies() (in module urllib.request)": [[392, "urllib.request.getproxies"]], "geturl() (urllib.response.addinfourl method)": [[392, "urllib.response.addinfourl.geturl"]], "has_header() (urllib.request.request method)": [[392, "urllib.request.Request.has_header"]], "header_items() (urllib.request.request method)": [[392, "urllib.request.Request.header_items"]], "headers (urllib.response.addinfourl attribute)": [[392, "urllib.response.addinfourl.headers"]], "host (urllib.request.request attribute)": [[392, "urllib.request.Request.host"]], "http_error_301() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.http_error_301"]], "http_error_302() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.http_error_302"]], "http_error_303() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.http_error_303"]], "http_error_307() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.http_error_307"]], "http_error_308() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.http_error_308"]], "http_error_401() (urllib.request.httpbasicauthhandler method)": [[392, "urllib.request.HTTPBasicAuthHandler.http_error_401"]], "http_error_401() (urllib.request.httpdigestauthhandler method)": [[392, "urllib.request.HTTPDigestAuthHandler.http_error_401"]], "http_error_407() (urllib.request.proxybasicauthhandler method)": [[392, "urllib.request.ProxyBasicAuthHandler.http_error_407"]], "http_error_407() (urllib.request.proxydigestauthhandler method)": [[392, "urllib.request.ProxyDigestAuthHandler.http_error_407"]], "http_error_auth_reqed() (urllib.request.abstractbasicauthhandler method)": [[392, "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"]], "http_error_auth_reqed() (urllib.request.abstractdigestauthhandler method)": [[392, "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"]], "http_error_default() (urllib.request.basehandler method)": [[392, "urllib.request.BaseHandler.http_error_default"]], "http_open() (urllib.request.httphandler method)": [[392, "urllib.request.HTTPHandler.http_open"]], "http_response() (urllib.request.httperrorprocessor method)": [[392, "urllib.request.HTTPErrorProcessor.http_response"]], "https_open() (urllib.request.httpshandler method)": [[392, "urllib.request.HTTPSHandler.https_open"]], "https_response() (urllib.request.httperrorprocessor method)": [[392, "urllib.request.HTTPErrorProcessor.https_response"]], "info() (urllib.response.addinfourl method)": [[392, "urllib.response.addinfourl.info"]], "install_opener() (in module urllib.request)": [[392, "urllib.request.install_opener"]], "is_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[392, "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated"]], "method (urllib.request.request attribute)": [[392, "urllib.request.Request.method"]], "no_proxy": [[392, "index-3"]], "open() (urllib.request.openerdirector method)": [[392, "urllib.request.OpenerDirector.open"]], "open() (urllib.request.urlopener method)": [[392, "urllib.request.URLopener.open"]], "open_unknown() (urllib.request.urlopener method)": [[392, "urllib.request.URLopener.open_unknown"]], "origin_req_host (urllib.request.request attribute)": [[392, "urllib.request.Request.origin_req_host"]], "parent (urllib.request.basehandler attribute)": [[392, "urllib.request.BaseHandler.parent"]], "pathname2url() (in module urllib.request)": [[392, "urllib.request.pathname2url"]], "prompt_user_passwd() (urllib.request.fancyurlopener method)": [[392, "urllib.request.FancyURLopener.prompt_user_passwd"]], "redirect_request() (urllib.request.httpredirecthandler method)": [[392, "urllib.request.HTTPRedirectHandler.redirect_request"]], "remove_header() (urllib.request.request method)": [[392, "urllib.request.Request.remove_header"]], "retrieve() (urllib.request.urlopener method)": [[392, "urllib.request.URLopener.retrieve"]], "selector (urllib.request.request attribute)": [[392, "urllib.request.Request.selector"]], "setmaxconns() (urllib.request.cacheftphandler method)": [[392, "urllib.request.CacheFTPHandler.setMaxConns"]], "settimeout() (urllib.request.cacheftphandler method)": [[392, "urllib.request.CacheFTPHandler.setTimeout"]], "set_proxy() (urllib.request.request method)": [[392, "urllib.request.Request.set_proxy"]], "status (urllib.response.addinfourl attribute)": [[392, "urllib.response.addinfourl.status"]], "type (urllib.request.request attribute)": [[392, "urllib.request.Request.type"]], "unknown_open() (urllib.request.basehandler method)": [[392, "urllib.request.BaseHandler.unknown_open"]], "unknown_open() (urllib.request.unknownhandler method)": [[392, "urllib.request.UnknownHandler.unknown_open"]], "unverifiable (urllib.request.request attribute)": [[392, "urllib.request.Request.unverifiable"]], "update_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[392, "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated"]], "url (urllib.response.addinfourl attribute)": [[392, "urllib.response.addinfourl.url"]], "url2pathname() (in module urllib.request)": [[392, "urllib.request.url2pathname"]], "urlcleanup() (in module urllib.request)": [[392, "urllib.request.urlcleanup"]], "urllib.response": [[392, "module-urllib.response"]], "urlopen() (in module urllib.request)": [[392, "urllib.request.urlopen"]], "urlretrieve() (in module urllib.request)": [[392, "urllib.request.urlretrieve"]], "version (urllib.request.urlopener attribute)": [[392, "urllib.request.URLopener.version"]], "robotfileparser (class in urllib.robotparser)": [[393, "urllib.robotparser.RobotFileParser"]], "can_fetch() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.can_fetch"]], "crawl_delay() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.crawl_delay"]], "modified() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.modified"]], "mtime() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.mtime"]], "parse() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.parse"]], "read() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.read"]], "request_rate() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.request_rate"]], "robots.txt": [[393, "index-0"]], "set_url() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.set_url"]], "site_maps() (urllib.robotparser.robotfileparser method)": [[393, "urllib.robotparser.RobotFileParser.site_maps"]], "urllib.robotparser": [[393, "module-urllib.robotparser"]], "ellinghouse, lance": [[394, "index-1"]], "jansen, jack": [[394, "index-1"]], "pep 594#uu-and-the-uu-encoding": [[394, "index-0"]], "decode() (in module uu)": [[394, "uu.decode"]], "encode() (in module uu)": [[394, "uu.encode"]], "--name": [[395, "cmdoption-uuid-name"]], "--namespace": [[395, "cmdoption-uuid-namespace"]], "--uuid": [[395, "cmdoption-uuid-uuid"]], "namespace_dns (in module uuid)": [[395, "uuid.NAMESPACE_DNS"]], "namespace_oid (in module uuid)": [[395, "uuid.NAMESPACE_OID"]], "namespace_url (in module uuid)": [[395, "uuid.NAMESPACE_URL"]], "namespace_x500 (in module uuid)": [[395, "uuid.NAMESPACE_X500"]], "reserved_future (in module uuid)": [[395, "uuid.RESERVED_FUTURE"]], "reserved_microsoft (in module uuid)": [[395, "uuid.RESERVED_MICROSOFT"]], "reserved_ncs (in module uuid)": [[395, "uuid.RESERVED_NCS"]], "rfc_4122 (in module uuid)": [[395, "uuid.RFC_4122"]], "safeuuid (class in uuid)": [[395, "uuid.SafeUUID"]], "uuid (class in uuid)": [[395, "uuid.UUID"]], "bytes (uuid.uuid attribute)": [[395, "uuid.UUID.bytes"]], "bytes_le (uuid.uuid attribute)": [[395, "uuid.UUID.bytes_le"]], "clock_seq (uuid.uuid attribute)": [[395, "uuid.UUID.clock_seq"]], "clock_seq_hi_variant (uuid.uuid attribute)": [[395, "uuid.UUID.clock_seq_hi_variant"]], "clock_seq_low (uuid.uuid attribute)": [[395, "uuid.UUID.clock_seq_low"]], "fields (uuid.uuid attribute)": [[395, "uuid.UUID.fields"]], "getnode": [[395, "index-5"]], "getnode() (in module uuid)": [[395, "uuid.getnode"]], "hex (uuid.uuid attribute)": [[395, "uuid.UUID.hex"]], "int (uuid.uuid attribute)": [[395, "uuid.UUID.int"]], "is_safe (uuid.uuid attribute)": [[395, "uuid.UUID.is_safe"]], "node (uuid.uuid attribute)": [[395, "uuid.UUID.node"]], "safe (uuid.safeuuid attribute)": [[395, "uuid.SafeUUID.safe"]], "time (uuid.uuid attribute)": [[395, "uuid.UUID.time"]], "time_hi_version (uuid.uuid attribute)": [[395, "uuid.UUID.time_hi_version"]], "time_low (uuid.uuid attribute)": [[395, "uuid.UUID.time_low"]], "time_mid (uuid.uuid attribute)": [[395, "uuid.UUID.time_mid"]], "unknown (uuid.safeuuid attribute)": [[395, "uuid.SafeUUID.unknown"]], "unsafe (uuid.safeuuid attribute)": [[395, "uuid.SafeUUID.unsafe"]], "urn (uuid.uuid attribute)": [[395, "uuid.UUID.urn"]], "uuid": [[395, "module-uuid"]], "uuid command line option": [[395, "cmdoption-uuid-N"], [395, "cmdoption-uuid-h"], [395, "cmdoption-uuid-n"], [395, "cmdoption-uuid-name"], [395, "cmdoption-uuid-namespace"], [395, "cmdoption-uuid-u"], [395, "cmdoption-uuid-uuid"]], "uuid1": [[395, "index-6"]], "uuid1() (in module uuid)": [[395, "uuid.uuid1"]], "uuid3": [[395, "index-7"]], "uuid3() (in module uuid)": [[395, "uuid.uuid3"]], "uuid4": [[395, "index-8"]], "uuid4() (in module uuid)": [[395, "uuid.uuid4"]], "uuid5": [[395, "index-9"]], "uuid5() (in module uuid)": [[395, "uuid.uuid5"]], "variant (uuid.uuid attribute)": [[395, "uuid.UUID.variant"]], "version (uuid.uuid attribute)": [[395, "uuid.UUID.version"]], "envbuilder (class in venv)": [[396, "venv.EnvBuilder"]], "environments": [[396, "index-0"]], "pep 405": [[396, "index-1"], [473, "index-1"]], "create() (in module venv)": [[396, "venv.create"]], "create() (venv.envbuilder method)": [[396, "venv.EnvBuilder.create"]], "create_configuration() (venv.envbuilder method)": [[396, "venv.EnvBuilder.create_configuration"]], "ensure_directories() (venv.envbuilder method)": [[396, "venv.EnvBuilder.ensure_directories"]], "install_scripts() (venv.envbuilder method)": [[396, "venv.EnvBuilder.install_scripts"]], "post_setup() (venv.envbuilder method)": [[396, "venv.EnvBuilder.post_setup"]], "setup_python() (venv.envbuilder method)": [[396, "venv.EnvBuilder.setup_python"]], "setup_scripts() (venv.envbuilder method)": [[396, "venv.EnvBuilder.setup_scripts"]], "upgrade_dependencies() (venv.envbuilder method)": [[396, "venv.EnvBuilder.upgrade_dependencies"]], "venv": [[396, "module-venv"]], "virtual": [[396, "index-0"]], "catch_warnings (class in warnings)": [[397, "warnings.catch_warnings"]], "filterwarnings() (in module warnings)": [[397, "warnings.filterwarnings"]], "formatwarning() (in module warnings)": [[397, "warnings.formatwarning"]], "resetwarnings() (in module warnings)": [[397, "warnings.resetwarnings"]], "showwarning() (in module warnings)": [[397, "warnings.showwarning"]], "simplefilter() (in module warnings)": [[397, "warnings.simplefilter"]], "warn() (in module warnings)": [[397, "warnings.warn"]], "warn_explicit() (in module warnings)": [[397, "warnings.warn_explicit"]], "warnings": [[397, "index-0"], [397, "module-warnings"]], "wave_read (class in wave)": [[398, "wave.Wave_read"]], "wave_write (class in wave)": [[398, "wave.Wave_write"]], "close() (wave.wave_read method)": [[398, "wave.Wave_read.close"]], "close() (wave.wave_write method)": [[398, "wave.Wave_write.close"]], "getcompname() (wave.wave_read method)": [[398, "wave.Wave_read.getcompname"]], "getcomptype() (wave.wave_read method)": [[398, "wave.Wave_read.getcomptype"]], "getframerate() (wave.wave_read method)": [[398, "wave.Wave_read.getframerate"]], "getmark() (wave.wave_read method)": [[398, "wave.Wave_read.getmark"]], "getmarkers() (wave.wave_read method)": [[398, "wave.Wave_read.getmarkers"]], "getnchannels() (wave.wave_read method)": [[398, "wave.Wave_read.getnchannels"]], "getnframes() (wave.wave_read method)": [[398, "wave.Wave_read.getnframes"]], "getparams() (wave.wave_read method)": [[398, "wave.Wave_read.getparams"]], "getsampwidth() (wave.wave_read method)": [[398, "wave.Wave_read.getsampwidth"]], "open() (in module wave)": [[398, "wave.open"]], "readframes() (wave.wave_read method)": [[398, "wave.Wave_read.readframes"]], "rewind() (wave.wave_read method)": [[398, "wave.Wave_read.rewind"]], "setcomptype() (wave.wave_write method)": [[398, "wave.Wave_write.setcomptype"]], "setframerate() (wave.wave_write method)": [[398, "wave.Wave_write.setframerate"]], "setnchannels() (wave.wave_write method)": [[398, "wave.Wave_write.setnchannels"]], "setnframes() (wave.wave_write method)": [[398, "wave.Wave_write.setnframes"]], "setparams() (wave.wave_write method)": [[398, "wave.Wave_write.setparams"]], "setpos() (wave.wave_read method)": [[398, "wave.Wave_read.setpos"]], "setsampwidth() (wave.wave_write method)": [[398, "wave.Wave_write.setsampwidth"]], "tell() (wave.wave_read method)": [[398, "wave.Wave_read.tell"]], "tell() (wave.wave_write method)": [[398, "wave.Wave_write.tell"]], "wave": [[398, "module-wave"]], "writeframes() (wave.wave_write method)": [[398, "wave.Wave_write.writeframes"]], "writeframesraw() (wave.wave_write method)": [[398, "wave.Wave_write.writeframesraw"]], "callableproxytype (in module weakref)": [[399, "weakref.CallableProxyType"]], "pep 205": [[399, "index-2"], [460, "index-9"]], "proxytype (in module weakref)": [[399, "weakref.ProxyType"]], "proxytypes (in module weakref)": [[399, "weakref.ProxyTypes"]], "referencetype (in module weakref)": [[399, "weakref.ReferenceType"]], "weakkeydictionary (class in weakref)": [[399, "weakref.WeakKeyDictionary"]], "weakmethod (class in weakref)": [[399, "weakref.WeakMethod"]], "weakset (class in weakref)": [[399, "weakref.WeakSet"]], "weakvaluedictionary (class in weakref)": [[399, "weakref.WeakValueDictionary"]], "__call__() (weakref.finalize method)": [[399, "weakref.finalize.__call__"]], "__callback__ (weakref.ref attribute)": [[399, "weakref.ref.__callback__"]], "alive (weakref.finalize attribute)": [[399, "weakref.finalize.alive"]], "atexit (weakref.finalize attribute)": [[399, "weakref.finalize.atexit"]], "detach() (weakref.finalize method)": [[399, "weakref.finalize.detach"]], "finalize (class in weakref)": [[399, "weakref.finalize"]], "getweakrefcount() (in module weakref)": [[399, "weakref.getweakrefcount"]], "getweakrefs() (in module weakref)": [[399, "weakref.getweakrefs"]], "keyrefs() (weakref.weakkeydictionary method)": [[399, "weakref.WeakKeyDictionary.keyrefs"]], "peek() (weakref.finalize method)": [[399, "weakref.finalize.peek"]], "proxy() (in module weakref)": [[399, "weakref.proxy"]], "ref (class in weakref)": [[399, "weakref.ref"]], "valuerefs() (weakref.weakvaluedictionary method)": [[399, "weakref.WeakValueDictionary.valuerefs"]], "weakref": [[399, "module-weakref"]], "browser": [[400, "index-0"], [400, "index-1"]], "kdedir": [[400, "index-2"]], "get() (in module webbrowser)": [[400, "webbrowser.get"]], "name (in module webbrowser)": [[400, "webbrowser.name"]], "open() (in module webbrowser)": [[400, "webbrowser.open"]], "open() (webbrowser.controller method)": [[400, "webbrowser.controller.open"]], "open_new() (in module webbrowser)": [[400, "webbrowser.open_new"]], "open_new() (webbrowser.controller method)": [[400, "webbrowser.controller.open_new"]], "open_new_tab() (in module webbrowser)": [[400, "webbrowser.open_new_tab"]], "open_new_tab() (webbrowser.controller method)": [[400, "webbrowser.controller.open_new_tab"]], "register() (in module webbrowser)": [[400, "webbrowser.register"]], "webbrowser": [[400, "module-webbrowser"]], "close() (winreg.pyhkey method)": [[402, "winreg.PyHKEY.Close"]], "closekey() (in module winreg)": [[402, "winreg.CloseKey"]], "connectregistry() (in module winreg)": [[402, "winreg.ConnectRegistry"]], "createkey() (in module winreg)": [[402, "winreg.CreateKey"]], "createkeyex() (in module winreg)": [[402, "winreg.CreateKeyEx"]], "deletekey() (in module winreg)": [[402, "winreg.DeleteKey"]], "deletekeyex() (in module winreg)": [[402, "winreg.DeleteKeyEx"]], "deletevalue() (in module winreg)": [[402, "winreg.DeleteValue"]], "detach() (winreg.pyhkey method)": [[402, "winreg.PyHKEY.Detach"]], "disablereflectionkey() (in module winreg)": [[402, "winreg.DisableReflectionKey"]], "enablereflectionkey() (in module winreg)": [[402, "winreg.EnableReflectionKey"]], "enumkey() (in module winreg)": [[402, "winreg.EnumKey"]], "enumvalue() (in module winreg)": [[402, "winreg.EnumValue"]], "expandenvironmentstrings() (in module winreg)": [[402, "winreg.ExpandEnvironmentStrings"]], "flushkey() (in module winreg)": [[402, "winreg.FlushKey"]], "hkey_classes_root (in module winreg)": [[402, "winreg.HKEY_CLASSES_ROOT"]], "hkey_current_config (in module winreg)": [[402, "winreg.HKEY_CURRENT_CONFIG"]], "hkey_current_user (in module winreg)": [[402, "winreg.HKEY_CURRENT_USER"]], "hkey_dyn_data (in module winreg)": [[402, "winreg.HKEY_DYN_DATA"]], "hkey_local_machine (in module winreg)": [[402, "winreg.HKEY_LOCAL_MACHINE"]], "hkey_performance_data (in module winreg)": [[402, "winreg.HKEY_PERFORMANCE_DATA"]], "hkey_users (in module winreg)": [[402, "winreg.HKEY_USERS"]], "key_all_access (in module winreg)": [[402, "winreg.KEY_ALL_ACCESS"]], "key_create_link (in module winreg)": [[402, "winreg.KEY_CREATE_LINK"]], "key_create_sub_key (in module winreg)": [[402, "winreg.KEY_CREATE_SUB_KEY"]], "key_enumerate_sub_keys (in module winreg)": [[402, "winreg.KEY_ENUMERATE_SUB_KEYS"]], "key_execute (in module winreg)": [[402, "winreg.KEY_EXECUTE"]], "key_notify (in module winreg)": [[402, "winreg.KEY_NOTIFY"]], "key_query_value (in module winreg)": [[402, "winreg.KEY_QUERY_VALUE"]], "key_read (in module winreg)": [[402, "winreg.KEY_READ"]], "key_set_value (in module winreg)": [[402, "winreg.KEY_SET_VALUE"]], "key_wow64_32key (in module winreg)": [[402, "winreg.KEY_WOW64_32KEY"]], "key_wow64_64key (in module winreg)": [[402, "winreg.KEY_WOW64_64KEY"]], "key_write (in module winreg)": [[402, "winreg.KEY_WRITE"]], "loadkey() (in module winreg)": [[402, "winreg.LoadKey"]], "openkey() (in module winreg)": [[402, "winreg.OpenKey"]], "openkeyex() (in module winreg)": [[402, "winreg.OpenKeyEx"]], "queryinfokey() (in module winreg)": [[402, "winreg.QueryInfoKey"]], "queryreflectionkey() (in module winreg)": [[402, "winreg.QueryReflectionKey"]], "queryvalue() (in module winreg)": [[402, "winreg.QueryValue"]], "queryvalueex() (in module winreg)": [[402, "winreg.QueryValueEx"]], "reg_binary (in module winreg)": [[402, "winreg.REG_BINARY"]], "reg_dword (in module winreg)": [[402, "winreg.REG_DWORD"]], "reg_dword_big_endian (in module winreg)": [[402, "winreg.REG_DWORD_BIG_ENDIAN"]], "reg_dword_little_endian (in module winreg)": [[402, "winreg.REG_DWORD_LITTLE_ENDIAN"]], "reg_expand_sz (in module winreg)": [[402, "winreg.REG_EXPAND_SZ"]], "reg_full_resource_descriptor (in module winreg)": [[402, "winreg.REG_FULL_RESOURCE_DESCRIPTOR"]], "reg_link (in module winreg)": [[402, "winreg.REG_LINK"]], "reg_multi_sz (in module winreg)": [[402, "winreg.REG_MULTI_SZ"]], "reg_none (in module winreg)": [[402, "winreg.REG_NONE"]], "reg_qword (in module winreg)": [[402, "winreg.REG_QWORD"]], "reg_qword_little_endian (in module winreg)": [[402, "winreg.REG_QWORD_LITTLE_ENDIAN"]], "reg_resource_list (in module winreg)": [[402, "winreg.REG_RESOURCE_LIST"]], "reg_resource_requirements_list (in module winreg)": [[402, "winreg.REG_RESOURCE_REQUIREMENTS_LIST"]], "reg_sz (in module winreg)": [[402, "winreg.REG_SZ"]], "savekey() (in module winreg)": [[402, "winreg.SaveKey"]], "setvalue() (in module winreg)": [[402, "winreg.SetValue"]], "setvalueex() (in module winreg)": [[402, "winreg.SetValueEx"]], "__enter__() (winreg.pyhkey method)": [[402, "winreg.PyHKEY.__enter__"]], "__exit__() (winreg.pyhkey method)": [[402, "winreg.PyHKEY.__exit__"]], "winreg": [[402, "module-winreg"]], "beep() (in module winsound)": [[403, "winsound.Beep"]], "mb_iconasterisk (in module winsound)": [[403, "winsound.MB_ICONASTERISK"]], "mb_iconexclamation (in module winsound)": [[403, "winsound.MB_ICONEXCLAMATION"]], "mb_iconhand (in module winsound)": [[403, "winsound.MB_ICONHAND"]], "mb_iconquestion (in module winsound)": [[403, "winsound.MB_ICONQUESTION"]], "mb_ok (in module winsound)": [[403, "winsound.MB_OK"]], "messagebeep() (in module winsound)": [[403, "winsound.MessageBeep"]], "playsound() (in module winsound)": [[403, "winsound.PlaySound"]], "snd_alias (in module winsound)": [[403, "winsound.SND_ALIAS"]], "snd_async (in module winsound)": [[403, "winsound.SND_ASYNC"]], "snd_filename (in module winsound)": [[403, "winsound.SND_FILENAME"]], "snd_loop (in module winsound)": [[403, "winsound.SND_LOOP"]], "snd_memory (in module winsound)": [[403, "winsound.SND_MEMORY"]], "snd_nodefault (in module winsound)": [[403, "winsound.SND_NODEFAULT"]], "snd_nostop (in module winsound)": [[403, "winsound.SND_NOSTOP"]], "snd_nowait (in module winsound)": [[403, "winsound.SND_NOWAIT"]], "snd_purge (in module winsound)": [[403, "winsound.SND_PURGE"]], "winsound": [[403, "module-winsound"]], "basecgihandler (class in wsgiref.handlers)": [[404, "wsgiref.handlers.BaseCGIHandler"]], "basehandler (class in wsgiref.handlers)": [[404, "wsgiref.handlers.BaseHandler"]], "cgihandler (class in wsgiref.handlers)": [[404, "wsgiref.handlers.CGIHandler"]], "errorstream (class in wsgiref.types)": [[404, "wsgiref.types.ErrorStream"]], "filewrapper (class in wsgiref.types)": [[404, "wsgiref.types.FileWrapper"]], "filewrapper (class in wsgiref.util)": [[404, "wsgiref.util.FileWrapper"]], "headers (class in wsgiref.headers)": [[404, "wsgiref.headers.Headers"]], "iiscgihandler (class in wsgiref.handlers)": [[404, "wsgiref.handlers.IISCGIHandler"]], "inputstream (class in wsgiref.types)": [[404, "wsgiref.types.InputStream"]], "pep 3333": [[404, "index-0"], [404, "index-1"], [404, "index-11"], [404, "index-12"], [404, "index-13"], [404, "index-14"], [404, "index-15"], [404, "index-16"], [404, "index-17"], [404, "index-18"], [404, "index-2"], [404, "index-3"], [404, "index-4"], [404, "index-6"], [404, "index-7"], [404, "index-8"], [404, "index-9"], [470, "index-25"], [472, "index-9"]], "simplehandler (class in wsgiref.handlers)": [[404, "wsgiref.handlers.SimpleHandler"]], "startresponse (class in wsgiref.types)": [[404, "wsgiref.types.StartResponse"]], "wsgiapplication (in module wsgiref.types)": [[404, "wsgiref.types.WSGIApplication"]], "wsgienvironment (in module wsgiref.types)": [[404, "wsgiref.types.WSGIEnvironment"]], "wsgirequesthandler (class in wsgiref.simple_server)": [[404, "wsgiref.simple_server.WSGIRequestHandler"]], "wsgiserver (class in wsgiref.simple_server)": [[404, "wsgiref.simple_server.WSGIServer"]], "_flush() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler._flush"]], "_write() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler._write"]], "add_cgi_vars() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.add_cgi_vars"]], "add_header() (wsgiref.headers.headers method)": [[404, "wsgiref.headers.Headers.add_header"]], "application_uri() (in module wsgiref.util)": [[404, "wsgiref.util.application_uri"]], "demo_app() (in module wsgiref.simple_server)": [[404, "wsgiref.simple_server.demo_app"]], "error_body (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.error_body"]], "error_headers (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.error_headers"]], "error_output() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.error_output"]], "error_status (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.error_status"]], "get_all() (wsgiref.headers.headers method)": [[404, "wsgiref.headers.Headers.get_all"]], "get_app() (wsgiref.simple_server.wsgiserver method)": [[404, "wsgiref.simple_server.WSGIServer.get_app"]], "get_environ() (wsgiref.simple_server.wsgirequesthandler method)": [[404, "wsgiref.simple_server.WSGIRequestHandler.get_environ"]], "get_scheme() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.get_scheme"]], "get_stderr() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.get_stderr"]], "get_stderr() (wsgiref.simple_server.wsgirequesthandler method)": [[404, "wsgiref.simple_server.WSGIRequestHandler.get_stderr"]], "get_stdin() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.get_stdin"]], "guess_scheme() (in module wsgiref.util)": [[404, "wsgiref.util.guess_scheme"]], "handle() (wsgiref.simple_server.wsgirequesthandler method)": [[404, "wsgiref.simple_server.WSGIRequestHandler.handle"]], "http_version (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.http_version"]], "is_hop_by_hop() (in module wsgiref.util)": [[404, "wsgiref.util.is_hop_by_hop"]], "log_exception() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.log_exception"]], "make_server() (in module wsgiref.simple_server)": [[404, "wsgiref.simple_server.make_server"]], "origin_server (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.origin_server"]], "os_environ (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.os_environ"]], "read_environ() (in module wsgiref.handlers)": [[404, "wsgiref.handlers.read_environ"]], "request_uri() (in module wsgiref.util)": [[404, "wsgiref.util.request_uri"]], "run() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.run"]], "sendfile() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.sendfile"]], "server_software (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.server_software"]], "set_app() (wsgiref.simple_server.wsgiserver method)": [[404, "wsgiref.simple_server.WSGIServer.set_app"]], "setup_environ() (wsgiref.handlers.basehandler method)": [[404, "wsgiref.handlers.BaseHandler.setup_environ"]], "setup_testing_defaults() (in module wsgiref.util)": [[404, "wsgiref.util.setup_testing_defaults"]], "shift_path_info() (in module wsgiref.util)": [[404, "wsgiref.util.shift_path_info"]], "traceback_limit (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.traceback_limit"]], "validator() (in module wsgiref.validate)": [[404, "wsgiref.validate.validator"]], "wsgi_file_wrapper (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.wsgi_file_wrapper"]], "wsgi_multiprocess (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.wsgi_multiprocess"]], "wsgi_multithread (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.wsgi_multithread"]], "wsgi_run_once (wsgiref.handlers.basehandler attribute)": [[404, "wsgiref.handlers.BaseHandler.wsgi_run_once"]], "wsgiref": [[404, "module-wsgiref"]], "wsgiref.handlers": [[404, "module-wsgiref.handlers"]], "wsgiref.headers": [[404, "module-wsgiref.headers"]], "wsgiref.simple_server": [[404, "module-wsgiref.simple_server"]], "wsgiref.types": [[404, "module-wsgiref.types"]], "wsgiref.util": [[404, "module-wsgiref.util"]], "wsgiref.validate": [[404, "module-wsgiref.validate"]], "conversionerror": [[405, "xdrlib.ConversionError"]], "pep 594#xdrlib": [[405, "index-1"]], "packer (class in xdrlib)": [[405, "xdrlib.Packer"]], "rfc 1014": [[405, "index-2"], [405, "index-3"]], "rfc 1832": [[405, "index-4"], [405, "index-5"]], "unpacker (class in xdrlib)": [[405, "xdrlib.Unpacker"]], "xdr": [[405, "index-0"]], "done() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.done"]], "get_buffer() (xdrlib.packer method)": [[405, "xdrlib.Packer.get_buffer"]], "get_buffer() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.get_buffer"]], "get_position() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.get_position"]], "pack_array() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_array"]], "pack_bytes() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_bytes"]], "pack_double() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_double"]], "pack_farray() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_farray"]], "pack_float() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_float"]], "pack_fopaque() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_fopaque"]], "pack_fstring() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_fstring"]], "pack_list() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_list"]], "pack_opaque() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_opaque"]], "pack_string() (xdrlib.packer method)": [[405, "xdrlib.Packer.pack_string"]], "reset() (xdrlib.packer method)": [[405, "xdrlib.Packer.reset"]], "reset() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.reset"]], "set_position() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.set_position"]], "unpack_array() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_array"]], "unpack_bytes() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_bytes"]], "unpack_double() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_double"]], "unpack_farray() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_farray"]], "unpack_float() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_float"]], "unpack_fopaque() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_fopaque"]], "unpack_fstring() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_fstring"]], "unpack_list() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_list"]], "unpack_opaque() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_opaque"]], "unpack_string() (xdrlib.unpacker method)": [[405, "xdrlib.Unpacker.unpack_string"]], "xdrlib": [[405, "module-xdrlib"]], "xml": [[406, "module-xml"]], "domexception": [[407, "xml.dom.DOMException"]], "domstringsizeerr": [[407, "xml.dom.DomstringSizeErr"]], "empty_namespace (in module xml.dom)": [[407, "xml.dom.EMPTY_NAMESPACE"]], "hierarchyrequesterr": [[407, "xml.dom.HierarchyRequestErr"]], "indexsizeerr": [[407, "xml.dom.IndexSizeErr"]], "inuseattributeerr": [[407, "xml.dom.InuseAttributeErr"]], "invalidaccesserr": [[407, "xml.dom.InvalidAccessErr"]], "invalidcharactererr": [[407, "xml.dom.InvalidCharacterErr"]], "invalidmodificationerr": [[407, "xml.dom.InvalidModificationErr"]], "invalidstateerr": [[407, "xml.dom.InvalidStateErr"]], "namespaceerr": [[407, "xml.dom.NamespaceErr"]], "nodataallowederr": [[407, "xml.dom.NoDataAllowedErr"]], "nomodificationallowederr": [[407, "xml.dom.NoModificationAllowedErr"]], "notfounderr": [[407, "xml.dom.NotFoundErr"]], "notsupportederr": [[407, "xml.dom.NotSupportedErr"]], "python_dom": [[407, "index-0"]], "syntaxerr": [[407, "xml.dom.SyntaxErr"]], "wrongdocumenterr": [[407, "xml.dom.WrongDocumentErr"]], "xhtml_namespace (in module xml.dom)": [[407, "xml.dom.XHTML_NAMESPACE"]], "xmlns_namespace (in module xml.dom)": [[407, "xml.dom.XMLNS_NAMESPACE"]], "xml_namespace (in module xml.dom)": [[407, "xml.dom.XML_NAMESPACE"]], "appendchild() (xml.dom.node method)": [[407, "xml.dom.Node.appendChild"]], "attributes (xml.dom.node attribute)": [[407, "xml.dom.Node.attributes"]], "childnodes (xml.dom.node attribute)": [[407, "xml.dom.Node.childNodes"]], "clonenode() (xml.dom.node method)": [[407, "xml.dom.Node.cloneNode"]], "createattribute() (xml.dom.document method)": [[407, "xml.dom.Document.createAttribute"]], "createattributens() (xml.dom.document method)": [[407, "xml.dom.Document.createAttributeNS"]], "createcomment() (xml.dom.document method)": [[407, "xml.dom.Document.createComment"]], "createdocument() (xml.dom.domimplementation method)": [[407, "xml.dom.DOMImplementation.createDocument"]], "createdocumenttype() (xml.dom.domimplementation method)": [[407, "xml.dom.DOMImplementation.createDocumentType"]], "createelement() (xml.dom.document method)": [[407, "xml.dom.Document.createElement"]], "createelementns() (xml.dom.document method)": [[407, "xml.dom.Document.createElementNS"]], "createprocessinginstruction() (xml.dom.document method)": [[407, "xml.dom.Document.createProcessingInstruction"]], "createtextnode() (xml.dom.document method)": [[407, "xml.dom.Document.createTextNode"]], "data (xml.dom.comment attribute)": [[407, "xml.dom.Comment.data"]], "data (xml.dom.processinginstruction attribute)": [[407, "xml.dom.ProcessingInstruction.data"]], "data (xml.dom.text attribute)": [[407, "xml.dom.Text.data"]], "documentelement (xml.dom.document attribute)": [[407, "xml.dom.Document.documentElement"]], "entities (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.entities"]], "firstchild (xml.dom.node attribute)": [[407, "xml.dom.Node.firstChild"]], "getattribute() (xml.dom.element method)": [[407, "xml.dom.Element.getAttribute"]], "getattributens() (xml.dom.element method)": [[407, "xml.dom.Element.getAttributeNS"]], "getattributenode() (xml.dom.element method)": [[407, "xml.dom.Element.getAttributeNode"]], "getattributenodens() (xml.dom.element method)": [[407, "xml.dom.Element.getAttributeNodeNS"]], "getdomimplementation() (in module xml.dom)": [[407, "xml.dom.getDOMImplementation"]], "getelementsbytagname() (xml.dom.document method)": [[407, "xml.dom.Document.getElementsByTagName"]], "getelementsbytagname() (xml.dom.element method)": [[407, "xml.dom.Element.getElementsByTagName"]], "getelementsbytagnamens() (xml.dom.document method)": [[407, "xml.dom.Document.getElementsByTagNameNS"]], "getelementsbytagnamens() (xml.dom.element method)": [[407, "xml.dom.Element.getElementsByTagNameNS"]], "hasattribute() (xml.dom.element method)": [[407, "xml.dom.Element.hasAttribute"]], "hasattributens() (xml.dom.element method)": [[407, "xml.dom.Element.hasAttributeNS"]], "hasattributes() (xml.dom.node method)": [[407, "xml.dom.Node.hasAttributes"]], "haschildnodes() (xml.dom.node method)": [[407, "xml.dom.Node.hasChildNodes"]], "hasfeature() (xml.dom.domimplementation method)": [[407, "xml.dom.DOMImplementation.hasFeature"]], "insertbefore() (xml.dom.node method)": [[407, "xml.dom.Node.insertBefore"]], "internalsubset (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.internalSubset"]], "issamenode() (xml.dom.node method)": [[407, "xml.dom.Node.isSameNode"]], "item() (xml.dom.namednodemap method)": [[407, "xml.dom.NamedNodeMap.item"]], "item() (xml.dom.nodelist method)": [[407, "xml.dom.NodeList.item"]], "lastchild (xml.dom.node attribute)": [[407, "xml.dom.Node.lastChild"]], "length (xml.dom.namednodemap attribute)": [[407, "xml.dom.NamedNodeMap.length"]], "length (xml.dom.nodelist attribute)": [[407, "xml.dom.NodeList.length"]], "localname (xml.dom.attr attribute)": [[407, "xml.dom.Attr.localName"]], "localname (xml.dom.node attribute)": [[407, "xml.dom.Node.localName"]], "name (xml.dom.attr attribute)": [[407, "xml.dom.Attr.name"]], "name (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.name"]], "namespaceuri (xml.dom.node attribute)": [[407, "xml.dom.Node.namespaceURI"]], "nextsibling (xml.dom.node attribute)": [[407, "xml.dom.Node.nextSibling"]], "nodename (xml.dom.node attribute)": [[407, "xml.dom.Node.nodeName"]], "nodetype (xml.dom.node attribute)": [[407, "xml.dom.Node.nodeType"]], "nodevalue (xml.dom.node attribute)": [[407, "xml.dom.Node.nodeValue"]], "normalize() (xml.dom.node method)": [[407, "xml.dom.Node.normalize"]], "notations (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.notations"]], "parentnode (xml.dom.node attribute)": [[407, "xml.dom.Node.parentNode"]], "prefix (xml.dom.attr attribute)": [[407, "xml.dom.Attr.prefix"]], "prefix (xml.dom.node attribute)": [[407, "xml.dom.Node.prefix"]], "previoussibling (xml.dom.node attribute)": [[407, "xml.dom.Node.previousSibling"]], "publicid (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.publicId"]], "registerdomimplementation() (in module xml.dom)": [[407, "xml.dom.registerDOMImplementation"]], "removeattribute() (xml.dom.element method)": [[407, "xml.dom.Element.removeAttribute"]], "removeattributens() (xml.dom.element method)": [[407, "xml.dom.Element.removeAttributeNS"]], "removeattributenode() (xml.dom.element method)": [[407, "xml.dom.Element.removeAttributeNode"]], "removechild() (xml.dom.node method)": [[407, "xml.dom.Node.removeChild"]], "replacechild() (xml.dom.node method)": [[407, "xml.dom.Node.replaceChild"]], "setattribute() (xml.dom.element method)": [[407, "xml.dom.Element.setAttribute"]], "setattributens() (xml.dom.element method)": [[407, "xml.dom.Element.setAttributeNS"]], "setattributenode() (xml.dom.element method)": [[407, "xml.dom.Element.setAttributeNode"]], "setattributenodens() (xml.dom.element method)": [[407, "xml.dom.Element.setAttributeNodeNS"]], "systemid (xml.dom.documenttype attribute)": [[407, "xml.dom.DocumentType.systemId"]], "tagname (xml.dom.element attribute)": [[407, "xml.dom.Element.tagName"]], "target (xml.dom.processinginstruction attribute)": [[407, "xml.dom.ProcessingInstruction.target"]], "value (xml.dom.attr attribute)": [[407, "xml.dom.Attr.value"]], "xml.dom": [[407, "module-xml.dom"]], "parse() (in module xml.dom.minidom)": [[408, "xml.dom.minidom.parse"]], "parsestring() (in module xml.dom.minidom)": [[408, "xml.dom.minidom.parseString"]], "toprettyxml() (xml.dom.minidom.node method)": [[408, "xml.dom.minidom.Node.toprettyxml"]], "toxml() (xml.dom.minidom.node method)": [[408, "xml.dom.minidom.Node.toxml"]], "unlink() (xml.dom.minidom.node method)": [[408, "xml.dom.minidom.Node.unlink"]], "writexml() (xml.dom.minidom.node method)": [[408, "xml.dom.minidom.Node.writexml"]], "xml.dom.minidom": [[408, "module-xml.dom.minidom"]], "domeventstream (class in xml.dom.pulldom)": [[409, "xml.dom.pulldom.DOMEventStream"]], "pulldom (class in xml.dom.pulldom)": [[409, "xml.dom.pulldom.PullDom"]], "sax2dom (class in xml.dom.pulldom)": [[409, "xml.dom.pulldom.SAX2DOM"]], "default_bufsize (in module xml.dom.pulldom)": [[409, "xml.dom.pulldom.default_bufsize"]], "expandnode() (xml.dom.pulldom.domeventstream method)": [[409, "xml.dom.pulldom.DOMEventStream.expandNode"]], "getevent() (xml.dom.pulldom.domeventstream method)": [[409, "xml.dom.pulldom.DOMEventStream.getEvent"]], "parse() (in module xml.dom.pulldom)": [[409, "xml.dom.pulldom.parse"]], "parsestring() (in module xml.dom.pulldom)": [[409, "xml.dom.pulldom.parseString"]], "reset() (xml.dom.pulldom.domeventstream method)": [[409, "xml.dom.pulldom.DOMEventStream.reset"]], "xml.dom.pulldom": [[409, "module-xml.dom.pulldom"]], "c14nwritertarget (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.C14NWriterTarget"]], "comment() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.Comment"]], "element (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.Element"]], "elementtree (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.ElementTree"]], "parseerror (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.ParseError"]], "processinginstruction() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.ProcessingInstruction"]], "qname (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.QName"]], "subelement() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.SubElement"]], "treebuilder (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.TreeBuilder"]], "xml() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.XML"]], "xmlid() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.XMLID"]], "xmlparser (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.XMLParser"]], "xmlpullparser (class in xml.etree.elementtree)": [[410, "xml.etree.ElementTree.XMLPullParser"]], "_setroot() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree._setroot"]], "append() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.append"]], "attrib (xml.etree.elementtree.element attribute)": [[410, "xml.etree.ElementTree.Element.attrib"]], "canonicalize() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.canonicalize"]], "clear() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.clear"]], "close() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.close"]], "close() (xml.etree.elementtree.xmlparser method)": [[410, "xml.etree.ElementTree.XMLParser.close"]], "close() (xml.etree.elementtree.xmlpullparser method)": [[410, "xml.etree.ElementTree.XMLPullParser.close"]], "code (xml.etree.elementtree.parseerror attribute)": [[410, "xml.etree.ElementTree.ParseError.code"]], "comment() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.comment"]], "data() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.data"]], "doctype() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.doctype"]], "dump() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.dump"]], "end() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.end"]], "end_ns() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.end_ns"]], "extend() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.extend"]], "feed() (xml.etree.elementtree.xmlparser method)": [[410, "xml.etree.ElementTree.XMLParser.feed"]], "feed() (xml.etree.elementtree.xmlpullparser method)": [[410, "xml.etree.ElementTree.XMLPullParser.feed"]], "find() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.find"]], "find() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.find"]], "findall() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.findall"]], "findall() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.findall"]], "findtext() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.findtext"]], "findtext() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.findtext"]], "fromstring() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.fromstring"]], "fromstringlist() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.fromstringlist"]], "get() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.get"]], "getroot() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.getroot"]], "indent() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.indent"]], "insert() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.insert"]], "iselement() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.iselement"]], "items() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.items"]], "iter() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.iter"]], "iter() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.iter"]], "iterfind() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.iterfind"]], "iterfind() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.iterfind"]], "iterparse() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.iterparse"]], "itertext() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.itertext"]], "keys() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.keys"]], "makeelement() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.makeelement"]], "parse() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.parse"]], "parse() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.parse"]], "pi() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.pi"]], "position (xml.etree.elementtree.parseerror attribute)": [[410, "xml.etree.ElementTree.ParseError.position"]], "read_events() (xml.etree.elementtree.xmlpullparser method)": [[410, "xml.etree.ElementTree.XMLPullParser.read_events"]], "register_namespace() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.register_namespace"]], "remove() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.remove"]], "set() (xml.etree.elementtree.element method)": [[410, "xml.etree.ElementTree.Element.set"]], "start() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.start"]], "start_ns() (xml.etree.elementtree.treebuilder method)": [[410, "xml.etree.ElementTree.TreeBuilder.start_ns"]], "tag (xml.etree.elementtree.element attribute)": [[410, "xml.etree.ElementTree.Element.tag"]], "tail (xml.etree.elementtree.element attribute)": [[410, "xml.etree.ElementTree.Element.tail"]], "text (xml.etree.elementtree.element attribute)": [[410, "xml.etree.ElementTree.Element.text"]], "tostring() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.tostring"]], "tostringlist() (in module xml.etree.elementtree)": [[410, "xml.etree.ElementTree.tostringlist"]], "write() (xml.etree.elementtree.elementtree method)": [[410, "xml.etree.ElementTree.ElementTree.write"]], "xml.etree.elementinclude": [[410, "module-xml.etree.ElementInclude"]], "xml.etree.elementinclude.default_loader()": [[410, "xml.etree.ElementInclude.default_loader"]], "xml.etree.elementinclude.include()": [[410, "xml.etree.ElementInclude.include"]], "xml.etree.elementtree": [[410, "module-xml.etree.ElementTree"]], "saxexception": [[411, "xml.sax.SAXException"]], "saxnotrecognizedexception": [[411, "xml.sax.SAXNotRecognizedException"]], "saxnotsupportedexception": [[411, "xml.sax.SAXNotSupportedException"]], "saxparseexception": [[411, "xml.sax.SAXParseException"]], "getexception() (xml.sax.saxexception method)": [[411, "xml.sax.SAXException.getException"]], "getmessage() (xml.sax.saxexception method)": [[411, "xml.sax.SAXException.getMessage"]], "make_parser() (in module xml.sax)": [[411, "xml.sax.make_parser"]], "parse() (in module xml.sax)": [[411, "xml.sax.parse"]], "parsestring() (in module xml.sax)": [[411, "xml.sax.parseString"]], "xml.sax": [[411, "module-xml.sax"]], "contenthandler (class in xml.sax.handler)": [[412, "xml.sax.handler.ContentHandler"]], "dtdhandler (class in xml.sax.handler)": [[412, "xml.sax.handler.DTDHandler"]], "entityresolver (class in xml.sax.handler)": [[412, "xml.sax.handler.EntityResolver"]], "errorhandler (class in xml.sax.handler)": [[412, "xml.sax.handler.ErrorHandler"]], "lexicalhandler (class in xml.sax.handler)": [[412, "xml.sax.handler.LexicalHandler"]], "all_features (in module xml.sax.handler)": [[412, "xml.sax.handler.all_features"]], "all_properties (in module xml.sax.handler)": [[412, "xml.sax.handler.all_properties"]], "characters() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.characters"]], "comment() (xml.sax.handler.lexicalhandler method)": [[412, "xml.sax.handler.LexicalHandler.comment"]], "endcdata() (xml.sax.handler.lexicalhandler method)": [[412, "xml.sax.handler.LexicalHandler.endCDATA"]], "enddtd() (xml.sax.handler.lexicalhandler method)": [[412, "xml.sax.handler.LexicalHandler.endDTD"]], "enddocument() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.endDocument"]], "endelement() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.endElement"]], "endelementns() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.endElementNS"]], "endprefixmapping() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.endPrefixMapping"]], "error() (xml.sax.handler.errorhandler method)": [[412, "xml.sax.handler.ErrorHandler.error"]], "fatalerror() (xml.sax.handler.errorhandler method)": [[412, "xml.sax.handler.ErrorHandler.fatalError"]], "feature_external_ges (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_external_ges"]], "feature_external_pes (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_external_pes"]], "feature_namespace_prefixes (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_namespace_prefixes"]], "feature_namespaces (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_namespaces"]], "feature_string_interning (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_string_interning"]], "feature_validation (in module xml.sax.handler)": [[412, "xml.sax.handler.feature_validation"]], "ignorablewhitespace() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.ignorableWhitespace"]], "notationdecl() (xml.sax.handler.dtdhandler method)": [[412, "xml.sax.handler.DTDHandler.notationDecl"]], "processinginstruction() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.processingInstruction"]], "property_declaration_handler (in module xml.sax.handler)": [[412, "xml.sax.handler.property_declaration_handler"]], "property_dom_node (in module xml.sax.handler)": [[412, "xml.sax.handler.property_dom_node"]], "property_lexical_handler (in module xml.sax.handler)": [[412, "xml.sax.handler.property_lexical_handler"]], "property_xml_string (in module xml.sax.handler)": [[412, "xml.sax.handler.property_xml_string"]], "resolveentity() (xml.sax.handler.entityresolver method)": [[412, "xml.sax.handler.EntityResolver.resolveEntity"]], "setdocumentlocator() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.setDocumentLocator"]], "skippedentity() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.skippedEntity"]], "startcdata() (xml.sax.handler.lexicalhandler method)": [[412, "xml.sax.handler.LexicalHandler.startCDATA"]], "startdtd() (xml.sax.handler.lexicalhandler method)": [[412, "xml.sax.handler.LexicalHandler.startDTD"]], "startdocument() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.startDocument"]], "startelement() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.startElement"]], "startelementns() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.startElementNS"]], "startprefixmapping() (xml.sax.handler.contenthandler method)": [[412, "xml.sax.handler.ContentHandler.startPrefixMapping"]], "unparsedentitydecl() (xml.sax.handler.dtdhandler method)": [[412, "xml.sax.handler.DTDHandler.unparsedEntityDecl"]], "warning() (xml.sax.handler.errorhandler method)": [[412, "xml.sax.handler.ErrorHandler.warning"]], "xml.sax.handler": [[412, "module-xml.sax.handler"]], "attributesimpl (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.AttributesImpl"]], "attributesnsimpl (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.AttributesNSImpl"]], "incrementalparser (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.IncrementalParser"]], "inputsource (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.InputSource"]], "locator (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.Locator"]], "xmlreader (class in xml.sax.xmlreader)": [[413, "xml.sax.xmlreader.XMLReader"]], "close() (xml.sax.xmlreader.incrementalparser method)": [[413, "xml.sax.xmlreader.IncrementalParser.close"]], "feed() (xml.sax.xmlreader.incrementalparser method)": [[413, "xml.sax.xmlreader.IncrementalParser.feed"]], "getbytestream() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.getByteStream"]], "getcharacterstream() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.getCharacterStream"]], "getcolumnnumber() (xml.sax.xmlreader.locator method)": [[413, "xml.sax.xmlreader.Locator.getColumnNumber"]], "getcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getContentHandler"]], "getdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getDTDHandler"]], "getencoding() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.getEncoding"]], "getentityresolver() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getEntityResolver"]], "geterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getErrorHandler"]], "getfeature() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getFeature"]], "getlength() (xml.sax.xmlreader.attributes method)": [[413, "xml.sax.xmlreader.Attributes.getLength"]], "getlinenumber() (xml.sax.xmlreader.locator method)": [[413, "xml.sax.xmlreader.Locator.getLineNumber"]], "getnamebyqname() (xml.sax.xmlreader.attributesns method)": [[413, "xml.sax.xmlreader.AttributesNS.getNameByQName"]], "getnames() (xml.sax.xmlreader.attributes method)": [[413, "xml.sax.xmlreader.Attributes.getNames"]], "getproperty() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.getProperty"]], "getpublicid() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.getPublicId"]], "getpublicid() (xml.sax.xmlreader.locator method)": [[413, "xml.sax.xmlreader.Locator.getPublicId"]], "getqnamebyname() (xml.sax.xmlreader.attributesns method)": [[413, "xml.sax.xmlreader.AttributesNS.getQNameByName"]], "getqnames() (xml.sax.xmlreader.attributesns method)": [[413, "xml.sax.xmlreader.AttributesNS.getQNames"]], "getsystemid() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.getSystemId"]], "getsystemid() (xml.sax.xmlreader.locator method)": [[413, "xml.sax.xmlreader.Locator.getSystemId"]], "gettype() (xml.sax.xmlreader.attributes method)": [[413, "xml.sax.xmlreader.Attributes.getType"]], "getvalue() (xml.sax.xmlreader.attributes method)": [[413, "xml.sax.xmlreader.Attributes.getValue"]], "getvaluebyqname() (xml.sax.xmlreader.attributesns method)": [[413, "xml.sax.xmlreader.AttributesNS.getValueByQName"]], "parse() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.parse"]], "reset() (xml.sax.xmlreader.incrementalparser method)": [[413, "xml.sax.xmlreader.IncrementalParser.reset"]], "setbytestream() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.setByteStream"]], "setcharacterstream() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.setCharacterStream"]], "setcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setContentHandler"]], "setdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setDTDHandler"]], "setencoding() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.setEncoding"]], "setentityresolver() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setEntityResolver"]], "seterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setErrorHandler"]], "setfeature() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setFeature"]], "setlocale() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setLocale"]], "setproperty() (xml.sax.xmlreader.xmlreader method)": [[413, "xml.sax.xmlreader.XMLReader.setProperty"]], "setpublicid() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.setPublicId"]], "setsystemid() (xml.sax.xmlreader.inputsource method)": [[413, "xml.sax.xmlreader.InputSource.setSystemId"]], "xml.sax.xmlreader": [[413, "module-xml.sax.xmlreader"]], "xmlfilterbase (class in xml.sax.saxutils)": [[414, "xml.sax.saxutils.XMLFilterBase"]], "xmlgenerator (class in xml.sax.saxutils)": [[414, "xml.sax.saxutils.XMLGenerator"]], "escape() (in module xml.sax.saxutils)": [[414, "xml.sax.saxutils.escape"]], "prepare_input_source() (in module xml.sax.saxutils)": [[414, "xml.sax.saxutils.prepare_input_source"]], "quoteattr() (in module xml.sax.saxutils)": [[414, "xml.sax.saxutils.quoteattr"]], "unescape() (in module xml.sax.saxutils)": [[414, "xml.sax.saxutils.unescape"]], "xml.sax.saxutils": [[414, "module-xml.sax.saxutils"]], "binary (class in xmlrpc.client)": [[416, "xmlrpc.client.Binary"]], "datetime (class in xmlrpc.client)": [[416, "xmlrpc.client.DateTime"]], "fault (class in xmlrpc.client)": [[416, "xmlrpc.client.Fault"]], "multicall (class in xmlrpc.client)": [[416, "xmlrpc.client.MultiCall"]], "protocolerror (class in xmlrpc.client)": [[416, "xmlrpc.client.ProtocolError"]], "rfc 2045#section-6.8": [[416, "index-0"]], "serverproxy (class in xmlrpc.client)": [[416, "xmlrpc.client.ServerProxy"]], "data (xmlrpc.client.binary attribute)": [[416, "xmlrpc.client.Binary.data"]], "decode() (xmlrpc.client.binary method)": [[416, "xmlrpc.client.Binary.decode"]], "decode() (xmlrpc.client.datetime method)": [[416, "xmlrpc.client.DateTime.decode"]], "dumps() (in module xmlrpc.client)": [[416, "xmlrpc.client.dumps"]], "encode() (xmlrpc.client.binary method)": [[416, "xmlrpc.client.Binary.encode"]], "encode() (xmlrpc.client.datetime method)": [[416, "xmlrpc.client.DateTime.encode"]], "errcode (xmlrpc.client.protocolerror attribute)": [[416, "xmlrpc.client.ProtocolError.errcode"]], "errmsg (xmlrpc.client.protocolerror attribute)": [[416, "xmlrpc.client.ProtocolError.errmsg"]], "faultcode (xmlrpc.client.fault attribute)": [[416, "xmlrpc.client.Fault.faultCode"]], "faultstring (xmlrpc.client.fault attribute)": [[416, "xmlrpc.client.Fault.faultString"]], "headers (xmlrpc.client.protocolerror attribute)": [[416, "xmlrpc.client.ProtocolError.headers"]], "listmethods() (xmlrpc.client.serverproxy.system method)": [[416, "xmlrpc.client.ServerProxy.system.listMethods"]], "loads() (in module xmlrpc.client)": [[416, "xmlrpc.client.loads"]], "methodhelp() (xmlrpc.client.serverproxy.system method)": [[416, "xmlrpc.client.ServerProxy.system.methodHelp"]], "methodsignature() (xmlrpc.client.serverproxy.system method)": [[416, "xmlrpc.client.ServerProxy.system.methodSignature"]], "url (xmlrpc.client.protocolerror attribute)": [[416, "xmlrpc.client.ProtocolError.url"]], "xmlrpc.client": [[416, "module-xmlrpc.client"]], "cgixmlrpcrequesthandler (class in xmlrpc.server)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler"]], "doccgixmlrpcrequesthandler (class in xmlrpc.server)": [[417, "xmlrpc.server.DocCGIXMLRPCRequestHandler"]], "docxmlrpcrequesthandler (class in xmlrpc.server)": [[417, "xmlrpc.server.DocXMLRPCRequestHandler"]], "docxmlrpcserver (class in xmlrpc.server)": [[417, "xmlrpc.server.DocXMLRPCServer"]], "simplexmlrpcrequesthandler (class in xmlrpc.server)": [[417, "xmlrpc.server.SimpleXMLRPCRequestHandler"]], "simplexmlrpcserver (class in xmlrpc.server)": [[417, "xmlrpc.server.SimpleXMLRPCServer"]], "handle_request() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request"]], "register_function() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler.register_function"]], "register_function() (xmlrpc.server.simplexmlrpcserver method)": [[417, "xmlrpc.server.SimpleXMLRPCServer.register_function"]], "register_instance() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance"]], "register_instance() (xmlrpc.server.simplexmlrpcserver method)": [[417, "xmlrpc.server.SimpleXMLRPCServer.register_instance"]], "register_introspection_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions"]], "register_introspection_functions() (xmlrpc.server.simplexmlrpcserver method)": [[417, "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions"]], "register_multicall_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions"]], "register_multicall_functions() (xmlrpc.server.simplexmlrpcserver method)": [[417, "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions"]], "rpc_paths (xmlrpc.server.simplexmlrpcrequesthandler attribute)": [[417, "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths"]], "set_server_documentation() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation"]], "set_server_documentation() (xmlrpc.server.docxmlrpcserver method)": [[417, "xmlrpc.server.DocXMLRPCServer.set_server_documentation"]], "set_server_name() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name"]], "set_server_name() (xmlrpc.server.docxmlrpcserver method)": [[417, "xmlrpc.server.DocXMLRPCServer.set_server_name"]], "set_server_title() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[417, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title"]], "set_server_title() (xmlrpc.server.docxmlrpcserver method)": [[417, "xmlrpc.server.DocXMLRPCServer.set_server_title"]], "xmlrpc.server": [[417, "module-xmlrpc.server"]], "--compress": [[418, "cmdoption-zipapp-c"]], "--info": [[418, "cmdoption-zipapp-info"]], "--main": [[418, "cmdoption-zipapp-m"]], "--python": [[418, "cmdoption-zipapp-p"]], "executable zip files": [[418, "index-0"]], "create_archive() (in module zipapp)": [[418, "zipapp.create_archive"]], "get_interpreter() (in module zipapp)": [[418, "zipapp.get_interpreter"]], "zipapp": [[418, "module-zipapp"]], "zipapp command line option": [[418, "cmdoption-zipapp-c"], [418, "cmdoption-zipapp-h"], [418, "cmdoption-zipapp-info"], [418, "cmdoption-zipapp-m"], [418, "cmdoption-zipapp-o"], [418, "cmdoption-zipapp-p"]], "--metadata-encoding": [[419, "cmdoption-zipfile-metadata-encoding"]], "badzipfile": [[419, "zipfile.BadZipFile"], [419, "zipfile.BadZipfile"]], "crc (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.CRC"]], "largezipfile": [[419, "zipfile.LargeZipFile"]], "path (class in zipfile)": [[419, "zipfile.Path"]], "path.stem (in module zipfile)": [[419, "zipfile.Path.stem"]], "path.suffix (in module zipfile)": [[419, "zipfile.Path.suffix"]], "path.suffixes (in module zipfile)": [[419, "zipfile.Path.suffixes"]], "pyzipfile (class in zipfile)": [[419, "zipfile.PyZipFile"]], "zip_bzip2 (in module zipfile)": [[419, "zipfile.ZIP_BZIP2"]], "zip_deflated (in module zipfile)": [[419, "zipfile.ZIP_DEFLATED"]], "zip_lzma (in module zipfile)": [[419, "zipfile.ZIP_LZMA"]], "zip_stored (in module zipfile)": [[419, "zipfile.ZIP_STORED"]], "zipfile (class in zipfile)": [[419, "zipfile.ZipFile"]], "zipinfo (class in zipfile)": [[419, "zipfile.ZipInfo"]], "close() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.close"]], "comment (zipfile.zipfile attribute)": [[419, "zipfile.ZipFile.comment"]], "comment (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.comment"]], "compress_size (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.compress_size"]], "compress_type (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.compress_type"]], "create_system (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.create_system"]], "create_version (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.create_version"]], "date_time (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.date_time"]], "debug (zipfile.zipfile attribute)": [[419, "zipfile.ZipFile.debug"]], "exists() (zipfile.path method)": [[419, "zipfile.Path.exists"]], "external_attr (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.external_attr"]], "extra (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.extra"]], "extract() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.extract"]], "extract_version (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.extract_version"]], "extractall() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.extractall"]], "file_size (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.file_size"]], "filename (zipfile.zipfile attribute)": [[419, "zipfile.ZipFile.filename"]], "filename (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.filename"]], "flag_bits (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.flag_bits"]], "from_file() (zipfile.zipinfo class method)": [[419, "zipfile.ZipInfo.from_file"]], "getinfo() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.getinfo"]], "header_offset (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.header_offset"]], "infolist() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.infolist"]], "internal_attr (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.internal_attr"]], "is_dir() (zipfile.path method)": [[419, "zipfile.Path.is_dir"]], "is_dir() (zipfile.zipinfo method)": [[419, "zipfile.ZipInfo.is_dir"]], "is_file() (zipfile.path method)": [[419, "zipfile.Path.is_file"]], "is_zipfile() (in module zipfile)": [[419, "zipfile.is_zipfile"]], "iterdir() (zipfile.path method)": [[419, "zipfile.Path.iterdir"]], "joinpath() (zipfile.path method)": [[419, "zipfile.Path.joinpath"]], "mkdir() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.mkdir"]], "name (zipfile.path attribute)": [[419, "zipfile.Path.name"]], "namelist() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.namelist"]], "open() (zipfile.path method)": [[419, "zipfile.Path.open"]], "open() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.open"]], "printdir() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.printdir"]], "read() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.read"]], "read_bytes() (zipfile.path method)": [[419, "zipfile.Path.read_bytes"]], "read_text() (zipfile.path method)": [[419, "zipfile.Path.read_text"]], "reserved (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.reserved"]], "setpassword() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.setpassword"]], "testzip() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.testzip"]], "volume (zipfile.zipinfo attribute)": [[419, "zipfile.ZipInfo.volume"]], "write() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.write"]], "writepy() (zipfile.pyzipfile method)": [[419, "zipfile.PyZipFile.writepy"]], "writestr() (zipfile.zipfile method)": [[419, "zipfile.ZipFile.writestr"]], "zipfile": [[419, "module-zipfile"]], "zipfile command line option": [[419, "cmdoption-zipfile-c"], [419, "cmdoption-zipfile-create"], [419, "cmdoption-zipfile-e"], [419, "cmdoption-zipfile-extract"], [419, "cmdoption-zipfile-l"], [419, "cmdoption-zipfile-list"], [419, "cmdoption-zipfile-metadata-encoding"], [419, "cmdoption-zipfile-t"], [419, "cmdoption-zipfile-test"]], "pep 273": [[420, "index-0"], [420, "index-1"], [462, "index-4"], [462, "index-5"]], "zipimporterror": [[420, "zipimport.ZipImportError"]], "archive (zipimport.zipimporter attribute)": [[420, "zipimport.zipimporter.archive"]], "create_module() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.create_module"]], "exec_module() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.exec_module"]], "find_spec() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.find_spec"]], "get_code() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.get_code"]], "get_data() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.get_data"]], "get_filename() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.get_filename"]], "get_source() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.get_source"]], "invalidate_caches() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.invalidate_caches"]], "is_package() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.is_package"]], "load_module() (zipimport.zipimporter method)": [[420, "zipimport.zipimporter.load_module"]], "prefix (zipimport.zipimporter attribute)": [[420, "zipimport.zipimporter.prefix"]], "zipimport": [[420, "module-zipimport"]], "zipimporter (class in zipimport)": [[420, "zipimport.zipimporter"]], "cyclic redundancy check": [[421, "index-0"]], "zlib_runtime_version (in module zlib)": [[421, "zlib.ZLIB_RUNTIME_VERSION"]], "zlib_version (in module zlib)": [[421, "zlib.ZLIB_VERSION"]], "adler32() (in module zlib)": [[421, "zlib.adler32"]], "checksum": [[421, "index-0"]], "compress() (in module zlib)": [[421, "zlib.compress"]], "compress() (zlib.compress method)": [[421, "zlib.Compress.compress"]], "compressobj() (in module zlib)": [[421, "zlib.compressobj"]], "copy() (zlib.compress method)": [[421, "zlib.Compress.copy"]], "copy() (zlib.decompress method)": [[421, "zlib.Decompress.copy"]], "crc32() (in module zlib)": [[421, "zlib.crc32"]], "decompress() (in module zlib)": [[421, "zlib.decompress"]], "decompress() (zlib.decompress method)": [[421, "zlib.Decompress.decompress"]], "decompressobj() (in module zlib)": [[421, "zlib.decompressobj"]], "eof (zlib.decompress attribute)": [[421, "zlib.Decompress.eof"]], "flush() (zlib.compress method)": [[421, "zlib.Compress.flush"]], "flush() (zlib.decompress method)": [[421, "zlib.Decompress.flush"]], "unconsumed_tail (zlib.decompress attribute)": [[421, "zlib.Decompress.unconsumed_tail"]], "unused_data (zlib.decompress attribute)": [[421, "zlib.Decompress.unused_data"]], "zlib": [[421, "module-zlib"]], "invalidtzpathwarning": [[422, "zoneinfo.InvalidTZPathWarning"]], "pep 495": [[422, "index-1"], [476, "index-17"], [476, "index-18"]], "pep 615": [[422, "index-0"], [479, "index-16"], [479, "index-9"]], "pythontzpath": [[422, "envvar-PYTHONTZPATH"], [422, "index-2"]], "tzpath (in module zoneinfo)": [[422, "zoneinfo.TZPATH"]], "zoneinfo (class in zoneinfo)": [[422, "zoneinfo.ZoneInfo"]], "zoneinfonotfounderror": [[422, "zoneinfo.ZoneInfoNotFoundError"]], "available_timezones() (in module zoneinfo)": [[422, "zoneinfo.available_timezones"]], "clear_cache() (zoneinfo.zoneinfo class method)": [[422, "zoneinfo.ZoneInfo.clear_cache"]], "from_file() (zoneinfo.zoneinfo class method)": [[422, "zoneinfo.ZoneInfo.from_file"]], "key (zoneinfo.zoneinfo attribute)": [[422, "zoneinfo.ZoneInfo.key"]], "no_cache() (zoneinfo.zoneinfo class method)": [[422, "zoneinfo.ZoneInfo.no_cache"]], "reset_tzpath() (in module zoneinfo)": [[422, "zoneinfo.reset_tzpath"]], "zoneinfo": [[422, "module-zoneinfo"]], "! patterns": [[424, "index-23"]], "->": [[424, "index-34"], [438, "index-6"]], "as pattern, or pattern, capture pattern, wildcard pattern": [[424, "index-23"]], "dedent token": [[424, "index-2"], [432, "index-9"]], "newline token": [[424, "index-2"], [432, "index-3"]], "pep 3107": [[424, "index-36"], [438, "index-7"], [467, "index-6"], [475, "index-9"], [477, "index-0"]], "pep 3129": [[424, "index-41"], [424, "index-46"], [465, "index-18"]], "pep 318": [[424, "index-40"], [424, "index-47"], [463, "index-12"], [463, "index-4"], [463, "index-5"]], "pep 570": [[424, "index-33"], [478, "index-1"], [478, "index-23"]], "pep 614": [[424, "index-30"], [424, "index-44"], [479, "index-15"], [479, "index-3"]], "pep 636": [[424, "index-20"], [424, "index-26"], [438, "index-1"], [469, "index-17"], [469, "index-2"]], "annotations": [[424, "index-34"], [438, "index-6"]], "as": [[424, "index-10"], [424, "index-16"], [424, "index-18"], [424, "index-9"], [433, "index-34"], [433, "index-35"]], "async": [[424, "index-49"]], "async def": [[424, "index-48"]], "async for": [[424, "index-50"], [427, "index-12"]], "async with": [[424, "index-51"]], "await": [[424, "index-49"], [427, "index-13"], [427, "index-57"]], "binding": [[424, "index-28"], [424, "index-42"], [426, "index-4"], [433, "index-34"], [433, "index-36"], [433, "index-4"], [433, "index-43"]], "break": [[424, "index-13"], [424, "index-15"], [424, "index-5"], [424, "index-7"], [433, "index-30"]], "case": [[424, "index-18"], [424, "index-18"]], "case block": [[424, "index-22"]], "class definition": [[424, "index-42"], [424, "index-43"], [425, "index-86"]], "clause": [[424, "index-1"]], "compound": [[424, "index-0"]], "compound statement": [[424, "index-16"], [424, "index-18"], [424, "index-28"], [424, "index-3"], [424, "index-4"], [424, "index-42"], [424, "index-6"], [424, "index-9"]], "continue": [[424, "index-13"], [424, "index-15"], [424, "index-5"], [424, "index-7"], [433, "index-33"]], "dangling": [[424, "index-2"]], "def": [[424, "index-28"]], "default": [[424, "index-31"]], "definition": [[424, "index-28"], [424, "index-42"], [433, "index-24"]], "elif": [[424, "index-3"]], "else": [[424, "index-13"], [424, "index-2"], [424, "index-3"], [424, "index-4"], [424, "index-6"], [424, "index-9"], [427, "index-88"], [433, "index-31"]], "except clause": [[424, "index-10"]], "except_star": [[424, "index-12"]], "execution": [[424, "index-42"], [425, "index-66"], [426, "index-13"], [426, "index-2"]], "expression list": [[424, "index-42"], [427, "index-15"], [427, "index-16"], [427, "index-91"], [433, "index-18"]], "finally": [[424, "index-14"], [424, "index-9"], [433, "index-25"], [433, "index-32"], [433, "index-33"]], "for": [[424, "index-6"], [427, "index-12"], [433, "index-30"], [433, "index-33"], [438, "index-0"]], "frame": [[424, "index-42"], [425, "index-63"], [426, "index-2"]], "function annotations": [[424, "index-34"], [438, "index-6"]], "function definition": [[424, "index-27"], [424, "index-28"], [424, "index-29"], [424, "index-31"], [424, "index-32"]], "guard": [[424, "index-21"]], "inheritance": [[424, "index-42"]], "irrefutable case block": [[424, "index-22"]], "match": [[424, "index-18"], [424, "index-18"]], "match statement": [[424, "index-18"]], "name": [[424, "index-28"], [424, "index-42"], [426, "index-4"], [427, "index-3"], [427, "index-5"], [432, "index-10"], [433, "index-22"], [433, "index-34"], [433, "index-36"], [433, "index-4"], [433, "index-43"], [437, "index-1"]], "parameter list": [[424, "index-28"]], "pattern matching": [[424, "index-18"]], "return": [[424, "index-13"], [424, "index-15"], [433, "index-24"]], "suite": [[424, "index-1"]], "target": [[424, "index-6"], [433, "index-21"], [433, "index-31"], [433, "index-5"], [433, "index-6"]], "type parameters": [[424, "index-53"]], "user-defined function": [[424, "index-28"], [425, "index-34"], [427, "index-52"]], "with": [[424, "index-16"], [425, "index-106"]], "with statement": [[424, "index-16"]], "ellipsis": [[425, "index-8"]], "java": [[425, "index-13"]], "notimplemented": [[425, "index-7"]], "pep 252": [[425, "index-85"], [461, "index-2"], [461, "index-4"]], "pep 3135": [[425, "index-93"], [467, "index-31"]], "pep 562": [[425, "index-84"], [477, "index-16"]], "__abs__() (object method)": [[425, "object.__abs__"]], "__add__() (object method)": [[425, "object.__add__"]], "__aenter__() (object method)": [[425, "object.__aenter__"]], "__aexit__() (object method)": [[425, "object.__aexit__"]], "__aiter__() (object method)": [[425, "object.__aiter__"]], "__and__() (object method)": [[425, "object.__and__"]], "__anext__() (object method)": [[425, "object.__anext__"]], "__annotations__ (class attribute)": [[425, "index-50"]], "__annotations__ (function attribute)": [[425, "function.__annotations__"], [425, "index-36"]], "__annotations__ (module attribute)": [[425, "index-45"]], "__await__() (object method)": [[425, "object.__await__"]], "__bool__() (object method)": [[425, "index-98"], [425, "object.__bool__"]], "__buffer__() (object method)": [[425, "object.__buffer__"]], "__bytes__() (object method)": [[425, "object.__bytes__"]], "__call__() (object method)": [[425, "object.__call__"], [427, "index-56"]], "__ceil__() (object method)": [[425, "object.__ceil__"]], "__class__ (method cell)": [[425, "index-92"]], "__class__ (module attribute)": [[425, "index-83"]], "__class_getitem__() (object class method)": [[425, "object.__class_getitem__"]], "__classcell__ (class namespace entry)": [[425, "index-92"]], "__closure__ (function attribute)": [[425, "function.__closure__"], [425, "index-35"]], "__code__ (function attribute)": [[425, "function.__code__"], [425, "index-36"]], "__complex__() (object method)": [[425, "object.__complex__"]], "__contains__() (object method)": [[425, "object.__contains__"]], "__defaults__ (function attribute)": [[425, "function.__defaults__"], [425, "index-36"]], "__del__() (object method)": [[425, "object.__del__"]], "__delattr__() (object method)": [[425, "object.__delattr__"]], "__delete__() (object method)": [[425, "object.__delete__"]], "__delitem__() (object method)": [[425, "object.__delitem__"]], "__dict__ (class attribute)": [[425, "index-50"]], "__dict__ (function attribute)": [[425, "function.__dict__"], [425, "index-36"]], "__dict__ (instance attribute)": [[425, "index-54"]], "__dir__ (module attribute)": [[425, "index-83"]], "__dir__() (object method)": [[425, "object.__dir__"]], "__divmod__() (object method)": [[425, "object.__divmod__"]], "__doc__ (class attribute)": [[425, "index-50"]], "__doc__ (function attribute)": [[425, "function.__doc__"], [425, "index-36"]], "__doc__ (method attribute)": [[425, "index-38"], [425, "method.__doc__"]], "__enter__() (object method)": [[425, "object.__enter__"]], "__eq__() (object method)": [[425, "object.__eq__"]], "__exit__() (object method)": [[425, "object.__exit__"]], "__float__() (object method)": [[425, "object.__float__"]], "__floor__() (object method)": [[425, "object.__floor__"]], "__floordiv__() (object method)": [[425, "object.__floordiv__"]], "__format__() (object method)": [[425, "index-78"], [425, "object.__format__"]], "__func__ (method attribute)": [[425, "index-38"], [425, "method.__func__"]], "__ge__() (object method)": [[425, "object.__ge__"]], "__get__() (object method)": [[425, "object.__get__"]], "__getattr__ (module attribute)": [[425, "index-83"]], "__getattr__() (object method)": [[425, "object.__getattr__"]], "__getattribute__() (object method)": [[425, "object.__getattribute__"]], "__getitem__() (mapping object method)": [[425, "index-71"]], "__getitem__() (object method)": [[425, "object.__getitem__"]], "__globals__ (function attribute)": [[425, "function.__globals__"], [425, "index-35"]], "__gt__() (object method)": [[425, "object.__gt__"]], "__hash__() (object method)": [[425, "object.__hash__"]], "__iadd__() (object method)": [[425, "object.__iadd__"]], "__iand__() (object method)": [[425, "object.__iand__"]], "__ifloordiv__() (object method)": [[425, "object.__ifloordiv__"]], "__ilshift__() (object method)": [[425, "object.__ilshift__"]], "__imatmul__() (object method)": [[425, "object.__imatmul__"]], "__imod__() (object method)": [[425, "object.__imod__"]], "__imul__() (object method)": [[425, "object.__imul__"]], "__index__() (object method)": [[425, "object.__index__"]], "__init__() (object method)": [[425, "object.__init__"]], "__init_subclass__() (object class method)": [[425, "object.__init_subclass__"]], "__instancecheck__() (class method)": [[425, "class.__instancecheck__"]], "__int__() (object method)": [[425, "object.__int__"]], "__invert__() (object method)": [[425, "object.__invert__"]], "__ior__() (object method)": [[425, "object.__ior__"]], "__ipow__() (object method)": [[425, "object.__ipow__"]], "__irshift__() (object method)": [[425, "object.__irshift__"]], "__isub__() (object method)": [[425, "object.__isub__"]], "__iter__() (object method)": [[425, "object.__iter__"]], "__itruediv__() (object method)": [[425, "object.__itruediv__"]], "__ixor__() (object method)": [[425, "object.__ixor__"]], "__kwdefaults__ (function attribute)": [[425, "function.__kwdefaults__"], [425, "index-36"]], "__le__() (object method)": [[425, "object.__le__"]], "__len__() (mapping object method)": [[425, "index-82"]], "__len__() (object method)": [[425, "object.__len__"]], "__length_hint__() (object method)": [[425, "object.__length_hint__"]], "__lshift__() (object method)": [[425, "object.__lshift__"]], "__lt__() (object method)": [[425, "object.__lt__"]], "__matmul__() (object method)": [[425, "object.__matmul__"]], "__missing__() (object method)": [[425, "object.__missing__"]], "__mod__() (object method)": [[425, "object.__mod__"]], "__module__ (class attribute)": [[425, "index-50"]], "__module__ (function attribute)": [[425, "function.__module__"], [425, "index-36"]], "__module__ (method attribute)": [[425, "index-38"], [425, "method.__module__"]], "__mro_entries__() (object method)": [[425, "object.__mro_entries__"]], "__mul__() (object method)": [[425, "object.__mul__"]], "__name__ (class attribute)": [[425, "index-50"]], "__name__ (function attribute)": [[425, "function.__name__"], [425, "index-36"]], "__name__ (method attribute)": [[425, "index-38"], [425, "method.__name__"]], "__ne__() (object method)": [[425, "object.__ne__"]], "__neg__() (object method)": [[425, "object.__neg__"]], "__new__() (object method)": [[425, "object.__new__"]], "__objclass__ (object attribute)": [[425, "object.__objclass__"]], "__or__() (object method)": [[425, "object.__or__"]], "__pos__() (object method)": [[425, "object.__pos__"]], "__pow__() (object method)": [[425, "object.__pow__"]], "__prepare__ (metaclass method)": [[425, "index-89"]], "__qualname__ (function attribute)": [[425, "function.__qualname__"]], "__radd__() (object method)": [[425, "object.__radd__"]], "__rand__() (object method)": [[425, "object.__rand__"]], "__rdivmod__() (object method)": [[425, "object.__rdivmod__"]], "__release_buffer__() (object method)": [[425, "object.__release_buffer__"]], "__repr__() (object method)": [[425, "index-75"], [425, "object.__repr__"]], "__reversed__() (object method)": [[425, "object.__reversed__"]], "__rfloordiv__() (object method)": [[425, "object.__rfloordiv__"]], "__rlshift__() (object method)": [[425, "object.__rlshift__"]], "__rmatmul__() (object method)": [[425, "object.__rmatmul__"]], "__rmod__() (object method)": [[425, "object.__rmod__"]], "__rmul__() (object method)": [[425, "object.__rmul__"]], "__ror__() (object method)": [[425, "object.__ror__"]], "__round__() (object method)": [[425, "object.__round__"]], "__rpow__() (object method)": [[425, "object.__rpow__"]], "__rrshift__() (object method)": [[425, "object.__rrshift__"]], "__rshift__() (object method)": [[425, "object.__rshift__"]], "__rsub__() (object method)": [[425, "object.__rsub__"]], "__rtruediv__() (object method)": [[425, "object.__rtruediv__"]], "__rxor__() (object method)": [[425, "object.__rxor__"]], "__self__ (method attribute)": [[425, "index-38"], [425, "method.__self__"]], "__set__() (object method)": [[425, "object.__set__"]], "__set_name__() (object method)": [[425, "object.__set_name__"]], "__setattr__() (object method)": [[425, "object.__setattr__"]], "__setitem__() (object method)": [[425, "object.__setitem__"]], "__str__() (object method)": [[425, "index-76"], [425, "object.__str__"]], "__sub__() (object method)": [[425, "object.__sub__"]], "__subclasscheck__() (class method)": [[425, "class.__subclasscheck__"]], "__truediv__() (object method)": [[425, "object.__truediv__"]], "__trunc__() (object method)": [[425, "object.__trunc__"]], "__type_params__ (class attribute)": [[425, "index-50"]], "__type_params__ (function attribute)": [[425, "function.__type_params__"], [425, "index-36"]], "__xor__() (object method)": [[425, "object.__xor__"]], "body": [[425, "index-91"]], "built-in method": [[425, "index-43"], [427, "index-53"]], "byte": [[425, "index-21"]], "call": [[425, "index-33"], [425, "index-47"], [425, "index-49"], [425, "index-97"], [427, "index-47"], [427, "index-52"], [427, "index-53"], [427, "index-54"], [427, "index-55"], [427, "index-56"], [433, "index-3"]], "chr": [[425, "index-19"]], "class instance": [[425, "index-47"], [425, "index-51"], [425, "index-52"], [427, "index-55"]], "class object": [[425, "index-47"], [425, "index-49"], [427, "index-54"]], "clear() (frame method)": [[425, "frame.clear"]], "close() (coroutine method)": [[425, "coroutine.close"]], "co_argcount (code object attribute)": [[425, "index-58"]], "co_argcount (codeobject attribute)": [[425, "codeobject.co_argcount"]], "co_cellvars (code object attribute)": [[425, "index-58"]], "co_cellvars (codeobject attribute)": [[425, "codeobject.co_cellvars"]], "co_code (code object attribute)": [[425, "index-58"]], "co_code (codeobject attribute)": [[425, "codeobject.co_code"]], "co_consts (code object attribute)": [[425, "index-58"]], "co_consts (codeobject attribute)": [[425, "codeobject.co_consts"]], "co_filename (code object attribute)": [[425, "index-58"]], "co_filename (codeobject attribute)": [[425, "codeobject.co_filename"]], "co_firstlineno (code object attribute)": [[425, "index-58"]], "co_firstlineno (codeobject attribute)": [[425, "codeobject.co_firstlineno"]], "co_flags (code object attribute)": [[425, "index-58"]], "co_flags (codeobject attribute)": [[425, "codeobject.co_flags"]], "co_freevars (code object attribute)": [[425, "index-58"]], "co_freevars (codeobject attribute)": [[425, "codeobject.co_freevars"]], "co_kwonlyargcount (code object attribute)": [[425, "index-58"]], "co_kwonlyargcount (codeobject attribute)": [[425, "codeobject.co_kwonlyargcount"]], "co_lines() (codeobject method)": [[425, "codeobject.co_lines"]], "co_lnotab (code object attribute)": [[425, "index-58"]], "co_lnotab (codeobject attribute)": [[425, "codeobject.co_lnotab"]], "co_name (code object attribute)": [[425, "index-58"]], "co_name (codeobject attribute)": [[425, "codeobject.co_name"]], "co_names (code object attribute)": [[425, "index-58"]], "co_names (codeobject attribute)": [[425, "codeobject.co_names"]], "co_nlocals (code object attribute)": [[425, "index-58"]], "co_nlocals (codeobject attribute)": [[425, "codeobject.co_nlocals"]], "co_positions() (codeobject method)": [[425, "codeobject.co_positions"]], "co_posonlyargcount (code object attribute)": [[425, "index-58"]], "co_posonlyargcount (codeobject attribute)": [[425, "codeobject.co_posonlyargcount"]], "co_qualname (code object attribute)": [[425, "index-58"]], "co_qualname (codeobject attribute)": [[425, "codeobject.co_qualname"]], "co_stacksize (code object attribute)": [[425, "index-58"]], "co_stacksize (codeobject attribute)": [[425, "codeobject.co_stacksize"]], "co_varnames (code object attribute)": [[425, "index-58"]], "co_varnames (codeobject attribute)": [[425, "codeobject.co_varnames"]], "constructor": [[425, "index-73"]], "conversion": [[425, "index-78"], [427, "index-1"], [433, "index-3"]], "destructor": [[425, "index-74"], [433, "index-7"]], "documentation string": [[425, "index-60"]], "exc_info (in module sys)": [[425, "index-66"]], "extension": [[425, "index-4"]], "f_back (frame attribute)": [[425, "frame.f_back"], [425, "index-64"]], "f_builtins (frame attribute)": [[425, "frame.f_builtins"], [425, "index-64"]], "f_code (frame attribute)": [[425, "frame.f_code"], [425, "index-64"]], "f_globals (frame attribute)": [[425, "frame.f_globals"], [425, "index-64"]], "f_lasti (frame attribute)": [[425, "frame.f_lasti"], [425, "index-64"]], "f_lineno (frame attribute)": [[425, "frame.f_lineno"], [425, "index-65"]], "f_locals (frame attribute)": [[425, "frame.f_locals"], [425, "index-64"]], "f_trace (frame attribute)": [[425, "frame.f_trace"], [425, "index-65"]], "f_trace_lines (frame attribute)": [[425, "frame.f_trace_lines"], [425, "index-65"]], "f_trace_opcodes (frame attribute)": [[425, "frame.f_trace_opcodes"], [425, "index-65"]], "finalizer": [[425, "index-74"]], "global": [[425, "index-35"], [433, "index-22"], [433, "index-43"], [433, "index-43"]], "handler": [[425, "index-66"]], "hierarchy": [[425, "index-4"]], "identity of an object": [[425, "index-1"]], "immutable object": [[425, "index-1"]], "immutable sequence": [[425, "index-17"]], "immutable sequences": [[425, "index-18"]], "immutable types": [[425, "index-72"]], "index operation": [[425, "index-15"]], "indices() (slice method)": [[425, "slice.indices"]], "instance": [[425, "index-47"], [425, "index-51"], [425, "index-97"], [427, "index-55"], [427, "index-56"]], "internal type": [[425, "index-56"]], "invocation": [[425, "index-33"]], "item selection": [[425, "index-15"]], "makefile() (socket method)": [[425, "index-55"]], "metaclass hint": [[425, "index-88"]], "mutable object": [[425, "index-1"]], "number": [[425, "index-13"], [425, "index-14"], [432, "index-27"]], "object.__match_args__ (built-in variable)": [[425, "object.__match_args__"]], "object.__slots__ (built-in variable)": [[425, "object.__slots__"]], "open": [[425, "index-55"], [443, "index-0"]], "ord": [[425, "index-19"]], "overloading": [[425, "index-71"]], "print": [[425, "index-78"]], "print() (built-in function)": [[425, "index-76"]], "reference counting": [[425, "index-2"]], "repr() (built-in function)": [[425, "index-75"]], "representation": [[425, "index-11"]], "round": [[425, "index-105"]], "send() (coroutine method)": [[425, "coroutine.send"]], "set type": [[425, "index-27"]], "singleton": [[425, "index-20"]], "slicing": [[425, "index-16"], [425, "index-22"], [427, "index-44"], [433, "index-12"]], "stack": [[425, "index-66"]], "start (slice object attribute)": [[425, "index-70"], [427, "index-46"]], "stdio": [[425, "index-55"]], "step (slice object attribute)": [[425, "index-70"], [427, "index-46"]], "stop (slice object attribute)": [[425, "index-70"], [427, "index-46"]], "subclassing": [[425, "index-72"]], "subscription": [[425, "index-15"], [425, "index-22"], [425, "index-30"], [427, "index-41"], [433, "index-9"]], "sys.exc_info": [[425, "index-66"]], "sys.exception": [[425, "index-66"]], "sys.last_traceback": [[425, "index-66"]], "sys.stderr": [[425, "index-55"]], "sys.stdin": [[425, "index-55"]], "sys.stdout": [[425, "index-55"]], "tb_frame (traceback attribute)": [[425, "index-67"], [425, "traceback.tb_frame"]], "tb_lasti (traceback attribute)": [[425, "index-67"], [425, "traceback.tb_lasti"]], "tb_lineno (traceback attribute)": [[425, "index-67"], [425, "traceback.tb_lineno"]], "tb_next (traceback attribute)": [[425, "index-68"], [425, "traceback.tb_next"]], "throw() (coroutine method)": [[425, "coroutine.throw"]], "type of an object": [[425, "index-1"]], "types, internal": [[425, "index-56"]], "unreachable object": [[425, "index-2"]], "user-defined": [[425, "index-34"], [425, "index-37"], [427, "index-52"]], "user-defined method": [[425, "index-37"]], "value of an object": [[425, "index-1"]], "nameerror (built-in exception)": [[426, "index-9"]], "systemexit (built-in exception)": [[426, "index-17"]], "block": [[426, "index-0"], [426, "index-1"]], "environment": [[426, "index-8"]], "error handling": [[426, "index-15"]], "exception handler": [[426, "index-15"]], "execution model": [[426, "index-0"]], "free": [[426, "index-6"]], "from": [[426, "index-5"], [427, "index-23"], [427, "index-25"], [433, "index-34"], [433, "index-36"]], "handle an exception": [[426, "index-15"]], "import statement": [[426, "index-5"], [433, "index-34"], [433, "index-35"], [433, "index-36"], [433, "index-37"]], "raise an exception": [[426, "index-15"]], "scope": [[426, "index-3"], [426, "index-7"]], "termination model": [[426, "index-16"]], "variable": [[426, "index-6"]], ":= (colon equals)": [[427, "index-86"]], "bnf": [[427, "index-0"], [431, "index-0"]], "conditional": [[427, "index-82"], [427, "index-88"]], "pep 308": [[427, "index-89"], [464, "index-1"], [464, "index-2"]], "pep 380": [[427, "index-28"], [473, "index-12"]], "pep 448": [[427, "index-19"], [427, "index-51"], [427, "index-94"], [475, "index-5"], [475, "index-6"]], "pep 530": [[427, "index-14"], [476, "index-11"], [476, "index-12"]], "__anext__() (agen method)": [[427, "agen.__anext__"]], "__next__() (generator method)": [[427, "generator.__next__"]], "aclose() (agen method)": [[427, "agen.aclose"]], "addition": [[427, "index-69"]], "anonymous": [[427, "index-90"]], "argument list": [[427, "index-47"]], "asend() (agen method)": [[427, "agen.asend"]], "assignment expression": [[427, "index-86"]], "asynchronous-generator": [[427, "index-35"]], "athrow() (agen method)": [[427, "agen.athrow"]], "atom": [[427, "index-2"]], "attribute reference": [[427, "index-39"]], "call semantics": [[427, "index-47"], [427, "index-48"]], "close() (generator method)": [[427, "generator.close"]], "comma": [[427, "index-10"], [427, "index-95"]], "comprehensions": [[427, "index-11"], [427, "index-15"], [427, "index-16"], [427, "index-17"]], "conditional expression": [[427, "index-88"]], "dictionary expression": [[427, "index-17"]], "division": [[427, "index-67"]], "evaluation": [[427, "index-96"]], "examples": [[427, "index-34"]], "exclusive": [[427, "index-75"]], "form": [[427, "index-90"]], "identifier": [[427, "index-3"], [432, "index-10"]], "identity": [[427, "index-81"]], "in comprehensions": [[427, "index-12"], [427, "index-13"]], "in dictionary displays": [[427, "index-17"], [427, "index-18"]], "in dictionary expressions": [[427, "index-17"]], "in expression lists": [[427, "index-93"]], "in function calls": [[427, "index-47"], [427, "index-49"], [427, "index-50"], [438, "index-3"], [438, "index-4"]], "inclusive": [[427, "index-76"]], "inversion": [[427, "index-62"]], "item": [[427, "index-42"], [427, "index-43"]], "key": [[427, "index-17"]], "key/value pair": [[427, "index-17"]], "lambda expression": [[427, "index-90"]], "list expression": [[427, "index-15"]], "literal": [[427, "index-6"], [432, "index-16"]], "mangling": [[427, "index-5"], [437, "index-1"]], "matrix multiplication": [[427, "index-66"]], "membership": [[427, "index-80"]], "minus": [[427, "index-60"]], "modulo": [[427, "index-68"]], "multiplication": [[427, "index-65"]], "named expression": [[427, "index-86"]], "names": [[427, "index-5"]], "negation": [[427, "index-60"]], "order": [[427, "index-96"]], "parenthesized form": [[427, "index-8"]], "plus": [[427, "index-61"]], "power": [[427, "index-58"]], "precedence": [[427, "index-97"]], "primary": [[427, "index-38"]], "private": [[427, "index-5"]], "reference": [[427, "index-39"]], "send() (generator method)": [[427, "generator.send"]], "set expression": [[427, "index-16"]], "subtraction": [[427, "index-70"]], "ternary": [[427, "index-88"]], "throw() (generator method)": [[427, "generator.throw"]], "trailing": [[427, "index-95"]], "tuple display": [[427, "index-8"]], "unary": [[427, "index-59"]], "unpacking": [[427, "index-18"], [427, "index-49"], [427, "index-93"]], "walrus operator": [[427, "index-86"]], "xor": [[427, "index-75"]], "yield": [[427, "index-23"], [427, "index-34"], [433, "index-26"], [473, "index-11"]], "yield from expression": [[427, "index-25"]], "__cached__": [[429, "cached__"]], "__file__": [[429, "file__"]], "__loader__": [[429, "loader__"]], "__name__": [[429, "name__"]], "__package__": [[429, "package__"]], "__path__": [[429, "path__"]], "__spec__": [[429, "spec__"]], "find_spec": [[429, "index-10"]], "hooks": [[429, "index-9"]], "import hooks": [[429, "index-9"]], "import machinery": [[429, "index-0"]], "meta": [[429, "index-9"]], "meta hooks": [[429, "index-9"]], "path hooks": [[429, "index-9"]], "regular": [[429, "index-4"]], "sys.meta_path": [[429, "index-10"]], "sys.modules": [[429, "index-7"]], "sys.path": [[429, "index-17"]], "sys.path_hooks": [[429, "index-17"]], "sys.path_importer_cache": [[429, "index-17"]], "grammar": [[431, "index-0"]], "lexical definitions": [[431, "index-1"]], "notation": [[431, "index-0"]], "syntax": [[431, "index-0"]], "\" (double quote)": [[432, "index-17"]], "\"\"\"": [[432, "index-18"]], "' (single quote)": [[432, "index-17"]], "'''": [[432, "index-18"]], "0b": [[432, "index-28"]], "0o": [[432, "index-28"]], "0x": [[432, "index-28"]], "indent token": [[432, "index-9"]], "pep 3131": [[432, "index-11"], [432, "index-12"], [467, "index-5"]], "pep 414": [[432, "index-21"], [473, "index-14"]], "standard c": [[432, "index-23"]], "unicode consortium": [[432, "index-18"]], "_, identifiers": [[432, "index-15"]], "__, identifiers": [[432, "index-15"]], "b\"": [[432, "index-19"]], "b'": [[432, "index-19"]], "backslash character": [[432, "index-6"]], "binary literal": [[432, "index-27"]], "blank line": [[432, "index-7"]], "bytes literal": [[432, "index-17"], [432, "index-19"]], "complex literal": [[432, "index-27"]], "constant": [[432, "index-16"]], "decimal literal": [[432, "index-27"]], "delimiters": [[432, "index-32"]], "e": [[432, "index-29"]], "encoding declarations (source file)": [[432, "index-5"]], "f\"": [[432, "index-22"]], "f'": [[432, "index-22"]], "floating point literal": [[432, "index-27"]], "for help in debugging using string literals": [[432, "index-25"]], "formatted literal": [[432, "index-25"]], "formatted string literal": [[432, "index-22"], [432, "index-25"]], "fstring": [[432, "index-25"]], "grouping": [[432, "index-8"]], "hash character": [[432, "index-4"]], "hexadecimal literal": [[432, "index-27"]], "imaginary literal": [[432, "index-27"]], "in formatted string literal": [[432, "index-25"]], "in numeric literal": [[432, "index-28"], [432, "index-29"], [432, "index-30"]], "indentation": [[432, "index-8"]], "integer literal": [[432, "index-27"], [432, "index-28"]], "interpolated literal": [[432, "index-25"]], "interpolated string literal": [[432, "index-25"]], "j": [[432, "index-30"]], "leading whitespace": [[432, "index-8"]], "lexical analysis": [[432, "index-0"]], "line continuation": [[432, "index-6"]], "line joining": [[432, "index-3"], [432, "index-6"]], "line structure": [[432, "index-2"]], "logical line": [[432, "index-3"]], "numeric literal": [[432, "index-27"]], "octal literal": [[432, "index-27"]], "operators": [[432, "index-31"]], "parser": [[432, "index-0"]], "physical line": [[432, "index-23"], [432, "index-3"], [432, "index-6"]], "r\"": [[432, "index-20"]], "r'": [[432, "index-20"]], "raw string": [[432, "index-18"]], "raw string literal": [[432, "index-20"]], "reserved word": [[432, "index-13"]], "soft keyword": [[432, "index-14"]], "source character set": [[432, "index-5"]], "source encoding declaration": [[432, "index-5"]], "statement grouping": [[432, "index-8"]], "string literal": [[432, "index-17"], [432, "index-18"]], "tab": [[432, "index-8"]], "u\"": [[432, "index-17"]], "u'": [[432, "index-17"]], "unrecognized escape sequence": [[432, "index-24"]], "%=": [[433, "index-14"]], "&=": [[433, "index-14"]], "**=": [[433, "index-14"]], "*=": [[433, "index-14"]], "+=": [[433, "index-14"]], "-=": [[433, "index-14"]], "//=": [[433, "index-14"]], "/=": [[433, "index-14"]], "<<=": [[433, "index-14"]], ">>=": [[433, "index-14"]], "pep 3104": [[433, "index-46"], [467, "index-8"]], "pep 3132": [[433, "index-13"], [467, "index-9"]], "^=": [[433, "index-14"]], "__all__ (optional module attribute)": [[433, "index-38"]], "__debug__": [[433, "index-19"]], "__traceback__ (exception attribute)": [[433, "index-27"]], "annotated": [[433, "index-15"]], "annotated variable": [[433, "index-15"]], "assertions": [[433, "index-18"]], "assignment statement": [[433, "index-4"]], "assignment, annotated": [[433, "index-15"]], "assignment, augmented": [[433, "index-14"]], "augmented": [[433, "index-14"]], "augmented assignment": [[433, "index-14"]], "deletion": [[433, "index-21"], [433, "index-23"]], "future": [[433, "index-40"]], "future statement": [[433, "index-40"]], "identifier list": [[433, "index-43"], [433, "index-45"]], "in assignment target list": [[433, "index-6"]], "in target list": [[433, "index-6"]], "loop control": [[433, "index-31"]], "nonlocal": [[433, "index-45"]], "null": [[433, "index-20"]], "output": [[433, "index-3"]], "pass": [[433, "index-20"]], "procedure": [[433, "index-3"]], "raising": [[433, "index-27"]], "rebinding": [[433, "index-4"]], "simple": [[433, "index-0"]], "standard": [[433, "index-3"]], "unbinding": [[433, "index-22"]], "writing": [[433, "index-3"]], "|=": [[433, "index-14"]], "windows": [[434, "index-4"]], "command line": [[434, "index-4"]], "input": [[434, "index-5"]], "interactive mode": [[434, "index-3"]], "interpreter": [[434, "index-0"]], "program": [[434, "index-1"]], "standard input": [[434, "index-4"]], "coding": [[438, "index-9"]], "docstrings": [[438, "index-2"], [438, "index-5"]], "documentation strings": [[438, "index-2"], [438, "index-5"]], "strings, documentation": [[438, "index-2"], [438, "index-5"]], "style": [[438, "index-9"]], "--check-hash-based-pycs": [[452, "cmdoption-check-hash-based-pycs"]], "--help-all": [[452, "cmdoption-help-all"]], "--help-env": [[452, "cmdoption-help-env"]], "--help-xoptions": [[452, "cmdoption-help-xoptions"]], "-?": [[452, "cmdoption-0"]], "-oo": [[452, "cmdoption-OO"]], "pythondumprefsfile=filename": [[452, "envvar-PYTHONDUMPREFSFILE-FILENAME"]], "command line option": [[452, "cmdoption-0"], [452, "cmdoption-B"], [452, "cmdoption-E"], [452, "cmdoption-I"], [452, "cmdoption-J"], [452, "cmdoption-O"], [452, "cmdoption-OO"], [452, "cmdoption-P"], [452, "cmdoption-R"], [452, "cmdoption-S"], [452, "cmdoption-V"], [452, "cmdoption-W"], [452, "cmdoption-X"], [452, "cmdoption-b"], [452, "cmdoption-c"], [452, "cmdoption-check-hash-based-pycs"], [452, "cmdoption-d"], [452, "cmdoption-h"], [452, "cmdoption-help"], [452, "cmdoption-help-all"], [452, "cmdoption-help-env"], [452, "cmdoption-help-xoptions"], [452, "cmdoption-i"], [452, "cmdoption-m"], [452, "cmdoption-q"], [452, "cmdoption-s"], [452, "cmdoption-u"], [452, "cmdoption-v"], [452, "cmdoption-version"], [452, "cmdoption-x"], [453, "cmdoption-0"], [453, "cmdoption-1"], [453, "cmdoption-arg-CONFIG_SITE"], [453, "cmdoption-build"], [453, "cmdoption-disable-ipv6"], [453, "cmdoption-disable-test-modules"], [453, "cmdoption-enable-big-digits"], [453, "cmdoption-enable-bolt"], [453, "cmdoption-enable-framework"], [453, "cmdoption-enable-loadable-sqlite-extensions"], [453, "cmdoption-enable-optimizations"], [453, "cmdoption-enable-profiling"], [453, "cmdoption-enable-pystats"], [453, "cmdoption-enable-shared"], [453, "cmdoption-enable-universalsdk"], [453, "cmdoption-enable-wasm-dynamic-linking"], [453, "cmdoption-enable-wasm-pthreads"], [453, "cmdoption-exec-prefix"], [453, "cmdoption-host"], [453, "cmdoption-prefix"], [453, "cmdoption-with-address-sanitizer"], [453, "cmdoption-with-assertions"], [453, "cmdoption-with-build-python"], [453, "cmdoption-with-builtin-hashlib-hashes"], [453, "cmdoption-with-computed-gotos"], [453, "cmdoption-with-dbmliborder"], [453, "cmdoption-with-dtrace"], [453, "cmdoption-with-emscripten-target"], [453, "cmdoption-with-ensurepip"], [453, "cmdoption-with-framework-name"], [453, "cmdoption-with-hash-algorithm"], [453, "cmdoption-with-libc"], [453, "cmdoption-with-libm"], [453, "cmdoption-with-libs"], [453, "cmdoption-with-lto"], [453, "cmdoption-with-memory-sanitizer"], [453, "cmdoption-with-openssl"], [453, "cmdoption-with-openssl-rpath"], [453, "cmdoption-with-pkg-config"], [453, "cmdoption-with-platlibdir"], [453, "cmdoption-with-pydebug"], [453, "cmdoption-with-readline"], [453, "cmdoption-with-ssl-default-suites"], [453, "cmdoption-with-strict-overflow"], [453, "cmdoption-with-suffix"], [453, "cmdoption-with-system-expat"], [453, "cmdoption-with-system-libmpdec"], [453, "cmdoption-with-trace-refs"], [453, "cmdoption-with-tzpath"], [453, "cmdoption-with-undefined-behavior-sanitizer"], [453, "cmdoption-with-universal-archs"], [453, "cmdoption-with-valgrind"], [453, "cmdoption-with-wheel-pkg-dir"], [453, "cmdoption-without-c-locale-coercion"], [453, "cmdoption-without-decimal-contextvar"], [453, "cmdoption-without-doc-strings"], [453, "cmdoption-without-freelists"], [453, "cmdoption-without-pymalloc"], [453, "cmdoption-without-readline"], [453, "cmdoption-without-static-libpython"]], "--build": [[453, "cmdoption-build"]], "--disable-ipv6": [[453, "cmdoption-disable-ipv6"]], "--disable-test-modules": [[453, "cmdoption-disable-test-modules"]], "--enable-big-digits": [[453, "cmdoption-enable-big-digits"]], "--enable-bolt": [[453, "cmdoption-enable-bolt"]], "--enable-framework": [[453, "cmdoption-1"], [453, "cmdoption-enable-framework"]], "--enable-loadable-sqlite-extensions": [[453, "cmdoption-enable-loadable-sqlite-extensions"]], "--enable-optimizations": [[453, "cmdoption-enable-optimizations"]], "--enable-profiling": [[453, "cmdoption-enable-profiling"]], "--enable-pystats": [[453, "cmdoption-enable-pystats"]], "--enable-shared": [[453, "cmdoption-enable-shared"]], "--enable-universalsdk": [[453, "cmdoption-0"], [453, "cmdoption-enable-universalsdk"]], "--enable-wasm-dynamic-linking": [[453, "cmdoption-enable-wasm-dynamic-linking"]], "--enable-wasm-pthreads": [[453, "cmdoption-enable-wasm-pthreads"]], "--exec-prefix": [[453, "cmdoption-exec-prefix"]], "--host": [[453, "cmdoption-host"]], "--prefix": [[453, "cmdoption-prefix"]], "--with-address-sanitizer": [[453, "cmdoption-with-address-sanitizer"]], "--with-assertions": [[453, "cmdoption-with-assertions"]], "--with-build-python": [[453, "cmdoption-with-build-python"]], "--with-builtin-hashlib-hashes": [[453, "cmdoption-with-builtin-hashlib-hashes"]], "--with-computed-gotos": [[453, "cmdoption-with-computed-gotos"]], "--with-dbmliborder": [[453, "cmdoption-with-dbmliborder"]], "--with-dtrace": [[453, "cmdoption-with-dtrace"]], "--with-emscripten-target": [[453, "cmdoption-with-emscripten-target"]], "--with-ensurepip": [[453, "cmdoption-with-ensurepip"]], "--with-framework-name": [[453, "cmdoption-with-framework-name"]], "--with-hash-algorithm": [[453, "cmdoption-with-hash-algorithm"]], "--with-libc": [[453, "cmdoption-with-libc"]], "--with-libm": [[453, "cmdoption-with-libm"]], "--with-libs": [[453, "cmdoption-with-libs"]], "--with-lto": [[453, "cmdoption-with-lto"]], "--with-memory-sanitizer": [[453, "cmdoption-with-memory-sanitizer"]], "--with-openssl": [[453, "cmdoption-with-openssl"]], "--with-openssl-rpath": [[453, "cmdoption-with-openssl-rpath"]], "--with-pkg-config": [[453, "cmdoption-with-pkg-config"]], "--with-platlibdir": [[453, "cmdoption-with-platlibdir"]], "--with-pydebug": [[453, "cmdoption-with-pydebug"]], "--with-readline": [[453, "cmdoption-with-readline"]], "--with-ssl-default-suites": [[453, "cmdoption-with-ssl-default-suites"]], "--with-strict-overflow": [[453, "cmdoption-with-strict-overflow"]], "--with-suffix": [[453, "cmdoption-with-suffix"]], "--with-system-expat": [[453, "cmdoption-with-system-expat"]], "--with-system-libmpdec": [[453, "cmdoption-with-system-libmpdec"]], "--with-trace-refs": [[453, "cmdoption-with-trace-refs"]], "--with-tzpath": [[453, "cmdoption-with-tzpath"]], "--with-undefined-behavior-sanitizer": [[453, "cmdoption-with-undefined-behavior-sanitizer"]], "--with-universal-archs": [[453, "cmdoption-with-universal-archs"]], "--with-valgrind": [[453, "cmdoption-with-valgrind"]], "--with-wheel-pkg-dir": [[453, "cmdoption-with-wheel-pkg-dir"]], "--without-c-locale-coercion": [[453, "cmdoption-without-c-locale-coercion"]], "--without-decimal-contextvar": [[453, "cmdoption-without-decimal-contextvar"]], "--without-doc-strings": [[453, "cmdoption-without-doc-strings"]], "--without-freelists": [[453, "cmdoption-without-freelists"]], "--without-pymalloc": [[453, "cmdoption-without-pymalloc"]], "--without-readline": [[453, "cmdoption-without-readline"]], "--without-static-libpython": [[453, "cmdoption-without-static-libpython"]], "basecflags": [[453, "envvar-BASECFLAGS"]], "basecppflags": [[453, "envvar-BASECPPFLAGS"]], "bldshared": [[453, "envvar-BLDSHARED"]], "cc": [[453, "envvar-CC"], [462, "index-24"]], "ccshared": [[453, "envvar-CCSHARED"]], "cflags": [[453, "envvar-CFLAGS"], [453, "index-13"], [453, "index-14"], [453, "index-15"], [453, "index-16"], [453, "index-19"], [462, "index-25"]], "cflagsforshared": [[453, "envvar-CFLAGSFORSHARED"]], "cflags_aliasing": [[453, "envvar-CFLAGS_ALIASING"]], "cflags_nodist": [[453, "envvar-CFLAGS_NODIST"], [453, "index-12"], [453, "index-17"], [453, "index-22"]], "compileall_opts": [[453, "envvar-COMPILEALL_OPTS"]], "configure_cflags": [[453, "envvar-CONFIGURE_CFLAGS"]], "configure_cflags_nodist": [[453, "envvar-CONFIGURE_CFLAGS_NODIST"]], "configure_cppflags": [[453, "envvar-CONFIGURE_CPPFLAGS"]], "configure_ldflags": [[453, "envvar-CONFIGURE_LDFLAGS"]], "configure_ldflags_nodist": [[453, "envvar-CONFIGURE_LDFLAGS_NODIST"]], "config_site": [[453, "cmdoption-arg-CONFIG_SITE"]], "cppflags": [[453, "envvar-CPPFLAGS"], [453, "index-10"], [453, "index-27"], [453, "index-9"], [462, "index-27"]], "cxx": [[453, "envvar-CXX"]], "extra_cflags": [[453, "envvar-EXTRA_CFLAGS"]], "ldflags": [[453, "envvar-LDFLAGS"], [453, "index-11"], [453, "index-18"], [453, "index-20"], [453, "index-23"], [453, "index-24"], [453, "index-25"], [453, "index-28"], [462, "index-26"]], "ldflags_nodist": [[453, "envvar-LDFLAGS_NODIST"], [453, "index-21"], [453, "index-26"]], "ldshared": [[453, "envvar-LDSHARED"]], "libs": [[453, "envvar-LIBS"]], "linkcc": [[453, "envvar-LINKCC"]], "opt": [[453, "envvar-OPT"], [453, "index-8"]], "pep 11": [[453, "index-1"], [458, "index-0"], [458, "index-38"], [467, "index-19"], [470, "index-33"], [475, "index-48"], [477, "index-5"]], "profile_task": [[453, "envvar-PROFILE_TASK"], [453, "index-4"]], "purify": [[453, "envvar-PURIFY"]], "py_builtin_module_cflags": [[453, "envvar-PY_BUILTIN_MODULE_CFLAGS"]], "py_cflags": [[453, "envvar-PY_CFLAGS"]], "py_cflags_nodist": [[453, "envvar-PY_CFLAGS_NODIST"]], "py_core_cflags": [[453, "envvar-PY_CORE_CFLAGS"]], "py_core_ldflags": [[453, "envvar-PY_CORE_LDFLAGS"]], "py_cppflags": [[453, "envvar-PY_CPPFLAGS"]], "py_ldflags": [[453, "envvar-PY_LDFLAGS"]], "py_ldflags_nodist": [[453, "envvar-PY_LDFLAGS_NODIST"]], "py_stdmodule_cflags": [[453, "envvar-PY_STDMODULE_CFLAGS"]], "%appdata%": [[458, "index-8"]], "pathext": [[458, "index-4"], [458, "index-6"], [474, "index-50"]], "pep 397": [[458, "index-19"], [473, "index-9"], [475, "index-22"]], "pep 514": [[458, "index-21"], [470, "index-10"]], "pylauncher_allow_install": [[458, "index-29"]], "pylauncher_always_install": [[458, "index-30"]], "pylauncher_debug": [[458, "index-27"]], "pylauncher_dryrun": [[458, "index-28"], [458, "index-31"]], "pylauncher_no_search_path": [[458, "index-24"]], "py_python": [[458, "index-26"]], "pep 100": [[459, "index-3"]], "pep 201": [[459, "index-2"]], "pep 207": [[460, "index-4"], [460, "index-5"]], "pep 208": [[460, "index-13"]], "pep 217": [[460, "index-12"]], "pep 229": [[460, "index-8"]], "pep 230": [[460, "index-7"]], "pep 232": [[460, "index-10"]], "pep 241": [[460, "index-14"], [460, "index-15"], [460, "index-16"]], "pep 243": [[460, "index-17"]], "pep 234": [[461, "index-7"]], "pep 253": [[461, "index-0"], [461, "index-1"], [461, "index-3"], [461, "index-5"], [461, "index-6"]], "pep 261": [[461, "index-14"], [461, "index-15"]], "pep 264": [[461, "index-22"]], "rfc 2487": [[461, "index-18"]], "pep 218": [[462, "index-0"], [463, "index-0"], [463, "index-13"]], "pep 277": [[462, "index-7"]], "pep 279": [[462, "index-10"]], "pep 285": [[462, "index-13"], [462, "index-14"]], "pep 293": [[462, "index-15"]], "pep 301": [[462, "index-16"]], "what's new": [[462, "index-8"], [463, "index-7"], [464, "index-20"], [465, "index-13"]], "pep 322": [[463, "index-14"], [463, "index-6"]], "pep 327": [[463, "index-9"]], "pep 331": [[463, "index-11"]], "pep 288": [[464, "index-12"]], "pep 309": [[464, "index-3"]], "pep 314": [[464, "index-4"]], "pep 325": [[464, "index-13"]], "pep 333": [[464, "index-26"], [464, "index-27"]], "pep 339": [[464, "index-30"]], "pep 341": [[464, "index-8"]], "pep 347": [[464, "index-28"]], "pep 352": [[464, "index-15"], [465, "index-25"], [467, "index-25"]], "pep 356": [[464, "index-0"]], "pep 357": [[464, "index-18"]], "appdata": [[465, "index-5"]], "pep 3000": [[465, "index-1"]], "pep 3100": [[465, "index-2"]], "pep 3110": [[465, "index-11"], [467, "index-13"], [467, "index-27"]], "pep 3127": [[465, "index-17"]], "pep 361": [[465, "index-0"]], "pep 371": [[465, "index-8"]], "rfc 2033": [[465, "index-22"]], "rfc 3207": [[465, "index-23"]], "ldcxxshared": [[466, "index-12"]], "pep 3106": [[466, "index-6"]], "pep 3137": [[466, "index-7"]], "pep 372": [[466, "index-2"], [468, "index-0"]], "pep 373": [[466, "index-0"]], "pep 389": [[466, "index-4"], [472, "index-2"]], "pep 391": [[466, "index-5"], [472, "index-3"]], "pep 466": [[466, "index-17"], [466, "index-18"], [466, "index-19"], [466, "index-20"]], "pep 476": [[466, "index-25"]], "pep 477": [[466, "index-21"]], "pep 493": [[466, "index-26"]], "pythonshowalloccount": [[466, "index-15"]], "pythonshowrefcount": [[466, "index-14"]], "user_base": [[466, "index-9"]], "pep 274": [[467, "index-10"]], "pep 3102": [[467, "index-7"]], "pep 3108": [[467, "index-17"], [467, "index-20"], [467, "index-22"]], "pep 3109": [[467, "index-11"], [467, "index-26"]], "pep 3111": [[467, "index-32"]], "pep 3113": [[467, "index-15"]], "pep 3114": [[467, "index-30"]], "pep 3123": [[467, "index-35"]], "pep 3138": [[467, "index-3"]], "pep 4": [[467, "index-18"]], "pep 384": [[469, "index-38"], [472, "index-1"]], "pep 618": [[469, "index-26"], [469, "index-3"]], "pep 624": [[469, "index-12"], [470, "index-3"], [470, "index-39"]], "pep 632": [[469, "index-10"], [469, "index-28"], [471, "index-2"], [471, "index-33"]], "pep 635": [[469, "index-1"], [469, "index-16"]], "pep 652": [[469, "index-35"]], "pep 11#tier-3": [[470, "index-34"]], "pep 484#annotating-instance-and-class-methods": [[470, "index-16"]], "pep 624#alternative-apis": [[470, "index-40"]], "pep 654": [[470, "index-30"], [470, "index-7"], [470, "index-8"]], "pep 657": [[470, "index-27"], [470, "index-5"]], "pep 659": [[470, "index-28"], [470, "index-29"]], "pep 670": [[470, "index-35"], [470, "index-4"]], "pep 678": [[470, "index-9"], [471, "index-21"]], "pep 680": [[470, "index-0"], [470, "index-24"]], "pep 669": [[471, "index-11"]], "pep 683": [[471, "index-43"]], "pep 684": [[471, "index-44"], [471, "index-9"]], "pep 693": [[471, "index-0"]], "pep 697": [[471, "index-40"], [471, "index-42"]], "pep 699": [[471, "index-45"], [471, "index-46"]], "pep 701": [[471, "index-25"], [471, "index-27"], [471, "index-37"], [471, "index-38"], [471, "index-39"], [471, "index-6"], [471, "index-7"]], "pep 709": [[471, "index-13"], [471, "index-14"], [471, "index-28"]], "pep 385": [[472, "index-14"]], "pep 392": [[472, "index-0"]], "rfc 2818": [[472, "index-12"]], "pep 3144": [[473, "index-25"]], "pep 398": [[473, "index-0"]], "pep 409": [[473, "index-13"]], "pep 418": [[473, "index-28"]], "rfc 1870": [[473, "index-27"]], "yield from (in what's new)": [[473, "index-11"]], "pep 247": [[474, "index-37"]], "pep 3156": [[474, "index-25"], [474, "index-26"], [474, "index-31"], [474, "index-4"], [474, "index-8"]], "pep 424": [[474, "index-24"], [474, "index-38"]], "pep 429": [[474, "index-0"]], "pep 435": [[474, "index-28"], [474, "index-29"], [474, "index-6"]], "pep 436": [[474, "index-18"], [474, "index-48"], [474, "index-49"]], "pep 445": [[474, "index-17"], [474, "index-43"], [474, "index-44"], [474, "index-51"]], "pep 446": [[474, "index-14"], [474, "index-2"], [474, "index-21"], [474, "index-22"]], "pep 450": [[474, "index-32"], [474, "index-33"], [474, "index-9"]], "pep 454": [[474, "index-10"], [474, "index-34"], [474, "index-35"]], "pep 456": [[474, "index-13"], [474, "index-47"]], "pep 441": [[475, "index-29"], [475, "index-30"]], "pep 465": [[475, "index-3"], [475, "index-4"], [475, "index-46"]], "pep 471": [[475, "index-13"], [475, "index-14"]], "pep 478": [[475, "index-0"]], "pep 486": [[475, "index-21"], [475, "index-23"]], "rfc 6152": [[475, "index-37"]], "pep 487": [[476, "index-13"], [476, "index-14"], [476, "index-15"], [476, "index-37"]], "pep 494": [[476, "index-0"]], "pep 511": [[476, "index-36"]], "pep 520": [[476, "index-23"]], "pep 628": [[476, "index-29"], [476, "index-30"]], "pep 545": [[477, "index-24"], [477, "index-25"]], "pep 553": [[477, "index-13"]], "pep 564": [[477, "index-17"], [477, "index-18"], [477, "index-32"]], "pep 573": [[479, "index-23"], [479, "index-6"]], "pep 596": [[479, "index-0"]], "pep 616": [[479, "index-12"], [479, "index-4"]]}})